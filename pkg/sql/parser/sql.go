// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:877
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13657

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1591,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 412,
	-2, 0,
	-1, 74,
	242, 244,
	517, 244,
	-2, 0,
	-1, 88,
	231, 1327,
	244, 1327,
	260, 408,
	391, 408,
	402, 1086,
	441, 408,
	454, 1086,
	501, 1086,
	528, 408,
	554, 1086,
	-2, 0,
	-1, 94,
	133, 1591,
	237, 1591,
	539, 1591,
	540, 1591,
	-2, 0,
	-1, 112,
	151, 1562,
	170, 1562,
	183, 1562,
	240, 1562,
	273, 1562,
	342, 1562,
	352, 1562,
	534, 1562,
	-2, 1533,
	-1, 153,
	159, 925,
	259, 925,
	394, 886,
	459, 886,
	500, 886,
	520, 925,
	522, 886,
	-2, 0,
	-1, 157,
	4, 1593,
	21, 1593,
	22, 1593,
	23, 1593,
	24, 1593,
	25, 1593,
	26, 1593,
	27, 1593,
	29, 1593,
	30, 1593,
	36, 1593,
	41, 1593,
	42, 1593,
	44, 1593,
	45, 1593,
	46, 1593,
	47, 1593,
	48, 1593,
	49, 1593,
	50, 1593,
	51, 1593,
	53, 1593,
	54, 1593,
	55, 1593,
	56, 1593,
	58, 1593,
	59, 1593,
	60, 1593,
	61, 1593,
	62, 1593,
	63, 1593,
	64, 1593,
	68, 1593,
	69, 1593,
	70, 1593,
	71, 1593,
	73, 1593,
	74, 1593,
	75, 1593,
	79, 1593,
	80, 1593,
	81, 1593,
	82, 1593,
	83, 1593,
	84, 1593,
	85, 1593,
	88, 1593,
	89, 1593,
	90, 1593,
	91, 1593,
	92, 1593,
	94, 1593,
	96, 1593,
	97, 1593,
	98, 1593,
	99, 1593,
	100, 1593,
	101, 1593,
	103, 1593,
	104, 1593,
	105, 1593,
	107, 1593,
	108, 1593,
	109, 1593,
	117, 1593,
	118, 1593,
	119, 1593,
	120, 1593,
	121, 1593,
	123, 1593,
	124, 1593,
	125, 1593,
	126, 1593,
	128, 1593,
	129, 1593,
	130, 1593,
	132, 1593,
	133, 1593,
	134, 1593,
	136, 1593,
	137, 1593,
	138, 1593,
	141, 1593,
	142, 1593,
	143, 1593,
	145, 1593,
	146, 1593,
	148, 1593,
	149, 1593,
	150, 1593,
	152, 1593,
	153, 1593,
	154, 1593,
	155, 1593,
	156, 1593,
	157, 1593,
	158, 1593,
	159, 1593,
	160, 1593,
	161, 1593,
	162, 1593,
	163, 1593,
	164, 1593,
	165, 1593,
	166, 1593,
	167, 1593,
	169, 1593,
	175, 1593,
	176, 1593,
	177, 1593,
	178, 1593,
	182, 1593,
	184, 1593,
	185, 1593,
	186, 1593,
	190, 1593,
	191, 1593,
	192, 1593,
	193, 1593,
	194, 1593,
	195, 1593,
	196, 1593,
	197, 1593,
	198, 1593,
	199, 1593,
	200, 1593,
	201, 1593,
	202, 1593,
	203, 1593,
	205, 1593,
	206, 1593,
	208, 1593,
	209, 1593,
	211, 1593,
	212, 1593,
	213, 1593,
	214, 1593,
	215, 1593,
	216, 1593,
	217, 1593,
	218, 1593,
	219, 1593,
	221, 1593,
	222, 1593,
	224, 1593,
	225, 1593,
	226, 1593,
	227, 1593,
	231, 1593,
	232, 1593,
	233, 1593,
	234, 1593,
	237, 1593,
	238, 1593,
	239, 1593,
	241, 1593,
	243, 1593,
	244, 1593,
	246, 1593,
	248, 1593,
	249, 1593,
	250, 1593,
	252, 1593,
	256, 1593,
	257, 1593,
	258, 1593,
	259, 1593,
	260, 1593,
	261, 1593,
	263, 1593,
	264, 1593,
	265, 1593,
	267, 1593,
	268, 1593,
	270, 1593,
	271, 1593,
	274, 1593,
	275, 1593,
	276, 1593,
	277, 1593,
	278, 1593,
	279, 1593,
	280, 1593,
	283, 1593,
	284, 1593,
	285, 1593,
	286, 1593,
	288, 1593,
	289, 1593,
	290, 1593,
	291, 1593,
	292, 1593,
	293, 1593,
	294, 1593,
	295, 1593,
	296, 1593,
	297, 1593,
	298, 1593,
	299, 1593,
	300, 1593,
	301, 1593,
	302, 1593,
	303, 1593,
	304, 1593,
	305, 1593,
	306, 1593,
	307, 1593,
	308, 1593,
	309, 1593,
	311, 1593,
	313, 1593,
	314, 1593,
	315, 1593,
	316, 1593,
	317, 1593,
	318, 1593,
	319, 1593,
	320, 1593,
	321, 1593,
	322, 1593,
	323, 1593,
	324, 1593,
	325, 1593,
	326, 1593,
	327, 1593,
	329, 1593,
	330, 1593,
	332, 1593,
	334, 1593,
	335, 1593,
	337, 1593,
	338, 1593,
	339, 1593,
	340, 1593,
	341, 1593,
	344, 1593,
	347, 1593,
	348, 1593,
	349, 1593,
	350, 1593,
	353, 1593,
	354, 1593,
	355, 1593,
	357, 1593,
	359, 1593,
	360, 1593,
	361, 1593,
	362, 1593,
	363, 1593,
	364, 1593,
	365, 1593,
	366, 1593,
	367, 1593,
	368, 1593,
	369, 1593,
	370, 1593,
	371, 1593,
	373, 1593,
	374, 1593,
	375, 1593,
	376, 1593,
	377, 1593,
	378, 1593,
	379, 1593,
	380, 1593,
	381, 1593,
	382, 1593,
	383, 1593,
	384, 1593,
	385, 1593,
	386, 1593,
	387, 1593,
	389, 1593,
	390, 1593,
	392, 1593,
	393, 1593,
	394, 1593,
	395, 1593,
	396, 1593,
	397, 1593,
	398, 1593,
	399, 1593,
	400, 1593,
	401, 1593,
	402, 1593,
	403, 1593,
	404, 1593,
	406, 1593,
	408, 1593,
	409, 1593,
	410, 1593,
	416, 1593,
	418, 1593,
	419, 1593,
	420, 1593,
	421, 1593,
	422, 1593,
	423, 1593,
	424, 1593,
	425, 1593,
	426, 1593,
	427, 1593,
	429, 1593,
	430, 1593,
	431, 1593,
	433, 1593,
	434, 1593,
	435, 1593,
	436, 1593,
	437, 1593,
	438, 1593,
	439, 1593,
	441, 1593,
	442, 1593,
	443, 1593,
	444, 1593,
	445, 1593,
	446, 1593,
	447, 1593,
	448, 1593,
	449, 1593,
	450, 1593,
	451, 1593,
	452, 1593,
	454, 1593,
	455, 1593,
	456, 1593,
	457, 1593,
	458, 1593,
	459, 1593,
	461, 1593,
	462, 1593,
	463, 1593,
	464, 1593,
	465, 1593,
	466, 1593,
	468, 1593,
	469, 1593,
	470, 1593,
	471, 1593,
	472, 1593,
	473, 1593,
	474, 1593,
	475, 1593,
	477, 1593,
	479, 1593,
	480, 1593,
	481, 1593,
	482, 1593,
	483, 1593,
	484, 1593,
	485, 1593,
	486, 1593,
	487, 1593,
	488, 1593,
	489, 1593,
	490, 1593,
	491, 1593,
	492, 1593,
	493, 1593,
	494, 1593,
	496, 1593,
	497, 1593,
	499, 1593,
	500, 1593,
	502, 1593,
	503, 1593,
	504, 1593,
	505, 1593,
	506, 1593,
	507, 1593,
	508, 1593,
	509, 1593,
	510, 1593,
	512, 1593,
	513, 1593,
	514, 1593,
	515, 1593,
	516, 1593,
	518, 1593,
	520, 1593,
	521, 1593,
	522, 1593,
	523, 1593,
	524, 1593,
	525, 1593,
	527, 1593,
	528, 1593,
	529, 1593,
	530, 1593,
	532, 1593,
	533, 1593,
	536, 1593,
	537, 1593,
	538, 1593,
	539, 1593,
	540, 1593,
	541, 1593,
	542, 1593,
	544, 1593,
	547, 1593,
	548, 1593,
	549, 1593,
	550, 1593,
	551, 1593,
	552, 1593,
	554, 1593,
	555, 1593,
	556, 1593,
	557, 1593,
	558, 1593,
	559, 1593,
	564, 1593,
	565, 1593,
	566, 1593,
	567, 1593,
	568, 1593,
	569, 1593,
	-2, 0,
	-1, 158,
	1, 1444,
	131, 1444,
	248, 1444,
	331, 1444,
	389, 1444,
	398, 1444,
	573, 1444,
	602, 1444,
	-2, 0,
	-1, 160,
	1, 1444,
	602, 1444,
	-2, 0,
	-1, 161,
	1, 1444,
	602, 1444,
	-2, 0,
	-1, 162,
	1, 1444,
	517, 1444,
	602, 1444,
	-2, 0,
	-1, 191,
	151, 1561,
	170, 1561,
	183, 1561,
	240, 1561,
	273, 1561,
	342, 1561,
	352, 1561,
	534, 1561,
	-2, 1536,
	-1, 239,
	4, 1600,
	5, 1600,
	6, 1600,
	7, 1600,
	8, 1600,
	9, 1600,
	10, 1600,
	21, 1600,
	22, 1600,
	23, 1600,
	24, 1600,
	25, 1600,
	26, 1600,
	27, 1600,
	29, 1600,
	30, 1600,
	36, 1600,
	37, 1600,
	41, 1600,
	42, 1600,
	43, 1600,
	44, 1600,
	45, 1600,
	46, 1600,
	47, 1600,
	48, 1600,
	49, 1600,
	50, 1600,
	51, 1600,
	53, 1600,
	54, 1600,
	55, 1600,
	56, 1600,
	58, 1600,
	59, 1600,
	60, 1600,
	61, 1600,
	62, 1600,
	63, 1600,
	64, 1600,
	65, 1600,
	66, 1600,
	67, 1600,
	68, 1600,
	69, 1600,
	70, 1600,
	71, 1600,
	73, 1600,
	74, 1600,
	75, 1600,
	77, 1600,
	79, 1600,
	80, 1600,
	81, 1600,
	82, 1600,
	83, 1600,
	84, 1600,
	85, 1600,
	88, 1600,
	89, 1600,
	90, 1600,
	91, 1600,
	92, 1600,
	94, 1600,
	96, 1600,
	97, 1600,
	98, 1600,
	99, 1600,
	100, 1600,
	101, 1600,
	103, 1600,
	104, 1600,
	105, 1600,
	106, 1600,
	107, 1600,
	108, 1600,
	109, 1600,
	110, 1600,
	111, 1600,
	112, 1600,
	113, 1600,
	114, 1600,
	115, 1600,
	116, 1600,
	117, 1600,
	118, 1600,
	119, 1600,
	120, 1600,
	121, 1600,
	122, 1600,
	123, 1600,
	124, 1600,
	125, 1600,
	126, 1600,
	127, 1600,
	128, 1600,
	129, 1600,
	130, 1600,
	132, 1600,
	133, 1600,
	134, 1600,
	136, 1600,
	137, 1600,
	138, 1600,
	141, 1600,
	142, 1600,
	143, 1600,
	145, 1600,
	146, 1600,
	148, 1600,
	149, 1600,
	150, 1600,
	152, 1600,
	153, 1600,
	154, 1600,
	155, 1600,
	156, 1600,
	157, 1600,
	158, 1600,
	159, 1600,
	160, 1600,
	161, 1600,
	162, 1600,
	163, 1600,
	164, 1600,
	165, 1600,
	166, 1600,
	167, 1600,
	168, 1600,
	169, 1600,
	175, 1600,
	176, 1600,
	177, 1600,
	178, 1600,
	182, 1600,
	184, 1600,
	185, 1600,
	186, 1600,
	189, 1600,
	190, 1600,
	191, 1600,
	192, 1600,
	193, 1600,
	194, 1600,
	195, 1600,
	196, 1600,
	197, 1600,
	198, 1600,
	199, 1600,
	200, 1600,
	201, 1600,
	202, 1600,
	203, 1600,
	205, 1600,
	206, 1600,
	208, 1600,
	209, 1600,
	211, 1600,
	212, 1600,
	213, 1600,
	214, 1600,
	215, 1600,
	216, 1600,
	217, 1600,
	218, 1600,
	219, 1600,
	220, 1600,
	221, 1600,
	222, 1600,
	224, 1600,
	225, 1600,
	226, 1600,
	227, 1600,
	231, 1600,
	232, 1600,
	233, 1600,
	234, 1600,
	236, 1600,
	237, 1600,
	238, 1600,
	239, 1600,
	241, 1600,
	243, 1600,
	244, 1600,
	245, 1600,
	246, 1600,
	247, 1600,
	248, 1600,
	249, 1600,
	250, 1600,
	251, 1600,
	252, 1600,
	256, 1600,
	257, 1600,
	258, 1600,
	259, 1600,
	260, 1600,
	261, 1600,
	263, 1600,
	264, 1600,
	265, 1600,
	267, 1600,
	268, 1600,
	269, 1600,
	270, 1600,
	271, 1600,
	272, 1600,
	274, 1600,
	275, 1600,
	276, 1600,
	277, 1600,
	278, 1600,
	279, 1600,
	280, 1600,
	281, 1600,
	282, 1600,
	283, 1600,
	284, 1600,
	285, 1600,
	286, 1600,
	288, 1600,
	289, 1600,
	290, 1600,
	291, 1600,
	292, 1600,
	293, 1600,
	294, 1600,
	295, 1600,
	296, 1600,
	297, 1600,
	298, 1600,
	299, 1600,
	300, 1600,
	301, 1600,
	302, 1600,
	303, 1600,
	304, 1600,
	305, 1600,
	306, 1600,
	307, 1600,
	308, 1600,
	309, 1600,
	311, 1600,
	312, 1600,
	313, 1600,
	314, 1600,
	315, 1600,
	316, 1600,
	317, 1600,
	318, 1600,
	319, 1600,
	320, 1600,
	321, 1600,
	322, 1600,
	323, 1600,
	324, 1600,
	325, 1600,
	326, 1600,
	327, 1600,
	328, 1600,
	329, 1600,
	330, 1600,
	331, 1600,
	332, 1600,
	333, 1600,
	334, 1600,
	335, 1600,
	336, 1600,
	337, 1600,
	338, 1600,
	339, 1600,
	340, 1600,
	341, 1600,
	344, 1600,
	348, 1600,
	349, 1600,
	350, 1600,
	353, 1600,
	354, 1600,
	355, 1600,
	356, 1600,
	357, 1600,
	358, 1600,
	359, 1600,
	360, 1600,
	361, 1600,
	362, 1600,
	363, 1600,
	364, 1600,
	365, 1600,
	366, 1600,
	367, 1600,
	368, 1600,
	369, 1600,
	370, 1600,
	371, 1600,
	373, 1600,
	374, 1600,
	375, 1600,
	376, 1600,
	377, 1600,
	378, 1600,
	379, 1600,
	380, 1600,
	381, 1600,
	382, 1600,
	383, 1600,
	384, 1600,
	385, 1600,
	386, 1600,
	387, 1600,
	389, 1600,
	390, 1600,
	392, 1600,
	393, 1600,
	394, 1600,
	395, 1600,
	396, 1600,
	397, 1600,
	398, 1600,
	399, 1600,
	400, 1600,
	401, 1600,
	402, 1600,
	403, 1600,
	404, 1600,
	406, 1600,
	408, 1600,
	409, 1600,
	410, 1600,
	416, 1600,
	418, 1600,
	419, 1600,
	420, 1600,
	421, 1600,
	422, 1600,
	423, 1600,
	424, 1600,
	425, 1600,
	426, 1600,
	427, 1600,
	429, 1600,
	430, 1600,
	431, 1600,
	432, 1600,
	433, 1600,
	434, 1600,
	435, 1600,
	436, 1600,
	437, 1600,
	438, 1600,
	439, 1600,
	441, 1600,
	442, 1600,
	443, 1600,
	444, 1600,
	445, 1600,
	446, 1600,
	447, 1600,
	448, 1600,
	449, 1600,
	450, 1600,
	451, 1600,
	452, 1600,
	454, 1600,
	455, 1600,
	456, 1600,
	457, 1600,
	458, 1600,
	459, 1600,
	460, 1600,
	461, 1600,
	462, 1600,
	463, 1600,
	464, 1600,
	465, 1600,
	466, 1600,
	467, 1600,
	468, 1600,
	469, 1600,
	470, 1600,
	471, 1600,
	472, 1600,
	473, 1600,
	474, 1600,
	475, 1600,
	477, 1600,
	479, 1600,
	480, 1600,
	481, 1600,
	482, 1600,
	483, 1600,
	484, 1600,
	485, 1600,
	486, 1600,
	487, 1600,
	488, 1600,
	489, 1600,
	490, 1600,
	491, 1600,
	492, 1600,
	493, 1600,
	494, 1600,
	496, 1600,
	497, 1600,
	498, 1600,
	499, 1600,
	500, 1600,
	502, 1600,
	503, 1600,
	504, 1600,
	505, 1600,
	506, 1600,
	507, 1600,
	508, 1600,
	509, 1600,
	510, 1600,
	512, 1600,
	513, 1600,
	514, 1600,
	515, 1600,
	516, 1600,
	518, 1600,
	520, 1600,
	521, 1600,
	522, 1600,
	523, 1600,
	524, 1600,
	525, 1600,
	526, 1600,
	527, 1600,
	528, 1600,
	529, 1600,
	530, 1600,
	532, 1600,
	533, 1600,
	535, 1600,
	536, 1600,
	537, 1600,
	538, 1600,
	539, 1600,
	540, 1600,
	541, 1600,
	542, 1600,
	543, 1600,
	544, 1600,
	547, 1600,
	548, 1600,
	549, 1600,
	550, 1600,
	551, 1600,
	552, 1600,
	554, 1600,
	555, 1600,
	556, 1600,
	557, 1600,
	558, 1600,
	559, 1600,
	564, 1600,
	565, 1600,
	566, 1600,
	567, 1600,
	568, 1600,
	569, 1600,
	570, 1600,
	583, 1600,
	590, 1600,
	591, 1600,
	592, 1600,
	599, 1600,
	603, 1600,
	-2, 0,
	-1, 750,
	4, 1325,
	21, 1325,
	22, 1325,
	23, 1325,
	24, 1325,
	25, 1325,
	26, 1325,
	27, 1325,
	29, 1325,
	30, 1325,
	36, 1325,
	41, 1325,
	42, 1325,
	44, 1325,
	45, 1325,
	46, 1325,
	47, 1325,
	48, 1325,
	49, 1325,
	50, 1325,
	51, 1325,
	53, 1325,
	54, 1325,
	55, 1325,
	56, 1325,
	58, 1325,
	59, 1325,
	60, 1325,
	61, 1325,
	62, 1325,
	63, 1325,
	64, 1325,
	68, 1325,
	69, 1325,
	70, 1325,
	71, 1325,
	73, 1325,
	74, 1325,
	75, 1325,
	79, 1325,
	80, 1325,
	81, 1325,
	82, 1325,
	83, 1325,
	84, 1325,
	85, 1325,
	88, 1325,
	89, 1325,
	90, 1325,
	91, 1325,
	92, 1325,
	94, 1325,
	96, 1325,
	97, 1325,
	98, 1325,
	99, 1325,
	100, 1325,
	101, 1325,
	103, 1325,
	104, 1325,
	105, 1325,
	107, 1325,
	108, 1325,
	109, 1325,
	117, 1325,
	118, 1325,
	119, 1325,
	120, 1325,
	121, 1325,
	123, 1325,
	124, 1325,
	125, 1325,
	126, 1325,
	128, 1325,
	129, 1325,
	130, 1325,
	132, 1325,
	133, 1325,
	134, 1325,
	136, 1325,
	137, 1325,
	138, 1325,
	141, 1325,
	142, 1325,
	143, 1325,
	145, 1325,
	146, 1325,
	148, 1325,
	149, 1325,
	150, 1325,
	152, 1325,
	153, 1325,
	154, 1325,
	155, 1325,
	156, 1325,
	157, 1325,
	158, 1325,
	159, 1325,
	160, 1325,
	161, 1325,
	162, 1325,
	163, 1325,
	164, 1325,
	165, 1325,
	166, 1325,
	167, 1325,
	169, 1325,
	175, 1325,
	176, 1325,
	177, 1325,
	178, 1325,
	182, 1325,
	184, 1325,
	185, 1325,
	186, 1325,
	190, 1325,
	191, 1325,
	192, 1325,
	193, 1325,
	194, 1325,
	195, 1325,
	196, 1325,
	197, 1325,
	198, 1325,
	199, 1325,
	200, 1325,
	201, 1325,
	202, 1325,
	203, 1325,
	205, 1325,
	206, 1325,
	208, 1325,
	209, 1325,
	211, 1325,
	212, 1325,
	213, 1325,
	214, 1325,
	215, 1325,
	216, 1325,
	217, 1325,
	218, 1325,
	219, 1325,
	221, 1325,
	222, 1325,
	224, 1325,
	225, 1325,
	226, 1325,
	227, 1325,
	231, 1325,
	232, 1325,
	233, 1325,
	234, 1325,
	237, 1325,
	238, 1325,
	239, 1325,
	241, 1325,
	243, 1325,
	244, 1325,
	246, 1325,
	248, 1325,
	249, 1325,
	250, 1325,
	252, 1325,
	256, 1325,
	257, 1325,
	258, 1325,
	259, 1325,
	260, 1325,
	261, 1325,
	263, 1325,
	264, 1325,
	265, 1325,
	267, 1325,
	268, 1325,
	270, 1325,
	271, 1325,
	274, 1325,
	275, 1325,
	276, 1325,
	277, 1325,
	278, 1325,
	279, 1325,
	280, 1325,
	283, 1325,
	284, 1325,
	285, 1325,
	286, 1325,
	288, 1325,
	289, 1325,
	290, 1325,
	291, 1325,
	292, 1325,
	293, 1325,
	294, 1325,
	295, 1325,
	296, 1325,
	297, 1325,
	298, 1325,
	299, 1325,
	300, 1325,
	301, 1325,
	302, 1325,
	303, 1325,
	304, 1325,
	305, 1325,
	306, 1325,
	307, 1325,
	308, 1325,
	309, 1325,
	311, 1325,
	313, 1325,
	314, 1325,
	315, 1325,
	316, 1325,
	317, 1325,
	318, 1325,
	319, 1325,
	320, 1325,
	321, 1325,
	322, 1325,
	323, 1325,
	324, 1325,
	325, 1325,
	326, 1325,
	327, 1325,
	329, 1325,
	330, 1325,
	332, 1325,
	334, 1325,
	335, 1325,
	337, 1325,
	338, 1325,
	339, 1325,
	340, 1325,
	341, 1325,
	344, 1325,
	348, 1325,
	349, 1325,
	350, 1325,
	353, 1325,
	354, 1325,
	355, 1325,
	357, 1325,
	359, 1325,
	360, 1325,
	361, 1325,
	362, 1325,
	363, 1325,
	364, 1325,
	365, 1325,
	366, 1325,
	367, 1325,
	368, 1325,
	369, 1325,
	370, 1325,
	371, 1325,
	373, 1325,
	374, 1325,
	375, 1325,
	376, 1325,
	377, 1325,
	378, 1325,
	379, 1325,
	380, 1325,
	381, 1325,
	382, 1325,
	383, 1325,
	384, 1325,
	385, 1325,
	386, 1325,
	387, 1325,
	389, 1325,
	390, 1325,
	392, 1325,
	393, 1325,
	394, 1325,
	395, 1325,
	396, 1325,
	397, 1325,
	398, 1325,
	399, 1325,
	400, 1325,
	401, 1325,
	402, 1325,
	403, 1325,
	404, 1325,
	406, 1325,
	408, 1325,
	409, 1325,
	410, 1325,
	416, 1325,
	418, 1325,
	419, 1325,
	420, 1325,
	421, 1325,
	422, 1325,
	423, 1325,
	424, 1325,
	425, 1325,
	426, 1325,
	427, 1325,
	429, 1325,
	430, 1325,
	431, 1325,
	433, 1325,
	434, 1325,
	435, 1325,
	436, 1325,
	437, 1325,
	438, 1325,
	439, 1325,
	441, 1325,
	442, 1325,
	443, 1325,
	444, 1325,
	445, 1325,
	446, 1325,
	447, 1325,
	448, 1325,
	449, 1325,
	450, 1325,
	451, 1325,
	452, 1325,
	454, 1325,
	455, 1325,
	456, 1325,
	457, 1325,
	458, 1325,
	459, 1325,
	461, 1325,
	462, 1325,
	463, 1325,
	464, 1325,
	465, 1325,
	466, 1325,
	468, 1325,
	469, 1325,
	470, 1325,
	471, 1325,
	472, 1325,
	473, 1325,
	474, 1325,
	475, 1325,
	477, 1325,
	479, 1325,
	480, 1325,
	481, 1325,
	482, 1325,
	483, 1325,
	484, 1325,
	485, 1325,
	486, 1325,
	487, 1325,
	488, 1325,
	489, 1325,
	490, 1325,
	491, 1325,
	492, 1325,
	493, 1325,
	494, 1325,
	496, 1325,
	497, 1325,
	499, 1325,
	500, 1325,
	502, 1325,
	503, 1325,
	504, 1325,
	505, 1325,
	506, 1325,
	507, 1325,
	508, 1325,
	509, 1325,
	510, 1325,
	512, 1325,
	513, 1325,
	514, 1325,
	515, 1325,
	516, 1325,
	518, 1325,
	520, 1325,
	521, 1325,
	522, 1325,
	523, 1325,
	524, 1325,
	525, 1325,
	527, 1325,
	528, 1325,
	529, 1325,
	530, 1325,
	532, 1325,
	533, 1325,
	536, 1325,
	537, 1325,
	538, 1325,
	539, 1325,
	540, 1325,
	541, 1325,
	542, 1325,
	544, 1325,
	547, 1325,
	548, 1325,
	549, 1325,
	550, 1325,
	551, 1325,
	552, 1325,
	554, 1325,
	555, 1325,
	556, 1325,
	557, 1325,
	558, 1325,
	559, 1325,
	564, 1325,
	565, 1325,
	566, 1325,
	567, 1325,
	568, 1325,
	569, 1325,
	-2, 0,
	-1, 769,
	188, 2392,
	517, 2392,
	582, 2392,
	601, 2392,
	-2, 0,
	-1, 770,
	188, 2379,
	517, 2379,
	582, 2379,
	601, 2379,
	-2, 0,
	-1, 772,
	188, 2641,
	517, 2641,
	582, 2641,
	601, 2641,
	-2, 0,
	-1, 775,
	188, 2502,
	517, 2502,
	582, 2502,
	601, 2502,
	-2, 0,
	-1, 776,
	188, 2682,
	517, 2682,
	582, 2682,
	601, 2682,
	-2, 0,
	-1, 784,
	188, 2529,
	517, 2529,
	582, 2529,
	601, 2529,
	-2, 707,
	-1, 819,
	601, 2328,
	604, 2328,
	-2, 1007,
	-1, 820,
	601, 2330,
	604, 2330,
	-2, 1008,
	-1, 821,
	601, 2329,
	604, 2329,
	-2, 1009,
	-1, 822,
	604, 2254,
	-2, 1010,
	-1, 847,
	183, 262,
	-2, 0,
	-1, 871,
	43, 2301,
	-2, 0,
	-1, 872,
	554, 1303,
	-2, 1087,
	-1, 888,
	4, 1734,
	21, 1734,
	22, 1734,
	23, 1734,
	24, 1734,
	25, 1734,
	26, 1734,
	27, 1734,
	29, 1734,
	30, 1734,
	36, 1734,
	41, 1734,
	42, 1734,
	44, 1734,
	45, 1734,
	46, 1734,
	47, 1734,
	48, 1734,
	49, 1734,
	50, 1734,
	51, 1734,
	53, 1734,
	54, 1734,
	55, 1734,
	56, 1734,
	58, 1734,
	59, 1734,
	60, 1734,
	61, 1734,
	62, 1734,
	63, 1734,
	64, 1734,
	68, 1734,
	69, 1734,
	70, 1734,
	71, 1734,
	73, 1734,
	74, 1734,
	75, 1734,
	79, 1734,
	80, 1734,
	81, 1734,
	82, 1734,
	83, 1734,
	84, 1734,
	85, 1734,
	88, 1734,
	89, 1734,
	90, 1734,
	91, 1734,
	92, 1734,
	94, 1734,
	96, 1734,
	97, 1734,
	98, 1734,
	99, 1734,
	100, 1734,
	101, 1734,
	103, 1734,
	104, 1734,
	105, 1734,
	107, 1734,
	108, 1734,
	109, 1734,
	117, 1734,
	118, 1734,
	119, 1734,
	120, 1734,
	121, 1734,
	123, 1734,
	124, 1734,
	125, 1734,
	126, 1734,
	128, 1734,
	129, 1734,
	130, 1734,
	132, 1734,
	133, 1734,
	134, 1734,
	136, 1734,
	137, 1734,
	138, 1734,
	141, 1734,
	142, 1734,
	143, 1734,
	145, 1734,
	146, 1734,
	148, 1734,
	149, 1734,
	150, 1734,
	152, 1734,
	153, 1734,
	154, 1734,
	155, 1734,
	156, 1734,
	157, 1734,
	158, 1734,
	159, 1734,
	160, 1734,
	161, 1734,
	162, 1734,
	163, 1734,
	164, 1734,
	165, 1734,
	166, 1734,
	167, 1734,
	169, 1734,
	175, 1734,
	176, 1734,
	177, 1734,
	178, 1734,
	182, 1734,
	184, 1734,
	185, 1734,
	186, 1734,
	190, 1734,
	191, 1734,
	192, 1734,
	193, 1734,
	194, 1734,
	195, 1734,
	196, 1734,
	197, 1734,
	198, 1734,
	199, 1734,
	200, 1734,
	201, 1734,
	202, 1734,
	203, 1734,
	205, 1734,
	206, 1734,
	208, 1734,
	209, 1734,
	211, 1734,
	212, 1734,
	213, 1734,
	214, 1734,
	215, 1734,
	216, 1734,
	217, 1734,
	218, 1734,
	219, 1734,
	221, 1734,
	222, 1734,
	224, 1734,
	225, 1734,
	226, 1734,
	227, 1734,
	231, 1734,
	232, 1734,
	233, 1734,
	234, 1734,
	237, 1734,
	238, 1734,
	239, 1734,
	241, 1734,
	243, 1734,
	244, 1734,
	246, 1734,
	248, 1734,
	249, 1734,
	250, 1734,
	252, 1734,
	256, 1734,
	257, 1734,
	258, 1734,
	259, 1734,
	260, 1734,
	261, 1734,
	263, 1734,
	264, 1734,
	265, 1734,
	267, 1734,
	268, 1734,
	270, 1734,
	271, 1734,
	274, 1734,
	275, 1734,
	276, 1734,
	277, 1734,
	278, 1734,
	279, 1734,
	280, 1734,
	283, 1734,
	284, 1734,
	285, 1734,
	286, 1734,
	288, 1734,
	289, 1734,
	290, 1734,
	291, 1734,
	292, 1734,
	293, 1734,
	294, 1734,
	295, 1734,
	296, 1734,
	297, 1734,
	298, 1734,
	299, 1734,
	300, 1734,
	301, 1734,
	302, 1734,
	303, 1734,
	304, 1734,
	305, 1734,
	306, 1734,
	307, 1734,
	308, 1734,
	309, 1734,
	311, 1734,
	313, 1734,
	314, 1734,
	315, 1734,
	316, 1734,
	317, 1734,
	318, 1734,
	319, 1734,
	320, 1734,
	321, 1734,
	322, 1734,
	323, 1734,
	324, 1734,
	325, 1734,
	326, 1734,
	327, 1734,
	329, 1734,
	330, 1734,
	332, 1734,
	334, 1734,
	335, 1734,
	337, 1734,
	338, 1734,
	339, 1734,
	340, 1734,
	341, 1734,
	344, 1734,
	348, 1734,
	349, 1734,
	350, 1734,
	353, 1734,
	354, 1734,
	355, 1734,
	357, 1734,
	359, 1734,
	360, 1734,
	361, 1734,
	362, 1734,
	363, 1734,
	364, 1734,
	365, 1734,
	366, 1734,
	367, 1734,
	368, 1734,
	369, 1734,
	370, 1734,
	371, 1734,
	373, 1734,
	374, 1734,
	375, 1734,
	376, 1734,
	377, 1734,
	378, 1734,
	379, 1734,
	380, 1734,
	381, 1734,
	382, 1734,
	383, 1734,
	384, 1734,
	385, 1734,
	386, 1734,
	387, 1734,
	389, 1734,
	390, 1734,
	392, 1734,
	393, 1734,
	394, 1734,
	395, 1734,
	396, 1734,
	397, 1734,
	398, 1734,
	399, 1734,
	400, 1734,
	401, 1734,
	402, 1734,
	403, 1734,
	404, 1734,
	406, 1734,
	408, 1734,
	409, 1734,
	410, 1734,
	416, 1734,
	418, 1734,
	419, 1734,
	420, 1734,
	421, 1734,
	422, 1734,
	423, 1734,
	424, 1734,
	425, 1734,
	426, 1734,
	427, 1734,
	429, 1734,
	430, 1734,
	431, 1734,
	433, 1734,
	434, 1734,
	435, 1734,
	436, 1734,
	437, 1734,
	438, 1734,
	439, 1734,
	441, 1734,
	442, 1734,
	443, 1734,
	444, 1734,
	445, 1734,
	446, 1734,
	447, 1734,
	448, 1734,
	449, 1734,
	450, 1734,
	451, 1734,
	452, 1734,
	454, 1734,
	455, 1734,
	456, 1734,
	457, 1734,
	458, 1734,
	459, 1734,
	461, 1734,
	462, 1734,
	463, 1734,
	464, 1734,
	465, 1734,
	466, 1734,
	468, 1734,
	469, 1734,
	470, 1734,
	471, 1734,
	472, 1734,
	473, 1734,
	474, 1734,
	475, 1734,
	477, 1734,
	479, 1734,
	480, 1734,
	481, 1734,
	482, 1734,
	483, 1734,
	484, 1734,
	485, 1734,
	486, 1734,
	487, 1734,
	488, 1734,
	489, 1734,
	490, 1734,
	491, 1734,
	492, 1734,
	493, 1734,
	494, 1734,
	496, 1734,
	497, 1734,
	499, 1734,
	500, 1734,
	502, 1734,
	503, 1734,
	504, 1734,
	505, 1734,
	506, 1734,
	507, 1734,
	508, 1734,
	509, 1734,
	510, 1734,
	512, 1734,
	513, 1734,
	514, 1734,
	515, 1734,
	516, 1734,
	518, 1734,
	520, 1734,
	521, 1734,
	522, 1734,
	523, 1734,
	524, 1734,
	525, 1734,
	527, 1734,
	528, 1734,
	529, 1734,
	530, 1734,
	532, 1734,
	533, 1734,
	536, 1734,
	537, 1734,
	538, 1734,
	539, 1734,
	540, 1734,
	541, 1734,
	542, 1734,
	544, 1734,
	547, 1734,
	548, 1734,
	549, 1734,
	550, 1734,
	551, 1734,
	552, 1734,
	554, 1734,
	555, 1734,
	556, 1734,
	557, 1734,
	558, 1734,
	559, 1734,
	564, 1734,
	565, 1734,
	566, 1734,
	567, 1734,
	568, 1734,
	569, 1734,
	-2, 0,
	-1, 898,
	260, 412,
	-2, 0,
	-1, 975,
	394, 887,
	459, 887,
	500, 887,
	522, 887,
	-2, 0,
	-1, 976,
	394, 886,
	459, 886,
	500, 886,
	522, 886,
	-2, 818,
	-1, 980,
	1, 939,
	598, 939,
	600, 939,
	602, 939,
	-2, 0,
	-1, 982,
	1, 861,
	598, 861,
	600, 861,
	602, 861,
	-2, 0,
	-1, 983,
	1, 865,
	598, 865,
	600, 865,
	602, 865,
	-2, 0,
	-1, 984,
	1, 1006,
	183, 1006,
	598, 1006,
	600, 1006,
	602, 1006,
	-2, 0,
	-1, 992,
	1, 892,
	598, 892,
	600, 892,
	602, 892,
	-2, 0,
	-1, 999,
	1, 939,
	598, 939,
	600, 939,
	602, 939,
	-2, 0,
	-1, 1000,
	1, 941,
	598, 941,
	600, 941,
	602, 941,
	-2, 0,
	-1, 1001,
	1, 944,
	598, 944,
	600, 944,
	602, 944,
	-2, 0,
	-1, 1007,
	1, 970,
	598, 970,
	600, 970,
	602, 970,
	-2, 0,
	-1, 1008,
	1, 972,
	598, 972,
	600, 972,
	602, 972,
	-2, 0,
	-1, 1013,
	1, 1000,
	598, 1000,
	600, 1000,
	602, 1000,
	-2, 0,
	-1, 1065,
	170, 1604,
	183, 1604,
	273, 1604,
	342, 1604,
	-2, 1540,
	-1, 1080,
	170, 1603,
	183, 1603,
	273, 1603,
	342, 1603,
	-2, 1537,
	-1, 1107,
	601, 2327,
	-2, 715,
	-1, 1136,
	5, 2319,
	599, 2317,
	-2, 2308,
	-1, 1144,
	5, 2340,
	599, 2337,
	-2, 2328,
	-1, 1145,
	5, 2341,
	599, 2338,
	-2, 2329,
	-1, 1153,
	601, 2325,
	-2, 2307,
	-1, 1154,
	599, 2766,
	-2, 2326,
	-1, 1177,
	599, 2765,
	-2, 2342,
	-1, 1178,
	5, 1809,
	-2, 2736,
	-1, 1179,
	5, 1810,
	-2, 2737,
	-1, 1180,
	5, 1811,
	-2, 2751,
	-1, 1181,
	5, 1812,
	-2, 2715,
	-1, 1182,
	5, 1813,
	-2, 2749,
	-1, 1183,
	5, 1821,
	-2, 2728,
	-1, 1184,
	5, 1808,
	-2, 2724,
	-1, 1185,
	5, 1808,
	-2, 2723,
	-1, 1186,
	5, 1808,
	-2, 2742,
	-1, 1187,
	5, 1819,
	-2, 2717,
	-1, 1188,
	5, 1824,
	-2, 2716,
	-1, 1189,
	5, 1826,
	-2, 2761,
	-1, 1192,
	5, 1848,
	-2, 2754,
	-1, 1193,
	5, 1840,
	-2, 2755,
	-1, 1194,
	5, 1848,
	-2, 2756,
	-1, 1195,
	5, 1844,
	-2, 2757,
	-1, 1196,
	5, 1794,
	-2, 2729,
	-1, 1197,
	5, 1795,
	-2, 2730,
	-1, 1198,
	5, 1796,
	-2, 2718,
	-1, 1226,
	5, 1831,
	-2, 2762,
	-1, 1227,
	5, 1832,
	-2, 2752,
	-1, 1228,
	5, 1833,
	555, 1833,
	-2, 2719,
	-1, 1229,
	5, 1834,
	555, 1834,
	-2, 2720,
	-1, 1266,
	599, 2337,
	-2, 2328,
	-1, 1267,
	599, 2338,
	-2, 2329,
	-1, 1363,
	188, 2682,
	517, 2682,
	582, 2682,
	601, 2682,
	-2, 0,
	-1, 1368,
	1, 691,
	602, 691,
	-2, 1452,
	-1, 1498,
	361, 2302,
	418, 2302,
	461, 2302,
	592, 2302,
	-2, 2292,
	-1, 1509,
	603, 2302,
	-2, 2304,
	-1, 1517,
	1, 1300,
	423, 1264,
	461, 1264,
	576, 1264,
	598, 1300,
	600, 1300,
	602, 1300,
	-2, 1589,
	-1, 1523,
	204, 1397,
	223, 1397,
	431, 1397,
	-2, 0,
	-1, 1579,
	402, 1086,
	554, 1086,
	-2, 407,
	-1, 1596,
	43, 2300,
	-2, 1052,
	-1, 1603,
	1, 1300,
	598, 1300,
	600, 1300,
	602, 1300,
	-2, 1589,
	-1, 1611,
	4, 1325,
	21, 1325,
	22, 1325,
	23, 1325,
	24, 1325,
	25, 1325,
	26, 1325,
	27, 1325,
	29, 1325,
	30, 1325,
	36, 1325,
	41, 1325,
	42, 1325,
	44, 1325,
	45, 1325,
	46, 1325,
	47, 1325,
	48, 1325,
	49, 1325,
	50, 1325,
	51, 1325,
	53, 1325,
	54, 1325,
	55, 1325,
	56, 1325,
	58, 1325,
	59, 1325,
	60, 1325,
	61, 1325,
	62, 1325,
	63, 1325,
	64, 1325,
	68, 1325,
	69, 1325,
	70, 1325,
	71, 1325,
	73, 1325,
	74, 1325,
	75, 1325,
	79, 1325,
	80, 1325,
	81, 1325,
	82, 1325,
	83, 1325,
	84, 1325,
	85, 1325,
	88, 1325,
	89, 1325,
	90, 1325,
	91, 1325,
	92, 1325,
	94, 1325,
	96, 1325,
	97, 1325,
	98, 1325,
	99, 1325,
	100, 1325,
	101, 1325,
	103, 1325,
	104, 1325,
	105, 1325,
	107, 1325,
	108, 1325,
	109, 1325,
	117, 1325,
	118, 1325,
	119, 1325,
	120, 1325,
	121, 1325,
	123, 1325,
	124, 1325,
	125, 1325,
	126, 1325,
	128, 1325,
	129, 1325,
	130, 1325,
	132, 1325,
	133, 1325,
	134, 1325,
	136, 1325,
	137, 1325,
	138, 1325,
	141, 1325,
	142, 1325,
	143, 1325,
	145, 1325,
	146, 1325,
	148, 1325,
	149, 1325,
	150, 1325,
	152, 1325,
	153, 1325,
	154, 1325,
	155, 1325,
	156, 1325,
	157, 1325,
	158, 1325,
	159, 1325,
	160, 1325,
	161, 1325,
	162, 1325,
	163, 1325,
	164, 1325,
	165, 1325,
	166, 1325,
	167, 1325,
	175, 1325,
	176, 1325,
	177, 1325,
	178, 1325,
	182, 1325,
	184, 1325,
	185, 1325,
	186, 1325,
	190, 1325,
	191, 1325,
	192, 1325,
	193, 1325,
	194, 1325,
	195, 1325,
	196, 1325,
	197, 1325,
	198, 1325,
	199, 1325,
	200, 1325,
	201, 1325,
	202, 1325,
	203, 1325,
	205, 1325,
	206, 1325,
	208, 1325,
	209, 1325,
	211, 1325,
	212, 1325,
	213, 1325,
	214, 1325,
	215, 1325,
	216, 1325,
	217, 1325,
	218, 1325,
	219, 1325,
	221, 1325,
	222, 1325,
	224, 1325,
	225, 1325,
	226, 1325,
	227, 1325,
	232, 1325,
	233, 1325,
	234, 1325,
	237, 1325,
	238, 1325,
	239, 1325,
	241, 1325,
	243, 1325,
	244, 1325,
	246, 1325,
	248, 1325,
	249, 1325,
	250, 1325,
	252, 1325,
	256, 1325,
	257, 1325,
	258, 1325,
	259, 1325,
	260, 1325,
	261, 1325,
	263, 1325,
	264, 1325,
	265, 1325,
	267, 1325,
	268, 1325,
	270, 1325,
	271, 1325,
	274, 1325,
	275, 1325,
	276, 1325,
	277, 1325,
	278, 1325,
	279, 1325,
	280, 1325,
	283, 1325,
	284, 1325,
	285, 1325,
	286, 1325,
	288, 1325,
	289, 1325,
	290, 1325,
	291, 1325,
	292, 1325,
	293, 1325,
	294, 1325,
	295, 1325,
	296, 1325,
	297, 1325,
	298, 1325,
	299, 1325,
	300, 1325,
	301, 1325,
	302, 1325,
	303, 1325,
	304, 1325,
	305, 1325,
	306, 1325,
	307, 1325,
	308, 1325,
	309, 1325,
	311, 1325,
	313, 1325,
	314, 1325,
	315, 1325,
	316, 1325,
	317, 1325,
	318, 1325,
	319, 1325,
	320, 1325,
	321, 1325,
	322, 1325,
	323, 1325,
	324, 1325,
	325, 1325,
	326, 1325,
	327, 1325,
	329, 1325,
	330, 1325,
	334, 1325,
	335, 1325,
	337, 1325,
	338, 1325,
	339, 1325,
	340, 1325,
	341, 1325,
	344, 1325,
	346, 1325,
	348, 1325,
	349, 1325,
	350, 1325,
	353, 1325,
	354, 1325,
	355, 1325,
	357, 1325,
	359, 1325,
	360, 1325,
	361, 1325,
	362, 1325,
	363, 1325,
	364, 1325,
	365, 1325,
	366, 1325,
	367, 1325,
	368, 1325,
	369, 1325,
	370, 1325,
	371, 1325,
	373, 1325,
	374, 1325,
	375, 1325,
	376, 1325,
	377, 1325,
	378, 1325,
	379, 1325,
	380, 1325,
	381, 1325,
	382, 1325,
	383, 1325,
	384, 1325,
	385, 1325,
	386, 1325,
	387, 1325,
	389, 1325,
	390, 1325,
	392, 1325,
	393, 1325,
	394, 1325,
	395, 1325,
	396, 1325,
	397, 1325,
	398, 1325,
	399, 1325,
	400, 1325,
	401, 1325,
	402, 1325,
	403, 1325,
	404, 1325,
	406, 1325,
	408, 1325,
	409, 1325,
	410, 1325,
	416, 1325,
	418, 1325,
	419, 1325,
	420, 1325,
	421, 1325,
	422, 1325,
	423, 1325,
	424, 1325,
	425, 1325,
	426, 1325,
	427, 1325,
	429, 1325,
	430, 1325,
	431, 1325,
	433, 1325,
	434, 1325,
	435, 1325,
	436, 1325,
	437, 1325,
	438, 1325,
	439, 1325,
	441, 1325,
	442, 1325,
	443, 1325,
	444, 1325,
	445, 1325,
	446, 1325,
	447, 1325,
	448, 1325,
	449, 1325,
	450, 1325,
	451, 1325,
	452, 1325,
	454, 1325,
	455, 1325,
	456, 1325,
	457, 1325,
	458, 1325,
	459, 1325,
	461, 1325,
	462, 1325,
	463, 1325,
	464, 1325,
	465, 1325,
	466, 1325,
	468, 1325,
	469, 1325,
	470, 1325,
	471, 1325,
	472, 1325,
	473, 1325,
	474, 1325,
	475, 1325,
	477, 1325,
	479, 1325,
	480, 1325,
	481, 1325,
	482, 1325,
	483, 1325,
	484, 1325,
	485, 1325,
	486, 1325,
	487, 1325,
	488, 1325,
	489, 1325,
	490, 1325,
	491, 1325,
	492, 1325,
	493, 1325,
	494, 1325,
	496, 1325,
	497, 1325,
	499, 1325,
	500, 1325,
	502, 1325,
	503, 1325,
	504, 1325,
	505, 1325,
	506, 1325,
	507, 1325,
	508, 1325,
	509, 1325,
	510, 1325,
	512, 1325,
	513, 1325,
	514, 1325,
	515, 1325,
	516, 1325,
	518, 1325,
	520, 1325,
	521, 1325,
	522, 1325,
	523, 1325,
	524, 1325,
	525, 1325,
	527, 1325,
	528, 1325,
	529, 1325,
	530, 1325,
	532, 1325,
	533, 1325,
	536, 1325,
	537, 1325,
	538, 1325,
	539, 1325,
	540, 1325,
	541, 1325,
	542, 1325,
	544, 1325,
	547, 1325,
	548, 1325,
	549, 1325,
	550, 1325,
	551, 1325,
	552, 1325,
	554, 1325,
	555, 1325,
	556, 1325,
	557, 1325,
	558, 1325,
	559, 1325,
	564, 1325,
	565, 1325,
	566, 1325,
	567, 1325,
	568, 1325,
	569, 1325,
	-2, 0,
	-1, 1634,
	1, 552,
	598, 552,
	600, 552,
	602, 552,
	-2, 1560,
	-1, 1637,
	4, 2760,
	11, 2760,
	12, 2760,
	14, 2760,
	15, 2760,
	16, 2760,
	17, 2760,
	18, 2760,
	19, 2760,
	21, 2760,
	22, 2760,
	23, 2760,
	24, 2760,
	25, 2760,
	26, 2760,
	27, 2760,
	29, 2760,
	30, 2760,
	33, 2760,
	34, 2760,
	36, 2760,
	38, 2760,
	41, 2760,
	42, 2760,
	44, 2760,
	45, 2760,
	46, 2760,
	47, 2760,
	48, 2760,
	49, 2760,
	50, 2760,
	51, 2760,
	53, 2760,
	54, 2760,
	55, 2760,
	56, 2760,
	58, 2760,
	59, 2760,
	60, 2760,
	61, 2760,
	62, 2760,
	63, 2760,
	64, 2760,
	67, 2760,
	68, 2760,
	69, 2760,
	70, 2760,
	71, 2760,
	73, 2760,
	74, 2760,
	75, 2760,
	76, 2760,
	79, 2760,
	80, 2760,
	81, 2760,
	82, 2760,
	83, 2760,
	84, 2760,
	85, 2760,
	86, 2760,
	88, 2760,
	89, 2760,
	90, 2760,
	91, 2760,
	92, 2760,
	94, 2760,
	95, 2760,
	96, 2760,
	97, 2760,
	98, 2760,
	99, 2760,
	100, 2760,
	101, 2760,
	103, 2760,
	104, 2760,
	105, 2760,
	106, 2760,
	107, 2760,
	108, 2760,
	109, 2760,
	117, 2760,
	118, 2760,
	119, 2760,
	120, 2760,
	121, 2760,
	123, 2760,
	124, 2760,
	125, 2760,
	126, 2760,
	128, 2760,
	129, 2760,
	130, 2760,
	132, 2760,
	133, 2760,
	134, 2760,
	136, 2760,
	137, 2760,
	138, 2760,
	141, 2760,
	142, 2760,
	143, 2760,
	145, 2760,
	146, 2760,
	148, 2760,
	149, 2760,
	150, 2760,
	152, 2760,
	153, 2760,
	154, 2760,
	155, 2760,
	156, 2760,
	157, 2760,
	158, 2760,
	159, 2760,
	160, 2760,
	161, 2760,
	162, 2760,
	163, 2760,
	164, 2760,
	165, 2760,
	166, 2760,
	167, 2760,
	171, 2760,
	172, 2760,
	173, 2760,
	174, 2760,
	175, 2760,
	176, 2760,
	177, 2760,
	178, 2760,
	181, 2760,
	182, 2760,
	184, 2760,
	185, 2760,
	186, 2760,
	189, 2760,
	190, 2760,
	191, 2760,
	192, 2760,
	193, 2760,
	194, 2760,
	195, 2760,
	196, 2760,
	197, 2760,
	198, 2760,
	199, 2760,
	200, 2760,
	201, 2760,
	202, 2760,
	203, 2760,
	205, 2760,
	206, 2760,
	208, 2760,
	209, 2760,
	211, 2760,
	212, 2760,
	213, 2760,
	214, 2760,
	215, 2760,
	216, 2760,
	217, 2760,
	218, 2760,
	219, 2760,
	220, 2760,
	221, 2760,
	222, 2760,
	223, 2760,
	224, 2760,
	225, 2760,
	226, 2760,
	227, 2760,
	229, 2760,
	230, 2760,
	232, 2760,
	233, 2760,
	234, 2760,
	236, 2760,
	237, 2760,
	238, 2760,
	239, 2760,
	241, 2760,
	243, 2760,
	244, 2760,
	245, 2760,
	246, 2760,
	247, 2760,
	248, 2760,
	249, 2760,
	250, 2760,
	251, 2760,
	252, 2760,
	254, 2760,
	255, 2760,
	256, 2760,
	257, 2760,
	258, 2760,
	259, 2760,
	260, 2760,
	261, 2760,
	263, 2760,
	264, 2760,
	265, 2760,
	267, 2760,
	268, 2760,
	269, 2760,
	270, 2760,
	271, 2760,
	272, 2760,
	274, 2760,
	275, 2760,
	276, 2760,
	277, 2760,
	278, 2760,
	279, 2760,
	280, 2760,
	283, 2760,
	284, 2760,
	285, 2760,
	286, 2760,
	287, 2760,
	288, 2760,
	289, 2760,
	290, 2760,
	291, 2760,
	292, 2760,
	293, 2760,
	294, 2760,
	295, 2760,
	296, 2760,
	297, 2760,
	298, 2760,
	299, 2760,
	300, 2760,
	301, 2760,
	302, 2760,
	303, 2760,
	304, 2760,
	305, 2760,
	306, 2760,
	307, 2760,
	308, 2760,
	309, 2760,
	311, 2760,
	312, 2760,
	313, 2760,
	314, 2760,
	315, 2760,
	316, 2760,
	317, 2760,
	318, 2760,
	319, 2760,
	320, 2760,
	321, 2760,
	322, 2760,
	323, 2760,
	324, 2760,
	325, 2760,
	326, 2760,
	327, 2760,
	329, 2760,
	330, 2760,
	333, 2760,
	334, 2760,
	335, 2760,
	337, 2760,
	338, 2760,
	339, 2760,
	340, 2760,
	341, 2760,
	344, 2760,
	348, 2760,
	349, 2760,
	350, 2760,
	351, 2760,
	353, 2760,
	354, 2760,
	355, 2760,
	357, 2760,
	359, 2760,
	360, 2760,
	361, 2760,
	362, 2760,
	363, 2760,
	364, 2760,
	365, 2760,
	366, 2760,
	367, 2760,
	368, 2760,
	369, 2760,
	370, 2760,
	371, 2760,
	373, 2760,
	374, 2760,
	375, 2760,
	376, 2760,
	377, 2760,
	378, 2760,
	379, 2760,
	380, 2760,
	381, 2760,
	382, 2760,
	383, 2760,
	384, 2760,
	385, 2760,
	386, 2760,
	387, 2760,
	389, 2760,
	390, 2760,
	392, 2760,
	393, 2760,
	394, 2760,
	395, 2760,
	396, 2760,
	397, 2760,
	398, 2760,
	399, 2760,
	400, 2760,
	401, 2760,
	402, 2760,
	403, 2760,
	404, 2760,
	406, 2760,
	408, 2760,
	409, 2760,
	410, 2760,
	416, 2760,
	417, 2760,
	418, 2760,
	419, 2760,
	420, 2760,
	421, 2760,
	422, 2760,
	423, 2760,
	424, 2760,
	425, 2760,
	426, 2760,
	427, 2760,
	429, 2760,
	430, 2760,
	431, 2760,
	432, 2760,
	433, 2760,
	434, 2760,
	435, 2760,
	436, 2760,
	437, 2760,
	438, 2760,
	439, 2760,
	440, 2760,
	441, 2760,
	442, 2760,
	443, 2760,
	444, 2760,
	445, 2760,
	446, 2760,
	447, 2760,
	448, 2760,
	449, 2760,
	450, 2760,
	451, 2760,
	452, 2760,
	454, 2760,
	455, 2760,
	456, 2760,
	457, 2760,
	458, 2760,
	459, 2760,
	461, 2760,
	462, 2760,
	463, 2760,
	464, 2760,
	465, 2760,
	466, 2760,
	467, 2760,
	468, 2760,
	469, 2760,
	470, 2760,
	471, 2760,
	472, 2760,
	473, 2760,
	474, 2760,
	475, 2760,
	477, 2760,
	479, 2760,
	480, 2760,
	481, 2760,
	482, 2760,
	483, 2760,
	484, 2760,
	485, 2760,
	486, 2760,
	487, 2760,
	488, 2760,
	489, 2760,
	490, 2760,
	491, 2760,
	492, 2760,
	493, 2760,
	494, 2760,
	496, 2760,
	497, 2760,
	498, 2760,
	499, 2760,
	500, 2760,
	502, 2760,
	503, 2760,
	504, 2760,
	505, 2760,
	506, 2760,
	507, 2760,
	508, 2760,
	509, 2760,
	510, 2760,
	512, 2760,
	513, 2760,
	514, 2760,
	515, 2760,
	516, 2760,
	518, 2760,
	520, 2760,
	521, 2760,
	522, 2760,
	523, 2760,
	524, 2760,
	525, 2760,
	527, 2760,
	528, 2760,
	529, 2760,
	530, 2760,
	532, 2760,
	533, 2760,
	536, 2760,
	537, 2760,
	538, 2760,
	539, 2760,
	540, 2760,
	541, 2760,
	542, 2760,
	544, 2760,
	547, 2760,
	548, 2760,
	549, 2760,
	550, 2760,
	551, 2760,
	552, 2760,
	554, 2760,
	555, 2760,
	556, 2760,
	557, 2760,
	558, 2760,
	559, 2760,
	564, 2760,
	565, 2760,
	566, 2760,
	567, 2760,
	568, 2760,
	569, 2760,
	570, 2760,
	572, 2760,
	580, 2760,
	581, 2760,
	582, 2760,
	583, 2760,
	584, 2760,
	585, 2760,
	587, 2760,
	588, 2760,
	589, 2760,
	590, 2760,
	591, 2760,
	592, 2760,
	593, 2760,
	594, 2760,
	595, 2760,
	597, 2760,
	600, 2760,
	601, 2760,
	603, 2760,
	604, 2760,
	-2, 0,
	-1, 1642,
	188, 2641,
	517, 2641,
	582, 2641,
	601, 2641,
	-2, 0,
	-1, 1695,
	394, 887,
	459, 887,
	500, 887,
	522, 887,
	-2, 0,
	-1, 1706,
	1, 1397,
	598, 1397,
	600, 1397,
	602, 1397,
	-2, 0,
	-1, 1723,
	1, 882,
	598, 882,
	600, 882,
	602, 882,
	-2, 0,
	-1, 1724,
	1, 926,
	598, 926,
	600, 926,
	602, 926,
	-2, 0,
	-1, 1725,
	1, 934,
	598, 934,
	600, 934,
	602, 934,
	-2, 0,
	-1, 1728,
	1, 891,
	598, 891,
	600, 891,
	602, 891,
	-2, 0,
	-1, 1730,
	1, 897,
	598, 897,
	600, 897,
	602, 897,
	-2, 0,
	-1, 1733,
	1, 893,
	598, 893,
	600, 893,
	602, 893,
	-2, 0,
	-1, 1738,
	1, 907,
	598, 907,
	600, 907,
	602, 907,
	-2, 0,
	-1, 1769,
	1, 2624,
	598, 2624,
	600, 2624,
	601, 2624,
	602, 2624,
	-2, 0,
	-1, 1773,
	1, 981,
	598, 981,
	600, 981,
	602, 981,
	-2, 0,
	-1, 1790,
	1, 1447,
	602, 1447,
	-2, 1452,
	-1, 1793,
	170, 1603,
	183, 1603,
	273, 1603,
	342, 1603,
	-2, 1541,
	-1, 1893,
	151, 1562,
	170, 1562,
	183, 1562,
	240, 1562,
	273, 1562,
	342, 1562,
	352, 1562,
	534, 1562,
	-2, 2013,
	-1, 1954,
	600, 2188,
	-2, 0,
	-1, 1989,
	151, 1562,
	170, 1562,
	183, 1562,
	240, 1562,
	273, 1562,
	342, 1562,
	352, 1562,
	534, 1562,
	-2, 1695,
	-1, 2028,
	517, 2638,
	601, 2638,
	604, 2638,
	-2, 0,
	-1, 2045,
	599, 1836,
	-2, 1824,
	-1, 2077,
	188, 2638,
	601, 2638,
	604, 2638,
	-2, 0,
	-1, 2119,
	1, 693,
	602, 693,
	-2, 1452,
	-1, 2258,
	223, 257,
	-2, 2336,
	-1, 2259,
	223, 258,
	-2, 309,
	-1, 2368,
	1, 884,
	598, 884,
	600, 884,
	602, 884,
	-2, 0,
	-1, 2369,
	1, 928,
	598, 928,
	600, 928,
	602, 928,
	-2, 0,
	-1, 2370,
	1, 936,
	598, 936,
	600, 936,
	602, 936,
	-2, 0,
	-1, 2371,
	1, 983,
	598, 983,
	600, 983,
	602, 983,
	-2, 0,
	-1, 2412,
	1, 909,
	598, 909,
	600, 909,
	602, 909,
	-2, 0,
	-1, 2432,
	1, 966,
	598, 966,
	600, 966,
	602, 966,
	-2, 0,
	-1, 2479,
	438, 1630,
	439, 1630,
	-2, 1869,
	-1, 2510,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1889,
	-1, 2511,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1890,
	-1, 2512,
	95, 0,
	254, 0,
	255, 0,
	584, 0,
	585, 0,
	-2, 1891,
	-1, 2513,
	95, 0,
	254, 0,
	255, 0,
	584, 0,
	585, 0,
	-2, 1892,
	-1, 2514,
	95, 0,
	254, 0,
	255, 0,
	584, 0,
	585, 0,
	-2, 1893,
	-1, 2515,
	95, 0,
	254, 0,
	255, 0,
	584, 0,
	585, 0,
	-2, 1894,
	-1, 2516,
	95, 0,
	254, 0,
	255, 0,
	584, 0,
	585, 0,
	-2, 1895,
	-1, 2517,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1896,
	-1, 2529,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1908,
	-1, 2530,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1909,
	-1, 2531,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1910,
	-1, 2535,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1917,
	-1, 2541,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1921,
	-1, 2543,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1929,
	-1, 2544,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1930,
	-1, 2545,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1931,
	-1, 2546,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1932,
	-1, 2720,
	5, 2340,
	188, 2199,
	599, 2337,
	-2, 2328,
	-1, 2721,
	188, 2200,
	-2, 2711,
	-1, 2722,
	188, 2201,
	-2, 2528,
	-1, 2723,
	188, 2202,
	-2, 2410,
	-1, 2724,
	188, 2203,
	-2, 2467,
	-1, 2725,
	188, 2204,
	-2, 2513,
	-1, 2726,
	188, 2205,
	-2, 2636,
	-1, 2727,
	188, 2206,
	-2, 1996,
	-1, 2798,
	1, 1696,
	2, 1696,
	106, 1696,
	151, 1696,
	170, 1696,
	183, 1696,
	189, 1696,
	207, 1696,
	210, 1696,
	236, 1696,
	240, 1696,
	251, 1696,
	269, 1696,
	273, 1696,
	312, 1696,
	342, 1696,
	346, 1696,
	352, 1696,
	428, 1696,
	432, 1696,
	534, 1696,
	545, 1696,
	561, 1696,
	562, 1696,
	563, 1696,
	573, 1696,
	598, 1696,
	600, 1696,
	602, 1696,
	604, 1696,
	-2, 1695,
	-1, 2811,
	599, 2309,
	-2, 2323,
	-1, 2813,
	1, 326,
	561, 326,
	-2, 1589,
	-1, 2843,
	599, 1835,
	-2, 1825,
	-1, 3028,
	1, 1300,
	423, 1264,
	461, 1264,
	576, 1264,
	598, 1300,
	600, 1300,
	602, 1300,
	-2, 1589,
	-1, 3203,
	347, 1633,
	-2, 2750,
	-1, 3204,
	347, 1634,
	-2, 2621,
	-1, 3208,
	438, 2265,
	439, 2265,
	-2, 1994,
	-1, 3209,
	438, 2269,
	439, 2269,
	-2, 1995,
	-1, 3210,
	438, 2266,
	439, 2266,
	-2, 1994,
	-1, 3211,
	438, 2270,
	439, 2270,
	-2, 1995,
	-1, 3224,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1919,
	-1, 3225,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1923,
	-1, 3231,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1925,
	-1, 3457,
	1, 688,
	598, 688,
	600, 688,
	602, 688,
	-2, 1452,
	-1, 3631,
	43, 2300,
	-2, 1053,
	-1, 3636,
	1, 1300,
	598, 1300,
	600, 1300,
	602, 1300,
	-2, 1589,
	-1, 3739,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1927,
	-1, 3746,
	245, 0,
	247, 0,
	333, 0,
	-2, 1946,
	-1, 3814,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1975,
	-1, 3815,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1976,
	-1, 3816,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1977,
	-1, 3820,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1981,
	-1, 3821,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1982,
	-1, 3822,
	14, 0,
	15, 0,
	16, 0,
	580, 0,
	581, 0,
	582, 0,
	-2, 1983,
	-1, 3870,
	599, 2310,
	-2, 2324,
	-1, 4052,
	601, 2867,
	-2, 1515,
	-1, 4106,
	245, 0,
	247, 0,
	333, 0,
	-2, 1947,
	-1, 4109,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1950,
	-1, 4110,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1952,
	-1, 4211,
	601, 2325,
	-2, 1335,
	-1, 4364,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1951,
	-1, 4365,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 1953,
	-1, 4376,
	245, 0,
	-2, 1986,
	-1, 4553,
	245, 0,
	-2, 1987,
	-1, 4758,
	50, 0,
	220, 0,
	272, 0,
	467, 0,
	570, 0,
	583, 0,
	-2, 2714,
}

const sqlPrivate = 57344

const sqlLast = 132587

var sqlAct = [...]int{
	275, 3620, 4698, 4941, 3113, 3362, 4587, 4819, 4697, 3100,
	4872, 4595, 4757, 4426, 4803, 4636, 2905, 4768, 4885, 3619,
	4745, 1532, 4657, 4711, 4729, 1341, 4688, 4769, 4826, 2255,
	4708, 4523, 4770, 2168, 4499, 4471, 4408, 2949, 4486, 3779,
	4756, 4557, 4326, 2332, 4321, 4281, 2344, 4207, 2974, 4089,
	4431, 4256, 3731, 4385, 4353, 4036, 4310, 4308, 2489, 4508,
	1559, 3653, 4301, 1270, 4621, 3965, 2032, 4044, 710, 3217,
	4208, 2019, 1802, 4331, 2987, 821, 2558, 3537, 4188, 4010,
	2088, 2342, 3647, 3070, 3992, 1081, 3605, 3994, 2497, 3594,
	2753, 781, 3480, 1090, 2176, 4381, 1995, 3684, 1660, 3086,
	1402, 3609, 3686, 821, 3084, 3610, 3125, 3089, 1334, 3059,
	1336, 3612, 3873, 3408, 3385, 3587, 3377, 3586, 900, 1495,
	4088, 2490, 3345, 721, 3120, 3368, 3115, 4145, 3101, 3475,
	3035, 3366, 2244, 1089, 182, 4804, 896, 4, 2242, 2340,
	1964, 2187, 2907, 3499, 1259, 3840, 2791, 3415, 2790, 4558,
	3344, 1901, 2571, 1940, 1871, 2494, 3201, 2636, 3119, 2793,
	1502, 891, 3063, 1598, 3004, 1339, 2219, 816, 777, 2226,
	2033, 2238, 2203, 2243, 1383, 1140, 2156, 1250, 2948, 2099,
	2160, 2627, 2101, 3071, 2305, 2555, 2146, 1790, 1327, 2478,
	2013, 1313, 2771, 2461, 1965, 1145, 2459, 1984, 1703, 2826,
	3094, 1635, 754, 2292, 1324, 818, 822, 1601, 2930, 697,
	969, 1658, 1370, 719, 823, 3613, 4658, 2893, 1561, 1935,
	2825, 1253, 3986, 2780, 2638, 2682, 2630, 1974, 182, 269,
	2761, 1232, 1803, 2750, 1885, 2608, 2716, 1981, 1804, 2460,
	762, 2462, 1267, 1738, 1723, 191, 773, 2291, 268, 1626,
	1249, 1527, 2318, 192, 1633, 2252, 2175, 1136, 4820, 4873,
	714, 44, 43, 2483, 1121, 41, 32, 30, 1255, 1230,
	28, 1809, 3254, 1538, 111, 711, 811, 722, 1789, 990,
	3854, 3248, 3855, 3364, 737, 2090, 2090, 2090, 2090, 872,
	2090, 873, 1669, 4952, 4944, 4933, 2090, 2770, 3672, 2770,
	4797, 4401, 4932, 4906, 827, 1531, 2770, 4430, 917, 892,
	4904, 4845, 4805, 1147, 4430, 2264, 4806, 4794, 4792, 4398,
	4789, 2770, 2770, 830, 4790, 4786, 3662, 4754, 3672, 4787,
	4753, 2264, 827, 4752, 2264, 1085, 73, 3130, 895, 894,
	4743, 2111, 4741, 4738, 4430, 4733, 4430, 4511, 4732, 4430,
	3663, 830, 4430, 74, 1143, 4706, 4677, 4670, 4669, 4430,
	2834, 2770, 2770, 1085, 4662, 1729, 4635, 1247, 2264, 79,
	2264, 4632, 4615, 1651, 4555, 4430, 4272, 4537, 2834, 4501,
	4449, 4073, 4448, 4502, 2264, 4437, 2264, 4436, 4429, 2264,
	1142, 4430, 4430, 1233, 1233, 4392, 4366, 4169, 1190, 2264,
	2834, 1075, 1379, 4342, 4339, 3442, 2108, 3130, 3672, 88,
	4251, 4234, 4108, 4060, 2770, 2770, 2834, 3679, 4054, 4007,
	1552, 3865, 3679, 4008, 1379, 3866, 3440, 2264, 1066, 2763,
	3315, 3316, 3425, 2341, 2854, 3863, 1065, 3847, 2111, 3864,
	3763, 2770, 3759, 3678, 2264, 3361, 2770, 3679, 3356, 2770,
	898, 2830, 2770, 3355, 3306, 3844, 3304, 2770, 3307, 94,
	3305, 1284, 49, 3296, 110, 1080, 1291, 3297, 1086, 94,
	107, 3294, 3265, 1540, 3263, 2770, 2770, 3129, 3216, 2770,
	3264, 3130, 1817, 1818, 3111, 3110, 2877, 2833, 2328, 2328,
	2770, 2834, 2111, 2823, 2111, 4678, 2815, 2770, 1119, 1265,
	2264, 4559, 4550, 2769, 1234, 1848, 2633, 2770, 4538, 4511,
	1817, 1818, 1820, 1850, 1851, 1852, 1861, 1862, 1863, 2108,
	2327, 2111, 3130, 1236, 2328, 1237, 3844, 2762, 4319, 95,
	4272, 2108, 1854, 1848, 1285, 4235, 4073, 4009, 1873, 2977,
	1820, 2892, 2180, 2125, 3315, 3316, 1540, 1819, 1285, 1867,
	2089, 2105, 3065, 2263, 1540, 2997, 2890, 1839, 1960, 1526,
	3948, 3734, 3708, 1817, 1818, 1982, 1873, 2231, 1705, 3664,
	2807, 2806, 239, 2805, 2804, 1819, 2803, 239, 1238, 3315,
	3316, 1235, 3333, 3334, 3335, 1839, 1074, 2770, 3665, 4779,
	1073, 1817, 1818, 1820, 1836, 1072, 1262, 2634, 1071, 1070,
	3321, 4104, 1069, 1068, 1064, 1063, 3174, 4778, 1062, 3315,
	3316, 1061, 3333, 3334, 3335, 3253, 1060, 1059, 1058, 3330,
	241, 1820, 1057, 1056, 1055, 241, 1054, 1053, 1819, 1052,
	1051, 4103, 1261, 1050, 1551, 1049, 1048, 1047, 1029, 967,
	966, 965, 1842, 1843, 1844, 1845, 2091, 2091, 2091, 2091,
	964, 2091, 1825, 963, 3330, 2404, 1819, 2091, 962, 961,
	960, 959, 958, 957, 956, 1539, 1546, 955, 954, 240,
	1842, 1843, 1844, 1845, 240, 99, 953, 2635, 952, 2632,
	1825, 4833, 233, 951, 3330, 950, 949, 948, 947, 946,
	945, 234, 944, 943, 942, 941, 940, 939, 938, 937,
	1847, 1849, 936, 935, 934, 933, 3331, 932, 921, 920,
	919, 915, 914, 907, 3321, 4163, 1673, 2108, 193, 1858,
	3315, 3316, 1868, 193, 906, 905, 3079, 890, 1847, 1849,
	190, 102, 889, 1825, 106, 846, 845, 844, 843, 834,
	1263, 833, 832, 239, 1864, 831, 1865, 797, 1138, 3321,
	239, 788, 787, 1834, 1835, 1346, 1145, 786, 1840, 3097,
	239, 1825, 768, 153, 4775, 263, 3662, 262, 899, 261,
	1655, 1856, 260, 153, 259, 258, 257, 256, 255, 3321,
	254, 1870, 253, 1145, 1145, 1145, 1840, 252, 251, 250,
	249, 241, 248, 247, 246, 245, 244, 243, 241, 242,
	4120, 1405, 3888, 3859, 3680, 1405, 3411, 3276, 241, 3359,
	3259, 3250, 1346, 3337, 4333, 1531, 239, 1352, 2665, 3154,
	3331, 1285, 4562, 2663, 239, 2111, 2864, 2089, 2108, 3045,
	2105, 1943, 1866, 1870, 157, 2637, 2454, 1145, 1942, 1145,
	240, 1145, 2108, 3337, 2838, 2762, 1540, 240, 1564, 194,
	1855, 3360, 2812, 233, 2797, 3331, 1985, 240, 1374, 3332,
	233, 1870, 234, 1088, 241, 1946, 1943, 2649, 2647, 234,
	233, 239, 241, 1942, 1346, 2451, 1387, 1388, 1389, 234,
	1545, 2154, 1285, 4832, 1816, 3331, 2110, 2008, 1846, 193,
	3321, 4541, 1912, 1784, 1564, 1870, 193, 1534, 3315, 3316,
	1941, 1564, 4539, 1391, 1269, 4755, 893, 4421, 4740, 4643,
	1145, 1841, 1145, 240, 4547, 1510, 1846, 1564, 4380, 241,
	4340, 240, 1530, 1731, 4318, 1145, 233, 1145, 4175, 4143,
	1870, 4142, 4136, 4135, 233, 234, 4134, 4127, 4126, 1841,
	1318, 1321, 1870, 234, 1366, 4124, 1903, 4119, 4116, 4115,
	4006, 2631, 1331, 3892, 4020, 3891, 3890, 3869, 3835, 1905,
	1870, 3834, 193, 1910, 1368, 3833, 1859, 3755, 240, 1872,
	193, 3432, 3750, 3332, 3081, 1564, 1515, 1398, 3406, 1492,
	1497, 233, 2847, 2308, 1607, 1610, 3352, 3343, 1505, 3314,
	234, 3311, 1500, 3310, 2788, 1145, 3308, 1872, 1145, 3315,
	3316, 3303, 3333, 3334, 3335, 3302, 3315, 3316, 3332, 3317,
	3318, 3319, 3320, 3322, 3323, 3301, 3298, 193, 2271, 1360,
	4335, 3749, 3295, 3275, 3258, 3251, 3249, 3112, 182, 182,
	2798, 1529, 2620, 1816, 1815, 3315, 3316, 1596, 3332, 1528,
	1903, 1246, 2269, 4947, 4021, 4894, 4893, 1674, 4818, 3315,
	3316, 4237, 4816, 1271, 827, 3946, 1638, 1640, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 1613, 3321, 1857,
	1627, 1870, 3781, 830, 3330, 4699, 4620, 4606, 4603, 1831,
	1832, 1838, 1860, 1837, 1833, 239, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 4602, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 4601, 1904, 239, 1902, 4581, 4580,
	4578, 4561, 1636, 4560, 4535, 1374, 239, 239, 1374, 3357,
	3326, 3324, 3325, 3317, 3318, 3319, 3320, 3322, 3323, 1145,
	2561, 4521, 4564, 241, 4518, 1145, 4517, 4512, 4497, 1629,
	4496, 4445, 1094, 4416, 1823, 1824, 1826, 1827, 3327, 3328,
	3329, 1794, 4378, 4361, 241, 3326, 3324, 3325, 3317, 3318,
	3319, 3320, 3322, 3323, 241, 241, 4360, 239, 1086, 3321,
	1821, 1822, 1823, 1824, 1826, 1827, 3321, 3080, 3327, 3328,
	3329, 1679, 240, 4304, 1650, 3326, 3324, 3325, 3317, 3318,
	3319, 3320, 3322, 3323, 4297, 233, 4294, 4563, 1747, 1668,
	4273, 2567, 4162, 240, 234, 3321, 4141, 4074, 1788, 4021,
	3934, 3933, 3916, 240, 240, 241, 233, 3915, 3913, 3321,
	3850, 239, 39, 1892, 3838, 234, 233, 233, 3745, 1890,
	3681, 3096, 3673, 3337, 3639, 234, 234, 3554, 3512, 3479,
	1145, 1145, 1145, 3434, 3280, 3279, 1145, 3274, 3240, 3058,
	1949, 1948, 193, 1267, 1947, 1267, 1696, 1944, 1936, 1934,
	2845, 2844, 193, 193, 240, 2809, 1732, 2802, 239, 241,
	1405, 2768, 2645, 4334, 1889, 3331, 2007, 233, 1963, 1958,
	1957, 1145, 3331, 1956, 821, 1346, 234, 1795, 1955, 1954,
	2050, 821, 1346, 2011, 1346, 1953, 1952, 1962, 1951, 3317,
	3318, 3319, 3320, 3322, 3323, 1950, 1931, 1930, 1632, 1929,
	2029, 3331, 1928, 193, 239, 1791, 241, 2078, 240, 2080,
	1927, 1799, 1926, 1798, 1925, 3331, 1924, 1923, 1817, 1818,
	1922, 233, 1921, 1920, 1919, 1066, 1971, 1918, 1793, 1917,
	234, 1916, 1905, 1065, 1891, 1888, 1883, 1359, 1945, 1289,
	1870, 1280, 4307, 4171, 1346, 1812, 1813, 1870, 1820, 4112,
	1145, 3887, 241, 3862, 3853, 240, 4399, 193, 3262, 2800,
	4173, 2023, 3886, 2836, 1904, 3430, 3315, 3316, 233, 2113,
	1992, 1968, 1969, 1886, 1145, 3668, 1870, 234, 2145, 2003,
	182, 1233, 1405, 1819, 4891, 2145, 1384, 4771, 4841, 2095,
	1870, 2170, 2097, 1086, 2145, 1937, 1938, 3403, 2102, 1386,
	4884, 240, 2104, 2975, 193, 1632, 2664, 2107, 2137, 2136,
	2143, 2662, 2145, 2147, 233, 4604, 4513, 4504, 3332, 4503,
	4338, 4275, 4274, 234, 4236, 3332, 4165, 4079, 4078, 4077,
	4076, 4075, 3857, 4509, 3856, 1374, 4839, 2953, 2214, 2116,
	2117, 2016, 3683, 1993, 3682, 3675, 1380, 3674, 4024, 2018,
	193, 2012, 4542, 1926, 3332, 2648, 2646, 1379, 1379, 1985,
	3732, 1695, 3960, 4540, 1385, 3300, 1990, 2152, 3332, 3319,
	3320, 3322, 3323, 1943, 3299, 3222, 3002, 1926, 1983, 2024,
	1942, 2935, 1382, 3515, 1786, 2131, 2073, 3931, 1379, 3481,
	1045, 1961, 1914, 3622, 4420, 3621, 4862, 1704, 2228, 2093,
	1265, 1748, 1265, 827, 2333, 4500, 3546, 4801, 2002, 2001,
	827, 1987, 2000, 1998, 1997, 1564, 1564, 1996, 4782, 1086,
	4767, 3595, 830, 2017, 3126, 1405, 1705, 2246, 2245, 830,
	4028, 2140, 4382, 2360, 2309, 1046, 2030, 4003, 3962, 2180,
	4014, 2119, 2120, 3957, 3939, 3705, 3455, 1911, 1631, 2338,
	2115, 3431, 3364, 3783, 4222, 2628, 2633, 4440, 3327, 3328,
	3329, 4412, 4219, 1376, 2843, 3326, 3324, 3325, 3317, 3318,
	3319, 3320, 3322, 3323, 3325, 3317, 3318, 3319, 3320, 3322,
	3323, 3268, 4776, 4791, 3603, 2210, 1959, 2218, 2983, 1939,
	2223, 2213, 2302, 2044, 1606, 2932, 1522, 1262, 1355, 1262,
	1317, 3326, 3324, 3325, 3317, 3318, 3319, 3320, 3322, 3323,
	4788, 2994, 3658, 2256, 2261, 3908, 3324, 3325, 3317, 3318,
	3319, 3320, 3322, 3323, 2991, 4596, 2989, 4322, 1245, 4705,
	1564, 4238, 1564, 1261, 1564, 1261, 2148, 2138, 4574, 3484,
	3926, 3093, 3578, 2205, 4842, 2142, 1381, 2634, 4443, 4777,
	2982, 4439, 1564, 1564, 885, 1631, 4418, 2931, 3726, 4843,
	3975, 2432, 4467, 2429, 3459, 1564, 1025, 1573, 4224, 2186,
	1581, 1380, 1043, 2878, 4943, 1745, 2909, 1564, 2047, 1564,
	1564, 1564, 2469, 2141, 2248, 2249, 4610, 1746, 1524, 1683,
	2250, 2418, 4877, 4460, 2416, 4451, 3153, 1041, 1039, 1037,
	1034, 4265, 4264, 821, 1377, 2132, 1084, 2208, 3973, 2180,
	2298, 3972, 3964, 1378, 3954, 1386, 2430, 3953, 2211, 3037,
	3951, 2359, 3950, 1529, 3938, 1145, 3903, 2635, 3974, 2632,
	3902, 1528, 2303, 2896, 3584, 3583, 2315, 3424, 2896, 3273,
	3272, 1263, 2467, 1263, 2431, 3271, 827, 3270, 2894, 2207,
	2204, 3226, 2222, 2894, 1369, 2336, 3911, 1582, 886, 3000,
	1145, 2999, 2206, 2996, 2985, 830, 4218, 2969, 2262, 2968,
	2963, 2962, 2961, 2940, 2364, 1744, 2939, 2900, 2323, 4441,
	1385, 4220, 2824, 4413, 2542, 1403, 1792, 3461, 1376, 1503,
	2678, 2912, 2677, 2499, 3090, 1083, 1145, 1619, 1145, 1618,
	1617, 4359, 1616, 2937, 2851, 1145, 2312, 1676, 2050, 2050,
	1405, 2885, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1636, 1145,
	1636, 1145, 1145, 1145, 1145, 2284, 2352, 2325, 2453, 2283,
	2317, 1629, 1386, 2320, 2346, 2320, 2471, 2321, 2246, 3544,
	1681, 1381, 4879, 2333, 3481, 760, 2828, 1145, 2458, 1360,
	2933, 1145, 1145, 1380, 2329, 2637, 2330, 2933, 1379, 1145,
	3514, 2468, 4181, 1145, 2177, 1145, 1145, 1577, 760, 4878,
	3706, 1303, 1827, 1405, 1086, 1031, 1086, 1085, 2389, 1145,
	1145, 1145, 1145, 2351, 2282, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 2837, 2449, 1677, 2356, 1385, 2173, 1377,
	2441, 2368, 827, 2957, 2216, 1782, 3133, 1590, 1378, 2180,
	4589, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	3323, 830, 2379, 1727, 1145, 4180, 1697, 2178, 2179, 1595,
	2950, 2951, 1727, 1525, 2444, 2466, 1267, 2950, 2951, 1351,
	4880, 2609, 2610, 1405, 2412, 1757, 2950, 2951, 2495, 2496,
	2202, 1973, 1267, 2557, 2482, 2609, 2625, 2174, 2814, 3169,
	2215, 2923, 2911, 4221, 2149, 2150, 2422, 2628, 1145, 1405,
	1376, 2631, 2557, 2410, 3199, 1693, 2469, 2217, 2376, 2565,
	4908, 2922, 2673, 2373, 2322, 2539, 2563, 1797, 2369, 3715,
	3214, 3714, 4773, 2455, 2457, 2470, 2456, 1724, 2038, 2463,
	3545, 2719, 2719, 2733, 2573, 2609, 1743, 2212, 2754, 2756,
	1358, 2003, 2214, 2367, 2760, 1066, 2624, 2785, 1066, 1066,
	1537, 1785, 1544, 2486, 1550, 3180, 2487, 2488, 1705, 1726,
	888, 887, 1705, 4591, 1977, 4842, 2467, 3923, 1726, 3171,
	2637, 4358, 4263, 2936, 3952, 2443, 2553, 1602, 3949, 4882,
	2209, 2370, 2899, 1381, 3895, 3772, 2993, 3882, 2810, 1082,
	1725, 2777, 3590, 3315, 3316, 4216, 3333, 3334, 3335, 3582,
	3542, 759, 1346, 1346, 930, 2551, 2995, 1992, 1761, 2569,
	1233, 1980, 2216, 1379, 3458, 4476, 1740, 2260, 2992, 2377,
	2960, 2044, 2044, 1649, 759, 1654, 1975, 2827, 2873, 1600,
	2622, 2990, 2799, 2988, 2938, 2899, 2268, 2267, 1667, 2910,
	1672, 1377, 4888, 4864, 1978, 1405, 4855, 4203, 2465, 2450,
	1378, 2675, 4863, 1086, 3213, 182, 2676, 2776, 2831, 2679,
	2822, 2680, 2681, 1086, 2859, 2715, 3183, 1086, 3330, 2784,
	2863, 2789, 3935, 4909, 2795, 2796, 2850, 2895, 2728, 2050,
	2745, 4196, 2758, 4831, 2874, 2537, 3921, 1976, 2540, 2766,
	2767, 1035, 2782, 2783, 2778, 2213, 1374, 4774, 3983, 1077,
	2440, 1017, 4094, 1990, 2867, 1730, 2047, 2047, 1945, 2417,
	2870, 761, 2415, 3237, 2229, 2468, 1035, 1035, 1036, 1035,
	3709, 3379, 1405, 1265, 2161, 1079, 3206, 3207, 883, 2162,
	882, 4093, 1682, 3591, 761, 3655, 4197, 2536, 1346, 1265,
	709, 3656, 3235, 2637, 3177, 2090, 2547, 3531, 3523, 2973,
	3936, 2839, 3032, 2188, 2009, 3984, 1086, 2901, 3769, 1145,
	1145, 1579, 1145, 3321, 2869, 2846, 704, 2225, 2548, 1937,
	1938, 1078, 4684, 2549, 2858, 4881, 2192, 2554, 2861, 1576,
	2862, 2876, 2866, 1302, 2898, 2849, 821, 4404, 1346, 2466,
	2875, 2229, 2853, 2200, 2224, 1275, 2868, 3588, 3982, 4214,
	3182, 4772, 3062, 2897, 3532, 3524, 1678, 1979, 2958, 3033,
	1277, 795, 4674, 1344, 4217, 2976, 3469, 1018, 2942, 1564,
	1262, 2241, 4747, 3655, 4748, 1379, 2965, 2879, 2220, 3104,
	4590, 3179, 1564, 2189, 1564, 2183, 1262, 1272, 3770, 2964,
	2926, 4597, 3121, 2163, 3557, 2442, 1602, 3530, 3522, 2943,
	2201, 1564, 3031, 2941, 1758, 4617, 1261, 2178, 2179, 3077,
	2167, 4477, 2952, 2954, 2955, 2956, 2959, 2904, 2967, 3331,
	2914, 2917, 1261, 4475, 3460, 1346, 2155, 1346, 2240, 4473,
	3124, 1278, 3123, 3232, 3134, 3135, 3040, 2221, 1755, 2375,
	3496, 3042, 2184, 2199, 4886, 3141, 3142, 3143, 922, 1145,
	3155, 758, 3156, 2986, 1032, 4291, 3001, 1706, 3997, 1523,
	3233, 3029, 3030, 2232, 3238, 2971, 2966, 3995, 2239, 1287,
	3378, 2981, 793, 2217, 923, 4830, 4472, 2896, 3428, 2215,
	3127, 2881, 2538, 2164, 2169, 2182, 3181, 2411, 3228, 1932,
	4192, 2193, 2915, 3118, 1870, 4193, 3038, 3495, 1276, 2229,
	4355, 182, 2883, 4090, 4474, 4198, 1756, 2556, 4215, 2564,
	1529, 1023, 1022, 2550, 1263, 1145, 1692, 1694, 3043, 1999,
	2813, 1145, 1145, 2552, 3106, 2372, 3131, 3073, 1796, 3108,
	1263, 3056, 3136, 827, 3137, 2171, 931, 3066, 3157, 2884,
	4371, 3067, 2044, 4852, 2735, 1759, 2637, 4195, 4716, 4672,
	4248, 1357, 830, 4887, 3922, 2366, 2194, 2195, 1019, 3088,
	2882, 727, 3099, 1882, 4199, 827, 2165, 3500, 908, 2265,
	3109, 3997, 3332, 3470, 3589, 3278, 3019, 1145, 1145, 3998,
	3995, 2190, 2233, 1145, 830, 1977, 2781, 1636, 2619, 4889,
	4910, 4811, 4673, 2794, 913, 3128, 1145, 1145, 2972, 4897,
	3151, 4812, 1145, 1145, 3107, 3150, 2038, 2038, 1145, 3011,
	3009, 3506, 1085, 3148, 3785, 2171, 3013, 3015, 3005, 4306,
	3160, 3502, 3162, 3038, 3164, 2191, 4084, 2047, 3158, 3159,
	4895, 3161, 1980, 3163, 4268, 3165, 3166, 4630, 4354, 1760,
	3883, 4311, 4095, 1292, 1680, 3728, 1017, 2779, 3197, 1711,
	3234, 4637, 4721, 1145, 1145, 1145, 2091, 3229, 3175, 1145,
	3236, 4312, 705, 4656, 3185, 1978, 3187, 4019, 3504, 1145,
	1079, 3993, 3194, 3188, 4292, 3205, 3190, 4829, 4520, 4267,
	1020, 3261, 4266, 4042, 3643, 3501, 1145, 2821, 2290, 794,
	4622, 3196, 3998, 3195, 4194, 924, 925, 1970, 1290, 1973,
	1283, 2482, 696, 4623, 3200, 1076, 1807, 1021, 4091, 3824,
	2485, 3505, 3327, 3328, 3329, 1273, 1806, 3215, 4139, 3326,
	3324, 3325, 3317, 3318, 3319, 3320, 3322, 3323, 835, 1801,
	2181, 2133, 3416, 4204, 4205, 4915, 3252, 4624, 796, 1806,
	4438, 4529, 792, 706, 3256, 3257, 2196, 4573, 4043, 3260,
	3476, 3996, 2130, 3968, 842, 3955, 3907, 3644, 2161, 3635,
	1024, 3472, 1018, 2162, 3078, 3227, 3072, 3060, 1274, 2316,
	3768, 2310, 2304, 2296, 2276, 2275, 1570, 4356, 1145, 1145,
	1145, 1145, 1977, 2475, 4638, 2944, 1294, 2916, 1145, 1145,
	1145, 767, 707, 1145, 708, 3839, 4689, 3007, 2166, 3729,
	2236, 4626, 3899, 1145, 1267, 1405, 2899, 2772, 3021, 1145,
	1806, 1145, 3371, 3372, 4659, 909, 910, 4327, 2423, 1805,
	1267, 4045, 2197, 2126, 4625, 4096, 2128, 3057, 1979, 1980,
	3020, 3012, 3010, 3014, 3016, 3006, 3008, 3022, 1405, 2357,
	2775, 4627, 1805, 1305, 1975, 4810, 4492, 3018, 3267, 3875,
	1267, 4490, 3852, 1405, 2498, 4415, 3487, 2234, 3483, 3482,
	3220, 3198, 1978, 3376, 3996, 1346, 3375, 1734, 1733, 2349,
	2129, 2339, 2273, 1728, 4309, 2050, 1086, 2163, 3879, 1405,
	3025, 2774, 2820, 3354, 2819, 1625, 2773, 1623, 1807, 1346,
	3423, 2818, 926, 927, 2167, 1346, 2817, 3396, 2816, 3373,
	2235, 3825, 1611, 3876, 929, 1976, 1023, 1022, 1882, 4097,
	3826, 1807, 4002, 1805, 3438, 1612, 3064, 1145, 1083, 4140,
	2161, 2476, 4584, 3383, 4427, 2162, 4282, 2920, 4015, 3914,
	3877, 1145, 3874, 2314, 3598, 2170, 3410, 4494, 3904, 3405,
	4849, 1346, 4402, 3036, 4914, 3381, 2050, 2640, 3441, 3841,
	3465, 3466, 3426, 1019, 3132, 3041, 3039, 3558, 2945, 2946,
	2343, 2245, 1686, 4695, 1145, 4585, 4423, 2164, 2169, 2170,
	4410, 3485, 4422, 3382, 3489, 836, 837, 2038, 3394, 3445,
	1346, 4639, 3447, 3448, 3397, 3398, 3414, 3451, 3402, 3452,
	2479, 3453, 3395, 1712, 3409, 4146, 2405, 3365, 4702, 3900,
	1374, 4686, 1346, 4853, 1346, 3418, 3419, 3420, 3421, 4493,
	3456, 3380, 911, 912, 2644, 1557, 1778, 4411, 3478, 2436,
	2228, 3349, 3350, 3351, 3462, 1979, 1405, 3486, 4428, 2228,
	3491, 4723, 1780, 3493, 4854, 1777, 3400, 1346, 3401, 2163,
	4851, 1346, 1775, 2811, 4793, 3429, 3560, 4613, 3562, 3473,
	2165, 3566, 4696, 4605, 4586, 3572, 2167, 1752, 1750, 4377,
	3026, 1265, 1722, 3417, 1720, 3547, 1564, 4138, 1644, 3017,
	4001, 4479, 1718, 2414, 3346, 1020, 1716, 1265, 766, 1346,
	1564, 3744, 1564, 3540, 1659, 3450, 1405, 3449, 3703, 1714,
	1103, 4628, 3446, 821, 1564, 2159, 3702, 4629, 267, 2171,
	3555, 3905, 1021, 3439, 3592, 1564, 3457, 1265, 3309, 3435,
	3436, 1708, 3437, 3463, 3239, 3608, 3477, 1346, 3061, 1702,
	839, 838, 3535, 2984, 1700, 1624, 2934, 1622, 3468, 2164,
	2169, 2848, 3878, 1621, 1267, 2445, 2736, 2334, 3651, 2010,
	2381, 2006, 1687, 3503, 928, 1781, 1662, 3627, 3347, 3724,
	3513, 3723, 2157, 3121, 2254, 1024, 1801, 3173, 1262, 1564,
	3517, 3172, 3121, 3526, 3139, 3521, 2464, 1739, 3559, 3519,
	2384, 1564, 3527, 1564, 1262, 1517, 3528, 3634, 3593, 3649,
	3596, 2295, 3529, 2274, 840, 841, 2079, 3548, 2044, 2891,
	1915, 3533, 1675, 3556, 1261, 2158, 3671, 1594, 3543, 2643,
	2438, 3660, 4249, 4766, 1262, 2437, 3959, 3580, 3575, 3569,
	1261, 2967, 2165, 3958, 4250, 4233, 4827, 4685, 1779, 4325,
	1405, 1776, 4255, 1405, 3707, 3765, 3567, 4246, 1774, 4185,
	3573, 4041, 3642, 3645, 4032, 3971, 3956, 1603, 3929, 3717,
	1261, 3648, 3581, 1751, 1749, 2017, 3927, 3906, 1721, 3638,
	1719, 1033, 3585, 2942, 2413, 3633, 3579, 1145, 1717, 2044,
	3600, 2171, 1715, 1145, 1145, 3652, 3623, 1145, 1145, 1145,
	3630, 1145, 3632, 2047, 3631, 1713, 4320, 3091, 3700, 3083,
	1145, 2050, 2166, 3076, 182, 182, 3068, 3054, 3053, 1145,
	3034, 1017, 2022, 2865, 1145, 3657, 2860, 1707, 3659, 2272,
	1405, 2270, 1263, 2247, 3666, 1701, 4824, 2230, 3698, 1145,
	1699, 2198, 3669, 3670, 3464, 1079, 2185, 1405, 1263, 1620,
	3650, 2380, 827, 3721, 2172, 2112, 2109, 2050, 2050, 1145,
	1145, 2106, 1145, 1145, 1145, 2253, 2103, 2098, 2096, 3387,
	2092, 830, 2083, 1810, 2047, 4843, 3218, 3747, 1263, 2134,
	1145, 2122, 2123, 4583, 1145, 3191, 2050, 2050, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 3730, 1145,
	3718, 3757, 3758, 3797, 3701, 3798, 2448, 1145, 1145, 2050,
	3570, 1265, 3189, 3027, 1145, 2239, 4735, 3727, 4341, 3711,
	1242, 3712, 4311, 3713, 2153, 1145, 3722, 1018, 4262, 3719,
	4177, 1086, 1038, 1040, 1042, 3122, 1267, 1267, 3725, 1575,
	1145, 2896, 4312, 2896, 4531, 2921, 1243, 4524, 4053, 2180,
	1772, 1773, 2446, 2371, 2408, 3388, 2894, 2313, 2918, 1326,
	1325, 3752, 3219, 2378, 2166, 3754, 2403, 4734, 4225, 4257,
	1817, 1818, 1405, 1698, 1811, 2924, 3764, 4549, 4846, 3871,
	4425, 4147, 4125, 1817, 1818, 1346, 1346, 3498, 3780, 3771,
	3773, 3774, 2925, 2947, 2121, 1814, 1353, 1293, 2447, 4837,
	1346, 1346, 3787, 1346, 3836, 3386, 3393, 2925, 1262, 4802,
	3880, 3881, 3795, 1820, 3967, 3052, 3796, 2495, 3788, 3858,
	264, 4029, 1145, 3800, 2297, 3893, 3894, 3828, 3896, 3571,
	1364, 3802, 2991, 2989, 2998, 1819, 3966, 2978, 2927, 3392,
	1145, 4694, 1326, 4679, 1261, 1326, 2495, 3803, 1819, 4650,
	3046, 182, 2980, 3049, 3837, 3051, 3829, 1244, 4644, 3775,
	4582, 3848, 3849, 2929, 4515, 2979, 3843, 693, 4485, 4403,
	4039, 1023, 1022, 1145, 1145, 4031, 2928, 3845, 3846, 3832,
	4018, 3868, 3794, 3637, 3098, 2759, 2118, 3897, 2031, 4883,
	4424, 3898, 4725, 2970, 1521, 1520, 3427, 4726, 4913, 3315,
	3316, 3095, 1817, 1818, 3095, 4646, 4725, 3860, 2888, 2889,
	3861, 4726, 2886, 2887, 2044, 1145, 1685, 4857, 1019, 1531,
	4117, 2639, 1684, 3885, 2888, 2886, 2674, 4038, 1754, 4516,
	3928, 1753, 3930, 4461, 4259, 4254, 4253, 4113, 3884, 1564,
	3776, 3564, 3561, 2038, 1346, 3389, 3390, 3391, 1909, 1908,
	3193, 2452, 1263, 4901, 4865, 4683, 4682, 4681, 4612, 4611,
	2044, 2044, 4566, 3940, 4488, 4455, 3944, 4400, 4397, 2050,
	4395, 3945, 3947, 4299, 4279, 4223, 4172, 3202, 4069, 4059,
	4005, 3910, 3925, 3917, 3641, 3961, 3167, 3640, 3492, 2044,
	2044, 3444, 3178, 1265, 1265, 3170, 3147, 3146, 3145, 2047,
	3144, 3937, 3932, 3970, 3082, 3963, 3055, 2919, 2856, 2852,
	1564, 2841, 2840, 2829, 2038, 2568, 1145, 3985, 3987, 3889,
	2439, 2409, 2044, 2402, 1267, 1145, 2401, 4055, 2400, 3969,
	2399, 2942, 2398, 2311, 2285, 1564, 1564, 1564, 4062, 3104,
	1020, 2281, 1564, 1564, 1564, 2047, 2047, 4000, 2280, 2279,
	2278, 2277, 2086, 2085, 2084, 2082, 3121, 4046, 2736, 2736,
	2021, 3989, 1771, 1564, 1770, 1709, 4025, 1021, 1589, 1405,
	4047, 1588, 1587, 1586, 2047, 2047, 4050, 1585, 4017, 1584,
	4013, 4066, 3990, 4026, 1583, 1578, 1574, 1572, 4070, 1571,
	1262, 1262, 1514, 3991, 1513, 1405, 3999, 4049, 1145, 1145,
	1512, 1396, 1395, 4011, 1145, 1145, 2050, 2047, 1394, 1145,
	1145, 1393, 1145, 4030, 3978, 1392, 1356, 1145, 1312, 3370,
	1024, 1311, 1310, 1309, 1308, 1307, 1261, 1261, 1145, 3981,
	1306, 2331, 1304, 3979, 1299, 4033, 1298, 1297, 1296, 3477,
	1295, 1153, 1225, 4048, 1145, 897, 8, 2124, 4004, 2345,
	2347, 4056, 3399, 1044, 1030, 4057, 4051, 4067, 4588, 4061,
	4202, 4082, 2350, 4098, 4068, 4080, 4201, 3412, 4200, 4099,
	2435, 1335, 4107, 93, 2358, 1580, 2361, 2362, 2363, 859,
	87, 2237, 3924, 4035, 4796, 996, 4722, 271, 271, 271,
	4616, 699, 700, 3433, 715, 699, 715, 725, 1555, 867,
	765, 4081, 4111, 4092, 785, 1267, 4704, 4027, 3494, 791,
	3003, 2383, 1710, 1267, 2385, 3404, 271, 1405, 1405, 2801,
	1405, 1498, 4671, 4121, 1509, 1335, 3277, 1267, 4556, 4370,
	2642, 1913, 4152, 3358, 1263, 1263, 89, 904, 1564, 1564,
	2736, 2736, 2736, 2736, 271, 1129, 1175, 4290, 4289, 1405,
	4186, 3909, 3611, 4286, 4285, 2035, 2037, 1093, 1408, 4746,
	2135, 1135, 2151, 2144, 2842, 2718, 1152, 1149, 2039, 2041,
	1151, 1150, 2040, 1933, 1267, 4087, 1267, 1148, 2034, 4178,
	4179, 1265, 2044, 4137, 4037, 3102, 3667, 1630, 1628, 998,
	2139, 4155, 4157, 2562, 1335, 1335, 2626, 3266, 4213, 1346,
	1906, 1109, 1131, 2623, 4226, 1288, 1120, 1108, 3384, 1405,
	3363, 1346, 3654, 3867, 1346, 4228, 4229, 2474, 877, 3312,
	2629, 4160, 1279, 4212, 2742, 1405, 4151, 2734, 2730, 4154,
	4148, 3454, 182, 4149, 4150, 4144, 3092, 1787, 4153, 4384,
	4161, 1884, 3103, 4182, 1783, 4164, 1390, 1113, 4258, 2038,
	4260, 2560, 1897, 4170, 3244, 2484, 3661, 3407, 2835, 4728,
	3784, 4227, 1564, 1564, 3176, 2289, 4176, 2047, 1241, 1240,
	1286, 3409, 4184, 1239, 4710, 699, 699, 4707, 1262, 2227,
	4293, 3606, 3607, 271, 2127, 4283, 2880, 4168, 2572, 3624,
	1346, 1125, 1508, 2427, 4247, 2038, 2038, 3369, 4016, 4252,
	3412, 1591, 1405, 790, 4432, 1137, 1869, 1564, 4277, 3024,
	3023, 4577, 1375, 1373, 1261, 1372, 1371, 4874, 4209, 2044,
	4209, 3920, 3919, 3918, 2038, 2038, 238, 3212, 4280, 1808,
	1800, 235, 237, 236, 4245, 4300, 1564, 1564, 1564, 1564,
	1564, 4271, 3872, 4261, 3413, 4800, 3942, 3597, 23, 4276,
	22, 1405, 21, 116, 4328, 42, 20, 2038, 155, 4317,
	133, 4278, 1265, 1145, 1145, 1145, 4270, 4329, 4269, 152,
	1265, 4288, 151, 125, 4314, 4296, 4323, 150, 149, 4295,
	4284, 1405, 4332, 148, 1265, 147, 1145, 4231, 154, 1145,
	1145, 146, 4305, 145, 140, 144, 4242, 143, 142, 1145,
	4240, 4337, 2050, 4243, 2047, 141, 139, 1145, 1145, 137,
	3507, 3508, 138, 3509, 3510, 3511, 4330, 132, 136, 135,
	134, 131, 1263, 130, 1405, 129, 1564, 128, 127, 4362,
	126, 1265, 4344, 1265, 1503, 4346, 4343, 1403, 124, 1895,
	156, 123, 122, 1900, 121, 120, 119, 118, 4350, 117,
	1405, 4357, 778, 779, 61, 60, 115, 113, 1145, 1262,
	4367, 3549, 3550, 114, 3551, 3552, 3553, 1262, 4379, 19,
	40, 1145, 14, 65, 66, 18, 13, 4316, 35, 92,
	1145, 1262, 4351, 105, 104, 2050, 103, 36, 101, 100,
	34, 17, 16, 15, 1145, 1261, 98, 1145, 97, 96,
	33, 31, 11, 1261, 9, 4390, 4391, 4373, 37, 1994,
	12, 1145, 5, 4393, 3761, 4394, 187, 1261, 1405, 4406,
	186, 189, 4435, 185, 188, 1346, 91, 184, 1262, 183,
	1262, 3777, 90, 29, 10, 1564, 1564, 179, 4407, 4507,
	4023, 82, 181, 180, 2170, 178, 177, 4414, 176, 83,
	80, 4405, 175, 86, 174, 1267, 81, 85, 84, 27,
	6, 64, 7, 4478, 1261, 4352, 1261, 4446, 4447, 3704,
	108, 109, 38, 4466, 78, 4487, 77, 76, 75, 4498,
	26, 3608, 63, 25, 4457, 4506, 1405, 4452, 4491, 1564,
	4454, 173, 220, 219, 4456, 1509, 218, 4462, 217, 4464,
	216, 4465, 4495, 1263, 215, 214, 4463, 213, 208, 207,
	212, 1263, 210, 209, 211, 206, 4530, 2038, 4481, 230,
	4480, 1145, 1145, 4489, 229, 1263, 223, 222, 4484, 228,
	2736, 2736, 227, 226, 4483, 225, 4525, 224, 1145, 2050,
	4514, 221, 232, 1509, 4534, 205, 4536, 204, 4510, 4526,
	203, 4505, 201, 4528, 197, 4444, 196, 200, 202, 1346,
	4522, 199, 1346, 198, 195, 231, 3870, 72, 171, 172,
	4332, 4532, 1263, 4527, 1263, 4533, 71, 1145, 170, 1145,
	169, 1145, 168, 167, 4565, 166, 165, 4567, 164, 70,
	24, 1267, 2, 1, 0, 2872, 0, 4458, 0, 4209,
	0, 0, 0, 0, 1145, 4554, 1267, 4572, 0, 0,
	4470, 4545, 4546, 0, 4468, 2044, 4548, 0, 0, 0,
	2736, 2736, 2736, 2736, 2736, 2736, 2736, 2736, 2736, 2736,
	2736, 2736, 2736, 2736, 2736, 2736, 2736, 2736, 2736, 2736,
	4568, 2736, 0, 1281, 0, 4571, 0, 0, 3140, 0,
	0, 0, 0, 4600, 2038, 0, 4599, 1267, 1267, 0,
	0, 4592, 4593, 0, 1145, 1145, 4619, 0, 0, 0,
	0, 0, 0, 0, 1145, 0, 1301, 0, 0, 1267,
	0, 0, 1267, 0, 0, 0, 1564, 4607, 271, 0,
	271, 271, 0, 1330, 271, 1340, 1564, 0, 2044, 0,
	2047, 0, 4544, 0, 4633, 4634, 1354, 4608, 4614, 0,
	1145, 1145, 1265, 0, 785, 0, 0, 785, 0, 4631,
	1145, 0, 4667, 0, 4668, 4640, 4653, 4645, 4647, 4655,
	4648, 3028, 0, 4652, 0, 4209, 4609, 0, 0, 0,
	0, 271, 4665, 271, 271, 1330, 4660, 271, 271, 4510,
	4209, 0, 1340, 4666, 4664, 4661, 0, 4641, 4642, 0,
	0, 0, 0, 4663, 1145, 1145, 271, 1145, 1533, 4676,
	0, 1346, 0, 4680, 1346, 0, 0, 0, 0, 0,
	0, 3069, 0, 2047, 1553, 0, 0, 0, 0, 0,
	0, 1568, 0, 0, 0, 4727, 4719, 4730, 0, 4720,
	4675, 4209, 4209, 0, 4731, 4701, 4700, 4724, 0, 1262,
	1593, 4709, 4712, 1340, 0, 0, 0, 271, 271, 2301,
	1330, 4718, 0, 4209, 4692, 4693, 4209, 0, 4751, 0,
	0, 0, 0, 1145, 1145, 1145, 0, 0, 0, 0,
	0, 785, 0, 271, 271, 1261, 0, 0, 1265, 4736,
	0, 0, 2044, 0, 4713, 1656, 0, 4717, 4714, 4742,
	0, 0, 0, 1265, 4750, 1663, 1145, 0, 4749, 0,
	904, 4780, 0, 0, 4762, 4763, 0, 0, 4785, 4765,
	4764, 4781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4807, 2170,
	0, 0, 4809, 0, 4808, 0, 0, 0, 0, 0,
	4817, 0, 0, 4815, 1265, 1265, 0, 4799, 0, 1145,
	0, 0, 0, 0, 0, 0, 0, 4783, 0, 0,
	4487, 4828, 4814, 0, 0, 4813, 1265, 2047, 0, 1265,
	0, 0, 4823, 0, 0, 1262, 4844, 4822, 271, 0,
	0, 4834, 4835, 1263, 0, 4821, 4825, 0, 4840, 4795,
	1262, 4798, 4838, 4836, 0, 0, 0, 0, 0, 0,
	4847, 4861, 271, 0, 4850, 4860, 4859, 1267, 4848, 1267,
	0, 1261, 4868, 4730, 0, 2428, 4870, 0, 0, 0,
	4867, 4858, 4856, 4866, 0, 0, 1261, 4709, 0, 0,
	4712, 0, 0, 4875, 0, 0, 4876, 0, 0, 0,
	0, 1262, 1262, 0, 4159, 1346, 0, 0, 0, 0,
	4034, 4898, 4890, 0, 4869, 4892, 4871, 4900, 0, 4899,
	0, 0, 4905, 1262, 0, 798, 1262, 4903, 0, 0,
	4896, 0, 4902, 4174, 1145, 1145, 0, 1261, 1261, 0,
	2038, 0, 1145, 0, 1145, 1145, 4911, 4907, 0, 0,
	809, 4924, 4921, 0, 4923, 4926, 4917, 0, 0, 1261,
	0, 4928, 1261, 4929, 0, 4930, 4927, 4925, 4931, 0,
	0, 0, 0, 0, 0, 3104, 4083, 4934, 0, 1263,
	4935, 0, 4936, 2566, 4937, 4942, 0, 4940, 4938, 0,
	4946, 4939, 0, 0, 1263, 3696, 4945, 4948, 1145, 1895,
	0, 0, 4949, 0, 4951, 4942, 4953, 0, 3694, 0,
	0, 4209, 0, 4209, 0, 0, 0, 3687, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 4920, 0, 0,
	0, 0, 0, 0, 4918, 4919, 0, 0, 0, 0,
	0, 0, 0, 803, 0, 1263, 1263, 0, 73, 0,
	815, 0, 0, 0, 2741, 0, 0, 0, 0, 0,
	0, 0, 0, 699, 808, 74, 0, 1263, 0, 0,
	1263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 271, 0, 271, 0, 4950, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1330, 2014, 271, 0, 271, 2020,
	3241, 3242, 0, 807, 3689, 271, 0, 715, 0, 0,
	0, 88, 271, 0, 1265, 0, 1265, 0, 0, 3688,
	760, 0, 0, 0, 1335, 1403, 0, 2087, 0, 0,
	0, 0, 3696, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 805, 3694, 271, 0, 0, 0,
	0, 0, 898, 0, 3687, 4368, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 0, 110, 2038, 0, 0,
	0, 94, 107, 1335, 0, 3697, 0, 1817, 1818, 785,
	0, 0, 0, 1861, 1862, 1863, 0, 0, 0, 0,
	0, 0, 0, 3576, 0, 0, 0, 0, 4368, 0,
	1848, 0, 814, 0, 1335, 1335, 0, 1820, 0, 0,
	0, 1262, 0, 1262, 0, 0, 1867, 0, 3443, 0,
	0, 3601, 0, 0, 2498, 0, 0, 0, 0, 0,
	0, 95, 3628, 1873, 0, 0, 0, 0, 0, 1817,
	1818, 0, 1819, 0, 0, 0, 0, 1261, 0, 1261,
	0, 3689, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 1848, 0, 3471, 0, 3688, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 800, 0,
	0, 4298, 3339, 3340, 3341, 3342, 3677, 0, 0, 0,
	73, 0, 2498, 0, 4315, 1873, 0, 1498, 3699, 0,
	0, 0, 0, 3520, 1819, 0, 0, 74, 0, 804,
	0, 0, 0, 0, 0, 0, 0, 4336, 0, 0,
	0, 2736, 3697, 79, 0, 3534, 0, 3536, 0, 1509,
	0, 3695, 3690, 3691, 3692, 3693, 0, 1842, 1843, 1844,
	1845, 0, 0, 0, 271, 0, 759, 1825, 271, 0,
	0, 0, 0, 0, 0, 1263, 0, 1263, 3685, 0,
	3568, 810, 0, 88, 3574, 0, 0, 802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 99, 0, 0,
	2736, 0, 0, 0, 0, 0, 1858, 0, 0, 1868,
	0, 0, 0, 0, 0, 1847, 1849, 0, 0, 0,
	0, 0, 0, 0, 898, 0, 0, 0, 0, 1825,
	0, 0, 271, 0, 799, 0, 271, 0, 110, 0,
	1834, 1835, 271, 94, 107, 0, 0, 0, 271, 0,
	0, 0, 190, 102, 0, 0, 106, 0, 1856, 0,
	3636, 0, 806, 0, 271, 0, 271, 0, 0, 0,
	699, 0, 271, 1840, 0, 0, 761, 1847, 1849, 0,
	0, 0, 239, 0, 785, 0, 0, 801, 904, 0,
	899, 0, 0, 0, 0, 153, 1509, 0, 3695, 3690,
	3691, 3692, 3693, 95, 0, 0, 0, 1335, 0, 0,
	812, 813, 0, 0, 0, 0, 0, 271, 0, 1330,
	271, 0, 0, 2584, 2585, 2586, 2603, 2604, 2605, 0,
	241, 0, 0, 0, 785, 1840, 0, 0, 0, 0,
	0, 271, 0, 2606, 0, 0, 0, 0, 1870, 2382,
	1257, 0, 0, 0, 271, 271, 157, 271, 0, 271,
	1509, 271, 1509, 271, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 1873, 0, 0, 240,
	2736, 0, 0, 0, 0, 2741, 0, 0, 2419, 0,
	0, 2420, 233, 2421, 0, 2596, 266, 266, 695, 0,
	0, 234, 0, 1846, 2592, 271, 271, 271, 271, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2736, 0, 0, 0, 0, 1841, 0, 193, 2832,
	0, 0, 0, 0, 765, 0, 0, 0, 785, 0,
	0, 0, 1817, 1818, 0, 0, 2736, 0, 0, 99,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 2741, 2741, 0, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	2597, 2598, 2599, 2600, 1872, 0, 0, 0, 1841, 0,
	2591, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	0, 0, 0, 0, 190, 102, 0, 1819, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2574, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 899, 0, 0, 0, 1872, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 2601, 2602, 0, 3976, 0, 4618, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3740, 3741, 0, 0, 2594, 0, 4651, 0,
	0, 0, 699, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 1825, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 194, 0, 0, 699, 0, 0, 0,
	0, 240, 0, 271, 0, 699, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 233, 0, 0, 271, 2741, 2741,
	2741, 2741, 0, 234, 0, 0, 0, 0, 0, 0,
	1847, 1849, 4063, 4064, 4065, 0, 0, 271, 1340, 2345,
	4071, 4072, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811,
	3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821,
	3822, 3823, 0, 3827, 0, 0, 0, 1817, 1818, 0,
	1850, 1851, 1852, 1861, 1862, 1863, 271, 1340, 1840, 0,
	0, 715, 0, 0, 0, 2855, 0, 4737, 0, 0,
	1848, 271, 0, 4739, 271, 0, 0, 1820, 271, 0,
	271, 0, 0, 0, 0, 1330, 1867, 271, 271, 2595,
	1340, 1340, 2871, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 3980, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 1509, 1509, 0, 0, 0, 0, 0,
	0, 1836, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2908, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	1817, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 1100, 0, 0, 0, 0, 0, 0,
	0, 785, 0, 1848, 0, 0, 1509, 0, 0, 0,
	1820, 0, 0, 0, 0, 4166, 4167, 1842, 1843, 1844,
	1845, 1841, 271, 0, 0, 0, 0, 1825, 0, 0,
	0, 2301, 0, 0, 0, 0, 1873, 0, 0, 2581,
	2582, 2583, 2607, 2593, 2587, 1819, 2589, 2590, 2588, 2575,
	2576, 2577, 2578, 2579, 2580, 271, 3044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 1868,
	0, 0, 0, 0, 0, 1847, 1849, 0, 0, 1872,
	0, 0, 1533, 0, 0, 271, 0, 271, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 1817, 1818,
	1834, 1835, 0, 0, 3087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2908, 0, 699, 0, 1856, 0,
	0, 1848, 0, 0, 0, 3116, 904, 2908, 1820, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 2345,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	1825, 0, 1335, 0, 1873, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 271, 1330, 271,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 1340,
	271, 0, 0, 1330, 0, 1330, 0, 1330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 0, 4345, 0, 4347, 4348, 4349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 271, 271, 271, 1330, 0, 0, 1330,
	0, 271, 0, 0, 0, 0, 271, 1316, 0, 1316,
	1316, 0, 1509, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 1825, 0,
	0, 0, 4232, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 4241, 271, 1841, 4244, 2741, 2741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1400, 0, 0, 4396, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 1847, 1849, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 3315, 3316, 0, 3333, 3334,
	3335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4313, 0, 0, 0, 3748, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 2741, 2741,
	2741, 2741, 2741, 2741, 2741, 2741, 2741, 2741, 2741, 2741,
	2741, 2741, 2741, 2741, 2741, 2741, 2741, 2741, 0, 2741,
	0, 0, 1645, 1646, 0, 0, 0, 0, 0, 1841,
	0, 1533, 4482, 0, 0, 0, 1857, 0, 0, 0,
	3330, 0, 0, 0, 0, 0, 1831, 1832, 1838, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 1817, 1818, 0,
	1850, 1851, 1852, 1861, 1862, 1863, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	1848, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 1873, 1107, 3321, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 699, 0, 0, 3337,
	0, 699, 0, 0, 699, 1872, 0, 699, 699, 0,
	0, 0, 0, 699, 0, 0, 0, 0, 4469, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 1842, 1843, 1844,
	1845, 3331, 0, 0, 0, 0, 0, 1825, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 4376, 0, 0, 271, 271, 0, 0,
	1817, 1818, 0, 0, 0, 0, 1858, 0, 0, 1868,
	0, 0, 0, 2345, 0, 1847, 1849, 1821, 1822, 1823,
	1824, 1826, 1827, 1848, 0, 2908, 2908, 271, 0, 2014,
	1820, 1864, 0, 1865, 0, 2908, 1870, 0, 2020, 0,
	1834, 1835, 2301, 0, 0, 0, 2908, 2020, 0, 2908,
	2020, 0, 4417, 2020, 0, 0, 1873, 0, 1856, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 271, 271,
	2014, 0, 271, 1840, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 271, 0, 3539, 3539, 0, 2004,
	0, 1330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3332, 2015, 0, 1507, 0, 1866,
	0, 2908, 0, 2908, 0, 3565, 2908, 2014, 0, 0,
	2908, 2014, 0, 0, 785, 0, 0, 1855, 0, 4102,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1316, 1330,
	1842, 1843, 1844, 1845, 0, 1507, 271, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 3602, 0, 0, 3604,
	2908, 0, 0, 271, 0, 0, 0, 271, 0, 0,
	1340, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 1847, 1849,
	3087, 0, 0, 1330, 0, 271, 1841, 0, 2908, 0,
	699, 0, 4553, 0, 0, 0, 0, 2908, 0, 0,
	0, 0, 0, 1834, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 3327, 3328, 3329, 0, 0, 0,
	0, 3326, 3324, 3325, 3317, 3318, 3319, 3320, 3322, 3323,
	0, 0, 0, 4576, 0, 0, 1840, 0, 0, 163,
	0, 0, 0, 0, 1872, 0, 3710, 73, 0, 46,
	45, 0, 0, 0, 0, 0, 0, 0, 4598, 0,
	0, 0, 0, 0, 74, 0, 3716, 158, 0, 1533,
	0, 0, 1330, 271, 0, 271, 0, 0, 0, 0,
	79, 1330, 0, 0, 0, 0, 0, 4203, 0, 0,
	0, 67, 0, 0, 0, 0, 0, 0, 48, 0,
	160, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 271, 0, 0, 0, 1857, 0, 47, 0,
	88, 4196, 0, 2301, 0, 4189, 1831, 1832, 1838, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 4187, 1335, 0, 0, 4130, 50, 68, 0,
	4129, 4191, 0, 0, 0, 0, 51, 0, 0, 0,
	0, 57, 0, 0, 0, 161, 1846, 0, 0, 0,
	3782, 0, 0, 49, 0, 110, 4197, 0, 0, 0,
	94, 107, 0, 0, 0, 0, 1853, 0, 0, 1841,
	0, 2287, 0, 0, 0, 2294, 0, 0, 0, 0,
	0, 0, 1107, 1107, 1107, 0, 0, 2307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4190, 0,
	1489, 0, 52, 2319, 1489, 2319, 0, 0, 0, 0,
	0, 2326, 0, 0, 0, 0, 0, 0, 0, 73,
	95, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 271, 0,
	0, 0, 79, 0, 0, 0, 2294, 0, 0, 2354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 699, 699, 0, 0, 1092, 0, 0, 2741,
	2374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 0, 2390, 0, 2392, 0, 2394, 0,
	2396, 0, 2397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 1833, 0, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 898, 0, 0, 0, 0, 2741, 0,
	0, 0, 0, 0, 2424, 2425, 2426, 110, 0, 0,
	0, 0, 94, 107, 0, 0, 0, 0, 0, 0,
	4192, 0, 0, 0, 0, 4193, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 4198, 0, 0, 0, 0,
	0, 0, 0, 0, 53, 0, 785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	0, 0, 0, 0, 59, 0, 3315, 3316, 0, 3333,
	3334, 3335, 95, 0, 69, 0, 0, 4195, 0, 3539,
	58, 190, 102, 1853, 0, 106, 0, 0, 0, 54,
	0, 0, 271, 162, 4199, 0, 0, 0, 0, 0,
	0, 55, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 2014, 0, 271, 0, 0, 62,
	715, 715, 1340, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 159,
	0, 3330, 0, 0, 0, 0, 271, 3087, 0, 0,
	3087, 0, 0, 0, 0, 271, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 271, 0, 0, 1509, 0,
	271, 0, 0, 0, 0, 271, 0, 0, 2741, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 2908, 271, 0, 0, 0, 0,
	194, 0, 0, 0, 3116, 3116, 0, 0, 240, 0,
	904, 2908, 0, 0, 0, 0, 0, 0, 99, 2741,
	0, 233, 0, 0, 4194, 0, 0, 0, 0, 0,
	234, 0, 73, 0, 0, 0, 3321, 0, 271, 0,
	0, 0, 0, 0, 2741, 0, 2808, 0, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	3, 0, 0, 4204, 4205, 79, 0, 0, 0, 1853,
	0, 0, 0, 190, 102, 1853, 1335, 106, 3338, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3337, 0, 0, 239, 0, 88, 0, 0, 0, 0,
	0, 899, 0, 4122, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1489,
	2857, 0, 0, 1316, 0, 0, 0, 1316, 0, 1316,
	0, 0, 3331, 0, 0, 0, 898, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 2307, 0, 49, 0,
	110, 0, 0, 0, 0, 94, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 157, 0, 0,
	0, 1853, 1533, 0, 271, 0, 1853, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 271, 1853,
	240, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 1340, 0, 0, 1870, 0, 0,
	0, 0, 234, 0, 0, 95, 0, 1340, 0, 0,
	0, 0, 0, 0, 2908, 2908, 0, 3539, 2908, 0,
	0, 0, 0, 1107, 0, 4211, 0, 4211, 1533, 193,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 2908,
	0, 2020, 0, 0, 0, 1533, 1533, 271, 2014, 1853,
	0, 1507, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 2014, 0, 271, 2014, 0, 271, 0, 3539, 0,
	0, 0, 0, 0, 0, 3332, 0, 1349, 0, 0,
	0, 0, 0, 2908, 0, 2908, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1092, 1092, 1092, 0, 0, 0,
	0, 0, 0, 0, 2294, 0, 0, 0, 0, 0,
	2908, 2908, 0, 2307, 0, 0, 3087, 3087, 0, 0,
	0, 0, 0, 4302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 271, 0, 0, 0, 1535, 0,
	1541, 0, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 3138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 3149, 0, 3152, 0,
	0, 0, 0, 0, 0, 0, 190, 102, 1853, 0,
	106, 0, 0, 0, 0, 3327, 3328, 3329, 0, 0,
	0, 1853, 3326, 3324, 3325, 3317, 3318, 3319, 3320, 3322,
	3323, 1647, 0, 1652, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 899, 0, 1665, 0, 1670, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3184, 1507, 3186, 1507, 0, 0, 2740, 0, 0,
	3192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 241, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2908, 0, 2020,
	0, 0, 4409, 0, 0, 0, 1316, 0, 0, 0,
	157, 271, 0, 0, 3221, 0, 1735, 0, 0, 1741,
	0, 4433, 0, 4433, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 785, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 3539, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2014, 0, 271, 0, 0,
	0, 0, 1641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4409, 0, 0, 4211, 0, 0, 1533,
	0, 0, 0, 0, 0, 0, 2908, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 0,
	1894, 0, 0, 0, 0, 0, 1907, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3782, 0, 0, 0, 0, 0,
	1817, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3539, 4570, 0, 0, 0, 0,
	0, 0, 4409, 1848, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 1817, 1818, 0,
	0, 0, 4211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 1873, 4211, 0, 0,
	1848, 1966, 1966, 1966, 0, 1819, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 271,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 715, 0, 1873, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 4211, 4211,
	0, 0, 1839, 0, 4302, 0, 0, 0, 0, 0,
	0, 1836, 1489, 0, 0, 0, 0, 0, 0, 0,
	4211, 0, 271, 4211, 0, 0, 0, 0, 0, 3743,
	0, 0, 3422, 2020, 0, 0, 0, 0, 1489, 0,
	0, 0, 1533, 0, 1533, 0, 0, 0, 0, 0,
	1842, 1843, 1844, 1845, 0, 0, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 3738, 0, 0, 0,
	0, 1316, 0, 0, 0, 1507, 1507, 0, 0, 0,
	4690, 0, 0, 0, 0, 0, 0, 1842, 1843, 1844,
	1845, 0, 0, 0, 0, 1092, 4433, 1825, 0, 271,
	0, 0, 0, 0, 0, 0, 3467, 0, 1847, 1849,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 1835, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 1847, 1849, 3516, 3518, 0,
	0, 2307, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	1834, 1835, 0, 0, 0, 0, 0, 1853, 0, 0,
	3782, 1853, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 1533, 0, 1840, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	0, 1870, 0, 0, 0, 1853, 0, 1853, 1853, 1853,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 2740,
	2740, 1489, 0, 0, 0, 0, 0, 73, 4409, 0,
	0, 0, 3625, 0, 1853, 0, 3629, 0, 1870, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 2908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4211, 1841,
	4211, 0, 0, 1533, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 1841, 0, 1853, 0,
	0, 1853, 0, 0, 1853, 0, 0, 0, 0, 0,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1872, 0, 0,
	0, 898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3720, 49, 1507, 110, 0, 0, 0, 3116,
	94, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	2908, 0, 0, 0, 1872, 0, 0, 3315, 3316, 0,
	3333, 3334, 3335, 0, 3116, 0, 0, 0, 0, 0,
	0, 3733, 0, 0, 0, 0, 1853, 0, 0, 3336,
	0, 2740, 2740, 2740, 2740, 0, 2406, 0, 1853, 0,
	1853, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	95, 0, 0, 1837, 1833, 0, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0, 0,
	0, 2433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3330, 0, 0, 0, 0, 0, 0, 0,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 0, 2473, 0, 2477,
	0, 0, 0, 0, 0, 0, 2491, 0, 0, 0,
	0, 0, 0, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 0,
	2541, 0, 2543, 2544, 2545, 2546, 2711, 2712, 2713, 2714,
	2707, 2708, 2709, 2710, 0, 0, 0, 3321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2570, 0,
	0, 0, 0, 0, 0, 0, 99, 0, 0, 0,
	1894, 0, 0, 0, 2621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2651, 2654, 2657, 2660, 0, 0, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 0, 0, 0, 0, 0, 0, 0,
	0, 3337, 0, 0, 0, 0, 2687, 2688, 2689, 2690,
	0, 190, 102, 0, 2732, 106, 2744, 2746, 2751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2699,
	2700, 2701, 2702, 2695, 2696, 2697, 2698, 2703, 2704, 2705,
	2706, 239, 0, 3331, 0, 0, 0, 0, 0, 899,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 1853, 0, 1853, 0, 0, 2683, 2684, 2685,
	2686, 2691, 2692, 2693, 2694, 157, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 1489, 2307, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 2307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4012, 0, 1489, 0, 0,
	0, 0, 0, 0, 4022, 0, 0, 1639, 0, 0,
	0, 0, 1489, 0, 0, 0, 3332, 0, 0, 2307,
	0, 0, 0, 0, 4040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 1853, 0, 0, 0, 1141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4085, 0, 0,
	1107, 0, 270, 270, 270, 0, 0, 0, 1853, 1853,
	0, 2740, 2740, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3336, 3336, 0, 0, 1853,
	1853, 828, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 828,
	3047, 3048, 0, 3050, 0, 1853, 3327, 3328, 3329, 0,
	0, 0, 0, 3326, 3324, 3325, 3317, 3318, 3319, 3320,
	3322, 3323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740,
	2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740,
	2740, 0, 2740, 3336, 3336, 3336, 3336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1264, 0,
	3168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 0, 0, 4230, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1848, 0, 0, 0,
	0, 0, 2307, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 1874, 1875, 0, 0, 0, 0, 1819, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 1839, 1489,
	0, 0, 1489, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2307, 0, 0, 0, 0, 3224, 3225,
	0, 0, 0, 4324, 3231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3245, 3246, 0, 0, 0, 0, 2621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3269, 0, 1858, 0, 0, 1868, 0, 0, 0, 0,
	0, 1847, 1849, 0, 0, 0, 0, 3281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 1865,
	0, 0, 0, 0, 0, 0, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	4419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	1853, 1489, 0, 1853, 3336, 3336, 1853, 0, 0, 0,
	1853, 0, 0, 0, 0, 1866, 0, 1853, 0, 2751,
	2751, 2751, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 1855, 1966, 0, 2307, 0, 0, 0,
	0, 0, 3374, 0, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 1853, 1853, 1853, 1853, 0, 0,
	0, 0, 0, 1853, 0, 1853, 0, 0, 3336, 3336,
	3336, 3336, 3336, 3336, 3336, 3336, 3336, 3336, 3336, 3336,
	3336, 3336, 3336, 3336, 3336, 3336, 3336, 3336, 0, 0,
	0, 3336, 0, 0, 1853, 1853, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 4543,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1092, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1092, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	1872, 0, 0, 270, 0, 270, 270, 0, 0, 270,
	0, 0, 0, 0, 0, 3497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 270, 270,
	0, 0, 270, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 828, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 3290, 0, 0, 0, 3291, 0, 0, 0,
	0, 4654, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 1489, 0, 0, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 1853, 0, 0, 4703, 1853,
	1853, 0, 0, 1853, 1853, 0, 0, 0, 1853, 0,
	0, 0, 1853, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2740, 0, 0, 0, 0, 0, 0, 0,
	848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4744, 0, 0,
	850, 0, 0, 0, 0, 851, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 1489, 1489, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2740, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 852, 0, 869, 0, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2491, 0,
	0, 0, 0, 0, 3735, 3736, 0, 0, 3739, 0,
	0, 853, 3742, 0, 0, 0, 854, 0, 0, 0,
	0, 3746, 0, 0, 0, 0, 0, 0, 0, 0,
	3753, 0, 0, 0, 0, 3374, 0, 0, 878, 0,
	0, 0, 0, 0, 0, 855, 0, 0, 1489, 0,
	3766, 0, 0, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	3789, 3790, 0, 3791, 3792, 3793, 0, 0, 0, 1268,
	0, 0, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 3799, 0, 0, 0, 3801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 856, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 0, 0, 0, 0, 760, 0, 0, 3830, 3831,
	0, 0, 0, 0, 0, 0, 0, 1853, 1853, 1853,
	0, 1489, 0, 0, 1817, 1818, 3842, 0, 1853, 1853,
	3336, 2740, 0, 0, 0, 0, 0, 1853, 0, 0,
	1853, 3851, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1489, 3336, 2740, 0, 0, 0, 0, 879, 0, 1988,
	1873, 1264, 0, 0, 0, 270, 0, 874, 1853, 1819,
	0, 0, 0, 0, 0, 0, 1853, 2740, 0, 1839,
	1489, 270, 1988, 270, 1853, 0, 0, 0, 1836, 0,
	828, 0, 0, 1853, 0, 0, 0, 828, 0, 0,
	0, 0, 0, 3901, 0, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 0, 0, 0, 0, 0,
	0, 3912, 0, 1489, 270, 0, 0, 1854, 1848, 858,
	0, 270, 0, 0, 0, 1820, 0, 0, 0, 0,
	860, 0, 0, 3737, 1867, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 3941, 0, 0, 0, 0,
	0, 1873, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	1819, 861, 0, 0, 1825, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 3336, 0, 1836,
	0, 0, 0, 0, 0, 0, 1107, 0, 0, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	3336, 759, 0, 1853, 0, 0, 0, 1489, 0, 0,
	0, 0, 1847, 1849, 847, 0, 871, 0, 0, 0,
	0, 0, 3336, 0, 0, 862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	868, 0, 0, 0, 0, 1842, 1843, 1844, 1845, 0,
	0, 0, 0, 0, 0, 1825, 0, 863, 0, 0,
	1840, 864, 883, 1853, 882, 1489, 0, 0, 865, 1817,
	1818, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 866, 0, 0, 0, 4058, 875, 0, 0,
	0, 0, 1848, 884, 1858, 881, 0, 1868, 0, 1820,
	0, 761, 0, 1847, 1849, 0, 0, 0, 0, 270,
	0, 0, 0, 828, 0, 0, 0, 0, 0, 1864,
	0, 1865, 0, 0, 0, 1873, 0, 0, 1834, 1835,
	0, 0, 0, 0, 1819, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1856, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 4100,
	4101, 1840, 0, 0, 0, 4105, 4106, 0, 0, 0,
	4109, 4110, 0, 0, 0, 1853, 0, 270, 4114, 0,
	0, 270, 0, 0, 0, 0, 0, 270, 0, 4118,
	1846, 0, 0, 270, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 4123, 0, 1866, 3230, 270,
	0, 270, 0, 1841, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 1870, 0, 0, 1825,
	0, 0, 0, 1107, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 270, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 0, 1268, 0,
	0, 0, 1268, 0, 0, 0, 270, 1847, 1849, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 828,
	270, 0, 270, 0, 270, 0, 270, 0, 270, 0,
	0, 0, 1834, 1835, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1268, 1853, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 1107, 1840, 0, 0, 0, 0,
	270, 270, 270, 270, 0, 0, 0, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 1268, 1872, 0, 0, 0, 0, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 1831, 1832, 1838, 1860, 1837, 1833,
	0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	0, 0, 0, 0, 2617, 1846, 0, 0, 2618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4363, 4364, 4365, 1854, 1848, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 2491, 0, 0,
	4374, 4375, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 1873, 1264, 0, 0, 0, 0, 0, 4383, 4386,
	1819, 0, 0, 0, 0, 0, 0, 0, 1264, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4434, 0, 0, 0, 0, 0, 0, 0,
	0, 4442, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 4450, 0, 0, 1092, 0,
	0, 270, 0, 0, 0, 1842, 1843, 1844, 1845, 0,
	0, 0, 4459, 0, 0, 1825, 270, 0, 0, 270,
	0, 0, 0, 270, 0, 270, 0, 0, 0, 0,
	0, 0, 270, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 1817, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 1868, 0, 0,
	0, 0, 0, 1847, 1849, 0, 0, 1848, 0, 0,
	1268, 0, 1268, 0, 1820, 0, 0, 0, 0, 1864,
	0, 1865, 0, 0, 0, 0, 0, 1268, 1834, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	1873, 0, 0, 0, 0, 0, 1856, 2051, 0, 1819,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 1839,
	0, 1840, 0, 0, 0, 270, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4575, 0,
	0, 0, 4579, 3223, 0, 1855, 0, 0, 0, 0,
	828, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 1268,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	270, 0, 828, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 1849, 0, 1092, 1092, 0, 0, 0,
	0, 0, 0, 0, 1841, 4649, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 1834, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 270, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 2491, 0, 0, 270, 0, 0, 0, 0,
	1840, 4386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1092, 270, 270, 270,
	270, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 1831, 1832, 1838, 1860, 1837, 1833,
	270, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	0, 0, 0, 0, 4761, 4761, 4761, 0, 4128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 1268, 0, 1268,
	0, 1268, 0, 0, 0, 0, 0, 4784, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 1268,
	1268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 0, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 1268, 0, 1268, 1268, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1848, 0,
	4761, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 1872, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 0, 0, 0, 0, 2051, 2051, 1268, 0, 0,
	0, 0, 0, 0, 0, 4761, 4912, 0, 0, 0,
	0, 0, 0, 4916, 0, 1842, 1843, 1844, 1845, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1848, 0, 0, 1858, 0, 1264, 1868, 1820, 0,
	0, 0, 0, 1847, 1849, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	1268, 1865, 0, 0, 1873, 0, 1988, 0, 1834, 1835,
	0, 0, 0, 1819, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 1839, 0, 0, 1856, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 270, 270, 1268, 0, 0, 0, 0, 0, 0,
	1268, 0, 0, 0, 1817, 1818, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 270, 0, 0, 0, 1268, 1848, 0, 0,
	0, 0, 0, 0, 1820, 1855, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 0, 1870, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 270, 270, 0, 0, 270, 0, 1819,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 1858, 1836, 270,
	1868, 0, 0, 0, 0, 0, 1847, 1849, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 1865, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 0, 1268, 0, 1825, 0, 0, 0, 0, 828,
	0, 0, 1872, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 2051, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	1264, 0, 1847, 1849, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 1835, 1268,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833,
	0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	1840, 0, 0, 0, 1846, 1154, 0, 0, 3751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 270, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0,
	0, 272, 272, 272, 1859, 0, 0, 0, 0, 0,
	1854, 1848, 0, 0, 0, 0, 1268, 270, 1820, 0,
	0, 0, 0, 0, 0, 1870, 0, 1867, 0, 1268,
	272, 1268, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 1268, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 3293, 0, 0, 0, 0, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 1264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	1868, 0, 0, 0, 0, 0, 1847, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 1865, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 1837, 1833, 1856,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 728, 0, 0, 1840, 0, 729, 0, 0, 1146,
	0, 0, 0, 0, 0, 0, 0, 0, 1130, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 732, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	733, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	270, 0, 0, 734, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 1841, 0, 0,
	270, 0, 0, 0, 0, 0, 735, 0, 0, 736,
	270, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	270, 0, 0, 0, 1859, 0, 760, 0, 0, 0,
	0, 1268, 1268, 0, 0, 0, 0, 0, 0, 0,
	1264, 1067, 0, 0, 0, 0, 0, 1268, 0, 0,
	750, 0, 1087, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	1268, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1251, 0, 2051, 0, 0, 0, 1268, 0, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 3292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2051, 0, 0, 0, 0, 0, 757,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	758, 0, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 1264, 0, 0, 0, 0, 0, 0, 0, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 1268, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 0, 755, 756, 753, 0, 0,
	0, 0, 0, 748, 0, 0, 741, 0, 0, 0,
	0, 0, 272, 0, 272, 272, 0, 0, 272, 0,
	1988, 0, 1988, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 1268,
	0, 0, 270, 1268, 0, 0, 0, 0, 742, 0,
	749, 1268, 0, 0, 0, 0, 0, 0, 270, 743,
	0, 270, 1268, 0, 0, 272, 1409, 272, 272, 0,
	1409, 272, 272, 744, 0, 0, 0, 0, 752, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 1268, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 0,
	1268, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 272, 272, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 1409, 272, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	1268, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1848, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 2051, 0,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 0, 0, 1268, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 272, 0, 1268, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 2051, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 276, 0, 0,
	0, 0, 0, 2051, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 1843, 1844, 1845, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 270, 1268, 1268, 0, 0, 0, 0, 0,
	1407, 0, 820, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 1858, 0, 0, 1868, 0, 1268,
	820, 0, 0, 1847, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 1566, 112, 1864,
	112, 1865, 0, 0, 0, 0, 0, 0, 1834, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 270, 0, 0, 0,
	0, 1840, 0, 1566, 0, 0, 0, 0, 0, 0,
	1566, 0, 1087, 112, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1566, 0, 0, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 112, 1866, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 1988, 0, 0,
	272, 272, 272, 0, 0, 0, 1870, 0, 0, 272,
	0, 0, 1988, 0, 1566, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 1268, 0, 0, 0,
	0, 112, 0, 272, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 1988, 1988, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1988, 0, 270, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 1268, 1268, 0, 0, 0, 1067, 1268,
	1268, 1268, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1887,
	1268, 0, 0, 0, 270, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1893, 0, 0,
	0, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2051, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 1831, 1832, 1838, 1860, 1837, 1833,
	0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	1409, 1409, 272, 0, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 1268, 1989, 0, 112, 0, 0, 0, 1407,
	1268, 0, 0, 0, 1268, 1268, 272, 1268, 0, 0,
	272, 0, 0, 0, 1268, 0, 272, 0, 0, 0,
	0, 0, 272, 0, 0, 1268, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 272, 0,
	272, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 1409, 0, 1409,
	0, 1268, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 1988, 0, 1409, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 272, 0, 0, 272, 0, 1268, 0, 0, 0,
	0, 0, 1409, 0, 1409, 1409, 1409, 0, 0, 0,
	0, 0, 1268, 0, 0, 272, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 272, 272,
	0, 272, 0, 272, 0, 272, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	1268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	272, 272, 272, 0, 0, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1268, 1268, 1268, 1268, 1268, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 1566, 0, 0, 1406, 0,
	0, 0, 1406, 0, 1407, 0, 0, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2051,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1565, 0, 0, 0, 0,
	0, 1268, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1565, 0, 0, 0, 0, 0, 0, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1566,
	0, 1566, 2051, 1566, 1565, 0, 0, 0, 1087, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1566, 1566, 0, 0, 0, 0, 0, 1409, 0,
	0, 0, 0, 0, 1566, 1268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1566, 0, 1566, 1566,
	1566, 272, 1268, 1268, 1409, 0, 0, 0, 0, 0,
	0, 0, 1565, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 112, 1268, 0, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1848, 0, 0, 0,
	272, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 272, 0, 0, 272, 0,
	0, 0, 272, 0, 272, 0, 0, 0, 0, 1873,
	0, 272, 272, 0, 0, 0, 2051, 0, 1819, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 1067, 1407,
	0, 1067, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 0, 0, 0, 0, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 2559, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 1087, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 1893, 0, 0,
	0, 1893, 1407, 0, 1268, 1268, 272, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 0, 1268,
	0, 0, 1858, 1268, 0, 1868, 0, 0, 745, 272,
	0, 1847, 1849, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 728, 1865,
	0, 0, 0, 729, 0, 0, 1834, 1835, 0, 272,
	0, 272, 1407, 0, 1251, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 1856, 0, 0, 1406, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 1407, 1840,
	0, 820, 730, 0, 1409, 0, 0, 0, 820, 0,
	0, 0, 0, 731, 0, 0, 0, 1409, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 272, 0, 732, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 272, 0, 272, 0, 0, 751, 0, 0, 0,
	0, 0, 0, 1855, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 0, 0, 0, 0, 272, 272, 272, 272,
	0, 0, 0, 735, 0, 272, 736, 0, 0, 1846,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 1407, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 750, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 1268, 747, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1565, 1565, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 738, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 3289, 112, 1566, 0,
	112, 0, 0, 0, 0, 0, 112, 758, 0, 739,
	0, 1566, 0, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 0, 0, 0, 1565, 0, 1565,
	0, 1565, 0, 0, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 740, 0, 1565,
	1565, 0, 755, 756, 753, 0, 0, 0, 0, 0,
	748, 0, 1565, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 1565, 0, 1565, 1565, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	820, 0, 0, 0, 0, 742, 0, 749, 0, 0,
	1409, 0, 0, 0, 0, 0, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 0, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	746, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 1406, 0, 2559,
	272, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 272, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 1409, 0, 1409, 0, 0,
	0, 1409, 0, 0, 0, 0, 1406, 0, 272, 1409,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	1409, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 272,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 1409, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 272, 1409, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 112, 0, 112,
	112, 112, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 112, 112, 0,
	112, 112, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 820, 0, 1566, 0, 0, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 1566,
	0, 1566, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 1848, 1566, 0, 0, 1565, 0, 0, 1820,
	0, 0, 0, 0, 1566, 0, 0, 0, 1867, 1565,
	0, 1565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 1565, 0,
	0, 0, 0, 0, 1819, 0, 0, 1409, 0, 0,
	0, 0, 1251, 0, 1839, 1087, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 1566, 112,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 1868, 0, 0, 0, 0, 272, 1847, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 1864, 1409, 1865, 0, 0, 0, 0,
	272, 0, 1834, 1835, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 1840, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 1409, 1409, 0, 0, 0, 112, 1409, 1409, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 1251, 1251, 0, 0, 1409, 0,
	0, 0, 272, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 1409, 1409, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 1409, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 1566, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 272, 0, 0,
	272, 0, 0, 0, 0, 0, 112, 0, 0, 1566,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 1566, 1566, 1566, 0, 0, 0,
	0, 1566, 1566, 1566, 0, 0, 0, 1409, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 112, 1406, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 272, 0,
	0, 0, 1409, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 0, 0, 0, 0, 0, 0,
	0, 1409, 1409, 1409, 1409, 1409, 0, 1565, 0, 1565,
	0, 0, 0, 1406, 0, 0, 1409, 0, 0, 0,
	820, 1565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1565, 112, 0, 1409,
	0, 1409, 0, 1251, 0, 0, 1407, 1407, 1565, 1407,
	1565, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 1566, 1566, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 1407, 0,
	0, 0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852,
	1861, 1862, 1863, 0, 0, 0, 0, 1406, 0, 0,
	1406, 0, 0, 0, 0, 0, 1854, 1848, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 1407, 0,
	1873, 272, 0, 0, 0, 0, 0, 0, 0, 1819,
	1409, 1409, 0, 0, 1407, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1566, 1566, 0, 1406, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 1407, 0, 0, 272, 272, 1566, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 0, 0, 112, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1566, 1566, 1566, 1566, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 1868, 0, 0, 0,
	0, 0, 1847, 1849, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	1865, 0, 0, 0, 0, 0, 0, 1834, 1835, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 1566, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 1566, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 1565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 1407, 0, 0, 1566, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 2559, 0, 0,
	1859, 0, 0, 0, 0, 0, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1565, 1854, 1848,
	0, 1872, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 1565, 1565, 1565, 0, 0, 0, 0, 1565,
	1565, 1565, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	1565, 1839, 0, 0, 0, 0, 1406, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 1831, 1832, 1838, 1860, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 3288, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 0, 0, 112, 1566, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 1566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 1868, 0,
	0, 0, 0, 0, 1847, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 1406, 0, 1406, 0, 0,
	1864, 0, 1865, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 1565, 1565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1565,
	1565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 0, 0, 1565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 1565, 1565, 1565, 1565, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1406, 0, 1565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 3287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1565, 1565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 1565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	1410, 287, 288, 1411, 1412, 1413, 0, 1414, 641, 1415,
	1416, 1417, 1418, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 1419,
	646, 299, 300, 301, 302, 303, 304, 1420, 1421, 0,
	305, 647, 648, 649, 1422, 306, 307, 650, 1423, 1490,
	1424, 308, 309, 310, 311, 312, 313, 314, 0, 1425,
	316, 317, 318, 315, 319, 1426, 320, 0, 321, 322,
	323, 324, 325, 326, 1427, 327, 328, 329, 1209, 330,
	331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 1435,
	343, 339, 341, 1436, 344, 342, 345, 1437, 346, 347,
	348, 1438, 1439, 349, 350, 351, 1440, 352, 353, 1441,
	354, 355, 356, 1442, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	1443, 277, 1444, 1565, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 1565, 374, 1445, 375, 376, 377, 1446,
	1447, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1448, 390, 659, 1449,
	660, 391, 1450, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 1212, 397, 398, 1451, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 1452, 1211, 406,
	664, 665, 1453, 666, 1454, 407, 408, 1213, 667, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 1455, 419, 421, 420, 1456, 422,
	668, 1216, 423, 424, 1217, 1457, 425, 426, 427, 428,
	429, 430, 433, 1458, 1459, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1460, 279, 1220, 476, 477, 1461, 669,
	478, 670, 480, 481, 1462, 0, 482, 0, 1463, 1464,
	484, 485, 486, 1465, 1466, 487, 488, 671, 1221, 489,
	1222, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 1467, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	1468, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 1469, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	1470, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 1471, 566, 567, 565, 568,
	569, 570, 1472, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	1473, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 1474, 598, 599,
	0, 595, 586, 1475, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 1476, 608, 682, 683, 684, 685, 1477,
	617, 1478, 609, 610, 611, 686, 612, 687, 1479, 613,
	614, 615, 616, 0, 618, 619, 1480, 1481, 620, 621,
	622, 624, 625, 623, 626, 1482, 627, 1483, 0, 628,
	629, 630, 688, 689, 690, 1484, 632, 631, 633, 691,
	634, 635, 1485, 1486, 1487, 1488, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1404, 0, 0, 0, 0, 0, 0, 0, 2786,
	0, 0, 0, 0, 0, 0, 0, 2787, 280, 282,
	281, 283, 284, 285, 286, 1410, 287, 288, 1411, 1412,
	1413, 0, 1414, 641, 1415, 1416, 1417, 1418, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 1419, 646, 299, 300, 301, 302,
	303, 304, 1420, 1421, 0, 305, 647, 648, 649, 1422,
	306, 307, 650, 1423, 1490, 1424, 308, 309, 310, 311,
	312, 313, 314, 0, 1425, 316, 317, 318, 315, 319,
	1426, 320, 0, 321, 322, 323, 324, 325, 326, 1427,
	327, 328, 329, 1209, 330, 331, 332, 1428, 1429, 1431,
	1430, 1432, 1433, 1434, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 1435, 343, 339, 341, 1436, 344,
	342, 345, 1437, 346, 347, 348, 1438, 1439, 349, 350,
	351, 1440, 352, 353, 1441, 354, 355, 356, 1442, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 1443, 277, 1444, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	1445, 375, 376, 377, 1446, 1447, 1210, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1448, 390, 659, 1449, 660, 391, 1450, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 1212, 397, 398,
	1451, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 1452, 1211, 406, 664, 665, 1453, 666, 1454,
	407, 408, 1213, 667, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 1455,
	419, 421, 420, 1456, 422, 668, 1216, 423, 424, 1217,
	1457, 425, 426, 427, 428, 429, 430, 433, 1458, 1459,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 1460, 279,
	1220, 476, 477, 1461, 669, 478, 670, 480, 481, 1462,
	0, 482, 0, 1463, 1464, 484, 485, 486, 1465, 1466,
	487, 488, 671, 1221, 489, 1222, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 1467,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 1468, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 1469, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 1470, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	1471, 566, 567, 565, 568, 569, 570, 1472, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 1473, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 1474, 598, 599, 0, 595, 586, 1475, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 1476, 608,
	682, 683, 684, 685, 1477, 617, 1478, 609, 610, 611,
	686, 612, 687, 1479, 613, 614, 615, 616, 0, 618,
	619, 1480, 1481, 620, 621, 622, 624, 625, 623, 626,
	1482, 627, 1483, 0, 628, 629, 630, 688, 689, 690,
	1484, 632, 631, 633, 691, 634, 635, 1485, 1486, 1487,
	1488, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 0, 0, 3760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3762, 280, 282, 281, 283, 284, 285, 286, 1410, 287,
	288, 1411, 1412, 1413, 0, 1414, 641, 1415, 1416, 1417,
	1418, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 1419, 646, 299,
	300, 301, 302, 303, 304, 1420, 1421, 0, 305, 647,
	648, 649, 1422, 306, 307, 650, 1423, 1490, 1424, 308,
	309, 310, 311, 312, 313, 314, 0, 1425, 316, 317,
	318, 315, 319, 1426, 320, 0, 321, 322, 323, 324,
	325, 326, 1427, 327, 328, 329, 1209, 330, 331, 332,
	1428, 1429, 1431, 1430, 1432, 1433, 1434, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 1435, 343, 339,
	341, 1436, 344, 342, 345, 1437, 346, 347, 348, 1438,
	1439, 349, 350, 351, 1440, 352, 353, 1441, 354, 355,
	356, 1442, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 1443, 277,
	1444, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 1445, 375, 376, 377, 1446, 1447, 1210,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1448, 390, 659, 1449, 660, 391,
	1450, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	1212, 397, 398, 1451, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 1452, 1211, 406, 664, 665,
	1453, 666, 1454, 407, 408, 1213, 667, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 1455, 419, 421, 420, 1456, 422, 668, 1216,
	423, 424, 1217, 1457, 425, 426, 427, 428, 429, 430,
	433, 1458, 1459, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1460, 279, 1220, 476, 477, 1461, 669, 478, 670,
	480, 481, 1462, 0, 482, 0, 1463, 1464, 484, 485,
	486, 1465, 1466, 487, 488, 671, 1221, 489, 1222, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 1467, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 1468, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 1469, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 1470, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 1471, 566, 567, 565, 568, 569, 570,
	1472, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 1473, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 1474, 598, 599, 0, 595,
	586, 1475, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 1476, 608, 682, 683, 684, 685, 1477, 617, 1478,
	609, 610, 611, 686, 612, 687, 1479, 613, 614, 615,
	616, 0, 618, 619, 1480, 1481, 620, 621, 622, 624,
	625, 623, 626, 1482, 627, 1483, 0, 628, 629, 630,
	688, 689, 690, 1484, 632, 631, 633, 691, 634, 635,
	1485, 1486, 1487, 1488, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4158, 280, 282,
	281, 283, 284, 285, 286, 1410, 287, 288, 1411, 1412,
	1413, 0, 1414, 641, 1415, 1416, 1417, 1418, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 1419, 646, 299, 300, 301, 302,
	303, 304, 1420, 1421, 0, 305, 647, 648, 649, 1422,
	306, 307, 650, 1423, 1490, 1424, 308, 309, 310, 311,
	312, 313, 314, 0, 1425, 316, 317, 318, 315, 319,
	1426, 320, 0, 321, 322, 323, 324, 325, 326, 1427,
	327, 328, 329, 1209, 330, 331, 332, 1428, 1429, 1431,
	1430, 1432, 1433, 1434, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 1435, 343, 339, 341, 1436, 344,
	342, 345, 1437, 346, 347, 348, 1438, 1439, 349, 350,
	351, 1440, 352, 353, 1441, 354, 355, 356, 1442, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 1443, 277, 1444, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	1445, 375, 376, 377, 1446, 1447, 1210, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1448, 390, 659, 1449, 660, 391, 1450, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 1212, 397, 398,
	1451, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 1452, 1211, 406, 664, 665, 1453, 666, 1454,
	407, 408, 1213, 667, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 1455,
	419, 421, 420, 1456, 422, 668, 1216, 423, 424, 1217,
	1457, 425, 426, 427, 428, 429, 430, 433, 1458, 1459,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 1460, 279,
	1220, 476, 477, 1461, 669, 478, 670, 480, 481, 1462,
	0, 482, 0, 1463, 1464, 484, 485, 486, 1465, 1466,
	487, 488, 671, 1221, 489, 1222, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 1467,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 1468, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 1469, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 1470, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	1471, 566, 567, 565, 568, 569, 570, 1472, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 1473, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 1474, 598, 599, 0, 595, 586, 1475, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 1476, 608,
	682, 683, 684, 685, 1477, 617, 1478, 609, 610, 611,
	686, 612, 687, 1479, 613, 614, 615, 616, 0, 618,
	619, 1480, 1481, 620, 621, 622, 624, 625, 623, 626,
	1482, 627, 1483, 0, 628, 629, 630, 688, 689, 690,
	1484, 632, 631, 633, 691, 634, 635, 1485, 1486, 1487,
	1488, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4156, 280, 282, 281, 283, 284,
	285, 286, 1410, 287, 288, 1411, 1412, 1413, 0, 1414,
	641, 1415, 1416, 1417, 1418, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 1419, 646, 299, 300, 301, 302, 303, 304, 1420,
	1421, 0, 305, 647, 648, 649, 1422, 306, 307, 650,
	1423, 1490, 1424, 308, 309, 310, 311, 312, 313, 314,
	0, 1425, 316, 317, 318, 315, 319, 1426, 320, 0,
	321, 322, 323, 324, 325, 326, 1427, 327, 328, 329,
	1209, 330, 331, 332, 1428, 1429, 1431, 1430, 1432, 1433,
	1434, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 1435, 343, 339, 341, 1436, 344, 342, 345, 1437,
	346, 347, 348, 1438, 1439, 349, 350, 351, 1440, 352,
	353, 1441, 354, 355, 356, 1442, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 1443, 277, 1444, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 1445, 375, 376,
	377, 1446, 1447, 1210, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1448, 390,
	659, 1449, 660, 391, 1450, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 1212, 397, 398, 1451, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 1452,
	1211, 406, 664, 665, 1453, 666, 1454, 407, 408, 1213,
	667, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 1455, 419, 421, 420,
	1456, 422, 668, 1216, 423, 424, 1217, 1457, 425, 426,
	427, 428, 429, 430, 433, 1458, 1459, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1460, 279, 1220, 476, 477,
	1461, 669, 478, 670, 480, 481, 1462, 0, 482, 0,
	1463, 1464, 484, 485, 486, 1465, 1466, 487, 488, 671,
	1221, 489, 1222, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 1467, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 1468, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 1469,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 1470, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 1471, 566, 567,
	565, 568, 569, 570, 1472, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 1473, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 1474,
	598, 599, 0, 595, 586, 1475, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 1476, 608, 682, 683, 684,
	685, 1477, 617, 1478, 609, 610, 611, 686, 612, 687,
	1479, 613, 614, 615, 616, 0, 618, 619, 1480, 1481,
	620, 621, 622, 624, 625, 623, 626, 1482, 627, 1483,
	0, 628, 629, 630, 688, 689, 690, 1484, 632, 631,
	633, 691, 634, 635, 1485, 1486, 1487, 1488, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4369, 280, 282, 281,
	283, 284, 285, 286, 1410, 287, 288, 1411, 1412, 1413,
	0, 1414, 641, 1415, 1416, 1417, 1418, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 1419, 646, 299, 300, 301, 302, 303,
	304, 1420, 1421, 0, 305, 647, 648, 649, 1422, 306,
	307, 650, 1423, 1490, 1424, 308, 309, 310, 311, 312,
	313, 314, 0, 1425, 316, 317, 318, 315, 319, 1426,
	320, 0, 321, 322, 323, 324, 325, 326, 1427, 327,
	328, 329, 1209, 330, 331, 332, 1428, 1429, 1431, 1430,
	1432, 1433, 1434, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 1435, 343, 339, 341, 1436, 344, 342,
	345, 1437, 346, 347, 348, 1438, 1439, 349, 350, 351,
	1440, 352, 353, 1441, 354, 355, 356, 1442, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 1443, 277, 1444, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 1445,
	375, 376, 377, 1446, 1447, 1210, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1448, 390, 659, 1449, 660, 391, 1450, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 1212, 397, 398, 1451,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 1452, 1211, 406, 664, 665, 1453, 666, 1454, 407,
	408, 1213, 667, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 1455, 419,
	421, 420, 1456, 422, 668, 1216, 423, 424, 1217, 1457,
	425, 426, 427, 428, 429, 430, 433, 1458, 1459, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1460, 279, 1220,
	476, 477, 1461, 669, 478, 670, 480, 481, 1462, 0,
	482, 0, 1463, 1464, 484, 485, 486, 1465, 1466, 487,
	488, 671, 1221, 489, 1222, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 1467, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 1468, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 1469, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 1470, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 1471,
	566, 567, 565, 568, 569, 570, 1472, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 1473, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 1474, 598, 599, 0, 595, 586, 1475, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 1476, 608, 682,
	683, 684, 685, 1477, 617, 1478, 609, 610, 611, 686,
	612, 687, 1479, 613, 614, 615, 616, 0, 618, 619,
	1480, 1481, 620, 621, 622, 624, 625, 623, 626, 1482,
	627, 1483, 0, 628, 629, 630, 688, 689, 690, 1484,
	632, 631, 633, 691, 634, 635, 1485, 1486, 1487, 1488,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4239, 280,
	282, 281, 283, 284, 285, 286, 1410, 287, 288, 1411,
	1412, 1413, 0, 1414, 641, 1415, 1416, 1417, 1418, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 1419, 646, 299, 300, 301,
	302, 303, 304, 1420, 1421, 0, 305, 647, 648, 649,
	1422, 306, 307, 650, 1423, 1490, 1424, 308, 309, 310,
	311, 312, 313, 314, 0, 1425, 316, 317, 318, 315,
	319, 1426, 320, 0, 321, 322, 323, 324, 325, 326,
	1427, 327, 328, 329, 1209, 330, 331, 332, 1428, 1429,
	1431, 1430, 1432, 1433, 1434, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 1435, 343, 339, 341, 1436,
	344, 342, 345, 1437, 346, 347, 348, 1438, 1439, 349,
	350, 351, 1440, 352, 353, 1441, 354, 355, 356, 1442,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 1443, 277, 1444, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 1445, 375, 376, 377, 1446, 1447, 1210, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1448, 390, 659, 1449, 660, 391, 1450, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 1212, 397,
	398, 1451, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 1452, 1211, 406, 664, 665, 1453, 666,
	1454, 407, 408, 1213, 667, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	1455, 419, 421, 420, 1456, 422, 668, 1216, 423, 424,
	1217, 1457, 425, 426, 427, 428, 429, 430, 433, 1458,
	1459, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1460,
	279, 1220, 476, 477, 1461, 669, 478, 670, 480, 481,
	1462, 0, 482, 0, 1463, 1464, 484, 485, 486, 1465,
	1466, 487, 488, 671, 1221, 489, 1222, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	1467, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 1468, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 1469, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 1470, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 1471, 566, 567, 565, 568, 569, 570, 1472, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 1473, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 1474, 598, 599, 0, 595, 586, 1475,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 1476,
	608, 682, 683, 684, 685, 1477, 617, 1478, 609, 610,
	611, 686, 612, 687, 1479, 613, 614, 615, 616, 0,
	618, 619, 1480, 1481, 620, 621, 622, 624, 625, 623,
	626, 1482, 627, 1483, 0, 628, 629, 630, 688, 689,
	690, 1484, 632, 631, 633, 691, 634, 635, 1485, 1486,
	1487, 1488, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4086, 280, 282, 281, 283, 284, 285, 286, 1410, 287,
	288, 1411, 1412, 1413, 0, 1414, 641, 1415, 1416, 1417,
	1418, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 1419, 646, 299,
	300, 301, 302, 303, 304, 1420, 1421, 0, 305, 647,
	648, 649, 1422, 306, 307, 650, 1423, 1490, 1424, 308,
	309, 310, 311, 312, 313, 314, 0, 1425, 316, 317,
	318, 315, 319, 1426, 320, 0, 321, 322, 323, 324,
	325, 326, 1427, 327, 328, 329, 1209, 330, 331, 332,
	1428, 1429, 1431, 1430, 1432, 1433, 1434, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 1435, 343, 339,
	341, 1436, 344, 342, 345, 1437, 346, 347, 348, 1438,
	1439, 349, 350, 351, 1440, 352, 353, 1441, 354, 355,
	356, 1442, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 1443, 277,
	1444, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 1445, 375, 376, 377, 1446, 1447, 1210,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1448, 390, 659, 1449, 660, 391,
	1450, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	1212, 397, 398, 1451, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 1452, 1211, 406, 664, 665,
	1453, 666, 1454, 407, 408, 1213, 667, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 1455, 419, 421, 420, 1456, 422, 668, 1216,
	423, 424, 1217, 1457, 425, 426, 427, 428, 429, 430,
	433, 1458, 1459, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1460, 279, 1220, 476, 477, 1461, 669, 478, 670,
	480, 481, 1462, 0, 482, 0, 1463, 1464, 484, 485,
	486, 1465, 1466, 487, 488, 671, 1221, 489, 1222, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 1467, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 1468, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 1469, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 1470, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 1471, 566, 567, 565, 568, 569, 570,
	1472, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 1473, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 1474, 598, 599, 0, 595,
	586, 1475, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 1476, 608, 682, 683, 684, 685, 1477, 617, 1478,
	609, 610, 611, 686, 612, 687, 1479, 613, 614, 615,
	616, 0, 618, 619, 1480, 1481, 620, 621, 622, 624,
	625, 623, 626, 1482, 627, 1483, 0, 628, 629, 630,
	688, 689, 690, 1484, 632, 631, 633, 691, 634, 635,
	1485, 1486, 1487, 1488, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3778, 280, 282, 281, 283, 284, 285, 286,
	1410, 287, 288, 1411, 1412, 1413, 0, 1414, 641, 1415,
	1416, 1417, 1418, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 1419,
	646, 299, 300, 301, 302, 303, 304, 1420, 1421, 0,
	305, 647, 648, 649, 1422, 306, 307, 650, 1423, 1490,
	1424, 308, 309, 310, 311, 312, 313, 314, 0, 1425,
	316, 317, 318, 315, 319, 1426, 320, 0, 321, 322,
	323, 324, 325, 326, 1427, 327, 328, 329, 1209, 330,
	331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 1435,
	343, 339, 341, 1436, 344, 342, 345, 1437, 346, 347,
	348, 1438, 1439, 349, 350, 351, 1440, 352, 353, 1441,
	354, 355, 356, 1442, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	1443, 277, 1444, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 1445, 375, 376, 377, 1446,
	1447, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1448, 390, 659, 1449,
	660, 391, 1450, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 1212, 397, 398, 1451, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 1452, 1211, 406,
	664, 665, 1453, 666, 1454, 407, 408, 1213, 667, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 1455, 419, 421, 420, 1456, 422,
	668, 1216, 423, 424, 1217, 1457, 425, 426, 427, 428,
	429, 430, 433, 1458, 1459, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1460, 279, 1220, 476, 477, 1461, 669,
	478, 670, 480, 481, 1462, 0, 482, 0, 1463, 1464,
	484, 485, 486, 1465, 1466, 487, 488, 671, 1221, 489,
	1222, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 1467, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	1468, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 1469, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	1470, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 1471, 566, 567, 565, 568,
	569, 570, 1472, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	1473, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 1474, 598, 599,
	0, 595, 586, 1475, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 1476, 608, 682, 683, 684, 685, 1477,
	617, 1478, 609, 610, 611, 686, 612, 687, 1479, 613,
	614, 615, 616, 0, 618, 619, 1480, 1481, 620, 621,
	622, 624, 625, 623, 626, 1482, 627, 1483, 0, 628,
	629, 630, 688, 689, 690, 1484, 632, 631, 633, 691,
	634, 635, 1485, 1486, 1487, 1488, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3599, 280, 282, 281, 283, 284,
	285, 286, 1410, 287, 288, 1411, 1412, 1413, 0, 1414,
	641, 1415, 1416, 1417, 1418, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 1419, 646, 299, 300, 301, 302, 303, 304, 1420,
	1421, 0, 305, 647, 648, 649, 1422, 306, 307, 650,
	1423, 1490, 1424, 308, 309, 310, 311, 312, 313, 314,
	0, 1425, 316, 317, 318, 315, 319, 1426, 320, 0,
	321, 322, 323, 324, 325, 326, 1427, 327, 328, 329,
	1209, 330, 331, 332, 1428, 1429, 1431, 1430, 1432, 1433,
	1434, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 1435, 343, 339, 341, 1436, 344, 342, 345, 1437,
	346, 347, 348, 1438, 1439, 349, 350, 351, 1440, 352,
	353, 1441, 354, 355, 356, 1442, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 1443, 277, 1444, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 1445, 375, 376,
	377, 1446, 1447, 1210, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1448, 390,
	659, 1449, 660, 391, 1450, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 1212, 397, 398, 1451, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 1452,
	1211, 406, 664, 665, 1453, 666, 1454, 407, 408, 1213,
	667, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 1455, 419, 421, 420,
	1456, 422, 668, 1216, 423, 424, 1217, 1457, 425, 426,
	427, 428, 429, 430, 433, 1458, 1459, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1460, 279, 1220, 476, 477,
	1461, 669, 478, 670, 480, 481, 1462, 0, 482, 0,
	1463, 1464, 484, 485, 486, 1465, 1466, 487, 488, 671,
	1221, 489, 1222, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 1467, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 1468, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 1469,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 1470, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 1471, 566, 567,
	565, 568, 569, 570, 1472, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 1473, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 1474,
	598, 599, 0, 595, 586, 1475, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 1476, 608, 682, 683, 684,
	685, 1477, 617, 1478, 609, 610, 611, 686, 612, 687,
	1479, 613, 614, 615, 616, 0, 618, 619, 1480, 1481,
	620, 621, 622, 624, 625, 623, 626, 1482, 627, 1483,
	0, 628, 629, 630, 688, 689, 690, 1484, 632, 631,
	633, 691, 634, 635, 1485, 1486, 1487, 1488, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2641, 280, 282, 281,
	283, 284, 285, 286, 1410, 287, 288, 1411, 1412, 1413,
	0, 1414, 641, 1415, 1416, 1417, 1418, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 1419, 646, 299, 300, 301, 302, 303,
	304, 1420, 1421, 0, 305, 647, 648, 649, 1422, 306,
	307, 650, 1423, 1490, 1424, 308, 309, 310, 311, 312,
	313, 314, 0, 1425, 316, 317, 318, 315, 319, 1426,
	320, 0, 321, 322, 323, 324, 325, 326, 1427, 327,
	328, 329, 1209, 330, 331, 332, 1428, 1429, 1431, 1430,
	1432, 1433, 1434, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 1435, 343, 339, 341, 1436, 344, 342,
	345, 1437, 346, 347, 348, 1438, 1439, 349, 350, 351,
	1440, 352, 353, 1441, 354, 355, 356, 1442, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 1443, 277, 1444, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 1445,
	375, 376, 377, 1446, 1447, 1210, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1448, 390, 659, 1449, 660, 391, 1450, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 1212, 397, 398, 1451,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 1452, 1211, 406, 664, 665, 1453, 666, 1454, 407,
	408, 1213, 667, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 1455, 419,
	421, 420, 1456, 422, 668, 1216, 423, 424, 1217, 1457,
	425, 426, 427, 428, 429, 430, 433, 1458, 1459, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1460, 279, 1220,
	476, 477, 1461, 669, 478, 670, 480, 481, 1462, 0,
	482, 0, 1463, 1464, 484, 485, 486, 1465, 1466, 487,
	488, 671, 1221, 489, 1222, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 1467, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 1468, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 1469, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 1470, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 1471,
	566, 567, 565, 568, 569, 570, 1472, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 1473, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 1474, 598, 599, 0, 595, 586, 1475, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 1476, 608, 682,
	683, 684, 685, 1477, 617, 1478, 609, 610, 611, 686,
	612, 687, 1479, 613, 614, 615, 616, 0, 618, 619,
	1480, 1481, 620, 621, 622, 624, 625, 623, 626, 1482,
	627, 1483, 0, 628, 629, 630, 688, 689, 690, 1484,
	632, 631, 633, 691, 634, 635, 1485, 1486, 1487, 1488,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	1501, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2266, 280,
	282, 281, 283, 284, 285, 286, 1410, 287, 288, 1411,
	1412, 1413, 0, 1414, 641, 1415, 1416, 1417, 1418, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 1419, 646, 299, 300, 301,
	302, 303, 304, 1420, 1421, 0, 305, 647, 648, 649,
	1422, 306, 307, 650, 1423, 1490, 1424, 308, 309, 310,
	311, 312, 313, 314, 0, 1425, 316, 317, 318, 315,
	319, 1426, 320, 0, 321, 322, 323, 324, 325, 326,
	1427, 327, 328, 329, 1209, 330, 331, 332, 1428, 1429,
	1431, 1430, 1432, 1433, 1434, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 1435, 343, 339, 341, 1436,
	344, 342, 345, 1437, 346, 347, 348, 1438, 1439, 349,
	350, 351, 1440, 352, 353, 1441, 354, 355, 356, 1442,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 1443, 277, 1444, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 1445, 375, 376, 377, 1446, 1447, 1210, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1448, 390, 659, 1449, 660, 391, 1450, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 1212, 397,
	398, 1451, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 1452, 1211, 406, 664, 665, 1453, 666,
	1454, 407, 408, 1213, 667, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	1455, 419, 421, 420, 1456, 422, 668, 1216, 423, 424,
	1217, 1457, 425, 426, 427, 428, 429, 430, 433, 1458,
	1459, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1460,
	279, 1220, 476, 477, 1461, 669, 478, 670, 480, 481,
	1462, 0, 482, 0, 1463, 1464, 484, 485, 486, 1465,
	1466, 487, 488, 671, 1221, 489, 1222, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	1467, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 1468, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 1469, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 1470, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 1471, 566, 567, 565, 568, 569, 570, 1472, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 1473, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 1474, 598, 599, 0, 595, 586, 1475,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 1476,
	608, 682, 683, 684, 685, 1477, 617, 1478, 609, 610,
	611, 686, 612, 687, 1479, 613, 614, 615, 616, 0,
	618, 619, 1480, 1481, 620, 621, 622, 624, 625, 623,
	626, 1482, 627, 1483, 0, 628, 629, 630, 688, 689,
	690, 1484, 632, 631, 633, 691, 634, 635, 1485, 1486,
	1487, 1488, 636, 637, 692, 638, 639, 640, 1401, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 1410, 287, 288, 1411, 1412, 1413,
	0, 1414, 641, 1415, 1416, 1417, 1418, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 1419, 646, 299, 300, 301, 302, 303,
	304, 1420, 1421, 0, 305, 647, 648, 649, 1422, 306,
	307, 650, 1423, 1490, 1424, 308, 309, 310, 311, 312,
	313, 314, 0, 1425, 316, 317, 318, 315, 319, 1426,
	320, 0, 321, 322, 323, 324, 325, 326, 1427, 327,
	328, 329, 1209, 330, 331, 332, 1428, 1429, 1431, 1430,
	1432, 1433, 1434, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 1435, 343, 339, 341, 1436, 344, 342,
	345, 1437, 346, 347, 348, 1438, 1439, 349, 350, 351,
	1440, 352, 353, 1441, 354, 355, 356, 1442, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 1443, 277, 1444, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 1445,
	375, 376, 377, 1446, 1447, 1210, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1448, 390, 659, 1449, 660, 391, 1450, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 1212, 397, 398, 1451,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 1452, 1211, 406, 664, 665, 1453, 666, 1454, 407,
	408, 1213, 667, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 1455, 419,
	421, 420, 1456, 422, 668, 1216, 423, 424, 1217, 1457,
	425, 426, 427, 428, 429, 430, 433, 1458, 1459, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1460, 279, 1220,
	476, 477, 1461, 669, 478, 670, 480, 481, 1462, 0,
	482, 0, 1463, 1464, 484, 485, 486, 1465, 1466, 487,
	488, 671, 1221, 489, 1222, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 1467, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 1468, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 1469, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 1470, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 1471,
	566, 567, 565, 568, 569, 570, 1472, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 1473, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 1474, 598, 599, 0, 595, 586, 1475, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 1476, 608, 682,
	683, 684, 685, 1477, 617, 1478, 609, 610, 611, 686,
	612, 687, 1479, 613, 614, 615, 616, 0, 618, 619,
	1480, 1481, 620, 621, 622, 624, 625, 623, 626, 1482,
	627, 1483, 0, 628, 629, 630, 688, 689, 690, 1484,
	632, 631, 633, 691, 634, 635, 1485, 1486, 1487, 1488,
	636, 637, 692, 638, 639, 640, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	1410, 287, 288, 1411, 1412, 1413, 0, 1414, 641, 1415,
	1416, 1417, 1418, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 1419,
	646, 299, 300, 301, 302, 303, 304, 1420, 1421, 0,
	305, 647, 648, 649, 1422, 306, 307, 650, 1423, 1490,
	1424, 308, 309, 310, 311, 312, 313, 314, 0, 1425,
	316, 317, 318, 315, 319, 1426, 320, 0, 321, 322,
	323, 324, 325, 326, 1427, 327, 328, 329, 1209, 330,
	331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 1435,
	343, 339, 341, 1436, 344, 342, 345, 1437, 346, 347,
	348, 1438, 1439, 349, 350, 351, 1440, 352, 353, 1441,
	354, 355, 356, 1442, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	1443, 277, 1444, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 1445, 375, 376, 377, 1446,
	1447, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1448, 390, 659, 1449,
	660, 391, 1450, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 1212, 397, 398, 1451, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 1452, 1211, 406,
	664, 665, 1453, 666, 1454, 407, 408, 1213, 667, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 1455, 419, 421, 420, 1456, 422,
	668, 1216, 423, 424, 1217, 1457, 425, 426, 427, 428,
	429, 430, 433, 1458, 1459, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1460, 279, 1220, 476, 477, 1461, 669,
	478, 670, 480, 481, 1462, 0, 482, 0, 1463, 1464,
	484, 485, 486, 1465, 1466, 487, 488, 671, 1221, 489,
	1222, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 1467, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	1468, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 1469, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	1470, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 1471, 566, 567, 565, 568,
	569, 570, 1472, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	1473, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 1474, 598, 599,
	0, 595, 586, 1475, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 1476, 608, 682, 683, 684, 685, 1477,
	617, 1478, 609, 610, 611, 686, 612, 687, 1479, 613,
	614, 615, 616, 0, 618, 619, 1480, 1481, 620, 621,
	622, 624, 625, 623, 626, 1482, 627, 1483, 0, 628,
	629, 630, 688, 689, 690, 1484, 632, 631, 633, 691,
	634, 635, 1485, 1486, 1487, 1488, 636, 637, 692, 638,
	639, 640, 2616, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 2613, 287,
	288, 0, 0, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 2614,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 1178, 1179,
	0, 1139, 0, 407, 408, 1213, 1171, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1207, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 1111, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1182,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 1112, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 1180, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 1227, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 1098, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 1192, 1193, 1194, 1195, 0, 617, 0,
	609, 610, 611, 1204, 612, 1205, 1122, 613, 614, 615,
	616, 0, 618, 619, 0, 1105, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	688, 1189, 1226, 2612, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 2615, 0, 0, 0, 0, 0, 0, 1128,
	2611, 0, 1088, 1126, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 1178, 1179,
	0, 1139, 0, 407, 408, 1213, 1171, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1207, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 1111, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1182,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 1112, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 239, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 1180, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 1227, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 1098, 595,
	586, 241, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 1192, 1193, 1194, 1195, 0, 617, 0,
	609, 610, 611, 1204, 612, 1205, 1122, 613, 614, 615,
	616, 0, 618, 619, 0, 1105, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	1637, 1189, 1226, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 233, 636, 637, 692, 638, 639, 640,
	1102, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 1898,
	1896, 0, 0, 1126, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 1211, 406, 1178, 1179, 0, 1139,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1101,
	279, 1220, 476, 477, 1124, 1172, 478, 1186, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	1111, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1182, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 1112, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 239, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 1180, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 1227, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 1098, 595, 586, 241,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 1192, 1193, 1194, 1195, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 1122, 613, 614, 615, 616, 0,
	618, 619, 0, 1105, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 1637, 1189,
	1226, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 233, 636, 637, 692, 638, 639, 640, 1102, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 0, 1095, 1096,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 1898, 3243, 0,
	0, 1126, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 1220,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 239,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 241, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 618, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 1637, 1189, 1226, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 233,
	636, 637, 692, 638, 639, 640, 1102, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 1898, 1896, 0, 0, 1126,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 1181, 0, 297, 1188, 298,
	1187, 2747, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 2752, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	1211, 406, 1178, 1179, 0, 1139, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	2748, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1101, 279, 1220, 476, 477,
	1124, 1172, 478, 1186, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 1111, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1182, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 1112, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 1180,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 1227, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 1098, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 1192, 1193, 1194,
	1195, 0, 617, 2749, 609, 610, 611, 1204, 612, 1205,
	1122, 613, 614, 615, 616, 0, 618, 619, 0, 1105,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 688, 1189, 1226, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1102, 0, 0, 2661, 0, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0,
	0, 0, 0, 0, 1095, 1096, 280, 282, 281, 283,
	284, 285, 286, 1128, 287, 288, 0, 1126, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 0, 0, 0,
	0, 0, 0, 0, 1128, 2659, 0, 2658, 1126, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 0, 0, 0,
	0, 0, 0, 0, 1128, 2656, 0, 2655, 1126, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 0, 0, 0,
	0, 0, 0, 0, 1128, 2653, 0, 2652, 1126, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 0, 0, 0,
	0, 0, 0, 0, 1128, 2650, 0, 1737, 1126, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 1736, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 1091, 0,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 280, 282, 281,
	283, 284, 285, 286, 1128, 287, 288, 0, 1126, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 1220,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 1106, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 618, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 688, 1189, 1226, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1102, 0, 0, 0,
	0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 4715, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 1211, 406, 1178, 1179, 0, 1139, 0,
	407, 408, 1213, 1171, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1207, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 1162, 1161,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 1101, 279,
	1220, 476, 477, 1124, 1172, 478, 1186, 480, 481, 0,
	0, 482, 0, 1106, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 1201, 490, 491, 1111,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	1202, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 1182, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 1112, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1165, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 1180, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 1227, 589, 590, 591, 592, 1203,
	596, 597, 0, 598, 599, 1098, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	1192, 1193, 1194, 1195, 0, 617, 0, 609, 610, 611,
	1204, 612, 1205, 1122, 613, 614, 615, 616, 0, 618,
	619, 0, 1105, 620, 621, 622, 624, 625, 623, 626,
	1166, 627, 0, 0, 628, 629, 630, 688, 1189, 1226,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1102, 0, 0,
	0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 2493,
	403, 404, 405, 0, 1211, 406, 1178, 1179, 0, 1139,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1101,
	279, 1220, 476, 477, 1124, 1172, 478, 1186, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	1111, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 2492, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1182, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 1112, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 1180, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 1227, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 1098, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 1192, 1193, 1194, 1195, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 1122, 613, 614, 615, 616, 0,
	618, 619, 0, 1105, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 688, 1189,
	1226, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1102, 0,
	0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 1097, 0, 0, 0, 0, 0, 0, 1095, 1096,
	280, 282, 281, 283, 284, 285, 286, 1128, 287, 288,
	0, 1126, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	649, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 1211, 406, 1178, 1179, 0,
	1139, 0, 407, 408, 1213, 1171, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1207, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	1162, 1161, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186, 480,
	481, 0, 0, 482, 0, 1106, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 1201, 490,
	491, 1111, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 1202, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1182, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 1112, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1165,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 1180, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 1227, 589, 590, 591,
	592, 1203, 596, 597, 0, 598, 599, 1098, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 1192, 1193, 1194, 1195, 0, 617, 0, 609,
	610, 611, 1204, 612, 1205, 1122, 613, 614, 615, 616,
	0, 618, 619, 0, 1105, 620, 621, 622, 624, 625,
	623, 626, 1166, 627, 0, 0, 628, 629, 630, 688,
	1189, 1226, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1102,
	0, 0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	4453, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 1178, 1179,
	0, 1139, 0, 407, 408, 1213, 1171, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1207, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186,
	480, 481, 0, 0, 482, 0, 1106, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 1111, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1182,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 1112, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 1180, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 1227, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 1098, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 1192, 1193, 1194, 1195, 0, 617, 0,
	609, 610, 611, 1204, 612, 1205, 1122, 613, 614, 615,
	616, 0, 618, 619, 0, 1105, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	688, 1189, 1226, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1102, 0, 0, 0, 0, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 4052, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 1967, 0, 0, 0, 0, 0, 0,
	1128, 0, 0, 0, 1126, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 3756, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 0, 0, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 280, 282, 281, 283, 284, 285, 286,
	1128, 287, 288, 0, 1126, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1101, 279, 1220, 476, 477, 1124, 1172,
	478, 1186, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 1111, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1182, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	1112, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 1180, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 1227,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	1098, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 1192, 1193, 1194, 1195, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 1122, 613,
	614, 615, 616, 0, 618, 619, 0, 1105, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 688, 1189, 1226, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 1967, 0, 0, 0, 0, 0,
	0, 1128, 0, 0, 0, 1126, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	2752, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1101, 279, 1220, 476, 477, 1124, 1172,
	478, 1186, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 1111, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1182, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	1112, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 1180, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 1227,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	1098, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 1192, 1193, 1194, 1195, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 1122, 613,
	614, 615, 616, 0, 618, 619, 0, 1105, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 688, 1189, 1226, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1102, 0, 0, 0, 0, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 649, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 1211,
	406, 1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1207, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 1162, 1161, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 1101, 279, 1220, 476, 477, 1124,
	1172, 478, 1186, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 1201, 490, 491, 1111, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 1202, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1182, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 1112, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1165, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 1180, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	1227, 589, 590, 591, 592, 1203, 596, 597, 0, 598,
	599, 1098, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 1192, 1193, 1194, 1195,
	0, 617, 0, 609, 610, 611, 1204, 612, 1205, 1122,
	613, 614, 615, 616, 0, 618, 619, 0, 1105, 620,
	621, 622, 624, 625, 623, 626, 1166, 627, 0, 0,
	628, 629, 630, 688, 1189, 1226, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 0, 0, 0, 0, 0,
	0, 0, 1128, 1896, 0, 2757, 1126, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 649, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 1211,
	406, 1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1207, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 1162, 1161, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 1101, 279, 1220, 476, 477, 1124,
	1172, 478, 1186, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 1201, 490, 491, 1111, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 1202, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1182, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 1112, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1165, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 1180, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	1227, 589, 590, 591, 592, 1203, 596, 597, 0, 598,
	599, 1098, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 1192, 1193, 1194, 1195,
	0, 617, 0, 609, 610, 611, 1204, 612, 1205, 1122,
	613, 614, 615, 616, 0, 618, 619, 0, 1105, 620,
	621, 622, 624, 625, 623, 626, 1166, 627, 0, 0,
	628, 629, 630, 688, 1189, 1226, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1102, 0, 0, 2755, 0, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	1211, 406, 1178, 1179, 0, 1139, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1101, 279, 1220, 476, 477,
	1124, 1172, 478, 1186, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 1111, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1182, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 1112, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 1180,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 1227, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 1098, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 1192, 1193, 1194,
	1195, 0, 617, 0, 609, 610, 611, 1204, 612, 1205,
	1122, 613, 614, 615, 616, 0, 618, 619, 0, 1105,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 688, 1189, 1226, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1102, 0, 0, 2743, 0, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0,
	0, 0, 0, 0, 1095, 1096, 280, 282, 281, 283,
	284, 285, 286, 1128, 287, 288, 0, 1126, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 2731, 0,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 280, 282, 281,
	283, 284, 285, 286, 1128, 287, 288, 0, 1126, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 1220,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 618, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 688, 1189, 1226, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1102, 0, 0, 2729,
	0, 2720, 2727, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	2723, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 2724, 396, 1169, 1170, 1173, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 1211, 406, 1178, 1179, 0, 1139, 0,
	407, 408, 1213, 1171, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1207, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 1162, 1161,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 2725, 443, 2722, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 1101, 279,
	1220, 476, 477, 1124, 1172, 478, 1186, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 1201, 490, 491, 1111,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	1202, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 1182, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 1112, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 2726,
	0, 566, 567, 565, 568, 569, 570, 1165, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 1180, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 1227, 589, 590, 591, 592, 1203,
	596, 597, 0, 598, 599, 1098, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	1192, 1193, 1194, 1195, 0, 617, 0, 609, 610, 611,
	1204, 612, 1205, 1122, 613, 614, 615, 616, 0, 618,
	619, 0, 1105, 620, 621, 622, 624, 625, 623, 626,
	1166, 627, 0, 0, 628, 629, 630, 688, 1189, 1226,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 2721, 640, 1102, 0, 0,
	2717, 0, 2720, 2727, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 2723, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 2724, 396, 1169, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 1211, 406, 1178, 1179, 0, 1139,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 2725, 443, 2722, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1101,
	279, 1220, 476, 477, 1124, 1172, 478, 1186, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	1111, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1182, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 1112, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	2726, 0, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 1180, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 1227, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 1098, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 1192, 1193, 1194, 1195, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 1122, 613, 614, 615, 616, 0,
	618, 619, 0, 1105, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 688, 1189,
	1226, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 2721, 640, 1102, 0,
	0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 1097, 0, 0, 0, 0, 0, 0, 1095, 1096,
	280, 282, 281, 283, 284, 285, 286, 1128, 287, 288,
	0, 1126, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	649, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 1211, 406, 1178, 1179, 0,
	1139, 0, 407, 408, 1213, 1171, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1207, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	1162, 1161, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 1201, 490,
	491, 1111, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 1202, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1182, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 1112, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1165,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 1180, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 1227, 589, 590, 591,
	592, 1203, 596, 597, 0, 598, 599, 1098, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 1192, 1193, 1194, 1195, 0, 617, 0, 609,
	610, 611, 1204, 612, 1205, 1122, 613, 614, 615, 616,
	0, 618, 619, 0, 1105, 620, 621, 622, 624, 625,
	623, 626, 1166, 627, 0, 0, 628, 629, 630, 688,
	1189, 1226, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 0, 0, 0, 0, 0, 1904, 0, 1128, 0,
	0, 0, 1126, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 2472, 287, 288,
	0, 0, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	649, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 1211, 406, 1178, 1179, 0,
	1139, 0, 407, 408, 1213, 1171, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1207, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	1162, 1161, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 1201, 490,
	491, 1111, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 1202, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1182, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 1112, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1165,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 1180, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 1227, 589, 590, 591,
	592, 1203, 596, 597, 0, 598, 599, 1098, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 1192, 1193, 1194, 1195, 0, 617, 0, 609,
	610, 611, 1204, 612, 1205, 1122, 613, 614, 615, 616,
	0, 618, 619, 0, 1105, 620, 621, 622, 624, 625,
	623, 626, 1166, 627, 0, 0, 628, 629, 630, 688,
	1189, 1226, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1102,
	0, 0, 2434, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 1178, 1179,
	0, 1139, 0, 407, 408, 1213, 1171, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1207, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 1111, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1182,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 1112, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 1180, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 1227, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 1098, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 1192, 1193, 1194, 1195, 0, 617, 0,
	609, 610, 611, 1204, 612, 1205, 1122, 613, 614, 615,
	616, 0, 618, 619, 0, 1105, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	688, 1189, 1226, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1102, 0, 0, 2407, 0, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 1742, 0, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 280, 282, 281, 283, 284, 285, 286,
	1128, 287, 288, 0, 1126, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1101, 279, 1220, 476, 477, 1124, 1172,
	478, 1186, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 1111, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1182, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	1112, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 1180, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 1227,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	1098, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 1192, 1193, 1194, 1195, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 1122, 613,
	614, 615, 616, 0, 618, 619, 0, 1105, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 688, 1189, 1226, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1102, 0, 0, 1671, 0, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 649, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 1211,
	406, 1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1207, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 1162, 1161, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 1101, 279, 1220, 476, 477, 1124,
	1172, 478, 1186, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 1201, 490, 491, 1111, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 1202, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1182, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 1112, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1165, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 1180, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	1227, 589, 590, 591, 592, 1203, 596, 597, 0, 598,
	599, 1098, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 1192, 1193, 1194, 1195,
	0, 617, 0, 609, 610, 611, 1204, 612, 1205, 1122,
	613, 614, 615, 616, 0, 618, 619, 0, 1105, 620,
	621, 622, 624, 625, 623, 626, 1166, 627, 0, 0,
	628, 629, 630, 688, 1189, 1226, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1102, 0, 0, 1666, 0, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	1211, 406, 1178, 1179, 0, 1139, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1101, 279, 1220, 476, 477,
	1124, 1172, 478, 1186, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 1111, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1182, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 1112, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 1180,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 1227, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 1098, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 1192, 1193, 1194,
	1195, 0, 617, 0, 609, 610, 611, 1204, 612, 1205,
	1122, 613, 614, 615, 616, 0, 618, 619, 0, 1105,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 688, 1189, 1226, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1102, 0, 0, 1653, 0, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0,
	0, 0, 0, 0, 1095, 1096, 280, 282, 281, 283,
	284, 285, 286, 1128, 287, 288, 0, 1126, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 1648, 0,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 280, 282, 281,
	283, 284, 285, 286, 1128, 287, 288, 0, 1126, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 1220,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 618, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 688, 1189, 1226, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1102, 0, 0, 1549,
	0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1548, 1170, 1173, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 1211, 406, 1178, 1179, 0, 1139, 0,
	407, 408, 1213, 1171, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1207, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 1162, 1161,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 1101, 279,
	1220, 476, 477, 1124, 1172, 478, 1186, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 1201, 490, 491, 1111,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	1202, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 1182, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 1112, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1165, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 1180, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 1227, 589, 590, 591, 592, 1203,
	596, 597, 0, 598, 599, 1098, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	1192, 1193, 1194, 1195, 0, 617, 0, 609, 610, 611,
	1204, 612, 1205, 1122, 613, 614, 615, 616, 0, 618,
	619, 0, 1105, 620, 621, 622, 624, 625, 623, 626,
	1166, 627, 0, 0, 628, 629, 630, 688, 1189, 1226,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1102, 0, 0,
	1543, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1542, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 1211, 406, 1178, 1179, 0, 1139,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 1101,
	279, 1220, 476, 477, 1124, 1172, 478, 1186, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	1111, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1182, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 1112, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 1180, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 1227, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 1098, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 1192, 1193, 1194, 1195, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 1122, 613, 614, 615, 616, 0,
	618, 619, 0, 1105, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 688, 1189,
	1226, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1102, 0,
	0, 1536, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 1097, 0, 0, 0, 0, 0, 0, 1095, 1096,
	280, 282, 281, 283, 284, 285, 286, 1128, 287, 288,
	0, 1126, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	649, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 1211, 406, 1178, 1179, 0,
	1139, 0, 407, 408, 1213, 1171, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1207, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	1162, 1161, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 1201, 490,
	491, 1111, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 1202, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1182, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 1112, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1165,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 1180, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 1227, 589, 590, 591,
	592, 1203, 596, 597, 0, 598, 599, 1098, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 1192, 1193, 1194, 1195, 0, 617, 0, 609,
	610, 611, 1204, 612, 1205, 1122, 613, 614, 615, 616,
	0, 618, 619, 0, 1105, 620, 621, 622, 624, 625,
	623, 626, 1166, 627, 0, 0, 628, 629, 630, 688,
	1189, 1226, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1102,
	0, 0, 1350, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 1178, 1179,
	0, 1139, 0, 407, 408, 1213, 1171, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1207, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1101, 279, 1220, 476, 477, 1124, 1172, 478, 1186,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 1111, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1182,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 1112, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 1180, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 1227, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 1098, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 1192, 1193, 1194, 1195, 0, 617, 0,
	609, 610, 611, 1204, 612, 1205, 1122, 613, 614, 615,
	616, 0, 618, 619, 0, 1105, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	688, 1189, 1226, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1102, 0, 0, 0, 0, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 1178,
	1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 1101, 279, 1220, 476, 477, 1124, 1172, 478,
	1186, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 1111, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	1182, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 1112,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 1180, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 1227, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 1098,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 1192, 1193, 1194, 1195, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 1122, 613, 614,
	615, 616, 0, 618, 619, 0, 1105, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 688, 1189, 1226, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1102, 0, 0, 0, 0, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 280, 282, 281, 283, 284, 285, 286,
	1128, 287, 288, 0, 1126, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 4760, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 1101, 279, 1220, 476, 477, 1124, 1172,
	478, 1186, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 1111, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 1182, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	1112, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 1180, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 1227,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	1098, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 1192, 1193, 1194, 1195, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 1122, 613,
	614, 615, 616, 0, 4759, 619, 0, 1105, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 688, 1189, 1226, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1102, 0, 0, 0, 0, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 4758, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 649, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 4760, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 1211,
	406, 1178, 1179, 0, 1139, 0, 407, 408, 1213, 1171,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1207, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 1162, 1161, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 1101, 279, 1220, 476, 477, 1124,
	1172, 478, 1186, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 1201, 490, 491, 1111, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 1202, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 1182, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 1112, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1165, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 1180, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	1227, 589, 590, 591, 592, 1203, 596, 597, 0, 598,
	599, 1098, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 1192, 1193, 1194, 1195,
	0, 617, 0, 609, 610, 611, 1204, 612, 1205, 1122,
	613, 614, 615, 616, 0, 4759, 619, 0, 1105, 620,
	621, 622, 624, 625, 623, 626, 1166, 627, 0, 0,
	628, 629, 630, 688, 1189, 1226, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1102, 0, 0, 0, 0, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 4388, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 4389, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	1211, 406, 1178, 1179, 0, 1139, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 1101, 279, 1220, 476, 477,
	1124, 1172, 478, 1186, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 1111, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 1182, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	4387, 548, 1112, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 1180,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 1227, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 1098, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 1192, 1193, 1194,
	1195, 0, 617, 0, 609, 610, 611, 1204, 612, 1205,
	1122, 613, 614, 615, 616, 0, 618, 619, 0, 1105,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 688, 1189, 1226, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1102, 0, 0, 0, 0, 1144,
	1116, 1117, 1118, 3210, 3211, 1127, 0, 1097, 0, 0,
	0, 0, 0, 0, 1095, 1096, 280, 282, 281, 283,
	284, 285, 286, 1128, 287, 288, 0, 1126, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 1178, 1179, 0, 1139, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 1101, 279, 1220, 476,
	477, 1124, 1172, 478, 1186, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 1111, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 1182, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 1112, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	1180, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 1227, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 1098, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 1192, 1193,
	1194, 1195, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 1122, 613, 614, 615, 616, 0, 618, 619, 0,
	1105, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 1189, 1226, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1102, 0, 0, 0, 0,
	1144, 1116, 1117, 1118, 3208, 3209, 1127, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 280, 282, 281,
	283, 284, 285, 286, 1128, 287, 288, 0, 1126, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 1178, 1179, 0, 1139, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 1101, 279, 1220,
	476, 477, 1124, 1172, 478, 1186, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 1111, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 1182, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 1112, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 1180, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 1227, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 1098, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 1192,
	1193, 1194, 1195, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 1122, 613, 614, 615, 616, 0, 618, 619,
	0, 1105, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 688, 1189, 1226, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1102, 0, 0, 0,
	0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 649, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 1211, 406, 1178, 1179, 0, 1139, 0,
	407, 408, 1213, 1171, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 1207, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 1162, 1161,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 1101, 279,
	1220, 476, 477, 1124, 1172, 478, 1186, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 1201, 490, 491, 1111,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	1202, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 1182, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 1112, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1165, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 1180, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 1227, 589, 590, 591, 592, 1203,
	596, 597, 0, 598, 599, 1098, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	1192, 1193, 1194, 1195, 0, 617, 0, 609, 610, 611,
	1204, 612, 1205, 1122, 613, 614, 615, 616, 0, 618,
	619, 0, 1105, 620, 621, 622, 624, 625, 623, 626,
	1166, 627, 0, 0, 628, 629, 630, 688, 1189, 1226,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1102, 0, 0,
	0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 2480, 2481, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 0, 305, 1228, 1229, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 1211, 406, 1178, 1179, 0, 1139,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 0,
	279, 1220, 476, 477, 1124, 1172, 478, 1186, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	1111, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 1182, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 1112, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 1180, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 1227, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 1192, 1193, 1194, 1195, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 1122, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 688, 1189,
	1226, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 2739, 0, 0, 0, 0, 0, 0, 2737, 2738,
	280, 282, 281, 283, 284, 285, 286, 1128, 287, 288,
	0, 1126, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 0, 305, 1228, 1229,
	649, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 1211, 406, 1178, 1179, 0,
	1139, 0, 407, 408, 1213, 1171, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 1207, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	1162, 1161, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	0, 279, 1220, 476, 477, 1124, 1172, 478, 1186, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 1201, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 1202, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 1182, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 3203, 3204, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 1165,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 1180, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 1227, 589, 590, 591,
	592, 1203, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 1192, 1193, 1194, 1195, 0, 617, 0, 609,
	610, 611, 1204, 612, 1205, 1122, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 1166, 627, 0, 0, 628, 629, 630, 688,
	1189, 1226, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 2149,
	2150, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	0, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 649, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 4760,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 1211, 406, 1178, 1179,
	0, 1139, 0, 407, 408, 0, 1171, 0, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 1207, 1216,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 1162, 1161, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 1101, 279, 0, 476, 477, 1124, 1172, 478, 1186,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 1201,
	490, 491, 1111, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 1202, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 1182,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 1112, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	1165, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 1180, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 1227, 589, 590,
	591, 592, 1203, 596, 597, 0, 598, 599, 1098, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 1192, 1193, 1194, 1195, 0, 617, 0,
	609, 610, 611, 1204, 612, 1205, 1122, 613, 614, 615,
	616, 0, 4759, 619, 0, 1105, 620, 621, 622, 624,
	625, 623, 626, 1166, 627, 0, 0, 628, 629, 630,
	688, 1189, 1226, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 1088, 0, 1266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 0, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 1167, 0, 305,
	647, 648, 649, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 1211, 406, 664,
	665, 0, 666, 0, 407, 408, 1213, 1171, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 1252, 419, 421, 420, 0, 422, 1207,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 1162, 1161, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 0, 279, 1220, 476, 477, 0, 1172, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 1258, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	1201, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 1202, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 678,
	1260, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 239, 566, 567, 565, 568, 569,
	570, 1165, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 1203, 596, 597, 0, 598, 599, 0,
	595, 586, 241, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 1204, 612, 1205, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 1166, 627, 0, 0, 628, 629,
	630, 1637, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 233, 636, 637, 692, 638, 639,
	640, 1266, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 1256, 0,
	1991, 0, 0, 1168, 0, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 1167, 0, 305, 647, 648, 649, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 1211, 406, 664, 665, 0, 666, 0,
	407, 408, 1213, 1171, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 1252,
	419, 421, 420, 0, 422, 1207, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 1162, 1161,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 0, 279,
	1220, 476, 477, 0, 1172, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 1258, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 1201, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	1202, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 678, 1260, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	239, 566, 567, 565, 568, 569, 570, 1165, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 1203,
	596, 597, 0, 598, 599, 0, 595, 586, 241, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	1204, 612, 1205, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	1166, 627, 0, 0, 628, 629, 630, 1637, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	233, 636, 637, 692, 638, 639, 640, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 3367, 0,
	1266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1256, 0, 1991, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 1167, 0, 305, 647, 648, 649, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 1211, 406, 664, 665, 0, 666, 0, 407,
	408, 1213, 1171, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 1252, 419,
	421, 420, 0, 422, 1207, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 1162, 1161, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 0, 279, 1220,
	476, 477, 0, 1172, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 1258, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 1201, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 1202,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 678, 1260, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1165, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 1203, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 1204,
	612, 1205, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 1166,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 0, 1248, 0, 1266,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1168, 0, 1256, 0, 1254, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 1167, 0, 305, 647, 648, 649, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 1211, 406, 664, 665, 0, 666, 0, 407, 408,
	1213, 1171, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 1252, 419, 421,
	420, 0, 422, 1207, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 1162, 1161, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 0, 279, 1220, 476,
	477, 0, 1172, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 1258, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 1201, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 1202, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 678, 1260, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1165, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 1203, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 1204, 612,
	1205, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 1166, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 1266, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1168, 0, 1256, 0, 1254, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	1167, 0, 305, 647, 648, 649, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	1211, 406, 664, 665, 0, 666, 0, 407, 408, 1213,
	1171, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 1252, 419, 421, 420,
	0, 422, 1207, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 1162, 1161, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 0, 279, 1220, 476, 477,
	0, 1172, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 1258, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 1201, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 1202, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 678, 1260, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1165, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 1203, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 1204, 612, 1205,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 1166, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 1266, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1168,
	0, 1256, 0, 1254, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 1167,
	0, 305, 647, 648, 649, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 1211,
	406, 664, 665, 0, 666, 0, 407, 408, 1213, 1171,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 1207, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 1162, 1161, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 0, 279, 1220, 476, 477, 0,
	1172, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 1201, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 1202, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1165, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 1203, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 1204, 612, 1205, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 1166, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 1266, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1168, 0,
	0, 0, 4210, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 1167, 0,
	305, 647, 648, 649, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 1211, 406,
	664, 665, 0, 666, 0, 407, 408, 1213, 1171, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	1207, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 1162, 1161, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 0, 279, 1220, 476, 477, 0, 1172,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 1201, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 1202, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 1260, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 1165, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 1203, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 1204, 612, 1205, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 1166, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 274, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 2584, 2585, 2586, 2603, 2604, 2605, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 2606, 0, 641, 0, 0, 0, 0, 289,
	290, 1888, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 1873, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 2596, 0, 316, 317, 318, 315,
	319, 0, 320, 2592, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 0, 0, 2597,
	2598, 2599, 2600, 371, 372, 373, 656, 0, 0, 2591,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 2601, 2602, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 2594, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	0, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 2595, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 1872, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 1088, 0, 1563, 2581, 2582,
	2583, 2607, 2593, 2587, 0, 2589, 2590, 2588, 2575, 2576,
	2577, 2578, 2579, 2580, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	1490, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 1211,
	406, 664, 665, 0, 666, 0, 407, 408, 1213, 667,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 0, 0, 1220, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 239, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 241, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 1637, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 233, 636, 637, 692,
	638, 639, 640, 0, 0, 234, 1634, 0, 1563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 193, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 1490, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	1211, 406, 664, 665, 0, 666, 0, 407, 408, 1213,
	667, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 0, 0, 1220, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 239, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 241, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 1637, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 233, 636, 637,
	692, 638, 639, 640, 1563, 1562, 234, 0, 0, 0,
	1560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 193, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 1490, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	1212, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 1211, 406, 664, 665,
	0, 666, 0, 407, 408, 1213, 667, 1214, 409, 410,
	411, 1215, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 1216,
	423, 424, 1217, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 1218, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 1219, 475,
	463, 0, 0, 1220, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 1221, 489, 1222, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 1223, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 1224, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1563, 1562, 0, 0, 0, 0, 1560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 1661,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 1490, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 1211, 406, 664, 665, 0, 666, 0, 407,
	408, 1213, 667, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 0, 0, 1220,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1563, 1562, 0, 0,
	0, 0, 1560, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 3676, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 1490,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 1212, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 1211, 406,
	664, 665, 0, 666, 0, 407, 408, 1213, 667, 1214,
	409, 410, 411, 1215, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 1216, 423, 424, 1217, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 1218, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	1219, 475, 463, 0, 0, 1220, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 1221, 489,
	1222, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 2348, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 1223, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 1224,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1563, 2258, 0, 0, 0, 0, 2259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 1661, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 1490, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 0, 1211, 406, 664, 665, 0, 666,
	0, 407, 408, 1213, 667, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 2257, 421, 420, 0, 422, 668, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 0,
	0, 1220, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1563, 1562,
	0, 0, 0, 0, 1560, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 1661, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 1490, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 1212, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	1211, 406, 664, 665, 0, 666, 0, 407, 408, 1213,
	667, 1214, 409, 410, 411, 1215, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 1216, 423, 424, 1217, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 1218, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 1219, 475, 463, 0, 0, 1220, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	1221, 489, 1222, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 1223, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 1224, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 0, 1088, 0, 274, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 1643, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 239, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 241, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 1637, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 274, 0, 0, 233, 636, 637, 692,
	638, 639, 640, 0, 0, 234, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 193, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 279, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 1266, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1168, 0, 0, 0, 2005, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 1167, 0, 305, 647, 648, 649,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 479, 1212, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 1211, 406, 664, 665, 0, 666,
	0, 407, 408, 1213, 1171, 1214, 409, 410, 411, 1215,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 1207, 1216, 423, 424,
	1217, 0, 425, 426, 427, 428, 429, 430, 433, 1162,
	1161, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	1218, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 1219, 475, 463, 0,
	279, 1220, 476, 477, 0, 1172, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 1221, 489, 1222, 1201, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 1202, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	1223, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1165, 571,
	572, 554, 555, 573, 574, 1224, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	1203, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 1204, 612, 1205, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 1166, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 274, 3117,
	0, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 274, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 4922, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 279, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	0, 274, 0, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 3626, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 279,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 0, 274, 0,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 1631, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 274, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 3105, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	274, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 3781,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 0, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 0, 918, 0, 819,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 2335, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 826, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 916, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 279, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 824, 600, 601, 602,
	603, 604, 825, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 819, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 2076, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 829, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 826, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 279, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 2075, 561, 562, 563, 564, 0, 2077, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 824, 600, 601, 602, 603,
	604, 825, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 2074, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 819, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 280, 282, 281, 283, 284, 285,
	286, 2027, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 829, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 826, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 279, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 2026, 561, 562, 563, 564, 0, 2028, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 824, 600, 601, 602, 603, 604,
	825, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 2025, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 817, 0, 819, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 829, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 826, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 279, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 824, 600, 601, 602, 603, 604, 825, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 2049, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 829, 0, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 0, 2055, 0,
	297, 2045, 298, 2061, 0, 2068, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 2071, 2072, 0, 0,
	306, 307, 0, 0, 1490, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 1191,
	338, 340, 2059, 2058, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 2057, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	2066, 2067, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 0, 0, 0, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 1211, 406, 2052, 2053, 0, 2048, 0,
	407, 408, 1213, 0, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 0, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 0, 0,
	1220, 476, 477, 0, 0, 478, 2060, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 0, 1221, 489, 1222, 0, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 2042, 503, 504, 505, 2043, 506, 507, 508,
	0, 509, 0, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 2056, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 0, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 2054, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 2070, 589, 590, 591, 592, 0,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	2062, 2063, 2064, 2065, 0, 617, 0, 609, 610, 611,
	0, 612, 0, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 0, 2046, 2069,
	0, 632, 631, 633, 0, 634, 635, 0, 0, 0,
	0, 636, 637, 0, 638, 639, 640, 819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	2036, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 826, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 279, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 824, 600, 601, 602, 603, 604,
	825, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 819, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 829, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 826, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 279, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 2386, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	2387, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 824, 600, 601, 602, 603, 604, 825,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 2388, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 274, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 829, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 279, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 1563, 1562, 0,
	0, 0, 0, 1560, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 829, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	1490, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 1212, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 1211,
	406, 664, 665, 0, 666, 0, 407, 408, 1213, 667,
	1214, 409, 410, 411, 1215, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 1216, 423, 424, 1217, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 1218, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 1219, 475, 463, 0, 0, 1220, 476, 477, 3977,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 1221,
	489, 1222, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 1223, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	1224, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1563, 1562, 0, 0, 0, 0, 1560,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 1490, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 1212,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 1211, 406, 664, 665, 0,
	666, 0, 407, 408, 1213, 667, 1214, 409, 410, 411,
	1215, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 1216, 423,
	424, 1217, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 1218, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 1219, 475, 463,
	0, 0, 1220, 476, 477, 3577, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 1221, 489, 1222, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 1223, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 1224, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1691,
	0, 1563, 1562, 0, 0, 0, 0, 1560, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 1490, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 277, 0, 0, 0,
	0, 0, 1690, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 1211, 406, 664, 665, 0, 666, 0,
	407, 408, 1213, 667, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 0, 0,
	1220, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 1689, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 1688, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1556, 0, 1563,
	1562, 0, 0, 0, 0, 1560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 1490, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 1558, 662, 663, 479, 1212, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 1211, 406, 664, 665, 0, 666, 0, 407, 408,
	1213, 667, 1214, 409, 410, 411, 1215, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 1216, 423, 424, 1217, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 1218, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 1219, 475, 463, 0, 0, 1220, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 1221, 489, 1222, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 1223, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 1224, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1563, 1562, 0, 0, 0,
	0, 1560, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 1490, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 1212, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 1211, 406, 664,
	665, 0, 666, 0, 407, 408, 1213, 667, 1214, 409,
	410, 411, 1215, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	1216, 423, 424, 1217, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 1218, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 1219,
	475, 463, 0, 0, 1220, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 1221, 489, 1222,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 1223, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 1224, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 1563, 1562, 0, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 1490, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 1212, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 1211, 406, 664, 665, 0, 666, 0,
	407, 408, 1213, 667, 1214, 409, 410, 411, 1215, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 1216, 423, 424, 1217,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 1218,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 1219, 475, 463, 0, 0,
	1220, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 1221, 489, 1222, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 1223,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 1224, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	1563, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 1490, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 1212, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 1211, 406, 664, 665, 0, 666, 0, 407,
	408, 1213, 667, 1214, 409, 410, 411, 1215, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 1216, 423, 424, 1217, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 1218, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 1219, 475, 463, 0, 0, 1220,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 1221, 489, 1222, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 1223, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 1224, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 274,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 2909, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 2906, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 2913, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 3618, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 2912, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 3615, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 3617,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 3614, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 2911, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	3616, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 274, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 2909, 306, 307, 650,
	0, 0, 2903, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 2906, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 2913, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 2912, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	2902, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 2911, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 2910,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 1768, 0, 274, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	1767, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 1766, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 279, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 1769, 553,
	560, 561, 562, 563, 564, 0, 1765, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 1763, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 1764, 631, 633, 691,
	634, 635, 1494, 0, 274, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 1496, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 279, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 1258, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	1491, 0, 274, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 1493, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	279, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 1258, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 1397, 0,
	274, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 1399, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 279, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 1258, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 724, 0, 274, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 723,
	285, 286, 713, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 716, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 717, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 718, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 712, 0, 274, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	713, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 716, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 717, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 0, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 718, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 274, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 713,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 716, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 717, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 718, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 274, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 280, 282, 281, 283, 284, 285, 286, 713, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 716, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 3988, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 718, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 274, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 279, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 1258, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 274, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 3525, 475, 463, 0,
	279, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 3075, 0,
	274, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 3074, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 279, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 2355, 0, 274, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 279, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 274, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 279, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 2293, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 2300, 0, 274, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 2299, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 278, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 279, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 2286, 0, 274, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 2288, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 279, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 274, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 2251, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	279, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 1258, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 1609, 0,
	274, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 1608, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 279, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 1511, 0, 274, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 279, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 1504, 0, 274, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 1506, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 279, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 1333, 0, 274, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 1332, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 279, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	1323, 0, 274, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 1322, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 278,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	279, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 0, 632, 631, 633, 691, 634, 635, 1320, 0,
	274, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 1319, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 279, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 0,
	632, 631, 633, 691, 634, 635, 1315, 0, 274, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	1314, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 279, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 0, 632, 631,
	633, 691, 634, 635, 694, 0, 274, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 279, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 265, 0, 274, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 278, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 279, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 274, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	278, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 279, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 274, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	716, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 717, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 661, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	0, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 718, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 274, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 2395, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 278, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 279,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	274, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 2393, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 278, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 279, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 274,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 2391, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 278, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 279, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 274, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	2306, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 278, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 279, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 274, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 2100,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 278, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 279, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 274, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 2094, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 278, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 279, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 0, 632, 631, 633, 691,
	634, 635, 903, 0, 274, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 902, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 901, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 274, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 3618, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 4287, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 1361,
	0, 274, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	1364, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 1362, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 784, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	783, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 782, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 1365, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	780, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 1361, 0, 274,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 1364, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 1362, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 784, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 783, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 782, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 1365, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 780, 683,
	684, 685, 0, 617, 0, 609, 1363, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 703, 0, 274, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 702, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 701,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 274, 3117, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 274,
	4303, 0, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 274, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 4569, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 274, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 4183, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 274, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 3943,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 0, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 274, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 2792,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 274, 3117, 0, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 3114, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	274, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 0, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 2217, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 783,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 782, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 780,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 274,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 280, 282, 281, 283,
	284, 285, 286, 2365, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 2353, 0, 274, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 1664, 0, 274, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 1657, 0, 274, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 774,
	0, 274, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 770, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 775, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 784, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	783, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 782, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 1642, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	780, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 1615, 0, 274,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 1614, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 1599, 0, 274, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 1597,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 1592, 0, 274, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 1569, 0, 274, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 1567, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 1554,
	0, 274, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 1516, 0, 274,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 1499, 0, 274, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 1367, 0, 274, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 783, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 782,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 780, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 1338, 0, 274, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 1337, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 1329,
	0, 274, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 1328, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	274, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 280, 282, 281,
	283, 284, 285, 286, 1282, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 661, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 0, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 274,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 280, 282, 281, 283,
	284, 285, 286, 789, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 0, 632,
	631, 633, 691, 634, 635, 774, 0, 274, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 770, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 769, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 775, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 784, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 783, 545, 546, 547,
	548, 771, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 782, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 772, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 780, 683, 684, 685,
	0, 617, 0, 609, 776, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 0, 632, 631, 633,
	691, 634, 635, 763, 0, 274, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 764, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 0, 632, 631, 633, 691, 634,
	635, 726, 0, 274, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 661, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 0, 632, 631, 633, 691, 634, 635, 720,
	0, 274, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 661, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	0, 632, 631, 633, 691, 634, 635, 698, 0, 274,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 661, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 274, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 274, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 3646,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 274, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 661, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 0, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 783, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	782, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 780, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 274, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 3563, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 524, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 274, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 391,
	0, 392, 393, 394, 395, 396, 3541, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 549,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 274, 632, 631, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 642,
	643, 0, 297, 644, 298, 645, 0, 646, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 647, 648,
	649, 0, 306, 307, 650, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 651, 652, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 653, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 654, 655, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 656, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 657, 658, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 659, 0, 660, 391, 0,
	392, 393, 394, 395, 396, 3538, 662, 663, 479, 0,
	397, 398, 0, 399, 400, 401, 402, 0, 0, 0,
	0, 403, 404, 405, 0, 0, 406, 664, 665, 0,
	666, 0, 407, 408, 0, 667, 0, 409, 410, 411,
	0, 412, 0, 0, 0, 413, 414, 415, 416, 417,
	418, 0, 419, 421, 420, 0, 422, 668, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 429, 430, 433,
	0, 0, 431, 432, 434, 435, 0, 436, 437, 439,
	442, 438, 440, 441, 443, 456, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 458, 0,
	457, 0, 459, 460, 461, 462, 469, 471, 472, 467,
	468, 470, 473, 474, 464, 465, 466, 0, 475, 463,
	0, 0, 0, 476, 477, 0, 669, 478, 670, 480,
	481, 0, 0, 482, 0, 0, 0, 484, 485, 486,
	0, 0, 487, 488, 671, 0, 489, 0, 672, 490,
	491, 483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 501, 502, 673, 503, 504, 505, 674, 506,
	507, 508, 675, 509, 676, 510, 511, 0, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 520, 677, 521,
	522, 524, 523, 525, 0, 526, 0, 527, 528, 529,
	0, 0, 0, 0, 0, 530, 0, 532, 533, 534,
	535, 531, 536, 537, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 545, 546, 547, 548, 678, 549, 0,
	550, 551, 557, 558, 559, 552, 553, 560, 561, 562,
	563, 564, 0, 566, 567, 565, 568, 569, 570, 0,
	571, 572, 554, 555, 573, 574, 0, 575, 576, 577,
	578, 579, 580, 581, 679, 0, 582, 0, 583, 584,
	585, 587, 556, 588, 593, 594, 680, 589, 590, 591,
	592, 681, 596, 597, 0, 598, 599, 0, 595, 586,
	0, 600, 601, 602, 603, 604, 605, 606, 364, 607,
	0, 608, 682, 683, 684, 685, 0, 617, 0, 609,
	610, 611, 686, 612, 687, 0, 613, 614, 615, 616,
	0, 618, 619, 0, 0, 620, 621, 622, 624, 625,
	623, 626, 0, 627, 0, 0, 628, 629, 630, 688,
	689, 690, 274, 632, 631, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 642, 643,
	0, 297, 644, 298, 645, 0, 646, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 647, 648, 649,
	0, 306, 307, 650, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 651, 652, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 653, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 654, 655, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 656, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 657, 658, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 659, 0, 660, 391, 0, 392,
	393, 394, 395, 396, 3490, 662, 663, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 0, 0, 406, 664, 665, 0, 666,
	0, 407, 408, 0, 667, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 668, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	0, 0, 476, 477, 0, 669, 478, 670, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 671, 0, 489, 0, 672, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 673, 503, 504, 505, 674, 506, 507,
	508, 675, 509, 676, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 677, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 678, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 0, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 679, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 680, 589, 590, 591, 592,
	681, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 682, 683, 684, 685, 0, 617, 0, 609, 610,
	611, 686, 612, 687, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 688, 689,
	690, 274, 632, 631, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 642, 643, 0,
	297, 644, 298, 645, 0, 646, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 647, 648, 649, 0,
	306, 307, 650, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 651, 652, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 653, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 654, 655, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 656, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	657, 658, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 659, 0, 660, 391, 0, 392, 393,
	394, 395, 396, 3488, 662, 663, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 664, 665, 0, 666, 0,
	407, 408, 0, 667, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 668, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 669, 478, 670, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 671, 0, 489, 0, 672, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 673, 503, 504, 505, 674, 506, 507, 508,
	675, 509, 676, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 677, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 678, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 0, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 679, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 680, 589, 590, 591, 592, 681,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	682, 683, 684, 685, 0, 617, 0, 609, 610, 611,
	686, 612, 687, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 688, 689, 690,
	274, 632, 631, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 642, 643, 0, 297,
	644, 298, 645, 0, 646, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 647, 648, 649, 0, 306,
	307, 650, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 651, 652, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	653, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 654, 655, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 656, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 657,
	658, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 659, 0, 660, 391, 0, 392, 393, 394,
	395, 396, 3474, 662, 663, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 0, 406, 664, 665, 0, 666, 0, 407,
	408, 0, 667, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 668, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 0, 0,
	476, 477, 0, 669, 478, 670, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 671, 0, 489, 0, 672, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 673, 503, 504, 505, 674, 506, 507, 508, 675,
	509, 676, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 677, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 678, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 0, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 679, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 680, 589, 590, 591, 592, 681, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 682,
	683, 684, 685, 0, 617, 0, 609, 610, 611, 686,
	612, 687, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 688, 689, 690, 274,
	632, 631, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 642, 643, 0, 297, 644,
	298, 645, 0, 646, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 647, 648, 649, 0, 306, 307,
	650, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	651, 652, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 653,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	654, 655, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 656, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 657, 658,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 659, 0, 660, 391, 0, 392, 393, 394, 395,
	396, 3085, 662, 663, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 664, 665, 0, 666, 0, 407, 408,
	0, 667, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 668, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 669, 478, 670, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	671, 0, 489, 0, 672, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	673, 503, 504, 505, 674, 506, 507, 508, 675, 509,
	676, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 677, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 678, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 0, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	679, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 680, 589, 590, 591, 592, 681, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 682, 683,
	684, 685, 0, 617, 0, 609, 610, 611, 686, 612,
	687, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 688, 689, 690, 274, 632,
	631, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 642, 643, 0, 297, 644, 298,
	645, 0, 646, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 647, 648, 649, 0, 306, 307, 650,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 651,
	652, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 653, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 654,
	655, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 656, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 657, 658, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	659, 0, 660, 391, 0, 392, 393, 394, 395, 396,
	661, 662, 663, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 664, 665, 0, 666, 0, 407, 408, 0,
	667, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 668, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 669, 478, 670, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 671,
	0, 489, 0, 672, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 673,
	503, 504, 505, 674, 506, 507, 508, 675, 509, 676,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 677, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 678, 549, 0, 550, 551, 764, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 0, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 679,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 680, 589, 590, 591, 592, 681, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 682, 683, 684,
	685, 0, 617, 0, 609, 610, 611, 686, 612, 687,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 688, 689, 690, 274, 632, 631,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 641,
	0, 2324, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 642, 643, 0, 297, 644, 298, 645,
	0, 646, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 647, 648, 649, 0, 306, 307, 650, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 651, 652,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 653, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 654, 655,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 656, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 657, 658, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 659,
	0, 660, 391, 0, 392, 393, 394, 395, 396, 661,
	662, 663, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 664, 665, 0, 666, 0, 407, 408, 0, 667,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 668, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	669, 478, 670, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 671, 0,
	489, 0, 672, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 673, 503,
	504, 505, 674, 506, 507, 508, 675, 509, 676, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 677, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 678, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 0, 0, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 679, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	680, 589, 590, 591, 592, 681, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 682, 683, 684, 685,
	0, 617, 0, 609, 610, 611, 686, 612, 687, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 688, 689, 690, 274, 632, 631, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 642, 643, 0, 297, 644, 298, 645, 0,
	646, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 647, 648, 649, 0, 306, 307, 650, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 651, 652, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 653, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 654, 655, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	656, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 657, 658, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 659, 0,
	660, 391, 0, 392, 393, 394, 395, 396, 1300, 662,
	663, 479, 0, 397, 398, 0, 399, 400, 401, 402,
	0, 0, 0, 0, 403, 404, 405, 0, 0, 406,
	664, 665, 0, 666, 0, 407, 408, 0, 667, 0,
	409, 410, 411, 0, 412, 0, 0, 0, 413, 414,
	415, 416, 417, 418, 0, 419, 421, 420, 0, 422,
	668, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	429, 430, 433, 0, 0, 431, 432, 434, 435, 0,
	436, 437, 439, 442, 438, 440, 441, 443, 456, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 458, 0, 457, 0, 459, 460, 461, 462, 469,
	471, 472, 467, 468, 470, 473, 474, 464, 465, 466,
	0, 475, 463, 0, 0, 0, 476, 477, 0, 669,
	478, 670, 480, 481, 0, 0, 482, 0, 0, 0,
	484, 485, 486, 0, 0, 487, 488, 671, 0, 489,
	0, 672, 490, 491, 483, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 501, 502, 673, 503, 504,
	505, 674, 506, 507, 508, 675, 509, 676, 510, 511,
	0, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	520, 677, 521, 522, 524, 523, 525, 0, 526, 0,
	527, 528, 529, 0, 0, 0, 0, 0, 530, 0,
	532, 533, 534, 535, 531, 536, 537, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 545, 546, 547, 548,
	678, 549, 0, 550, 551, 557, 558, 559, 552, 553,
	560, 561, 562, 563, 564, 0, 566, 567, 565, 568,
	569, 570, 0, 571, 572, 554, 555, 573, 574, 0,
	575, 576, 577, 578, 579, 580, 581, 679, 0, 582,
	0, 583, 584, 585, 587, 556, 588, 593, 594, 680,
	589, 590, 591, 592, 681, 596, 597, 0, 598, 599,
	0, 595, 586, 0, 600, 601, 602, 603, 604, 605,
	606, 364, 607, 0, 608, 682, 683, 684, 685, 0,
	617, 0, 609, 610, 611, 686, 612, 687, 0, 613,
	614, 615, 616, 0, 618, 619, 0, 0, 620, 621,
	622, 624, 625, 623, 626, 0, 627, 0, 0, 628,
	629, 630, 688, 689, 690, 274, 632, 631, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 642, 643, 0, 297, 644, 298, 645, 0, 646,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	647, 648, 649, 0, 306, 307, 650, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 651, 652, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 653, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 654, 655, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 656,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 657, 658, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 659, 0, 660,
	391, 0, 392, 393, 394, 395, 396, 661, 662, 663,
	479, 0, 397, 398, 0, 399, 400, 401, 402, 0,
	0, 0, 0, 403, 404, 405, 0, 0, 406, 664,
	665, 0, 666, 0, 407, 408, 0, 667, 0, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 414, 415,
	416, 417, 418, 0, 419, 421, 420, 0, 422, 668,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 429,
	430, 433, 0, 0, 431, 432, 434, 435, 0, 436,
	437, 439, 442, 438, 440, 441, 443, 456, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	458, 0, 457, 0, 459, 460, 461, 462, 469, 471,
	472, 467, 468, 470, 473, 474, 464, 465, 466, 0,
	475, 463, 0, 0, 0, 476, 477, 0, 669, 478,
	670, 480, 481, 0, 0, 482, 0, 0, 0, 484,
	485, 486, 0, 0, 487, 488, 671, 0, 489, 0,
	672, 490, 491, 483, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 501, 502, 673, 503, 504, 505,
	674, 506, 507, 508, 675, 509, 676, 510, 511, 0,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 520,
	677, 521, 522, 1231, 523, 525, 0, 526, 0, 527,
	528, 529, 0, 0, 0, 0, 0, 530, 0, 532,
	533, 534, 535, 531, 536, 537, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 545, 546, 547, 548, 678,
	549, 0, 550, 551, 557, 558, 559, 552, 553, 560,
	561, 562, 563, 564, 0, 566, 567, 565, 568, 569,
	570, 0, 571, 572, 554, 555, 573, 574, 0, 575,
	576, 577, 578, 579, 580, 581, 679, 0, 582, 0,
	583, 584, 585, 587, 556, 588, 593, 594, 680, 589,
	590, 591, 592, 681, 596, 597, 0, 598, 599, 0,
	595, 586, 0, 600, 601, 602, 603, 604, 605, 606,
	364, 607, 0, 608, 682, 683, 684, 685, 0, 617,
	0, 609, 610, 611, 686, 612, 687, 0, 613, 614,
	615, 616, 0, 618, 619, 0, 0, 620, 621, 622,
	624, 625, 623, 626, 0, 627, 0, 0, 628, 629,
	630, 688, 689, 690, 274, 632, 631, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	642, 643, 0, 297, 644, 298, 645, 0, 646, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 647,
	648, 649, 0, 306, 307, 650, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 651, 652, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 653, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 654, 655, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 656, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 657, 658, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 659, 0, 660, 0,
	0, 392, 393, 394, 395, 396, 661, 662, 663, 479,
	0, 397, 398, 0, 399, 400, 401, 402, 0, 0,
	0, 0, 403, 404, 405, 0, 0, 406, 664, 665,
	0, 666, 0, 407, 408, 0, 667, 0, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 414, 415, 416,
	417, 418, 0, 419, 421, 420, 0, 422, 668, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 429, 430,
	433, 0, 0, 431, 432, 434, 435, 0, 436, 437,
	439, 442, 438, 440, 441, 443, 456, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 458,
	0, 457, 0, 459, 460, 461, 462, 469, 471, 472,
	467, 468, 470, 473, 474, 464, 465, 466, 0, 475,
	463, 0, 0, 0, 476, 477, 0, 669, 478, 670,
	480, 481, 0, 0, 482, 0, 0, 0, 484, 485,
	486, 0, 0, 487, 488, 671, 0, 489, 0, 672,
	490, 491, 483, 492, 493, 0, 495, 496, 497, 498,
	499, 500, 0, 501, 502, 673, 503, 504, 505, 674,
	506, 507, 508, 675, 509, 676, 510, 511, 0, 512,
	513, 0, 514, 515, 516, 517, 0, 519, 520, 677,
	521, 522, 524, 523, 525, 0, 526, 0, 527, 528,
	529, 0, 0, 0, 0, 0, 530, 0, 532, 533,
	534, 535, 531, 536, 537, 538, 539, 540, 0, 541,
	542, 543, 0, 544, 545, 546, 547, 548, 678, 0,
	0, 550, 551, 557, 558, 559, 552, 553, 560, 561,
	562, 563, 564, 0, 566, 567, 565, 568, 569, 570,
	0, 571, 572, 554, 555, 573, 574, 0, 575, 576,
	577, 578, 579, 580, 581, 679, 0, 582, 0, 583,
	584, 585, 587, 556, 588, 593, 594, 680, 589, 590,
	591, 592, 681, 596, 597, 0, 598, 599, 0, 595,
	586, 0, 600, 601, 602, 603, 604, 605, 606, 364,
	607, 0, 608, 682, 683, 684, 685, 0, 617, 0,
	609, 610, 611, 686, 612, 687, 0, 613, 614, 615,
	616, 0, 618, 619, 0, 0, 620, 621, 622, 624,
	625, 623, 626, 0, 627, 0, 0, 628, 629, 630,
	688, 689, 690, 0, 632, 631, 633, 691, 634, 635,
	1605, 0, 1345, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 0, 298, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 0, 0, 0,
	0, 306, 307, 0, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 1347, 333, 334, 335, 336, 337,
	0, 338, 340, 0, 0, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 0, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 1604, 0, 0, 479, 0, 397,
	398, 0, 399, 400, 401, 402, 0, 0, 0, 0,
	403, 404, 405, 0, 0, 406, 0, 0, 0, 0,
	0, 407, 408, 0, 0, 0, 409, 410, 411, 0,
	412, 0, 0, 0, 413, 414, 415, 416, 417, 418,
	0, 419, 421, 420, 0, 422, 0, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 429, 430, 433, 0,
	0, 431, 432, 434, 435, 0, 436, 437, 439, 442,
	438, 440, 441, 443, 456, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 458, 0, 457,
	0, 459, 460, 461, 462, 469, 471, 472, 467, 468,
	470, 473, 474, 464, 465, 466, 0, 475, 463, 0,
	0, 0, 476, 477, 0, 0, 478, 0, 480, 481,
	0, 0, 482, 0, 0, 0, 484, 485, 486, 0,
	0, 487, 488, 0, 0, 489, 0, 0, 490, 491,
	483, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 0, 506, 507,
	508, 0, 509, 0, 510, 511, 0, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	524, 523, 525, 0, 526, 0, 527, 528, 529, 0,
	0, 0, 0, 0, 530, 0, 532, 533, 534, 535,
	531, 536, 537, 538, 539, 540, 0, 541, 542, 543,
	0, 544, 545, 546, 547, 548, 0, 549, 0, 550,
	551, 557, 558, 559, 552, 553, 560, 561, 562, 563,
	564, 0, 566, 567, 565, 568, 569, 570, 1348, 571,
	572, 554, 555, 573, 574, 0, 575, 576, 577, 578,
	579, 580, 581, 0, 0, 582, 0, 583, 584, 585,
	587, 556, 588, 593, 594, 0, 589, 590, 591, 592,
	0, 596, 597, 0, 598, 599, 0, 595, 586, 0,
	600, 601, 602, 603, 604, 605, 606, 364, 607, 0,
	608, 0, 0, 0, 0, 0, 617, 0, 609, 610,
	611, 0, 612, 0, 0, 613, 614, 615, 616, 0,
	618, 619, 0, 0, 620, 621, 622, 624, 625, 623,
	626, 0, 627, 0, 0, 628, 629, 630, 0, 1519,
	0, 1345, 632, 631, 633, 0, 634, 635, 0, 0,
	0, 0, 636, 637, 0, 638, 639, 640, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 0, 0, 0, 0,
	306, 307, 0, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 1347, 333, 334, 335, 336, 337, 0,
	338, 340, 0, 0, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 0, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 0, 0, 0, 391, 0, 392, 393,
	394, 395, 396, 1518, 0, 0, 479, 0, 397, 398,
	0, 399, 400, 401, 402, 0, 0, 0, 0, 403,
	404, 405, 0, 0, 406, 0, 0, 0, 0, 0,
	407, 408, 0, 0, 0, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 414, 415, 416, 417, 418, 0,
	419, 421, 420, 0, 422, 0, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 429, 430, 433, 0, 0,
	431, 432, 434, 435, 0, 436, 437, 439, 442, 438,
	440, 441, 443, 456, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 458, 0, 457, 0,
	459, 460, 461, 462, 469, 471, 472, 467, 468, 470,
	473, 474, 464, 465, 466, 0, 475, 463, 0, 0,
	0, 476, 477, 0, 0, 478, 0, 480, 481, 0,
	0, 482, 0, 0, 0, 484, 485, 486, 0, 0,
	487, 488, 0, 0, 489, 0, 0, 490, 491, 483,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 0, 510, 511, 0, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 524,
	523, 525, 0, 526, 0, 527, 528, 529, 0, 0,
	0, 0, 0, 530, 0, 532, 533, 534, 535, 531,
	536, 537, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 545, 546, 547, 548, 0, 549, 0, 550, 551,
	557, 558, 559, 552, 553, 560, 561, 562, 563, 564,
	0, 566, 567, 565, 568, 569, 570, 1348, 571, 572,
	554, 555, 573, 574, 0, 575, 576, 577, 578, 579,
	580, 581, 0, 0, 582, 0, 583, 584, 585, 587,
	556, 588, 593, 594, 0, 589, 590, 591, 592, 0,
	596, 597, 0, 598, 599, 0, 595, 586, 0, 600,
	601, 602, 603, 604, 605, 606, 364, 607, 0, 608,
	0, 0, 0, 0, 0, 617, 0, 609, 610, 611,
	0, 612, 0, 0, 613, 614, 615, 616, 0, 618,
	619, 0, 0, 620, 621, 622, 624, 625, 623, 626,
	0, 627, 0, 0, 628, 629, 630, 0, 1343, 0,
	1345, 632, 631, 633, 0, 634, 635, 0, 0, 0,
	0, 636, 637, 0, 638, 639, 640, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	0, 298, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 0, 0, 0, 0, 306,
	307, 0, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 1347, 333, 334, 335, 336, 337, 0, 338,
	340, 0, 0, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 0, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 0, 0, 0, 391, 0, 392, 393, 394,
	395, 396, 1342, 0, 0, 479, 0, 397, 398, 0,
	399, 400, 401, 402, 0, 0, 0, 0, 403, 404,
	405, 0, 0, 406, 0, 0, 0, 0, 0, 407,
	408, 0, 0, 0, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 0, 419,
	421, 420, 0, 422, 0, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 429, 430, 433, 0, 0, 431,
	432, 434, 435, 0, 436, 437, 439, 442, 438, 440,
	441, 443, 456, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 458, 0, 457, 0, 459,
	460, 461, 462, 469, 471, 472, 467, 468, 470, 473,
	474, 464, 465, 466, 0, 475, 463, 0, 0, 0,
	476, 477, 0, 0, 478, 0, 480, 481, 0, 0,
	482, 0, 0, 0, 484, 485, 486, 0, 0, 487,
	488, 0, 0, 489, 0, 0, 490, 491, 483, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 0, 506, 507, 508, 0,
	509, 0, 510, 511, 0, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 524, 523,
	525, 0, 526, 0, 527, 528, 529, 0, 0, 0,
	0, 0, 530, 0, 532, 533, 534, 535, 531, 536,
	537, 538, 539, 540, 0, 541, 542, 543, 0, 544,
	545, 546, 547, 548, 0, 549, 0, 550, 551, 557,
	558, 559, 552, 553, 560, 561, 562, 563, 564, 0,
	566, 567, 565, 568, 569, 570, 1348, 571, 572, 554,
	555, 573, 574, 0, 575, 576, 577, 578, 579, 580,
	581, 0, 0, 582, 0, 583, 584, 585, 587, 556,
	588, 593, 594, 0, 589, 590, 591, 592, 0, 596,
	597, 0, 598, 599, 0, 595, 586, 0, 600, 601,
	602, 603, 604, 605, 606, 364, 607, 0, 608, 0,
	0, 0, 0, 0, 617, 0, 609, 610, 611, 0,
	612, 0, 0, 613, 614, 615, 616, 0, 618, 619,
	0, 0, 620, 621, 622, 624, 625, 623, 626, 0,
	627, 0, 0, 628, 629, 630, 0, 2114, 0, 1345,
	632, 631, 633, 0, 634, 635, 0, 0, 0, 0,
	636, 637, 0, 638, 639, 640, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 0, 0, 0, 0, 306, 307,
	0, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 1347, 333, 334, 335, 336, 337, 0, 338, 340,
	0, 0, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 0,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 0, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 0, 0, 0, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 479, 0, 397, 398, 0, 399,
	400, 401, 402, 0, 0, 0, 0, 403, 404, 405,
	0, 0, 406, 0, 0, 0, 0, 0, 407, 408,
	0, 0, 0, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 0, 419, 421,
	420, 0, 422, 0, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 429, 430, 433, 0, 0, 431, 432,
	434, 435, 0, 436, 437, 439, 442, 438, 440, 441,
	443, 456, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 458, 0, 457, 0, 459, 460,
	461, 462, 469, 471, 472, 467, 468, 470, 473, 474,
	464, 465, 466, 0, 475, 463, 0, 0, 0, 476,
	477, 0, 0, 478, 0, 480, 481, 0, 0, 482,
	0, 0, 0, 484, 485, 486, 0, 0, 487, 488,
	0, 0, 489, 0, 0, 490, 491, 483, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	0, 510, 511, 0, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 524, 523, 525,
	0, 526, 0, 527, 528, 529, 0, 0, 0, 0,
	0, 530, 0, 532, 533, 534, 535, 531, 536, 537,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 545,
	546, 547, 548, 0, 549, 0, 550, 551, 557, 558,
	559, 552, 553, 560, 561, 562, 563, 564, 0, 566,
	567, 565, 568, 569, 570, 1348, 571, 572, 554, 555,
	573, 574, 0, 575, 576, 577, 578, 579, 580, 581,
	0, 0, 582, 0, 583, 584, 585, 587, 556, 588,
	593, 594, 0, 589, 590, 591, 592, 0, 596, 597,
	0, 598, 599, 0, 595, 586, 0, 600, 601, 602,
	603, 604, 605, 606, 364, 607, 0, 608, 0, 0,
	0, 0, 0, 617, 0, 609, 610, 611, 0, 612,
	0, 0, 613, 614, 615, 616, 0, 618, 619, 0,
	0, 620, 621, 622, 624, 625, 623, 626, 0, 627,
	0, 0, 628, 629, 630, 0, 2081, 0, 1345, 632,
	631, 633, 0, 634, 635, 0, 0, 0, 0, 636,
	637, 0, 638, 639, 640, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 0, 298,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 0, 0, 0, 0, 306, 307, 0,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	1347, 333, 334, 335, 336, 337, 0, 338, 340, 0,
	0, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 0, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 479, 0, 397, 398, 0, 399, 400,
	401, 402, 0, 0, 0, 0, 403, 404, 405, 0,
	0, 406, 0, 0, 0, 0, 0, 407, 408, 0,
	0, 0, 409, 410, 411, 0, 412, 0, 0, 0,
	413, 414, 415, 416, 417, 418, 0, 419, 421, 420,
	0, 422, 0, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 430, 433, 0, 0, 431, 432, 434,
	435, 0, 436, 437, 439, 442, 438, 440, 441, 443,
	456, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 458, 0, 457, 0, 459, 460, 461,
	462, 469, 471, 472, 467, 468, 470, 473, 474, 464,
	465, 466, 0, 475, 463, 0, 0, 0, 476, 477,
	0, 0, 478, 0, 480, 481, 0, 0, 482, 0,
	0, 0, 484, 485, 486, 0, 0, 487, 488, 0,
	0, 489, 0, 0, 490, 491, 483, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 0, 506, 507, 508, 0, 509, 0,
	510, 511, 0, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 524, 523, 525, 0,
	526, 0, 527, 528, 529, 0, 0, 0, 0, 0,
	530, 0, 532, 533, 534, 535, 531, 536, 537, 538,
	539, 540, 0, 541, 542, 543, 0, 544, 545, 546,
	547, 548, 0, 549, 0, 550, 551, 557, 558, 559,
	552, 553, 560, 561, 562, 563, 564, 0, 566, 567,
	565, 568, 569, 570, 1348, 571, 572, 554, 555, 573,
	574, 0, 575, 576, 577, 578, 579, 580, 581, 0,
	0, 582, 0, 583, 584, 585, 587, 556, 588, 593,
	594, 0, 589, 590, 591, 592, 0, 596, 597, 0,
	598, 599, 0, 595, 586, 0, 600, 601, 602, 603,
	604, 605, 606, 364, 607, 0, 608, 0, 0, 0,
	0, 0, 617, 0, 609, 610, 611, 0, 612, 0,
	0, 613, 614, 615, 616, 0, 618, 619, 0, 0,
	620, 621, 622, 624, 625, 623, 626, 0, 627, 0,
	0, 628, 629, 630, 0, 0, 0, 1345, 632, 631,
	633, 0, 634, 635, 0, 0, 0, 0, 636, 637,
	0, 638, 639, 640, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 0, 298, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 0, 0, 0, 0, 306, 307, 0, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 1347,
	333, 334, 335, 336, 337, 0, 338, 340, 0, 0,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 479, 0, 397, 398, 0, 399, 400, 401,
	402, 0, 0, 0, 0, 403, 404, 405, 0, 0,
	406, 0, 0, 0, 0, 0, 407, 408, 0, 0,
	0, 409, 410, 411, 0, 412, 0, 0, 0, 413,
	414, 415, 416, 417, 418, 0, 419, 421, 420, 0,
	422, 0, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 429, 430, 433, 0, 0, 431, 432, 434, 435,
	0, 436, 437, 439, 442, 438, 440, 441, 443, 456,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 458, 0, 457, 0, 459, 460, 461, 462,
	469, 471, 472, 467, 468, 470, 473, 474, 464, 465,
	466, 0, 475, 463, 0, 0, 0, 476, 477, 0,
	0, 478, 0, 480, 481, 0, 0, 482, 0, 0,
	0, 484, 485, 486, 0, 0, 487, 488, 0, 0,
	489, 0, 0, 490, 491, 483, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 0, 510,
	511, 0, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 520, 0, 521, 522, 524, 523, 525, 0, 526,
	0, 527, 528, 529, 0, 0, 0, 0, 0, 530,
	0, 532, 533, 534, 535, 531, 536, 537, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 545, 546, 547,
	548, 0, 549, 0, 550, 551, 557, 558, 559, 552,
	553, 560, 561, 562, 563, 564, 0, 566, 567, 565,
	568, 569, 570, 1348, 571, 572, 554, 555, 573, 574,
	0, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	582, 0, 583, 584, 585, 587, 556, 588, 593, 594,
	0, 589, 590, 591, 592, 0, 596, 597, 0, 598,
	599, 0, 595, 586, 0, 600, 601, 602, 603, 604,
	605, 606, 364, 607, 0, 608, 0, 0, 0, 0,
	0, 617, 0, 609, 610, 611, 0, 612, 0, 0,
	613, 614, 615, 616, 0, 618, 619, 0, 0, 620,
	621, 622, 624, 625, 623, 626, 0, 627, 0, 0,
	628, 629, 630, 0, 0, 0, 0, 632, 631, 633,
	0, 634, 635, 0, 0, 0, 0, 636, 637, 0,
	638, 639, 640, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1848, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	1817, 1818, 1867, 1850, 1851, 1852, 1861, 1862, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 1854, 1848, 0, 0, 0, 0, 1819, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 1839, 1867,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 0,
	0, 1854, 1848, 1825, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 1817, 1818, 1867, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	1842, 1843, 1844, 1845, 0, 1873, 0, 0, 1854, 1848,
	1825, 0, 1858, 0, 1819, 1868, 1820, 0, 0, 0,
	0, 1847, 1849, 0, 1839, 1867, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 1864, 0, 1865,
	0, 0, 1873, 0, 0, 0, 1834, 1835, 0, 1858,
	0, 1819, 1868, 0, 0, 0, 0, 0, 1847, 1849,
	0, 1839, 0, 0, 1856, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 1864, 0, 1865, 0, 0, 1840,
	0, 0, 0, 1834, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 1840, 0, 0, 1825,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 0, 0, 1870, 0, 1825, 0, 1858, 0,
	0, 1868, 1866, 0, 0, 0, 0, 1847, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 1864, 0, 1865, 0, 0, 0, 0,
	0, 1870, 1834, 1835, 0, 1858, 0, 0, 1868, 0,
	0, 0, 0, 0, 1847, 1849, 0, 0, 0, 1846,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 1865, 0, 0, 1840, 0, 0, 0, 1834,
	1835, 0, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 1841,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	1872, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 1841, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 1846, 0, 0, 0, 2618, 0, 0, 1857,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 1841, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 1817, 1818, 4691,
	1850, 1851, 1852, 1861, 1862, 1863, 1872, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 1854,
	1848, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 1857, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 4687, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 1817, 1818, 4594, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 0, 0, 0, 1842, 1843, 1844,
	1845, 0, 0, 0, 0, 1854, 1848, 1825, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 1858, 0, 1819, 1868,
	0, 0, 0, 0, 0, 1847, 1849, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 1864, 0, 1865, 0, 0, 0, 0, 0, 0,
	1834, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 1858, 0, 0, 1868, 0, 0, 0, 0,
	0, 1847, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 1865,
	0, 0, 0, 0, 0, 0, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 1854, 1848, 0, 0, 0, 0,
	0, 0, 1820, 0, 0, 1866, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 1872, 0, 0, 0, 1873, 0,
	0, 0, 0, 0, 1870, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1832, 1838, 1860,
	1837, 1833, 1841, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 4552, 0, 0, 0,
	0, 0, 1842, 1843, 1844, 1845, 0, 0, 0, 1859,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 1854, 1848,
	0, 1858, 0, 0, 1868, 0, 1820, 0, 0, 0,
	1847, 1849, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 1865, 0,
	0, 0, 1873, 0, 0, 1834, 1835, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 1856, 0, 0, 0, 0, 0, 0,
	1836, 0, 1857, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 4551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 0, 1870, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852,
	1861, 1862, 1863, 0, 0, 1858, 0, 0, 1868, 0,
	0, 0, 0, 0, 1847, 1849, 1854, 1848, 1846, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	1864, 0, 1865, 1867, 0, 0, 0, 0, 0, 1834,
	1835, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 0, 0, 0, 1856, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 1839,
	0, 0, 1840, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0,
	0, 4372, 1846, 1858, 0, 0, 1868, 0, 0, 0,
	0, 0, 1847, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 1864, 0,
	1865, 0, 0, 0, 0, 0, 0, 1834, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 1856, 0, 1817, 1818, 0,
	1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	1848, 0, 0, 1872, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 1866, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 1855, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 0, 4206, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 1854, 1848,
	0, 0, 0, 0, 0, 0, 1820, 1842, 1843, 1844,
	1845, 0, 0, 1841, 0, 1867, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	1859, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 1858, 0, 0, 1868,
	1836, 0, 0, 0, 0, 1847, 1849, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 1865, 0, 0, 0, 0, 0, 0,
	1834, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 0, 1857, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 1866,
	0, 0, 0, 4133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 1855, 1868, 0,
	0, 0, 0, 0, 1847, 1849, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 1865, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0,
	0, 0, 1840, 1846, 0, 0, 0, 0, 0, 0,
	0, 1854, 1848, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 1841, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 1866, 0,
	0, 0, 0, 1859, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1855, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 1841, 1857, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 1831, 1832, 1838, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 1859, 0, 0, 0, 4132, 1817, 1818, 0,
	1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 1858, 0,
	0, 1868, 0, 0, 0, 0, 0, 1847, 1849, 1854,
	1848, 0, 0, 1872, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 1864, 0, 1865, 1867, 0, 0, 0,
	0, 0, 1834, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 0, 0, 0,
	1856, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 1840, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 1866, 0, 0, 0, 4131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 1842, 1843, 1844,
	1845, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1848, 1846, 1858, 0, 0, 1868,
	0, 1820, 0, 0, 0, 1847, 1849, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 1864, 0, 1865, 0, 0, 0, 1873, 0, 0,
	1834, 1835, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 1839, 0, 1856, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 1842, 1843, 1844, 1845, 0, 0, 0, 1870, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 3786, 0,
	1858, 0, 0, 1868, 0, 0, 0, 0, 0, 1847,
	1849, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 1865, 0, 0,
	0, 0, 0, 0, 1834, 1835, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 1817, 1818, 0, 1850, 1851, 1852,
	1861, 1862, 1863, 1859, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1848, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 1866, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 1855, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1832, 1838, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 3285, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	1841, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1848, 0, 1858, 0, 0, 1868, 0, 1820, 0,
	0, 0, 1847, 1849, 0, 0, 0, 1867, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	1865, 0, 0, 0, 1873, 0, 0, 1834, 1835, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 1856, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 1866, 0, 0, 0,
	3284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 1870, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 1858, 0, 0,
	1868, 0, 0, 0, 0, 0, 1847, 1849, 1854, 1848,
	1846, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 1864, 0, 1865, 1867, 0, 0, 0, 0,
	0, 1834, 1835, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 1856,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 1839, 0, 0, 1840, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 0, 0, 3283, 1846, 1858, 0, 0, 1868, 0,
	0, 0, 0, 0, 1847, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	1864, 0, 1865, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 1856, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1848, 0, 0, 1872, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 1866, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1855, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 3282, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	1854, 1848, 0, 0, 0, 0, 3218, 0, 1820, 1842,
	1843, 1844, 1845, 0, 0, 1841, 0, 1867, 0, 1825,
	0, 3347, 0, 0, 0, 0, 3346, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 0, 1859, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 1858, 0,
	0, 1868, 1836, 0, 0, 0, 0, 1847, 1849, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 1865, 0, 0, 0, 0,
	0, 0, 1834, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 3219, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 1857, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 1866, 0, 3247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 1855,
	1868, 0, 0, 0, 0, 0, 1847, 1849, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 1865, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2765, 0, 0, 0, 0, 1856,
	0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863,
	0, 0, 0, 0, 1840, 1846, 0, 0, 0, 0,
	0, 0, 0, 1854, 1848, 0, 0, 0, 2764, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 1841, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	1866, 0, 0, 0, 0, 1859, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 1855, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 1843, 1844, 1845, 0, 0, 1841, 1857, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 1859, 0, 0, 0, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0,
	1858, 0, 0, 1868, 0, 0, 0, 0, 0, 1847,
	1849, 1854, 1848, 0, 0, 1872, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 1864, 0, 1865, 1867, 0,
	0, 0, 0, 0, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 0,
	0, 0, 1856, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 1840, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1848, 1846, 1858, 0,
	0, 1868, 0, 1820, 0, 0, 0, 1847, 1849, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 1864, 0, 1865, 0, 0, 0, 1873,
	0, 0, 1834, 1835, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1839, 0,
	1856, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	1085, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 0,
	1870, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 1868, 0, 0, 0, 0,
	0, 1847, 1849, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 1865,
	0, 0, 0, 0, 0, 0, 1834, 1835, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 1859, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1848,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 1866, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 1855, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 1841, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 3353, 0, 0, 0, 0, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1848, 0, 0, 1858, 3348, 0, 1868, 1820,
	0, 0, 0, 0, 1847, 1849, 0, 0, 1867, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 1865, 3767, 0, 1873, 0, 0, 0, 1834,
	1835, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 1856, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 1870, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 1858, 0,
	0, 1868, 0, 0, 0, 0, 0, 1847, 1849, 0,
	1854, 1848, 1846, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 1864, 0, 1865, 0, 1867, 0, 0,
	0, 0, 1834, 1835, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	1856, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 1839, 0, 1840, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 0, 1846, 0, 1858, 0, 0,
	1868, 0, 0, 0, 0, 0, 1847, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 1864, 0, 1865, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 1856,
	0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1848, 0, 1872, 0, 3286, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	1866, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 1855, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 3313,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 0, 0,
	1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 1854, 1848, 0, 0, 0, 0, 0, 0,
	1820, 1842, 1843, 1844, 1845, 0, 0, 1841, 0, 1867,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 1859, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	1858, 0, 0, 1868, 1836, 0, 0, 0, 0, 1847,
	1849, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 1865, 0, 0,
	0, 0, 0, 0, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1842, 1843, 1844, 1845, 0, 0, 0, 1857, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 1855, 1868, 0, 0, 0, 0, 0, 1847, 1849,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 1865, 0, 0, 0,
	0, 0, 0, 1834, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 0, 0, 1840, 1846, 0, 0,
	0, 0, 0, 0, 0, 1854, 1848, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	1841, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 1866, 0, 0, 0, 0, 1859, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	1855, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 1841,
	1857, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 1868, 0, 0, 0, 0,
	0, 1847, 1849, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 1865,
	0, 0, 0, 0, 0, 0, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 968,
	0, 1017, 2337, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 976, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 1866, 0, 0, 0, 0,
	0, 991, 0, 974, 973, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 993, 0, 0, 0, 0,
	0, 975, 0, 0, 0, 0, 978, 0, 0, 0,
	0, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	988, 989, 0, 0, 0, 0, 0, 0, 0, 1006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1018, 980, 1846,
	0, 0, 0, 0, 981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 982, 0, 0, 0,
	0, 0, 0, 0, 0, 1015, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 984, 0, 0, 0, 0, 0, 0, 0,
	972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 985, 986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 994, 992, 0, 0,
	0, 0, 0, 0, 987, 0, 0, 0, 1003, 0,
	0, 1023, 1022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 1025, 1014, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1019, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 979, 0, 0, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 977,
	0, 0, 0, 1010, 1011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1020, 1008, 0, 0, 0, 0, 0, 0, 0, 1026,
	1004, 0, 0, 997, 995, 0, 1000, 0, 0, 0,
	0, 0, 1001, 0, 0, 970, 0, 1021, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1012, 0, 1002, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1024, 0, 0, 0, 0, 0, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1007, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1009,
}

var sqlPact = [...]int{
	6908, -1000, -1000, -1000, -1000, 197, -1000, -1000, 195, 194,
	193, 192, 191, 190, 188, 187, 186, 185, 180, -1000,
	-1000, -1000, -1000, -1000, -1000, 178, -1000, -1000, 176, -1000,
	175, 174, 173, -1000, -1000, 172, -1000, 170, -1000, -1000,
	-1000, -1000, 167, 165, 163, 90330, 89772, 90879, 2316, 114165,
	97503, 2248, 79782, 113607, 79224, 113049, 2161, 12599, 112491, 2749,
	160, -1000, 111933, 155, 150, 149, -1000, 111375, -1000, 2201,
	-1000, 145, -1000, 4873, 69171, 143, 140, 139, 137, 2686,
	136, -1000, 135, 134, -1000, -1000, 133, -1000, 10128, 1531,
	-1000, 130, 125, -1000, 307, 95280, 123, 122, 111, 2526,
	110, 109, 67515, 108, 107, 106, 2406, 2862, -1000, -1000,
	2046, -1000, -1000, 105, 103, 102, 101, 100, 97, 96,
	95, 94, 93, 92, 91, 90, -1000, 88, 87, 86,
	85, 84, -1000, 83, 81, 76, -1000, 74, -1000, 66,
	65, 62, 61, 60, 59, 58, 57, 56, 51, 48,
	39, 38, 37, 132017, -1000, -1000, 36, 1913, 1708, 1707,
	1706, 1705, 1680, 979, 35, 34, 33, 31, 28, 27,
	25, 24, 22, 21, 20, 16, 15, 14, 9, 6,
	3, 2, 124, 1, 0, -3, -4, -7, -12, -16,
	2207, -1000, 1565, 861, 31646, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 121851, 114714, -21, -79, -24, -1000, 3358,
	1039, 55735, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	303, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 454, 2227, 752, -1000, -1000,
	-1000, 110826, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2314, -56, -1000, 2039, -1000, -1000, -1000, -1000, -1000, 750,
	-1000, 2312, 278, 2254, -1000, -1000, -1000, 3377, 2453, 3778,
	3776, 3775, 3774, 3772, 121302, 1792, 3770, 2543, 3768, 3763,
	3762, 3761, 3760, 3759, 3756, -1000, 89214, 1056, 88656, 88098,
	3398, 110277, 87540, 109719, 124056, 47750, 815, 3376, -1000, -1000,
	-1000, -1000, -1000, -1000, 114714, -1000, 1054, -1000, -1000, 3754,
	2048, 748, 96945, -1000, -1000, 109161, 1762, -1000, -1000, -1000,
	923, 1208, 33359, 33359, 33359, 302, -1000, -1000, -1000, -1000,
	-1000, -1000, 3753, 3749, 3746, 3740, 3739, -1000, -1000, 78666,
	24606, 78108, 77550, 108603, 24038, 86982, 86424, 3738, 3732, 3730,
	108045, 123507, 3507, 3506, 1052, 2029, 1456, -1000, -1000, -1000,
	-1000, -1000, -1000, -45, 71391, 3551, 114714, -1000, 296, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 47179, 663, 46608, 664,
	46037, 418, 107487, -1000, -1000, -1000, -1000, 73665, -1000, 106929,
	2443, 3727, 3725, 1153, 3724, 3281, 1788, 3723, 1851, 1239,
	3722, 3717, 3715, 3711, 3710, 3709, 3706, 1446, 106371, 2974,
	1484, 105813, 1685, 122958, 1050, 85866, 90879, 2631, 105255, 1306,
	1303, -1000, -1000, -1000, -1000, 3091, 2845, 2843, 1068, -1000,
	-1000, -1000, -1000, 59114, 8518, 7453, -1000, -1000, 14576, 104697,
	61944, 90879, 90879, -1000, -1000, -1000, -1000, -1000, -1000, 45466,
	371, 44895, 768, 104139, -1000, -1000, 59680, 2918, -1000, -1000,
	-1000, -1000, -1000, 103581, 44324, 290, 43753, 714, 114714, -1000,
	2969, 1815, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2602, 1697, 3554, 2699, 73097, 2013, 1397, 3339, 3082, 3077,
	1505, 2027, 3069, 3703, 2607, 3047, 3034, 3030, 3022, 3020,
	1578, 2583, 363, 2578, 31075, 2944, 1679, 43182, 1526, 1509,
	3016, 3015, 3566, 2003, 1983, 2116, 76992, 3702, 3700, 3302,
	3000, 2993, 2773, 2990, -1000, 2917, 1444, 292, -1000, -1000,
	-1000, -1000, -1000, -1000, 1492, -1000, -1000, -1000, -1000, -1000,
	81429, -1000, -1000, 1325, -1000, -1000, 1325, -1000, -1000, -1000,
	-1000, -1000, 1279, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1565, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3247, -1000, 2025, -1000,
	-1000, 2506, 3275, 3275, 3275, 3375, 434, 433, -1000, 124,
	-1000, -1000, 131722, -1000, -1000, 48321, 48321, 48321, 48321, 48321,
	48321, 48321, 48321, 2165, -1000, 747, -1000, -1000, 786, -1000,
	746, 675, 630, -1000, -1000, -1000, -1000, -1000, -1000, 745,
	-1000, -1000, -1000, -1000, -1000, -1000, 3551, -1000, 27516, -1000,
	-1000, -1000, 508, 743, 48321, -1000, -1000, 3584, 3583, 958,
	-1000, 291, 938, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2967, 742, 740, -1000, 738,
	735, 734, 733, 731, -1000, 728, -1000, 727, 725, 723,
	721, 713, 710, 708, 707, -1000, 2064, -1000, -1000, -1000,
	-1000, -1000, -1000, 660, 659, 659, 659, -1000, 1044, -1000,
	-1000, -1000, 301, 658, 266, 655, 652, 651, -1000, 706,
	699, 697, 696, 690, 689, 684, 681, 680, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1041, -1000, -1000, -1000, -1000,
	-46, 114714, -1000, 454, -46, -1000, -1000, 679, -1000, 35672,
	35672, 35672, -1000, -1000, 2311, 48321, -1000, 2553, -1000, -38,
	-38, 897, 57412, -1000, 54597, 897, 297, 797, 63059, -1000,
	2913, -1000, -1000, 677, 286, -1000, -1000, -1000, -1000, 25172,
	2911, 114714, 114714, 114714, 90879, 90879, 90879, 114714, 3698, 3114,
	48321, -1000, -1000, 68613, 125703, 91428, -1000, -1000, 3490, 69727,
	68064, 125703, 2963, 125154, 3693, -1000, -1000, -1000, -1000, -1000,
	3148, 3692, 3691, 3690, -1000, 114714, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 223, 3146, -1000, -1000, 94722, 223, 3144,
	-1000, 223, 3143, -1000, 94173, -1000, -1000, 2191, 3142, -1000,
	-1000, 226, 3137, -1000, -1000, -1000, 224, 3132, -1000, -1000,
	285, -110, 3131, -1000, -1000, -1000, -1000, -1000, -1000, 131722,
	-1000, -1000, -1000, 124605, -1000, 3312, -1000, 114714, -1000, 48321,
	-1000, -1000, 3488, 1550, 3307, 3427, -1000, -1000, -61, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2512, 2500, 1148, 2351,
	-1000, 3178, 1414, 33359, 3255, -1000, -1000, -1000, -1000, -1000,
	280, 25172, -1000, -1000, -1000, -1000, -1000, -1000, 2694, 3130,
	1459, -1000, 2350, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1984, 3122, -1000, 2225, 3117, 1942, -1000, -1000,
	1629, -1000, 3299, -1000, -1000, 1859, 3113, -36, -1000, -1000,
	2399, -1000, -1000, -1000, -1000, 1970, -1000, 1315, 3109, -1000,
	2698, 2698, 85308, 3112, 61378, 59680, 71391, -51, -1000, -1000,
	-1000, -1000, -177, -1000, 23466, 131722, -1000, -1000, -1000, -1000,
	1700, 131722, 888, -1000, -1000, 3107, -1000, 131722, 864, -1000,
	-1000, 3105, -1000, 2582, -1000, 2960, -1000, -1000, 2404, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2403, -1000, -1000,
	3689, -1000, -1000, 3688, -1000, 3687, 3686, 3679, -1000, 1734,
	2020, 3672, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	84759, 2302, -1000, -1000, 83643, 2958, -1000, 2402, 3421, -1000,
	84201, 1048, -1000, 974, 2401, -1000, 93624, 945, 2400, -1000,
	3671, 3395, 2662, 974, 2398, -1000, -1000, -1000, -1000, -1000,
	961, -1000, 65287, -1000, 65287, -1000, 1563, -1000, 120753, -38,
	90879, 3551, -1000, -80, -1000, -1000, -1000, 1039, -1000, 58543,
	-1000, 58543, 96387, 74231, 951, 2909, 66956, 131459, -1000, 996,
	-1000, -1000, 131722, -1000, -1000, -1000, 2581, -1000, -171, 2697,
	-1000, 74231, 60812, 2579, -1000, 131722, -1000, -1000, -1000, -1000,
	131722, -1000, -1000, -1000, 74231, 83643, -1000, 103023, 83094, -1000,
	-1000, 1435, 2547, -1000, -1000, -1000, 74231, 1320, 74231, 74231,
	74231, -1000, 102465, -1000, -1000, 2051, 1569, 3304, 2021, 90879,
	-1000, 1898, -1000, -1000, -1000, 3323, 3098, 114714, -1000, -1000,
	2947, -1000, 70842, 93075, -1000, 92526, -1000, 91977, -1000, 90879,
	-1000, 90879, -1000, 3670, 3668, 3666, -1000, -1000, 3664, -1000,
	3661, 3321, -1000, 653, 42611, 131722, 3309, -1000, 3659, 1967,
	2944, 131722, -1000, 3031, 1702, 1699, 114714, -1000, -1000, 114714,
	-1000, 114714, -1000, -1000, -1000, 1524, -1000, -1000, 2507, -1000,
	-1000, -1000, -1000, 90879, 90879, 90879, 90879, 1224, -1000, 42040,
	-1000, -1000, 2977, 3658, 1709, -1000, 1854, -1000, 2907, 3318,
	-1000, 1433, 1715, 274, 3587, -1000, -1000, 232, -1000, -1000,
	-61, -1000, 120204, -1000, 2506, -1000, 114714, -1000, 2529, 2933,
	2943, 1760, 2324, 2600, -1000, 41469, 2566, 51747, 2330, 124,
	-1000, -1000, 124, 124, 32788, -1000, -1000, 69727, 69727, 25172,
	1290, 48321, 48321, 48321, 48321, 48321, 48321, 48321, 48321, 48321,
	48321, 48321, 48321, 48321, 48321, 48321, 48321, 48321, 48321, 48321,
	48321, 48321, 48321, 48321, 48321, 48321, 48321, 48321, 48321, 48321,
	48321, 48321, 48321, 48321, 48321, 48321, 48321, 1975, 48321, 1277,
	48321, 48321, 48321, 48321, 1947, -1000, -1000, 1972, 531, 1991,
	675, -1000, -1000, -1000, 3531, 3531, 3531, 580, 580, 580,
	15648, 15648, 602, 3653, 786, -1000, 48321, -1000, 119, 57968,
	48321, 25740, -1000, 433, 10444, 2510, -1000, 432, 26340, -1000,
	-1000, -1000, 27516, 630, 40869, 48321, 1005, 131722, -1000, -1000,
	1443, 3553, 22894, 2983, 2767, 673, 866, 865, 30475, 29875,
	29275, 28675, 821, 816, 48321, 48321, 48321, 48321, 48321, 48321,
	48321, 48321, -1000, -1000, 3558, -1000, 3553, -1000, -1000, -1000,
	-1000, 3553, 1289, 1287, 3553, -1000, 3553, 3553, 8662, 8662,
	40298, 39727, 39156, 52318, 38585, 48321, 28104, 38014, 37443, -1000,
	114714, -46, 3487, 48321, 241, -1000, 130040, -1000, 241, 241,
	672, -97, 131722, 2556, 2556, 56294, 2356, 2190, 2190, 2190,
	-1000, 897, 17712, 897, 100811, 2200, 897, 897, 253, 284,
	430, 54031, 2553, 100811, 771, 668, -26, -28, -29, -1000,
	-1000, -31, -32, -1000, -1000, 90879, 666, 25740, 25172, 251,
	1996, -104, 2613, 2611, -1000, 2606, 2599, -1000, 2597, 2301,
	-1000, -1000, 1731, -107, 1275, 90879, 114714, 1384, 3651, -112,
	-1000, 5221, -113, -1000, 1336, 243, 3553, -1000, -1000, -1000,
	-1000, -1000, 3650, 3649, -1000, 1019, 662, 661, 383, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 660, 659, 659,
	659, -1000, 301, 658, 266, 655, 652, 651, -1000, -1000,
	-1000, -1000, -1000, 2903, 90879, 114714, 1312, 3647, -110, 91428,
	-83, -1000, -1000, 114714, -1000, -1000, -1000, 3646, -1000, 90879,
	-1000, -1000, 90879, 223, 3102, -1000, 90879, -1000, 90879, 222,
	3099, -1000, -1000, 114714, -1000, 90879, 90879, -1000, 114714, 114714,
	114714, 125703, 125703, 221, -1000, 90879, 892, -114, 1162, -61,
	-1000, -1000, -1000, -1000, 1325, -1000, 2043, -1000, -1000, -1000,
	-1000, -1000, -1000, 1324, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 958, -1000, -1000, -1000, -1000, -1000, -1000, 3544,
	3540, -48, -1000, -1000, 25172, -1000, -63, 1670, 1865, 1270,
	-1000, 76434, 2359, 3305, 3645, 2654, 3292, 1560, -1000, 1519,
	-1000, 3387, 81429, 3437, 3475, 1338, -1000, 2898, -1000, -1000,
	922, 1582, 1696, 1269, 1266, 81429, 2225, -1000, 69727, -1000,
	2627, 3373, 1396, 1387, 1396, 1396, 1380, -1000, 81429, 1682,
	1265, 1264, 1263, -1000, -1000, 1941, 1928, -1000, -1000, 101916,
	-1000, 1262, 1260, 3505, 3247, 2132, 831, 1917, -1000, -65,
	3436, 3464, 1331, -1000, 2895, 1257, -1000, -1000, -1000, 3372,
	90879, 25172, 1594, 1592, 1579, 1668, 1256, -49, -1000, 3432,
	1254, 1252, -1000, 1025, 2473, 3233, -1000, 125703, 1025, 1025,
	1901, 3096, 2680, 1701, -1000, 2693, 894, 2692, -1000, -1000,
	-1000, 894, -51, 71391, 114714, 228, -1000, 119, 48321, 48321,
	119, 48321, 119, -1000, 3409, 3094, 3093, -1000, -1000, -1000,
	-1000, -1000, 3644, 1954, 2527, -1000, -1000, 650, 2396, 2890,
	114714, 2634, -52, 90879, -1000, 70293, 3092, 125703, 2225, 2395,
	-1000, -1000, 82536, -1000, 3089, 454, 2393, -1000, 578, 3642,
	3085, -1000, 119655, -1000, 3312, 1299, 3083, 1106, 632, 3486,
	-1000, 632, 65844, -1000, 114714, -1000, -38, 4969, 75336, -115,
	-116, 427, -1000, 101367, 114714, 114714, 3256, 1992, 1990, -1000,
	971, 59680, -1000, 59680, -123, -1000, -171, 2691, 1461, -1000,
	951, 951, 894, -1000, 894, -1000, 90879, 2941, -1000, -1000,
	74231, 951, 951, 951, -1000, -1000, -1000, -1000, 3638, 3636,
	3635, 3634, -1000, -1000, 973, 90879, 114714, 90879, -1000, -1000,
	1678, -1000, 218, -1000, 125703, -1000, 125703, 114714, 90879, -1000,
	973, 114714, 973, 114714, 973, 114714, 973, 973, -1000, -1000,
	-1000, -1000, -1000, 119, -1000, -1000, 131722, -1000, 48321, -1000,
	-1000, 1517, 3633, 1621, -1000, 2938, -1000, 2934, -1000, 5,
	-1000, -1000, 1826, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3630, 131722, -1000, 1945, -1000, -1000, -1000, -1000,
	90879, 90879, 90879, 90879, 114714, 3232, -1000, 114714, 3194, 90879,
	-1000, 3586, -1000, -1000, 81429, -1000, 2529, 2933, -1000, -1000,
	-1000, -1000, -1000, -1000, 1436, 2261, -1000, 2565, -1000, 1549,
	-1000, -1000, -1000, 131722, 52889, -1000, -1000, 131722, 1798, -1000,
	51176, 50605, -1000, -1000, 1695, 90879, 2638, -1000, 2638, -126,
	-1000, 129777, 2564, 90879, -1000, -1000, -1000, -1000, -1000, 916,
	552, 552, 1317, 1317, 1317, 1317, 3412, 5571, 6077, 5188,
	5126, 5126, 471, 471, 471, 471, 471, 5126, 5959, 580,
	580, 5959, 5959, 5959, 5959, 5959, 580, 580, 580, 5126,
	5126, 5126, 580, 15648, 13234, 11263, 48321, 48321, 1244, 1953,
	531, 10628, 48321, 12023, 12023, 12023, 12023, -1000, 2084, -1000,
	-1000, -1000, -1000, 2886, 649, 52318, 52318, -1000, -1000, -1000,
	-1000, 26928, 48321, -1000, -1000, -1000, -1000, 36843, -1000, -1000,
	129385, -326, 426, -1000, 210, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 425, -125,
	11, -1000, 48321, 48321, 48321, 424, -1000, 209, 48321, 114714,
	-1000, 126262, 770, -124, -1000, -128, 1447, -1000, 48321, -1000,
	-1000, 1240, -1000, 1238, 1233, 1232, -1000, 648, 423, -1000,
	206, -1000, 2178, 646, 645, 48321, -1000, -1000, -1000, -1000,
	-1000, 129187, -1000, -1000, 129003, -1000, -1000, 128740, -1000, -1000,
	128556, -1000, -1000, -1000, -1000, -1000, 131330, 16975, 16513, 14352,
	9402, 12337, 11897, -129, 422, -137, 416, 915, 906, 415,
	405, 401, -144, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -146, 396, -1000, 2880, -125,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 393, -1000,
	391, -1000, 131067, -125, 389, 7305, -1000, 52318, 52318, 52318,
	52318, -1000, 387, -1000, 129648, -1000, 130868, 36272, 36272, 36272,
	386, 130685, 48321, -125, -147, -1000, -152, -1000, -1000, 520,
	-155, 1001, 35672, 55176, 25172, -1000, 1001, 1001, 48321, -1000,
	48321, 2575, -1000, -1000, -1000, -1000, 2572, 1885, 2556, 56294,
	-1000, -1000, -1000, -1000, 100811, -1000, 3551, 3260, -1000, 100811,
	-1000, -1000, 114714, 454, -1000, 100811, 100811, 25172, 897, -1000,
	897, 100811, 807, -1000, -1000, -1000, -1000, -1000, 378, 63618,
	11, 205, 25172, 974, -1000, -1000, 2687, 2687, 2687, 2687,
	2687, 90879, -1000, -1000, 125703, 1230, -53, -85, 2689, -1000,
	3511, -1000, 2065, -1000, 69727, -1000, 778, 963, 25172, -1000,
	-1000, -1000, 644, -1000, 3553, 3553, -1000, 3553, 125703, 2875,
	238, 2685, -1000, 217, 125703, 3629, -1000, -1000, 223, -1000,
	90879, 223, 223, -1000, 90879, 90879, 2191, -1000, 226, -1000,
	224, -1000, -1000, -110, -1000, 993, 33359, -1000, 1325, -1000,
	-1000, 1591, -1000, 1986, -1000, 1284, -1000, -1000, -1000, -1000,
	33359, -1000, 2856, 114714, 114714, 90879, -1000, 114714, -1000, 2124,
	125703, -1000, 2390, 119106, 2379, 69727, 114714, -1000, -1000, 640,
	934, 2563, 2562, 1104, 114714, 114714, 2560, 118557, 118008, -1000,
	3626, 114714, 2059, 48321, 3367, 2249, 2210, 119, 119, -1000,
	119, 119, 119, -1000, 639, 1355, 90879, 90879, 114714, 125703,
	90879, 1897, -1000, -1000, -1000, -1000, -1000, 81978, -1000, -1000,
	3557, 3556, -1000, 1396, -1000, -1000, -1000, 1396, 2225, 1896,
	114714, 125703, 90879, 125703, 117459, 116910, -1000, -1000, 1662, 114714,
	-1000, -1000, -1000, -1000, 1471, -1000, 831, 2094, 119, 119,
	-1000, 119, 119, 119, 638, 25172, 1936, -1000, 2912, 114714,
	3577, 116361, 3576, 114714, 114714, 114714, 125703, 3326, 114714, 114714,
	125703, -1000, 115812, 2473, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 72529, 1111, 114714, 1315, -1000,
	-1000, 1661, 1228, 1227, 81429, 2103, 1654, 1809, 125703, 59680,
	968, 59680, 2667, -1000, -1000, 22322, -1000, 131722, 131722, -1000,
	131722, -1000, 70293, 74231, 114714, -1000, 1040, 114714, 75885, 940,
	3072, 64730, -177, 951, 74231, 90879, -52, 2634, 114714, -1000,
	-1000, 2225, 3061, 454, 2388, -1000, 125703, 3485, 3055, 635,
	3625, 3622, -1000, 90879, 2298, 2386, -1000, -1000, 115263, 3056,
	831, 114714, 1001, 56294, 1905, -1000, 62503, 1072, 114714, 1817,
	162, -1000, -1000, -1000, -13, 114714, -1000, 793, -1000, -1000,
	4969, 4969, 951, -276, 633, -1000, 875, 873, 60246, -157,
	-1000, 203, 631, 872, 870, -1000, 4968, -1000, -171, -1000,
	74231, 971, 59680, 2868, 2860, -1000, -1000, 992, -1000, 1409,
	951, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -41, 1796, 114714, -110, -110, -73, -53, -1000,
	973, -1000, 973, -1000, 973, -1000, -1000, -1000, 131722, -1000,
	-1000, -1000, 1573, 1571, 114714, -1000, -1000, 114714, -1000, 25172,
	114714, 90879, 25172, 90879, 2928, 2926, -1000, -1000, -1000, 114714,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1129, -1000,
	1798, 2258, -1000, 630, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2476, -1000, -54, 32788, 899, -1000, -1000,
	90879, -42, 48321, 48321, 10343, 8196, 48321, 52318, 52318, -1000,
	48321, 8159, -1000, -1000, -1000, -1000, -1000, 2853, 629, 48321,
	69727, 6324, 988, -1000, 372, 11714, 5959, -1000, 48321, -1000,
	5449, -1000, 367, 35101, -1000, 130238, -17, -158, -1000, 18297,
	-125, -160, -1000, -1000, 777, -1000, 3038, -1000, 48321, 130422,
	2434, 2054, 1801, 1628, 3553, 3575, 21750, -1000, 66400, 1002,
	2222, 128358, -1000, -1000, -1000, -1000, 69727, 69727, 48321, 48321,
	-1000, 48321, 48321, 48321, -1000, -1000, -1000, 3553, 918, -1000,
	-1000, -1000, 918, -1000, -1000, 1396, -1000, 1396, -1000, 48321,
	-1000, -1000, 2846, 48321, -1000, 69727, 69727, 52318, 52318, 52318,
	52318, 52318, 52318, 52318, 52318, 52318, 52318, 52318, 52318, 52318,
	52318, 52318, 52318, 52318, 52318, 52318, 52318, 2530, 52318, 3528,
	3528, 3528, 709, -1000, 2925, 2846, 48321, 48321, 69727, 365,
	361, 358, -1000, 48321, -125, -1000, -1000, 7100, 625, -1000,
	2466, -1000, 2702, -1000, 48321, -1000, -149, -1000, 2553, -1000,
	-1000, 2702, 2702, -163, 131722, 56294, 56294, -1000, 621, 48321,
	2561, -1000, -1000, 766, -324, -1000, 862, -1000, -1000, -1000,
	-1000, -1000, -1000, 860, -1000, 454, -1000, -1000, -1000, 202,
	100811, 100811, 765, -1000, -165, -1000, -1000, -179, -1000, 3483,
	357, 25172, -1000, 1001, 2756, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2593, -110, 125703, 125703, 1649, 2251, 3573, -1000,
	3555, 775, 763, 201, 3553, 356, 355, 353, -110, 125703,
	125703, 1646, 125703, -1000, -1000, -1000, 223, -1000, -1000, -1000,
	222, -1000, -1000, -1000, -1000, 2643, -1000, -61, -1000, -1000,
	-1000, 48321, -1000, -1000, 3303, 1223, 1219, -1000, -1000, -1000,
	2838, -1000, 3053, -1000, 2385, -1000, 1078, -1000, 1614, 48321,
	619, 2658, 618, 613, 3621, 2053, 3620, 1105, 3052, 2191,
	3044, 2191, -1000, -1000, -1000, 930, -1000, 131722, 2249, -1000,
	612, 611, -1000, -63, 1665, 1812, 1217, 991, -1000, -1000,
	-1000, -1000, 48321, 48321, 100262, -1000, 452, 3299, -43, -1000,
	-1000, -1000, 1640, 1215, 1213, -1000, -1000, -1000, -1000, 2225,
	1636, 1210, 1207, -1000, -1000, -1000, -1000, -1000, 2384, -1000,
	-1000, 3042, 990, -1000, 3006, 2999, 903, 114714, -1000, 985,
	-1000, -1000, -1000, -1000, 48321, -1000, -65, 1205, 3428, 2382,
	90879, -1000, 2191, 3041, 1204, -1000, 1201, -1000, -1000, -1000,
	3431, 3430, 1209, -1000, -1000, -1000, -1000, -1000, 71963, -1000,
	-1000, 1025, 114714, 125703, 90879, 1847, -1000, -1000, 80331, 80880,
	114714, 2680, -110, 894, -1000, 2281, 894, 968, 2842, -1000,
	2630, -1000, 984, 90879, 3618, 350, -181, -67, 69727, -1000,
	-1000, -1000, -1000, 2379, 90879, 114714, 1319, 2657, 114714, 3482,
	-1000, 2283, 610, 90879, 895, -1000, 3551, -1000, -1000, -1000,
	977, -1000, 3418, 90879, 3477, 3040, 974, 119, 90879, 3562,
	-1000, -1000, 3472, 90879, 3037, 2297, 2377, 2516, 831, 74787,
	974, 2220, -78, -1000, 1817, 34501, 3297, -182, -1000, -1000,
	-1000, 1001, 65844, 56294, 48321, 3617, -187, -1000, -1000, -1000,
	-1000, -1000, 98059, 98059, 74231, 74231, 74231, 951, 114714, 114714,
	3616, 74231, 74231, 74231, -68, 608, -1000, 859, 858, 857,
	-1000, -1000, -1000, -1000, -1000, -1000, 856, 855, 971, -1000,
	-1000, -171, 59680, 119, -1000, 2236, 90879, -1000, 21178, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 973, -177, -1000, -1000,
	2098, 2328, 2098, 1803, 1774, -1000, -1000, 2255, -1000, -1000,
	-1000, -1000, 2608, 3267, 25172, 3399, 12023, 48321, 48321, 6639,
	598, 568, 12023, 48321, 48321, 69727, 5836, -188, 48321, 48321,
	-1000, 48321, 761, 131722, -1000, 3572, 48321, 349, 348, -1000,
	-1000, -1000, 3552, -1000, -1000, -1000, 131722, 48321, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 347, -1000, 199, -1000, -1000,
	-1000, 122400, -1000, 48321, 345, 3362, -1000, 338, 337, 11064,
	6436, 128095, 127966, 127703, 336, -1000, -1000, 333, 332, 131722,
	2925, 131722, -1000, -1000, 887, 887, 1365, 1365, 1365, 1365,
	3528, 995, 419, 1038, 533, 533, 533, 1024, 709, 709,
	533, 533, 533, 709, 2839, 2539, 607, 8686, -1000, -1000,
	131722, 131722, 331, -1000, -1000, -1000, -125, 329, 7100, -1000,
	2745, 3361, 131722, -1000, 56294, 2745, 2745, -1000, -1000, 1885,
	114714, 131722, 56294, -1000, 3260, -1000, 19457, 18880, -1000, 25172,
	-1000, -1000, -1000, -1000, 3551, -1000, 63618, -1000, 603, -1000,
	114, -1000, 2756, -1000, 854, -1000, -1000, 74231, 74231, 2687,
	-110, -166, 114714, -1000, -1000, 755, 3614, 773, 25172, 328,
	-1000, -1000, -1000, -110, -110, 114714, -110, -1000, -1000, -1000,
	3251, 131722, 114714, 114714, 1464, 99713, 114714, 3035, -1000, 6939,
	-1000, 1104, 127505, 56853, -1000, 56853, 114714, -1000, -1000, -1000,
	-1000, 1978, 1445, 3613, 1149, -1000, 3329, 114714, -1000, 114714,
	-1000, -1000, -1000, 114714, 114714, 90879, 114714, -1000, 125703, 3014,
	-189, 131722, -69, -1000, 852, -1000, 1049, -1000, 20606, 114714,
	125703, 90879, 114714, 125703, 90879, 3033, 114714, 2147, -1000, -1000,
	2995, -1000, 3013, -190, 25172, -1000, 3571, 3570, 3028, 3333,
	-1000, 114714, 3569, 114714, 90879, 3249, -1000, -1000, -1000, -1000,
	-1000, -1000, 1634, 1195, 1194, 2296, -70, 2293, 2245, -73,
	2103, 968, -74, 601, -1000, 850, -1000, -1000, 849, 968,
	-1000, 74231, 59680, 3612, 454, -1000, 2653, -1000, 95829, 75885,
	2246, -1000, -1000, 597, 114714, 114714, 595, -1000, 119, -1000,
	3611, 98615, 584, -1000, 2229, -1000, 754, -1000, 2484, 125703,
	2225, 119, 90879, -1000, -1000, 454, 324, -76, -1000, 3088,
	1092, 25172, 90879, 3025, 2513, 831, 74787, -1000, 1299, 2600,
	-1000, -77, -1000, 674, 119, 2220, -1000, -78, 131722, -1000,
	848, -1000, -196, -1000, -1000, 320, -1000, 3239, -1000, -1000,
	-197, -1000, -1000, 4821, 4821, 74231, 59680, 74231, 74231, 74231,
	-1000, 971, 894, -1000, 2367, -1000, -1000, -1000, -1000, -1000,
	25172, 1580, -1000, 567, 554, -1000, -1000, -1000, -1000, 3267,
	12023, 12023, 48321, 48321, 48321, 12023, 5836, -204, -1000, 12023,
	12023, -125, -1000, -1000, 130238, -1000, -1000, -1000, 131722, -1000,
	20034, 2135, -1000, 127321, -1000, 32788, -1000, -1000, 48321, 48321,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 52318, 2831,
	553, 69727, -1000, -1000, 318, 980, 48321, 50034, 2553, 980,
	980, -1000, -205, -1000, -1000, -1000, 3551, -1000, 3551, 114,
	-1000, -1000, 3608, 25172, -1000, 74231, -1000, -1000, -1000, 3606,
	-198, 769, -1000, 3605, -1000, -1000, 113, -1000, -1000, -1000,
	2679, 3471, -1000, 1889, -1000, 114714, -1000, 114714, -1000, 25172,
	114714, 2761, 1235, -1000, 934, 2559, 544, 52318, 1127, 90879,
	905, 2717, 2711, -1000, 3500, 3360, 2753, -212, -1000, 114714,
	48321, 114714, -213, -215, 2364, -1000, -1000, 1122, 1231, 48321,
	1119, -1000, -1000, -1000, 69727, 542, 2191, 2191, -218, -220,
	-1000, -1000, -1000, 48321, 1188, 114714, 33930, -1000, 3603, 3299,
	-1000, -1000, -1000, -1000, -1000, -1000, 114714, -1000, 114714, -1000,
	48321, 1186, -1000, -1000, -1000, 3568, 2191, 25172, 2191, -1000,
	2191, 3333, 1143, 114714, 125703, 90879, 1934, 1934, 2848, -1000,
	-1000, -1000, 2394, 2394, 74231, 59680, -1000, -82, 968, -1000,
	3470, 2130, 3602, -1000, -1000, -1000, -1000, 2555, -1000, -1000,
	-1000, 114714, 2550, 2744, 56853, 541, 539, 114714, 952, -1000,
	-221, -1000, 847, 845, 75885, 940, 925, -1000, -95, 538,
	-1000, 844, -1000, -1000, -1000, -1000, 454, 3466, -1000, 3564,
	537, 535, 114714, 2292, 532, 25172, 3295, 831, 74787, -1000,
	3056, 1817, -1000, 2369, 114714, 3291, -1000, 2600, 531, -1000,
	951, 515, 951, -1000, -223, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -96, -1000, 874, 863, -1000, -1000, 90879, 90879,
	48321, 48321, -1000, 12023, 12023, 12023, -1000, 314, -1000, -1000,
	2220, 3357, -1000, -102, 127032, 126886, 2092, 52318, 69727, -226,
	-1000, -1000, 114714, 131722, -103, -1000, 131722, 514, 512, 360,
	-1000, -1000, -1000, 599, 534, -1000, -1000, -1000, 125703, 3600,
	-1000, 125703, 99164, 114714, -1000, -1000, 2119, -1000, -1000, -1000,
	114714, 2376, -1000, -1000, -1000, 1103, 48321, 8686, 52318, 511,
	48321, -1000, 510, 509, 3462, 3186, -1000, 2647, 2793, 1849,
	56853, -1000, 3267, -1000, 126445, -1000, 1090, 1946, -1000, -1000,
	-1000, -1000, 131722, 52318, 3333, 56853, -1000, -1000, 505, 496,
	131722, 479, 843, 2825, -1000, -1000, -1000, -1000, -1000, 131722,
	478, 3428, -1000, -1000, -1000, -1000, 2191, 90879, -1000, -1000,
	-1000, 1179, -1000, -1000, -1000, -1000, 3597, 3596, 2819, 80331,
	-1000, -228, -1000, -1000, 1962, 119, 940, -1000, -1000, 2246,
	477, -1000, -1000, 2569, 2569, -229, 56853, 56853, -234, 2265,
	2625, -1000, 98615, 33359, 33359, 309, 3460, 925, -1000, 3536,
	-1000, 3245, 3245, 48321, 3451, 119, -1000, 3562, 56853, -1000,
	90879, 56853, 2277, 2045, 2501, 74787, -1000, 2516, -1000, -1000,
	-236, 114714, 1817, -1000, -1000, 74231, -1000, -1000, 2367, -1000,
	114714, -1000, 114714, -1000, -1000, -242, -243, -1000, 2113, 48321,
	32788, -1000, -1000, 2092, -244, -1000, -109, -1000, 3445, 50034,
	3595, 3594, 3593, -1000, -1000, -110, -1000, -110, -1000, 1874,
	-1000, -1000, -1000, 3023, 2750, 126408, 8686, 2468, 114714, 126299,
	2225, 2225, -1000, 3443, 2791, -1000, -1000, 2094, 476, -1000,
	-1000, -1000, -1000, 899, 114714, -1000, 2747, 90879, 8686, 1094,
	-245, 2098, 2098, 48321, 32217, 2145, 48321, -1000, -1000, 3333,
	125703, -1000, -1000, 125703, 2266, -1000, 2802, 3541, -1000, 2265,
	114714, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1090, -252, -255, -1000, -1000, 3325, -1000, 3237,
	-1000, -1000, -1000, 2653, 119, -1000, -1000, -1000, -257, 131722,
	119, -1000, 308, -258, 1092, -260, 90879, 1924, -1000, 831,
	-1000, 2513, 1001, -1000, -1000, -267, -1000, -270, -273, -1000,
	-1000, 305, 49463, 49463, 49463, -125, -126, -1000, 114714, 473,
	-1000, -1000, -1000, -1000, -1000, 2994, 967, -1000, 818, 1843,
	164, 1102, 7, -11, -1000, -1000, -1000, 2753, -1000, 114714,
	-1000, -1000, 965, 454, -1000, 48321, 1090, -275, -1000, 1070,
	-280, -1000, 1043, -282, -1000, 2816, -1000, -283, 2191, -263,
	221, 1934, 954, 3403, -1000, -1000, -1000, 2486, -288, -1000,
	-1000, 1849, 1090, 2094, 2418, -1000, 2130, 952, -1000, -1000,
	-1000, 1090, 453, 1849, 449, 1451, 831, -1000, -1000, 1396,
	3295, 3126, 951, -1000, -1000, -1000, 3024, -1000, 53460, 2253,
	1755, 499, 3024, 3024, -1000, -1000, 114714, 3384, -1000, 867,
	819, 1536, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1001, -289, 3363, 2468, 131722, -1000, -1000, 2098, 2677, -1000,
	2098, 2812, -1000, 2140, -1000, -1000, -1000, 2759, -1000, 2806,
	-1000, 1710, 3527, -1000, -1000, -1000, 114714, 2094, 1849, 943,
	1723, 1714, 3592, 940, 2265, 1849, 56853, 2094, 56853, 2068,
	-1000, 114714, -1000, 2045, 1370, -1000, -1000, 1773, 3496, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 828, -1000, 3172,
	-1000, 1115, 2088, 2088, -1000, -1000, 812, 818, -1000, 447,
	-1000, 446, -1000, 2241, 125703, 2209, -1000, -1000, -1000, 943,
	2094, 1001, 445, -1000, 3591, -1000, 2265, -1000, 2094, -290,
	943, -297, -1000, -1000, -1000, -177, 1924, -1000, 1559, 1745,
	-1000, -1000, 2196, 48892, 48321, -1000, 3515, -1000, -1000, 2568,
	-1000, 48321, 2753, 48321, 48321, -1000, 221, 64174, 1001, 943,
	-1000, -1000, 2486, 943, 1090, 1001, 1849, 1451, 65844, -1000,
	-1000, -1000, 131722, -1000, -1000, -1000, 131722, -1000, -298, -305,
	-1000, -276, 98059, -1000, 1001, -1000, 1001, 1849, -1000, 2094,
	2068, -278, 2094, 1167, -306, -1000, -1000, 2094, 943, -1000,
	-1000, -1000, -1000, 444, -1000, 943, 1001, 48321, 1001, -1000,
	-307, -1000, 2094, -1000,
}

var sqlPgo = [...]int{
	0, 4433, 4432, 4430, 4429, 4428, 4426, 4425, 4423, 4422,
	4420, 4418, 4416, 172, 4409, 4408, 4407, 4405, 4404, 4403,
	4401, 4398, 4397, 4396, 4394, 4392, 4390, 4387, 4385, 4382,
	4381, 4377, 4375, 4373, 4372, 4369, 4367, 4366, 4364, 4359,
	4355, 4354, 4353, 4352, 4350, 4349, 4348, 4347, 4345, 4344,
	4340, 4338, 4336, 4333, 4332, 4331, 4323, 4322, 4320, 4318,
	4317, 4316, 4314, 4312, 4311, 4310, 4309, 4305, 54, 4302,
	4301, 4300, 4299, 4298, 4297, 4296, 4294, 4293, 4292, 4290,
	4289, 4288, 4286, 4285, 4283, 4282, 4281, 4280, 4279, 59,
	4277, 270, 4274, 4273, 4272, 4269, 4267, 4266, 4264, 4263,
	4261, 4260, 4256, 4252, 267, 4250, 136, 161, 4249, 4248,
	3785, 4244, 4242, 266, 4241, 4240, 4239, 4238, 4236, 273,
	4233, 4232, 4231, 4230, 4229, 4228, 4227, 4226, 4224, 4223,
	4219, 4218, 98, 211, 4216, 4215, 1222, 4214, 4213, 4212,
	4210, 4209, 4203, 4197, 4196, 4195, 4194, 4193, 246, 168,
	4192, 265, 4189, 4187, 4186, 4185, 4184, 4182, 4181, 4180,
	4178, 4170, 4168, 4167, 4165, 4163, 4161, 4160, 4159, 4158,
	4157, 4152, 4149, 4146, 4145, 4138, 4137, 4135, 4134, 4133,
	4131, 4128, 4125, 4123, 4118, 4117, 4113, 4112, 4109, 4100,
	4098, 244, 210, 147, 4096, 4095, 262, 261, 4093, 4092,
	4090, 4088, 4087, 126, 4, 43, 4086, 4085, 89, 87,
	84, 106, 102, 97, 4084, 112, 4082, 118, 62, 4075,
	19, 1, 274, 253, 12638, 245, 4073, 4072, 4071, 241,
	193, 4070, 238, 4069, 4067, 4066, 4063, 4062, 4061, 69,
	52, 180, 176, 169, 166, 80, 129, 107, 82, 67,
	42, 20, 77, 216, 22, 10, 259, 4057, 258, 7,
	135, 14, 31, 4056, 4055, 4053, 4052, 3781, 99, 4051,
	260, 240, 164, 4050, 4049, 4046, 498, 4045, 4044, 51,
	4043, 188, 74, 104, 16, 124, 4041, 149, 173, 36,
	4038, 159, 71, 4037, 160, 100, 88, 9156, 5490, 4033,
	4032, 119, 108, 184, 3058, 248, 229, 199, 190, 165,
	163, 110, 214, 206, 175, 257, 4031, 252, 4029, 3460,
	182, 179, 154, 5983, 4028, 4026, 4024, 86, 4022, 109,
	4021, 4020, 64, 15, 3, 2, 143, 38, 33, 8,
	4019, 49, 120, 45, 30, 4017, 23, 4014, 4013, 4010,
	4009, 4008, 63, 158, 4005, 4004, 272, 4000, 85, 58,
	47, 3999, 21, 222, 3998, 230, 131, 3997, 3996, 251,
	203, 191, 3995, 90, 235, 3994, 3992, 3991, 3987, 3986,
	3984, 140, 9, 128, 3982, 3981, 145, 3979, 53, 239,
	196, 3977, 61, 3976, 3971, 183, 83, 141, 271, 198,
	223, 116, 227, 192, 236, 3968, 3967, 3964, 233, 3962,
	3960, 226, 157, 3959, 3958, 204, 279, 92, 44, 72,
	232, 73, 189, 156, 3957, 200, 3953, 3952, 278, 187,
	212, 11, 6, 105, 101, 3950, 5, 234, 152, 237,
	114, 3948, 6991, 2504, 1142, 3947, 3946, 150, 122, 76,
	127, 151, 264, 66, 3945, 3943, 3050, 3942, 3941, 3940,
	3937, 181, 3936, 3933, 3930, 146, 148, 197, 3929, 121,
	70, 50, 24, 125, 250, 268, 113, 221, 177, 249,
	3928, 3927, 3926, 194, 3925, 81, 139, 162, 201, 254,
	55, 3924, 170, 3918, 155, 748, 65, 153, 3917, 219,
	3913, 3912, 3911, 3910, 3909, 3908, 3907, 398, 225, 3906,
	3905, 3904, 37, 186, 3903, 263, 224, 178, 96, 93,
	3902, 91, 994, 3901, 313, 218, 60, 2323, 25, 3900,
	2127, 46, 3899, 0, 12629, 10047, 12315, 13357, 3898, 6309,
	3897, 3896, 3895, 215, 142, 3894, 3893, 3892, 111, 3891,
	79, 3890, 3888, 78, 3887, 26, 17, 18, 32, 27,
	390, 354, 3886, 3885, 144, 132, 133, 3876, 269, 231,
	3873, 3871, 3870, 3869, 95, 3868, 41, 3866, 39, 3863,
	3862, 40, 12, 28, 3859, 3855, 205, 3854, 220, 247,
	3852, 167, 3851, 68, 138, 3850, 3848, 3847, 56, 57,
	256, 94, 3846, 289, 3839, 202, 3838, 3830, 29, 3826,
	3825, 243, 117, 115, 3824, 255, 130, 35, 208, 174,
	217, 3822, 3821, 171, 3820, 3819, 3815, 284, 3813, 3810,
	34, 3808, 3806, 3800, 13, 3798, 3794, 207, 3211, 3793,
	3787, 48, 3782, 185,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	600, 600, 618, 618, 23, 23, 45, 45, 24, 46,
	17, 601, 601, 601, 601, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	596, 596, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 602, 602, 245, 245, 245, 246, 246, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 496, 496,
	496, 527, 527, 527, 527, 528, 528, 622, 622, 623,
	623, 623, 623, 623, 135, 135, 394, 394, 394, 56,
	56, 56, 56, 56, 591, 591, 208, 208, 208, 210,
	210, 209, 209, 209, 209, 80, 80, 608, 608, 607,
	606, 606, 606, 609, 609, 609, 207, 207, 207, 131,
	131, 131, 131, 131, 131, 132, 132, 133, 133, 211,
	211, 211, 213, 213, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 217, 16, 16, 16, 114,
	114, 114, 114, 114, 114, 114, 109, 109, 530, 530,
	531, 531, 202, 202, 203, 203, 203, 203, 204, 204,
	205, 205, 205, 71, 71, 214, 214, 216, 216, 215,
	215, 215, 215, 215, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 61,
	62, 62, 69, 69, 69, 69, 69, 69, 69, 193,
	193, 72, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 77, 77, 77, 77, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 625, 625, 626,
	626, 627, 627, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 86,
	86, 354, 354, 318, 318, 87, 87, 87, 88, 88,
	89, 89, 73, 73, 589, 589, 370, 370, 487, 487,
	74, 597, 597, 597, 599, 599, 598, 598, 91, 91,
	393, 393, 92, 92, 92, 92, 92, 92, 93, 93,
	93, 93, 93, 93, 93, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 101,
	101, 101, 101, 101, 102, 102, 102, 99, 99, 99,
	96, 96, 96, 95, 95, 95, 100, 100, 100, 588,
	307, 307, 98, 98, 98, 97, 97, 97, 371, 371,
	103, 103, 103, 103, 319, 104, 104, 104, 104, 104,
	104, 104, 104, 107, 107, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 489, 489,
	105, 105, 105, 454, 454, 110, 110, 110, 409, 409,
	111, 111, 111, 111, 111, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 134, 134, 134, 134, 134, 134,
	134, 134, 593, 593, 363, 363, 270, 270, 270, 270,
	123, 123, 123, 123, 124, 124, 124, 125, 125, 198,
	198, 141, 141, 141, 141, 140, 140, 140, 140, 140,
	140, 140, 140, 63, 63, 63, 64, 64, 65, 65,
	66, 66, 67, 67, 68, 68, 68, 68, 68, 144,
	144, 619, 619, 146, 143, 143, 143, 143, 143, 142,
	142, 145, 145, 145, 145, 147, 149, 149, 149, 149,
	149, 148, 148, 148, 148, 148, 150, 150, 521, 521,
	379, 379, 519, 519, 540, 540, 520, 520, 325, 325,
	325, 325, 325, 326, 326, 326, 529, 529, 529, 529,
	529, 529, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 199, 199, 200, 201, 201,
	201, 201, 201, 176, 176, 176, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 380, 380, 179,
	179, 179, 163, 163, 152, 152, 152, 152, 152, 152,
	152, 157, 157, 157, 157, 157, 157, 157, 157, 153,
	153, 165, 165, 165, 165, 165, 158, 158, 159, 159,
	159, 160, 160, 160, 160, 186, 186, 162, 162, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 154, 154,
	154, 154, 167, 167, 167, 167, 416, 416, 416, 191,
	191, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 189, 189, 189,
	189, 189, 189, 610, 610, 611, 611, 611, 183, 183,
	183, 183, 183, 183, 468, 468, 177, 177, 177, 177,
	182, 182, 182, 182, 185, 185, 185, 185, 399, 399,
	174, 174, 174, 175, 175, 175, 180, 180, 181, 355,
	355, 178, 178, 184, 184, 184, 184, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 156, 156, 156, 156,
	187, 187, 173, 173, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 629, 629, 169, 169, 169,
	168, 168, 168, 168, 171, 171, 172, 172, 172, 172,
	172, 172, 170, 161, 190, 590, 590, 586, 586, 586,
	586, 586, 586, 586, 586, 587, 587, 587, 587, 592,
	592, 115, 115, 115, 115, 115, 115, 115, 126, 126,
	126, 126, 126, 126, 126, 129, 129, 116, 116, 116,
	116, 116, 116, 116, 119, 119, 117, 117, 117, 117,
	118, 118, 81, 81, 81, 81, 81, 15, 15, 15,
	82, 82, 261, 261, 220, 220, 220, 343, 343, 221,
	221, 333, 333, 333, 333, 218, 218, 219, 219, 83,
	83, 630, 630, 630, 603, 603, 603, 604, 604, 604,
	604, 604, 604, 327, 327, 328, 328, 434, 434, 434,
	434, 434, 331, 331, 331, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 341, 342, 342, 334, 334, 340,
	339, 339, 338, 338, 337, 337, 335, 336, 336, 336,
	345, 345, 344, 347, 347, 346, 433, 549, 549, 551,
	551, 551, 551, 551, 551, 551, 553, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 553, 417, 417, 631, 631, 632, 633, 547,
	547, 547, 548, 543, 543, 544, 544, 544, 544, 544,
	329, 329, 330, 330, 330, 330, 545, 546, 361, 361,
	472, 550, 550, 552, 552, 554, 634, 634, 634, 634,
	634, 634, 635, 635, 635, 432, 432, 431, 431, 352,
	352, 555, 555, 555, 555, 556, 556, 556, 556, 556,
	559, 558, 557, 557, 557, 557, 557, 85, 85, 85,
	396, 396, 395, 395, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 195,
	195, 273, 273, 79, 79, 79, 12, 12, 12, 12,
	12, 12, 12, 288, 288, 13, 13, 13, 605, 605,
	605, 84, 84, 84, 84, 84, 84, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 595, 595, 594,
	594, 274, 274, 637, 637, 90, 90, 90, 90, 90,
	90, 90, 90, 490, 490, 491, 491, 78, 78, 78,
	78, 78, 418, 418, 415, 415, 414, 414, 360, 360,
	470, 470, 470, 471, 278, 278, 279, 279, 239, 239,
	239, 31, 30, 21, 21, 26, 26, 27, 27, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 28, 28,
	49, 49, 49, 49, 50, 50, 50, 50, 53, 53,
	54, 54, 48, 48, 48, 48, 51, 51, 44, 44,
	55, 55, 55, 55, 55, 612, 614, 614, 613, 613,
	617, 617, 617, 617, 617, 617, 615, 615, 616, 616,
	620, 620, 621, 621, 122, 122, 127, 127, 127, 127,
	127, 128, 128, 128, 128, 130, 130, 130, 130, 139,
	139, 194, 194, 194, 194, 194, 194, 194, 57, 57,
	57, 57, 70, 70, 70, 70, 137, 639, 639, 639,
	138, 138, 138, 638, 638, 271, 271, 428, 428, 429,
	429, 640, 640, 430, 430, 430, 430, 430, 264, 263,
	265, 265, 266, 266, 76, 76, 76, 254, 254, 253,
	255, 255, 256, 256, 251, 251, 532, 532, 258, 258,
	258, 259, 259, 247, 247, 248, 248, 249, 249, 250,
	250, 262, 262, 641, 641, 113, 113, 113, 197, 197,
	317, 317, 317, 425, 425, 425, 353, 353, 285, 285,
	427, 427, 427, 427, 392, 392, 392, 196, 196, 368,
	368, 382, 382, 383, 383, 484, 484, 384, 120, 120,
	121, 121, 136, 136, 224, 224, 222, 222, 222, 222,
	222, 222, 222, 222, 229, 229, 230, 230, 231, 231,
	232, 233, 233, 233, 233, 372, 372, 234, 234, 234,
	223, 223, 223, 225, 225, 225, 225, 225, 225, 225,
	228, 228, 228, 228, 235, 235, 235, 227, 227, 566,
	566, 566, 568, 568, 570, 570, 569, 569, 565, 565,
	567, 567, 636, 636, 398, 398, 398, 350, 351, 348,
	348, 349, 349, 358, 358, 356, 357, 357, 359, 359,
	469, 469, 469, 240, 240, 240, 389, 389, 389, 389,
	390, 390, 421, 421, 419, 419, 419, 419, 420, 420,
	422, 422, 422, 423, 423, 424, 424, 386, 386, 387,
	387, 388, 388, 388, 388, 450, 450, 226, 226, 226,
	365, 365, 365, 366, 366, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 441, 441, 439, 439,
	439, 439, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 474, 475, 475, 367, 367, 476, 426, 426, 584,
	584, 584, 585, 585, 467, 467, 477, 477, 477, 477,
	477, 477, 465, 465, 466, 466, 485, 486, 486, 402,
	402, 402, 402, 400, 400, 403, 403, 403, 403, 403,
	401, 401, 478, 478, 478, 478, 391, 391, 479, 479,
	479, 479, 480, 481, 481, 482, 482, 435, 436, 436,
	492, 492, 492, 492, 494, 364, 364, 364, 364, 364,
	542, 541, 541, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 509, 509, 509, 509, 509, 509,
	509, 495, 495, 495, 495, 495, 499, 499, 499, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	500, 500, 505, 505, 506, 506, 506, 501, 502, 507,
	507, 507, 507, 642, 642, 511, 511, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 497, 497, 497, 504,
	504, 504, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 410, 410, 412, 412, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	444, 444, 444, 444, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 560,
	560, 560, 560, 560, 560, 560, 560, 446, 446, 563,
	563, 564, 564, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 571, 571, 572, 572, 574, 574,
	575, 575, 576, 577, 577, 577, 578, 579, 579, 573,
	573, 580, 580, 580, 580, 581, 581, 582, 582, 582,
	582, 582, 583, 583, 583, 583, 583, 456, 456, 457,
	457, 463, 463, 463, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 324,
	324, 323, 275, 275, 275, 275, 275, 275, 377, 377,
	375, 375, 375, 378, 378, 376, 376, 374, 374, 373,
	373, 453, 453, 451, 451, 455, 455, 404, 404, 510,
	510, 510, 510, 510, 510, 510, 510, 405, 405, 405,
	413, 406, 406, 407, 407, 407, 407, 407, 447, 448,
	408, 408, 408, 449, 449, 458, 462, 462, 461, 460,
	460, 459, 459, 437, 437, 438, 438, 385, 385, 643,
	643, 381, 381, 483, 483, 483, 483, 321, 321, 369,
	369, 320, 320, 312, 312, 313, 313, 313, 313, 362,
	362, 464, 464, 512, 512, 513, 513, 514, 514, 515,
	515, 516, 517, 518, 452, 452, 296, 295, 282, 283,
	294, 293, 292, 281, 284, 289, 290, 291, 286, 287,
	303, 302, 301, 252, 257, 308, 309, 309, 311, 311,
	310, 310, 298, 299, 300, 488, 280, 314, 314, 315,
	315, 315, 316, 316, 316, 316, 276, 276, 277, 277,
	304, 304, 305, 306, 306, 297, 297, 297, 267, 267,
	267, 268, 268, 269, 269, 526, 526, 523, 523, 523,
	524, 524, 524, 525, 525, 525, 525, 522, 522, 522,
	522, 522, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 534, 534, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 536, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 539, 539,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 9, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 12, 3, 1, 1, 2,
	1, 4, 0, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 1, 3, 3, 3, 6,
	4, 9, 7, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	4, 3, 6, 6, 6, 6, 6, 8, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	9, 10, 5, 2, 6, 4, 7, 7, 7, 10,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 3, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 6, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 16, 19, 15,
	18, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 8, 8, 4, 7, 3, 0, 7, 10,
	1, 1, 1, 1, 2, 2, 3, 0, 3, 0,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 13, 16, 3, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 602, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 204, 386, 431, 443, 401, 143, 422, 406,
	-145, -146, 461, -57, -70, -138, -137, 73, 130, 416,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -624, 102, -567,
	-94, -97, -130, -628, 162, 222, -116, -117, -118, 368,
	-124, -125, 424, -127, -128, -129, 427, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 466, -181, -190, -159, 527, 49, 481,
	82, 147, 435, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -566, -95, -96, -99, -101, -102, -98, -100,
	423, -225, -223, 599, 542, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 563, 572, -228, -226, -227, -235, 453,
	550, 501, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, -319, 2, -298, -304, -305, -306,
	-297, -267, -536, -539, 4, -533, -537, 169, 231, 332,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 509, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 186, 190, 191,
	192, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	205, 209, 211, 212, 213, 214, 215, 221, 222, 224,
	225, 226, 227, 232, 233, 234, 237, 243, 244, 248,
	249, 250, 252, 256, 257, 258, 259, 260, 261, 263,
	265, 264, 267, 270, 271, 274, 275, 276, 277, 278,
	279, 283, 284, 280, 285, 286, 288, 289, 292, 290,
	293, 294, 291, 295, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 296, 311, 309, 313,
	314, 315, 316, 330, 325, 326, 327, 320, 321, 317,
	322, 318, 319, 323, 324, 329, 334, 335, 338, 219,
	340, 341, 344, 362, 348, 349, 350, 353, 354, 357,
	360, 361, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 373, 374, 376, 377, 378, 380, 381, 382, 384,
	386, 387, 389, 390, 392, 393, 394, 395, 396, 397,
	398, 400, 401, 403, 402, 404, 406, 408, 409, 410,
	416, 422, 418, 419, 420, 421, 423, 424, 425, 426,
	427, 429, 430, 431, 433, 434, 435, 436, 437, 439,
	441, 442, 446, 447, 463, 464, 483, 443, 444, 445,
	448, 449, 450, 451, 452, 456, 454, 455, 457, 458,
	459, 461, 462, 465, 466, 468, 469, 470, 471, 472,
	473, 474, 477, 479, 480, 481, 500, 482, 484, 488,
	489, 490, 491, 485, 486, 499, 493, 494, 496, 497,
	502, 503, 504, 505, 506, 507, 508, 510, 512, 520,
	521, 522, 524, 527, 528, 529, 530, 518, 532, 533,
	536, 537, 538, 541, 539, 540, 542, 544, 547, 548,
	549, 555, 554, 556, 558, 559, 564, 565, 567, 568,
	569, 36, 50, 51, 54, 56, 58, 69, 70, 71,
	75, 125, 126, 154, 165, 166, 178, 193, 194, 206,
	208, 216, 217, 218, 238, 239, 241, 246, 268, 337,
	339, 355, 359, 375, 379, 383, 385, 399, 438, 475,
	487, 492, 513, 514, 515, 516, 523, 525, 550, 551,
	552, 557, 566, -319, 2, -298, 346, -291, 2, -267,
	-267, 386, 28, 2, 28, 374, 455, 504, 506, 2,
	-593, -363, 2, 28, -270, -267, 102, 204, 453, -291,
	2, -593, -363, 25, 2, -267, 2, 360, 22, 27,
	66, 77, 98, 141, 164, 187, 190, -627, 362, 393,
	441, 457, 499, 510, 524, 2, 554, 289, 454, 501,
	231, 120, 529, 448, -605, 446, 447, 360, 391, 433,
	207, 543, -271, 2, 443, -267, 289, 2, 602, 94,
	74, 438, 458, -148, 2, 279, 521, -149, -150, -147,
	513, -521, 448, 433, 311, -267, 602, 602, 602, 28,
	-280, -267, 501, 231, 448, 120, 497, 602, 2, 501,
	365, 554, 454, 120, 396, 231, 529, 190, 141, 27,
	448, -605, 577, 578, 289, 127, -591, 2, -586, 4,
	-537, -533, -313, -312, 501, 507, 120, -306, -297, 592,
	-305, 602, 602, 602, 602, 2, 249, 250, 395, 394,
	458, 459, 28, 602, 602, 602, 602, 446, 2, 164,
	22, 27, 66, 93, 98, 127, 187, 190, 351, -625,
	362, 393, 457, 499, 503, 510, 524, -604, 482, 68,
	421, 448, -603, -605, 289, 529, 141, -414, 120, 279,
	202, 537, 506, 504, 535, 133, 237, 540, 539, 602,
	602, -107, 2, 599, 32, 31, -106, -110, 143, 461,
	-217, 501, 242, 2, -267, 602, 602, 602, 2, 249,
	250, 446, 447, 28, 602, 602, 188, -586, 2, 602,
	602, 602, 2, 28, 249, 250, 446, 447, 242, 2,
	68, 450, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 2, -192,
	458, 482, 213, 47, 46, 74, 28, 392, 79, 366,
	121, 127, 149, 530, 205, 231, 232, 257, 93, 94,
	-416, 44, 250, 68, 249, 447, -610, 446, -468, 502,
	449, 455, 496, 261, 443, 521, 102, 544, 434, 569,
	396, 397, 494, 410, 280, 158, 189, 4, 120, 311,
	433, 460, 265, 264, 513, 279, 442, 369, 84, 602,
	-636, 2, 501, -638, 2, 521, 521, 2, -638, 2,
	-638, 2, -638, 2, -639, 521, 566, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, -223, -225, -224, 602, 602,
	602, 602, 602, 602, 602, -192, 458, 2, 74, 28,
	-356, -358, 534, 240, 151, 352, -222, -224, 2, -566,
	-519, 2, -442, -540, -444, 590, 591, 583, 498, 67,
	-323, 331, 570, -456, 127, 535, 346, -539, -445, -458,
	154, 362, 438, -378, 8, 9, 5, 6, 7, -276,
	-446, -452, 526, 168, 336, -316, 603, 10, 599, -563,
	-224, -457, 37, 208, 65, -523, -315, -277, -495, 241,
	-314, -297, -560, -561, 4, -533, -534, -524, -498, -506,
	-502, -503, -509, -267, -536, 77, 111, 112, 110, 115,
	114, 282, 281, 116, 113, 460, 543, 66, 36, 216,
	217, 246, 337, 218, 75, -562, 142, -535, 238, 239,
	475, 51, 399, 178, 126, 125, 339, 56, 54, 551,
	-507, 122, 513, 514, 515, 516, 193, 194, 58, 165,
	166, 359, 383, 492, 523, 525, 206, 268, 43, 106,
	189, 236, 220, 245, 247, 251, 269, 272, 312, 328,
	333, 356, 358, 432, 467, -642, 552, 487, 69, 70,
	-568, 402, -569, -291, -568, 602, 602, 604, 602, -348,
	-350, -351, 2, 28, 139, 599, 2, -473, 2, -474,
	-478, -224, 262, -477, 599, -475, 597, -298, 347, -564,
	439, -560, -561, -276, -297, -315, 4, -533, -535, 601,
	-352, 599, 120, 448, 501, 78, 231, 93, 164, -409,
	599, -267, 28, 346, 517, 604, -349, 390, -454, 599,
	346, 188, 349, 60, 293, 2, 2, 2, 2, 2,
	216, -267, 501, 119, 2, 260, 2, 2, 2, 2,
	2, 2, 2, -371, 216, 2, -298, 554, -371, 216,
	2, -371, 216, 2, -415, 2, 87, -281, 216, 2,
	-267, -307, 216, 2, -302, -304, -311, 216, 2, -309,
	-267, -528, 216, 2, -527, 4, -533, 116, 460, -442,
	2, -136, 2, 60, -267, 554, 2, 463, 2, 599,
	-148, 2, 71, 521, 43, 458, -149, 2, -429, 2,
	-430, -263, -264, -265, -485, -266, 248, 389, 398, 573,
	131, 331, 569, -619, 188, 582, 517, -519, -519, -519,
	-379, 601, 2, 2, 2, 2, 2, 2, -478, 216,
	-298, 2, -295, -522, 4, -533, -537, -534, -538, -536,
	28, 31, 32, 33, 35, 37, 38, 39, 40, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 110, 111,
	113, 112, 114, 115, 116, 127, 131, 135, 139, 140,
	144, 147, 151, 168, 170, 183, 187, 188, 204, 207,
	210, 223, 235, 240, 242, 262, 266, 273, 281, 282,
	331, 336, 342, 346, 347, 351, 352, 372, 388, 405,
	428, 453, 460, 478, 495, 501, 511, 517, 519, 526,
	534, 535, 543, 545, 553, 560, 561, 562, 563, -539,
	77, 2, -478, 216, 2, -301, 216, -478, -304, 2,
	-281, 2, -294, -522, 2, -320, 216, -298, -300, -304,
	-302, 2, 2, 2, 2, -309, 2, -527, 216, 2,
	28, 28, 554, 390, 242, 517, 604, -369, -312, -313,
	-518, 8, -362, -267, 601, -442, 2, -136, -119, 2,
	183, -442, 216, 2, -136, 216, 2, -442, 216, 2,
	-136, 216, 2, -267, 2, -606, 2, -530, 216, -526,
	10, -525, 5, 4, -533, -537, -534, 216, -267, 2,
	293, 2, 2, 524, 2, 98, 501, 119, 2, 420,
	-626, 441, 528, 2, 2, 2, 2, 2, 2, 2,
	501, -286, 2, -267, 183, 485, -309, 216, -310, 2,
	454, -637, 402, -527, 216, 2, 554, -302, 216, 2,
	-302, 231, 244, -281, 216, 2, 506, 504, 506, 504,
	188, 2, 242, 2, 242, 2, -479, 2, -480, -474,
	-481, 597, 347, -489, 2, -488, -525, 550, -107, 599,
	-107, 599, 458, 599, -530, -298, -298, -442, 2, -136,
	-119, 2, -442, 2, -136, 2, -267, 2, -133, -530,
	-132, 599, 188, -267, 2, -442, 2, -136, -119, 2,
	-442, 2, -136, 2, -217, 183, 2, 120, 501, -192,
	2, 183, 545, 2, 8, 2, 223, -530, 449, 397,
	175, 2, 463, 2, 464, 74, -416, 569, 74, 188,
	2, 188, 2, -399, 2, 563, 390, 188, 2, 2,
	-590, 2, 346, 188, 2, 188, 2, 188, 2, 188,
	2, 188, 2, -191, 459, 522, 500, 394, 250, 2,
	-136, 560, -119, 250, 249, -442, 560, 2, -611, 183,
	447, -442, 2, 520, 259, 159, 188, -399, 2, 188,
	2, 188, 2, 5, 2, 395, 483, 2, 248, 389,
	483, 2, -298, 501, 554, 454, 120, 28, 2, 446,
	2, 2, 88, 89, 188, 2, 188, 2, 203, 188,
	2, 188, 501, -380, 601, 569, 2, -391, -478, -428,
	-429, -428, 517, -356, -358, -192, 463, 2, -229, -389,
	-231, 183, -419, -420, -232, 273, 170, 342, -233, -398,
	28, 139, -398, -398, 60, 600, 600, 11, 12, 76,
	41, 590, 591, 592, 593, 181, 594, 595, 588, 589,
	587, 580, 581, 585, 254, 255, 95, 584, 582, 86,
	287, 440, 171, 172, 173, 174, 417, 229, 34, 230,
	14, 15, 16, -323, 33, 351, 272, 570, 220, 467,
	583, 17, 18, 19, 245, 247, 333, 50, 223, -275,
	362, -322, 498, 67, -442, -442, -442, -442, -442, -442,
	-442, -442, 358, 599, -385, -437, 597, -224, 599, 599,
	599, 599, -518, -224, -442, -456, 600, -376, 599, -224,
	-456, -451, 599, 438, 597, 599, -459, -442, 5, 5,
	5, 599, 601, -571, 564, 183, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 599, 599,
	599, 599, 385, -500, 599, -499, 599, -499, -499, 555,
	-497, 599, 572, 565, 599, -497, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 599, 555,
	604, -568, -352, 599, -381, -483, -442, 592, -381, -381,
	346, -373, -442, 106, -402, 251, 312, 189, 269, 432,
	236, -439, 603, -439, -467, 572, -224, -475, -297, -224,
	-477, 599, -473, -467, -108, -518, -91, -104, -113, -136,
	-151, -196, -197, 592, -298, 599, 188, 599, 601, -522,
	188, -362, -281, -308, -267, -298, -314, -315, -320, -292,
	-267, 2, 138, -373, -586, 529, 448, 28, 454, -528,
	-270, 38, -453, -492, -493, -542, 603, -541, -495, -505,
	-501, -504, 375, 379, -524, 54, 551, -507, 241, 4,
	-533, -535, 238, 239, 475, 51, 399, 178, 126, 125,
	339, 56, 513, 514, 515, 516, 193, 194, 58, 552,
	487, 69, 70, -586, 529, 448, 28, 454, -528, 183,
	-528, 2, 2, 154, 2, 2, 2, -267, -245, 604,
	64, 425, 154, -371, 216, -245, 154, -245, 154, -321,
	216, -320, -245, 154, -245, 604, 154, -245, 604, 154,
	601, 604, 154, -528, 2, -415, -521, -373, 38, -429,
	2, 127, 4, 5, -640, 604, 271, -326, 286, 330,
	212, 347, 567, 340, 131, -529, 5, 4, -452, -464,
	127, 279, 241, -512, -514, 8, -513, 9, -515, 590,
	591, -520, -519, 109, 601, -522, -242, 418, 461, 361,
	-241, 24, 29, 143, 233, 316, 548, 160, -338, 234,
	-335, 365, 154, 479, 538, -600, -601, 445, 508, 509,
	90, 340, 461, 361, 418, 154, -395, -397, 38, 118,
	316, 360, 61, 226, 291, 292, 481, 557, 154, 461,
	361, 418, 361, -13, -256, 24, 143, -258, -253, 461,
	-601, 99, 418, 576, 423, 371, 493, 388, -601, -244,
	479, 538, -600, -601, 445, 418, -243, -340, -335, 365,
	154, 603, 24, 143, 418, 461, 361, -622, -623, 29,
	418, 361, -594, -288, -565, 223, 563, 154, -288, -288,
	-478, 216, -615, 183, 2, -608, -132, 263, 5, 10,
	-530, -132, -369, 604, 604, -522, 592, 447, 446, 154,
	154, 154, 154, 250, 183, 331, 331, 2, 2, 2,
	2, 2, 190, -603, -627, 2, 2, -298, 216, -354,
	346, -589, -370, 501, -298, 183, 331, 43, -301, 216,
	2, -304, 554, -594, 331, -303, 216, -298, 38, 599,
	331, 2, -415, 2, 231, -565, 331, -479, -317, -298,
	-474, -317, 461, -291, 38, -439, -298, 600, 604, -489,
	-489, -530, -205, 563, 188, 599, -217, 563, 563, 250,
	-486, 604, -485, 223, -531, -530, -133, -530, 421, 250,
	-530, -589, -281, 2, -298, 2, 501, 252, -530, -205,
	223, -530, -530, -530, -521, 28, 464, 2, -191, 459,
	522, 89, 464, 2, -298, 501, 120, 231, 80, -615,
	183, 2, -267, -592, 183, -587, 433, 448, 529, -586,
	-298, 120, -298, 120, -298, 120, -298, -298, 2, 2,
	2, 2, 2, 85, 2, -136, -442, 2, 85, 2,
	46, 480, -611, 183, 2, 520, 2, 520, 2, -267,
	-267, -267, 482, 271, -298, -298, -298, -299, -304, 449,
	502, 530, 447, -442, 2, -629, 2, 188, 183, 2,
	501, 231, 501, 231, 120, 188, 74, 120, 28, 501,
	444, 601, 4, -245, 604, -271, -229, -389, -521, -390,
	-389, -230, -229, -232, 183, 398, 539, 316, 465, 256,
	-420, -419, 28, -442, -424, 177, 315, -442, -422, -444,
	590, 591, -513, -515, -372, 340, -223, -223, -223, -359,
	-469, -442, 388, 231, -494, -492, -492, -296, -522, 513,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, 272, 220, 467, 50,
	223, -442, 517, -442, -442, -442, -442, 309, 331, 336,
	526, 168, 536, 139, 340, -643, 495, 40, -449, -224,
	-377, 599, -463, 35, 478, 28, -456, 599, 2, -437,
	-442, -438, -324, -322, -267, 590, 591, 592, 593, 594,
	595, 580, 581, 582, 14, 15, 16, 585, 589, 587,
	588, 181, 95, 584, 287, 440, 86, 171, 172, 173,
	174, 254, 255, 17, 18, 19, 34, 583, -374, -373,
	-373, 600, 553, 28, 139, 592, 2, 600, 604, 38,
	600, -442, -374, -455, -451, -373, -462, -461, 560, -410,
	-411, 568, 296, 123, 214, 294, -412, 452, -516, 8,
	-522, 592, -572, 176, 207, 599, 600, 2, 600, 2,
	600, -442, 2, 600, -442, 2, 600, -442, 2, 600,
	-442, 2, 600, 2, 600, 2, -442, -442, -442, -442,
	-442, -442, -442, -373, 8, -516, -516, 513, 513, -516,
	-516, -516, -508, 375, 376, 377, 378, 274, 275, 276,
	277, 379, 380, 381, 382, 301, 302, 303, 304, 297,
	298, 299, 300, 305, 306, 307, 308, 198, 199, 200,
	201, 194, 195, 196, 197, -508, -404, 2, -510, -373,
	4, 568, 296, 123, 214, 294, 452, 5, -404, 2,
	-405, 2, -442, -373, -406, -443, -444, 590, 591, 583,
	-323, -456, -407, 2, -442, -374, -442, 57, 266, 519,
	-408, -442, 188, -373, -373, 2, -373, 2, -569, 38,
	-373, -365, 604, 188, 38, 4, -365, -365, 599, 600,
	604, -403, 211, 290, 285, 244, -403, -473, -402, 251,
	-400, 356, -400, -400, -467, -282, 597, 605, -522, -467,
	-466, -465, 38, -291, 353, -467, -467, 601, 600, -466,
	598, -584, 599, 602, 602, 602, 602, 602, -298, 599,
	-373, -522, 601, 484, 2, 600, 245, 245, 245, 245,
	245, 346, 439, 600, 517, -588, -307, -311, 502, 2,
	563, -106, 348, 600, 604, -364, 37, 597, 601, -516,
	2, 2, -511, 555, 599, 599, -411, 599, 188, -588,
	-311, 502, 2, -363, 517, -267, 2, -298, -371, -245,
	154, -371, -371, -245, 604, 154, -281, -302, -307, -309,
	-311, -267, -527, -528, -245, -303, -619, 600, 521, -430,
	-325, 398, 477, 419, 456, 497, 8, 9, 8, 9,
	604, -522, 604, -620, 93, 517, 78, 448, -260, 280,
	517, -433, 216, 78, -543, -284, 93, -544, -267, 72,
	535, 388, 187, 152, -620, 93, 388, -620, 93, 2,
	233, 93, 461, 482, 28, 60, -478, 41, 41, 28,
	-618, 329, 267, 559, 188, 569, 501, 231, 448, 517,
	517, -478, -397, -492, 118, 291, 292, 60, -517, -512,
	590, 591, -517, 60, -517, -517, -517, 563, -301, -478,
	448, 517, 517, 517, 408, 408, -253, -149, 517, 517,
	28, -192, 426, 127, -641, 582, 408, 604, 41, 41,
	28, -618, 329, 267, 188, 517, -320, -282, 549, 42,
	549, 42, 549, 517, 42, 448, 517, 604, 42, 517,
	517, -13, 461, -595, -272, 105, 322, 284, 323, 97,
	319, 96, 318, 103, 320, 104, 321, 556, 334, 63,
	317, 295, 324, -273, -274, 367, 547, 120, -527, -13,
	-13, 461, 361, 418, 154, -616, 223, 28, -605, 223,
	-486, 223, -486, -312, -267, 601, -136, -442, -442, -136,
	-442, -136, 46, 154, 154, 2, -637, 260, 599, -329,
	331, 188, -362, -487, 242, 604, -370, -586, 154, -527,
	-396, -395, 331, -303, 216, 2, 154, -352, 331, 148,
	599, 396, 2, 154, -283, 216, -268, -267, -415, -247,
	505, 154, -393, 545, -425, -136, 599, 127, 38, -425,
	-382, -383, -484, -384, -284, 599, -291, -439, -107, -488,
	600, 600, 600, -204, 350, -203, -267, 5, -217, -353,
	-285, -284, 119, 400, 400, -211, 563, -132, -133, 600,
	604, -486, 223, 485, -205, -205, -486, -486, -298, 183,
	-530, -205, -205, -205, 2, 2, 2, 2, -399, -298,
	-281, -320, -298, 28, 601, -528, -528, -311, -307, -399,
	-281, -399, -281, -399, -281, -399, -399, -136, -442, 482,
	2, 458, 183, 183, 601, -399, -355, 428, 2, 396,
	120, 501, 365, 231, -298, -320, -298, -320, -281, 120,
	-281, 121, -298, 4, -478, -390, -230, 347, 256, 465,
	-422, -423, -444, 438, 439, -423, 438, 439, 8, 9,
	8, 9, -234, 469, 335, -371, 604, -239, 39, 135,
	256, -298, 569, 150, -442, -442, 517, -643, 495, -449,
	150, -442, 309, 336, 526, 168, 536, 139, 340, 188,
	599, -443, -443, 600, -375, -442, -442, 598, 607, 600,
	601, 600, -358, 604, -356, -442, -373, -373, 600, 601,
	-373, -362, 598, 598, 604, 600, -460, -461, 144, -442,
	517, 517, 517, 517, 599, 600, 601, -577, 357, 599,
	599, -442, 600, 600, 600, 600, 38, 604, 604, 604,
	600, 604, 604, 604, 600, 600, 600, 604, 600, 569,
	569, 600, 600, 600, 600, 604, 600, 604, 600, 188,
	600, 600, -413, 372, 600, 11, 12, 590, 591, 592,
	593, 181, 594, 595, 588, 589, 587, 580, 581, 582,
	86, 287, 440, 14, 15, 16, -323, 245, 223, -443,
	-443, -443, -443, 600, -447, -448, 188, 183, 38, -408,
	-408, -408, 600, 188, -373, 600, 600, 599, -570, 289,
	331, 600, -436, -435, 561, -483, -366, 2, -473, -293,
	-522, -436, -436, -373, -442, 251, 251, -401, 545, 346,
	-403, -473, -466, -518, -441, -440, 185, 39, 135, 325,
	326, 327, 219, 186, -466, -291, -352, -466, -466, -522,
	-467, -467, -465, 600, -585, -518, 600, -367, -476, -564,
	-358, 601, -522, -214, -565, -193, 5, 336, -193, -193,
	-193, -193, -298, -528, 517, 517, 223, 25, 373, -492,
	597, 598, 8, -522, 599, -516, -516, -516, -528, 188,
	188, 223, 188, -527, 2, -245, -371, -245, -245, -320,
	-321, -245, -245, -245, -394, 563, -519, -429, 533, 83,
	398, 513, -519, -241, 418, -284, -284, -298, -308, 202,
	409, -527, 331, -433, 216, -246, 331, -492, -292, 599,
	-417, 565, 256, 256, 545, -284, -292, 256, 216, -284,
	216, -292, 2, -292, -596, 398, 341, -442, 60, -336,
	278, 396, 332, -242, 418, 461, 361, -136, -136, -136,
	-136, -136, 599, -619, 545, 138, -298, -320, -298, -308,
	-527, -303, 461, 361, 418, 328, -314, -517, -517, -395,
	461, 361, 418, -308, -527, -301, -527, -252, 216, -267,
	-252, 216, 448, -281, 408, 569, 45, -641, -243, -136,
	-136, -136, -136, -136, 599, -282, -244, 418, 5, 216,
	-284, 5, -284, 216, 5, -267, -284, -308, -527, -623,
	24, 143, -284, -308, -527, -272, -530, 336, 541, -281,
	-594, -288, 448, 517, 517, -478, -612, -613, 204, 431,
	448, 434, -528, -132, -208, 563, -132, -202, 227, 592,
	-591, -530, -267, 554, -267, -327, -330, -328, -284, -434,
	-433, -547, -548, -543, 272, 231, 535, 244, 169, -220,
	-221, 565, 563, 154, -318, -298, 597, -205, -530, -298,
	-487, -309, -310, 154, -352, 331, -527, 38, 154, 599,
	2, 2, -302, 346, 331, -283, 216, -248, 145, -641,
	-281, -436, -366, -392, -427, 428, 346, -353, 550, -291,
	-392, -368, 604, 188, 582, 601, -353, -482, 592, -107,
	-107, -205, 604, 599, 582, 582, 599, -530, 600, 604,
	601, 599, 582, 582, -213, 350, -212, 146, 258, 243,
	471, 472, 473, 474, 137, 470, 124, 314, -486, -530,
	-211, -133, 188, 188, -66, 563, 501, -205, 603, 434,
	-267, -399, -399, -399, 458, 458, -267, -362, -294, -281,
	-298, -295, -320, 183, 183, -281, 539, -423, 347, 283,
	-469, -240, 571, -298, 603, -442, -442, 150, 150, -442,
	-443, -443, -442, 150, 188, 599, -442, -453, 33, 33,
	600, 604, -438, -442, -322, 600, 553, -358, -358, 600,
	592, -522, 603, 600, -451, 147, -442, 511, 296, 214,
	294, -412, 294, -412, -412, -516, 5, -522, 592, -578,
	-287, 599, -267, 561, -357, 352, 600, -494, -492, -442,
	-442, -442, -442, -442, -516, -497, -497, -512, -512, -442,
	-447, -442, -494, -492, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, 139, 331, 340, -443, -448, -447,
	-442, -442, -492, 600, 600, 600, -373, -106, 599, 289,
	-386, 207, -442, -486, 604, -386, -386, 600, -473, -473,
	599, -442, 251, 598, 604, 606, 582, 582, -352, 601,
	-465, -466, 598, 600, 604, 600, 604, -426, 38, 600,
	-522, -436, -216, -215, 136, 53, 107, 134, 336, 245,
	-528, -528, 448, 349, 5, 8, 597, 598, 601, -516,
	600, 600, 600, -528, -528, 448, -528, -245, -245, 119,
	316, -442, 517, 517, 60, 223, 154, 331, 547, -549,
	-544, 152, -442, 599, 231, 599, 599, 2, -236, -237,
	-238, 143, 461, 24, -621, 2, 545, 154, -245, 154,
	-245, 567, -336, 599, 599, 517, 448, -260, 517, 563,
	-373, -442, -206, 127, -521, -601, 603, -601, 603, 448,
	517, 517, 448, 517, 517, 331, 154, 563, 167, 167,
	569, -252, 563, -373, 517, -496, 48, 26, 331, -302,
	-245, 154, 517, 517, 529, 461, -530, 336, -13, -308,
	-527, -303, 461, 361, 418, -593, -363, -593, 204, -311,
	-616, -486, -210, 350, -209, 146, 430, 137, 258, -486,
	-208, 188, 242, 563, -303, 2, 600, 600, 604, 604,
	-550, -246, -298, -283, 231, 231, -290, -268, 38, 344,
	344, 599, -298, -87, 563, -485, -518, -597, 563, 43,
	-301, 38, 154, -594, -136, -303, -490, -491, 5, 38,
	-298, 154, 346, 331, -249, 265, -641, -526, -565, -358,
	-392, -381, 332, 91, 600, -436, -383, -366, -442, 2,
	600, -203, -204, -530, -530, -530, -205, -217, -285, 2,
	-531, -530, -530, 604, 599, 582, 582, 582, 582, 582,
	-211, -486, -132, -136, 350, -298, 592, -399, -342, -341,
	365, 340, -342, 438, 438, 347, 177, 261, -239, -282,
	-442, -442, 150, 33, 33, -442, -442, -453, 600, -442,
	-442, -373, 598, 5, -442, 600, 600, 8, -442, 600,
	601, -579, -267, -442, 600, 60, 600, 600, 604, 604,
	600, 600, 600, 600, 600, 600, 600, -448, 188, 139,
	340, 599, 600, 600, -106, -450, 210, 60, -473, -450,
	-450, -401, -362, -473, -440, -282, 597, -282, 597, -522,
	-518, -476, 599, 601, -215, 582, -530, -530, -193, 563,
	-311, 598, 2, 597, -522, 600, -311, 119, -284, -284,
	501, 438, -252, 388, -433, 154, -551, 93, -553, 76,
	169, 102, 331, 336, 535, 388, 72, 127, 346, 405,
	-631, -632, -633, 38, 574, 575, 600, -360, -470, -564,
	599, -267, -360, -362, 331, 490, 127, 346, 331, 127,
	346, 558, 119, 2, 529, 79, -284, -292, -362, -362,
	-298, -308, -527, 161, 600, 604, 582, 2, 592, 592,
	-308, -527, -303, -308, -527, -301, 154, -252, 363, 167,
	161, 600, -282, 5, 5, 154, -279, 76, -284, 5,
	-284, -302, 119, 448, 517, 517, 346, 346, 349, -612,
	-613, -208, 604, 599, 582, 582, -208, -531, -132, 2,
	-352, -343, 233, -284, -548, -545, -546, 388, -434, -552,
	-554, 169, 388, -331, 599, -283, -268, 599, -136, 2,
	-219, -218, -267, 5, 599, -329, 350, 598, -599, 350,
	-598, 117, 137, -527, -396, -136, -303, -352, 600, 604,
	148, -418, 545, -282, -298, 154, -250, 264, -641, -526,
	-247, -421, -419, 140, 599, 346, -136, -358, 582, 600,
	600, 119, 600, -212, -213, -530, -132, -530, -530, -530,
	-211, -486, -67, -68, 231, 93, 370, -295, 501, 231,
	599, 599, -239, -442, -442, -442, 600, -358, -522, 592,
	-573, 365, 600, -469, -442, -442, -443, 188, 599, -453,
	600, -574, 562, -442, -387, -388, -442, 436, 108, 208,
	-574, -574, 600, -518, -518, 2, -530, 2, 517, 597,
	2, 188, 223, 38, 408, -433, -292, -296, -289, -267,
	169, 216, 336, 558, -417, 256, 599, -443, 539, -298,
	599, 2, 215, 215, 30, 60, -634, 131, 235, 600,
	604, -471, -278, -267, -442, -471, 600, 600, 336, 539,
	336, 558, -442, 539, -492, 599, -245, -245, 600, 600,
	-442, 517, -521, 100, -519, 2, -601, -252, -281, -442,
	517, 5, -245, -296, -245, -245, -279, 529, -308, -527,
	-303, -617, 502, 455, 530, 449, 191, 437, -617, 183,
	-209, -210, -530, -132, -208, 38, -337, -338, 2, -550,
	256, -289, 256, 225, 153, -360, 599, 599, -362, -630,
	563, 600, 604, 582, 582, -327, -220, -88, -89, 518,
	-485, 604, 599, 582, -352, 38, 5, 599, 599, -267,
	346, 599, -282, -262, 92, -641, -526, -248, -392, 332,
	-362, 93, -421, -449, -205, 599, -205, 600, 604, 28,
	599, 28, 599, -298, -320, -373, -373, 600, -358, 60,
	604, 600, 600, -443, -453, 600, -575, -576, -287, 604,
	599, 599, 462, 598, 598, -528, 2, -528, -252, 388,
	-267, -553, -289, 331, 545, -442, -443, -269, 599, -442,
	599, 599, 38, 127, 235, 132, 221, -432, -635, 101,
	491, 224, -470, -239, 600, -431, 545, 405, -443, -279,
	-360, 599, 599, 599, 582, 188, 599, -496, -245, -302,
	517, 2, 2, 188, -593, 600, -607, 403, -136, -220,
	599, -332, 81, 94, 128, 215, 192, 232, 482, 488,
	28, -332, 600, -360, -360, 600, -333, 346, 119, 316,
	-218, -519, -519, 600, 38, -89, 9, -598, -599, -442,
	38, -136, -490, -360, -298, -360, 346, -254, -253, 273,
	-526, -249, 600, -292, -392, -531, -68, -362, -362, 600,
	600, -580, 396, 439, 209, -373, -359, 600, 604, 38,
	-388, 2, 2, 2, 408, 154, 211, 600, -555, 288,
	-267, 600, -396, -396, 38, 132, 221, -339, -335, 599,
	-240, -471, 211, -298, -602, 545, 600, -345, -344, -341,
	-347, -346, -341, -373, -519, 100, 363, -373, -279, -528,
	-528, 346, -609, 189, -608, 5, 10, -333, -361, -472,
	-284, -431, 600, 600, 82, 119, -343, -136, 600, -136,
	600, 600, -418, 600, -298, -251, -532, 408, 410, -641,
	-250, -436, 600, 600, 600, 600, -581, -582, 50, 532,
	109, -442, -581, -581, -576, -578, 169, 563, -556, -559,
	-558, 579, 468, 189, 364, 600, 490, 557, 600, 600,
	-634, -362, 563, -352, -442, -431, 600, 604, 550, 600,
	604, 550, 600, 188, 600, -245, -614, 563, -245, -617,
	-207, 563, 46, -261, -260, 600, 604, -432, -431, -339,
	387, 133, 143, -337, -630, -431, 599, -432, 599, -259,
	-258, -641, -512, -262, 140, -205, -583, 152, -582, 384,
	182, 438, 384, 182, -583, -583, -289, 55, -558, 579,
	-559, 579, 539, 133, -436, 600, 55, -555, -344, 223,
	-346, 188, 363, 204, 188, 446, -608, 30, -472, -339,
	-432, -221, 563, 439, 439, 2, -220, -333, -432, -360,
	-339, -360, -255, -256, -257, -362, -254, 332, 539, 109,
	207, 512, 316, 33, 582, -557, 316, 425, 64, 461,
	-557, 582, -556, 599, 599, 349, -528, 350, -221, -339,
	-436, 2, -333, -339, 600, -221, 600, -251, 461, 438,
	354, -582, -442, 23, 336, 127, -442, -634, -373, -373,
	-245, -204, 599, -436, -221, -261, -221, -431, -436, -432,
	-259, -382, 600, 600, -204, -436, -436, -432, -339, -255,
	-436, -334, -335, 517, 600, -339, -221, 599, -221, -436,
	-373, -436, 600, -334,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 555, 556, 558, 559, 560, 562,
	563, 565, 567, 569, 570, 571, 573, 574, 576, 577,
	578, 579, 580, 582, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	651, 653, 0, 1421, 1423, 1425, 1427, 0, 807, 0,
	36, 37, 39, 0, -2, 334, 336, 338, 340, 0,
	371, 373, 374, 376, 378, 379, 380, 382, -2, 0,
	488, 489, 491, 493, -2, 0, 1021, 1023, 1025, 0,
	640, 642, 0, 1028, 1030, 1032, 0, 0, 663, 664,
	0, 1532, -2, 655, 657, 659, 661, 732, 734, 736,
	738, 740, 742, 744, 746, 748, 750, 751, 753, 755,
	757, 759, 761, 762, 764, 766, 768, 769, 771, 772,
	774, 776, 778, 780, 782, 784, 786, 788, 790, 792,
	794, 796, 798, -2, 801, 802, 803, -2, -2, 0,
	-2, -2, -2, 1439, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 432, 434, 436, 438, 440, 443,
	445, 447, 1590, 495, 497, 499, 501, 503, 505, 507,
	0, -2, 1604, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1563, 1565, 1567, 1569, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 557, 561, 564, 566, 568, 572,
	575, 581, 583, 585, 540, 541, 544, 2302, 2320, 2321,
	2322, 2325, 2326, 2327, 2328, 2329, 2330, 2785, 2866, 2867,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 542, 543, 1210, 0, 609, 607, 2287,
	610, 2582, 612, 614, 482, 483, 484, 485, 486, 487,
	0, 633, 623, 1602, 634, 636, 637, 638, 639, 604,
	602, 0, 633, 2356, 631, 1419, 1420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 411, 1268,
	1269, 1270, 1404, 1405, 2629, 1446, 0, 235, 652, -2,
	-2, 2750, -2, 686, 687, -2, -2, 701, 705, 696,
	2754, 0, 2632, 2616, -2, 708, 1422, 1424, 1426, 805,
	806, 2306, 0, 0, 0, 0, 0, 38, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 245, -2,
	-2, -2, -2, 0, 0, 2677, 2408, 2255, 2322, 2258,
	2253, 335, 337, 339, 341, 342, 0, 0, 0, 0,
	0, 0, 0, 372, 375, 377, 381, -2, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1092, 1084, 1085, 1326, 0, 0, 0, -2, 490,
	492, 545, 546, 0, 1591, 1591, 553, 554, -2, 0,
	0, 0, 0, 305, 295, 1022, 1024, 1026, 1027, 0,
	0, 0, 0, 0, 641, 643, 0, 0, 274, 1029,
	1031, 1033, 1034, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 656, 658, 660, 662, 733, 735, 737, 739,
	741, 743, 745, 747, 749, 752, 754, 756, 758, 760,
	763, 765, 767, 770, 773, 775, 777, 779, 781, 783,
	785, 787, 789, 791, 793, 795, 797, 799, 800, 813,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 915, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 1002, 0, 0, 816, 819, 820,
	821, 822, 823, 824, 0, 888, 913, 914, 924, 804,
	0, 1250, 1592, 1448, 1429, 1443, 1448, 1431, 1432, 1433,
	1434, 1435, 1440, 1442, 1436, 1437, 1438, 42, 44, 46,
	48, 50, 52, 54, 56, 58, 60, 433, 435, 437,
	439, 441, 444, 446, 448, -2, 1561, 1562, 496, 498,
	500, 502, 504, 506, 508, 644, 0, 646, 0, 818,
	-2, 0, 1596, 1596, 1596, 0, 0, 1562, 1560, 0,
	649, 650, 712, 713, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 2129, 1957, 0, 714, -2, 1990, 1992,
	2725, 2555, 2750, 2128, 1994, 1995, 1996, 1997, 1998, 0,
	2000, 2001, 2002, 2003, 2004, 2005, 0, 2007, 0, 2012,
	2013, 2014, 0, 2732, 2232, 2316, -2, 0, 0, 2738,
	2312, 0, 2095, 2030, -2, -2, 2339, 2318, 1801, 1802,
	1803, 1804, 1805, -2, -2, 2768, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 0, 2713, 2733,
	2734, 2739, 2741, 2735, 2722, 2055, 2422, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1828, 1837, -2, -2, -2, -2, -2, -2, -2, 2726,
	2727, 2744, 2747, 2753, 2758, 2759, 2731, 2740, 2767, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 1829, -2, -2, -2, -2,
	1579, 2596, 1582, 1210, 1580, 1564, 1566, 0, 1568, 0,
	0, 0, 1573, 1599, 1597, 0, 1648, 1577, 1578, 1671,
	1671, 1695, 0, 1676, 0, 1695, 1591, 1722, 0, 1682,
	2621, 2031, 2032, 0, 2322, 2317, -2, -2, 2765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 605,
	0, 611, 613, 0, 0, 0, 632, 1601, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 416, 417, 418,
	2733, 0, 0, 0, 423, 0, 425, 426, 427, 428,
	429, 430, 431, 205, 2733, 513, 538, 0, 205, 2733,
	516, 205, 2733, 519, 0, 522, 1324, 205, 2733, 525,
	2283, 205, 2733, 528, 530, 2291, 205, 2733, 534, 2298,
	2296, 535, 0, 537, 225, 221, 222, 223, 224, 1415,
	1416, 1417, 1418, 0, 1445, 1325, 654, 0, 680, 0,
	684, 685, 2721, -2, 0, 2641, 689, 690, -2, 692,
	1449, 1453, 1454, 1455, 1456, 1457, 0, 0, 0, 0,
	1462, 0, 0, 0, 0, 681, 682, 699, 700, 706,
	709, 0, 808, 809, 810, 811, 812, 72, 0, 2733,
	1722, 74, 0, 2277, 2347, 2348, 2349, 2350, 2351, 2766,
	2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795,
	2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
	2768, 78, 0, 2733, 83, 0, 2733, 0, -2, 96,
	0, 108, 0, 2280, 117, 0, 2733, 0, 2252, -2,
	0, 217, 296, 297, 298, 0, 1059, -2, 0, 1262,
	1264, 1264, 0, -2, 0, 0, 0, 1012, 2249, 2254,
	1013, 2273, 1014, 2259, 0, 343, 344, 345, 346, 347,
	0, 348, 2733, 350, 351, 0, 353, 354, 2733, 356,
	357, 0, 359, 0, 361, 0, 256, 260, 2733, 308,
	309, 2335, 2336, 2343, 2344, 2345, 2346, 2733, 385, 387,
	0, 389, 390, 0, 392, 0, 0, 0, 396, -2,
	412, 0, 409, 399, 400, 402, 403, 404, 405, 406,
	0, 452, 450, 2288, 0, 0, -2, 2733, 0, 1056,
	0, 0, 1304, -2, 0, 1255, 0, 1311, 2733, 1307,
	0, -2, 0, 1589, 2733, 1466, 1088, 1089, 1090, 1091,
	1734, 479, 0, 1497, 0, 1499, 0, 1518, 1728, 1671,
	0, 0, 1733, 0, -2, 598, 2305, -2, 548, 0,
	549, 0, -2, 0, 322, 0, 0, 1037, 1039, 1040,
	1042, 1043, 1046, 1047, 1048, 1049, 0, 1051, 1708, 275,
	277, 0, 0, 0, 1036, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 0, 0, 665, 0, 0, 814,
	815, 0, 0, 831, 832, 833, 0, 322, 2633, 2591,
	2443, 840, 0, 843, 846, -2, 0, 0, 0, 0,
	850, 0, 855, 856, 857, 0, -2, 0, 864, 866,
	1020, 868, 0, 0, 870, 0, 874, 0, 877, 0,
	879, 0, 881, -2, -2, -2, 889, 890, -2, 895,
	-2, 0, 899, -2, 0, 902, 0, 905, -2, 0,
	915, 911, 912, 0, 0, 0, 0, 932, 933, 0,
	942, 0, 945, 946, 947, 0, 951, 952, 0, 954,
	955, 956, 957, 0, 2704, 2638, 2408, 0, 965, -2,
	971, 973, 0, -2, 0, 989, 0, 993, 0, 0,
	1001, 0, 0, 817, 0, 825, 826, 205, 1726, 1428,
	-2, 1430, 0, -2, 0, 645, 0, 648, 1621, 1547,
	1544, 0, 1618, 1619, 1548, 0, 0, 0, 1555, 0,
	1594, 1595, 0, 0, 0, 1534, 1535, 0, 0, 0,
	0, 2134, 2135, 2136, 2137, 2150, 2138, 2139, 2149, 2147,
	2148, 2140, 2141, 2146, 2160, 2161, 2151, 2152, 2142, 2155,
	2153, 2154, 2156, 2157, 2158, 2159, 0, 0, 2165, 0,
	2143, 2144, 2145, 2173, 0, 0, 2174, 0, 2176, 0,
	2166, 2162, 2163, 2164, 0, 1936, 1938, 2240, 0, 0,
	0, 2172, 2167, 2168, 1874, 1875, 1876, 1877, 1878, 1911,
	1915, 1916, 0, 0, 1991, 2237, 2236, 1993, 0, 0,
	2188, 0, 2006, -2, 0, 2129, 2183, 0, 0, 2015,
	2016, 2017, 0, 0, 2188, 0, 0, 2231, 2027, 2028,
	1866, 0, 0, 2097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 1814, 0, 1816, 0, 1817, 1818, 1825,
	1838, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 2212, -2, 0, 0, 0, 0, 1830,
	0, 1581, 0, 0, 1652, 2241, 2245, 2246, 1652, 1652,
	0, 0, 2189, 1719, 1719, 0, 0, 1714, 1714, 1714,
	1712, 1695, 0, 1695, 1705, 0, 1695, 1695, 0, -2,
	1676, 0, 0, 1705, 0, 1689, 586, 588, 590, 592,
	593, 594, 596, 1723, 1724, 0, 0, 0, 0, 2323,
	0, 0, 0, 0, 2295, 0, 0, 2308, 0, 0,
	2282, 368, 0, 0, 0, 2687, 2632, 0, -2, 616,
	635, 1591, 0, 2191, 1749, 1753, 0, 1755, 1756, 1757,
	1758, 1759, 0, 0, 1750, -2, 1826, 1828, 1849, 2340,
	2341, 2342, 1809, 1810, 1811, 1812, 1813, 1821, 1808, 1808,
	1808, 1819, 1848, 1840, 1848, 1844, 1794, 1795, 1796, 1831,
	1832, 1833, 1834, 0, 2687, 2632, 0, -2, 625, 0,
	0, 1529, 413, 0, 420, 421, 422, 0, 509, 0,
	203, 204, 0, 205, 2733, 514, 0, 517, 0, 205,
	2733, 2247, 523, 0, 526, 0, 0, 532, 0, 0,
	0, 0, 0, 205, 1531, 0, 0, 0, 0, -2,
	694, 702, 703, 704, 0, 1451, 0, 1458, 723, 724,
	725, 1460, 1461, 0, 1463, 697, 726, 727, 728, 729,
	730, 731, 0, 2261, 2262, 2263, 2264, 2267, 2268, 0,
	0, 695, 716, 698, 0, 710, 118, 1401, 0, 0,
	161, 0, 1401, 1401, 0, 0, 0, 0, 188, 0,
	1122, 0, 0, 0, 0, 133, 146, 157, 130, 131,
	0, 0, 0, 0, 0, 0, 84, 1232, 0, 1235,
	0, 0, 0, 0, 0, 0, 0, 1248, 0, 0,
	0, 0, 0, 98, 99, 0, 0, 104, 105, 0,
	145, 0, 0, 0, 0, 0, 1494, 0, 140, 120,
	0, 0, 133, 147, 159, 0, 192, 194, 1119, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 227, 0,
	0, 0, 1256, 0, 0, 0, 1588, 0, 0, 0,
	0, 2733, 1399, 0, 1384, 0, 1708, 2491, -2, -2,
	275, 1708, 1011, 0, 0, 2323, 2257, 0, 0, 0,
	0, 0, 0, 360, 0, 0, 0, 388, 391, 393,
	394, 395, 0, 1303, 0, 401, 442, 1181, 2733, 0,
	0, 469, 464, 0, 466, 0, 0, 0, 1231, 2733,
	1229, 2292, 0, 1253, 0, 1210, 2733, 2290, 0, 0,
	0, 1312, 2332, 1321, 1325, 1484, 0, 481, 0, 1500,
	1502, 0, 0, 1729, 0, 1731, 1671, 1591, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 1050,
	281, 0, 1707, 0, 0, 310, 1708, 275, 2607, 1035,
	322, 322, 1708, 667, 1708, 669, 0, 0, 834, 835,
	0, 322, 322, 322, 841, 842, 844, 845, -2, -2,
	-2, -2, 847, 848, 939, 0, 0, 0, 938, 858,
	0, 860, 863, 867, 0, 1005, 2616, 2632, 2687, 1018,
	939, 2408, 939, 2408, 939, 2408, 939, 939, 883, 927,
	935, 894, 901, 0, 896, 900, 903, 906, 0, 908,
	916, 0, -2, 0, 919, 0, 921, 0, 923, 939,
	940, 943, 950, 953, 958, 959, 960, 961, 2303, 962,
	963, 964, -2, 968, 969, 0, 980, 985, 986, 982,
	0, 0, 0, 0, 0, 0, 996, 997, 0, 0,
	1004, 0, 827, 1249, 0, 1441, 1621, 1547, 647, 1538,
	1620, 1539, 1546, 1549, 0, 0, 1551, 0, 1553, 0,
	1616, 1617, 1624, 1625, 0, 1635, 1636, 1628, 0, -2,
	0, 0, 1631, 1632, 1557, 0, 1574, 1575, 1576, 1605,
	1608, 1340, 0, 2866, 1870, 1744, 1871, 1872, 2276, 0,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	-2, -2, -2, -2, -2, -2, -2, -2, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, -2,
	-2, -2, 1912, 1913, 1914, -2, 2175, 2177, 0, 2240,
	0, -2, 0, -2, -2, -2, -2, 1933, 0, 1935,
	1940, 1942, 1944, 0, 0, 0, 0, 2239, 1954, 2223,
	2224, 0, 0, 2131, 2132, 2133, 1939, 0, 1958, 2238,
	2235, 0, 0, 2169, 0, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 0, 2187,
	1604, 2019, 0, 0, 0, 0, 2026, 2011, 2185, 0,
	2184, 0, 0, 0, 2195, 0, 2230, 2226, 0, 2274,
	1865, 1852, 1853, 1854, 1855, 1856, 1857, 1867, 0, 2271,
	2309, 2315, 2105, 0, 0, 0, 2056, 2057, 2058, 2059,
	2060, 0, 2062, 2063, 0, 2065, 2066, 0, 2068, 2069,
	0, 2071, 2072, 2073, 2074, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 0, 0, 2077, 0, 2198,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 2079,
	0, 2081, 2189, 2209, 0, 0, 1959, 0, 0, 0,
	0, 2129, 0, 2084, 2189, 2217, 0, 0, 0, 0,
	0, 2189, 0, 2222, 0, 2091, 0, 2093, 1583, 0,
	0, 1739, 0, 0, 0, 2244, 1739, 1739, 0, 1647,
	0, 0, 1715, 1716, 1717, 1718, 0, 0, 1719, 0,
	1709, 1713, 1710, 1711, 1705, 1668, 0, 0, 2278, 1705,
	1674, 1704, 0, 1210, 1694, 1705, 1705, 0, -2, 1678,
	1695, 0, 0, 587, 589, 591, 595, 597, 0, 0,
	1604, -2, 0, -2, 324, 1209, 0, 0, 0, 0,
	0, 0, 606, 608, 0, 0, 529, 0, 0, 622,
	0, 600, 0, 603, 0, 1740, 1743, 0, 0, 1754,
	1760, 1761, 0, -2, 0, 0, 1850, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 424, 539, 205, 511,
	0, 205, 205, 520, 0, 0, 205, 531, 205, 2299,
	205, 2297, 226, 536, 1530, 238, 0, 683, 0, 1450,
	1459, 0, 720, 0, 722, 0, 2265, 2269, 2266, 2270,
	0, 711, 0, 0, 0, 0, 1400, 0, 1347, 0,
	0, 165, 2733, 0, 207, 0, 0, 1174, 2284, 0,
	1164, 0, 0, 2429, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 1234, 1236, 1243, 1245, 0, 1239, 2272,
	0, 0, 1240, 0, 1242, 1244, 1246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 1265, 0, 0,
	1266, 1267, 1472, 1473, 0, 1493, 1494, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 2251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1258, 0, 1299, 1297, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 0, 0, 0, -2, 1260,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 313, 2250, 2260, 0, 1044, 1045, 349, 352,
	355, 358, 244, 0, 0, 397, 0, 0, 1094, 1069,
	0, 0, 451, 322, 0, 0, 465, 469, 2301, 1054,
	1227, 1230, 0, 1210, 2733, 1276, 0, 0, 0, 0,
	0, 0, 1310, 0, 0, 2733, 2279, 2331, 2332, 1486,
	1494, 0, 1739, 0, 1516, 1503, 0, 0, 0, 1516,
	1520, 1521, 1523, 1524, 0, 0, 1730, 1736, 547, 599,
	1591, 1591, 322, 320, 2558, 318, 315, 317, 0, 0,
	1506, 1508, 0, 0, 0, 269, 0, 278, 1708, 276,
	0, 281, 0, 0, 0, 463, 666, 671, 829, 0,
	322, 837, 838, 839, 885, 929, 937, 984, 849, 851,
	852, 853, 0, 0, 0, 1019, 1015, 1016, 1017, 869,
	939, 872, 939, 875, 939, 878, 880, 898, 904, 917,
	910, 918, 0, 0, 0, 931, 948, 0, 967, 0,
	0, 0, 0, 0, 0, 0, 990, 991, 992, 994,
	999, 998, 1003, 828, 1727, 1542, 1543, 1545, 0, 1554,
	0, 0, 1630, -2, -2, 1629, 1633, 1634, -2, -2,
	-2, -2, 1550, 0, 1559, 1556, 0, 1615, 1338, 1339,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1955,
	0, -2, 1934, 1937, 1941, 1943, 1945, 0, 0, 0,
	0, 0, 0, 2178, 0, 2180, 1956, 2233, 2236, 2171,
	0, 2127, 0, 0, 1603, 1604, 1604, 0, 2025, 0,
	2186, 0, 2193, 2194, 0, 2018, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 0, 2061, 2064, 2067, 2070, 0, 0, 0, 0,
	2050, 0, 0, 0, 2054, 1820, 1806, 0, 1848, 1846,
	1847, 1841, 1848, 1845, 1798, 0, 1797, 0, 2076, 0,
	2078, 2080, 0, 0, 2082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	1963, 1964, 1984, 2083, 2215, 2216, 0, 0, 0, 0,
	0, 0, 2089, 0, 2221, 2090, 2092, 1591, 0, 1584,
	0, 1649, 1638, 1738, 0, 2242, 1708, 1651, 1653, 2243,
	2281, 1638, 1638, 0, 2190, 0, 0, 1699, 0, 0,
	0, 1701, 1672, 0, 0, 1666, 0, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1673, 1210, 1703, 1675, 1679, 2309,
	0, 1705, 0, 1690, 0, 1692, 1725, 0, 1684, 1687,
	0, 0, 2324, 1739, 0, 362, 369, 370, 363, 364,
	365, 366, 0, 615, 0, 0, 0, 0, 0, 2192,
	0, 1745, 0, 1751, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 1528, 419, 510, 205, 515, 518, 2248,
	205, 524, 527, 533, 234, 0, 679, -2, 718, 719,
	721, 0, 717, 162, 1401, 0, 0, 1343, 1345, 1349,
	1355, 1358, 0, 167, 2733, 179, 0, 1138, 0, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 2733, 205,
	2733, 205, 182, 184, 187, 0, 191, 189, 0, 1126,
	0, 0, 1129, 119, 1401, 0, 0, 122, 126, 134,
	135, 138, 0, 0, 0, 144, 0, 0, 0, 1360,
	1364, 1372, 0, 0, 0, 1237, 1238, 1241, 1247, 85,
	0, 0, 0, 1368, 1370, 1376, 97, 100, 2733, 2293,
	102, 2733, 0, 1342, 0, 0, 0, 0, 193, 124,
	128, 136, 137, 139, 0, 1378, 121, 0, 220, 0,
	0, 210, 205, 2733, 0, 212, 0, 213, 214, 228,
	0, 0, 0, 1057, 1058, 1298, 1251, 1252, 0, 1263,
	1257, 0, 0, 0, 0, 0, 1380, 1381, 0, 0,
	0, 1399, 1396, 1708, 240, 0, 1708, 248, 0, 2256,
	0, 261, 384, 0, 0, 0, 0, 1093, 1192, 1095,
	1097, 1098, 1099, 207, 0, 2332, 1164, 2480, 2332, 0,
	1064, 0, 0, 0, 457, 453, 0, 462, 468, 467,
	473, -2, 0, 0, 0, 0, -2, 0, 0, 1314,
	1308, 1309, 0, 0, 0, 0, 2733, 1488, 1494, 0,
	1589, 1604, 480, 1495, 1516, 0, 0, 0, 1505, 1501,
	1498, 1739, 0, 0, 0, 0, 0, 1732, 1735, 550,
	551, 299, 0, 0, 0, 0, 0, 322, 0, 0,
	0, 0, 0, 0, 279, 0, 282, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 0, 0, 281, 311,
	271, 1708, 0, 0, 668, 0, 0, 836, 0, 859,
	862, 871, 873, 876, 920, 922, 939, 949, 974, 975,
	1116, 0, 1116, 0, 0, 995, 1552, 0, 1627, 1558,
	1609, 1610, 0, 1340, 0, 1873, 1918, 0, 0, -2,
	0, 0, 1922, 0, 0, 0, -2, 0, 0, 0,
	2179, 2181, 0, 2235, 2170, 2020, 0, 0, 0, 2024,
	2008, 2009, 0, 2130, 2196, 2225, 2229, 0, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 0, 2275, 2310, 2314, 2103,
	2104, 2108, 2289, 0, 0, 0, 2033, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 1843, 0, 0, 2197,
	2208, 2210, 1960, 1961, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, -2, -2, -2, 1978, 1979, 1980,
	-2, -2, -2, 1985, 0, 0, 0, 2211, 2213, 2214,
	2218, 2219, 0, 2086, 2087, 2088, 2220, 0, 1591, 1585,
	1646, 0, 1737, 1650, 0, 1646, 1646, 1598, 1697, 0,
	0, 1721, 0, 1669, 0, 1670, 0, 0, 1702, 0,
	1677, 1680, 1681, 1691, 0, 1683, 0, 1686, 0, 2020,
	-2, 323, 325, 327, 0, 330, 331, 0, 0, 0,
	618, 619, 0, 617, 601, 0, 0, 1747, 0, 0,
	1823, 1827, 1851, 627, 628, 0, 626, 512, 521, 236,
	0, 1706, 0, 0, 0, 0, 0, 0, 206, 1136,
	1173, 0, 0, 0, 1163, 0, 0, 1179, 169, 170,
	171, 0, 0, 0, 0, 180, 0, 0, 177, 0,
	186, 190, 1123, 0, 0, 0, 0, 1348, 0, 0,
	0, 141, 142, 143, 0, 148, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1478, 1479,
	0, 1469, 0, 0, 0, 208, 0, 0, 0, 1337,
	230, 0, 0, 0, 0, 0, 1301, 1302, 1259, 1361,
	1365, 1373, 0, 0, 0, 0, 633, 0, 638, 1398,
	0, 248, 246, 0, 249, 0, 252, 253, 0, 248,
	242, 0, 0, 0, 1210, 398, 1067, 1180, 0, 0,
	1182, 1100, 1104, 0, 2332, 2332, 0, 2286, 0, 1065,
	0, 0, 1181, 449, 0, 456, 0, 470, 0, 0,
	1231, 0, 0, 1254, 1274, 1210, 0, 1313, 1315, 0,
	1323, 0, 0, 0, 1490, 1494, 0, 1483, 1484, 1623,
	1496, 1514, -2, 0, 0, 1604, 1522, 1519, 1525, 1526,
	0, 319, 0, 314, 316, 0, 302, 0, 1507, 1509,
	0, 1038, 1041, 0, 0, 0, 0, 0, 0, 0,
	270, 281, 1708, 306, 0, 830, 854, 930, 976, 1115,
	0, 0, 978, 0, 0, 1626, 1613, 1614, 1611, 1340,
	1920, 1924, 0, 0, 0, 1926, -2, 0, 1948, -2,
	-2, 2182, 2234, 1999, 1604, 2021, 2023, 2010, 2228, 1868,
	0, 2110, 2107, 0, 2094, 0, 2045, 2046, 0, 0,
	2049, 2051, 2052, 2053, 1807, 1800, 1799, 2207, 0, 0,
	0, 0, 2085, 1586, 0, 2099, 0, 0, 1654, 2099,
	2099, 1698, 0, 1700, 1667, 1655, 0, 1664, 0, 2310,
	1693, 1685, 0, 0, 328, 0, 332, 333, 367, 0,
	0, 1741, 1746, 0, 1752, 1822, 0, 237, 163, 164,
	1352, 1356, 1353, 0, 166, 0, 1137, 0, 1140, 0,
	0, 0, 0, 1147, 1164, 0, 0, 0, 0, 0,
	0, 1166, 0, 1165, 0, 0, 1196, 0, 1328, 1335,
	0, -2, 0, 0, 0, 173, 196, 0, 0, 0,
	0, 199, 1402, 175, 0, 0, 205, 205, 0, 0,
	1344, 1346, 1359, 0, 0, 0, 0, 151, 0, 0,
	1362, 1366, 1374, 1369, 1371, 1377, 0, 103, 0, 1480,
	0, 0, 1379, 218, 219, 0, 205, 0, 205, 211,
	205, 1337, 0, 0, 0, 0, 0, 0, 0, 1382,
	1383, 239, 0, 0, 0, 0, 241, 312, 248, 386,
	0, 1125, 0, 1192, 1184, 1185, 1186, 0, 1096, 1191,
	1193, 0, 0, 1101, 0, 0, 0, 0, 1081, 1066,
	0, 1077, 0, 0, 1094, 1069, 0, 454, 471, 0,
	474, 0, 477, 1055, 1228, 1271, 1210, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 1492, 1494, 0, 1485,
	1486, 1516, 1622, 0, 0, 0, 1504, 1623, 0, 321,
	322, 0, 322, 283, 0, 284, 285, 286, 293, 294,
	272, 273, 670, 672, 0, 0, 678, 1114, 0, 0,
	0, 0, 1612, 1928, -2, -2, 1949, 0, 2311, 2313,
	1604, 0, 2096, 1606, 0, 0, -2, 0, 0, 0,
	1587, 1570, 0, 1645, 1637, 1639, 1641, 2619, 2403, 2732,
	1571, 1572, 1720, 0, 0, 1688, 329, 620, 0, 0,
	1748, 0, 0, 0, 1354, 168, 0, 1141, 1142, 2285,
	1144, 0, 1146, 1148, 1149, 1150, 0, 1153, 0, 2334,
	0, 1158, 1161, 1162, 0, 0, 1175, 1197, 0, 1206,
	0, 1330, 1340, 1334, 0, 1332, 1208, 0, 172, 198,
	174, 200, 195, 0, 1337, 0, 176, 185, 0, 0,
	123, 0, 0, 2397, 154, 152, 150, 101, 1341, 125,
	0, 220, 229, 1336, 231, 215, 205, 0, 1363, 1367,
	1375, 0, 1390, 1391, 1392, 1393, 0, 0, 0, 0,
	250, 0, 251, 254, 0, 0, 1069, 1124, 1068, 1183,
	0, 1194, 1195, 0, 0, 0, 0, 0, 0, 1071,
	0, 1070, 0, 0, 0, 0, 0, 455, 458, 0,
	461, 0, 0, 0, 0, 0, 1316, 1314, 0, 1322,
	0, 0, 0, 1468, 0, 0, 1487, 1488, 478, 1510,
	0, 0, 1516, 1527, 301, 0, 304, 280, 0, 674,
	0, 676, 0, 977, 979, 0, 0, 2022, 2114, 0,
	0, 2047, 2048, -2, 0, 1988, 2098, 2100, 0, 0,
	0, 0, 0, 1656, 1665, 621, 1742, 629, 1350, 0,
	1357, 1139, 1143, 0, 0, 0, 1154, 1214, 0, 0,
	1231, 1231, 1167, 0, 0, 1200, 1201, 1121, 0, 1202,
	1203, 1204, 1329, 1615, 1335, 1177, 0, 0, 197, 202,
	0, 0, 0, 0, 0, 0, 0, 209, 232, 1337,
	0, 1394, 1395, 0, 0, 247, 265, 0, 1272, 1071,
	0, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1103, 1208, 0, 0, 1172, 1079, 0, 1082, 0,
	1078, 1075, 1076, 1067, 0, 459, 460, 475, 0, 476,
	0, 1275, 0, 0, 1323, 0, 0, 1475, 1467, 1494,
	1489, 1490, 1739, 1513, 1517, 0, 673, 0, 0, 987,
	988, 0, 0, 0, 0, 2109, 1607, 1989, 0, 0,
	1640, 1642, 1643, 1644, 1351, 0, 0, 1152, 1219, 0,
	0, 0, 0, 0, 1168, 1198, 1199, 1196, 1120, 0,
	1333, 1331, 0, 1210, 178, 0, 1208, 0, 1130, 0,
	0, 1133, 0, 0, 155, 2397, 153, 0, 205, 1387,
	205, 0, 268, 0, 259, 257, 258, 1063, 0, 1188,
	1190, 1206, 1208, 1121, 0, 1083, 1125, 1081, 472, 1273,
	1306, 1208, 0, 1206, 0, 1482, 1494, 1476, 1477, 0,
	1492, 0, 322, 675, 677, 2106, 2126, 2115, -2, 2690,
	2404, 0, 2126, 2126, 2101, 2102, 0, 0, 1155, 1215,
	1216, 0, 1211, 1212, 1213, 2333, 1156, 1157, 1159, 1160,
	1739, 0, 0, 1214, 201, 183, 1127, 0, 0, 1128,
	0, 0, 158, 0, 160, 233, 1385, 0, 1388, 0,
	255, 0, 0, 1060, 1062, 1187, 0, 1121, 1206, 1069,
	0, 0, 0, 1069, 1071, 1206, 0, 1121, 0, 1471,
	1481, 0, 1491, 1468, 0, 303, 2111, 0, 0, 2117,
	2118, 2119, 2120, 2121, 2112, 2113, 1145, 0, 1217, 0,
	1218, 0, 0, 0, 1176, 1205, 0, 1219, 1131, 0,
	1134, 0, 156, 0, 0, 0, 263, 264, 1189, 1069,
	1121, 1739, 0, 1072, 0, 1074, 1071, 1080, 1121, 0,
	1069, 0, 1464, 1470, 1474, 2294, 1475, 1511, 0, 0,
	2123, 2124, 0, 0, 0, 1220, 0, 1223, 1224, 0,
	1221, 0, 1196, 0, 0, 1386, 205, 0, 1739, 1069,
	1171, 1073, 1063, 1069, 1208, 1739, 1206, 1482, 0, 2122,
	2125, 2116, 1151, 1222, 1225, 1226, 1207, 1178, 0, 0,
	1389, 266, 0, 1169, 1739, 1061, 1739, 1206, 1319, 1121,
	1471, 1739, 1118, 0, 0, 1170, 1317, 1121, 1069, 1465,
	1512, 1132, 1117, 0, 267, 1069, 1739, 0, 1739, 1320,
	0, 1318, 1118, 1135,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 588, 3, 594, 589, 3,
	599, 600, 592, 590, 604, 591, 601, 593, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 607, 3,
	580, 582, 581, 585, 603, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 597, 3, 598, 595, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 605, 587, 606, 583,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 584, 57923, 586, 57924, 596,
	57925, 602, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1504
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1627
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1694
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1790
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1822
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1855
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1884
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1912
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1921
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1933
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1957
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1992
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2000
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2011
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2021
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2031
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2040
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2051
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2057
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2083
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2088
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2179
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2215
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2222
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2225
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2231
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2282
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2465
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2469
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2472
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2647
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2797
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = nil
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2931
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2996
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3036
		{
			return unimplemented(sqllex, "alter function")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3040
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3081
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3090
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3096
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3101
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3106
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = nil
		}
	case 323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3214
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3228
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3248
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3282
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3410
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3431
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3435
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3440
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3459
		{
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "CREATE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplemented(sqllex, "create access method")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplemented(sqllex, "create cast")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return unimplemented(sqllex, "create publication")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3490
		{
			return unimplemented(sqllex, "create rule")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return unimplemented(sqllex, "create server")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
		}
	case 408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3499
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3502
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3503
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3506
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3507
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3518
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3519
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3522
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3523
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			return unimplemented(sqllex, "drop server")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3526
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3585
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3619
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3654
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3689
		{

			sqlVAL.union.val = nil
		}
	case 470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3762
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "DELETE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3776
		{
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3802
		{
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "DROP")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3900
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4002
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4007
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4032
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4068
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4076
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4092
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4100
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "DELETE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "INSERT")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "DELETE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "INSERT")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4181
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4214
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4304
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4319
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			return helpWith(sqllex, "GRANT")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4382
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4394
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "RESET")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "RESET")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "USE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4468
		{
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4474
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4475
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4476
		{
			return helpWith(sqllex, "USE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4671
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4694
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4698
		{
			return unimplemented(sqllex, "set from current")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4702
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4716
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4721
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4725
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4737
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4742
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = tree.Low
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = tree.Normal
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.High
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4922
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.str = "client_encoding"
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.str = "timezone"
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5008
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5071
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5080
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5164
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5180
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5210
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5233
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = true
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = true
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = false
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5342
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5343
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5412
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5420
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5456
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5461
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5463
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5467
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = true
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = false
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5487
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5533
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = true
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = false
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5565
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5572
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5580
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5591
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5605
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5613
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5618
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5627
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5643
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5648
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5653
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5658
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5687
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5692
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5703
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5714
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5732
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5740
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5766
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5771
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5775
		{
		}
	case 987:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5784
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5807
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5819
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5878
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5888
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5901
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6034
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6135
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6136
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6137
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6138
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6150
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6162
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6190
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6235
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6290
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6318
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6354
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6369
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6397
		{

			sqlVAL.union.val = nil
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6403
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.str = ""
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = nil
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6436
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6440
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6466
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6479
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6493
		{
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6494
		{
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6495
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6550
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6576
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6587
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6593
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6594
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.str = ""
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6732
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6836
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6881
		{

			sqlVAL.union.val = true
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = false
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6895
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6898
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6994
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7005
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7022
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7032
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7047
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7112
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7113
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7114
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7115
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7116
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7117
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7189
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7273
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7282
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7290
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7301
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7316
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7320
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7328
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7330
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7343
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7368
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7402
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.str = ""
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = true
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{

			sqlVAL.union.val = true
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = false
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7451
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7465
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7477
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7489
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7499
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7509
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = nil
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7618
		{
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7619
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7644
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7646
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7648
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7650
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7652
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7654
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7689
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7706
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7724
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7740
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7756
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7760
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = false
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = true
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = false
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = true
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = false
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7814
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7820
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7826
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7834
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.str = ""
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.str = ""
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7893
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7899
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8124
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8130
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8142
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8148
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8162
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8168
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8227
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = true
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = false
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = tree.Types
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8287
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8291
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8315
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8316
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8319
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8320
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8331
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8349
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8358
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8379
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8387
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8416
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8427
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8431
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8432
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8433
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8452
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8457
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8470
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8475
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8486
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8503
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8506
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8507
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8535
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8548
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8550
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8554
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8643
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.str = ""
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8666
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8671
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{

		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8703
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.str = ""
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.str = ""
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.str = ""
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.str = ""
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8758
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8771
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8772
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8801
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8819
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8823
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8832
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8881
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8908
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8912
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8950
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9003
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9018
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9162
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9197
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9198
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9199
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9260
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9304
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9320
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = true
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = false
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9373
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9374
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = nil
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9388
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = true
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = false
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = false
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = true
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9418
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9422
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9475
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9480
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9506
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9539
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9595
		{
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9599
		{
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9634
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9635
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9665
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9667
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9682
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9704
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9751
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9763
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9782
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9824
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9834
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9880
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9910
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9943
		{
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9945
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = nil
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = true
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = false
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.str = tree.AstFull
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.str = tree.AstRight
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.str = tree.AstInner
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10062
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10063
		{
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.str = tree.AstHash
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.str = ""
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10155
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10167
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10177
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = true
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = false
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = true
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = false
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10226
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10239
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10247
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10248
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10266
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10268
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10276
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10296
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10305
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10345
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10357
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10358
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = types.Geography
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10407
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10415
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10449
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = nil
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = types.Int2
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = types.Int
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = types.Float4
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = types.Float
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10492
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10500
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10508
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = types.Bool
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = types.Float
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10541
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10547
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10569
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = types.String
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = true
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = false
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = types.Date
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10618
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10626
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10640
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10649
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10657
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10674
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = true
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = false
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = false
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = types.Interval
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10698
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10782
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10797
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = nil
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10827
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10887
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11036
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11044
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11223
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11353
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11361
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11462
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11488
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11512
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11542
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11553
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11554
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11569
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11578
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11644
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11774
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11792
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11810
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11815
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11830
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11835
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11844
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11845
		{
			return unimplemented(sqllex, "treat")
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11871
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11918
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.str = ""
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12007
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12020
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12117
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12193
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12533
		{
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12534
		{
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12606
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12614
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12683
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12687
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12703
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12712
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12723
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12732
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12740
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12757
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12910
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12958
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12976
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12989
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12996
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.str = ""
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
