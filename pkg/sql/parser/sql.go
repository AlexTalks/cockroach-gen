// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCONTROLJOB",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11645

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1316,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	220, 198,
	445, 198,
	-2, 0,
	-1, 79,
	209, 1119,
	222, 1119,
	238, 338,
	336, 338,
	345, 913,
	377, 338,
	389, 913,
	430, 913,
	455, 338,
	480, 913,
	-2, 0,
	-1, 85,
	238, 342,
	-2, 0,
	-1, 86,
	123, 1316,
	215, 1316,
	465, 1316,
	466, 1316,
	-2, 0,
	-1, 102,
	140, 1287,
	158, 1287,
	171, 1287,
	218, 1287,
	251, 1287,
	295, 1287,
	305, 1287,
	460, 1287,
	-2, 1258,
	-1, 136,
	148, 798,
	237, 798,
	339, 767,
	394, 767,
	448, 798,
	-2, 0,
	-1, 138,
	4, 1318,
	21, 1318,
	22, 1318,
	23, 1318,
	24, 1318,
	25, 1318,
	26, 1318,
	28, 1318,
	29, 1318,
	35, 1318,
	40, 1318,
	41, 1318,
	42, 1318,
	43, 1318,
	44, 1318,
	45, 1318,
	46, 1318,
	47, 1318,
	48, 1318,
	49, 1318,
	51, 1318,
	52, 1318,
	53, 1318,
	54, 1318,
	56, 1318,
	57, 1318,
	58, 1318,
	59, 1318,
	60, 1318,
	61, 1318,
	65, 1318,
	66, 1318,
	67, 1318,
	68, 1318,
	70, 1318,
	71, 1318,
	72, 1318,
	76, 1318,
	77, 1318,
	78, 1318,
	79, 1318,
	80, 1318,
	81, 1318,
	82, 1318,
	85, 1318,
	86, 1318,
	87, 1318,
	88, 1318,
	90, 1318,
	92, 1318,
	93, 1318,
	94, 1318,
	95, 1318,
	96, 1318,
	98, 1318,
	100, 1318,
	101, 1318,
	109, 1318,
	110, 1318,
	111, 1318,
	112, 1318,
	114, 1318,
	115, 1318,
	116, 1318,
	118, 1318,
	119, 1318,
	120, 1318,
	122, 1318,
	123, 1318,
	125, 1318,
	126, 1318,
	127, 1318,
	130, 1318,
	131, 1318,
	132, 1318,
	134, 1318,
	135, 1318,
	137, 1318,
	138, 1318,
	139, 1318,
	141, 1318,
	142, 1318,
	143, 1318,
	144, 1318,
	145, 1318,
	146, 1318,
	147, 1318,
	148, 1318,
	149, 1318,
	150, 1318,
	151, 1318,
	152, 1318,
	153, 1318,
	154, 1318,
	155, 1318,
	157, 1318,
	163, 1318,
	164, 1318,
	165, 1318,
	166, 1318,
	170, 1318,
	172, 1318,
	176, 1318,
	177, 1318,
	178, 1318,
	179, 1318,
	180, 1318,
	181, 1318,
	183, 1318,
	184, 1318,
	186, 1318,
	187, 1318,
	189, 1318,
	190, 1318,
	191, 1318,
	192, 1318,
	193, 1318,
	194, 1318,
	195, 1318,
	196, 1318,
	197, 1318,
	199, 1318,
	200, 1318,
	202, 1318,
	203, 1318,
	204, 1318,
	205, 1318,
	209, 1318,
	210, 1318,
	211, 1318,
	212, 1318,
	215, 1318,
	216, 1318,
	217, 1318,
	219, 1318,
	221, 1318,
	222, 1318,
	224, 1318,
	226, 1318,
	227, 1318,
	228, 1318,
	230, 1318,
	234, 1318,
	235, 1318,
	236, 1318,
	237, 1318,
	238, 1318,
	239, 1318,
	241, 1318,
	242, 1318,
	243, 1318,
	245, 1318,
	246, 1318,
	248, 1318,
	249, 1318,
	252, 1318,
	253, 1318,
	254, 1318,
	257, 1318,
	258, 1318,
	259, 1318,
	260, 1318,
	262, 1318,
	263, 1318,
	264, 1318,
	265, 1318,
	266, 1318,
	267, 1318,
	268, 1318,
	269, 1318,
	270, 1318,
	271, 1318,
	272, 1318,
	274, 1318,
	276, 1318,
	277, 1318,
	278, 1318,
	279, 1318,
	280, 1318,
	281, 1318,
	282, 1318,
	284, 1318,
	286, 1318,
	288, 1318,
	290, 1318,
	291, 1318,
	292, 1318,
	293, 1318,
	294, 1318,
	297, 1318,
	300, 1318,
	301, 1318,
	302, 1318,
	303, 1318,
	306, 1318,
	307, 1318,
	308, 1318,
	310, 1318,
	312, 1318,
	313, 1318,
	314, 1318,
	315, 1318,
	316, 1318,
	317, 1318,
	318, 1318,
	319, 1318,
	320, 1318,
	321, 1318,
	322, 1318,
	323, 1318,
	325, 1318,
	326, 1318,
	327, 1318,
	328, 1318,
	329, 1318,
	330, 1318,
	331, 1318,
	332, 1318,
	333, 1318,
	335, 1318,
	337, 1318,
	338, 1318,
	339, 1318,
	340, 1318,
	341, 1318,
	342, 1318,
	343, 1318,
	344, 1318,
	345, 1318,
	346, 1318,
	347, 1318,
	349, 1318,
	355, 1318,
	357, 1318,
	358, 1318,
	359, 1318,
	360, 1318,
	361, 1318,
	362, 1318,
	363, 1318,
	364, 1318,
	366, 1318,
	367, 1318,
	368, 1318,
	370, 1318,
	371, 1318,
	372, 1318,
	373, 1318,
	374, 1318,
	375, 1318,
	377, 1318,
	378, 1318,
	379, 1318,
	380, 1318,
	381, 1318,
	382, 1318,
	383, 1318,
	384, 1318,
	385, 1318,
	386, 1318,
	387, 1318,
	389, 1318,
	390, 1318,
	391, 1318,
	392, 1318,
	393, 1318,
	394, 1318,
	396, 1318,
	397, 1318,
	398, 1318,
	399, 1318,
	400, 1318,
	402, 1318,
	403, 1318,
	404, 1318,
	405, 1318,
	406, 1318,
	407, 1318,
	408, 1318,
	410, 1318,
	412, 1318,
	413, 1318,
	414, 1318,
	415, 1318,
	416, 1318,
	417, 1318,
	418, 1318,
	419, 1318,
	420, 1318,
	421, 1318,
	422, 1318,
	423, 1318,
	424, 1318,
	426, 1318,
	427, 1318,
	429, 1318,
	431, 1318,
	432, 1318,
	433, 1318,
	434, 1318,
	435, 1318,
	436, 1318,
	437, 1318,
	438, 1318,
	440, 1318,
	441, 1318,
	442, 1318,
	443, 1318,
	444, 1318,
	446, 1318,
	448, 1318,
	449, 1318,
	450, 1318,
	451, 1318,
	452, 1318,
	454, 1318,
	455, 1318,
	456, 1318,
	458, 1318,
	459, 1318,
	462, 1318,
	463, 1318,
	464, 1318,
	465, 1318,
	466, 1318,
	467, 1318,
	468, 1318,
	470, 1318,
	473, 1318,
	474, 1318,
	475, 1318,
	476, 1318,
	477, 1318,
	478, 1318,
	480, 1318,
	481, 1318,
	482, 1318,
	487, 1318,
	488, 1318,
	489, 1318,
	490, 1318,
	491, 1318,
	492, 1318,
	-2, 0,
	-1, 139,
	1, 1192,
	226, 1192,
	335, 1192,
	343, 1192,
	495, 1192,
	519, 1192,
	-2, 0,
	-1, 141,
	1, 1192,
	519, 1192,
	-2, 0,
	-1, 142,
	1, 1192,
	519, 1192,
	-2, 0,
	-1, 143,
	1, 1192,
	445, 1192,
	519, 1192,
	-2, 0,
	-1, 172,
	140, 1286,
	158, 1286,
	171, 1286,
	218, 1286,
	251, 1286,
	295, 1286,
	305, 1286,
	460, 1286,
	-2, 1261,
	-1, 210,
	4, 1325,
	5, 1325,
	6, 1325,
	7, 1325,
	8, 1325,
	9, 1325,
	10, 1325,
	21, 1325,
	22, 1325,
	23, 1325,
	24, 1325,
	25, 1325,
	26, 1325,
	28, 1325,
	29, 1325,
	35, 1325,
	36, 1325,
	40, 1325,
	41, 1325,
	42, 1325,
	43, 1325,
	44, 1325,
	45, 1325,
	46, 1325,
	47, 1325,
	48, 1325,
	49, 1325,
	51, 1325,
	52, 1325,
	53, 1325,
	54, 1325,
	56, 1325,
	57, 1325,
	58, 1325,
	59, 1325,
	60, 1325,
	61, 1325,
	62, 1325,
	63, 1325,
	64, 1325,
	65, 1325,
	66, 1325,
	67, 1325,
	68, 1325,
	70, 1325,
	71, 1325,
	72, 1325,
	74, 1325,
	76, 1325,
	77, 1325,
	78, 1325,
	79, 1325,
	80, 1325,
	81, 1325,
	82, 1325,
	85, 1325,
	86, 1325,
	87, 1325,
	88, 1325,
	90, 1325,
	92, 1325,
	93, 1325,
	94, 1325,
	95, 1325,
	96, 1325,
	98, 1325,
	99, 1325,
	100, 1325,
	101, 1325,
	102, 1325,
	103, 1325,
	104, 1325,
	105, 1325,
	106, 1325,
	107, 1325,
	108, 1325,
	109, 1325,
	110, 1325,
	111, 1325,
	112, 1325,
	113, 1325,
	114, 1325,
	115, 1325,
	116, 1325,
	117, 1325,
	118, 1325,
	119, 1325,
	120, 1325,
	122, 1325,
	123, 1325,
	125, 1325,
	126, 1325,
	127, 1325,
	130, 1325,
	131, 1325,
	132, 1325,
	134, 1325,
	135, 1325,
	137, 1325,
	138, 1325,
	139, 1325,
	141, 1325,
	142, 1325,
	143, 1325,
	144, 1325,
	145, 1325,
	146, 1325,
	147, 1325,
	148, 1325,
	149, 1325,
	150, 1325,
	151, 1325,
	152, 1325,
	153, 1325,
	154, 1325,
	155, 1325,
	156, 1325,
	157, 1325,
	163, 1325,
	164, 1325,
	165, 1325,
	166, 1325,
	170, 1325,
	172, 1325,
	175, 1325,
	176, 1325,
	177, 1325,
	178, 1325,
	179, 1325,
	180, 1325,
	181, 1325,
	183, 1325,
	184, 1325,
	186, 1325,
	187, 1325,
	189, 1325,
	190, 1325,
	191, 1325,
	192, 1325,
	193, 1325,
	194, 1325,
	195, 1325,
	196, 1325,
	197, 1325,
	198, 1325,
	199, 1325,
	200, 1325,
	202, 1325,
	203, 1325,
	204, 1325,
	205, 1325,
	209, 1325,
	210, 1325,
	211, 1325,
	212, 1325,
	214, 1325,
	215, 1325,
	216, 1325,
	217, 1325,
	219, 1325,
	221, 1325,
	222, 1325,
	223, 1325,
	224, 1325,
	225, 1325,
	226, 1325,
	227, 1325,
	228, 1325,
	229, 1325,
	230, 1325,
	234, 1325,
	235, 1325,
	236, 1325,
	237, 1325,
	238, 1325,
	239, 1325,
	241, 1325,
	242, 1325,
	243, 1325,
	245, 1325,
	246, 1325,
	247, 1325,
	248, 1325,
	249, 1325,
	250, 1325,
	252, 1325,
	253, 1325,
	254, 1325,
	255, 1325,
	256, 1325,
	257, 1325,
	258, 1325,
	259, 1325,
	260, 1325,
	262, 1325,
	263, 1325,
	264, 1325,
	265, 1325,
	266, 1325,
	267, 1325,
	268, 1325,
	269, 1325,
	270, 1325,
	271, 1325,
	272, 1325,
	274, 1325,
	275, 1325,
	276, 1325,
	277, 1325,
	278, 1325,
	279, 1325,
	280, 1325,
	281, 1325,
	282, 1325,
	283, 1325,
	284, 1325,
	285, 1325,
	286, 1325,
	287, 1325,
	288, 1325,
	289, 1325,
	290, 1325,
	291, 1325,
	292, 1325,
	293, 1325,
	294, 1325,
	297, 1325,
	301, 1325,
	302, 1325,
	303, 1325,
	306, 1325,
	307, 1325,
	308, 1325,
	309, 1325,
	310, 1325,
	311, 1325,
	312, 1325,
	313, 1325,
	314, 1325,
	315, 1325,
	316, 1325,
	317, 1325,
	318, 1325,
	319, 1325,
	320, 1325,
	321, 1325,
	322, 1325,
	323, 1325,
	325, 1325,
	326, 1325,
	327, 1325,
	328, 1325,
	329, 1325,
	330, 1325,
	331, 1325,
	332, 1325,
	333, 1325,
	335, 1325,
	337, 1325,
	338, 1325,
	339, 1325,
	340, 1325,
	341, 1325,
	342, 1325,
	343, 1325,
	344, 1325,
	345, 1325,
	346, 1325,
	347, 1325,
	349, 1325,
	355, 1325,
	357, 1325,
	358, 1325,
	359, 1325,
	360, 1325,
	361, 1325,
	362, 1325,
	363, 1325,
	364, 1325,
	366, 1325,
	367, 1325,
	368, 1325,
	369, 1325,
	370, 1325,
	371, 1325,
	372, 1325,
	373, 1325,
	374, 1325,
	375, 1325,
	377, 1325,
	378, 1325,
	379, 1325,
	380, 1325,
	381, 1325,
	382, 1325,
	383, 1325,
	384, 1325,
	385, 1325,
	386, 1325,
	387, 1325,
	389, 1325,
	390, 1325,
	391, 1325,
	392, 1325,
	393, 1325,
	394, 1325,
	395, 1325,
	396, 1325,
	397, 1325,
	398, 1325,
	399, 1325,
	400, 1325,
	401, 1325,
	402, 1325,
	403, 1325,
	404, 1325,
	405, 1325,
	406, 1325,
	407, 1325,
	408, 1325,
	410, 1325,
	412, 1325,
	413, 1325,
	414, 1325,
	415, 1325,
	416, 1325,
	417, 1325,
	418, 1325,
	419, 1325,
	420, 1325,
	421, 1325,
	422, 1325,
	423, 1325,
	424, 1325,
	426, 1325,
	427, 1325,
	428, 1325,
	429, 1325,
	431, 1325,
	432, 1325,
	433, 1325,
	434, 1325,
	435, 1325,
	436, 1325,
	437, 1325,
	438, 1325,
	440, 1325,
	441, 1325,
	442, 1325,
	443, 1325,
	444, 1325,
	446, 1325,
	448, 1325,
	449, 1325,
	450, 1325,
	451, 1325,
	452, 1325,
	453, 1325,
	454, 1325,
	455, 1325,
	456, 1325,
	458, 1325,
	459, 1325,
	461, 1325,
	462, 1325,
	463, 1325,
	464, 1325,
	465, 1325,
	466, 1325,
	467, 1325,
	468, 1325,
	469, 1325,
	470, 1325,
	473, 1325,
	474, 1325,
	475, 1325,
	476, 1325,
	477, 1325,
	478, 1325,
	480, 1325,
	481, 1325,
	482, 1325,
	487, 1325,
	488, 1325,
	489, 1325,
	490, 1325,
	491, 1325,
	492, 1325,
	493, 1325,
	500, 1325,
	507, 1325,
	508, 1325,
	509, 1325,
	516, 1325,
	520, 1325,
	-2, 0,
	-1, 628,
	174, 2034,
	445, 2034,
	499, 2034,
	518, 2034,
	-2, 0,
	-1, 629,
	174, 2123,
	445, 2123,
	499, 2123,
	518, 2123,
	-2, 0,
	-1, 630,
	174, 2022,
	445, 2022,
	499, 2022,
	518, 2022,
	-2, 0,
	-1, 632,
	174, 2223,
	445, 2223,
	499, 2223,
	518, 2223,
	-2, 0,
	-1, 634,
	174, 2257,
	445, 2257,
	499, 2257,
	518, 2257,
	-2, 0,
	-1, 641,
	174, 2138,
	445, 2138,
	499, 2138,
	518, 2138,
	-2, 615,
	-1, 672,
	518, 1973,
	521, 1973,
	-2, 852,
	-1, 673,
	518, 1975,
	521, 1975,
	-2, 853,
	-1, 674,
	518, 1974,
	521, 1974,
	-2, 854,
	-1, 675,
	521, 1908,
	-2, 855,
	-1, 697,
	171, 212,
	-2, 0,
	-1, 719,
	480, 1096,
	-2, 914,
	-1, 759,
	4, 1117,
	21, 1117,
	22, 1117,
	23, 1117,
	24, 1117,
	25, 1117,
	26, 1117,
	28, 1117,
	29, 1117,
	35, 1117,
	40, 1117,
	41, 1117,
	42, 1117,
	43, 1117,
	44, 1117,
	45, 1117,
	46, 1117,
	47, 1117,
	48, 1117,
	49, 1117,
	51, 1117,
	52, 1117,
	53, 1117,
	54, 1117,
	56, 1117,
	57, 1117,
	58, 1117,
	59, 1117,
	60, 1117,
	61, 1117,
	65, 1117,
	66, 1117,
	67, 1117,
	68, 1117,
	70, 1117,
	71, 1117,
	72, 1117,
	76, 1117,
	77, 1117,
	78, 1117,
	79, 1117,
	80, 1117,
	81, 1117,
	82, 1117,
	85, 1117,
	86, 1117,
	87, 1117,
	88, 1117,
	90, 1117,
	92, 1117,
	93, 1117,
	94, 1117,
	95, 1117,
	96, 1117,
	98, 1117,
	100, 1117,
	101, 1117,
	109, 1117,
	110, 1117,
	111, 1117,
	112, 1117,
	114, 1117,
	115, 1117,
	116, 1117,
	118, 1117,
	119, 1117,
	120, 1117,
	122, 1117,
	123, 1117,
	125, 1117,
	126, 1117,
	127, 1117,
	130, 1117,
	131, 1117,
	132, 1117,
	134, 1117,
	135, 1117,
	137, 1117,
	138, 1117,
	139, 1117,
	141, 1117,
	142, 1117,
	143, 1117,
	144, 1117,
	145, 1117,
	146, 1117,
	147, 1117,
	148, 1117,
	149, 1117,
	150, 1117,
	151, 1117,
	152, 1117,
	153, 1117,
	154, 1117,
	155, 1117,
	157, 1117,
	163, 1117,
	164, 1117,
	165, 1117,
	166, 1117,
	170, 1117,
	172, 1117,
	176, 1117,
	177, 1117,
	178, 1117,
	179, 1117,
	180, 1117,
	181, 1117,
	183, 1117,
	184, 1117,
	186, 1117,
	187, 1117,
	189, 1117,
	190, 1117,
	191, 1117,
	192, 1117,
	193, 1117,
	194, 1117,
	195, 1117,
	196, 1117,
	197, 1117,
	199, 1117,
	200, 1117,
	202, 1117,
	203, 1117,
	204, 1117,
	205, 1117,
	209, 1117,
	210, 1117,
	211, 1117,
	212, 1117,
	215, 1117,
	216, 1117,
	217, 1117,
	219, 1117,
	221, 1117,
	222, 1117,
	224, 1117,
	226, 1117,
	227, 1117,
	228, 1117,
	230, 1117,
	234, 1117,
	235, 1117,
	236, 1117,
	237, 1117,
	238, 1117,
	239, 1117,
	241, 1117,
	242, 1117,
	243, 1117,
	245, 1117,
	246, 1117,
	248, 1117,
	249, 1117,
	252, 1117,
	253, 1117,
	254, 1117,
	257, 1117,
	258, 1117,
	259, 1117,
	260, 1117,
	262, 1117,
	263, 1117,
	264, 1117,
	265, 1117,
	266, 1117,
	267, 1117,
	268, 1117,
	269, 1117,
	270, 1117,
	271, 1117,
	272, 1117,
	274, 1117,
	276, 1117,
	277, 1117,
	278, 1117,
	279, 1117,
	280, 1117,
	281, 1117,
	282, 1117,
	284, 1117,
	286, 1117,
	288, 1117,
	290, 1117,
	291, 1117,
	292, 1117,
	293, 1117,
	294, 1117,
	297, 1117,
	301, 1117,
	302, 1117,
	303, 1117,
	306, 1117,
	307, 1117,
	308, 1117,
	310, 1117,
	312, 1117,
	313, 1117,
	314, 1117,
	315, 1117,
	316, 1117,
	317, 1117,
	318, 1117,
	319, 1117,
	320, 1117,
	321, 1117,
	322, 1117,
	323, 1117,
	325, 1117,
	326, 1117,
	327, 1117,
	328, 1117,
	329, 1117,
	330, 1117,
	331, 1117,
	332, 1117,
	333, 1117,
	335, 1117,
	337, 1117,
	338, 1117,
	339, 1117,
	340, 1117,
	341, 1117,
	342, 1117,
	343, 1117,
	344, 1117,
	345, 1117,
	346, 1117,
	347, 1117,
	349, 1117,
	355, 1117,
	357, 1117,
	358, 1117,
	359, 1117,
	360, 1117,
	361, 1117,
	362, 1117,
	363, 1117,
	364, 1117,
	366, 1117,
	367, 1117,
	368, 1117,
	370, 1117,
	371, 1117,
	372, 1117,
	373, 1117,
	374, 1117,
	375, 1117,
	377, 1117,
	378, 1117,
	379, 1117,
	380, 1117,
	381, 1117,
	382, 1117,
	383, 1117,
	384, 1117,
	385, 1117,
	386, 1117,
	387, 1117,
	389, 1117,
	390, 1117,
	391, 1117,
	392, 1117,
	393, 1117,
	394, 1117,
	396, 1117,
	397, 1117,
	398, 1117,
	399, 1117,
	400, 1117,
	402, 1117,
	403, 1117,
	404, 1117,
	405, 1117,
	406, 1117,
	407, 1117,
	408, 1117,
	410, 1117,
	412, 1117,
	413, 1117,
	414, 1117,
	415, 1117,
	416, 1117,
	417, 1117,
	418, 1117,
	419, 1117,
	420, 1117,
	421, 1117,
	422, 1117,
	423, 1117,
	424, 1117,
	426, 1117,
	427, 1117,
	429, 1117,
	431, 1117,
	432, 1117,
	433, 1117,
	434, 1117,
	435, 1117,
	436, 1117,
	437, 1117,
	438, 1117,
	440, 1117,
	441, 1117,
	442, 1117,
	443, 1117,
	444, 1117,
	446, 1117,
	448, 1117,
	449, 1117,
	450, 1117,
	451, 1117,
	452, 1117,
	454, 1117,
	455, 1117,
	456, 1117,
	458, 1117,
	459, 1117,
	462, 1117,
	463, 1117,
	464, 1117,
	465, 1117,
	466, 1117,
	467, 1117,
	468, 1117,
	470, 1117,
	473, 1117,
	474, 1117,
	475, 1117,
	476, 1117,
	477, 1117,
	478, 1117,
	480, 1117,
	481, 1117,
	482, 1117,
	487, 1117,
	488, 1117,
	489, 1117,
	490, 1117,
	491, 1117,
	492, 1117,
	-2, 0,
	-1, 838,
	339, 768,
	394, 768,
	-2, 0,
	-1, 839,
	339, 767,
	394, 767,
	-2, 711,
	-1, 843,
	1, 808,
	515, 808,
	517, 808,
	519, 808,
	-2, 0,
	-1, 844,
	1, 746,
	515, 746,
	517, 746,
	519, 746,
	-2, 0,
	-1, 845,
	1, 851,
	171, 851,
	515, 851,
	517, 851,
	519, 851,
	-2, 0,
	-1, 853,
	1, 771,
	515, 771,
	517, 771,
	519, 771,
	-2, 0,
	-1, 859,
	1, 808,
	515, 808,
	517, 808,
	519, 808,
	-2, 0,
	-1, 860,
	1, 810,
	515, 810,
	517, 810,
	519, 810,
	-2, 0,
	-1, 861,
	1, 813,
	515, 813,
	517, 813,
	519, 813,
	-2, 0,
	-1, 867,
	1, 830,
	515, 830,
	517, 830,
	519, 830,
	-2, 0,
	-1, 868,
	1, 832,
	515, 832,
	517, 832,
	519, 832,
	-2, 0,
	-1, 917,
	158, 1327,
	171, 1327,
	251, 1327,
	295, 1327,
	-2, 1265,
	-1, 932,
	158, 1326,
	171, 1326,
	251, 1326,
	295, 1326,
	-2, 1262,
	-1, 958,
	518, 1972,
	-2, 623,
	-1, 986,
	5, 1964,
	516, 1962,
	-2, 1953,
	-1, 994,
	5, 1985,
	516, 1982,
	-2, 1973,
	-1, 995,
	5, 1986,
	516, 1983,
	-2, 1974,
	-1, 1003,
	518, 1970,
	-2, 1952,
	-1, 1004,
	516, 2336,
	-2, 1971,
	-1, 1027,
	516, 2335,
	-2, 1987,
	-1, 1028,
	5, 1492,
	-2, 2306,
	-1, 1029,
	5, 1493,
	-2, 2307,
	-1, 1030,
	5, 1494,
	-2, 2321,
	-1, 1031,
	5, 1495,
	-2, 2285,
	-1, 1032,
	5, 1496,
	-2, 2319,
	-1, 1033,
	5, 1504,
	-2, 2298,
	-1, 1034,
	5, 1491,
	-2, 2294,
	-1, 1035,
	5, 1491,
	-2, 2293,
	-1, 1036,
	5, 1491,
	-2, 2312,
	-1, 1037,
	5, 1502,
	-2, 2287,
	-1, 1038,
	5, 1507,
	-2, 2286,
	-1, 1039,
	5, 1509,
	-2, 2331,
	-1, 1042,
	5, 1531,
	-2, 2324,
	-1, 1043,
	5, 1523,
	-2, 2325,
	-1, 1044,
	5, 1531,
	-2, 2326,
	-1, 1045,
	5, 1527,
	-2, 2327,
	-1, 1046,
	5, 1477,
	-2, 2299,
	-1, 1047,
	5, 1478,
	-2, 2300,
	-1, 1048,
	5, 1479,
	-2, 2288,
	-1, 1075,
	5, 1514,
	-2, 2332,
	-1, 1076,
	5, 1515,
	-2, 2322,
	-1, 1077,
	5, 1516,
	481, 1516,
	-2, 2289,
	-1, 1078,
	5, 1517,
	481, 1517,
	-2, 2290,
	-1, 1115,
	516, 1982,
	-2, 1973,
	-1, 1116,
	516, 1983,
	-2, 1974,
	-1, 1146,
	174, 2257,
	445, 2257,
	499, 2257,
	518, 2257,
	-2, 0,
	-1, 1149,
	1, 601,
	519, 601,
	-2, 1200,
	-1, 1274,
	357, 1948,
	396, 1948,
	509, 1948,
	-2, 1946,
	-1, 1286,
	520, 1948,
	-2, 1949,
	-1, 1293,
	1, 1093,
	515, 1093,
	517, 1093,
	519, 1093,
	-2, 1314,
	-1, 1347,
	345, 913,
	480, 913,
	-2, 337,
	-1, 1368,
	1, 1093,
	515, 1093,
	517, 1093,
	519, 1093,
	-2, 1314,
	-1, 1375,
	4, 1117,
	21, 1117,
	22, 1117,
	23, 1117,
	24, 1117,
	25, 1117,
	26, 1117,
	28, 1117,
	29, 1117,
	35, 1117,
	40, 1117,
	41, 1117,
	42, 1117,
	43, 1117,
	44, 1117,
	45, 1117,
	46, 1117,
	47, 1117,
	48, 1117,
	49, 1117,
	51, 1117,
	52, 1117,
	53, 1117,
	54, 1117,
	56, 1117,
	57, 1117,
	58, 1117,
	59, 1117,
	60, 1117,
	61, 1117,
	65, 1117,
	66, 1117,
	67, 1117,
	68, 1117,
	70, 1117,
	71, 1117,
	72, 1117,
	76, 1117,
	77, 1117,
	78, 1117,
	79, 1117,
	80, 1117,
	81, 1117,
	82, 1117,
	85, 1117,
	86, 1117,
	87, 1117,
	88, 1117,
	90, 1117,
	92, 1117,
	93, 1117,
	94, 1117,
	95, 1117,
	96, 1117,
	98, 1117,
	100, 1117,
	101, 1117,
	109, 1117,
	110, 1117,
	111, 1117,
	112, 1117,
	114, 1117,
	115, 1117,
	116, 1117,
	118, 1117,
	119, 1117,
	120, 1117,
	122, 1117,
	123, 1117,
	125, 1117,
	126, 1117,
	127, 1117,
	130, 1117,
	131, 1117,
	132, 1117,
	134, 1117,
	135, 1117,
	137, 1117,
	138, 1117,
	139, 1117,
	141, 1117,
	142, 1117,
	143, 1117,
	144, 1117,
	145, 1117,
	146, 1117,
	147, 1117,
	148, 1117,
	149, 1117,
	150, 1117,
	151, 1117,
	152, 1117,
	153, 1117,
	154, 1117,
	155, 1117,
	163, 1117,
	164, 1117,
	165, 1117,
	166, 1117,
	170, 1117,
	172, 1117,
	176, 1117,
	177, 1117,
	178, 1117,
	179, 1117,
	180, 1117,
	181, 1117,
	183, 1117,
	184, 1117,
	186, 1117,
	187, 1117,
	189, 1117,
	190, 1117,
	191, 1117,
	192, 1117,
	193, 1117,
	194, 1117,
	195, 1117,
	196, 1117,
	197, 1117,
	199, 1117,
	200, 1117,
	202, 1117,
	203, 1117,
	204, 1117,
	205, 1117,
	210, 1117,
	211, 1117,
	212, 1117,
	215, 1117,
	216, 1117,
	217, 1117,
	219, 1117,
	221, 1117,
	222, 1117,
	224, 1117,
	226, 1117,
	227, 1117,
	228, 1117,
	230, 1117,
	234, 1117,
	235, 1117,
	236, 1117,
	237, 1117,
	238, 1117,
	239, 1117,
	241, 1117,
	242, 1117,
	243, 1117,
	245, 1117,
	246, 1117,
	248, 1117,
	249, 1117,
	252, 1117,
	253, 1117,
	254, 1117,
	257, 1117,
	258, 1117,
	259, 1117,
	260, 1117,
	262, 1117,
	263, 1117,
	264, 1117,
	265, 1117,
	266, 1117,
	267, 1117,
	268, 1117,
	269, 1117,
	270, 1117,
	271, 1117,
	272, 1117,
	274, 1117,
	276, 1117,
	277, 1117,
	278, 1117,
	279, 1117,
	280, 1117,
	281, 1117,
	282, 1117,
	284, 1117,
	288, 1117,
	290, 1117,
	291, 1117,
	292, 1117,
	293, 1117,
	294, 1117,
	297, 1117,
	299, 1117,
	301, 1117,
	302, 1117,
	303, 1117,
	306, 1117,
	307, 1117,
	308, 1117,
	310, 1117,
	312, 1117,
	313, 1117,
	314, 1117,
	315, 1117,
	316, 1117,
	317, 1117,
	318, 1117,
	319, 1117,
	320, 1117,
	321, 1117,
	322, 1117,
	323, 1117,
	325, 1117,
	326, 1117,
	327, 1117,
	328, 1117,
	329, 1117,
	330, 1117,
	331, 1117,
	332, 1117,
	333, 1117,
	335, 1117,
	337, 1117,
	338, 1117,
	339, 1117,
	340, 1117,
	341, 1117,
	342, 1117,
	343, 1117,
	344, 1117,
	345, 1117,
	346, 1117,
	347, 1117,
	349, 1117,
	355, 1117,
	357, 1117,
	358, 1117,
	359, 1117,
	360, 1117,
	361, 1117,
	362, 1117,
	363, 1117,
	364, 1117,
	366, 1117,
	367, 1117,
	368, 1117,
	370, 1117,
	371, 1117,
	372, 1117,
	373, 1117,
	374, 1117,
	375, 1117,
	377, 1117,
	378, 1117,
	379, 1117,
	380, 1117,
	381, 1117,
	382, 1117,
	383, 1117,
	384, 1117,
	385, 1117,
	386, 1117,
	387, 1117,
	389, 1117,
	390, 1117,
	391, 1117,
	392, 1117,
	393, 1117,
	394, 1117,
	396, 1117,
	397, 1117,
	398, 1117,
	399, 1117,
	400, 1117,
	402, 1117,
	403, 1117,
	404, 1117,
	405, 1117,
	406, 1117,
	407, 1117,
	408, 1117,
	410, 1117,
	412, 1117,
	413, 1117,
	414, 1117,
	415, 1117,
	416, 1117,
	417, 1117,
	418, 1117,
	419, 1117,
	420, 1117,
	421, 1117,
	422, 1117,
	423, 1117,
	424, 1117,
	426, 1117,
	427, 1117,
	429, 1117,
	431, 1117,
	432, 1117,
	433, 1117,
	434, 1117,
	435, 1117,
	436, 1117,
	437, 1117,
	438, 1117,
	440, 1117,
	441, 1117,
	442, 1117,
	443, 1117,
	444, 1117,
	446, 1117,
	448, 1117,
	449, 1117,
	450, 1117,
	451, 1117,
	452, 1117,
	454, 1117,
	455, 1117,
	456, 1117,
	458, 1117,
	459, 1117,
	462, 1117,
	463, 1117,
	464, 1117,
	465, 1117,
	466, 1117,
	467, 1117,
	468, 1117,
	470, 1117,
	473, 1117,
	474, 1117,
	475, 1117,
	476, 1117,
	477, 1117,
	478, 1117,
	480, 1117,
	481, 1117,
	482, 1117,
	487, 1117,
	488, 1117,
	489, 1117,
	490, 1117,
	491, 1117,
	492, 1117,
	-2, 0,
	-1, 1448,
	1, 476,
	515, 476,
	517, 476,
	519, 476,
	-2, 1285,
	-1, 1451,
	4, 2330,
	11, 2330,
	12, 2330,
	14, 2330,
	15, 2330,
	16, 2330,
	17, 2330,
	18, 2330,
	19, 2330,
	21, 2330,
	22, 2330,
	23, 2330,
	24, 2330,
	25, 2330,
	26, 2330,
	28, 2330,
	29, 2330,
	32, 2330,
	33, 2330,
	35, 2330,
	37, 2330,
	40, 2330,
	41, 2330,
	42, 2330,
	43, 2330,
	44, 2330,
	45, 2330,
	46, 2330,
	47, 2330,
	48, 2330,
	49, 2330,
	51, 2330,
	52, 2330,
	53, 2330,
	54, 2330,
	56, 2330,
	57, 2330,
	58, 2330,
	59, 2330,
	60, 2330,
	61, 2330,
	65, 2330,
	66, 2330,
	67, 2330,
	68, 2330,
	70, 2330,
	71, 2330,
	72, 2330,
	73, 2330,
	76, 2330,
	77, 2330,
	78, 2330,
	79, 2330,
	80, 2330,
	81, 2330,
	82, 2330,
	83, 2330,
	85, 2330,
	86, 2330,
	87, 2330,
	88, 2330,
	90, 2330,
	91, 2330,
	92, 2330,
	93, 2330,
	94, 2330,
	95, 2330,
	96, 2330,
	98, 2330,
	99, 2330,
	100, 2330,
	101, 2330,
	109, 2330,
	110, 2330,
	111, 2330,
	112, 2330,
	114, 2330,
	115, 2330,
	116, 2330,
	118, 2330,
	119, 2330,
	120, 2330,
	122, 2330,
	123, 2330,
	125, 2330,
	126, 2330,
	127, 2330,
	130, 2330,
	131, 2330,
	132, 2330,
	134, 2330,
	135, 2330,
	137, 2330,
	138, 2330,
	139, 2330,
	141, 2330,
	142, 2330,
	143, 2330,
	144, 2330,
	145, 2330,
	146, 2330,
	147, 2330,
	148, 2330,
	149, 2330,
	150, 2330,
	151, 2330,
	152, 2330,
	153, 2330,
	154, 2330,
	155, 2330,
	159, 2330,
	160, 2330,
	161, 2330,
	162, 2330,
	163, 2330,
	164, 2330,
	165, 2330,
	166, 2330,
	169, 2330,
	170, 2330,
	172, 2330,
	175, 2330,
	176, 2330,
	177, 2330,
	178, 2330,
	179, 2330,
	180, 2330,
	181, 2330,
	183, 2330,
	184, 2330,
	186, 2330,
	187, 2330,
	189, 2330,
	190, 2330,
	191, 2330,
	192, 2330,
	193, 2330,
	194, 2330,
	195, 2330,
	196, 2330,
	197, 2330,
	198, 2330,
	199, 2330,
	200, 2330,
	201, 2330,
	202, 2330,
	203, 2330,
	204, 2330,
	205, 2330,
	207, 2330,
	208, 2330,
	210, 2330,
	211, 2330,
	212, 2330,
	214, 2330,
	215, 2330,
	216, 2330,
	217, 2330,
	219, 2330,
	221, 2330,
	222, 2330,
	223, 2330,
	224, 2330,
	225, 2330,
	226, 2330,
	227, 2330,
	228, 2330,
	229, 2330,
	230, 2330,
	232, 2330,
	233, 2330,
	234, 2330,
	235, 2330,
	236, 2330,
	237, 2330,
	238, 2330,
	239, 2330,
	241, 2330,
	242, 2330,
	243, 2330,
	245, 2330,
	246, 2330,
	247, 2330,
	248, 2330,
	249, 2330,
	250, 2330,
	252, 2330,
	253, 2330,
	254, 2330,
	257, 2330,
	258, 2330,
	259, 2330,
	260, 2330,
	261, 2330,
	262, 2330,
	263, 2330,
	264, 2330,
	265, 2330,
	266, 2330,
	267, 2330,
	268, 2330,
	269, 2330,
	270, 2330,
	271, 2330,
	272, 2330,
	274, 2330,
	275, 2330,
	276, 2330,
	277, 2330,
	278, 2330,
	279, 2330,
	280, 2330,
	281, 2330,
	282, 2330,
	284, 2330,
	287, 2330,
	288, 2330,
	290, 2330,
	291, 2330,
	292, 2330,
	293, 2330,
	294, 2330,
	297, 2330,
	301, 2330,
	302, 2330,
	303, 2330,
	304, 2330,
	306, 2330,
	307, 2330,
	308, 2330,
	310, 2330,
	312, 2330,
	313, 2330,
	314, 2330,
	315, 2330,
	316, 2330,
	317, 2330,
	318, 2330,
	319, 2330,
	320, 2330,
	321, 2330,
	322, 2330,
	323, 2330,
	325, 2330,
	326, 2330,
	327, 2330,
	328, 2330,
	329, 2330,
	330, 2330,
	331, 2330,
	332, 2330,
	333, 2330,
	335, 2330,
	337, 2330,
	338, 2330,
	339, 2330,
	340, 2330,
	341, 2330,
	342, 2330,
	343, 2330,
	344, 2330,
	345, 2330,
	346, 2330,
	347, 2330,
	349, 2330,
	355, 2330,
	356, 2330,
	357, 2330,
	358, 2330,
	359, 2330,
	360, 2330,
	361, 2330,
	362, 2330,
	363, 2330,
	364, 2330,
	366, 2330,
	367, 2330,
	368, 2330,
	369, 2330,
	370, 2330,
	371, 2330,
	372, 2330,
	373, 2330,
	374, 2330,
	375, 2330,
	376, 2330,
	377, 2330,
	378, 2330,
	379, 2330,
	380, 2330,
	381, 2330,
	382, 2330,
	383, 2330,
	384, 2330,
	385, 2330,
	386, 2330,
	387, 2330,
	389, 2330,
	390, 2330,
	391, 2330,
	392, 2330,
	393, 2330,
	394, 2330,
	396, 2330,
	397, 2330,
	398, 2330,
	399, 2330,
	400, 2330,
	401, 2330,
	402, 2330,
	403, 2330,
	404, 2330,
	405, 2330,
	406, 2330,
	407, 2330,
	408, 2330,
	410, 2330,
	412, 2330,
	413, 2330,
	414, 2330,
	415, 2330,
	416, 2330,
	417, 2330,
	418, 2330,
	419, 2330,
	420, 2330,
	421, 2330,
	422, 2330,
	423, 2330,
	424, 2330,
	426, 2330,
	427, 2330,
	429, 2330,
	431, 2330,
	432, 2330,
	433, 2330,
	434, 2330,
	435, 2330,
	436, 2330,
	437, 2330,
	438, 2330,
	440, 2330,
	441, 2330,
	442, 2330,
	443, 2330,
	444, 2330,
	446, 2330,
	448, 2330,
	449, 2330,
	450, 2330,
	451, 2330,
	452, 2330,
	454, 2330,
	455, 2330,
	456, 2330,
	458, 2330,
	459, 2330,
	462, 2330,
	463, 2330,
	464, 2330,
	465, 2330,
	466, 2330,
	467, 2330,
	468, 2330,
	470, 2330,
	473, 2330,
	474, 2330,
	475, 2330,
	476, 2330,
	477, 2330,
	478, 2330,
	480, 2330,
	481, 2330,
	482, 2330,
	487, 2330,
	488, 2330,
	489, 2330,
	490, 2330,
	491, 2330,
	492, 2330,
	493, 2330,
	494, 2330,
	497, 2330,
	498, 2330,
	499, 2330,
	500, 2330,
	501, 2330,
	502, 2330,
	504, 2330,
	505, 2330,
	506, 2330,
	507, 2330,
	508, 2330,
	509, 2330,
	510, 2330,
	511, 2330,
	512, 2330,
	514, 2330,
	517, 2330,
	518, 2330,
	520, 2330,
	521, 2330,
	-2, 0,
	-1, 1456,
	174, 2223,
	445, 2223,
	499, 2223,
	518, 2223,
	-2, 0,
	-1, 1505,
	339, 768,
	394, 768,
	-2, 0,
	-1, 1530,
	1, 763,
	515, 763,
	517, 763,
	519, 763,
	-2, 0,
	-1, 1531,
	1, 799,
	515, 799,
	517, 799,
	519, 799,
	-2, 0,
	-1, 1532,
	1, 770,
	515, 770,
	517, 770,
	519, 770,
	-2, 0,
	-1, 1534,
	1, 774,
	515, 774,
	517, 774,
	519, 774,
	-2, 0,
	-1, 1540,
	1, 781,
	515, 781,
	517, 781,
	519, 781,
	-2, 0,
	-1, 1568,
	1, 2277,
	515, 2277,
	517, 2277,
	518, 2277,
	519, 2277,
	-2, 828,
	-1, 1569,
	1, 2220,
	515, 2220,
	517, 2220,
	518, 2220,
	519, 2220,
	-2, 829,
	-1, 1584,
	1, 1195,
	519, 1195,
	-2, 1200,
	-1, 1587,
	158, 1326,
	171, 1326,
	251, 1326,
	295, 1326,
	-2, 1266,
	-1, 1681,
	140, 1287,
	158, 1287,
	171, 1287,
	218, 1287,
	251, 1287,
	295, 1287,
	305, 1287,
	460, 1287,
	-2, 1692,
	-1, 1741,
	517, 1842,
	-2, 0,
	-1, 1776,
	140, 1287,
	158, 1287,
	171, 1287,
	218, 1287,
	251, 1287,
	295, 1287,
	305, 1287,
	460, 1287,
	-2, 1407,
	-1, 1824,
	516, 1519,
	-2, 1507,
	-1, 1860,
	1, 603,
	519, 603,
	-2, 1200,
	-1, 2097,
	1, 765,
	515, 765,
	517, 765,
	519, 765,
	-2, 0,
	-1, 2098,
	1, 801,
	515, 801,
	517, 801,
	519, 801,
	-2, 0,
	-1, 2128,
	1, 783,
	515, 783,
	517, 783,
	519, 783,
	-2, 0,
	-1, 2174,
	374, 1353,
	375, 1353,
	-2, 1552,
	-1, 2205,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1572,
	-1, 2206,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1573,
	-1, 2207,
	91, 0,
	232, 0,
	233, 0,
	501, 0,
	502, 0,
	-2, 1574,
	-1, 2208,
	91, 0,
	232, 0,
	233, 0,
	501, 0,
	502, 0,
	-2, 1575,
	-1, 2209,
	91, 0,
	232, 0,
	233, 0,
	501, 0,
	502, 0,
	-2, 1576,
	-1, 2210,
	91, 0,
	232, 0,
	233, 0,
	501, 0,
	502, 0,
	-2, 1577,
	-1, 2211,
	91, 0,
	232, 0,
	233, 0,
	501, 0,
	502, 0,
	-2, 1578,
	-1, 2212,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1579,
	-1, 2224,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1591,
	-1, 2225,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1592,
	-1, 2226,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1593,
	-1, 2229,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1598,
	-1, 2235,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1602,
	-1, 2237,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1610,
	-1, 2238,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1611,
	-1, 2239,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1612,
	-1, 2240,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1613,
	-1, 2352,
	5, 1985,
	174, 1853,
	516, 1982,
	-2, 1973,
	-1, 2353,
	174, 1854,
	-2, 2281,
	-1, 2354,
	174, 1855,
	-2, 2137,
	-1, 2355,
	174, 1856,
	-2, 2047,
	-1, 2356,
	174, 1857,
	-2, 2091,
	-1, 2357,
	174, 1858,
	-2, 2132,
	-1, 2358,
	174, 1859,
	-2, 2218,
	-1, 2359,
	174, 1860,
	-2, 1675,
	-1, 2428,
	1, 1408,
	2, 1408,
	99, 1408,
	140, 1408,
	158, 1408,
	171, 1408,
	175, 1408,
	185, 1408,
	188, 1408,
	214, 1408,
	218, 1408,
	229, 1408,
	247, 1408,
	251, 1408,
	275, 1408,
	295, 1408,
	299, 1408,
	305, 1408,
	365, 1408,
	369, 1408,
	460, 1408,
	471, 1408,
	484, 1408,
	485, 1408,
	486, 1408,
	495, 1408,
	515, 1408,
	517, 1408,
	519, 1408,
	521, 1408,
	-2, 1407,
	-1, 2441,
	516, 1954,
	-2, 1968,
	-1, 2443,
	1, 274,
	-2, 1314,
	-1, 2467,
	516, 1518,
	-2, 1508,
	-1, 2591,
	1, 1093,
	515, 1093,
	517, 1093,
	519, 1093,
	-2, 1314,
	-1, 2762,
	300, 1356,
	-2, 2320,
	-1, 2763,
	300, 1357,
	-2, 2204,
	-1, 2767,
	374, 1919,
	375, 1919,
	-2, 1673,
	-1, 2768,
	374, 1923,
	375, 1923,
	-2, 1674,
	-1, 2769,
	374, 1920,
	375, 1920,
	-2, 1673,
	-1, 2770,
	374, 1924,
	375, 1924,
	-2, 1674,
	-1, 2783,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1600,
	-1, 2784,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1604,
	-1, 2790,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1606,
	-1, 2990,
	226, 1200,
	335, 1200,
	343, 1200,
	495, 1200,
	-2, 600,
	-1, 3123,
	1, 1093,
	515, 1093,
	517, 1093,
	519, 1093,
	-2, 1314,
	-1, 3231,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1608,
	-1, 3238,
	223, 0,
	225, 0,
	287, 0,
	-2, 1627,
	-1, 3305,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1656,
	-1, 3306,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1657,
	-1, 3307,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1658,
	-1, 3311,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1662,
	-1, 3312,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1663,
	-1, 3313,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1664,
	-1, 3359,
	516, 1955,
	-2, 1969,
	-1, 3491,
	518, 2436,
	-2, 1244,
	-1, 3549,
	223, 0,
	225, 0,
	287, 0,
	-2, 1628,
	-1, 3552,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1631,
	-1, 3553,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1633,
	-1, 3762,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1632,
	-1, 3763,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1634,
	-1, 3774,
	223, 0,
	-2, 1665,
	-1, 3924,
	223, 0,
	-2, 1666,
	-1, 4074,
	48, 0,
	198, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 2284,
}

const sqlPrivate = 57344

const sqlLast = 105558

var sqlAct = [...]int{

	244, 3946, 4084, 3687, 3806, 2917, 4182, 3852, 2681, 4073,
	3108, 4042, 4048, 3532, 4032, 3809, 4014, 3967, 3109, 4029,
	4085, 3794, 3387, 4086, 2066, 2651, 4132, 1119, 3859, 3270,
	2918, 3928, 4072, 3714, 3719, 3670, 3751, 942, 2184, 3140,
	3868, 2502, 3483, 3701, 1313, 3426, 2075, 3891, 3618, 2252,
	3008, 2050, 1434, 1811, 3133, 1596, 3724, 1439, 3460, 2192,
	3223, 2566, 3104, 3094, 3443, 1913, 3388, 3135, 37, 3779,
	674, 3445, 1471, 639, 1178, 3186, 2703, 3188, 2384, 2185,
	1276, 2692, 2011, 2640, 1812, 2622, 1108, 2613, 1438, 2776,
	1782, 2932, 2960, 3531, 674, 2923, 3588, 2690, 1271, 773,
	4, 2940, 2073, 2900, 2637, 1513, 2700, 2689, 933, 2683,
	2921, 1963, 2652, 2635, 1964, 2899, 3361, 1751, 1296, 2504,
	3330, 1727, 2421, 2189, 2420, 3929, 2541, 1923, 2265, 1279,
	669, 1099, 1689, 2048, 2760, 1942, 2580, 2699, 1958, 2294,
	238, 3027, 1949, 2623, 990, 1896, 1899, 1752, 1162, 1771,
	2381, 2402, 2285, 2249, 1886, 2173, 1584, 2967, 1414, 2156,
	1449, 2154, 997, 941, 163, 3106, 1366, 1435, 2540, 3853,
	237, 2423, 2645, 2000, 675, 2693, 995, 2453, 676, 2493,
	605, 2452, 1425, 1722, 2288, 2410, 1151, 767, 1470, 2392,
	1102, 2266, 1081, 986, 1761, 2348, 1674, 172, 2338, 1040,
	621, 1597, 2155, 2157, 1598, 1298, 1540, 1098, 2023, 988,
	680, 633, 1999, 1116, 1390, 1447, 671, 746, 1308, 591,
	1912, 719, 2178, 613, 971, 608, 173, 1104, 42, 41,
	39, 30, 28, 616, 680, 26, 1583, 1079, 832, 236,
	683, 1603, 2811, 851, 1319, 1611, 1612, 3344, 2807, 3345,
	163, 1654, 1655, 1656, 4245, 2919, 2039, 4239, 2401, 2039,
	937, 3167, 2296, 3167, 683, 2039, 2039, 1642, 2039, 4224,
	3150, 4223, 1768, 2401, 1614, 2401, 4199, 101, 2988, 4197,
	3634, 4193, 1660, 3634, 4114, 1974, 4108, 4106, 4115, 4103,
	2401, 2401, 3149, 4104, 4100, 4095, 4070, 4069, 4101, 1974,
	1974, 1974, 4068, 937, 1611, 1612, 2059, 1613, 1096, 4063,
	788, 2775, 2394, 2059, 4062, 2872, 2873, 1633, 2059, 4057,
	4055, 1135, 2401, 3634, 3634, 1630, 1642, 4027, 4008, 1611,
	1612, 3634, 2458, 1614, 4001, 4000, 3995, 3994, 2401, 2401,
	3634, 3634, 3988, 3960, 3926, 4009, 1974, 3679, 2458, 993,
	3908, 1642, 3905, 3902, 3520, 3861, 1974, 3634, 1614, 3862,
	3826, 918, 2562, 3825, 1974, 3817, 1613, 1974, 3816, 1974,
	3785, 3764, 3634, 1159, 1974, 2458, 1082, 1082, 3743, 3732,
	3665, 3653, 2059, 3167, 2401, 2401, 1611, 1612, 3633, 3921,
	917, 1613, 3634, 1636, 1637, 1638, 1639, 3909, 3551, 2074,
	992, 1633, 2458, 1619, 1159, 2059, 1114, 3499, 1642, 1630,
	927, 3183, 3334, 3493, 3458, 1614, 932, 3183, 3459, 2454,
	3354, 3352, 3337, 2037, 3355, 3353, 2401, 3254, 2393, 3250,
	3334, 1974, 1651, 2401, 3182, 1661, 3174, 3713, 3183, 1130,
	3175, 1641, 1643, 1083, 3679, 2916, 2911, 2910, 1613, 2401,
	2401, 2401, 938, 3654, 1974, 2863, 2861, 3545, 1633, 2864,
	2862, 2853, 1619, 1974, 2851, 2854, 1628, 1629, 2401, 1312,
	2822, 3520, 3175, 2878, 2401, 2820, 2401, 1636, 1637, 1638,
	1639, 2821, 2706, 2557, 1649, 2679, 2059, 1619, 2678, 2062,
	2477, 2492, 2062, 2291, 2401, 1634, 1085, 1866, 1086, 2457,
	1641, 1643, 1533, 2458, 2450, 210, 2444, 2400, 2401, 2061,
	1974, 2401, 2038, 2062, 768, 1131, 2619, 2054, 1973, 2810,
	2574, 2490, 1747, 1917, 1307, 1641, 1643, 3417, 3226, 3204,
	1769, 1952, 2437, 3151, 1636, 1637, 1638, 1639, 2436, 2435,
	68, 1515, 771, 770, 1619, 2434, 2433, 212, 1087, 210,
	1628, 1629, 3152, 3604, 1634, 1084, 69, 926, 2040, 1611,
	1612, 2040, 1111, 925, 210, 2888, 924, 2040, 2040, 923,
	2040, 2292, 73, 2740, 3912, 922, 921, 920, 916, 1634,
	954, 1642, 1641, 1643, 915, 914, 913, 912, 1614, 911,
	1640, 212, 910, 211, 909, 1483, 908, 907, 906, 905,
	904, 1333, 903, 204, 902, 901, 212, 900, 882, 79,
	1635, 205, 86, 1110, 830, 1312, 829, 3149, 828, 827,
	826, 1613, 825, 2321, 824, 1131, 823, 822, 821, 820,
	819, 1633, 818, 174, 817, 1652, 1634, 211, 995, 1630,
	816, 815, 995, 814, 85, 813, 2293, 2290, 1479, 812,
	811, 810, 211, 809, 808, 807, 806, 1181, 100, 2393,
	805, 1181, 204, 86, 97, 1301, 4091, 804, 1131, 1635,
	205, 1321, 803, 802, 1640, 1161, 801, 174, 791, 1166,
	2889, 1155, 790, 786, 785, 1611, 1612, 3235, 779, 995,
	778, 995, 174, 995, 1635, 2631, 737, 736, 1301, 696,
	695, 694, 686, 685, 684, 653, 645, 1636, 1637, 1638,
	1639, 644, 87, 1282, 1614, 1287, 2667, 1619, 643, 2038,
	627, 1301, 1327, 2307, 3563, 2057, 2054, 1650, 2149, 232,
	231, 1640, 230, 229, 1653, 1631, 1627, 228, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 1613, 2648, 227,
	226, 1635, 1290, 4071, 225, 1641, 1643, 224, 1318, 1465,
	1325, 223, 1331, 222, 1301, 995, 2295, 221, 220, 1311,
	1301, 219, 218, 217, 1301, 1372, 1374, 216, 215, 214,
	1628, 1629, 995, 213, 995, 3370, 3348, 1174, 1301, 1268,
	1273, 1149, 3184, 1332, 995, 2963, 995, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 1377, 1362, 2833, 1634,
	2882, 2874, 2875, 2876, 2877, 2879, 2880, 1321, 680, 1631,
	1627, 2816, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620,
	1621, 2600, 2462, 90, 1445, 1320, 1730, 2442, 1301, 1469,
	2427, 1428, 1729, 1619, 1144, 2305, 2069, 2914, 683, 210,
	1894, 1463, 1310, 1468, 1772, 995, 1309, 1795, 995, 1700,
	1315, 136, 1168, 1477, 1733, 1482, 3974, 2872, 2873, 2915,
	2289, 1452, 1454, 171, 93, 1118, 96, 1610, 1691, 1624,
	1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 210, 3918,
	3778, 212, 3463, 3910, 3733, 2471, 1446, 1484, 1274, 2633,
	210, 1286, 1289, 3728, 1640, 3712, 2872, 2873, 772, 2890,
	2891, 2892, 136, 1730, 1326, 3804, 1419, 1422, 3611, 1729,
	2872, 2873, 1534, 2068, 1635, 3586, 3585, 3547, 1321, 3579,
	212, 3578, 3577, 1155, 163, 163, 1155, 211, 3570, 1431,
	3569, 1728, 212, 1393, 3567, 1611, 1612, 204, 995, 995,
	995, 995, 995, 995, 995, 205, 3415, 3562, 3559, 3558,
	3457, 3374, 1289, 1289, 3373, 1549, 138, 1642, 3372, 3358,
	3325, 1611, 1612, 3324, 1614, 1450, 211, 174, 2887, 995,
	175, 210, 3323, 1535, 969, 995, 204, 210, 211, 3246,
	3242, 3178, 2958, 2907, 205, 2898, 2871, 2868, 204, 2867,
	1614, 1289, 2865, 2860, 1321, 2859, 205, 1613, 2858, 2526,
	2855, 2852, 2872, 2873, 2832, 1582, 174, 1691, 1692, 210,
	1690, 1095, 2815, 212, 2808, 2878, 1588, 1464, 769, 212,
	2680, 2428, 2278, 1613, 210, 1698, 1610, 2014, 1609, 1478,
	940, 1981, 4238, 2872, 2873, 4191, 4190, 938, 3464, 1631,
	1627, 1979, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620,
	1621, 212, 4124, 3913, 2878, 4122, 4113, 1680, 1120, 211,
	3272, 3966, 1489, 3956, 2632, 211, 212, 3953, 2878, 204,
	3952, 3951, 3945, 1506, 2887, 204, 3938, 205, 3906, 995,
	995, 995, 3890, 205, 3889, 995, 2255, 3877, 1536, 3874,
	2912, 3822, 1116, 1619, 1116, 3800, 3776, 211, 210, 174,
	1749, 3464, 3759, 3758, 3740, 174, 3739, 204, 2893, 1181,
	3727, 3704, 211, 3930, 2955, 205, 1585, 995, 3680, 1619,
	674, 3603, 204, 3584, 1829, 674, 1593, 1592, 2320, 918,
	205, 1641, 1643, 3521, 995, 210, 3515, 2647, 1301, 3512,
	212, 3405, 210, 3404, 3391, 3390, 2888, 3340, 3328, 2261,
	1587, 3237, 174, 995, 1678, 1798, 1732, 1589, 917, 1181,
	2878, 3185, 3168, 1758, 1786, 1808, 1803, 1606, 1607, 3126,
	1854, 1615, 1616, 1617, 1618, 1620, 1621, 212, 3067, 3040,
	1790, 3011, 3010, 1155, 212, 1634, 211, 1112, 2982, 1779,
	1892, 2878, 1799, 2837, 2980, 1805, 204, 1755, 1756, 2836,
	2831, 2799, 2612, 1736, 205, 1857, 1735, 1734, 1731, 1724,
	1725, 210, 1858, 1723, 1721, 210, 1611, 1612, 1611, 1612,
	2469, 2468, 2439, 211, 2432, 2399, 174, 3707, 2306, 2303,
	211, 1794, 1750, 204, 1745, 1744, 1743, 1742, 1642, 1741,
	204, 205, 1082, 1740, 1780, 1614, 938, 1614, 205, 1739,
	1738, 1737, 2888, 212, 1718, 2070, 1863, 212, 1801, 163,
	680, 2889, 1717, 174, 1716, 680, 1715, 1714, 1713, 1712,
	174, 1711, 210, 1710, 1709, 1708, 1707, 1883, 1613, 1706,
	1613, 1705, 1704, 2888, 1777, 1114, 1823, 1114, 3011, 1693,
	683, 1679, 1677, 1860, 1672, 683, 1301, 1301, 1143, 211,
	1635, 1133, 1126, 211, 3607, 3555, 1181, 1802, 1748, 204,
	3369, 1856, 3351, 204, 212, 3343, 2819, 205, 2460, 1774,
	2430, 205, 3789, 1826, 1789, 1788, 1787, 1785, 1784, 3609,
	3368, 1783, 1938, 1817, 1905, 1941, 1806, 3656, 1946, 174,
	1692, 1852, 2978, 174, 1675, 2872, 2873, 1809, 4188, 4181,
	2304, 1885, 3954, 1885, 1286, 2876, 2877, 2879, 2880, 1885,
	211, 1165, 1770, 3136, 3864, 3863, 3731, 2889, 1969, 1971,
	204, 938, 3911, 1888, 1619, 1878, 3682, 3681, 205, 3655,
	3606, 3524, 2884, 2885, 2886, 3523, 3522, 1159, 3346, 2883,
	2881, 2882, 2874, 2875, 2876, 2877, 2879, 2880, 2889, 3170,
	174, 3169, 1163, 2545, 1713, 1922, 2874, 2875, 2876, 2877,
	2879, 2880, 1641, 1643, 1713, 1164, 210, 1730, 3869, 3803,
	1772, 3403, 2857, 1729, 2856, 2781, 1967, 1580, 3467, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 1159, 680, 1861,
	2528, 1111, 1950, 1111, 1301, 1160, 1301, 1702, 1301, 1917,
	3111, 1150, 3110, 3043, 2004, 1156, 1514, 4067, 212, 1617,
	1618, 1620, 1621, 2067, 1301, 1301, 1634, 1159, 683, 1505,
	2009, 3860, 1310, 898, 1872, 1301, 1309, 3780, 2089, 4111,
	4096, 4083, 2020, 3095, 2704, 1515, 1965, 1301, 3423, 1301,
	1301, 1301, 1110, 1945, 1110, 2883, 2881, 2882, 2874, 2875,
	2876, 2877, 2879, 2880, 211, 3422, 2015, 1550, 4092, 3408,
	674, 3201, 2088, 899, 204, 2919, 1972, 3274, 2872, 2873,
	2825, 2076, 205, 2286, 2467, 1094, 2883, 2881, 2882, 2874,
	2875, 2876, 2877, 2879, 2880, 1746, 1699, 1726, 3102, 2008,
	1418, 1371, 1304, 1138, 174, 4105, 4102, 3145, 2017, 1683,
	2072, 2568, 3382, 1688, 2028, 3947, 1992, 4149, 2081, 1991,
	3715, 4026, 3935, 2571, 1157, 3014, 2093, 2042, 4093, 1493,
	3398, 2687, 1158, 2644, 3089, 3987, 732, 4148, 3218, 3843,
	3644, 1635, 1393, 1339, 2025, 896, 2025, 2026, 3436, 2022,
	995, 2478, 995, 1349, 4233, 2007, 2992, 894, 892, 995,
	1547, 890, 1829, 1829, 1181, 1305, 995, 995, 995, 995,
	995, 995, 995, 995, 995, 995, 995, 995, 995, 995,
	995, 995, 995, 995, 995, 995, 995, 995, 995, 995,
	995, 995, 995, 995, 995, 995, 995, 995, 995, 995,
	995, 2134, 995, 2166, 995, 995, 995, 995, 3435, 1450,
	680, 1450, 878, 2077, 2153, 1286, 2030, 2031, 1144, 2063,
	2496, 2064, 887, 1156, 1873, 2132, 995, 3836, 733, 995,
	995, 1350, 936, 1165, 2494, 1156, 2878, 995, 2291, 1548,
	683, 995, 3828, 995, 995, 3678, 2190, 2191, 2080, 1546,
	3432, 1181, 3431, 3425, 3421, 3419, 2164, 995, 995, 995,
	995, 2979, 995, 995, 995, 995, 995, 995, 995, 995,
	3379, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 3378, 1621,
	3092, 938, 2164, 938, 1159, 2974, 2111, 1164, 995, 995,
	995, 995, 995, 995, 995, 995, 995, 2830, 1491, 2128,
	2162, 995, 1914, 2496, 2829, 2828, 2177, 2267, 2268, 2827,
	935, 2785, 2578, 1116, 3986, 2577, 2292, 2494, 2573, 2564,
	1181, 2267, 2283, 2067, 1823, 1823, 2162, 2556, 2888, 1116,
	2555, 1165, 1157, 2554, 1910, 2553, 2532, 2150, 2519, 2641,
	1158, 2152, 2151, 2451, 1157, 995, 1181, 2329, 2165, 2158,
	1760, 918, 1158, 2236, 918, 918, 2461, 3042, 1915, 1916,
	1586, 1826, 1826, 3202, 2994, 2160, 2351, 2351, 2365, 2334,
	2267, 1817, 1817, 2385, 2387, 2282, 2333, 2194, 2147, 2391,
	2181, 2415, 1486, 2182, 2183, 1164, 1911, 2085, 2485, 2549,
	1306, 2293, 2290, 2044, 1877, 1876, 2046, 937, 1885, 1887,
	1990, 1383, 2051, 1382, 3657, 2053, 2880, 884, 2407, 2056,
	2542, 2543, 2542, 2543, 1381, 1301, 1380, 1404, 2542, 2543,
	2263, 2163, 1357, 2440, 1779, 3757, 1764, 2443, 2773, 1563,
	2286, 1790, 2518, 1345, 2280, 1559, 2146, 2758, 2530, 2138,
	2104, 4176, 3394, 2889, 651, 1181, 4060, 2163, 2517, 1917,
	1507, 2027, 3209, 2251, 2251, 2429, 2101, 2097, 2295, 4148,
	1545, 2455, 1155, 2406, 2143, 1767, 3640, 2506, 2414, 1082,
	2419, 2872, 2873, 2425, 2426, 1829, 3208, 1579, 735, 734,
	1762, 3811, 3442, 2376, 2360, 2347, 2743, 2161, 1503, 2475,
	2389, 1487, 1159, 1591, 2096, 2397, 2398, 1142, 1765, 2737,
	1515, 2412, 2413, 1181, 1159, 938, 1114, 1880, 2408, 946,
	3057, 2295, 2098, 2161, 938, 1732, 3677, 1301, 938, 1777,
	3420, 3441, 1114, 2418, 163, 4177, 1763, 2570, 3050, 995,
	995, 2525, 995, 1863, 2145, 2991, 2331, 1367, 2105, 3385,
	4089, 2332, 650, 2772, 2335, 2567, 2336, 2337, 2498, 3056,
	2934, 1515, 934, 2565, 2367, 2148, 2476, 2569, 3418, 2535,
	3407, 799, 2470, 3091, 2561, 3061, 2572, 3049, 3263, 792,
	603, 2509, 1724, 1725, 2874, 2875, 2876, 2877, 2879, 2880,
	3630, 1365, 2593, 2550, 2746, 2473, 2474, 3813, 242, 2629,
	3406, 2521, 888, 2616, 873, 598, 2601, 1289, 1492, 2604,
	2534, 2606, 2479, 2533, 888, 888, 938, 2259, 889, 1882,
	1301, 1301, 3626, 1301, 2257, 2289, 2551, 931, 4179, 2655,
	1766, 2592, 2595, 2552, 2597, 1301, 2501, 2585, 2463, 2878,
	2531, 2511, 2514, 2581, 3638, 1530, 1112, 1823, 1112, 2497,
	1301, 2625, 2646, 1289, 1881, 2646, 3756, 2133, 2544, 2546,
	2547, 2548, 1936, 1560, 2709, 2710, 730, 2670, 729, 2529,
	3627, 4185, 1111, 2701, 680, 2716, 2717, 2718, 2675, 888,
	929, 2131, 873, 2495, 1826, 1490, 995, 873, 1111, 1123,
	1908, 2247, 4090, 2669, 1817, 2142, 2796, 1542, 2295, 1920,
	1531, 1935, 780, 2745, 683, 931, 2672, 2705, 1310, 4192,
	931, 874, 2598, 2726, 4202, 2727, 3395, 2724, 2610, 2245,
	4165, 4005, 2676, 1110, 2794, 1121, 2742, 3260, 2686, 1948,
	995, 2888, 2933, 4164, 1274, 2620, 995, 995, 1919, 1110,
	2707, 2449, 2508, 4137, 2711, 2723, 2712, 1403, 3537, 930,
	3536, 1286, 1947, 2734, 2729, 2748, 2731, 2750, 2733, 2650,
	2661, 2657, 2639, 1344, 2664, 2144, 2665, 3142, 2721, 2103,
	652, 1953, 1561, 649, 958, 1347, 1960, 4088, 2728, 3448,
	2730, 3639, 2732, 2677, 1943, 163, 2673, 2751, 3446, 874,
	4178, 995, 995, 2671, 874, 4215, 2688, 995, 1978, 1977,
	2039, 2741, 3261, 2583, 793, 794, 2765, 2766, 1915, 1916,
	995, 995, 2260, 3143, 3948, 2744, 995, 995, 3812, 2481,
	1488, 3962, 995, 1124, 2586, 2582, 2584, 1683, 1450, 1367,
	2993, 995, 995, 995, 2483, 2241, 1944, 995, 3622, 1908,
	2791, 2753, 3623, 2233, 2788, 885, 2889, 995, 2242, 2787,
	2250, 3196, 2243, 1562, 1289, 1289, 2248, 2792, 1900, 1558,
	3189, 2797, 2100, 1901, 995, 2589, 1557, 2484, 2764, 2507,
	1962, 3696, 2755, 2754, 875, 4003, 3025, 766, 3070, 3142,
	1959, 2372, 2818, 3031, 2177, 2759, 2482, 3625, 4183, 3449,
	1917, 800, 4136, 1502, 1504, 1719, 2976, 1939, 1590, 2774,
	2095, 3628, 1141, 2496, 599, 1286, 1908, 1889, 1890, 4004,
	2813, 2814, 4117, 1961, 3533, 2817, 3033, 2512, 4158, 3769,
	4037, 4118, 2295, 3965, 3663, 3024, 1671, 781, 782, 2277,
	995, 995, 995, 2835, 2411, 3753, 4203, 2809, 2424, 995,
	995, 995, 937, 1286, 995, 1286, 3191, 2786, 3276, 4213,
	3706, 3527, 875, 3365, 995, 1116, 1181, 875, 795, 796,
	995, 3190, 995, 2926, 2927, 1136, 3538, 1902, 600, 3220,
	1116, 3032, 2756, 4184, 1518, 2881, 2882, 2874, 2875, 2876,
	2877, 2879, 2880, 3968, 1904, 4087, 4147, 4145, 1181, 3983,
	3876, 3481, 3129, 2231, 1998, 876, 2234, 2824, 1757, 3462,
	1116, 2258, 1134, 1181, 1129, 590, 4186, 1601, 3534, 3582,
	601, 2948, 602, 2180, 3624, 2968, 2244, 1918, 2590, 1829,
	3447, 2793, 2909, 1181, 1874, 2246, 2662, 3448, 3187, 3224,
	2795, 3819, 2666, 3818, 4208, 3798, 3446, 995, 2928, 3934,
	3482, 877, 1871, 3429, 1122, 2230, 1906, 3381, 3697, 3631,
	3314, 995, 4135, 3130, 3122, 3752, 2973, 3006, 3002, 3643,
	2630, 2624, 1956, 1829, 2614, 2936, 3642, 2938, 2021, 2010,
	2003, 928, 1986, 876, 2989, 3969, 3259, 2986, 876, 995,
	1301, 783, 784, 2957, 3329, 1155, 2961, 4015, 2995, 2904,
	2905, 2906, 1600, 938, 3221, 2998, 2999, 4216, 2170, 2937,
	626, 2920, 2040, 2977, 2946, 1954, 2139, 1867, 3484, 2962,
	2949, 2950, 1869, 3015, 2954, 1301, 3019, 1937, 2966, 877,
	2935, 3720, 4116, 3016, 877, 1181, 3021, 3022, 1764, 3192,
	3193, 3194, 3195, 2536, 1301, 2611, 1870, 3449, 2952, 1301,
	2953, 687, 3045, 3539, 1955, 1600, 3001, 3007, 1114, 1907,
	1301, 3037, 3038, 1908, 2947, 3039, 1406, 1301, 3003, 3858,
	1940, 1181, 2513, 1114, 2970, 2971, 2972, 1767, 674, 3754,
	3073, 2403, 3856, 3076, 3583, 3048, 3799, 3081, 3083, 1301,
	3047, 1823, 2409, 3342, 3017, 1599, 3068, 3064, 3065, 1301,
	1179, 3066, 3035, 1114, 1280, 2990, 2232, 3062, 3028, 2996,
	1765, 3058, 3116, 1671, 3444, 1116, 4207, 3315, 3013, 3138,
	2171, 3012, 3059, 3121, 3107, 3316, 1532, 3540, 1826, 2779,
	2757, 3077, 1905, 3196, 2086, 1823, 3084, 3034, 1817, 3096,
	2942, 3036, 3189, 3028, 3641, 2931, 958, 3041, 1599, 2448,
	958, 2405, 2930, 3970, 3052, 2447, 2404, 1301, 1301, 2701,
	3147, 1905, 3028, 2446, 3055, 1265, 3060, 3028, 2701, 1265,
	3063, 3069, 1826, 3090, 2445, 3166, 1389, 3453, 3447, 1301,
	3119, 1519, 1817, 3079, 3053, 3078, 3086, 2618, 3054, 3159,
	3085, 1387, 1601, 3137, 1375, 935, 3093, 1950, 798, 2537,
	2538, 2983, 2984, 1802, 2985, 1950, 3807, 1376, 3100, 2969,
	3203, 3941, 3688, 1181, 1111, 3179, 1181, 1112, 680, 1903,
	2372, 2534, 2019, 3131, 3098, 3139, 2943, 4155, 3191, 1111,
	3854, 1600, 1766, 1112, 3737, 2708, 2596, 1496, 2346, 2342,
	1286, 4018, 4023, 3190, 1595, 3942, 995, 3071, 683, 3164,
	3165, 3796, 995, 995, 3197, 3144, 995, 995, 995, 1111,
	995, 4012, 3589, 2007, 3153, 1110, 3331, 2302, 3215, 995,
	1829, 625, 3160, 3181, 2941, 4041, 688, 689, 995, 3177,
	1110, 995, 1577, 4157, 1900, 4107, 3955, 1181, 3797, 1901,
	3214, 3146, 3156, 2130, 3212, 3736, 995, 2902, 3808, 2945,
	2372, 2372, 1575, 1554, 1181, 3205, 1552, 3206, 1114, 3207,
	1110, 2340, 163, 163, 1829, 1829, 995, 995, 4019, 995,
	995, 995, 3943, 3239, 1599, 3222, 1529, 1527, 2344, 2345,
	2343, 3775, 1525, 3581, 3452, 1523, 1521, 995, 1512, 2901,
	3236, 995, 3211, 1829, 1829, 995, 995, 995, 995, 995,
	995, 995, 995, 995, 995, 995, 995, 995, 995, 995,
	995, 995, 995, 995, 3219, 995, 3199, 3198, 1601, 1510,
	3217, 2987, 995, 995, 1829, 1385, 2866, 1286, 1286, 995,
	2798, 2615, 2563, 2527, 2944, 2472, 2339, 2341, 691, 690,
	995, 3248, 3249, 1902, 1388, 938, 1797, 1793, 2190, 3279,
	1578, 1116, 1116, 1474, 3216, 995, 3244, 1595, 2739, 1386,
	1904, 3192, 3193, 3194, 3195, 2738, 797, 2714, 2159, 2141,
	2372, 2372, 2372, 1541, 3255, 2108, 1983, 2190, 3294, 1855,
	1703, 3271, 1823, 1485, 1181, 1361, 3072, 3278, 3262, 3264,
	3265, 2301, 692, 693, 4082, 3347, 3664, 3286, 3652, 4159,
	4011, 3287, 3718, 3669, 1576, 3291, 1286, 3326, 3322, 3288,
	3615, 3289, 2129, 3480, 1111, 995, 3293, 4133, 3256, 1826,
	3472, 3434, 1906, 3318, 1574, 1553, 1823, 1823, 1551, 1817,
	3401, 995, 995, 3327, 3399, 3380, 3319, 3125, 3120, 3364,
	886, 3112, 2668, 2663, 3333, 2642, 3338, 3339, 1528, 1526,
	2628, 2621, 3375, 3376, 1524, 1823, 1823, 1522, 1520, 2608,
	1511, 995, 995, 1826, 1826, 1110, 1604, 3335, 3336, 2594,
	2060, 2058, 2055, 1817, 1817, 2052, 2047, 2045, 2041, 2032,
	1982, 1980, 1966, 1951, 1760, 1934, 1823, 1921, 995, 1909,
	3134, 1509, 1826, 1826, 1091, 3349, 163, 1384, 3350, 3080,
	3883, 1804, 1817, 1817, 1960, 3155, 4149, 2777, 3157, 3158,
	1301, 3363, 1796, 3161, 3266, 3162, 4051, 3163, 3742, 1092,
	3735, 3734, 3676, 1826, 2702, 1907, 1893, 1341, 1829, 1908,
	3414, 3416, 1924, 1817, 3885, 2516, 3413, 3285, 2496, 3409,
	3492, 2496, 1917, 664, 1114, 1114, 3430, 2099, 3384, 1572,
	1573, 1427, 2494, 2125, 1928, 2515, 1301, 2124, 4050, 2106,
	1764, 3645, 1895, 995, 2018, 1508, 3424, 1605, 1897, 3671,
	1426, 1116, 995, 3920, 3494, 3590, 3568, 1265, 2539, 2520,
	3468, 3451, 891, 893, 895, 3362, 1608, 1611, 1612, 1003,
	1301, 1301, 1301, 2778, 4151, 3440, 4143, 3503, 4112, 1767,
	3439, 3489, 2607, 2534, 1925, 3455, 1301, 1898, 1959, 1611,
	1612, 2655, 3007, 3474, 1762, 3900, 1614, 3507, 2127, 3450,
	1093, 958, 3485, 720, 233, 1181, 3469, 1265, 3475, 763,
	2568, 604, 1765, 240, 240, 240, 1864, 593, 594, 3470,
	609, 593, 609, 619, 624, 2701, 1427, 1181, 642, 1613,
	995, 995, 1427, 648, 3428, 3473, 995, 995, 1829, 240,
	1763, 995, 995, 3519, 995, 3371, 3892, 3488, 995, 587,
	2558, 1613, 3487, 2576, 3486, 3427, 2575, 777, 3893, 995,
	3490, 3496, 3495, 240, 615, 1903, 2522, 4010, 3526, 3978,
	1823, 3975, 2560, 3508, 3509, 995, 3940, 3502, 3872, 1929,
	1111, 1111, 3516, 3510, 3514, 2559, 3894, 2524, 3542, 1975,
	3517, 3550, 3513, 3851, 3471, 3461, 3357, 2975, 3124, 2649,
	2523, 3525, 2390, 1472, 1859, 1810, 4180, 1826, 3805, 3535,
	4206, 2872, 2873, 1289, 4043, 3541, 3530, 1817, 1312, 4044,
	4043, 3560, 3554, 1611, 1612, 4044, 2488, 2489, 2486, 2487,
	3977, 1110, 1110, 1495, 1766, 1116, 2297, 3367, 4161, 1494,
	1930, 1931, 2488, 1116, 1114, 3896, 2486, 1181, 2330, 1181,
	3873, 3837, 1556, 1926, 1265, 1555, 1116, 3672, 3668, 3667,
	2007, 3895, 3556, 3478, 3366, 3267, 3074, 2372, 2372, 1697,
	1696, 1181, 4194, 4166, 593, 593, 3931, 3832, 3897, 1112,
	3790, 3787, 240, 3699, 3608, 3595, 3518, 3498, 1927, 3456,
	3454, 995, 3397, 3392, 1112, 3580, 3154, 3128, 3127, 2736,
	1823, 2720, 2719, 2659, 2634, 2609, 2465, 2464, 3598, 2262,
	2126, 2123, 2122, 3636, 2121, 2120, 2035, 2034, 1181, 2033,
	3612, 3613, 2016, 1993, 1112, 1989, 1181, 1988, 1987, 3587,
	3591, 3594, 3592, 3593, 1985, 1984, 3637, 1826, 3596, 1571,
	1570, 3646, 2961, 3400, 3601, 3402, 3597, 1817, 3602, 3648,
	3649, 1516, 3647, 1301, 1301, 2372, 2372, 2372, 2372, 2372,
	2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372,
	2372, 2372, 2372, 2372, 3673, 2372, 3674, 3605, 3614, 3635,
	1413, 1181, 1412, 3686, 1411, 1410, 1301, 3666, 3675, 1932,
	1409, 1408, 163, 1407, 1405, 1400, 3651, 1399, 1398, 1397,
	1111, 3689, 3660, 3711, 1396, 3433, 1356, 3659, 1355, 3661,
	3684, 1354, 1353, 995, 3683, 1352, 1351, 1346, 1340, 1338,
	3662, 1337, 1172, 1301, 1301, 1301, 3685, 1171, 1114, 1170,
	3698, 1169, 1140, 1139, 1181, 3738, 1114, 1074, 1865, 897,
	3709, 3690, 3716, 883, 3725, 3810, 995, 995, 995, 1114,
	3629, 1110, 3721, 3705, 1565, 3710, 3708, 1933, 84, 1348,
	3741, 2174, 3729, 708, 1181, 78, 1957, 3396, 856, 995,
	4040, 3723, 995, 995, 1334, 3961, 715, 4025, 3023, 2579,
	3500, 2107, 995, 3898, 3501, 1829, 1517, 2193, 3899, 2109,
	995, 995, 2956, 2431, 4002, 3564, 3747, 3745, 3744, 2834,
	3927, 3768, 3749, 3730, 3722, 1181, 2300, 1301, 3755, 1701,
	2913, 80, 979, 1025, 3695, 3694, 3616, 3383, 2691, 3692,
	1181, 3691, 1814, 1816, 945, 1184, 1875, 985, 995, 1112,
	1891, 1884, 3760, 2466, 2350, 995, 1002, 999, 3777, 1818,
	1820, 1001, 1000, 995, 1819, 1829, 1720, 998, 3771, 1813,
	3477, 3476, 1265, 995, 2617, 2653, 995, 1392, 858, 1879,
	2256, 2007, 3783, 3784, 2284, 995, 3765, 2823, 3792, 3782,
	1694, 960, 1181, 981, 2298, 1289, 2281, 1132, 970, 3793,
	959, 2939, 1301, 1301, 1111, 3141, 3356, 3726, 2169, 724,
	3786, 2869, 1111, 3831, 2287, 1125, 3815, 2373, 2366, 2362,
	2368, 3814, 2643, 1581, 1673, 1111, 2654, 1167, 963, 2254,
	1685, 3842, 2803, 3791, 2179, 3148, 3866, 2959, 3857, 1181,
	2459, 4047, 1301, 3275, 3833, 1997, 1090, 1089, 3829, 3821,
	1088, 3839, 4031, 4028, 3511, 1110, 3105, 1868, 3871, 1265,
	995, 995, 2480, 1110, 3834, 3847, 3107, 1823, 3855, 3850,
	1663, 3846, 3113, 3870, 975, 3849, 1110, 1285, 3888, 995,
	995, 3845, 3903, 3904, 3882, 1127, 3844, 3865, 3907, 2441,
	2924, 3180, 3884, 1358, 647, 987, 995, 1829, 3881, 1662,
	3878, 3887, 2588, 2587, 1826, 3901, 3725, 3886, 3879, 3937,
	1154, 1153, 1152, 1137, 1817, 3005, 4214, 3393, 209, 2771,
	1602, 995, 642, 1594, 995, 206, 208, 1823, 1265, 3915,
	207, 3700, 3360, 3944, 2965, 4110, 3411, 3097, 3933, 21,
	20, 19, 105, 995, 40, 240, 18, 240, 240, 1277,
	3925, 240, 240, 1292, 1265, 119, 135, 3916, 3917, 134,
	3880, 3932, 133, 132, 1826, 3950, 131, 240, 137, 1314,
	130, 129, 124, 128, 1817, 127, 126, 3949, 125, 123,
	122, 121, 120, 3964, 995, 995, 118, 117, 2491, 116,
	115, 114, 113, 112, 1343, 995, 111, 3919, 995, 110,
	1301, 109, 108, 3957, 107, 106, 1360, 638, 1292, 635,
	1301, 1301, 240, 240, 57, 1277, 3959, 3980, 56, 104,
	3982, 3972, 3973, 103, 3993, 240, 3971, 1301, 3976, 17,
	38, 14, 61, 1402, 3870, 1112, 1112, 62, 16, 13,
	3963, 995, 995, 33, 3985, 240, 3990, 240, 240, 83,
	1277, 240, 1292, 1265, 95, 94, 3989, 34, 92, 1823,
	91, 3979, 642, 32, 240, 240, 3997, 3991, 3992, 15,
	4022, 89, 4020, 88, 995, 995, 3998, 995, 3999, 31,
	4007, 29, 11, 9, 3996, 4030, 4033, 777, 1293, 8,
	35, 3630, 1781, 12, 5, 168, 1826, 167, 4052, 170,
	166, 654, 4045, 169, 82, 165, 1817, 164, 81, 27,
	4021, 1265, 4035, 10, 160, 4039, 4065, 1286, 3984, 4006,
	3867, 1336, 3466, 3626, 995, 995, 995, 3619, 4049, 4064,
	76, 162, 161, 159, 4066, 4056, 158, 157, 77, 4061,
	4059, 74, 156, 3617, 1368, 4094, 155, 995, 75, 4099,
	154, 3621, 4034, 25, 6, 4038, 240, 4078, 4079, 60,
	4081, 4080, 7, 3750, 4053, 3200, 98, 4054, 99, 36,
	72, 3627, 4097, 240, 71, 70, 24, 4121, 59, 23,
	4119, 197, 196, 195, 194, 193, 192, 1442, 4128, 187,
	3823, 3824, 4130, 4123, 186, 995, 191, 1458, 189, 188,
	190, 4129, 4120, 1289, 4134, 185, 4125, 4126, 4127, 200,
	659, 3620, 199, 4131, 3838, 201, 198, 3840, 3841, 203,
	4150, 184, 2655, 4153, 4142, 4140, 4141, 4146, 182, 4144,
	178, 177, 181, 183, 4152, 4030, 180, 179, 4033, 4156,
	176, 4154, 202, 995, 4160, 995, 152, 4171, 4163, 2761,
	4167, 4173, 153, 4175, 67, 1112, 4174, 4169, 4168, 151,
	150, 1497, 149, 148, 147, 4170, 146, 4172, 145, 2872,
	2873, 66, 2890, 2891, 2892, 4189, 4187, 4049, 4162, 22,
	2, 1, 2372, 0, 667, 0, 0, 0, 0, 1900,
	3546, 0, 0, 4196, 1901, 0, 0, 0, 0, 4198,
	0, 995, 995, 4201, 0, 4195, 0, 0, 661, 995,
	4204, 995, 995, 4200, 4210, 0, 0, 0, 0, 4218,
	0, 0, 0, 0, 4217, 0, 4221, 0, 2372, 2368,
	2368, 0, 0, 0, 0, 4220, 0, 4219, 0, 3622,
	4222, 2887, 4225, 3623, 4230, 4229, 0, 0, 4231, 0,
	0, 4232, 4236, 4235, 4228, 4234, 4227, 754, 4237, 995,
	0, 0, 665, 0, 4240, 0, 0, 4244, 0, 4246,
	593, 0, 0, 4247, 2800, 2801, 4241, 0, 0, 4243,
	0, 738, 0, 0, 0, 0, 3958, 0, 3625, 4211,
	4212, 240, 0, 240, 0, 0, 0, 240, 1902, 0,
	0, 0, 3628, 0, 0, 0, 0, 0, 0, 0,
	1314, 1277, 240, 0, 240, 1904, 0, 656, 739, 240,
	1314, 609, 0, 0, 240, 1314, 0, 2878, 0, 740,
	0, 642, 0, 0, 0, 0, 0, 4242, 0, 1112,
	660, 0, 1611, 1612, 0, 0, 0, 1112, 741, 2368,
	2368, 2368, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 1642, 0, 760, 0, 0, 666,
	0, 1614, 0, 0, 0, 0, 2372, 1906, 0, 0,
	0, 2893, 663, 1611, 1612, 742, 0, 0, 658, 2925,
	0, 0, 0, 0, 2895, 2896, 2897, 0, 0, 0,
	0, 0, 0, 0, 1613, 1642, 0, 0, 743, 0,
	0, 0, 1614, 0, 1633, 3624, 0, 0, 0, 2888,
	0, 2951, 1630, 0, 0, 0, 0, 0, 744, 655,
	0, 745, 0, 0, 0, 0, 2964, 0, 0, 0,
	667, 0, 0, 0, 0, 1613, 0, 0, 0, 0,
	3631, 0, 0, 0, 1265, 662, 2981, 0, 0, 0,
	0, 0, 0, 0, 759, 0, 0, 0, 668, 0,
	3230, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	1907, 0, 0, 4109, 1908, 0, 1265, 0, 0, 0,
	1636, 1637, 1638, 1639, 240, 0, 0, 240, 0, 0,
	1619, 1265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 756, 0,
	0, 1265, 0, 2997, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2889, 958, 0, 0, 1641, 1643,
	0, 1619, 0, 0, 0, 0, 0, 240, 0, 958,
	0, 240, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 240, 0, 1628, 1629, 0, 0, 0, 0, 0,
	747, 0, 0, 0, 240, 0, 240, 0, 240, 1641,
	1643, 0, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 1634, 748, 2964, 0, 2036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 1265, 0, 666, 0, 0, 0, 0,
	0, 0, 749, 1634, 0, 0, 764, 765, 762, 0,
	1903, 0, 0, 0, 757, 0, 642, 750, 0, 0,
	777, 0, 0, 0, 0, 2884, 2885, 2886, 0, 1265,
	0, 0, 2883, 2881, 2882, 2874, 2875, 2876, 2877, 2879,
	2880, 0, 0, 0, 0, 240, 0, 1277, 240, 0,
	0, 0, 0, 0, 751, 758, 0, 1640, 0, 0,
	0, 0, 642, 752, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 753, 1635, 0, 240,
	240, 761, 240, 0, 240, 0, 240, 0, 240, 0,
	0, 0, 0, 0, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 755, 1280, 0, 2135, 1179,
	0, 2136, 0, 2137, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2368, 2368, 0, 0,
	0, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	642, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1442, 2078, 0,
	0, 1265, 0, 0, 1265, 0, 0, 0, 2079, 0,
	3252, 3232, 3233, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 2090, 2091, 2092, 0, 0, 3268, 0, 0,
	0, 0, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2368, 2368, 2368, 2368, 2368, 2368,
	2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368,
	2368, 2368, 2368, 0, 2368, 1265, 0, 0, 0, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 0,
	0, 0, 1265, 0, 0, 0, 0, 0, 0, 3295,
	3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305,
	3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 0, 3317,
	0, 1611, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 0, 0,
	0, 0, 0, 1642, 0, 0, 0, 0, 0, 0,
	1614, 0, 240, 0, 0, 0, 0, 3359, 0, 0,
	0, 593, 2872, 2873, 0, 2890, 2891, 2892, 240, 0,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1633, 0, 0, 0, 240, 0, 0,
	0, 1630, 0, 1611, 1612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1265, 0, 0, 1642, 0, 0, 0, 0,
	0, 0, 1614, 0, 2887, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 609, 240, 0, 0, 3229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 68, 0, 0, 1636,
	1637, 1638, 1639, 0, 0, 1633, 0, 0, 0, 1619,
	0, 0, 69, 1630, 0, 0, 0, 0, 0, 0,
	2505, 0, 0, 0, 0, 0, 0, 0, 73, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 1759, 0, 1641, 1643, 0,
	2878, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 2789, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 240, 1628, 1629, 0, 0, 0, 0, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 0, 0, 0,
	0, 1619, 0, 240, 2599, 0, 0, 0, 0, 0,
	85, 1634, 0, 0, 2893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 1314, 86,
	97, 240, 0, 0, 0, 0, 0, 0, 240, 1641,
	1643, 0, 0, 0, 0, 0, 0, 2638, 0, 0,
	0, 0, 2888, 0, 0, 0, 0, 2505, 0, 593,
	0, 0, 2658, 0, 1628, 1629, 0, 0, 240, 0,
	0, 240, 0, 0, 0, 240, 0, 240, 87, 0,
	0, 0, 1277, 0, 240, 240, 0, 1292, 1292, 0,
	0, 0, 0, 1634, 0, 0, 0, 2684, 777, 0,
	2505, 2505, 0, 1265, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1265, 1635, 0, 0, 0,
	2591, 944, 0, 240, 1277, 240, 0, 0, 1314, 0,
	1314, 0, 0, 1277, 0, 1277, 0, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 1612, 0, 0, 2889, 0, 0,
	0, 0, 240, 240, 240, 240, 1277, 240, 0, 240,
	0, 0, 3600, 0, 0, 1642, 0, 0, 1640, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 0, 3610, 0, 0, 0, 1635, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 2674, 1442, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 171,
	93, 0, 96, 1630, 0, 1265, 0, 1265, 0, 0,
	0, 1631, 1627, 2715, 1624, 1622, 1623, 1615, 1616, 1617,
	1618, 1620, 1621, 0, 0, 0, 210, 0, 0, 1265,
	0, 0, 0, 0, 772, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2884, 2885,
	2886, 2782, 0, 0, 0, 2883, 2881, 2882, 2874, 2875,
	2876, 2877, 2879, 2880, 0, 0, 0, 1314, 212, 0,
	0, 1636, 1637, 1638, 1639, 0, 1265, 0, 0, 0,
	0, 1619, 0, 0, 1265, 0, 0, 0, 0, 0,
	0, 0, 138, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 175, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 0, 0, 0, 1641,
	1643, 0, 0, 0, 204, 0, 0, 1179, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 1265,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 3766, 0, 0,
	0, 2368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 1265, 0, 0, 0, 0, 0, 3766, 240,
	0, 0, 0, 0, 593, 0, 3774, 2368, 0, 593,
	0, 0, 593, 2193, 0, 593, 593, 0, 0, 0,
	0, 593, 1265, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1314, 1265, 0, 2193, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1265, 0,
	0, 0, 0, 2505, 2505, 240, 0, 1292, 1635, 0,
	2505, 0, 0, 3009, 0, 0, 0, 0, 0, 0,
	0, 2505, 3009, 0, 2505, 3009, 3009, 0, 0, 0,
	0, 0, 0, 0, 958, 0, 0, 0, 0, 240,
	240, 1292, 240, 0, 0, 0, 0, 0, 0, 0,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 240, 0, 0, 1277, 0, 0, 0,
	0, 0, 0, 944, 0, 2368, 0, 944, 2505, 68,
	3075, 2505, 1292, 0, 0, 2505, 2505, 1292, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 1265, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 240, 3101, 0,
	3924, 3103, 2505, 0, 1316, 240, 1322, 0, 1328, 240,
	0, 1292, 0, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 79, 2638,
	0, 0, 1277, 0, 240, 0, 0, 2505, 0, 593,
	0, 0, 0, 0, 0, 0, 2505, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 240, 240, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 0,
	1443, 0, 86, 97, 240, 2638, 0, 0, 2638, 0,
	0, 0, 0, 0, 0, 0, 0, 1461, 0, 1466,
	2872, 2873, 0, 2890, 2891, 2892, 0, 0, 0, 1475,
	0, 1480, 0, 3087, 0, 0, 0, 0, 0, 68,
	0, 3241, 958, 958, 2872, 2873, 0, 2890, 2891, 2892,
	3210, 87, 0, 1277, 240, 69, 240, 0, 0, 0,
	0, 0, 3117, 0, 0, 3240, 0, 0, 0, 0,
	0, 73, 3123, 0, 0, 0, 0, 0, 1611, 1612,
	0, 1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 240,
	1537, 0, 2887, 1543, 0, 0, 0, 0, 0, 1647,
	1642, 0, 0, 0, 0, 0, 0, 1614, 79, 0,
	0, 0, 0, 0, 0, 1660, 2887, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3172, 3173, 0, 958, 0, 0, 0, 1611, 1612, 0,
	1613, 0, 0, 85, 0, 3273, 0, 0, 0, 0,
	1633, 0, 2456, 0, 0, 0, 0, 100, 1630, 1642,
	0, 0, 86, 97, 0, 0, 1614, 0, 0, 0,
	0, 0, 90, 0, 0, 0, 0, 0, 2878, 0,
	0, 0, 0, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 2878, 0, 0, 0, 0, 0, 0, 1633,
	0, 87, 171, 93, 1682, 96, 0, 1630, 0, 0,
	1695, 0, 0, 0, 0, 0, 1636, 1637, 1638, 1639,
	0, 0, 2893, 0, 0, 0, 1619, 0, 0, 210,
	240, 240, 0, 0, 0, 0, 0, 772, 0, 0,
	0, 136, 0, 0, 0, 0, 2893, 0, 0, 0,
	0, 0, 593, 593, 0, 1651, 0, 0, 1661, 0,
	2888, 0, 0, 0, 1641, 1643, 0, 0, 0, 0,
	0, 212, 0, 0, 1314, 1636, 1637, 1638, 1639, 0,
	1657, 0, 1658, 0, 2888, 1619, 0, 1314, 1314, 1628,
	1629, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 175,
	0, 0, 0, 0, 1753, 1753, 1753, 211, 1634, 0,
	0, 0, 90, 1641, 1643, 0, 0, 204, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 642, 0, 1659, 0, 0, 0, 1628, 1629,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 1648, 171, 93, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 2889, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 944, 210,
	0, 1292, 240, 0, 0, 0, 0, 772, 0, 2889,
	0, 136, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 1640, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 240, 0, 0, 0, 240,
	0, 212, 0, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2505,
	240, 0, 0, 0, 0, 138, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 0, 0, 2684, 2684, 175,
	0, 0, 1640, 777, 777, 2505, 0, 211, 2638, 2638,
	0, 0, 777, 2505, 0, 0, 0, 204, 0, 0,
	0, 0, 1635, 0, 0, 205, 2884, 2885, 2886, 0,
	0, 0, 240, 2883, 2881, 2882, 2874, 2875, 2876, 2877,
	2879, 2880, 0, 0, 0, 0, 0, 1455, 0, 0,
	2884, 2885, 2886, 3437, 0, 0, 0, 2883, 2881, 2882,
	2874, 2875, 2876, 2877, 2879, 2880, 0, 2872, 2873, 0,
	2890, 2891, 2892, 0, 0, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 1625, 1626, 1632, 1653, 1631, 1627,
	0, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621,
	0, 0, 3565, 0, 3573, 0, 0, 0, 3572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3504, 3505, 3506, 0, 0, 0, 2887,
	0, 0, 0, 0, 0, 0, 0, 1631, 1627, 1442,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	1314, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2505, 2505,
	2505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1314, 0, 0, 0, 2878, 0, 0, 0, 2505,
	0, 3009, 0, 0, 1314, 1314, 240, 1292, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 1292, 240,
	1292, 240, 0, 0, 0, 0, 0, 2894, 0, 0,
	0, 69, 2505, 0, 2505, 240, 2872, 2873, 0, 2890,
	2891, 2892, 0, 0, 0, 0, 0, 73, 0, 2893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2505,
	0, 0, 0, 0, 3702, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 79, 0, 0, 2888, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2887, 0,
	0, 0, 0, 0, 0, 1314, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 2168, 0, 2172, 0, 0,
	0, 0, 0, 100, 2186, 0, 0, 0, 86, 97,
	0, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 0, 2235, 0, 2237,
	2238, 2239, 2240, 0, 0, 0, 1442, 87, 0, 0,
	0, 0, 0, 0, 2878, 0, 0, 0, 0, 0,
	0, 2264, 2889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 0, 0, 2505, 2279, 3009, 0, 0,
	3795, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 2309, 2312, 2315, 2318, 0, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 3746, 0, 3748, 0,
	0, 0, 0, 1277, 0, 2364, 0, 2375, 2377, 2382,
	0, 0, 0, 0, 0, 0, 0, 1292, 240, 0,
	0, 0, 0, 0, 0, 0, 2888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3795, 0, 0, 0,
	0, 0, 0, 0, 2505, 0, 0, 0, 90, 0,
	0, 0, 0, 0, 0, 3875, 0, 0, 0, 0,
	0, 0, 0, 2884, 2885, 2886, 0, 1314, 0, 0,
	2883, 2881, 2882, 2874, 2875, 2876, 2877, 2879, 2880, 0,
	3788, 0, 0, 0, 0, 0, 0, 0, 171, 93,
	0, 96, 0, 0, 0, 0, 240, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	3273, 0, 0, 772, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 3795, 0, 0, 0,
	0, 2889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3848, 0, 212, 0, 0,
	0, 1004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	0, 0, 3702, 211, 0, 241, 241, 241, 0, 0,
	0, 0, 0, 204, 0, 0, 240, 0, 0, 0,
	0, 205, 0, 0, 0, 3009, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1453, 2602, 2603, 0, 2605, 0, 0,
	0, 1314, 0, 1314, 0, 241, 0, 698, 0, 0,
	0, 0, 2884, 2885, 2886, 0, 0, 0, 0, 2883,
	2881, 2882, 2874, 2875, 2876, 2877, 2879, 2880, 4016, 0,
	0, 699, 0, 0, 0, 1314, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 2505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 700, 0,
	717, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 702, 3273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1442, 1442, 0, 725, 0, 0, 0,
	0, 0, 703, 0, 0, 0, 0, 0, 0, 0,
	1442, 0, 0, 0, 0, 723, 0, 0, 0, 0,
	0, 2735, 0, 0, 0, 0, 0, 0, 0, 0,
	2505, 0, 0, 0, 0, 0, 0, 0, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3795, 0, 0, 0, 0, 0, 705, 0,
	0, 706, 0, 0, 0, 0, 727, 0, 0, 0,
	667, 1664, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1314, 0, 2505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 0, 0, 2783, 2784, 0, 0,
	0, 0, 2790, 1647, 1642, 0, 0, 0, 0, 726,
	0, 1614, 0, 235, 235, 589, 0, 0, 721, 1660,
	0, 2804, 2805, 0, 0, 0, 0, 2279, 0, 0,
	0, 0, 0, 0, 0, 0, 2812, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 2826, 2684, 1633, 0, 0, 0, 0, 707,
	0, 0, 1630, 0, 0, 0, 2684, 0, 0, 2838,
	709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	1636, 1637, 1638, 1639, 0, 0, 697, 0, 718, 0,
	1619, 0, 0, 0, 2382, 2382, 2382, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 2929, 0, 1651,
	716, 0, 1661, 0, 0, 0, 0, 0, 1641, 1643,
	0, 0, 0, 0, 712, 0, 0, 730, 0, 729,
	0, 0, 0, 713, 1657, 0, 1658, 0, 0, 0,
	0, 0, 0, 1628, 1629, 0, 714, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 731, 0, 728, 0,
	0, 1649, 0, 0, 668, 0, 0, 0, 0, 0,
	0, 144, 1634, 0, 0, 0, 0, 0, 68, 0,
	44, 43, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 944, 139, 1659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 1648, 0, 0, 0, 0,
	63, 0, 0, 0, 3026, 0, 0, 46, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 1185, 241,
	241, 0, 1185, 241, 241, 0, 1185, 1640, 0, 48,
	64, 0, 0, 0, 0, 0, 0, 49, 0, 241,
	0, 0, 85, 0, 0, 0, 142, 1635, 0, 0,
	0, 0, 0, 0, 47, 0, 100, 0, 0, 1185,
	0, 86, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1185, 0, 241, 241, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 241, 0, 241,
	241, 0, 0, 241, 0, 1185, 0, 0, 0, 0,
	0, 1185, 0, 0, 0, 1185, 241, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 0, 2847, 0,
	0, 0, 2848, 0, 0, 0, 0, 0, 0, 1185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2186, 51, 0, 0, 241, 0, 3227, 3228, 0,
	0, 3231, 0, 0, 0, 3234, 0, 0, 0, 55,
	0, 0, 0, 0, 3238, 65, 0, 0, 0, 0,
	54, 171, 93, 3245, 96, 0, 2929, 0, 52, 0,
	0, 0, 143, 0, 0, 0, 0, 0, 0, 53,
	0, 3257, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 58, 0, 0, 0,
	136, 3280, 3281, 0, 3282, 3283, 3284, 0, 0, 0,
	0, 0, 0, 0, 140, 1176, 0, 0, 0, 0,
	0, 1284, 3290, 0, 0, 0, 3292, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 3320, 3321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 0, 0, 3332, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	3341, 0, 0, 0, 205, 1394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1417, 174, 1417, 1417, 3,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1459, 1460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3377, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 3386, 3389, 0, 0,
	1185, 0, 0, 0, 241, 241, 241, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3410, 0, 1185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1185, 0, 0, 0, 0, 0, 1564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 3497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 1185, 1185, 241,
	0, 0, 0, 0, 0, 0, 0, 1185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3543, 3544, 0, 0, 0,
	0, 3548, 3549, 0, 0, 0, 3552, 3553, 0, 0,
	0, 0, 0, 3557, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 241, 3561, 0, 0, 241, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	3566, 0, 0, 0, 0, 0, 241, 0, 241, 0,
	241, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1642, 0, 0, 1791, 0, 0,
	241, 1614, 0, 0, 0, 0, 0, 241, 0, 1660,
	0, 0, 1800, 0, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 1185, 0, 1185, 0, 1185,
	0, 0, 0, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 1185, 1185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1185, 241, 0, 0,
	241, 0, 0, 0, 0, 0, 3389, 0, 1185, 0,
	1185, 1185, 1185, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 991, 0, 0, 0, 0, 0,
	0, 241, 241, 0, 241, 0, 241, 0, 241, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 1637, 1638, 1639, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 239, 239,
	239, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 1661, 0, 681, 0, 0, 0, 1641, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 0, 1658, 0, 681, 0,
	0, 0, 0, 1628, 1629, 1185, 0, 0, 3389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 3761, 3762, 3763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 1659, 0,
	0, 2002, 0, 0, 2186, 0, 0, 3772, 3773, 0,
	0, 2013, 0, 0, 0, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 3781, 2024, 0, 2024, 0,
	0, 0, 1185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1113, 1417, 0,
	0, 0, 0, 0, 0, 1284, 0, 1640, 0, 0,
	3389, 0, 0, 0, 0, 0, 0, 0, 3820, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 3827, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 0, 0,
	3835, 1185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 2002, 0, 1185, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2112, 0, 2114, 0, 2116, 0, 2118, 0, 2119, 0,
	0, 0, 0, 0, 0, 3389, 3389, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 1185, 0, 0, 0,
	0, 0, 0, 0, 1650, 2140, 0, 0, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 1185, 0, 2275, 0,
	0, 0, 2276, 0, 0, 0, 3936, 0, 0, 3939,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 3389, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 1185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1185, 944,
	944, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	3389, 0, 0, 3389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 0, 0, 0, 0, 2186, 0, 0,
	0, 0, 0, 0, 0, 1642, 0, 0, 0, 0,
	241, 0, 1614, 241, 0, 0, 0, 241, 0, 241,
	1660, 0, 0, 0, 0, 0, 241, 241, 0, 0,
	944, 1185, 1185, 0, 1185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 1185, 0, 980, 102,
	0, 0, 0, 0, 0, 1633, 0, 241, 0, 0,
	0, 1185, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 2438, 0, 0, 241, 0, 241, 0, 4077,
	4077, 4077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4098, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 241, 241, 241, 0, 241,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 1637, 1638, 1639, 102, 2013, 0, 0, 0,
	239, 1619, 239, 239, 0, 0, 239, 239, 0, 0,
	4077, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 681, 0, 0, 0, 0, 0, 0, 0,
	1651, 0, 0, 1661, 0, 0, 0, 0, 0, 1641,
	1643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3389, 0,
	3389, 0, 0, 0, 1628, 1629, 0, 239, 239, 0,
	0, 0, 919, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 1649, 939, 0, 0, 0, 0, 0, 0,
	0, 1284, 0, 1634, 0, 0, 0, 0, 0, 0,
	239, 0, 239, 239, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4077, 4205, 0, 239,
	239, 1100, 0, 0, 4209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 0, 0, 0, 0, 0, 0, 2013, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2660, 0,
	0, 1417, 0, 0, 0, 1417, 0, 1417, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2713, 0, 1185, 239, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2722, 0, 2725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1185, 0, 0, 0, 0, 0,
	0, 0, 2747, 1284, 2749, 1284, 0, 2752, 0, 0,
	0, 0, 0, 0, 1185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1417, 0, 0, 0, 0, 1650, 0, 241, 2780, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 0,
	0, 1185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 241, 0, 241, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 1185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1185, 0, 0, 0,
	0, 0, 0, 0, 0, 1185, 0, 0, 0, 0,
	1185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1185, 0, 0, 0, 0, 241, 0, 1185, 0,
	0, 0, 1185, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 1775, 241, 1113, 0,
	1185, 241, 239, 0, 0, 0, 0, 0, 0, 0,
	1185, 0, 0, 0, 0, 0, 0, 239, 1775, 239,
	0, 0, 0, 0, 681, 0, 0, 0, 0, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 241,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1185, 1185,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1185, 0, 241, 1185, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	102, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3000, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1185, 239,
	0, 0, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1185, 0, 0, 0, 3044,
	3046, 0, 2013, 0, 102, 0, 0, 0, 939, 102,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 102, 0, 102, 239, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 239, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3114, 0, 0, 0, 3118,
	0, 0, 102, 239, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1185, 0, 0, 0, 0,
	0, 0, 0, 1417, 0, 0, 0, 1284, 1284, 0,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 239, 3176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	919, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 239, 0, 239, 0, 239,
	1676, 239, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3213, 0, 1284, 1681, 0, 0,
	0, 1687, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 3225,
	0, 1185, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 241, 0, 0,
	0, 241, 0, 0, 0, 673, 0, 1185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1185, 1185, 1185, 0, 0, 0, 0, 0, 0,
	1773, 0, 1776, 0, 102, 0, 0, 1185, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 1185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1185, 0,
	1185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 239, 1185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2013, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 2013, 0, 0, 0, 0, 0, 0, 1185,
	0, 241, 3465, 241, 239, 0, 0, 1185, 0, 0,
	0, 0, 0, 0, 0, 2013, 239, 241, 0, 3479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 1185, 1185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 1185, 241, 0, 0, 0, 1185, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3528, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 239, 1185, 1185, 1185, 0, 0, 0,
	0, 0, 939, 0, 939, 1185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 239, 0, 0, 0,
	239, 0, 239, 0, 0, 1185, 0, 0, 0, 239,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 1185, 0, 1185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	239, 1185, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 1117, 0, 0,
	0, 1117, 0, 0, 0, 1117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 239, 239,
	239, 0, 239, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 1185, 0, 0, 0, 0, 1117, 996,
	241, 0, 919, 1185, 1185, 919, 919, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 1117, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3650, 0, 0, 0,
	1185, 0, 1182, 1185, 0, 0, 1182, 0, 0, 2013,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2253, 0, 0, 0, 1117, 0, 0, 0, 0, 0,
	1117, 0, 0, 0, 1117, 0, 939, 0, 241, 241,
	0, 0, 0, 1302, 0, 1681, 0, 0, 1117, 1681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2013, 0, 0, 0, 1302, 0, 0, 0,
	0, 3717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	0, 0, 0, 0, 0, 1302, 0, 0, 0, 1302,
	0, 1100, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 1185, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 1185, 1185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 0, 0, 0, 1185, 1113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 2013, 0,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 1611, 1612, 0, 1644, 1645, 1646,
	1654, 1655, 1656, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 1642, 0, 0, 0,
	0, 0, 0, 1614, 239, 239, 0, 239, 0, 0,
	0, 1660, 0, 0, 1775, 0, 102, 0, 0, 102,
	0, 102, 0, 0, 0, 0, 3914, 1284, 239, 0,
	0, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	0, 0, 1117, 0, 1117, 0, 1633, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 1117,
	0, 0, 102, 0, 0, 102, 0, 0, 0, 239,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 681, 0, 0, 0, 0, 0, 1117, 0,
	239, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 1117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1113,
	0, 0, 1636, 1637, 1638, 1639, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 239, 239, 1182, 0, 3981, 0, 0, 0,
	0, 0, 0, 0, 0, 673, 0, 0, 0, 0,
	673, 1651, 0, 102, 1661, 0, 0, 0, 0, 239,
	1641, 1643, 0, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 1658, 0,
	0, 0, 0, 0, 1182, 1628, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 4024, 239,
	0, 239, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1117, 1117, 0, 0,
	1659, 0, 0, 4058, 239, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 2253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1681, 0, 1183, 0, 0, 0,
	1183, 0, 0, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1302, 1302, 0, 0, 0, 0, 1303, 0, 1635,
	0, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 1652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1117, 0, 1117, 0, 1117, 0,
	0, 0, 0, 1303, 0, 1113, 1113, 0, 0, 1303,
	0, 0, 0, 1303, 1117, 1117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1117, 0, 1303, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 1117, 0, 1117,
	1117, 1117, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 1650, 0, 0, 0,
	1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 0, 1303, 0, 1302,
	0, 1302, 0, 1302, 3571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 0, 1302, 1302, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 673, 0, 0, 239, 0,
	0, 0, 1830, 1830, 1117, 0, 0, 0, 0, 0,
	0, 102, 102, 0, 0, 102, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 102, 102, 0,
	239, 102, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1182,
	0, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 1100, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 0,
	1117, 0, 0, 0, 0, 0, 0, 102, 102, 1117,
	0, 0, 0, 0, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 1612, 0,
	1644, 1645, 1646, 1654, 1655, 1656, 0, 1303, 0, 0,
	0, 0, 0, 0, 0, 1182, 0, 0, 1647, 1642,
	0, 0, 0, 0, 0, 1117, 1614, 0, 1183, 1113,
	0, 0, 0, 0, 1660, 0, 0, 1113, 0, 0,
	0, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 1117, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 0, 0, 1117, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 1636, 1637, 1638, 1639, 0,
	0, 0, 0, 0, 0, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 1303, 239, 0, 0,
	0, 102, 0, 0, 0, 1183, 239, 0, 0, 0,
	0, 0, 0, 0, 1651, 0, 0, 1661, 0, 1100,
	1100, 0, 0, 1641, 1643, 0, 0, 0, 1182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 1658, 1302, 0, 0, 0, 0, 0, 1628, 1629,
	1117, 1117, 0, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1117, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	1117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 1302, 0, 1302, 0,
	0, 0, 0, 1303, 0, 1303, 0, 1303, 0, 0,
	1302, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 1303, 1302, 0, 0, 0, 0,
	0, 0, 1640, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 0, 1303, 1303,
	1303, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 1652, 0, 0,
	0, 0, 0, 0, 0, 1611, 1612, 0, 1644, 1645,
	1646, 1654, 1655, 1656, 0, 0, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 1647, 1642, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 239, 0, 0, 0, 0, 1613, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 0, 0,
	0, 0, 0, 1183, 0, 1630, 0, 0, 0, 1650,
	0, 0, 0, 1625, 1626, 1632, 1653, 1631, 1627, 0,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 3243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 1636, 1637, 1638, 1639, 0, 0, 0,
	0, 0, 0, 1619, 0, 1117, 1117, 0, 0, 0,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1117, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1661, 0, 102, 1117, 0,
	0, 1641, 1643, 1100, 0, 0, 0, 0, 0, 0,
	1117, 1100, 0, 1117, 0, 0, 0, 1657, 0, 1658,
	0, 0, 0, 0, 0, 0, 1628, 1629, 0, 1830,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 1649, 0, 0, 0, 0, 0,
	0, 1182, 0, 239, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	239, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 1182, 0, 0, 0, 0, 239, 0,
	1117, 0, 0, 0, 0, 0, 0, 0, 1182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1182, 0,
	0, 0, 0, 0, 0, 1117, 0, 0, 0, 0,
	102, 0, 0, 0, 1303, 1117, 0, 0, 0, 0,
	102, 0, 0, 0, 1117, 0, 0, 0, 0, 1117,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1117, 0, 102, 0, 1183, 0, 0, 1117, 0, 0,
	1635, 1117, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1117,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 1117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 0, 0, 0, 0, 1117, 0, 0, 0, 0,
	1182, 0, 1183, 0, 0, 0, 0, 0, 0, 1302,
	0, 0, 0, 0, 1302, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 1302, 0, 0, 0, 1182, 1117, 1117, 0,
	0, 0, 0, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 1117,
	0, 0, 0, 0, 1302, 0, 0, 1650, 0, 0,
	0, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	1303, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 1302, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1182, 0,
	2253, 1182, 0, 0, 1117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 1830, 0, 0, 0, 0, 1611,
	1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1642, 1182, 0, 1830, 0, 0, 0, 1614, 0,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1117, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 1633, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 1117, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 1637, 1638,
	1639, 0, 0, 0, 0, 0, 0, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1651, 0, 0, 1661,
	0, 0, 0, 0, 102, 1641, 1643, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1117, 1657, 0, 1658, 0, 1183, 0, 0, 0, 0,
	1628, 1629, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1649, 0,
	0, 0, 0, 0, 0, 0, 0, 1183, 0, 1634,
	0, 0, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 1117, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 0, 1183, 0, 0, 0, 0, 0, 0, 0,
	1117, 1117, 1117, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 1302, 0, 0, 1640, 0, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1303, 1302, 1302, 1302, 0, 0,
	0, 0, 0, 0, 1183, 0, 0, 0, 0, 1652,
	0, 1302, 0, 1303, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	1182, 0, 0, 0, 0, 0, 1303, 0, 0, 0,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1182, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 1117, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 1117, 0, 1117,
	0, 0, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653, 1631,
	1627, 1117, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620,
	1621, 0, 0, 0, 0, 0, 1303, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 1182, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 1117, 1117, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1117, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1182, 0, 0, 0, 0, 0, 0,
	0, 1182, 0, 0, 0, 0, 1183, 0, 0, 0,
	0, 0, 0, 1117, 1117, 1117, 0, 0, 0, 0,
	0, 0, 0, 1183, 1117, 0, 0, 0, 1302, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1117, 0, 1182, 0, 0, 0,
	0, 1302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1117, 0, 1117, 1302, 1302,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 1182,
	1117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1183, 0, 0, 0, 0, 0, 0,
	0, 0, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1117, 1117, 0, 0, 0, 0, 0, 0,
	1182, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1117,
	0, 0, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 1182, 0, 0, 1302, 0, 0,
	0, 0, 0, 1647, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 0, 0, 0, 0, 1303,
	1303, 1303, 1630, 0, 0, 0, 0, 0, 0, 0,
	1117, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	1117, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1183, 0, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 1637, 1638, 1639, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 1302, 0, 0, 1651,
	0, 0, 1661, 0, 0, 0, 0, 0, 1641, 1643,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 0, 1658, 0, 0, 0,
	0, 0, 0, 1628, 1629, 0, 0, 0, 1611, 1612,
	0, 1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 0,
	0, 1649, 0, 0, 0, 0, 0, 0, 0, 1647,
	1642, 0, 1634, 0, 0, 0, 1183, 1614, 1183, 0,
	0, 0, 0, 0, 0, 1660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 1648, 0, 0, 0, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1183, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1303, 1303, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 1637, 1638, 1639,
	0, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	1183, 0, 1652, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1651, 0, 0, 1661, 0,
	0, 0, 0, 0, 1641, 1643, 0, 0, 0, 0,
	0, 0, 1303, 1303, 1303, 0, 0, 0, 0, 0,
	1657, 0, 1658, 1183, 0, 0, 0, 0, 0, 1628,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 0,
	0, 0, 0, 1183, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 1659, 0, 0, 0, 0, 0,
	0, 0, 2850, 0, 1183, 0, 1303, 0, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1303, 1303, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1183, 0,
	0, 1303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 1625, 1626, 1632, 1653, 1631, 1627,
	0, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621,
	0, 0, 0, 0, 0, 0, 0, 0, 2849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1180, 0, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	1303, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	1186, 255, 256, 1187, 1188, 1189, 1303, 1190, 535, 1191,
	1192, 1193, 1194, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 1195, 540,
	267, 268, 269, 270, 271, 1196, 1197, 0, 272, 541,
	542, 543, 1198, 273, 274, 544, 1199, 1266, 1200, 275,
	276, 277, 278, 279, 280, 281, 0, 1201, 283, 284,
	285, 282, 1202, 286, 0, 287, 288, 289, 290, 291,
	1203, 292, 1058, 293, 294, 1204, 1205, 1207, 1206, 1208,
	1209, 1210, 295, 296, 297, 298, 0, 299, 545, 546,
	1211, 303, 300, 301, 1212, 304, 302, 1213, 305, 306,
	307, 1214, 1215, 308, 309, 310, 1216, 311, 312, 1217,
	313, 314, 315, 1218, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 1219,
	246, 1220, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 1221, 333, 1222, 1223, 1059, 334,
	335, 551, 552, 336, 337, 1224, 338, 553, 1225, 554,
	339, 1226, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 1061, 345, 346, 1227, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 1228, 1060, 353, 558,
	559, 1229, 560, 1230, 355, 356, 1062, 561, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 1231, 367, 369, 368, 1232, 370, 562,
	1065, 371, 372, 1066, 1233, 373, 374, 375, 1234, 1235,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 1236, 248,
	1069, 400, 1237, 563, 401, 564, 403, 404, 1238, 0,
	405, 0, 1239, 1240, 407, 408, 409, 1241, 1242, 410,
	411, 565, 1070, 412, 1071, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 1243, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 1244, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 1245, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 1246, 449,
	450, 451, 1072, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 1247, 472, 473, 471, 474, 475, 476, 1248, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 1249, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 1250, 498,
	499, 0, 497, 1251, 500, 501, 502, 503, 504, 505,
	323, 506, 1252, 507, 576, 577, 578, 579, 1253, 514,
	1254, 508, 509, 580, 510, 581, 1255, 511, 512, 513,
	0, 515, 516, 1256, 1257, 517, 518, 519, 521, 522,
	520, 523, 1258, 524, 1259, 0, 525, 526, 527, 582,
	583, 584, 1260, 529, 528, 585, 1261, 1262, 1263, 1264,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1180,
	0, 0, 0, 0, 0, 0, 0, 2416, 0, 0,
	0, 0, 0, 0, 0, 2417, 249, 250, 251, 252,
	253, 254, 1186, 255, 256, 1187, 1188, 1189, 0, 1190,
	535, 1191, 1192, 1193, 1194, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	1195, 540, 267, 268, 269, 270, 271, 1196, 1197, 0,
	272, 541, 542, 543, 1198, 273, 274, 544, 1199, 1266,
	1200, 275, 276, 277, 278, 279, 280, 281, 0, 1201,
	283, 284, 285, 282, 1202, 286, 0, 287, 288, 289,
	290, 291, 1203, 292, 1058, 293, 294, 1204, 1205, 1207,
	1206, 1208, 1209, 1210, 295, 296, 297, 298, 0, 299,
	545, 546, 1211, 303, 300, 301, 1212, 304, 302, 1213,
	305, 306, 307, 1214, 1215, 308, 309, 310, 1216, 311,
	312, 1217, 313, 314, 315, 1218, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 1219, 246, 1220, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 1221, 333, 1222, 1223,
	1059, 334, 335, 551, 552, 336, 337, 1224, 338, 553,
	1225, 554, 339, 1226, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 1061, 345, 346, 1227, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 1228, 1060,
	353, 558, 559, 1229, 560, 1230, 355, 356, 1062, 561,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 1231, 367, 369, 368, 1232,
	370, 562, 1065, 371, 372, 1066, 1233, 373, 374, 375,
	1234, 1235, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	1236, 248, 1069, 400, 1237, 563, 401, 564, 403, 404,
	1238, 0, 405, 0, 1239, 1240, 407, 408, 409, 1241,
	1242, 410, 411, 565, 1070, 412, 1071, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 1243,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 1244,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 1245, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	1246, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 1247, 472, 473, 471, 474, 475, 476,
	1248, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 1249, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	1250, 498, 499, 0, 497, 1251, 500, 501, 502, 503,
	504, 505, 323, 506, 1252, 507, 576, 577, 578, 579,
	1253, 514, 1254, 508, 509, 580, 510, 581, 1255, 511,
	512, 513, 0, 515, 516, 1256, 1257, 517, 518, 519,
	521, 522, 520, 523, 1258, 524, 1259, 0, 525, 526,
	527, 582, 583, 584, 1260, 529, 528, 585, 1261, 1262,
	1263, 1264, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1180,
	0, 0, 0, 0, 3251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3253, 249, 250, 251, 252,
	253, 254, 1186, 255, 256, 1187, 1188, 1189, 0, 1190,
	535, 1191, 1192, 1193, 1194, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	1195, 540, 267, 268, 269, 270, 271, 1196, 1197, 0,
	272, 541, 542, 543, 1198, 273, 274, 544, 1199, 1266,
	1200, 275, 276, 277, 278, 279, 280, 281, 0, 1201,
	283, 284, 285, 282, 1202, 286, 0, 287, 288, 289,
	290, 291, 1203, 292, 1058, 293, 294, 1204, 1205, 1207,
	1206, 1208, 1209, 1210, 295, 296, 297, 298, 0, 299,
	545, 546, 1211, 303, 300, 301, 1212, 304, 302, 1213,
	305, 306, 307, 1214, 1215, 308, 309, 310, 1216, 311,
	312, 1217, 313, 314, 315, 1218, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 1219, 246, 1220, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 1221, 333, 1222, 1223,
	1059, 334, 335, 551, 552, 336, 337, 1224, 338, 553,
	1225, 554, 339, 1226, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 1061, 345, 346, 1227, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 1228, 1060,
	353, 558, 559, 1229, 560, 1230, 355, 356, 1062, 561,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 1231, 367, 369, 368, 1232,
	370, 562, 1065, 371, 372, 1066, 1233, 373, 374, 375,
	1234, 1235, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	1236, 248, 1069, 400, 1237, 563, 401, 564, 403, 404,
	1238, 0, 405, 0, 1239, 1240, 407, 408, 409, 1241,
	1242, 410, 411, 565, 1070, 412, 1071, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 1243,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 1244,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 1245, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	1246, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 1247, 472, 473, 471, 474, 475, 476,
	1248, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 1249, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	1250, 498, 499, 0, 497, 1251, 500, 501, 502, 503,
	504, 505, 323, 506, 1252, 507, 576, 577, 578, 579,
	1253, 514, 1254, 508, 509, 580, 510, 581, 1255, 511,
	512, 513, 0, 515, 516, 1256, 1257, 517, 518, 519,
	521, 522, 520, 523, 1258, 524, 1259, 0, 525, 526,
	527, 582, 583, 584, 1260, 529, 528, 585, 1261, 1262,
	1263, 1264, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3599,
	249, 250, 251, 252, 253, 254, 1186, 255, 256, 1187,
	1188, 1189, 0, 1190, 535, 1191, 1192, 1193, 1194, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 1195, 540, 267, 268, 269, 270,
	271, 1196, 1197, 0, 272, 541, 542, 543, 1198, 273,
	274, 544, 1199, 1266, 1200, 275, 276, 277, 278, 279,
	280, 281, 0, 1201, 283, 284, 285, 282, 1202, 286,
	0, 287, 288, 289, 290, 291, 1203, 292, 1058, 293,
	294, 1204, 1205, 1207, 1206, 1208, 1209, 1210, 295, 296,
	297, 298, 0, 299, 545, 546, 1211, 303, 300, 301,
	1212, 304, 302, 1213, 305, 306, 307, 1214, 1215, 308,
	309, 310, 1216, 311, 312, 1217, 313, 314, 315, 1218,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 1219, 246, 1220, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	1221, 333, 1222, 1223, 1059, 334, 335, 551, 552, 336,
	337, 1224, 338, 553, 1225, 554, 339, 1226, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 1061, 345, 346,
	1227, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 1228, 1060, 353, 558, 559, 1229, 560, 1230,
	355, 356, 1062, 561, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 1231,
	367, 369, 368, 1232, 370, 562, 1065, 371, 372, 1066,
	1233, 373, 374, 375, 1234, 1235, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 1236, 248, 1069, 400, 1237, 563,
	401, 564, 403, 404, 1238, 0, 405, 0, 1239, 1240,
	407, 408, 409, 1241, 1242, 410, 411, 565, 1070, 412,
	1071, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 1243, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 1244, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 1245, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 1246, 449, 450, 451, 1072, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 1247, 472, 473,
	471, 474, 475, 476, 1248, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	1249, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 1250, 498, 499, 0, 497, 1251,
	500, 501, 502, 503, 504, 505, 323, 506, 1252, 507,
	576, 577, 578, 579, 1253, 514, 1254, 508, 509, 580,
	510, 581, 1255, 511, 512, 513, 0, 515, 516, 1256,
	1257, 517, 518, 519, 521, 522, 520, 523, 1258, 524,
	1259, 0, 525, 526, 527, 582, 583, 584, 1260, 529,
	528, 585, 1261, 1262, 1263, 1264, 530, 531, 586, 532,
	533, 534, 1180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3767, 249,
	250, 251, 252, 253, 254, 1186, 255, 256, 1187, 1188,
	1189, 0, 1190, 535, 1191, 1192, 1193, 1194, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 1195, 540, 267, 268, 269, 270, 271,
	1196, 1197, 0, 272, 541, 542, 543, 1198, 273, 274,
	544, 1199, 1266, 1200, 275, 276, 277, 278, 279, 280,
	281, 0, 1201, 283, 284, 285, 282, 1202, 286, 0,
	287, 288, 289, 290, 291, 1203, 292, 1058, 293, 294,
	1204, 1205, 1207, 1206, 1208, 1209, 1210, 295, 296, 297,
	298, 0, 299, 545, 546, 1211, 303, 300, 301, 1212,
	304, 302, 1213, 305, 306, 307, 1214, 1215, 308, 309,
	310, 1216, 311, 312, 1217, 313, 314, 315, 1218, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 1219, 246, 1220, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 1221,
	333, 1222, 1223, 1059, 334, 335, 551, 552, 336, 337,
	1224, 338, 553, 1225, 554, 339, 1226, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 1061, 345, 346, 1227,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 1228, 1060, 353, 558, 559, 1229, 560, 1230, 355,
	356, 1062, 561, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 1231, 367,
	369, 368, 1232, 370, 562, 1065, 371, 372, 1066, 1233,
	373, 374, 375, 1234, 1235, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 1236, 248, 1069, 400, 1237, 563, 401,
	564, 403, 404, 1238, 0, 405, 0, 1239, 1240, 407,
	408, 409, 1241, 1242, 410, 411, 565, 1070, 412, 1071,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 1243, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 1244, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 1245, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 1246, 449, 450, 451, 1072, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 1247, 472, 473, 471,
	474, 475, 476, 1248, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 1249,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 1250, 498, 499, 0, 497, 1251, 500,
	501, 502, 503, 504, 505, 323, 506, 1252, 507, 576,
	577, 578, 579, 1253, 514, 1254, 508, 509, 580, 510,
	581, 1255, 511, 512, 513, 0, 515, 516, 1256, 1257,
	517, 518, 519, 521, 522, 520, 523, 1258, 524, 1259,
	0, 525, 526, 527, 582, 583, 584, 1260, 529, 528,
	585, 1261, 1262, 1263, 1264, 530, 531, 586, 532, 533,
	534, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3658, 249, 250,
	251, 252, 253, 254, 1186, 255, 256, 1187, 1188, 1189,
	0, 1190, 535, 1191, 1192, 1193, 1194, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 1195, 540, 267, 268, 269, 270, 271, 1196,
	1197, 0, 272, 541, 542, 543, 1198, 273, 274, 544,
	1199, 1266, 1200, 275, 276, 277, 278, 279, 280, 281,
	0, 1201, 283, 284, 285, 282, 1202, 286, 0, 287,
	288, 289, 290, 291, 1203, 292, 1058, 293, 294, 1204,
	1205, 1207, 1206, 1208, 1209, 1210, 295, 296, 297, 298,
	0, 299, 545, 546, 1211, 303, 300, 301, 1212, 304,
	302, 1213, 305, 306, 307, 1214, 1215, 308, 309, 310,
	1216, 311, 312, 1217, 313, 314, 315, 1218, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 1219, 246, 1220, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 1221, 333,
	1222, 1223, 1059, 334, 335, 551, 552, 336, 337, 1224,
	338, 553, 1225, 554, 339, 1226, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 1061, 345, 346, 1227, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	1228, 1060, 353, 558, 559, 1229, 560, 1230, 355, 356,
	1062, 561, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 1231, 367, 369,
	368, 1232, 370, 562, 1065, 371, 372, 1066, 1233, 373,
	374, 375, 1234, 1235, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 1236, 248, 1069, 400, 1237, 563, 401, 564,
	403, 404, 1238, 0, 405, 0, 1239, 1240, 407, 408,
	409, 1241, 1242, 410, 411, 565, 1070, 412, 1071, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 1243, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 1244, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 1245, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 1246, 449, 450, 451, 1072, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 1247, 472, 473, 471, 474,
	475, 476, 1248, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 1249, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 1250, 498, 499, 0, 497, 1251, 500, 501,
	502, 503, 504, 505, 323, 506, 1252, 507, 576, 577,
	578, 579, 1253, 514, 1254, 508, 509, 580, 510, 581,
	1255, 511, 512, 513, 0, 515, 516, 1256, 1257, 517,
	518, 519, 521, 522, 520, 523, 1258, 524, 1259, 0,
	525, 526, 527, 582, 583, 584, 1260, 529, 528, 585,
	1261, 1262, 1263, 1264, 530, 531, 586, 532, 533, 534,
	1180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3529, 249, 250, 251,
	252, 253, 254, 1186, 255, 256, 1187, 1188, 1189, 0,
	1190, 535, 1191, 1192, 1193, 1194, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 1195, 540, 267, 268, 269, 270, 271, 1196, 1197,
	0, 272, 541, 542, 543, 1198, 273, 274, 544, 1199,
	1266, 1200, 275, 276, 277, 278, 279, 280, 281, 0,
	1201, 283, 284, 285, 282, 1202, 286, 0, 287, 288,
	289, 290, 291, 1203, 292, 1058, 293, 294, 1204, 1205,
	1207, 1206, 1208, 1209, 1210, 295, 296, 297, 298, 0,
	299, 545, 546, 1211, 303, 300, 301, 1212, 304, 302,
	1213, 305, 306, 307, 1214, 1215, 308, 309, 310, 1216,
	311, 312, 1217, 313, 314, 315, 1218, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 1219, 246, 1220, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 1221, 333, 1222,
	1223, 1059, 334, 335, 551, 552, 336, 337, 1224, 338,
	553, 1225, 554, 339, 1226, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 1061, 345, 346, 1227, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 1228,
	1060, 353, 558, 559, 1229, 560, 1230, 355, 356, 1062,
	561, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 1231, 367, 369, 368,
	1232, 370, 562, 1065, 371, 372, 1066, 1233, 373, 374,
	375, 1234, 1235, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 1236, 248, 1069, 400, 1237, 563, 401, 564, 403,
	404, 1238, 0, 405, 0, 1239, 1240, 407, 408, 409,
	1241, 1242, 410, 411, 565, 1070, 412, 1071, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	1243, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	1244, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 1245, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 1246, 449, 450, 451, 1072, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 1247, 472, 473, 471, 474, 475,
	476, 1248, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 1249, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 1250, 498, 499, 0, 497, 1251, 500, 501, 502,
	503, 504, 505, 323, 506, 1252, 507, 576, 577, 578,
	579, 1253, 514, 1254, 508, 509, 580, 510, 581, 1255,
	511, 512, 513, 0, 515, 516, 1256, 1257, 517, 518,
	519, 521, 522, 520, 523, 1258, 524, 1259, 0, 525,
	526, 527, 582, 583, 584, 1260, 529, 528, 585, 1261,
	1262, 1263, 1264, 530, 531, 586, 532, 533, 534, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3269, 249, 250, 251, 252,
	253, 254, 1186, 255, 256, 1187, 1188, 1189, 0, 1190,
	535, 1191, 1192, 1193, 1194, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	1195, 540, 267, 268, 269, 270, 271, 1196, 1197, 0,
	272, 541, 542, 543, 1198, 273, 274, 544, 1199, 1266,
	1200, 275, 276, 277, 278, 279, 280, 281, 0, 1201,
	283, 284, 285, 282, 1202, 286, 0, 287, 288, 289,
	290, 291, 1203, 292, 1058, 293, 294, 1204, 1205, 1207,
	1206, 1208, 1209, 1210, 295, 296, 297, 298, 0, 299,
	545, 546, 1211, 303, 300, 301, 1212, 304, 302, 1213,
	305, 306, 307, 1214, 1215, 308, 309, 310, 1216, 311,
	312, 1217, 313, 314, 315, 1218, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 1219, 246, 1220, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 1221, 333, 1222, 1223,
	1059, 334, 335, 551, 552, 336, 337, 1224, 338, 553,
	1225, 554, 339, 1226, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 1061, 345, 346, 1227, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 1228, 1060,
	353, 558, 559, 1229, 560, 1230, 355, 356, 1062, 561,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 1231, 367, 369, 368, 1232,
	370, 562, 1065, 371, 372, 1066, 1233, 373, 374, 375,
	1234, 1235, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	1236, 248, 1069, 400, 1237, 563, 401, 564, 403, 404,
	1238, 0, 405, 0, 1239, 1240, 407, 408, 409, 1241,
	1242, 410, 411, 565, 1070, 412, 1071, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 1243,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 1244,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 1245, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	1246, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 1247, 472, 473, 471, 474, 475, 476,
	1248, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 1249, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	1250, 498, 499, 0, 497, 1251, 500, 501, 502, 503,
	504, 505, 323, 506, 1252, 507, 576, 577, 578, 579,
	1253, 514, 1254, 508, 509, 580, 510, 581, 1255, 511,
	512, 513, 0, 515, 516, 1256, 1257, 517, 518, 519,
	521, 522, 520, 523, 1258, 524, 1259, 0, 525, 526,
	527, 582, 583, 584, 1260, 529, 528, 585, 1261, 1262,
	1263, 1264, 530, 531, 586, 532, 533, 534, 1180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3099, 249, 250, 251, 252, 253,
	254, 1186, 255, 256, 1187, 1188, 1189, 0, 1190, 535,
	1191, 1192, 1193, 1194, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 1195,
	540, 267, 268, 269, 270, 271, 1196, 1197, 0, 272,
	541, 542, 543, 1198, 273, 274, 544, 1199, 1266, 1200,
	275, 276, 277, 278, 279, 280, 281, 0, 1201, 283,
	284, 285, 282, 1202, 286, 0, 287, 288, 289, 290,
	291, 1203, 292, 1058, 293, 294, 1204, 1205, 1207, 1206,
	1208, 1209, 1210, 295, 296, 297, 298, 0, 299, 545,
	546, 1211, 303, 300, 301, 1212, 304, 302, 1213, 305,
	306, 307, 1214, 1215, 308, 309, 310, 1216, 311, 312,
	1217, 313, 314, 315, 1218, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	1219, 246, 1220, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 1221, 333, 1222, 1223, 1059,
	334, 335, 551, 552, 336, 337, 1224, 338, 553, 1225,
	554, 339, 1226, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 1061, 345, 346, 1227, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 1228, 1060, 353,
	558, 559, 1229, 560, 1230, 355, 356, 1062, 561, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 1231, 367, 369, 368, 1232, 370,
	562, 1065, 371, 372, 1066, 1233, 373, 374, 375, 1234,
	1235, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 1236,
	248, 1069, 400, 1237, 563, 401, 564, 403, 404, 1238,
	0, 405, 0, 1239, 1240, 407, 408, 409, 1241, 1242,
	410, 411, 565, 1070, 412, 1071, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 1243, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 1244, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 1245, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 1246,
	449, 450, 451, 1072, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 1247, 472, 473, 471, 474, 475, 476, 1248,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 1249, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 1250,
	498, 499, 0, 497, 1251, 500, 501, 502, 503, 504,
	505, 323, 506, 1252, 507, 576, 577, 578, 579, 1253,
	514, 1254, 508, 509, 580, 510, 581, 1255, 511, 512,
	513, 0, 515, 516, 1256, 1257, 517, 518, 519, 521,
	522, 520, 523, 1258, 524, 1259, 0, 525, 526, 527,
	582, 583, 584, 1260, 529, 528, 585, 1261, 1262, 1263,
	1264, 530, 531, 586, 532, 533, 534, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2299, 249, 250, 251, 252, 253, 254,
	1186, 255, 256, 1187, 1188, 1189, 0, 1190, 535, 1191,
	1192, 1193, 1194, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 1195, 540,
	267, 268, 269, 270, 271, 1196, 1197, 0, 272, 541,
	542, 543, 1198, 273, 274, 544, 1199, 1266, 1200, 275,
	276, 277, 278, 279, 280, 281, 0, 1201, 283, 284,
	285, 282, 1202, 286, 0, 287, 288, 289, 290, 291,
	1203, 292, 1058, 293, 294, 1204, 1205, 1207, 1206, 1208,
	1209, 1210, 295, 296, 297, 298, 0, 299, 545, 546,
	1211, 303, 300, 301, 1212, 304, 302, 1213, 305, 306,
	307, 1214, 1215, 308, 309, 310, 1216, 311, 312, 1217,
	313, 314, 315, 1218, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 1219,
	246, 1220, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 1221, 333, 1222, 1223, 1059, 334,
	335, 551, 552, 336, 337, 1224, 338, 553, 1225, 554,
	339, 1226, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 1061, 345, 346, 1227, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 1228, 1060, 353, 558,
	559, 1229, 560, 1230, 355, 356, 1062, 561, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 1231, 367, 369, 368, 1232, 370, 562,
	1065, 371, 372, 1066, 1233, 373, 374, 375, 1234, 1235,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 1236, 248,
	1069, 400, 1237, 563, 401, 564, 403, 404, 1238, 0,
	405, 0, 1239, 1240, 407, 408, 409, 1241, 1242, 410,
	411, 565, 1070, 412, 1071, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 1243, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 1244, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 1245, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 1246, 449,
	450, 451, 1072, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 1247, 472, 473, 471, 474, 475, 476, 1248, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 1249, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 1250, 498,
	499, 0, 497, 1251, 500, 501, 502, 503, 504, 505,
	323, 506, 1252, 507, 576, 577, 578, 579, 1253, 514,
	1254, 508, 509, 580, 510, 581, 1255, 511, 512, 513,
	0, 515, 516, 1256, 1257, 517, 518, 519, 521, 522,
	520, 523, 1258, 524, 1259, 0, 525, 526, 527, 582,
	583, 584, 1260, 529, 528, 585, 1261, 1262, 1263, 1264,
	530, 531, 586, 532, 533, 534, 1278, 0, 1180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 249, 250, 251, 252, 253,
	254, 1186, 255, 256, 1187, 1188, 1189, 0, 1190, 535,
	1191, 1192, 1193, 1194, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 1195,
	540, 267, 268, 269, 270, 271, 1196, 1197, 0, 272,
	541, 542, 543, 1198, 273, 274, 544, 1199, 1266, 1200,
	275, 276, 277, 278, 279, 280, 281, 0, 1201, 283,
	284, 285, 282, 1202, 286, 0, 287, 288, 289, 290,
	291, 1203, 292, 1058, 293, 294, 1204, 1205, 1207, 1206,
	1208, 1209, 1210, 295, 296, 297, 298, 0, 299, 545,
	546, 1211, 303, 300, 301, 1212, 304, 302, 1213, 305,
	306, 307, 1214, 1215, 308, 309, 310, 1216, 311, 312,
	1217, 313, 314, 315, 1218, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	1219, 246, 1220, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 1221, 333, 1222, 1223, 1059,
	334, 335, 551, 552, 336, 337, 1224, 338, 553, 1225,
	554, 339, 1226, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 1061, 345, 346, 1227, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 1228, 1060, 353,
	558, 559, 1229, 560, 1230, 355, 356, 1062, 561, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 1231, 367, 369, 368, 1232, 370,
	562, 1065, 371, 372, 1066, 1233, 373, 374, 375, 1234,
	1235, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 1236,
	248, 1069, 400, 1237, 563, 401, 564, 403, 404, 1238,
	0, 405, 0, 1239, 1240, 407, 408, 409, 1241, 1242,
	410, 411, 565, 1070, 412, 1071, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 1243, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 1244, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 1245, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 1246,
	449, 450, 451, 1072, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 1247, 472, 473, 471, 474, 475, 476, 1248,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 1249, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 1250,
	498, 499, 0, 497, 1251, 500, 501, 502, 503, 504,
	505, 323, 506, 1252, 507, 576, 577, 578, 579, 1253,
	514, 1254, 508, 509, 580, 510, 581, 1255, 511, 512,
	513, 0, 515, 516, 1256, 1257, 517, 518, 519, 521,
	522, 520, 523, 1258, 524, 1259, 0, 525, 526, 527,
	582, 583, 584, 1260, 529, 528, 585, 1261, 1262, 1263,
	1264, 530, 531, 586, 532, 533, 534, 1177, 0, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 1186, 255, 256, 1187, 1188, 1189, 0, 1190,
	535, 1191, 1192, 1193, 1194, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	1195, 540, 267, 268, 269, 270, 271, 1196, 1197, 0,
	272, 541, 542, 543, 1198, 273, 274, 544, 1199, 1266,
	1200, 275, 276, 277, 278, 279, 280, 281, 0, 1201,
	283, 284, 285, 282, 1202, 286, 0, 287, 288, 289,
	290, 291, 1203, 292, 1058, 293, 294, 1204, 1205, 1207,
	1206, 1208, 1209, 1210, 295, 296, 297, 298, 0, 299,
	545, 546, 1211, 303, 300, 301, 1212, 304, 302, 1213,
	305, 306, 307, 1214, 1215, 308, 309, 310, 1216, 311,
	312, 1217, 313, 314, 315, 1218, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 1219, 246, 1220, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 1221, 333, 1222, 1223,
	1059, 334, 335, 551, 552, 336, 337, 1224, 338, 553,
	1225, 554, 339, 1226, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 1061, 345, 346, 1227, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 1228, 1060,
	353, 558, 559, 1229, 560, 1230, 355, 356, 1062, 561,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 1231, 367, 369, 368, 1232,
	370, 562, 1065, 371, 372, 1066, 1233, 373, 374, 375,
	1234, 1235, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	1236, 248, 1069, 400, 1237, 563, 401, 564, 403, 404,
	1238, 0, 405, 0, 1239, 1240, 407, 408, 409, 1241,
	1242, 410, 411, 565, 1070, 412, 1071, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 1243,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 1244,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 1245, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	1246, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 1247, 472, 473, 471, 474, 475, 476,
	1248, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 1249, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	1250, 498, 499, 0, 497, 1251, 500, 501, 502, 503,
	504, 505, 323, 506, 1252, 507, 576, 577, 578, 579,
	1253, 514, 1254, 508, 509, 580, 510, 581, 1255, 511,
	512, 513, 0, 515, 516, 1256, 1257, 517, 518, 519,
	521, 522, 520, 523, 1258, 524, 1259, 0, 525, 526,
	527, 582, 583, 584, 1260, 529, 528, 585, 1261, 1262,
	1263, 1264, 530, 531, 586, 532, 533, 534, 1180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 1186, 255, 256, 1187, 1188, 1189, 0, 1190, 535,
	1191, 1192, 1193, 1194, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 1195,
	540, 267, 268, 269, 270, 271, 1196, 1197, 0, 272,
	541, 542, 543, 1198, 273, 274, 544, 1199, 1266, 1200,
	275, 276, 277, 278, 279, 280, 281, 0, 1201, 283,
	284, 285, 282, 1202, 286, 0, 287, 288, 289, 290,
	291, 1203, 292, 1058, 293, 294, 1204, 1205, 1207, 1206,
	1208, 1209, 1210, 295, 296, 297, 298, 0, 299, 545,
	546, 1211, 303, 300, 301, 1212, 304, 302, 1213, 305,
	306, 307, 1214, 1215, 308, 309, 310, 1216, 311, 312,
	1217, 313, 314, 315, 1218, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	1219, 246, 1220, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 1221, 333, 1222, 1223, 1059,
	334, 335, 551, 552, 336, 337, 1224, 338, 553, 1225,
	554, 339, 1226, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 1061, 345, 346, 1227, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 1228, 1060, 353,
	558, 559, 1229, 560, 1230, 355, 356, 1062, 561, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 1231, 367, 369, 368, 1232, 370,
	562, 1065, 371, 372, 1066, 1233, 373, 374, 375, 1234,
	1235, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 1236,
	248, 1069, 400, 1237, 563, 401, 564, 403, 404, 1238,
	0, 405, 0, 1239, 1240, 407, 408, 409, 1241, 1242,
	410, 411, 565, 1070, 412, 1071, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 1243, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 1244, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 1245, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 1246,
	449, 450, 451, 1072, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 1247, 472, 473, 471, 474, 475, 476, 1248,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 1249, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 1250,
	498, 499, 0, 497, 1251, 500, 501, 502, 503, 504,
	505, 323, 506, 1252, 507, 576, 577, 578, 579, 1253,
	514, 1254, 508, 509, 580, 510, 581, 1255, 511, 512,
	513, 0, 515, 516, 1256, 1257, 517, 518, 519, 521,
	522, 520, 523, 1258, 524, 1259, 0, 525, 526, 527,
	582, 583, 584, 1260, 529, 528, 585, 1261, 1262, 1263,
	1264, 530, 531, 586, 532, 533, 534, 2274, 0, 994,
	966, 967, 968, 964, 965, 977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 2271, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 2272, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 515, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 2270, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 947, 948, 2273, 0, 0, 0, 0, 0,
	0, 978, 2269, 0, 940, 976, 994, 966, 967, 968,
	964, 965, 977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	210, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 212, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 1451, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 204, 530,
	531, 586, 532, 533, 534, 953, 205, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 994, 966, 967, 968, 964, 965, 977, 1686, 1684,
	0, 0, 976, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1018, 982, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 1031, 0, 265, 1038,
	266, 1037, 0, 1048, 267, 268, 269, 270, 271, 984,
	1017, 951, 272, 1077, 1078, 543, 0, 273, 274, 1024,
	0, 1005, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 1008,
	1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298,
	1041, 299, 1035, 1034, 955, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 1026, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	961, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 1049, 1050, 973, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 1033, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 1046, 1047, 336, 337, 0,
	338, 1056, 0, 983, 339, 0, 340, 341, 342, 343,
	344, 1019, 1020, 1023, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 1060, 353, 1028, 1029, 0, 989, 0, 355, 356,
	1062, 1021, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 1057, 1065, 371, 372, 1066, 0, 373,
	374, 375, 1012, 1011, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 952, 248, 1069, 400, 974, 1022, 401, 1036,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 1051,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 1052, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1032, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 962, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 210, 472, 473, 471, 474,
	475, 476, 1015, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 1030, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 1076, 492, 493, 494,
	495, 1053, 0, 498, 499, 950, 497, 212, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 1042, 1043,
	1044, 1045, 0, 514, 0, 508, 509, 1054, 510, 1055,
	972, 511, 512, 513, 0, 515, 516, 0, 956, 517,
	518, 519, 521, 522, 520, 523, 1016, 524, 0, 0,
	525, 526, 527, 1451, 1039, 1075, 0, 529, 528, 585,
	0, 0, 0, 204, 530, 531, 586, 532, 533, 534,
	953, 205, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 0, 947, 948, 994, 966, 967, 968,
	964, 965, 977, 1686, 2802, 0, 0, 976, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	210, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 212, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 1451, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 204, 530,
	531, 586, 532, 533, 534, 953, 205, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 994, 966, 967, 968, 964, 965, 977, 1686, 1684,
	0, 0, 976, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1018, 982, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 1031, 0, 265, 1038,
	266, 1037, 2378, 1048, 267, 268, 269, 270, 271, 984,
	1017, 951, 272, 1077, 1078, 543, 0, 273, 274, 1024,
	0, 1005, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 1008,
	1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298,
	1041, 299, 1035, 1034, 955, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 1026, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	961, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 1049, 1050, 973, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 1033, 0, 0, 0, 332, 0, 333,
	0, 2383, 1059, 334, 335, 1046, 1047, 336, 337, 0,
	338, 1056, 0, 983, 339, 0, 340, 341, 342, 343,
	344, 1019, 1020, 1023, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 1060, 353, 1028, 1029, 0, 989, 0, 355, 356,
	1062, 1021, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 2379, 370, 1057, 1065, 371, 372, 1066, 0, 373,
	374, 375, 1012, 1011, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 952, 248, 1069, 400, 974, 1022, 401, 1036,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 1051,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 1052, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1032, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 962, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 1015, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 1030, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 1076, 492, 493, 494,
	495, 1053, 0, 498, 499, 950, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 1042, 1043,
	1044, 1045, 0, 514, 2380, 508, 509, 1054, 510, 1055,
	972, 511, 512, 513, 0, 515, 516, 0, 956, 517,
	518, 519, 521, 522, 520, 523, 1016, 524, 0, 0,
	525, 526, 527, 582, 1039, 1075, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	953, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 0, 947, 948, 0, 0, 0, 0,
	0, 0, 0, 978, 0, 0, 2319, 976, 994, 966,
	967, 968, 964, 965, 977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1018,
	982, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 1031, 0, 265, 1038, 266, 1037, 0,
	1048, 267, 268, 269, 270, 271, 984, 1017, 951, 272,
	1077, 1078, 543, 0, 273, 274, 1024, 0, 1005, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014,
	1010, 1009, 1013, 295, 296, 297, 298, 1041, 299, 1035,
	1034, 955, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 1026, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 961, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 1049, 1050,
	973, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	1033, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 1046, 1047, 336, 337, 0, 338, 1056, 0,
	983, 339, 0, 340, 341, 342, 343, 344, 1019, 1020,
	1023, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 1060, 353,
	1028, 1029, 0, 989, 0, 355, 356, 1062, 1021, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	1057, 1065, 371, 372, 1066, 0, 373, 374, 375, 1012,
	1011, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 952,
	248, 1069, 400, 974, 1022, 401, 1036, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 1051, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 1052, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1032, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 962, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 1015,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 1030, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 1076, 492, 493, 494, 495, 1053, 0,
	498, 499, 950, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 1042, 1043, 1044, 1045, 0,
	514, 0, 508, 509, 1054, 510, 1055, 972, 511, 512,
	513, 0, 515, 516, 0, 956, 517, 518, 519, 521,
	522, 520, 523, 1016, 524, 0, 0, 525, 526, 527,
	582, 1039, 1075, 0, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 953, 0, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 947, 948, 0, 0, 0, 0, 0, 0, 0,
	978, 2317, 0, 2316, 976, 994, 966, 967, 968, 964,
	965, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1018, 982, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	1031, 0, 265, 1038, 266, 1037, 0, 1048, 267, 268,
	269, 270, 271, 984, 1017, 951, 272, 1077, 1078, 543,
	0, 273, 274, 1024, 0, 1005, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013,
	295, 296, 297, 298, 1041, 299, 1035, 1034, 955, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 1026, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 961, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 1049, 1050, 973, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 1033, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 1046,
	1047, 336, 337, 0, 338, 1056, 0, 983, 339, 0,
	340, 341, 342, 343, 344, 1019, 1020, 1023, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 1060, 353, 1028, 1029, 0,
	989, 0, 355, 356, 1062, 1021, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 1057, 1065, 371,
	372, 1066, 0, 373, 374, 375, 1012, 1011, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 952, 248, 1069, 400,
	974, 1022, 401, 1036, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 1051, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	1052, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1032, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 962, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 1015, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 1030,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	1076, 492, 493, 494, 495, 1053, 0, 498, 499, 950,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 1042, 1043, 1044, 1045, 0, 514, 0, 508,
	509, 1054, 510, 1055, 972, 511, 512, 513, 0, 515,
	516, 0, 956, 517, 518, 519, 521, 522, 520, 523,
	1016, 524, 0, 0, 525, 526, 527, 582, 1039, 1075,
	0, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 953, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 947, 948,
	0, 0, 0, 0, 0, 0, 0, 978, 2314, 0,
	2313, 976, 994, 966, 967, 968, 964, 965, 977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1018, 982, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 1031, 0, 265,
	1038, 266, 1037, 0, 1048, 267, 268, 269, 270, 271,
	984, 1017, 951, 272, 1077, 1078, 543, 0, 273, 274,
	1024, 0, 1005, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297,
	298, 1041, 299, 1035, 1034, 955, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 1026,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 961, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 1049, 1050, 973, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 1033, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 1046, 1047, 336, 337,
	0, 338, 1056, 0, 983, 339, 0, 340, 341, 342,
	343, 344, 1019, 1020, 1023, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 1060, 353, 1028, 1029, 0, 989, 0, 355,
	356, 1062, 1021, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 1057, 1065, 371, 372, 1066, 0,
	373, 374, 375, 1012, 1011, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 952, 248, 1069, 400, 974, 1022, 401,
	1036, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	1051, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 1052, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1032, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 962, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 1015, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 1030, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 1076, 492, 493,
	494, 495, 1053, 0, 498, 499, 950, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 1042,
	1043, 1044, 1045, 0, 514, 0, 508, 509, 1054, 510,
	1055, 972, 511, 512, 513, 0, 515, 516, 0, 956,
	517, 518, 519, 521, 522, 520, 523, 1016, 524, 0,
	0, 525, 526, 527, 582, 1039, 1075, 0, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 953, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 0, 947, 948, 0, 0, 0,
	0, 0, 0, 0, 978, 2311, 0, 2310, 976, 994,
	966, 967, 968, 964, 965, 977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 515, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 947, 948, 0, 0, 0, 0, 0, 0,
	0, 978, 2308, 0, 1539, 976, 994, 966, 967, 968,
	964, 965, 977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 0, 529, 528, 585, 1538, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 0, 0, 0, 0, 0, 0, 0, 978, 0,
	0, 943, 976, 994, 966, 967, 968, 964, 965, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 951, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 955, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 952, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 957, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 962, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 950, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	956, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 582, 1039, 1075, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 953, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 947, 948, 994, 966,
	967, 968, 964, 965, 977, 978, 0, 0, 0, 976,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1018,
	982, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 1031, 0, 265, 1038, 266, 1037, 0,
	1048, 267, 268, 269, 270, 271, 984, 1017, 951, 272,
	1077, 1078, 543, 0, 273, 274, 1024, 0, 1005, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 4036,
	291, 0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014,
	1010, 1009, 1013, 295, 296, 297, 298, 1041, 299, 1035,
	1034, 955, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 1026, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 961, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 1049, 1050,
	973, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	1033, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 1046, 1047, 336, 337, 0, 338, 1056, 0,
	983, 339, 0, 340, 341, 342, 343, 344, 1019, 1020,
	1023, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 1060, 353,
	1028, 1029, 0, 989, 0, 355, 356, 1062, 1021, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	1057, 1065, 371, 372, 1066, 0, 373, 374, 375, 1012,
	1011, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 952,
	248, 1069, 400, 974, 1022, 401, 1036, 403, 404, 0,
	0, 405, 0, 957, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 1051, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 1052, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1032, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 962, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 1015,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 1030, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 1076, 492, 493, 494, 495, 1053, 0,
	498, 499, 950, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 1042, 1043, 1044, 1045, 0,
	514, 0, 508, 509, 1054, 510, 1055, 972, 511, 512,
	513, 0, 515, 516, 0, 956, 517, 518, 519, 521,
	522, 520, 523, 1016, 524, 0, 0, 525, 526, 527,
	582, 1039, 1075, 0, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 953, 0, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 947, 948, 994, 966, 967, 968, 964, 965, 977,
	978, 0, 0, 0, 976, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 951, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 955, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 2188, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 952, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 2187, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 962, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 950, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	956, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 582, 1039, 1075, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 953, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 947, 948, 994, 966,
	967, 968, 964, 965, 977, 978, 0, 0, 0, 976,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1018,
	982, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 1031, 0, 265, 1038, 266, 1037, 0,
	1048, 267, 268, 269, 270, 271, 984, 1017, 951, 272,
	1077, 1078, 543, 0, 273, 274, 1024, 0, 1005, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014,
	1010, 1009, 1013, 295, 296, 297, 298, 1041, 299, 1035,
	1034, 955, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 1026, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 961, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 1049, 1050,
	973, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	1033, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 1046, 1047, 336, 337, 0, 338, 1056, 0,
	983, 339, 0, 340, 341, 342, 343, 344, 1019, 1020,
	1023, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 1060, 353,
	1028, 1029, 0, 989, 0, 355, 356, 1062, 1021, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	1057, 1065, 371, 372, 1066, 0, 373, 374, 375, 1012,
	1011, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 952,
	248, 1069, 400, 974, 1022, 401, 1036, 403, 404, 0,
	0, 405, 0, 957, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 1051, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 1052, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1032, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 962, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 1015,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 1030, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 1076, 492, 493, 494, 495, 1053, 0,
	498, 499, 950, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 1042, 1043, 1044, 1045, 0,
	514, 0, 508, 509, 1054, 510, 1055, 972, 511, 512,
	513, 0, 515, 516, 0, 956, 517, 518, 519, 521,
	522, 520, 523, 1016, 524, 0, 0, 525, 526, 527,
	582, 1039, 1075, 0, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 953, 0, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 947, 948, 994, 966, 967, 968, 964, 965, 977,
	978, 0, 0, 0, 976, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 951, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 3830, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 955, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 952, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 957, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 962, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 950, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	956, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 582, 1039, 1075, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 953, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 947, 948, 994, 966,
	967, 968, 964, 965, 977, 978, 0, 0, 0, 976,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1018,
	982, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 1031, 0, 265, 1038, 266, 1037, 0,
	1048, 267, 268, 269, 270, 271, 984, 1017, 951, 272,
	1077, 1078, 543, 0, 273, 274, 1024, 0, 1005, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014,
	1010, 1009, 1013, 295, 296, 297, 298, 1041, 299, 1035,
	1034, 955, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 1026, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 961, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 1049, 1050,
	973, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	1033, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 1046, 1047, 336, 337, 0, 338, 1056, 0,
	983, 339, 0, 340, 341, 342, 343, 344, 1019, 1020,
	1023, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 1060, 353,
	1028, 1029, 0, 989, 0, 355, 356, 1062, 1021, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	1057, 1065, 371, 372, 1066, 0, 373, 374, 375, 1012,
	1011, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 952,
	3491, 1069, 400, 974, 1022, 401, 1036, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 1051, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 1052, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1032, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 962, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 1015,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 1030, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 1076, 492, 493, 494, 495, 1053, 0,
	498, 499, 950, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 1042, 1043, 1044, 1045, 0,
	514, 0, 508, 509, 1054, 510, 1055, 972, 511, 512,
	513, 0, 515, 516, 0, 956, 517, 518, 519, 521,
	522, 520, 523, 1016, 524, 0, 0, 525, 526, 527,
	582, 1039, 1075, 0, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 953, 0, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 947, 948, 1754, 0, 0, 0, 0, 0, 0,
	978, 0, 0, 0, 976, 994, 966, 967, 968, 964,
	965, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1018, 982, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	1031, 0, 265, 1038, 266, 1037, 0, 1048, 267, 268,
	269, 270, 271, 984, 1017, 951, 272, 1077, 1078, 543,
	0, 273, 274, 1024, 0, 1005, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013,
	295, 296, 297, 298, 1041, 299, 1035, 1034, 955, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 1026, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 961, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 1049, 1050, 973, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 1033, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 1046,
	1047, 336, 337, 0, 338, 1056, 0, 983, 339, 0,
	340, 341, 342, 343, 344, 1019, 1020, 1023, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 1060, 353, 1028, 1029, 0,
	989, 0, 355, 356, 1062, 1021, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 1057, 1065, 371,
	372, 1066, 0, 373, 374, 375, 1012, 1011, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 952, 248, 1069, 400,
	974, 1022, 401, 1036, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 1051, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	1052, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1032, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 962, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 1015, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 1030,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	1076, 492, 493, 494, 495, 1053, 0, 498, 499, 950,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 1042, 1043, 1044, 1045, 0, 514, 0, 508,
	509, 1054, 510, 1055, 972, 511, 512, 513, 0, 515,
	516, 0, 956, 517, 518, 519, 521, 522, 520, 523,
	1016, 524, 0, 0, 525, 526, 527, 582, 1039, 1075,
	3247, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 953, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 947, 948,
	994, 966, 967, 968, 964, 965, 977, 978, 0, 0,
	0, 976, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1018, 982, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 1031, 0, 265, 1038, 266,
	1037, 0, 1048, 267, 268, 269, 270, 271, 984, 1017,
	951, 272, 1077, 1078, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041,
	299, 1035, 1034, 955, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 1026, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 961,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 973, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 1033, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 1046, 1047, 336, 337, 0, 338,
	1056, 0, 983, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 1028, 1029, 0, 989, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 952, 248, 1069, 400, 974, 1022, 401, 1036, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1032, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	962, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 1030, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 1076, 492, 493, 494, 495,
	1053, 0, 498, 499, 950, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 1042, 1043, 1044,
	1045, 0, 514, 0, 508, 509, 1054, 510, 1055, 972,
	511, 512, 513, 0, 515, 516, 0, 956, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 1039, 1075, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 953,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 947, 948, 1754, 0, 0, 0, 0,
	0, 0, 978, 0, 0, 0, 976, 994, 966, 967,
	968, 964, 965, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1018, 982,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 1031, 0, 265, 1038, 266, 1037, 0, 1048,
	267, 268, 269, 270, 271, 984, 1017, 951, 272, 1077,
	1078, 543, 0, 273, 274, 1024, 0, 1005, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010,
	1009, 1013, 295, 296, 297, 298, 1041, 299, 1035, 1034,
	955, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 1026, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 961, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 1049, 1050, 973,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 1033,
	0, 0, 0, 332, 0, 333, 0, 2383, 1059, 334,
	335, 1046, 1047, 336, 337, 0, 338, 1056, 0, 983,
	339, 0, 340, 341, 342, 343, 344, 1019, 1020, 1023,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 1060, 353, 1028,
	1029, 0, 989, 0, 355, 356, 1062, 1021, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 1057,
	1065, 371, 372, 1066, 0, 373, 374, 375, 1012, 1011,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 952, 248,
	1069, 400, 974, 1022, 401, 1036, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 1051, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 1052, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1032, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 962, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 1015, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 1030, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 1076, 492, 493, 494, 495, 1053, 0, 498,
	499, 950, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 1042, 1043, 1044, 1045, 0, 514,
	0, 508, 509, 1054, 510, 1055, 972, 511, 512, 513,
	0, 515, 516, 0, 956, 517, 518, 519, 521, 522,
	520, 523, 1016, 524, 0, 0, 525, 526, 527, 582,
	1039, 1075, 0, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 953, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 0,
	947, 948, 994, 966, 967, 968, 964, 965, 977, 978,
	0, 0, 0, 976, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1018, 982, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 1031, 0, 265,
	1038, 266, 1037, 0, 1048, 267, 268, 269, 270, 271,
	984, 1017, 951, 272, 1077, 1078, 543, 0, 273, 274,
	1024, 0, 1005, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297,
	298, 1041, 299, 1035, 1034, 955, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 1026,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 961, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 1049, 1050, 973, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 1033, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 1046, 1047, 336, 337,
	0, 338, 1056, 0, 983, 339, 0, 340, 341, 342,
	343, 344, 1019, 1020, 1023, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 1060, 353, 1028, 1029, 0, 989, 0, 355,
	356, 1062, 1021, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 1057, 1065, 371, 372, 1066, 0,
	373, 374, 375, 1012, 1011, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 952, 248, 1069, 400, 974, 1022, 401,
	1036, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	1051, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 1052, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1032, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 962, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 1015, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 1030, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 1076, 492, 493,
	494, 495, 1053, 0, 498, 499, 950, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 1042,
	1043, 1044, 1045, 0, 514, 0, 508, 509, 1054, 510,
	1055, 972, 511, 512, 513, 0, 515, 516, 0, 956,
	517, 518, 519, 521, 522, 520, 523, 1016, 524, 0,
	0, 525, 526, 527, 582, 1039, 1075, 0, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 953, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 0, 947, 948, 0, 0, 0,
	0, 0, 0, 0, 978, 1684, 0, 2388, 976, 994,
	966, 967, 968, 964, 965, 977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 515, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 947, 948, 0, 0, 0, 0, 0, 0,
	0, 978, 0, 0, 2386, 976, 994, 966, 967, 968,
	964, 965, 977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 0, 0, 0, 0, 0, 0, 0, 978, 0,
	0, 2374, 976, 994, 966, 967, 968, 964, 965, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 951, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 955, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 952, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 962, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 950, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	956, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 582, 1039, 1075, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 953, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 947, 948, 0, 0,
	0, 0, 0, 0, 0, 978, 0, 0, 2363, 976,
	994, 966, 967, 968, 964, 965, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1018, 982, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 1031, 0, 265, 1038, 266,
	1037, 0, 1048, 267, 268, 269, 270, 271, 984, 1017,
	951, 272, 1077, 1078, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041,
	299, 1035, 1034, 955, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 1026, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 961,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 973, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 1033, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 1046, 1047, 336, 337, 0, 338,
	1056, 0, 983, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 1028, 1029, 0, 989, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 952, 248, 1069, 400, 974, 1022, 401, 1036, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1032, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	962, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 1030, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 1076, 492, 493, 494, 495,
	1053, 0, 498, 499, 950, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 1042, 1043, 1044,
	1045, 0, 514, 0, 508, 509, 1054, 510, 1055, 972,
	511, 512, 513, 0, 515, 516, 0, 956, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 1039, 1075, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 953,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 947, 948, 0, 0, 0, 0, 0,
	0, 0, 978, 0, 0, 2361, 976, 2352, 2359, 967,
	968, 964, 965, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1018, 982,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 1031, 0, 265, 1038, 266, 1037, 0, 1048,
	267, 268, 269, 270, 271, 984, 1017, 951, 272, 1077,
	1078, 543, 0, 273, 274, 1024, 0, 1005, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010,
	1009, 1013, 295, 296, 297, 298, 1041, 2355, 1035, 1034,
	955, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 1026, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 961, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 1049, 1050, 973,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 1033,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 1046, 1047, 336, 337, 0, 338, 1056, 0, 983,
	339, 0, 340, 341, 342, 2356, 344, 1019, 1020, 1023,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 1060, 353, 1028,
	1029, 0, 989, 0, 355, 356, 1062, 1021, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 1057,
	1065, 371, 372, 1066, 0, 373, 374, 375, 1012, 1011,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	2357, 2354, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 952, 248,
	1069, 400, 974, 1022, 401, 1036, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 1051, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 1052, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1032, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 962, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	2358, 0, 472, 473, 471, 474, 475, 476, 1015, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 1030, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 1076, 492, 493, 494, 495, 1053, 0, 498,
	499, 950, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 1042, 1043, 1044, 1045, 0, 514,
	0, 508, 509, 1054, 510, 1055, 972, 511, 512, 513,
	0, 515, 516, 0, 956, 517, 518, 519, 521, 522,
	520, 523, 1016, 524, 0, 0, 525, 526, 527, 582,
	1039, 1075, 0, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 2353, 534, 953, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 0,
	947, 948, 0, 0, 0, 0, 0, 0, 0, 978,
	0, 0, 2349, 976, 2352, 2359, 967, 968, 964, 965,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1018, 982, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 1031,
	0, 265, 1038, 266, 1037, 0, 1048, 267, 268, 269,
	270, 271, 984, 1017, 951, 272, 1077, 1078, 543, 0,
	273, 274, 1024, 0, 1005, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295,
	296, 297, 298, 1041, 2355, 1035, 1034, 955, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 1026, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 961, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 1049, 1050, 973, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 1033, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 1046, 1047,
	336, 337, 0, 338, 1056, 0, 983, 339, 0, 340,
	341, 342, 2356, 344, 1019, 1020, 1023, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 1060, 353, 1028, 1029, 0, 989,
	0, 355, 356, 1062, 1021, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 1057, 1065, 371, 372,
	1066, 0, 373, 374, 375, 1012, 1011, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 2357, 2354, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 952, 248, 1069, 400, 974,
	1022, 401, 1036, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 1051, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 1052,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1032, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 962, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 2358, 0, 472,
	473, 471, 474, 475, 476, 1015, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 1030, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 1076,
	492, 493, 494, 495, 1053, 0, 498, 499, 950, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 1042, 1043, 1044, 1045, 0, 514, 0, 508, 509,
	1054, 510, 1055, 972, 511, 512, 513, 0, 515, 516,
	0, 956, 517, 518, 519, 521, 522, 520, 523, 1016,
	524, 0, 0, 525, 526, 527, 582, 1039, 1075, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 2353, 534, 953, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 947, 948, 994,
	966, 967, 968, 964, 965, 977, 978, 0, 0, 0,
	976, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 515, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 947, 948, 0, 0, 0, 0, 0, 1692,
	0, 978, 0, 0, 0, 976, 994, 966, 967, 968,
	964, 965, 977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 2167,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 0, 0, 0, 0, 0, 0, 0, 978, 0,
	0, 1544, 976, 994, 966, 967, 968, 964, 965, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 951, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 955, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 952, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 962, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 950, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	956, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 582, 1039, 1075, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 953, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 947, 948, 0, 0,
	0, 0, 0, 0, 0, 978, 0, 0, 1481, 976,
	994, 966, 967, 968, 964, 965, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1018, 982, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 1031, 0, 265, 1038, 266,
	1037, 0, 1048, 267, 268, 269, 270, 271, 984, 1017,
	951, 272, 1077, 1078, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041,
	299, 1035, 1034, 955, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 1026, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 961,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 973, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 1033, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 1046, 1047, 336, 337, 0, 338,
	1056, 0, 983, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 1028, 1029, 0, 989, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 952, 248, 1069, 400, 974, 1022, 401, 1036, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1032, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	962, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 1030, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 1076, 492, 493, 494, 495,
	1053, 0, 498, 499, 950, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 1042, 1043, 1044,
	1045, 0, 514, 0, 508, 509, 1054, 510, 1055, 972,
	511, 512, 513, 0, 515, 516, 0, 956, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 1039, 1075, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 953,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 947, 948, 0, 0, 0, 0, 0,
	0, 0, 978, 0, 0, 1476, 976, 994, 966, 967,
	968, 964, 965, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1018, 982,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 1031, 0, 265, 1038, 266, 1037, 0, 1048,
	267, 268, 269, 270, 271, 984, 1017, 951, 272, 1077,
	1078, 543, 0, 273, 274, 1024, 0, 1005, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010,
	1009, 1013, 295, 296, 297, 298, 1041, 299, 1035, 1034,
	955, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 1026, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 961, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 1049, 1050, 973,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 1033,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 1046, 1047, 336, 337, 0, 338, 1056, 0, 983,
	339, 0, 340, 341, 342, 343, 344, 1019, 1020, 1023,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 1060, 353, 1028,
	1029, 0, 989, 0, 355, 356, 1062, 1021, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 1057,
	1065, 371, 372, 1066, 0, 373, 374, 375, 1012, 1011,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 952, 248,
	1069, 400, 974, 1022, 401, 1036, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 1051, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 1052, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1032, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 962, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 1015, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 1030, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 1076, 492, 493, 494, 495, 1053, 0, 498,
	499, 950, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 1042, 1043, 1044, 1045, 0, 514,
	0, 508, 509, 1054, 510, 1055, 972, 511, 512, 513,
	0, 515, 516, 0, 956, 517, 518, 519, 521, 522,
	520, 523, 1016, 524, 0, 0, 525, 526, 527, 582,
	1039, 1075, 0, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 953, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 0,
	947, 948, 0, 0, 0, 0, 0, 0, 0, 978,
	0, 0, 1467, 976, 994, 966, 967, 968, 964, 965,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1018, 982, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 1031,
	0, 265, 1038, 266, 1037, 0, 1048, 267, 268, 269,
	270, 271, 984, 1017, 951, 272, 1077, 1078, 543, 0,
	273, 274, 1024, 0, 1005, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295,
	296, 297, 298, 1041, 299, 1035, 1034, 955, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 1026, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 961, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 1049, 1050, 973, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 1033, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 1046, 1047,
	336, 337, 0, 338, 1056, 0, 983, 339, 0, 340,
	341, 342, 343, 344, 1019, 1020, 1023, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 1060, 353, 1028, 1029, 0, 989,
	0, 355, 356, 1062, 1021, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 1057, 1065, 371, 372,
	1066, 0, 373, 374, 375, 1012, 1011, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 952, 248, 1069, 400, 974,
	1022, 401, 1036, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 1051, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 1052,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1032, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 962, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 1015, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 1030, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 1076,
	492, 493, 494, 495, 1053, 0, 498, 499, 950, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 1042, 1043, 1044, 1045, 0, 514, 0, 508, 509,
	1054, 510, 1055, 972, 511, 512, 513, 0, 515, 516,
	0, 956, 517, 518, 519, 521, 522, 520, 523, 1016,
	524, 0, 0, 525, 526, 527, 582, 1039, 1075, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 953, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 947, 948, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 0, 1462,
	976, 994, 966, 967, 968, 964, 965, 977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1018, 982, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 1031, 0, 265, 1038,
	266, 1037, 0, 1048, 267, 268, 269, 270, 271, 984,
	1017, 951, 272, 1077, 1078, 543, 0, 273, 274, 1024,
	0, 1005, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 1008,
	1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298,
	1041, 299, 1035, 1034, 955, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 1026, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	961, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 1049, 1050, 973, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 1033, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 1046, 1047, 336, 337, 0,
	338, 1056, 0, 983, 339, 0, 340, 341, 342, 343,
	344, 1019, 1020, 1023, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 1060, 353, 1028, 1029, 0, 989, 0, 355, 356,
	1062, 1021, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 1057, 1065, 371, 372, 1066, 0, 373,
	374, 375, 1012, 1011, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 952, 248, 1069, 400, 974, 1022, 401, 1036,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 1051,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 1052, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1032, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 962, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 1015, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 1030, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 1076, 492, 493, 494,
	495, 1053, 0, 498, 499, 950, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 1042, 1043,
	1044, 1045, 0, 514, 0, 508, 509, 1054, 510, 1055,
	972, 511, 512, 513, 0, 515, 516, 0, 956, 517,
	518, 519, 521, 522, 520, 523, 1016, 524, 0, 0,
	525, 526, 527, 582, 1039, 1075, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	953, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 0, 947, 948, 0, 0, 0, 0,
	0, 0, 0, 978, 0, 0, 1444, 976, 994, 966,
	967, 968, 964, 965, 977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1018,
	982, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 1031, 0, 265, 1038, 266, 1037, 0,
	1048, 267, 268, 269, 270, 271, 984, 1017, 951, 272,
	1077, 1078, 543, 0, 273, 274, 1024, 0, 1005, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014,
	1010, 1009, 1013, 295, 296, 297, 298, 1041, 299, 1035,
	1034, 955, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 1026, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 961, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 1049, 1050,
	973, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	1033, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 1046, 1047, 336, 337, 0, 338, 1056, 0,
	983, 339, 0, 340, 341, 342, 343, 344, 1019, 1020,
	1023, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 1060, 353,
	1028, 1029, 0, 989, 0, 355, 356, 1062, 1021, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	1057, 1065, 371, 372, 1066, 0, 373, 374, 375, 1012,
	1011, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 952,
	248, 1069, 400, 974, 1022, 401, 1036, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 1051, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 1052, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1032, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 962, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 1015,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 1030, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 1076, 492, 493, 494, 495, 1053, 0,
	498, 499, 950, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 1042, 1043, 1044, 1045, 0,
	514, 0, 508, 509, 1054, 510, 1055, 972, 511, 512,
	513, 0, 515, 516, 0, 956, 517, 518, 519, 521,
	522, 520, 523, 1016, 524, 0, 0, 525, 526, 527,
	582, 1039, 1075, 0, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 953, 0, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 947, 948, 0, 0, 0, 0, 0, 0, 0,
	978, 0, 0, 1330, 976, 994, 966, 967, 968, 964,
	965, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1018, 982, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	1031, 0, 265, 1038, 266, 1037, 0, 1048, 267, 268,
	269, 270, 271, 984, 1017, 951, 272, 1077, 1078, 543,
	0, 273, 274, 1024, 0, 1005, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013,
	295, 296, 297, 298, 1041, 299, 1035, 1034, 955, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 1026, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 961, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 1049, 1050, 973, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 1033, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 1046,
	1047, 336, 337, 0, 338, 1056, 0, 983, 339, 0,
	340, 341, 342, 343, 344, 1329, 1020, 1023, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 1060, 353, 1028, 1029, 0,
	989, 0, 355, 356, 1062, 1021, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 1057, 1065, 371,
	372, 1066, 0, 373, 374, 375, 1012, 1011, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 952, 248, 1069, 400,
	974, 1022, 401, 1036, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 1051, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	1052, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1032, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 962, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 1015, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 1030,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	1076, 492, 493, 494, 495, 1053, 0, 498, 499, 950,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 1042, 1043, 1044, 1045, 0, 514, 0, 508,
	509, 1054, 510, 1055, 972, 511, 512, 513, 0, 515,
	516, 0, 956, 517, 518, 519, 521, 522, 520, 523,
	1016, 524, 0, 0, 525, 526, 527, 582, 1039, 1075,
	0, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 953, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 947, 948,
	0, 0, 0, 0, 0, 0, 0, 978, 0, 0,
	1324, 976, 994, 966, 967, 968, 964, 965, 977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1018, 982, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 1031, 0, 265,
	1038, 266, 1037, 0, 1048, 267, 268, 269, 270, 271,
	984, 1017, 951, 272, 1077, 1078, 543, 0, 273, 274,
	1024, 0, 1005, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297,
	298, 1041, 299, 1035, 1034, 955, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 1026,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 961, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 1049, 1050, 973, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 1033, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 1046, 1047, 336, 337,
	0, 338, 1056, 0, 983, 339, 0, 340, 341, 342,
	343, 344, 1323, 1020, 1023, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 1060, 353, 1028, 1029, 0, 989, 0, 355,
	356, 1062, 1021, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 1057, 1065, 371, 372, 1066, 0,
	373, 374, 375, 1012, 1011, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 952, 248, 1069, 400, 974, 1022, 401,
	1036, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	1051, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 1052, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1032, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 962, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 1015, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 1030, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 1076, 492, 493,
	494, 495, 1053, 0, 498, 499, 950, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 1042,
	1043, 1044, 1045, 0, 514, 0, 508, 509, 1054, 510,
	1055, 972, 511, 512, 513, 0, 515, 516, 0, 956,
	517, 518, 519, 521, 522, 520, 523, 1016, 524, 0,
	0, 525, 526, 527, 582, 1039, 1075, 0, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 953, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 0, 947, 948, 0, 0, 0,
	0, 0, 0, 0, 978, 0, 0, 1317, 976, 994,
	966, 967, 968, 964, 965, 977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 515, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 947, 948, 994, 966, 967, 968, 964, 965,
	977, 978, 0, 0, 0, 976, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1018, 982, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 1031,
	0, 265, 1038, 266, 1037, 0, 1048, 267, 268, 269,
	270, 271, 984, 1017, 951, 272, 1077, 1078, 543, 0,
	273, 274, 1024, 0, 1005, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295,
	296, 297, 298, 1041, 299, 1035, 1034, 955, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 1026, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 961, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 1049, 1050, 973, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 1033, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 1046, 1047,
	336, 337, 0, 338, 1056, 0, 983, 339, 0, 340,
	341, 342, 343, 344, 1019, 1020, 1023, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 1060, 353, 1028, 1029, 0, 989,
	0, 355, 356, 1062, 1021, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 1057, 1065, 371, 372,
	1066, 0, 373, 374, 375, 1012, 1011, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 952, 248, 1069, 400, 974,
	1022, 401, 1036, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 1051, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 1052,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1032, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 962, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 1015, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 1030, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 1076,
	492, 493, 494, 495, 1053, 0, 498, 499, 950, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 1042, 1043, 1044, 1045, 0, 514, 0, 508, 509,
	1054, 510, 1055, 972, 511, 512, 513, 0, 515, 516,
	0, 956, 517, 518, 519, 521, 522, 520, 523, 1016,
	524, 0, 0, 525, 526, 527, 582, 1039, 1075, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 953, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 947, 948, 994,
	966, 967, 968, 964, 965, 977, 978, 0, 0, 0,
	976, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 4076, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 4075, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 947, 948, 994, 966, 967, 968, 964, 965,
	977, 978, 0, 0, 0, 976, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1018, 982, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 4074, 1031,
	0, 265, 1038, 266, 1037, 0, 1048, 267, 268, 269,
	270, 271, 984, 1017, 951, 272, 1077, 1078, 543, 0,
	273, 274, 1024, 0, 1005, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 4076, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295,
	296, 297, 298, 1041, 299, 1035, 1034, 955, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 1026, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 961, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 1049, 1050, 973, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 1033, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 1046, 1047,
	336, 337, 0, 338, 1056, 0, 983, 339, 0, 340,
	341, 342, 343, 344, 1019, 1020, 1023, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 1060, 353, 1028, 1029, 0, 989,
	0, 355, 356, 1062, 1021, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 1057, 1065, 371, 372,
	1066, 0, 373, 374, 375, 1012, 1011, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 952, 248, 1069, 400, 974,
	1022, 401, 1036, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 1051, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 1052,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1032, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 962, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 1015, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 1030, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 1076,
	492, 493, 494, 495, 1053, 0, 498, 499, 950, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 1042, 1043, 1044, 1045, 0, 514, 0, 508, 509,
	1054, 510, 1055, 972, 511, 512, 513, 0, 4075, 516,
	0, 956, 517, 518, 519, 521, 522, 520, 523, 1016,
	524, 0, 0, 525, 526, 527, 582, 1039, 1075, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 953, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 947, 948, 994,
	966, 967, 968, 2769, 2770, 977, 978, 0, 0, 0,
	976, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 515, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 947, 948, 994, 966, 967, 968, 2767, 2768,
	977, 978, 0, 0, 0, 976, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1018, 982, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 1031,
	0, 265, 1038, 266, 1037, 0, 1048, 267, 268, 269,
	270, 271, 984, 1017, 951, 272, 1077, 1078, 543, 0,
	273, 274, 1024, 0, 1005, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295,
	296, 297, 298, 1041, 299, 1035, 1034, 955, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 1026, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 961, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 1049, 1050, 973, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 1033, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 1046, 1047,
	336, 337, 0, 338, 1056, 0, 983, 339, 0, 340,
	341, 342, 343, 344, 1019, 1020, 1023, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 1060, 353, 1028, 1029, 0, 989,
	0, 355, 356, 1062, 1021, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 1057, 1065, 371, 372,
	1066, 0, 373, 374, 375, 1012, 1011, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 952, 248, 1069, 400, 974,
	1022, 401, 1036, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 1051, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 1052,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1032, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 962, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 1015, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 1030, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 1076,
	492, 493, 494, 495, 1053, 0, 498, 499, 950, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 1042, 1043, 1044, 1045, 0, 514, 0, 508, 509,
	1054, 510, 1055, 972, 511, 512, 513, 0, 515, 516,
	0, 956, 517, 518, 519, 521, 522, 520, 523, 1016,
	524, 0, 0, 525, 526, 527, 582, 1039, 1075, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 953, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 947, 948, 994,
	966, 967, 968, 964, 965, 977, 978, 0, 0, 0,
	976, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 515, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 2175, 2176, 994, 966, 967, 968, 964, 965,
	977, 978, 0, 0, 0, 976, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1018, 982, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 1031,
	0, 265, 1038, 266, 1037, 0, 1048, 267, 268, 269,
	270, 271, 984, 1017, 0, 272, 1077, 1078, 543, 0,
	273, 274, 1024, 0, 1005, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295,
	296, 297, 298, 1041, 299, 1035, 1034, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 1026, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 961, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 1049, 1050, 973, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 1033, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 1046, 1047,
	336, 337, 0, 338, 1056, 0, 983, 339, 0, 340,
	341, 342, 343, 344, 1019, 1020, 1023, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 1060, 353, 1028, 1029, 0, 989,
	0, 355, 356, 1062, 1021, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 1057, 1065, 371, 372,
	1066, 0, 373, 374, 375, 1012, 1011, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 0, 248, 1069, 400, 974,
	1022, 401, 1036, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 1051, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 1052,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1032, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 962, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 1015, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 1030, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 1076,
	492, 493, 494, 495, 1053, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 1042, 1043, 1044, 1045, 0, 514, 0, 508, 509,
	1054, 510, 1055, 972, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 1016,
	524, 0, 0, 525, 526, 527, 582, 1039, 1075, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 994, 966, 967, 968, 964, 965, 977,
	2371, 0, 0, 0, 0, 0, 0, 2369, 2370, 0,
	249, 250, 251, 252, 253, 254, 978, 255, 256, 0,
	976, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 0, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 0, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 2762, 2763, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 582, 1039, 1075, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 994, 966, 967, 968, 964, 965, 977, 0,
	0, 0, 0, 0, 0, 0, 1889, 1890, 0, 249,
	250, 251, 252, 253, 254, 978, 255, 256, 0, 976,
	0, 0, 0, 1018, 982, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 0, 1031, 0, 265,
	1038, 266, 1037, 0, 1048, 267, 268, 269, 270, 271,
	984, 1017, 951, 272, 1077, 1078, 543, 0, 273, 274,
	1024, 0, 1005, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 4076,
	1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297,
	298, 1041, 299, 1035, 1034, 955, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 1026,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 961, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 1049, 1050, 973, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 1033, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 1046, 1047, 336, 337,
	0, 338, 1056, 0, 983, 339, 0, 340, 341, 342,
	343, 344, 1019, 1020, 1023, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 1060, 353, 1028, 1029, 0, 989, 0, 355,
	356, 0, 1021, 0, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 1057, 1065, 371, 372, 0, 0,
	373, 374, 375, 1012, 1011, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 952, 248, 0, 400, 974, 1022, 401,
	1036, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	1051, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 1052, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1032, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 962, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 1015, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 1030, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 1076, 492, 493,
	494, 495, 1053, 0, 498, 499, 950, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 1042,
	1043, 1044, 1045, 0, 514, 0, 508, 509, 1054, 510,
	1055, 972, 511, 512, 513, 0, 4075, 516, 0, 956,
	517, 518, 519, 521, 522, 520, 523, 1016, 524, 0,
	0, 525, 526, 527, 582, 1039, 1075, 0, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	940, 0, 1115, 0, 0, 947, 948, 0, 0, 0,
	0, 0, 0, 0, 978, 0, 0, 0, 976, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1018, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 1017, 0, 272, 541, 542, 543, 0, 273, 274,
	1024, 0, 1005, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 1049, 1050, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 551, 552, 336, 337,
	0, 338, 1056, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 1019, 1020, 1023, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 1060, 353, 558, 559, 0, 560, 0, 355,
	356, 1062, 1021, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 1101, 367,
	369, 368, 0, 370, 1057, 1065, 371, 372, 1066, 0,
	373, 374, 375, 1012, 1011, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 0, 248, 1069, 400, 0, 1022, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 1107, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	1051, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 1052, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 572, 1109, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 210, 472, 473, 471,
	474, 475, 476, 1015, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 1053, 0, 498, 499, 0, 497, 212, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 1054, 510,
	1055, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 1016, 524, 0,
	0, 525, 526, 527, 1451, 583, 584, 0, 529, 528,
	585, 0, 1115, 0, 204, 530, 531, 586, 532, 533,
	534, 0, 205, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 1105, 1018, 1778, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 1017, 0, 272, 541, 542, 543, 0, 273, 274,
	1024, 0, 1005, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 1049, 1050, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 551, 552, 336, 337,
	0, 338, 1056, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 1019, 1020, 1023, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 1060, 353, 558, 559, 0, 560, 0, 355,
	356, 1062, 1021, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 1101, 367,
	369, 368, 0, 370, 1057, 1065, 371, 372, 1066, 0,
	373, 374, 375, 1012, 1011, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 0, 248, 1069, 400, 0, 1022, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 1107, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	1051, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 1052, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 572, 1109, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 210, 472, 473, 471,
	474, 475, 476, 1015, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 1053, 0, 498, 499, 0, 497, 212, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 1054, 510,
	1055, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 1016, 524, 0,
	0, 525, 526, 527, 1451, 583, 584, 0, 529, 528,
	585, 0, 0, 0, 204, 530, 531, 586, 532, 533,
	534, 0, 205, 0, 0, 0, 2922, 0, 1115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1105, 0, 1778, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1018,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 1017, 0, 272,
	541, 542, 543, 0, 273, 274, 1024, 0, 1005, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014,
	1010, 1009, 1013, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 1049, 1050,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 551, 552, 336, 337, 0, 338, 1056, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 1019, 1020,
	1023, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 1060, 353,
	558, 559, 0, 560, 0, 355, 356, 1062, 1021, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 1101, 367, 369, 368, 0, 370,
	1057, 1065, 371, 372, 1066, 0, 373, 374, 375, 1012,
	1011, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 0,
	248, 1069, 400, 0, 1022, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 1107, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 1051, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 1052, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 572, 1109,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 1015,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 1053, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 1054, 510, 1055, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 1016, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 0, 1097, 0,
	1115, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 1105, 0,
	1103, 1018, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 1017,
	0, 272, 541, 542, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 551, 552, 336, 337, 0, 338,
	1056, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 558, 559, 0, 560, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 1101, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 0, 248, 1069, 400, 0, 1022, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 1107, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	572, 1109, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	1053, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 1054, 510, 1055, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 0,
	1115, 0, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	1105, 1018, 1103, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 1017,
	0, 272, 541, 542, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 551, 552, 336, 337, 0, 338,
	1056, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 558, 559, 0, 560, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 1101, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 0, 248, 1069, 400, 0, 1022, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 1107, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	572, 1109, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	1053, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 1054, 510, 1055, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 0,
	1115, 0, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	1105, 1018, 1103, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 1017,
	0, 272, 541, 542, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 551, 552, 336, 337, 0, 338,
	1056, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 558, 559, 0, 560, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 0, 248, 1069, 400, 0, 1022, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	572, 1109, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	1053, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 1054, 510, 1055, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 0,
	940, 0, 1300, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 1677, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 1266, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 1060, 353, 558, 559, 0, 560, 0, 355,
	356, 1062, 561, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 1065, 371, 372, 1066, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 0, 0, 1069, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 210, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 212, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 1451, 583, 584, 0, 529, 528,
	585, 0, 0, 0, 204, 530, 531, 586, 532, 533,
	534, 0, 205, 0, 0, 0, 1448, 0, 1300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 1266, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 1060, 353,
	558, 559, 0, 560, 0, 355, 356, 1062, 561, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 1065, 371, 372, 1066, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 0,
	0, 1069, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 210, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 212, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	1451, 583, 584, 0, 529, 528, 585, 0, 0, 0,
	204, 530, 531, 586, 532, 533, 534, 0, 205, 0,
	0, 0, 0, 0, 1300, 1299, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 274, 544, 0, 1266, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 0,
	351, 352, 354, 0, 1060, 353, 558, 559, 0, 560,
	0, 355, 356, 1062, 561, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 1065, 371, 372,
	1066, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 0, 0, 1069, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 1300, 1299, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 1473, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 1266, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 1060, 353, 558, 559, 0, 560, 0,
	355, 356, 1062, 561, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 1065, 371, 372, 1066,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 0, 0, 1069, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 1300, 1299, 0, 0, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 3171, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 1266, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 1060, 353, 558, 559, 0, 560, 0, 355,
	356, 1062, 561, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 1970,
	369, 368, 0, 370, 562, 1065, 371, 372, 1066, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 0, 0, 1069, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 1300, 1299, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 1473, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 1266, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 1060, 353, 558, 559, 0, 560, 0, 355, 356,
	1062, 561, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 1065, 371, 372, 1066, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 0, 0, 1069, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	1115, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1018, 0, 1457, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 1017,
	0, 272, 541, 542, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 551, 552, 336, 337, 0, 338,
	1056, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 558, 559, 0, 560, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 0, 248, 1069, 400, 0, 1022, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	1053, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 1054, 510, 1055, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 940,
	0, 243, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 210, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 212, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 1451, 583, 584, 0, 529, 528, 585,
	243, 0, 0, 204, 530, 531, 586, 532, 533, 534,
	0, 205, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 174, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 248, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 0,
	1391, 0, 243, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 1792, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 248, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 0, 243, 2685, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 1395, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 0, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 243, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 4226, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 3115, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 248, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 1395, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	243, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 2656, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 0, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 0, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 243,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 3272, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 0, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 0, 789,
	0, 672, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 2071, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 679, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 787, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 677, 500, 501,
	502, 503, 678, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	0, 670, 0, 672, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 682, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	679, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 248, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 677,
	500, 501, 502, 503, 678, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 672, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 682, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 679, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 677, 500, 501, 502, 503, 678,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 672, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 682, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	679, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 248, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 2110,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 677,
	500, 501, 502, 503, 678, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 672, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 682, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 679, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 677, 500, 501, 502, 503, 678,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	1853, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 672, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 682, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	679, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 248, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 677,
	500, 501, 502, 503, 678, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 1807, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 1828, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 682, 0,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 0, 1834, 0, 265, 1824, 266, 1840, 0,
	1847, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	1850, 1851, 0, 0, 273, 274, 0, 0, 1266, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 1041, 299, 1838,
	1837, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 1026, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	1836, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 1845, 1846, 336, 337, 0, 338, 0, 0,
	0, 339, 0, 340, 341, 342, 343, 344, 0, 0,
	0, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 1060, 353,
	1831, 1832, 0, 1827, 0, 355, 356, 1062, 0, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	0, 1065, 371, 372, 1066, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 0,
	0, 1069, 400, 0, 0, 401, 1839, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 0, 1070, 412, 1071, 0, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 1821, 1822, 0, 425, 0, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1835, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 0, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 1833, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 1849, 492, 493, 494, 495, 0, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 1841, 1842, 1843, 1844, 0,
	514, 0, 508, 509, 0, 510, 0, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	0, 1825, 1848, 0, 529, 528, 0, 0, 0, 0,
	0, 530, 531, 0, 532, 533, 534, 1300, 1299, 0,
	0, 0, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 1815, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 1266, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 0, 351, 352, 354, 0, 1060, 353, 558,
	559, 0, 560, 0, 355, 356, 1062, 561, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	1065, 371, 372, 1066, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 0, 0,
	1069, 400, 3438, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 1300, 1299, 0, 0,
	0, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 1266, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 1060, 353, 558, 559,
	0, 560, 0, 355, 356, 1062, 561, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 1065,
	371, 372, 1066, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 0, 0, 1069,
	400, 3088, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 0, 529, 528, 585, 1300, 1299, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 1266, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 0, 0, 0, 0, 0, 0, 3029,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	0, 351, 352, 354, 0, 1060, 353, 558, 559, 0,
	560, 0, 355, 356, 1062, 561, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 1065, 371,
	372, 1066, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 0, 0, 1069, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 3030, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	243, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 248, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 1501,
	0, 1300, 1299, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 682, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 1266, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	1500, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 1060, 353, 558, 559, 0, 560, 0, 355, 356,
	1062, 561, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 1065, 371, 372, 1066, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 0, 0, 1069, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 1499,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 1498, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	1441, 0, 1300, 1299, 0, 0, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 1266, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 1440, 556, 557, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 1060, 353, 558, 559, 0, 560, 0, 355,
	356, 1062, 561, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 1065, 371, 372, 1066, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 0, 0, 1069, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 1370, 0, 1300, 1299, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 1266, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 1369, 556, 557, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 1060, 353, 558, 559, 0, 560, 0,
	355, 356, 1062, 561, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 1065, 371, 372, 1066,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 0, 0, 1069, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 1335, 0, 1300, 1299, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 274, 544, 0, 1266, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 0,
	351, 352, 354, 0, 1060, 353, 558, 559, 0, 560,
	0, 355, 356, 1062, 561, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 1065, 371, 372,
	1066, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 0, 0, 1069, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 1295, 0, 1300, 1299, 0, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 1266, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 1294, 556, 557, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	0, 351, 352, 354, 0, 1060, 353, 558, 559, 0,
	560, 0, 355, 356, 1062, 561, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 1065, 371,
	372, 1066, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 0, 0, 1069, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	0, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 1300, 1299, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 274, 544, 0, 1266, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 0,
	351, 352, 354, 0, 1060, 353, 558, 559, 0, 560,
	0, 355, 356, 1062, 561, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 1065, 371, 372,
	1066, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 0, 0, 1069, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 1300, 1299, 0, 0, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 1266, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 1862, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 1060, 353, 558, 559, 0, 560, 0,
	355, 356, 1062, 561, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 1065, 371, 372, 1066,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 0, 0, 1069, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 1300, 1299, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 1266, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 1060, 353, 558, 559, 0, 560, 0, 355,
	356, 1062, 561, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 1065, 371, 372, 1066, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 0, 0, 1069, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 1300, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 1266, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 0, 351, 352, 354, 0, 1060, 353, 558,
	559, 0, 560, 0, 355, 356, 1062, 561, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	1065, 371, 372, 1066, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 0, 0,
	1069, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 243, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 2506, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 2503, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 2510,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 2698, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 2509, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 2695, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	2697, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 2694, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 0, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 2508, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 2696,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 243, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 2506, 273, 274, 544, 0, 0, 2500, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 2503, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 2510, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 2509, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 2499, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 0, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 0,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 2508, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 2507, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 1566, 0, 243, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 1569, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 1567, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 1568, 528, 585, 1270, 0, 243,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 1272,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 248, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 1107, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 1267, 0,
	243, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	1269, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 248, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 1107, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 1173,
	0, 243, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 1175, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 1107, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	618, 0, 243, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 617, 253, 254, 607, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 610, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	611, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 0, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 612, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 606, 0, 243, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 607, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 610, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 611, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 612, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 1107, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 3051, 395, 0, 248, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 2627, 0, 243, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 274, 544, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 0,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 0, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 2626, 556, 557, 402, 0, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 0, 353, 558, 559, 0, 560,
	0, 355, 356, 0, 561, 0, 357, 358, 359, 0,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 0, 371, 372,
	0, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 0, 392, 393, 394, 398,
	397, 399, 396, 0, 395, 0, 248, 0, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 0,
	412, 0, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 0,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 0, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 2084, 0, 243, 0, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 248, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	243, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 248, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 2001, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 2006,
	0, 243, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 2005, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	1994, 0, 243, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 1996, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 248, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 243, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 1968, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 248,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 1107, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 1433, 0, 243, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 1432, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 1424, 0, 243,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 1423,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 248, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 1421, 0,
	243, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	1420, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 248, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 1416,
	0, 243, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 1415, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	1373, 0, 243, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 248, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 1288, 0, 243, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 248, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 1281, 0, 243, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 274, 544, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 0,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 0, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 1283, 556, 557, 402, 0, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 0, 353, 558, 559, 0, 560,
	0, 355, 356, 0, 561, 0, 357, 358, 359, 0,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 0, 371, 372,
	0, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 0, 392, 393, 394, 398,
	397, 399, 396, 0, 395, 0, 248, 0, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 0,
	412, 0, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 0,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 0, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 588, 0, 243, 0, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 248, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	0, 529, 528, 585, 234, 0, 243, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 248, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 610,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 611, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	612, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 2117, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 2115, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 248, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 2113, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 2049, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 248, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 2043, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 2012, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 248, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 0, 529, 528, 585, 776, 0, 243, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 0, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 775, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 0,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 774, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 243, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 2698, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 0, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 3693, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 597, 0, 243, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 596, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 595, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 243, 2685, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 0, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 243, 3703, 0, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 3412,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 2422, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	243, 2685, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 0, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 0, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 2682,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 243, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 2094, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	0, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 0, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	0, 529, 528, 585, 2082, 0, 243, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 0, 529, 528, 585, 640, 0, 243, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 1147, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 1145, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 0, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 641, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 0,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 637, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 1148, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 636, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 640, 0, 243, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 630, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 641, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 637, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 1456, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 636, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 1437, 0, 243,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 1436,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 0, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 1430, 0,
	243, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	1429, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 0, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 0, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 1379,
	0, 243, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 1378, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	1364, 0, 243, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 1363, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 0, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 1359, 0, 243, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 1291, 0, 243, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 274, 544, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 0,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 0, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 0, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 0,
	351, 352, 354, 0, 0, 353, 558, 559, 0, 560,
	0, 355, 356, 0, 561, 0, 357, 358, 359, 0,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 0, 371, 372,
	0, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 0, 392, 393, 394, 398,
	397, 399, 396, 0, 395, 0, 0, 0, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 0,
	412, 0, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 0,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 0, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 1275, 0, 243, 0, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	0, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 0, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	0, 529, 528, 585, 640, 0, 243, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 1147, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	1145, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 641, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 637, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 1148, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 636, 577, 578, 579, 0, 514, 0,
	508, 1146, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 1128, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 646,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 0, 529, 528, 585, 640, 0, 243, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 630, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 628, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 0, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 629, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 641, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 0,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 631, 456, 0,
	457, 458, 464, 465, 459, 460, 637, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 632, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 636, 577, 578, 579, 0, 514,
	0, 508, 634, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 622, 0, 243, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 623, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 620, 0, 243,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 0, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 614, 0,
	243, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 0, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 0, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 592,
	0, 243, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 3132, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 3082, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 3020, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 3018, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 3004, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 2636, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 623, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 2029,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 0, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 1401, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 1342, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 243, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 1080, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 243, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 0,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	0, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 0, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 0, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 0, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 1611, 1612, 0, 1644, 1645,
	1646, 1654, 1655, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 1642, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 0, 0, 0, 1611,
	1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	1647, 1642, 0, 0, 0, 0, 0, 1633, 1614, 0,
	0, 0, 0, 0, 0, 1630, 1660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 1636, 1637, 1638, 1639, 0, 0, 0,
	0, 0, 0, 1619, 1647, 1642, 0, 0, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1661, 0, 1636, 1637, 1638,
	1639, 1641, 1643, 0, 0, 1613, 0, 1619, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 1657, 0, 1658,
	0, 0, 0, 1630, 0, 0, 1628, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 1651, 0, 0, 1661,
	0, 0, 0, 0, 1649, 1641, 1643, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 1657, 0, 1658, 0, 0, 0, 0, 0, 0,
	1628, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 0, 0, 0, 0, 0, 1649, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 0, 1648, 1634,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	1651, 0, 0, 1661, 0, 0, 0, 0, 0, 1641,
	1643, 0, 1648, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 1640, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 0, 0, 1652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 1640, 0,
	0, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 1635, 0,
	0, 0, 0, 0, 0, 2846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 1652, 0, 1625, 1626, 1632, 1653, 1631,
	1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 2845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 1642, 0, 0, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 0, 0, 1650, 0, 0, 0, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 1613, 0, 0, 0, 0,
	0, 0, 0, 2844, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645,
	1646, 1654, 1655, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 1642, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0,
	0, 1619, 0, 0, 0, 1630, 0, 1611, 1612, 0,
	1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1642,
	1651, 0, 0, 1661, 0, 0, 1614, 0, 0, 1641,
	1643, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 1613,
	0, 0, 0, 1636, 1637, 1638, 1639, 0, 0, 1633,
	0, 0, 1649, 1619, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1661, 0, 0, 0, 1659,
	0, 1641, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 1657, 0, 1658,
	0, 0, 0, 0, 0, 0, 1628, 1629, 0, 0,
	0, 0, 0, 0, 0, 1636, 1637, 1638, 1639, 0,
	0, 0, 0, 0, 1649, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 1651, 0, 0, 1661, 0, 0,
	0, 1659, 0, 1641, 1643, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 1657,
	0, 1658, 0, 0, 0, 0, 0, 0, 1628, 1629,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 0,
	0, 0, 1640, 2276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 1642, 0, 1652, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 1650, 0, 0,
	1660, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0,
	0, 4017, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645,
	1646, 1654, 1655, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 1642, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 1650,
	0, 0, 1660, 1625, 1626, 1632, 1653, 1631, 1627, 0,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 4013, 0, 0, 0, 1613, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0,
	0, 1619, 0, 0, 0, 1630, 0, 1611, 1612, 0,
	1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1642,
	1651, 0, 0, 1661, 0, 0, 1614, 0, 0, 1641,
	1643, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 1613,
	0, 0, 0, 1636, 1637, 1638, 1639, 0, 0, 1633,
	0, 0, 1649, 1619, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1661, 0, 0, 0, 1659,
	0, 1641, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 1657, 0, 1658,
	0, 0, 0, 0, 0, 0, 1628, 1629, 0, 0,
	0, 0, 0, 0, 0, 1636, 1637, 1638, 1639, 0,
	0, 0, 0, 0, 1649, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 1651, 0, 0, 1661, 0, 0,
	0, 1659, 0, 1641, 1643, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 1657,
	0, 1658, 0, 0, 0, 0, 0, 0, 1628, 1629,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 3923,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 1642, 0, 1652, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 1650, 0, 0,
	1660, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0,
	0, 3922, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645,
	1646, 1654, 1655, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 1642, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 1650,
	0, 0, 1660, 1625, 1626, 1632, 1653, 1631, 1627, 0,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 3770, 0, 0, 0, 1613, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0,
	0, 1619, 0, 0, 0, 1630, 0, 1611, 1612, 0,
	1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1642,
	1651, 0, 0, 1661, 0, 0, 1614, 0, 0, 1641,
	1643, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 1613,
	0, 0, 0, 1636, 1637, 1638, 1639, 0, 0, 1633,
	0, 0, 1649, 1619, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1661, 0, 0, 0, 1659,
	0, 1641, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 1657, 0, 1658,
	0, 0, 0, 0, 0, 0, 1628, 1629, 0, 0,
	0, 0, 0, 0, 0, 1636, 1637, 1638, 1639, 0,
	0, 0, 0, 0, 1649, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 1651, 0, 0, 1661, 0, 0,
	0, 1659, 0, 1641, 1643, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 1657,
	0, 1658, 0, 0, 0, 0, 0, 0, 1628, 1629,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 3632,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 1642, 0, 1652, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 1650, 0, 0,
	1660, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0,
	0, 3576, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645,
	1646, 1654, 1655, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 1642, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 1650,
	0, 0, 1660, 1625, 1626, 1632, 1653, 1631, 1627, 0,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 3575, 0, 0, 0, 1613, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0,
	0, 1619, 0, 0, 0, 1630, 0, 1611, 1612, 0,
	1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1642,
	1651, 0, 0, 1661, 0, 0, 1614, 0, 0, 1641,
	1643, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 1613,
	0, 0, 0, 1636, 1637, 1638, 1639, 0, 0, 1633,
	0, 0, 1649, 1619, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1661, 0, 0, 0, 1659,
	0, 1641, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 1657, 0, 1658,
	0, 0, 0, 0, 0, 0, 1628, 1629, 0, 0,
	0, 0, 0, 0, 0, 1636, 1637, 1638, 1639, 0,
	0, 0, 0, 0, 1649, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 1651, 0, 0, 1661, 0, 0,
	0, 1659, 0, 1641, 1643, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 1657,
	0, 1658, 0, 0, 0, 0, 0, 0, 1628, 1629,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 3574,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 1642, 0, 1652, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 1650, 0, 0,
	1660, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0,
	0, 3277, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645,
	1646, 1654, 1655, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 1642, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 1650,
	0, 0, 1660, 1625, 1626, 1632, 1653, 1631, 1627, 0,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 2842, 0, 0, 0, 1613, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0,
	0, 1619, 0, 0, 0, 1630, 0, 1611, 1612, 0,
	1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1642,
	1651, 0, 0, 1661, 0, 0, 1614, 0, 0, 1641,
	1643, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 1613,
	0, 0, 0, 1636, 1637, 1638, 1639, 0, 0, 1633,
	0, 0, 1649, 1619, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1661, 0, 0, 0, 1659,
	0, 1641, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 1657, 0, 1658,
	0, 0, 0, 0, 0, 0, 1628, 1629, 0, 0,
	0, 0, 0, 0, 0, 1636, 1637, 1638, 1639, 0,
	0, 0, 0, 0, 1649, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 1651, 0, 0, 1661, 0, 0,
	0, 1659, 0, 1641, 1643, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 1657,
	0, 1658, 0, 0, 0, 0, 0, 0, 1628, 1629,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 2841,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 1642, 0, 1652, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 1650, 0, 0,
	1660, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0,
	0, 2840, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645,
	1646, 1654, 1655, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 1642, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 1650,
	0, 0, 1660, 1625, 1626, 1632, 1653, 1631, 1627, 0,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 2839, 0, 0, 0, 1613, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0,
	0, 1619, 0, 0, 0, 1630, 0, 1611, 1612, 0,
	1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1642,
	1651, 0, 0, 1661, 2777, 0, 1614, 0, 0, 1641,
	1643, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 1613,
	0, 0, 0, 1636, 1637, 1638, 1639, 0, 0, 1633,
	0, 0, 1649, 1619, 4139, 0, 0, 1630, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1661, 0, 0, 0, 1659,
	2778, 1641, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 1657, 0, 1658,
	0, 0, 0, 0, 0, 0, 1628, 1629, 0, 0,
	0, 0, 0, 0, 0, 1636, 1637, 1638, 1639, 0,
	0, 0, 0, 0, 1649, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 1651, 0, 0, 1661, 0, 0,
	0, 1659, 0, 1641, 1643, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 1657,
	0, 1658, 0, 0, 0, 0, 0, 0, 1628, 1629,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4138, 0, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 2806, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 1642, 0, 1652, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 1650, 0, 0,
	1660, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 2396, 0,
	0, 0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645,
	1646, 1654, 1655, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 1642, 0, 0,
	0, 2395, 0, 0, 1614, 0, 0, 0, 0, 1650,
	0, 0, 1660, 1625, 1626, 1632, 1653, 1631, 1627, 0,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0,
	0, 1619, 0, 2902, 0, 1630, 2901, 1611, 1612, 0,
	1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1642,
	1651, 0, 0, 1661, 0, 0, 1614, 0, 0, 1641,
	1643, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 1613,
	0, 0, 0, 1636, 1637, 1638, 1639, 0, 0, 1633,
	0, 0, 1649, 1619, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1661, 0, 0, 0, 1659,
	0, 1641, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 1657, 0, 1658,
	0, 0, 0, 0, 0, 0, 1628, 1629, 0, 0,
	0, 0, 0, 0, 0, 1636, 1637, 1638, 1639, 0,
	0, 0, 0, 0, 1649, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 1651, 0, 0, 1661, 0, 0,
	0, 1659, 0, 1641, 1643, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 1657,
	0, 1658, 0, 0, 0, 0, 0, 0, 1628, 1629,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 1642, 0, 1652, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 1650, 0, 0,
	1660, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645,
	1646, 1654, 1655, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 1642, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 1650,
	0, 0, 1660, 1625, 1626, 1632, 1653, 1631, 1627, 0,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0,
	0, 1619, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1651, 0, 0, 1661, 0, 0, 0, 0, 0, 1641,
	1643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 0,
	0, 0, 0, 1636, 1637, 1638, 1639, 0, 0, 0,
	0, 0, 1649, 1619, 0, 0, 0, 0, 2908, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 1661, 0, 0, 0, 1659,
	0, 1641, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 1657, 0, 1658,
	0, 0, 0, 0, 0, 0, 1628, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 0, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 1642, 0, 0, 0, 2903, 0, 0, 1614,
	1640, 3258, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 1652, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 1650, 0, 0, 0, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	0, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 1651, 0, 0,
	1661, 0, 0, 0, 0, 0, 1641, 1643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 1611, 1612, 0, 1644,
	1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0, 1649,
	0, 0, 0, 0, 0, 0, 0, 1647, 1642, 0,
	1634, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 0, 0, 1648, 0, 0, 0, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 1642, 0, 0, 1640, 2843, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 1637, 1638, 1639, 0, 0,
	0, 0, 1613, 0, 1619, 0, 0, 0, 0, 0,
	1652, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1651, 0, 0, 1661, 0, 0, 0,
	0, 0, 1641, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 0,
	1658, 0, 0, 0, 0, 0, 0, 1628, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 0, 0, 1634, 0, 1619, 0,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 1659, 0, 0, 0, 0, 1651, 0, 0,
	1661, 0, 0, 0, 0, 0, 1641, 1643, 0, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 2870,
	0, 1628, 1629, 0, 0, 0, 1611, 1612, 0, 1644,
	1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0, 1649,
	0, 0, 0, 0, 0, 0, 0, 1647, 1642, 0,
	1634, 1640, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 1659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 0, 0, 1648, 0, 0, 1652, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 1637, 1638, 1639, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 1650, 0,
	1652, 0, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624,
	1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0,
	0, 0, 0, 1651, 0, 0, 1661, 0, 0, 0,
	0, 0, 1641, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 831, 1657, 873,
	1658, 0, 0, 0, 0, 0, 0, 1628, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 839, 0, 0, 1649, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 852, 837,
	836, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 1659, 0, 0, 0, 838, 0, 0, 0,
	0, 841, 0, 0, 0, 0, 881, 0, 0, 1648,
	0, 0, 0, 0, 849, 850, 0, 0, 0, 0,
	0, 0, 866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 874, 843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 844, 0, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 0, 0, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1652, 0, 845, 0,
	0, 0, 0, 0, 0, 0, 835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 846, 847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 854, 853, 0, 0, 0, 0, 0, 0,
	848, 0, 0, 0, 863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1650, 875,
	0, 0, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624,
	1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 842, 0, 0, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 840, 0, 0, 0, 870, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 868, 0, 0, 0,
	0, 0, 0, 879, 864, 0, 857, 855, 0, 860,
	0, 0, 0, 0, 0, 861, 0, 0, 833, 0,
	876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 862, 0, 0, 0, 0, 859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 877, 0, 0, 0,
	0, 0, 0, 0, 865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 869,
}
var sqlPact = [...]int{

	7540, -1000, -1000, -1000, -1000, 264, -1000, -1000, 260, 259,
	258, 254, 253, 252, 249, 248, 244, -1000, -1000, -1000,
	-1000, -1000, -1000, 242, -1000, -1000, 238, -1000, 235, 231,
	230, -1000, -1000, 218, -1000, 214, -1000, -1000, -1000, -1000,
	213, 211, 210, 76212, 75731, 76687, 2146, 92957, 81449, 2018,
	68059, 92476, 67578, 91995, 91514, 2538, 201, -1000, 91033, 199,
	192, 187, -1000, 90552, -1000, 1783, -1000, 186, 3979, 55539,
	185, 184, 183, 2579, 182, -1000, 181, 180, -1000, 7085,
	1463, -1000, 178, 177, -1000, 4235, 512, 80493, 171, 169,
	2140, 165, 164, 55057, 163, 159, 2017, 2726, -1000, -1000,
	1946, -1000, -1000, 157, 154, 153, 148, 141, 137, 136,
	135, 134, 132, -1000, 131, 130, 126, 124, 122, 121,
	115, 113, -1000, 111, 110, 109, 108, 107, 105, 103,
	101, 100, 99, 97, 95, -1000, 105065, 89, 1855, 1670,
	1609, 1606, 1605, 1593, 1034, 88, 86, 85, 83, 81,
	80, 79, 78, 77, -1000, 75, 73, 70, 68, 67,
	66, 65, 59, 161, 58, 57, 56, 50, 47, 44,
	38, 2118, -1000, 1542, 1038, 26069, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 98657, 93432, 36, -23, 29, -1000,
	3072, 1019, 45886, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 357,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 552,
	2054, 796, -1000, -1000, -1000, 90077, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2145, -6, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 795, -1000, 2143, 147, 2103, -1000, -1000,
	-1000, -1000, -1000, 93432, -1000, 1073, -1000, -1000, 3531, 3530,
	1945, 792, 89602, -1000, 1459, -1000, 963, 27584, -1000, 1238,
	-1000, 27584, 344, -1000, -1000, -1000, -1000, -1000, -1000, 3529,
	3527, 3525, 3520, -1000, -1000, 67097, 19955, 66616, 66135, 89121,
	19464, 75250, 74769, 88640, 62301, 1072, -1000, -1000, -1000, 1395,
	-1000, -1000, -1000, -1000, -1000, -1000, 3, 59846, 3310, 93432,
	-1000, 342, -1000, -1000, -1000, -1000, -1000, -1000, 39415, 833,
	38898, 720, 38381, 599, -1000, -1000, -1000, 61810, -1000, 3519,
	3517, 1142, 3516, 3014, 98182, 1773, 3515, 1856, 1226, 3514,
	3513, 3510, 3509, 3506, 3504, 1442, 88159, 2794, 87678, 1642,
	61319, 1071, 74288, 76687, 2515, 87197, 1432, 1419, -1000, -1000,
	-1000, -1000, 2903, 2719, 2704, 51708, -1000, -1000, 3502, 3497,
	3496, 3495, 3493, 97707, 1757, 3492, 2358, 3491, 3489, 3488,
	3483, 3482, 3480, 3478, -1000, 73807, 1070, 73326, 72845, 3148,
	86716, 72364, 86235, 60828, 37864, 894, -1000, -1000, -1000, 47824,
	6557, 5871, 85754, 49787, 76687, 76687, -1000, -1000, -1000, -1000,
	-1000, 37347, 757, 36830, 837, -1000, -1000, 48320, 2759, -1000,
	-1000, -1000, -1000, 36313, 646, 35796, 593, 93432, -1000, 2792,
	1830, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2123, 1577, 3331, 2566, 60337, 1936, 1408,
	3074, 2897, 2866, 1464, 3449, 2412, 2864, 2863, 2860, 2855,
	2854, 1746, 2428, 500, 25552, 2782, 1755, 35279, 1462, 1515,
	2834, 2831, 3350, 1966, 1883, 1877, 65654, 3438, 3437, 3044,
	2830, 2810, 2756, -1000, -1000, -1000, -1000, 1435, -1000, -1000,
	-1000, -1000, -1000, 68534, -1000, -1000, 1239, -1000, -1000, 1239,
	-1000, -1000, -1000, -1000, -1000, 1365, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1542, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2040, -1000,
	1941, -1000, -1000, 2603, 3019, 3019, 3019, 3108, 521, 519,
	-1000, 161, -1000, -1000, 104845, -1000, -1000, 39920, 39920, 39920,
	39920, 39920, 39920, 39920, 2055, -1000, 788, -1000, -1000, 840,
	-1000, 786, 648, -1000, -1000, -1000, -1000, -1000, -1000, 785,
	-1000, -1000, -1000, -1000, -1000, -1000, 3310, -1000, 22462, -1000,
	-1000, -1000, 504, 783, 39920, -1000, -1000, 3365, 3364, 1030,
	-1000, 341, 970, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2789, 776, 775, -1000, 773,
	770, 769, 768, 767, -1000, -1000, -1000, 765, 763, 762,
	761, 760, 758, 756, 748, -1000, 2004, -1000, -1000, -1000,
	-1000, -1000, -1000, 708, 707, 707, 707, -1000, 1066, -1000,
	-1000, -1000, 425, 702, 348, 701, 700, 697, -1000, 745,
	744, 743, 737, 733, 731, 730, 729, 728, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1064, -1000, -1000, -1000, -1000, 1,
	93432, -1000, 552, 1, -1000, -1000, 726, -1000, 29616, 29616,
	29616, -1000, -1000, 2139, 39920, -1000, 2965, -1000, 10, 10,
	936, 46846, -1000, 44908, 936, 461, 681, 51226, -1000, 2753,
	-1000, -1000, 725, 339, -1000, -1000, -1000, -1000, 20444, 2752,
	93432, 93432, 76687, 76687, 76687, 2954, 39920, -1000, -1000, 57439,
	93432, 77162, 3268, 57914, 56964, 93432, 2788, -1000, 3047, -1000,
	-1000, 93432, -1000, 39920, -1000, 3267, 1447, 63269, 3174, -24,
	-1000, -1000, -1000, -1000, -1000, -1000, 2298, 2292, 1184, 2171,
	1840, -1000, 27584, 3005, -1000, -1000, -1000, 332, 20444, -1000,
	-1000, -1000, -1000, -1000, 2791, 2926, 1372, -1000, 2164, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1782, 2924,
	-1000, 3075, 2922, 1745, -1000, -1000, 2243, -1000, -1000, 3035,
	-1000, -1000, 1812, 2920, 11, -1000, -1000, 2188, -1000, -1000,
	1996, -1000, -1000, 1010, 2919, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 71883, 49298, 48320, 59846, -3, -1000,
	-1000, -1000, -1000, -58, -1000, 18973, 104845, -1000, -1000, -1000,
	-1000, 1857, 104845, 908, -1000, -1000, 2918, -1000, 104845, 898,
	-1000, -1000, 2917, -1000, 2785, -1000, -1000, -1000, -1000, 3433,
	-1000, 3432, 2227, 3426, 3425, 3423, -1000, 1674, 1981, 3421,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 71408, 2135, -1000,
	-1000, 70446, -1000, 2225, -1000, 70927, 1069, -1000, 1010, 2224,
	-1000, 80012, 1000, -1000, 3420, 3142, 2543, 1010, 2223, -1000,
	-1000, -1000, -1000, -1000, 53142, -1000, 53142, -1000, 53142, -1000,
	1505, -1000, 97232, 10, 10, 3310, -1000, -1000, -1000, -1000,
	-1000, 2916, 3417, 3415, 3414, -1000, 93432, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 198, 2915, -1000, -1000, 79537, 198,
	2914, -1000, 198, 2913, -1000, 79062, -1000, -1000, 2179, 2912,
	-1000, 205, 2909, -1000, -1000, 204, 2908, -1000, -1000, -116,
	2907, -1000, -1000, 104845, -1000, -1000, -1000, -8, -1000, -1000,
	-1000, 1019, -1000, 47328, -1000, 47328, 85273, 62790, 987, 749,
	54575, 104845, -1000, -1000, -1000, -1000, 104845, -1000, -1000, -1000,
	-122, -1000, -1000, 62790, 48320, 104845, -1000, -1000, -1000, -1000,
	104845, -1000, -1000, -1000, 62790, 70446, -1000, 84792, 69971, -1000,
	-1000, 1407, 2434, -1000, -1000, -1000, 62790, 1287, 62790, 62790,
	62790, -1000, 84311, -1000, -1000, 1942, 1568, 3041, 1904, 76687,
	-1000, 1779, -1000, -1000, -1000, 3062, -1000, 2784, -1000, 56489,
	78587, -1000, 78112, -1000, 77637, -1000, 76687, -1000, 76687, -1000,
	3413, 3412, 3410, -1000, 3409, 3055, -1000, 104845, 3051, -1000,
	3408, 3154, 2782, 104845, -1000, 2821, 1673, 1649, 93432, -1000,
	-1000, 93432, -1000, 93432, -1000, -1000, -1000, 1474, -1000, -1000,
	2297, -1000, -1000, -1000, -1000, 76687, -1000, -1000, -1000, -1000,
	-1000, -1000, 2778, -1000, 1705, -1000, 1775, -1000, 1398, -1000,
	-1000, 207, -1000, -1000, -24, -1000, 96757, -1000, 2603, -1000,
	93432, -1000, 2427, 2766, 2777, 1472, 2152, 2374, -1000, 34762,
	2373, 42445, 2160, 161, -1000, -1000, 161, 161, 27079, -1000,
	-1000, 57914, 57914, 20444, 1386, 39920, 39920, 39920, 39920, 39920,
	39920, 39920, 39920, 39920, 39920, 39920, 39920, 39920, 39920, 39920,
	39920, 39920, 39920, 39920, 39920, 39920, 39920, 39920, 39920, 39920,
	39920, 39920, 39920, 39920, 39920, 39920, 39920, 39920, 39920, 39920,
	2235, 39920, 1358, 39920, 39920, 39920, 39920, 2003, -1000, -1000,
	1865, 580, 2030, -1000, 3312, 3312, 3312, 674, 674, 12838,
	12838, 643, 3407, 840, -1000, 39920, -1000, 176, 39920, 20935,
	-1000, 519, 8371, 2332, -1000, 515, 21452, -1000, -1000, -1000,
	22462, 648, 34245, 39920, 1050, 104845, -1000, -1000, 1574, 3328,
	18484, 2807, 2612, 723, 843, 721, 25035, 24518, 24001, 23484,
	621, 39920, 39920, 39920, 39920, 39920, 39920, 39920, 39920, -1000,
	-1000, 3340, -1000, 3328, -1000, -1000, -1000, -1000, 3328, 1385,
	1378, 3328, -1000, 3328, 3328, 2589, 2589, 33740, 33223, 32706,
	42950, 32189, 39920, 22967, 31672, 31155, -1000, 93432, 1, 3265,
	39920, 138, -1000, 103454, -1000, 138, 138, 719, -10, 104845,
	2422, 2422, 46366, 2393, 2065, 2065, 2065, -1000, 936, 14543,
	936, 83357, 2072, 936, 936, 322, 360, 514, 44428, 2965,
	83357, 815, 718, 27, 26, 20, -1000, -1000, 19, 13,
	-1000, -1000, 76687, 716, 20935, 20444, 319, 1460, -11, 2481,
	2470, 2462, -1000, 2456, 1806, -13, 1348, 76687, -67, -1000,
	5711, -18, -1000, 1292, 314, 3328, -1000, -1000, -1000, -1000,
	-1000, 3405, 3404, -1000, 1053, 715, 714, 379, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 708, 707, 707, 707,
	-1000, 425, 702, 348, 701, 700, 697, -1000, -1000, -1000,
	-1000, -1000, 2741, 76687, -58, 77162, 76687, 926, -27, 1152,
	-24, -1000, -1000, -1000, 63269, 1239, -1000, 1916, -1000, -1000,
	-1000, -1000, -1000, -1000, 1411, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1030, -1000, -1000, -1000, -1000, -1000, -1000, 3320,
	3318, 0, -1000, -1000, 20444, -1000, -30, 1678, 1706, -1000,
	65173, 2268, 3046, 3026, 1502, -1000, 1467, 1343, 3101, 68534,
	3226, 3260, 764, -1000, 2739, -1000, -1000, 958, 1679, 1697,
	1341, 68534, 3075, -1000, 57914, -1000, 2464, 3100, 1361, 1355,
	1361, 1361, 1353, -1000, 68534, 1690, 1340, 1338, -1000, 1335,
	1332, -1000, -38, 3210, 3245, 117, -1000, 2738, 1324, -1000,
	-1000, 76687, 20444, 1520, 1532, 1633, 1323, -1, -1000, 3215,
	3212, 1320, 1317, -1000, 1985, -1000, 62790, 1675, 2906, 902,
	2565, 902, -3, 59846, 93432, 313, -1000, 176, 39920, 39920,
	176, 39920, 176, 3138, -1000, -1000, 2896, -1000, -1000, -1000,
	3403, 1924, 2337, -1000, -1000, 696, 2219, 2737, 93432, 2497,
	-5, 76687, -1000, 2888, 3075, 2216, -1000, -1000, 69490, -1000,
	2887, 552, 2215, -1000, 558, 3402, -1000, 96282, -1000, 3047,
	1356, 2882, 1112, 631, 3262, -1000, 631, 53617, -1000, 93432,
	-1000, -1000, 93432, -1000, -1000, -1000, 3401, -1000, 76687, -1000,
	-1000, 76687, 198, 2880, -1000, 76687, -1000, 76687, 195, 2879,
	-1000, -1000, 93432, -1000, 76687, 76687, -1000, 93432, 93432, 62790,
	62790, 5018, 64223, -29, -32, 513, -1000, 83836, 93432, 1110,
	64698, 93432, 2994, 1008, 48320, -1000, -35, -122, 2564, 987,
	987, 902, -1000, 902, -1000, 76687, 2776, -1000, -1000, 62790,
	987, 987, 987, -1000, -1000, -1000, -1000, 3400, 3399, -1000,
	-1000, -1000, 1009, 76687, 93432, 76687, -1000, -1000, 93432, -1000,
	93432, -1000, 1009, 93432, 1009, 93432, 1009, 93432, -1000, -1000,
	-1000, -1000, -1000, -1000, 176, 39920, -1000, -1000, 3397, 1556,
	-1000, 2774, -1000, 2767, -1000, 55, -1000, -1000, -1000, -1000,
	-1000, 1825, 76687, 76687, 76687, 76687, 93432, 76687, -1000, 68534,
	-1000, 2427, 2766, -1000, -1000, -1000, -1000, -1000, -1000, 1498,
	2112, -1000, 2426, -1000, 1488, -1000, -1000, -1000, 104845, 43439,
	-1000, -1000, 104845, 1872, -1000, 41940, 41435, -1000, -1000, 1590,
	76687, 2507, -1000, 2507, -210, -1000, 103006, 2425, 76687, -1000,
	-1000, -1000, -1000, -1000, 943, 960, 960, 1217, 1217, 1217,
	1217, 3156, 1215, 4352, 934, 234, 234, 375, 375, 375,
	375, 375, 234, 293, 674, 674, 293, 293, 293, 293,
	293, 674, 674, 674, 234, 234, 234, 12838, 12194, 5292,
	39920, 39920, 1316, 1864, 580, 4972, 39920, 5986, 5986, 5986,
	5986, -1000, 2008, -1000, -1000, -1000, -1000, 2736, 695, 42950,
	42950, -1000, -1000, -1000, -1000, 21957, 39920, -1000, -1000, -1000,
	-1000, 30638, -1000, -1000, 102842, -276, 507, -199, -2, -1000,
	39920, 39920, 39920, 505, -1000, 303, 39920, 93432, -1000, 100192,
	811, -40, -1000, -47, 1397, -1000, 39920, -1000, -1000, 1314,
	-1000, 1310, 1309, 1302, -1000, 694, 497, -1000, 290, -1000,
	2063, 693, 687, 39920, -1000, -1000, -1000, -1000, -1000, 102476,
	-1000, -1000, 102394, -1000, -1000, 102312, -1000, -1000, 101946, -1000,
	-1000, -1000, 104619, 99752, 99658, 99614, 7301, 13977, 13751, -53,
	494, -56, 493, 942, 940, 491, 488, 486, -61, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -62, 485, -1000,
	2732, -199, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	482, -1000, 480, -1000, 104525, -199, 479, 6396, -1000, 42950,
	42950, 42950, -1000, 478, -1000, 103372, -1000, 104299, 30133, 30133,
	30133, 476, 103984, 39920, -199, -70, -1000, -71, -1000, -1000,
	584, -72, 1041, 29616, 45404, 20444, -1000, 1041, 1041, 39920,
	-1000, 39920, 2453, -1000, -1000, -1000, 2446, 1701, 2422, 46366,
	-1000, -1000, -1000, -1000, 83357, -1000, 3310, 2632, -1000, 83357,
	-1000, -1000, 93432, 552, -1000, 83357, 83357, 20444, 936, -1000,
	936, 83357, 607, -1000, -1000, -1000, -1000, -1000, 475, 50266,
	-2, 277, 20444, 1010, -1000, 2450, 2450, 2450, 2450, -1000,
	-1000, 93432, 1290, -4, 3273, -1000, 2011, -1000, 57914, -1000,
	838, 1196, 20444, -1000, -1000, -1000, 682, -1000, 3328, 3328,
	-1000, 3328, 93432, 2727, 104, -1000, 27584, -1000, 1239, -1000,
	-1000, 1526, -1000, 1927, -1000, 1373, -1000, -1000, -1000, -1000,
	27584, -1000, 4146, 93432, 93432, 76687, -1000, 93432, -1000, 2213,
	95807, 2212, 57914, 93432, -1000, -1000, 676, 675, 2417, 2414,
	1104, 93432, 93432, 2390, 95332, 94857, 93432, 2022, 39920, 59371,
	2070, 2275, 176, 176, -1000, -1000, 176, 673, 1336, 76687,
	76687, 93432, 76687, 1621, -1000, -1000, -1000, -1000, -1000, 69009,
	-1000, -1000, 3338, 3334, -1000, 1361, -1000, -1000, -1000, 1361,
	3075, 1603, 93432, 76687, 59371, 1632, 93432, 2028, 176, 176,
	-1000, -1000, 176, 672, 20444, 1961, -1000, 2772, 93432, 3361,
	93432, 93432, 93432, 59371, 3056, 94382, 93432, 93432, 59371, 1985,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 58892,
	1117, 1010, 1630, 1285, 68534, 1007, 48320, 2549, -1000, -1000,
	17995, -1000, 104845, 104845, -1000, 104845, -1000, 56014, 93432, -1000,
	1068, 93432, 64698, 974, 2878, 52667, -58, 987, 62790, 76687,
	-5, 93432, -1000, 3075, 2875, 552, 2209, -1000, 62790, 3261,
	2874, 663, 3396, 3395, -1000, 2133, 2208, -1000, -1000, 93907,
	2936, 874, 93432, 1041, 46366, 1954, -1000, 50747, 1081, 93432,
	1842, 96, -1000, -1000, -1000, 34, 93432, -1000, 3394, -1000,
	-1000, 198, -1000, 76687, 198, 198, -1000, 76687, 76687, 2179,
	-1000, 205, -1000, 204, -1000, -116, -1000, -1000, 5018, 5018,
	987, -258, 656, -1000, 912, 910, 48809, 62790, -81, -1000,
	-1000, -1000, -1000, -1000, 76687, 93432, 782, 2536, 93432, -83,
	-1000, 274, 655, -1000, 2165, -1000, -1000, 1008, 48320, 2722,
	-1000, -1000, 1035, -1000, 1383, 987, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9, -58, -58, -1000, 1009,
	-1000, 1009, -1000, 1009, -1000, 104845, -1000, -1000, 1533, 1509,
	93432, -1000, 20444, 93432, 76687, 20444, 76687, 2763, 2729, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1123, -1000, 1872,
	2109, -1000, 648, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2277, -1000, -9, 27079, 2178, -1000, -1000, 76687,
	8, 39920, 39920, 4890, 4311, 39920, 42950, 42950, -1000, 39920,
	548, -1000, -1000, -1000, -1000, -1000, 2696, 645, 39920, 57914,
	5893, 5869, -1000, 473, 11796, 293, -1000, 39920, -1000, 472,
	29111, -1000, 103536, -45, -88, -1000, 15045, -199, -90, -1000,
	-1000, 836, -1000, 2862, -1000, 39920, 103902, 2248, 1975, 1751,
	1521, 3328, 3360, 17506, -1000, 54096, 1043, 2083, 101864, -1000,
	-1000, -1000, -1000, 57914, 57914, 39920, 39920, -1000, 39920, 39920,
	39920, -1000, -1000, -1000, 3328, 939, -1000, -1000, -1000, 939,
	-1000, -1000, 1361, -1000, 1361, -1000, 39920, -1000, -1000, 2695,
	39920, -1000, 57914, 57914, 42950, 42950, 42950, 42950, 42950, 42950,
	42950, 42950, 42950, 42950, 42950, 42950, 42950, 42950, 42950, 42950,
	42950, 42950, 42950, 2362, 42950, 3300, 3300, 3300, -1000, 2656,
	2695, 39920, 39920, 57914, 465, 456, 453, -1000, 39920, -199,
	-1000, -1000, 5018, 642, -1000, 2261, -1000, 2611, -1000, 39920,
	-1000, -91, -1000, 2965, -1000, -1000, 2611, 2611, -95, 104845,
	46366, 46366, -1000, 641, 39920, 2394, -1000, -1000, 810, -274,
	-1000, 899, -1000, -1000, -1000, -1000, -1000, 552, -1000, -1000,
	-1000, 268, 83357, 83357, 807, -1000, -96, -1000, -1000, -97,
	-1000, 3259, 452, 20444, -1000, -1000, 3040, -1000, -1000, -1000,
	-1000, -1000, -1000, -58, 93432, 2091, 3359, -1000, 3329, 826,
	805, 267, 3328, 451, 447, 444, -58, 93432, 93432, -1000,
	-24, -1000, -1000, -1000, 39920, -1000, -1000, 3043, 1283, 1275,
	-1000, -1000, 2872, -1000, 2202, -1000, 1089, -1000, 1848, -1000,
	39920, 39920, 639, 638, 3391, 1760, 3390, 1109, 2871, 2179,
	2867, 2179, -1000, -1000, 941, -1000, 104845, -1000, -1000, -1000,
	-1000, 637, 635, -1000, -30, 1595, 1627, 1033, -1000, -1000,
	39920, 39920, 82882, -1000, 436, 3035, 7, -1000, -1000, 1625,
	1260, -1000, -1000, -1000, -1000, 3075, 1587, 1259, -1000, -1000,
	-1000, 1029, -1000, -1000, 1012, -1000, -1000, 39920, -1000, -38,
	1258, 3209, 2198, 76687, 1257, -1000, 1255, -1000, -1000, -1000,
	3169, 2179, 2858, 1202, -1000, -1000, -1000, -1000, -1000, 58403,
	-1000, 93432, 76687, 1575, -1000, 2341, 902, 1007, 2690, -1000,
	2487, 3388, 76687, 3387, 443, -103, -49, 57914, 3258, -1000,
	2142, 595, 76687, 952, -1000, 3310, -1000, -1000, -1000, -1000,
	76687, 3257, 2857, 1010, 176, 76687, 3358, -1000, -1000, 76687,
	2850, 2132, 2195, 2305, 874, 63748, -1000, 1010, 2077, -109,
	-1000, 1842, 28594, 3032, -104, -1000, -1000, -1000, 1041, 53617,
	46366, 39920, 3385, -110, -1000, -1000, 198, -1000, -1000, -1000,
	195, -1000, -1000, -1000, -1000, -1000, -1000, 81928, 81928, 62790,
	62790, 62790, 987, 93432, 93432, 64698, -1000, 633, 93432, 93432,
	630, -1000, 93432, 93432, 3384, 62790, -50, 627, -1000, 897,
	896, 892, -1000, -1000, -1000, -1000, -1000, -1000, -122, 176,
	-1000, 2088, 76687, -1000, 17017, -1000, -1000, -1000, -1000, -1000,
	1009, -1000, -1000, 2036, 2155, 2036, 1816, 1814, -1000, 2106,
	-1000, -1000, -1000, -1000, 2418, 3049, 20444, 3178, 5986, 39920,
	39920, 318, 4138, 895, 5986, 39920, 39920, 57914, 8992, -119,
	39920, 39920, -1000, 39920, 800, 104845, 3357, 39920, 442, 441,
	-1000, -1000, -1000, 3313, -1000, -1000, -1000, 104845, 39920, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 440, -1000, 206, -1000,
	-1000, -1000, 99132, -1000, 39920, 427, 3098, -1000, 423, 421,
	10993, 5927, 101782, 101416, 101334, 415, -1000, -1000, 414, 412,
	104845, 2656, 104845, -1000, -1000, 856, 856, 1344, 1344, 1344,
	1344, 3300, 304, 1517, 1910, 1001, 1001, 1001, 1032, 909,
	909, 1001, 1001, 1001, 2689, 2321, 617, 4931, -1000, -1000,
	104845, 104845, 409, -1000, -1000, -1000, -199, 408, 5018, -1000,
	2604, 3097, 104845, -1000, 46366, 2604, 2604, -1000, -1000, 1701,
	93432, 104845, 46366, -1000, 2632, -1000, 15545, -1000, 20444, -1000,
	-1000, -1000, -1000, 3310, -1000, 50266, -1000, 615, -1000, 35,
	3040, -1000, 891, -1000, -58, -1000, -1000, 799, 3382, 825,
	20444, 401, -1000, -1000, -1000, -58, -58, 104845, 93432, 93432,
	93432, 2847, -1000, 3934, -1000, 1104, 101252, -129, -1000, 103006,
	39920, 93432, -1000, -1000, 1799, 2389, 1134, -1000, 3065, 93432,
	-1000, 93432, -1000, -1000, 93432, 93432, 76687, 93432, 2828, -136,
	104845, -68, -1000, 890, -1000, 1345, -1000, 16528, 93432, 76687,
	93432, 76687, 2048, 2826, -137, 20444, -1000, 3354, 3353, 2840,
	3076, 3352, 93432, -1000, 93432, 76687, 2992, -1000, -1000, -1000,
	-1000, 1583, 1250, -77, 612, -1000, 888, -1000, -1000, 887,
	1007, -1000, 62790, 48320, -1000, 552, -1000, 2530, -1000, 80968,
	2154, 176, -1000, 3381, 82407, 605, -1000, 2087, -1000, 722,
	3075, 176, 76687, -1000, -1000, 552, 388, -84, -1000, 1099,
	20444, 76687, 2839, 2319, 874, 63748, -1000, 1356, 2374, -1000,
	-93, -1000, 604, 176, 2077, -1000, -109, 104845, -1000, 877,
	-1000, -1000, -1000, -138, -1000, -1000, 377, -1000, 2991, 2990,
	-1000, 2622, 39920, 600, 598, 93432, 2988, -1000, -1000, -139,
	2537, 2537, 62790, 48320, 62790, 1008, -1000, 2286, -1000, -1000,
	-1000, -1000, -1000, 20444, 1666, -1000, 597, 596, -1000, -1000,
	-1000, -1000, 3049, 5986, 5986, 39920, 39920, 39920, 5986, 8992,
	-146, -1000, 5986, 5986, -199, -1000, -1000, 103536, -1000, -1000,
	-1000, 104845, -1000, 16039, 2041, -1000, 100886, -1000, 27079, -1000,
	-1000, 39920, 39920, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 42950, 2687, 590, 57914, -1000, -1000, 373, 1002, 39920,
	39920, 2965, 1002, 1002, -1000, -147, -1000, -1000, -1000, 3310,
	35, -1000, -1000, 3379, 20444, -1000, 62790, 818, -1000, 3378,
	-1000, -1000, -1000, -1000, -1000, 93432, -1000, 93432, -1000, 20444,
	93432, 2624, 2186, -1000, -1000, 2382, 589, 42950, 76687, 913,
	-1000, 3279, 2615, 1835, 39920, 2178, -149, -152, 2184, -1000,
	-1000, 2182, 39920, -1000, 57914, 585, 2179, 2179, -154, -157,
	-1000, -1000, 39920, 1247, 93432, 28089, -1000, 3375, 3035, -1000,
	-1000, -1000, -1000, 93432, 39920, 1232, -1000, -1000, -1000, 3346,
	2179, 20444, -1000, 2179, 2179, 3076, 1133, 93432, 76687, 2093,
	2093, 62790, 48320, -1000, -116, 1007, 3256, 2028, 2559, -1000,
	-1000, -1000, -1000, 2378, -1000, -1000, 93432, 2365, 995, -1000,
	-162, -1000, 876, 875, 64698, 974, 982, -1000, -1000, -1000,
	552, 3241, -1000, 3345, 583, 93432, 2131, 581, 20444, -1000,
	874, 63748, -1000, 2936, 1842, -1000, 2951, 93432, 3025, -1000,
	2374, 580, -1000, 987, 578, 576, 3168, 3168, -164, 39920,
	39920, -165, 572, 987, -1000, -167, -1000, -1000, -1000, -1000,
	-124, -1000, 866, 547, -1000, -1000, 76687, 76687, 39920, 39920,
	-1000, 5986, 5986, 5986, -1000, 372, -1000, -1000, 2077, 3095,
	-1000, -132, 100804, 100722, 6595, 42950, 57914, -173, -1000, -1000,
	93432, 104845, -199, -1000, -1000, -1000, 608, -1000, -1000, 3374,
	-1000, -1000, 1993, -1000, -1000, -1000, 93432, 2194, -1000, 1101,
	39920, 4931, 570, 39920, -1000, 3239, -1000, 2528, 2653, 2530,
	566, -1000, -1000, -1000, -1000, -1000, 1094, 1906, -1000, -1000,
	104845, 3076, 39920, -1000, -1000, 565, 564, 104845, 561, 863,
	2642, -1000, -1000, -1000, -1000, 104845, 557, 3209, -1000, -1000,
	-1000, -1000, 2179, 76687, -1000, -1000, -1000, -174, -1000, -1000,
	1915, 176, 974, -1000, 2047, 2154, 555, -1000, -1000, 2124,
	2405, -1000, 82407, 27584, 27584, 349, 3234, 982, -1000, 3321,
	-1000, 3232, 176, -1000, 39920, -1000, 76687, 39920, 2130, 63748,
	-1000, 2305, -1000, 1299, -175, 93432, 1842, -1000, -1000, 62790,
	62790, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1094, -180, -181, -1000, 62790, -1000, -1000, 2286,
	-1000, 93432, -1000, 93432, -1000, -1000, -182, -183, -1000, 1974,
	39920, 27079, -1000, -1000, 6595, -189, -1000, -176, -1000, 3230,
	-1000, -1000, -1000, -1000, 2837, 2602, 100356, 2265, 93432, 100274,
	-1000, 2649, -1000, -1000, 2028, 93432, 2530, 2583, 76687, 1100,
	-190, 2036, 2036, 39920, 26574, 2044, 39920, -1000, -1000, 3076,
	-1000, 2630, 3315, -1000, 2124, 76687, 93432, -1000, 3059, -1000,
	2986, -1000, -1000, -1000, 2530, 176, -1000, -1000, 176, -1000,
	-197, 1099, -198, 76687, -1000, 2319, 1500, -1000, 1041, -1000,
	-1000, -203, -208, 1835, 1094, 981, -215, -1000, -220, -221,
	-1000, -1000, 236, 40930, 40930, 40930, -199, -210, -1000, 93432,
	554, 2817, 1005, -1000, 2126, 1815, 149, 1096, -1000, -1000,
	2615, -222, -1000, 1004, 552, -1000, 39920, 1094, -223, -1000,
	1080, -228, -1000, 1079, -230, -1000, 2641, -1000, -231, 2179,
	1003, 3134, -1000, -1000, -1000, -1000, 550, -233, -1000, -1000,
	2229, -1000, 2028, 995, -1000, 1094, 549, 1835, 546, -1000,
	53617, -1000, 987, 987, 2530, 1835, 1041, 532, 987, -1000,
	-1000, -1000, 2856, -1000, 43928, 2162, 1809, 102924, 2856, 2856,
	-1000, -1000, 93432, 3123, -1000, 2128, 2127, 1444, -1000, -1000,
	-1000, -1000, -1000, -1000, 1041, -1000, 3121, 2265, 104845, 2530,
	-1000, 2036, 2556, -1000, 2036, 2639, -1000, 2042, -1000, -1000,
	-1000, 2833, 3309, 93432, -1000, 93432, 1798, 1785, 3371, 974,
	2124, 1835, 39920, 2530, 39920, -229, -1000, -1000, 2028, 2530,
	-1000, -1000, -1000, 1790, 3274, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 860, -1000, 2963, -1000, 1122, 2050, 2050,
	-1000, 859, 2126, -1000, -1000, 530, -1000, 529, -1000, 1768,
	-1000, -1000, -236, -1000, -1000, 3370, -1000, 2124, -1000, 2530,
	-238, 2028, -241, -1000, 981, 2028, 1780, -1000, -1000, 2069,
	40425, 39920, -1000, 3288, -1000, -1000, 2357, -1000, 39920, 2615,
	39920, 39920, 2086, 2174, -1000, -1000, 2028, 1094, 981, 1835,
	1041, 981, -1000, -1000, -1000, 104845, -1000, -1000, -1000, 104845,
	-1000, -246, -248, 52188, -1000, -1000, -1000, 981, 1835, 1041,
	2530, -1000, 1041, 2028, 1159, -258, 81928, 1041, 2530, -1000,
	2028, -1000, -1000, 526, -260, -1000, 2028, 981, 39920, -1000,
	981, 1041, -263, 1041, -1000, 2028, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4161, 4160, 4159, 4151, 4148, 4146, 4144, 4143, 4142,
	4140, 4139, 4134, 4132, 4126, 4122, 4120, 4117, 4116, 4113,
	4112, 4111, 4110, 4108, 4101, 4099, 4096, 4095, 4092, 4089,
	4085, 4080, 4079, 4078, 4076, 4074, 4069, 4066, 4065, 4064,
	4063, 4062, 4061, 4059, 4058, 4056, 4055, 4054, 4050, 4049,
	4048, 4046, 4045, 4043, 36, 4042, 4039, 4034, 4033, 4030,
	4028, 4026, 4022, 4021, 4018, 4017, 4016, 4013, 4012, 4011,
	4010, 4002, 4000, 40, 3994, 235, 3993, 3989, 3988, 3987,
	3985, 3984, 3983, 3980, 3979, 3977, 3975, 3974, 232, 3973,
	100, 3972, 3970, 3969, 3963, 3962, 231, 3961, 3959, 3953,
	3951, 244, 3949, 3943, 3940, 3938, 3937, 3935, 3934, 3929,
	3923, 72, 188, 3919, 3918, 68, 3917, 3912, 3911, 3910,
	3909, 3903, 3899, 3898, 3894, 3889, 211, 3887, 230, 3885,
	3884, 3882, 3881, 3879, 3876, 3873, 3872, 3871, 3870, 3869,
	3867, 3866, 3862, 3861, 3860, 3859, 3858, 3856, 3855, 3853,
	3852, 3851, 3850, 3848, 3846, 3843, 3842, 3839, 3836, 3835,
	238, 157, 3826, 3824, 229, 228, 3822, 3821, 3820, 3819,
	3817, 109, 8, 24, 3816, 3815, 63, 71, 64, 76,
	77, 75, 3814, 116, 3812, 99, 43, 3811, 10, 18,
	277, 226, 9068, 197, 3810, 3806, 3805, 203, 159, 3803,
	204, 3800, 3799, 3798, 3797, 89, 60, 146, 145, 142,
	135, 423, 3796, 3795, 83, 54, 42, 34, 3792, 3791,
	3790, 3169, 104, 3789, 225, 200, 136, 3783, 3782, 3779,
	984, 3775, 35, 3774, 80, 61, 113, 41, 106, 3773,
	125, 21, 3771, 171, 50, 3770, 129, 74, 59, 8504,
	7299, 3757, 98, 52, 82, 239, 170, 140, 177, 88,
	167, 178, 174, 144, 193, 3754, 208, 3752, 3204, 51,
	133, 3750, 3742, 3737, 62, 165, 87, 3736, 3734, 47,
	17, 3, 7, 169, 13, 93, 19, 3733, 14, 3732,
	3730, 3727, 3726, 27, 137, 3725, 242, 3723, 108, 38,
	22, 3721, 44, 180, 3720, 189, 110, 3717, 3715, 218,
	173, 158, 3714, 78, 191, 3712, 3710, 3709, 3708, 3707,
	117, 25, 112, 3706, 3704, 120, 202, 161, 3703, 39,
	3702, 143, 85, 127, 241, 105, 185, 91, 194, 151,
	195, 3699, 3698, 3697, 150, 3695, 3694, 184, 139, 3691,
	3689, 182, 243, 33, 55, 201, 56, 155, 134, 3688,
	172, 3687, 3686, 3685, 236, 156, 186, 1, 15, 97,
	107, 30, 5, 196, 128, 272, 101, 3681, 5095, 2004,
	1959, 3680, 3678, 115, 103, 49, 96, 132, 224, 53,
	3677, 3676, 580, 3673, 3671, 3670, 3667, 152, 3664, 3660,
	3659, 122, 124, 149, 3658, 79, 66, 12, 95, 207,
	227, 92, 190, 131, 214, 3657, 147, 3655, 46, 102,
	3654, 160, 215, 3651, 3650, 84, 3649, 123, 209, 45,
	121, 3647, 183, 3646, 3644, 3642, 3641, 3640, 3639, 3637,
	199, 198, 3636, 3634, 3633, 126, 154, 3631, 222, 262,
	168, 90, 37, 3630, 73, 1973, 3627, 162, 205, 118,
	141, 3626, 3303, 57, 0, 10669, 9970, 6991, 10055, 3625,
	2038, 3624, 3623, 3622, 175, 119, 3621, 3619, 3618, 81,
	3617, 58, 3616, 3615, 48, 3614, 16, 2, 6, 23,
	20, 400, 349, 3613, 3612, 86, 114, 163, 3611, 237,
	192, 3610, 3609, 3606, 3601, 69, 3600, 31, 3599, 29,
	3595, 3594, 32, 9, 26, 3593, 3592, 216, 3589, 181,
	212, 3586, 130, 3581, 3211, 111, 3579, 3578, 220, 65,
	3577, 221, 3576, 3123, 3576, 3575, 3574, 11, 3570, 3568,
	206, 148, 179, 3567, 3566, 138, 3565, 3563, 3559, 217,
	3558, 3554, 28, 3550, 4, 3545, 3543, 166, 3020, 3539,
	3538, 67, 3537, 153,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 528, 528, 21, 35, 22, 36,
	15, 529, 529, 529, 529, 28, 23, 37, 25, 25,
	25, 25, 25, 174, 174, 174, 174, 20, 20, 31,
	31, 208, 208, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 527, 527, 210, 210,
	209, 204, 204, 530, 530, 211, 211, 211, 213, 213,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 429,
	429, 429, 460, 460, 460, 544, 544, 545, 545, 545,
	545, 545, 114, 114, 43, 43, 43, 43, 522, 522,
	176, 176, 176, 178, 178, 177, 177, 177, 177, 64,
	64, 536, 536, 537, 537, 535, 534, 534, 538, 538,
	538, 175, 175, 175, 110, 110, 110, 110, 111, 111,
	112, 112, 179, 179, 179, 181, 181, 180, 180, 180,
	180, 180, 180, 180, 180, 185, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 92, 92, 462, 462, 463,
	463, 170, 170, 171, 171, 171, 171, 172, 172, 173,
	173, 173, 57, 182, 182, 184, 184, 183, 183, 45,
	45, 45, 45, 45, 45, 45, 46, 46, 46, 46,
	46, 47, 47, 47, 47, 47, 47, 48, 48, 48,
	48, 48, 48, 55, 55, 55, 55, 161, 161, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 547, 547, 548,
	548, 549, 549, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 70,
	70, 295, 295, 267, 267, 71, 71, 71, 72, 72,
	73, 73, 59, 59, 520, 520, 310, 310, 420, 420,
	75, 75, 330, 330, 76, 76, 76, 76, 76, 76,
	77, 77, 77, 77, 77, 77, 77, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 85, 85, 85, 85, 85, 86, 86, 86, 83,
	83, 83, 80, 80, 80, 79, 79, 79, 84, 84,
	84, 519, 258, 258, 82, 82, 82, 260, 260, 81,
	81, 81, 311, 311, 87, 87, 87, 87, 268, 88,
	88, 88, 88, 88, 88, 88, 88, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	422, 422, 89, 89, 89, 390, 390, 93, 93, 93,
	345, 345, 94, 94, 94, 94, 94, 95, 95, 95,
	95, 95, 113, 113, 113, 113, 113, 524, 524, 303,
	303, 224, 224, 224, 224, 103, 103, 103, 103, 104,
	104, 104, 105, 105, 166, 166, 120, 120, 120, 120,
	120, 119, 119, 119, 119, 119, 119, 49, 49, 49,
	50, 50, 51, 51, 52, 52, 53, 53, 54, 54,
	54, 54, 54, 122, 122, 541, 541, 124, 121, 121,
	121, 123, 123, 123, 123, 125, 126, 126, 126, 126,
	126, 126, 126, 126, 127, 127, 454, 454, 319, 319,
	452, 452, 471, 471, 453, 453, 272, 272, 272, 272,
	272, 273, 273, 273, 461, 461, 461, 461, 461, 461,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	167, 167, 168, 169, 169, 169, 169, 148, 148, 148,
	160, 160, 160, 160, 160, 160, 160, 151, 151, 151,
	138, 138, 129, 129, 129, 129, 129, 129, 129, 133,
	133, 133, 133, 133, 133, 133, 133, 130, 130, 140,
	140, 140, 140, 140, 134, 134, 135, 135, 137, 137,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 131,
	131, 131, 131, 142, 142, 142, 142, 352, 352, 352,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 159, 159, 159, 159, 159, 159, 539, 539, 540,
	540, 155, 155, 155, 155, 155, 155, 404, 404, 149,
	149, 149, 149, 154, 154, 154, 154, 335, 335, 146,
	146, 146, 147, 147, 147, 152, 152, 153, 150, 150,
	156, 156, 156, 156, 132, 132, 132, 551, 551, 551,
	157, 157, 145, 145, 158, 158, 158, 158, 158, 158,
	158, 158, 144, 144, 144, 143, 143, 143, 143, 136,
	521, 521, 517, 517, 517, 517, 517, 517, 517, 517,
	518, 518, 523, 523, 98, 98, 98, 98, 98, 106,
	106, 106, 106, 106, 99, 99, 99, 99, 99, 101,
	101, 100, 100, 100, 100, 65, 65, 65, 14, 14,
	14, 66, 66, 188, 188, 188, 189, 189, 280, 280,
	280, 280, 186, 186, 187, 187, 67, 67, 552, 552,
	552, 531, 531, 531, 532, 532, 532, 532, 532, 532,
	274, 274, 275, 275, 370, 370, 370, 370, 370, 278,
	278, 278, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 281, 281, 212, 212, 212, 284, 285, 285, 282,
	282, 283, 283, 283, 287, 287, 286, 289, 289, 288,
	369, 480, 480, 482, 482, 482, 482, 482, 482, 482,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 553, 553, 478, 478, 478, 479, 474, 474, 475,
	475, 475, 475, 475, 276, 276, 277, 277, 277, 277,
	476, 477, 301, 301, 407, 481, 481, 483, 483, 485,
	554, 554, 554, 554, 554, 554, 555, 555, 555, 368,
	368, 367, 367, 293, 293, 486, 486, 486, 486, 487,
	487, 487, 487, 487, 490, 489, 488, 488, 488, 488,
	488, 69, 69, 69, 332, 332, 331, 331, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 163, 163, 227, 227, 63, 63, 63,
	12, 12, 12, 533, 533, 533, 68, 68, 68, 68,
	68, 68, 226, 226, 226, 226, 226, 226, 226, 226,
	526, 526, 525, 525, 228, 228, 557, 557, 74, 74,
	74, 74, 74, 74, 74, 423, 423, 424, 424, 62,
	62, 62, 62, 62, 353, 353, 351, 351, 350, 350,
	300, 300, 406, 232, 232, 205, 205, 205, 27, 26,
	19, 19, 24, 24, 39, 39, 39, 39, 42, 42,
	38, 38, 38, 38, 40, 40, 34, 34, 542, 542,
	543, 543, 102, 102, 107, 107, 107, 107, 107, 108,
	108, 108, 108, 109, 109, 109, 109, 118, 118, 162,
	162, 162, 162, 162, 162, 162, 44, 44, 44, 44,
	56, 56, 56, 56, 116, 559, 559, 559, 117, 117,
	117, 558, 558, 225, 225, 364, 364, 365, 365, 560,
	560, 366, 366, 366, 366, 219, 218, 220, 220, 61,
	61, 61, 214, 214, 215, 215, 216, 216, 217, 217,
	561, 561, 96, 96, 96, 165, 165, 266, 266, 266,
	360, 360, 360, 294, 294, 238, 238, 363, 363, 361,
	361, 361, 361, 329, 329, 329, 164, 164, 308, 308,
	321, 321, 322, 322, 417, 417, 323, 115, 115, 192,
	192, 190, 190, 190, 190, 190, 190, 190, 190, 197,
	197, 198, 198, 199, 199, 200, 201, 201, 201, 201,
	312, 312, 202, 202, 202, 191, 191, 191, 193, 193,
	193, 193, 193, 193, 193, 196, 196, 196, 196, 203,
	203, 203, 195, 195, 497, 497, 497, 499, 499, 501,
	501, 500, 500, 496, 496, 498, 498, 556, 556, 334,
	334, 334, 291, 292, 290, 290, 298, 298, 296, 297,
	297, 299, 299, 405, 405, 405, 206, 206, 206, 326,
	326, 326, 326, 327, 327, 356, 356, 354, 354, 354,
	354, 355, 355, 357, 357, 357, 358, 358, 359, 359,
	325, 325, 386, 386, 194, 194, 194, 305, 305, 305,
	306, 306, 376, 376, 376, 376, 376, 376, 377, 377,
	375, 375, 375, 375, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 409, 410, 410, 307, 307, 411, 362,
	362, 515, 515, 515, 516, 516, 403, 403, 412, 412,
	412, 412, 412, 412, 401, 401, 402, 402, 418, 419,
	419, 338, 338, 338, 338, 336, 336, 339, 339, 339,
	339, 337, 337, 413, 413, 413, 413, 328, 328, 414,
	414, 414, 414, 415, 371, 372, 372, 425, 425, 425,
	425, 427, 304, 304, 304, 304, 304, 473, 472, 472,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 441,
	441, 441, 441, 441, 441, 441, 441, 442, 442, 442,
	442, 442, 442, 442, 428, 428, 428, 428, 428, 432,
	432, 432, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 433, 433, 438, 438, 439, 439, 439,
	434, 435, 440, 440, 440, 440, 562, 562, 444, 444,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 430,
	430, 430, 437, 437, 437, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 346, 346,
	348, 348, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 380,
	380, 380, 380, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 491, 491,
	491, 491, 491, 491, 491, 491, 382, 382, 494, 494,
	495, 495, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 502, 502, 503, 503, 505, 505, 506, 506, 507,
	508, 508, 508, 509, 510, 510, 504, 504, 511, 511,
	511, 511, 512, 512, 513, 513, 513, 513, 513, 514,
	514, 514, 514, 514, 392, 392, 393, 393, 399, 399,
	399, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 229, 229, 229,
	229, 229, 317, 317, 315, 315, 315, 318, 318, 316,
	316, 314, 314, 313, 313, 389, 389, 387, 387, 391,
	391, 340, 340, 443, 443, 443, 443, 443, 443, 443,
	443, 341, 341, 341, 349, 342, 342, 343, 343, 343,
	343, 343, 383, 384, 344, 344, 344, 385, 385, 394,
	398, 398, 397, 396, 396, 395, 395, 373, 373, 374,
	374, 324, 324, 563, 563, 320, 320, 416, 416, 416,
	416, 270, 270, 309, 309, 269, 269, 261, 261, 262,
	262, 262, 262, 302, 302, 400, 400, 445, 445, 446,
	446, 447, 447, 448, 448, 449, 450, 451, 388, 388,
	248, 247, 235, 236, 246, 245, 244, 234, 237, 241,
	242, 243, 239, 240, 254, 253, 252, 259, 250, 251,
	421, 233, 263, 263, 264, 264, 264, 265, 265, 265,
	265, 230, 230, 231, 231, 255, 255, 256, 257, 257,
	249, 249, 249, 221, 221, 221, 222, 222, 223, 223,
	459, 459, 456, 456, 456, 457, 457, 457, 458, 458,
	458, 458, 455, 455, 455, 455, 455, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 465, 465, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 467, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 470, 470,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 5, 2, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 12,
	3, 1, 0, 1, 1, 2, 2, 1, 3, 3,
	0, 5, 7, 0, 5, 6, 8, 2, 1, 3,
	1, 3, 2, 5, 0, 1, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 6, 2, 0, 1, 2, 3, 1, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 6, 6, 6, 6, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 3, 3,
	4, 3, 4, 7, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 3, 3, 3, 3, 3, 6, 4,
	4, 4, 3, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 1, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 2, 6, 4, 7, 7, 2, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 4, 3, 2, 2, 1, 2, 1, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 2,
	6, 3, 3, 4, 4, 3, 1, 3, 2, 3,
	3, 1, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 2, 1, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 4, 3, 1, 1, 1,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	3, 4, 10, 10, 3, 5, 5, 5, 3, 5,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 6, 3, 6, 6,
	3, 11, 14, 1, 2, 3, 0, 4, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 1, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 9, 9, 3, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 1, 2, 8, 4, 2, 5, 5, 5,
	2, 1, 3, 11, 12, 8, 5, 3, 1, 5,
	9, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 3, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 2, 8,
	11, 3, 3, 0, 3, 0, 3, 0, 3, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 8, 5, 3,
	4, 3, 0, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 2, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 519, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -162, -167,
	-168, -169, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-163, -164, -165, 31, 30, 95, 77, 144, 119, 127,
	182, 332, 368, 379, 360, 349, -123, -124, 396, -44,
	-56, -117, -116, 70, 120, 355, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -546, 97,
	-498, -78, -81, -109, -550, 132, 151, 200, -99, -100,
	321, -104, -105, 362, -107, -108, 364, 152, -51, -50,
	146, -190, -192, -121, -122, -166, -129, -130, -131, -132,
	-133, -134, -135, -136, -137, -138, -139, -140, -141, -159,
	-142, -143, -144, -145, -150, -146, -147, -148, -149, -151,
	-152, -154, -155, -156, -157, -158, 400, -153, 454, 47,
	414, 79, 136, 372, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -59, -61, -62, -65, -66, -67,
	-74, -68, -69, -497, -79, -80, -83, -85, -86, -82,
	-84, 361, -193, -191, 516, 468, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -30, -35, -36, -32, -33,
	-31, -34, -37, -38, -39, -40, -41, -42, -26, -28,
	-29, -27, -15, -25, 486, 494, -196, -194, -195, -203,
	388, 476, 430, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, -268, 2, -250, -255, -256, -257, -249,
	-221, -467, -470, 4, -464, -468, 157, 209, 286, 21,
	22, 23, 24, 25, 26, 28, 29, 40, 41, 43,
	42, 44, 45, 46, 47, 51, 53, 57, 58, 59,
	60, 61, 65, 70, 71, 76, 77, 78, 79, 80,
	81, 82, 88, 85, 86, 87, 90, 92, 93, 94,
	95, 96, 98, 100, 101, 109, 110, 111, 112, 114,
	119, 120, 123, 118, 122, 125, 126, 127, 130, 131,
	132, 134, 135, 137, 138, 139, 141, 142, 144, 145,
	146, 149, 147, 437, 148, 150, 151, 152, 153, 163,
	164, 165, 170, 172, 176, 177, 180, 181, 183, 187,
	189, 190, 191, 192, 193, 199, 200, 202, 203, 204,
	205, 210, 211, 215, 212, 221, 222, 226, 227, 228,
	230, 234, 235, 236, 237, 238, 239, 241, 243, 242,
	245, 248, 249, 252, 253, 254, 257, 258, 259, 260,
	262, 263, 266, 264, 267, 265, 269, 270, 271, 268,
	274, 272, 276, 277, 278, 284, 282, 280, 279, 281,
	288, 291, 197, 293, 294, 297, 315, 301, 302, 303,
	306, 307, 310, 313, 314, 316, 317, 318, 319, 320,
	321, 322, 323, 325, 326, 330, 332, 333, 335, 337,
	338, 339, 340, 341, 342, 343, 346, 345, 347, 349,
	355, 360, 357, 358, 359, 361, 362, 363, 364, 366,
	367, 368, 370, 371, 372, 373, 375, 377, 378, 381,
	382, 397, 398, 416, 379, 380, 383, 384, 385, 386,
	387, 391, 389, 390, 392, 393, 394, 396, 399, 400,
	402, 403, 404, 405, 406, 407, 410, 412, 413, 414,
	415, 417, 420, 421, 422, 423, 418, 429, 426, 427,
	431, 432, 433, 434, 435, 436, 438, 440, 448, 449,
	451, 454, 455, 456, 446, 458, 459, 462, 463, 464,
	467, 465, 466, 468, 470, 473, 474, 475, 481, 480,
	487, 488, 490, 491, 492, 35, 48, 49, 52, 54,
	56, 66, 67, 68, 72, 115, 116, 143, 154, 155,
	166, 178, 179, 184, 186, 194, 195, 196, 216, 217,
	219, 224, 246, 290, 292, 308, 312, 327, 328, 329,
	331, 344, 374, 408, 419, 424, 441, 442, 443, 444,
	450, 452, 476, 477, 478, 482, 489, -268, 2, -250,
	299, -243, 2, -221, -221, 332, 27, 2, 27, 326,
	390, 432, 434, 2, -524, -303, 2, 27, -224, -221,
	97, 182, 388, -243, 2, -524, -303, 24, 2, -221,
	2, -225, 2, 379, -221, 263, 2, 519, 90, 254,
	71, 374, 393, -126, 449, -125, 441, 383, -127, -454,
	2, 274, -221, 519, 519, 519, 27, -233, -221, 430,
	209, 111, 427, 519, 2, 430, 318, 480, 389, 111,
	341, 209, 456, 383, -533, 263, 370, 185, 469, -522,
	2, -517, 4, -468, -464, -262, -261, 430, 435, 111,
	-257, -249, 509, -256, 519, 519, 519, 2, 227, 228,
	340, 339, 393, 394, 519, 519, 519, 381, 2, 26,
	63, 89, 93, 117, 153, 173, 176, 304, -547, 315,
	338, 392, 429, 438, 451, -532, 415, 65, 383, -531,
	-533, 263, 456, 130, -350, 111, 254, 181, 463, 434,
	432, 461, 123, 215, 466, 465, 519, 519, 26, 63,
	74, 93, 130, 153, 173, 176, -549, 315, 338, 377,
	392, 429, 438, 451, 2, 480, 263, 389, 430, 209,
	111, 456, 383, -533, 381, 382, 336, -90, 2, 516,
	31, 30, 396, -185, 430, 220, 2, -221, 519, 519,
	2, 227, 228, 381, 382, 519, 519, 174, -517, 2,
	519, 519, 2, 227, 228, 381, 382, 220, 2, 65,
	385, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 2, -160, 393, 415, 191, 45, 44, 71, 27,
	337, 76, 319, 112, 138, 183, 209, 210, 235, 89,
	90, -352, 43, 228, 227, 382, -539, 381, -404, 431,
	384, 390, 426, 239, 379, 449, 97, 470, 371, 492,
	341, 342, 147, 4, 111, 274, 395, 441, 254, 378,
	322, 81, 519, -556, 2, 430, -558, 2, 449, 449,
	2, -558, 2, -558, 2, -558, 2, -559, 449, 489,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, -191, -193, -192,
	519, 519, 519, 519, 519, 519, 519, -160, 393, 2,
	71, 27, -296, -298, 460, 218, 140, 305, -190, -192,
	2, -497, -452, 2, -378, -471, -380, 507, 508, 500,
	428, 64, 285, 493, -392, 117, 461, 299, -470, -381,
	-394, 143, 374, -318, 8, 9, 5, 6, 7, -230,
	-382, -388, 453, 156, 289, -265, 520, 10, 516, -494,
	-192, -393, 36, 186, 62, -456, -264, -231, -428, 219,
	-263, -249, -491, -492, 4, -464, -465, -457, -431, -439,
	-435, -436, -442, -221, -467, 74, 103, 104, 102, 107,
	106, 256, 255, 108, 105, 395, 469, 63, 35, 194,
	195, 224, 290, 196, 72, -493, 131, -466, 216, 217,
	408, 49, 344, 166, 116, 115, 292, 54, 52, 477,
	-440, 113, 441, 442, 443, 444, 178, 179, 56, 154,
	155, 312, 329, 424, 450, 452, 184, 246, 99, 175,
	214, 198, 223, 225, 229, 247, 250, 275, 283, 287,
	309, 311, 369, 401, -562, 478, 419, 66, 67, -499,
	345, -500, -243, -499, 519, 519, 521, 519, -290, -291,
	-292, 2, 27, 128, 516, 2, -408, 2, -409, -413,
	-192, 240, -412, 516, -410, 514, -250, 300, -495, 375,
	-491, -492, -230, -249, -264, 4, -464, -466, 518, -293,
	516, 111, 430, 75, 209, -345, 516, -221, 27, 299,
	445, 521, -390, 516, 299, 174, 302, -221, 480, 2,
	2, 397, 2, 516, -126, 68, 449, 42, 393, -365,
	2, -366, -218, -219, -220, -418, 226, 335, 343, 495,
	492, -452, -541, 174, 499, 445, -452, -319, 518, 2,
	2, 2, 2, 2, -413, 194, -250, 2, -247, -455,
	4, -464, -468, -465, -469, -467, 27, 30, 31, 32,
	34, 36, 37, 38, 39, 55, 62, 63, 69, 73,
	75, 84, 89, 97, 102, 103, 105, 104, 106, 107,
	108, 117, 121, 124, 128, 129, 133, 136, 140, 156,
	158, 171, 173, 174, 182, 185, 188, 201, 213, 218,
	220, 240, 244, 251, 255, 256, 285, 289, 295, 299,
	300, 304, 305, 324, 334, 348, 365, 388, 395, 411,
	425, 430, 439, 445, 447, 453, 460, 461, 469, 471,
	479, 483, 484, 485, 486, -470, 74, 2, -413, 194,
	2, -252, 194, -413, -255, 2, -234, -221, 2, -246,
	-455, 2, -269, 194, -250, -251, -255, -253, 2, -255,
	-259, 2, -221, -462, 194, 2, -459, 10, -458, 5,
	4, -464, -468, -465, 480, 220, 445, 521, -309, -261,
	-262, -451, 8, -302, -221, 518, -378, 2, -115, -101,
	2, 171, -378, 194, 2, -115, 194, 2, -378, 194,
	2, -115, 194, 2, -536, 2, -462, 2, 2, 451,
	2, 93, 194, -221, 430, 110, 2, 359, -548, 377,
	455, 2, 2, 2, 2, 2, 2, 430, -239, 2,
	-221, 171, -259, 194, 2, 389, -557, 345, -462, 194,
	2, 480, -253, 2, -253, 209, 222, -234, 194, 2,
	434, 432, 434, 432, 174, 2, 220, 2, 220, 2,
	-414, 2, -415, -409, -250, 514, 2, 2, 2, 2,
	2, 194, -221, 430, 110, 2, 238, 2, 2, 2,
	2, 2, 2, 2, -311, 194, 2, -250, 480, -311,
	194, 2, -311, 194, 2, -351, 2, 84, -234, 194,
	2, -258, 194, 2, -253, -260, 194, 2, -259, -463,
	194, 2, -462, -378, 2, -115, 2, -422, 2, -421,
	-458, 476, -90, 516, -90, 516, 393, 516, -462, -250,
	-250, -378, 2, -115, -101, 2, -378, 2, -115, 2,
	-112, -111, -462, 516, 174, -378, 2, -115, -101, 2,
	-378, 2, -115, 2, -185, 171, 2, 111, 430, -160,
	2, 171, 471, 2, 8, 2, 201, -462, 384, 342,
	163, 2, 397, 2, 398, 71, -352, 492, 71, 174,
	2, 174, 2, -335, 2, 486, 2, -521, 2, 299,
	174, 2, 174, 2, 174, 2, 174, 2, 174, 2,
	339, 394, 228, 2, -115, 483, -101, -378, 483, 2,
	-540, 171, 382, -378, 2, 448, 237, 148, 174, -335,
	2, 174, 2, 174, 2, 5, 2, 340, 416, 2,
	226, 335, 416, 2, -250, -551, 2, 430, 480, 389,
	2, 2, 85, 86, 174, 2, 174, 2, 174, 492,
	2, -328, -413, -364, -365, -364, 445, -296, -298, -160,
	397, 2, -197, -326, -199, 171, -354, -355, -200, 251,
	158, 295, -201, -334, 27, 128, -334, -334, 58, 517,
	517, 11, 12, 73, 40, 507, 508, 509, 510, 169,
	511, 512, 505, 506, 504, 497, 498, 502, 232, 233,
	91, 501, 499, 83, 261, 376, 159, 160, 161, 162,
	356, 207, 33, 208, 14, 15, 16, 32, 304, 250,
	493, 198, 401, 500, 17, 18, 19, 223, 225, 287,
	48, 201, -229, -271, -378, -378, -378, -378, -378, -378,
	-378, 311, 516, -324, -373, 514, -192, 516, 516, 516,
	-451, -192, -378, -392, 517, -316, 516, -192, -392, -387,
	516, 374, 514, 516, -395, -378, 5, 5, 5, 516,
	518, -502, 487, 171, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 331,
	-433, 516, -432, 516, -432, -432, 481, -430, 516, 494,
	488, 516, -430, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 481, 521, -499, -293,
	516, -320, -416, -378, 509, -320, -320, 299, -313, -378,
	99, -338, 229, 275, 175, 247, 369, 214, -375, 520,
	-375, -403, 494, -192, -410, -249, -192, -412, 516, -408,
	-403, -91, -451, -75, -88, -96, -115, -128, -164, -165,
	509, -250, 516, 174, 516, 518, -455, 174, -302, -234,
	-250, -263, -264, -269, 127, -313, -517, 456, -302, -224,
	37, -389, -425, -426, -473, 520, -472, -428, -438, -434,
	-437, 327, 328, -457, 52, 477, -440, 219, 4, -464,
	-466, 216, 217, 408, 49, 344, 166, 116, 115, 292,
	54, 441, 442, 443, 444, 178, 179, 56, 478, 419,
	66, 67, -517, 456, -302, 171, -351, -454, -313, 37,
	-365, 2, 117, -459, 42, -560, 521, 249, -273, 260,
	284, 190, 300, 490, 293, -461, 5, 4, -388, -400,
	117, 254, 219, -445, -447, 8, -446, 9, -448, 507,
	508, -453, -452, 101, 518, -455, -208, 357, 396, -207,
	23, 28, 132, 474, 149, -283, 211, 314, 318, 143,
	412, 464, -528, -529, 380, 436, 437, 87, 293, 396,
	357, 143, -331, -333, 37, 109, 278, 313, 59, 204,
	265, 266, 414, 482, 143, 396, 357, 314, -529, 94,
	357, -529, -210, 412, 464, -528, -529, 380, 357, -209,
	-283, 143, 520, 23, 357, 396, 314, -544, -545, 132,
	28, 357, 314, -525, -496, 486, 143, -413, 194, -111,
	241, -111, -309, 521, 521, -455, 509, 382, 381, 143,
	143, 143, 143, 171, 2, 2, 285, 2, 2, 2,
	176, -531, -549, 2, 2, -250, 194, -295, 299, -520,
	-310, 430, -250, 285, -252, 194, 2, -255, 480, -525,
	285, -254, 194, -250, 37, 516, 2, -351, 2, 209,
	-496, 285, -414, -266, -250, -409, -266, 396, -243, 37,
	-375, -375, 143, 2, 2, 2, -221, -211, 521, 61,
	363, 143, -311, 194, -211, 143, -211, 143, -270, 194,
	-269, -211, 143, -211, 521, 143, -211, 521, 143, 521,
	143, 517, 521, -422, -422, -462, -173, 486, 174, 97,
	516, 516, -185, -419, 521, -418, -463, -112, -462, -462,
	-520, -234, 2, -250, 2, 430, 230, -462, -173, 201,
	-462, -462, -462, -454, 27, 398, 2, 339, 394, 86,
	398, 2, -250, 430, 111, 209, 77, -523, 171, -518,
	370, -517, -250, 111, -250, 111, -250, 111, -250, -250,
	2, 2, 2, 2, 82, 82, 2, 44, -540, 171,
	2, 448, 2, 448, 2, -221, -221, -221, 415, 249,
	-250, 171, 430, 209, 430, 209, 111, 430, -211, 521,
	-225, -197, -326, -454, -327, -326, -198, -197, -200, 171,
	343, 465, 278, 399, 234, -355, -354, 27, -378, -359,
	165, 277, -378, -357, -380, 507, 508, -446, -448, -312,
	293, -191, -191, -191, -299, -405, -378, 334, 209, -427,
	-425, -425, -248, -455, 441, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	250, 198, 401, 48, 201, -378, 445, -378, -378, -378,
	-378, 272, 285, 289, 453, 156, 462, 128, 293, -563,
	425, 39, -385, -192, -317, 516, -399, 34, 411, 27,
	-392, 516, 2, -373, -378, -374, -314, -313, -313, 517,
	479, 27, 128, 509, 2, 517, 521, 37, 517, -378,
	-314, -391, -387, -313, -398, -397, 483, -346, -347, 491,
	268, 114, 192, 267, -348, 387, -449, 8, -455, 509,
	-503, 164, 185, 516, 517, 2, 517, 2, 517, -378,
	2, 517, -378, 2, 517, -378, 2, 517, -378, 2,
	517, 2, -378, -378, -378, -378, -378, -378, -378, -313,
	8, -449, -449, 441, 441, -449, -449, -449, -441, 327,
	252, 328, 180, 271, 269, 270, 179, -441, -340, 2,
	-443, -313, 4, 491, 268, 114, 192, 267, 387, 5,
	-340, 2, -341, 2, -378, -313, -342, -379, -380, 507,
	508, 500, -392, -343, 2, -378, -314, -378, 55, 244,
	447, -344, -378, 174, -313, -313, 2, -313, 2, -500,
	37, -313, -305, 521, 174, 37, 4, -305, -305, 516,
	517, 521, -339, 189, 264, 259, -339, -408, -338, 229,
	-336, 309, -336, -336, -403, -235, 514, 522, -455, -403,
	-402, -401, 37, -243, 306, -403, -403, 518, 517, -402,
	515, -515, 516, 519, 519, 519, 519, 519, -250, 516,
	-313, -455, 518, 417, 517, 223, 223, 223, 223, 375,
	517, 445, -519, -258, 486, -90, 301, 517, 521, -304,
	36, 514, 518, -449, 2, 2, -444, 481, 516, 516,
	-347, 516, 174, -519, -303, -254, -541, 517, 449, -366,
	-272, 343, 410, 358, 391, 427, 8, 9, 8, 9,
	521, -455, 521, -542, 89, 445, 75, 383, -369, 194,
	75, -474, -237, 89, -475, -221, 69, 461, 334, 173,
	141, -542, 89, 334, -542, 89, 89, 396, 415, 445,
	58, -413, 40, 40, 27, -115, 245, 174, 492, 430,
	209, 383, 445, -413, -333, -425, 109, 265, 266, 58,
	-450, -445, 507, 508, -450, 58, -450, -450, -450, 486,
	-252, -413, 383, 445, 445, 445, 445, 521, 40, 40,
	27, -115, 245, 174, 445, -269, -235, 475, 41, 475,
	445, 41, 383, 445, 521, 41, 41, 445, 445, -526,
	-226, 98, 280, 258, 281, 92, 279, -227, -228, 320,
	473, -462, 396, 357, 143, -419, 201, -419, -261, -221,
	518, -115, -378, -378, -115, -378, -115, 44, 143, 2,
	-557, 238, 516, -276, 285, 174, -302, -420, 220, 521,
	-310, 143, -332, -331, 285, -254, 194, 2, 143, -293,
	285, 137, 516, 341, 2, -236, 194, -222, -221, -351,
	-214, 433, 143, -330, 471, -360, -115, 516, 117, 37,
	-360, -321, -322, -417, -323, -237, 516, -243, -221, 2,
	-250, -311, -211, 143, -311, -311, -211, 521, 143, -234,
	-253, -258, -259, -260, -462, -463, -90, -421, 517, 517,
	517, -172, 303, -171, -221, 5, -185, 471, -275, -370,
	-369, -478, -479, -474, 250, 209, 461, 222, 157, -294,
	-238, -237, 110, -179, 486, -111, 517, -419, 201, -173,
	-173, -419, -419, -250, 171, -462, -173, -173, -173, 2,
	2, -335, -250, -234, -269, -250, -302, -302, -335, -234,
	-335, -234, -335, -234, -115, -378, 2, 393, 171, 171,
	518, -335, 341, 111, 430, 318, 209, -250, -269, -250,
	-269, -234, -250, -413, -327, -198, 300, 234, 399, -357,
	-358, -380, 374, 375, -358, 374, 375, 8, 9, 8,
	9, -202, 403, 288, -311, 521, -205, 38, 124, 234,
	-250, 492, 139, -378, -378, 445, -563, 425, -385, 139,
	-378, 272, 289, 453, 156, 462, 128, 293, 174, 516,
	-379, -379, 517, -315, -378, -378, 515, 524, 517, -298,
	521, -296, -378, -313, -313, 517, 518, -313, -302, 515,
	515, 521, 517, -396, -397, 133, -378, 445, 445, 445,
	445, 516, 517, 518, -508, 310, 516, 516, -378, 517,
	517, 517, 517, 37, 521, 521, 521, 517, 521, 521,
	521, 517, 517, 517, 521, 517, 492, 492, 517, 517,
	517, 517, 521, 517, 521, 517, 174, 517, 517, -349,
	324, 517, 11, 12, 507, 508, 509, 510, 169, 511,
	512, 505, 506, 504, 497, 498, 499, 83, 261, 376,
	14, 15, 16, 223, 201, -379, -379, -379, 517, -383,
	-384, 174, 171, 37, -344, -344, -344, 517, 174, -313,
	517, 517, 516, -501, 263, 285, 517, -372, -371, 484,
	-416, -306, 2, -408, -245, -455, -372, -372, -313, -378,
	229, 229, -337, 471, 299, -339, -408, -402, -451, -377,
	-376, 172, 38, 124, 282, 197, -402, -243, -293, -402,
	-402, -455, -403, -403, -401, 517, -516, -451, 517, -307,
	-411, -495, -298, 518, -455, -182, -496, -161, 5, 289,
	-161, -161, -161, -302, 445, 24, 325, -425, 514, 515,
	8, -455, 516, -449, -449, -449, -302, 174, 174, -452,
	-365, 459, 80, 343, 441, -452, -207, 357, -237, -237,
	-250, -259, 285, -369, 194, -213, 285, -425, -244, -221,
	516, 516, 234, 234, 471, -237, -244, 234, 194, -237,
	194, -244, -244, -527, 343, 294, -378, -460, -459, 108,
	395, 253, 341, 286, -208, 357, 396, -115, -115, -115,
	516, -541, 471, 127, -250, -269, -250, -259, -254, 396,
	357, 283, -263, -450, -450, -331, 396, 357, -259, -252,
	-460, 383, -234, -209, -115, -115, -115, 516, -235, -210,
	357, 5, 194, -237, 5, -221, -237, -259, -460, -545,
	23, -237, 194, -237, -259, -460, -226, -462, 289, 467,
	-525, 383, 445, -413, -176, 486, -111, -170, 205, 509,
	-522, -221, 480, -221, -274, -277, -275, -237, -188, -189,
	488, 486, 143, -267, -250, 514, -173, -462, -250, -259,
	143, -293, 285, -462, 37, 143, 516, 2, 2, 299,
	285, -236, 194, -215, 134, -561, 499, -234, -372, -306,
	-329, -363, 365, 299, -294, 476, -243, -329, -308, 521,
	174, 499, 518, -294, 2, -211, -311, -211, -211, -269,
	-270, -211, -211, -211, -90, -90, -173, 521, 516, 499,
	499, 516, -462, -462, 517, 521, -250, -236, 209, 209,
	-242, -222, 517, 521, 518, 516, -181, 303, -180, 135,
	236, 221, 404, 405, 406, 407, 126, -179, -112, 174,
	-52, 486, 430, -173, 520, -335, -335, -335, 393, 393,
	-221, -246, -234, -250, -247, -269, 171, 171, 465, -358,
	300, 257, -405, -206, 291, -250, 520, -378, -378, 139,
	139, -378, -379, -379, -378, 139, 174, 516, -378, -389,
	32, 32, 517, 521, -374, -378, 517, 479, -298, -298,
	517, 509, -455, 520, 517, -387, 136, -378, 439, 268,
	192, 267, -348, 267, -348, -348, -449, 5, -455, 509,
	-509, -240, 516, -221, 484, -297, 305, 517, -427, -425,
	-378, -378, -378, -378, -378, -449, -430, -430, -445, -445,
	-378, -383, -378, -427, -425, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, 128, 285, 293, -379, -384, -383,
	-378, -378, -425, 517, 517, 517, -313, -90, 516, 263,
	-325, 185, -378, -419, 521, -325, -325, 517, -408, -408,
	516, -378, 229, 515, 521, 523, 499, -293, 518, -401,
	-402, 515, 517, 521, 517, 521, -362, 37, 517, -455,
	-184, -183, 125, 51, -302, 302, 5, 8, 514, 515,
	518, -449, 517, 517, 517, -302, -302, -378, 445, 445,
	143, 285, 473, -480, -475, 141, -378, -300, -406, -378,
	516, 516, 2, -204, 132, 396, -543, 2, 471, 143,
	-211, 143, -211, 490, 516, 516, 445, 383, 486, -313,
	-378, -174, 117, -454, -529, 520, -529, 520, 383, 445,
	383, 445, 486, 486, -313, 445, -429, 46, 25, 285,
	-253, 445, 445, -211, 143, 456, 396, -462, 289, -259,
	-254, 396, 357, -178, 303, -177, 135, 367, 126, 236,
	-419, -176, 174, 220, 2, -254, 2, 517, 517, 521,
	-481, 37, 297, 297, 516, -250, -71, 486, -418, -451,
	-252, 37, 143, -525, -115, -254, -423, -424, 5, -250,
	143, 299, 285, -216, 243, -561, -459, -496, -298, -329,
	-320, 286, 88, 517, -372, -322, -306, -378, 2, 517,
	-211, -211, -171, -172, -462, -462, -462, -173, -185, -185,
	-370, -278, 516, -236, -222, 516, -185, -238, 2, -463,
	521, 516, 499, 499, 499, -419, -115, 303, -250, 509,
	-335, -285, -284, 318, 293, -285, 374, 374, 300, 165,
	239, -205, -235, -378, -378, 139, 32, 32, -378, -378,
	-389, 517, -378, -378, -313, 515, 5, -378, 517, 517,
	8, -378, 517, 518, -510, -221, -378, 517, 58, 517,
	517, 521, 521, 517, 517, 517, 517, 517, 517, 517,
	-384, 174, 128, 293, 516, 517, 517, -90, -386, 188,
	58, -408, -386, -386, -337, -302, -408, -376, -235, 514,
	-455, -451, -411, 516, 518, -183, 499, 515, 2, 514,
	-455, 517, -237, -237, -369, 143, -482, 89, -484, 73,
	157, 97, 285, 289, 461, 334, 69, 117, 348, -553,
	37, 496, 517, 517, 521, -205, -300, -302, 285, 422,
	117, 285, 117, 110, 456, 76, -237, -244, -302, -302,
	-250, -259, 150, 517, 521, 499, 2, 509, 509, -259,
	-254, -259, -252, 316, 150, 517, -235, 5, 5, 143,
	-232, 73, 5, -237, -237, -253, 110, 383, 445, 521,
	516, 499, 499, -176, -463, -111, -293, -281, 212, -237,
	-479, -476, -477, 334, -483, -485, 157, 334, -115, 2,
	-187, -186, -221, 5, 516, -276, 303, 515, -332, -115,
	-254, -293, 517, 521, -353, 471, -235, -250, 143, -217,
	242, -561, -459, -214, -356, -354, -361, 516, 299, -115,
	-298, 499, 517, 517, 110, 110, 203, 142, -300, 516,
	516, -302, 110, 517, -180, -181, -462, -111, -462, -179,
	-53, -54, 209, 89, 323, -247, 430, 209, 516, 516,
	-205, -378, -378, -378, 517, -298, -455, 509, -504, 318,
	517, -405, -378, -378, -379, 174, 516, -389, 517, -505,
	485, -378, -313, -505, -505, 517, -451, 2, -462, 514,
	2, -369, -244, -248, -241, -221, 157, 194, 289, 234,
	516, -379, -250, 516, 2, 29, -554, 121, 213, -368,
	-555, 96, 423, 202, -406, -206, 517, 517, 289, 289,
	-378, -425, 516, -211, -211, 517, 517, -378, 445, -454,
	95, -452, 2, -529, -234, -378, 445, 5, -211, -248,
	-211, -211, -232, 456, -259, -254, -177, -178, -462, -111,
	-176, 37, -282, -283, 201, -481, 234, -241, 234, -552,
	486, 517, 521, 499, 499, -274, -188, -72, -73, 446,
	-418, -293, 37, 5, 516, -221, 299, 516, -235, -561,
	-459, -215, -329, 129, -302, 89, -356, -385, -173, 516,
	516, -279, 78, 90, 118, 193, 177, 210, 415, 420,
	27, -279, 517, -300, -300, 517, 516, -173, 517, 521,
	27, 516, 27, 516, -250, -269, -313, -313, 517, -298,
	58, 521, 517, 517, -379, -389, 517, -506, -507, -240,
	515, 2, -484, -241, 285, 471, -378, -223, 516, -378,
	37, 213, 122, 199, -281, 516, -367, 471, 348, -232,
	-300, 516, 516, 516, 499, 174, 516, -429, -211, -253,
	517, -535, 346, -115, -188, 316, 516, -280, 299, 110,
	278, -186, -452, -452, 517, 37, -73, 9, 37, -115,
	-300, -250, -300, 299, -459, -216, 465, 286, 517, -244,
	-329, -463, -463, -367, 517, 517, -463, -54, -302, -302,
	517, 517, -511, 341, 375, 187, -313, -299, 517, 521,
	37, 143, 189, 517, -486, 262, -221, 517, 122, 199,
	-282, -302, -281, 189, -250, -530, 471, 517, -287, -286,
	-284, -289, -288, -284, -313, -452, 95, 316, -313, -232,
	-538, 175, -537, 5, 10, -280, -250, -301, -407, -237,
	79, 110, -281, -115, -115, 517, -353, 517, -250, -217,
	396, -371, 517, 517, -368, -367, -189, 486, 517, 517,
	517, 517, -512, -513, 48, 458, 101, -378, -512, -512,
	-507, -509, 157, 486, -487, -490, -489, 299, 402, 175,
	317, 517, 422, 482, -554, 517, 486, -293, -378, -367,
	517, 521, 476, 517, 521, 476, 517, 174, 517, -211,
	-175, 486, 44, 516, 517, 521, 333, 123, 132, -282,
	-552, -367, 516, -368, 516, -321, -173, -173, -281, -368,
	-372, -173, -514, 141, -513, 330, 170, 374, 330, 170,
	-514, -514, -241, 53, -489, 299, -490, 299, 465, 123,
	-372, 53, -486, -281, -286, 201, -288, 174, 316, 146,
	-537, 29, -302, -407, 375, 375, 2, -188, -280, -368,
	-300, -281, -300, -372, -282, -281, 101, 185, 440, 278,
	32, 499, -488, 278, 363, 61, 396, -488, 499, -487,
	516, 516, 381, 517, 2, -280, -281, 517, -282, 517,
	-189, -282, 374, 307, -513, -378, 22, 289, 117, -378,
	-554, -313, -313, 303, -212, 61, 363, -282, -367, -189,
	-368, -372, -189, 517, 517, -172, 516, -189, -368, -372,
	-281, -372, -282, 445, -172, -372, -281, -282, 516, 517,
	-282, -189, -313, -189, -372, 517, -372, -282,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 477, 478, 480, 481, 482, 484, 485, 487,
	489, 491, 492, 493, 495, 496, 498, 499, 500, 501,
	502, 504, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 566, 568, 0, 1169,
	1171, 1173, 1175, 0, 702, 0, 32, 33, 0, -2,
	279, 281, 283, 0, 309, 311, 312, 314, 316, -2,
	0, 410, 411, 413, 415, -2, -2, 0, 864, 866,
	0, 555, 557, 0, 869, 871, 0, 0, 577, 578,
	0, 1257, -2, 571, 573, 575, 640, 642, 644, 646,
	648, 650, 652, 654, 655, 657, 659, 661, 663, 665,
	667, 669, 671, 672, 674, 676, 678, 680, 682, 684,
	686, 688, 690, 692, 694, 696, -2, 698, -2, -2,
	0, -2, -2, -2, 1187, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 361, 362, 364, 366, 368, 370,
	373, 375, 377, 1315, 417, 419, 421, 423, 425, 427,
	429, 0, -2, 1327, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 83, 84, 85, 86, 87,
	88, 89, 90, 66, 67, 69, 70, 71, 75, 76,
	77, 78, 81, 64, 0, 0, 1288, 1290, 1292, 1294,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 479, 483, 486, 488, 490, 494, 497,
	503, 505, 507, 464, 465, 468, 1948, 1965, 1966, 1967,
	1970, 1971, 1972, 1973, 1974, 1975, 2354, 2435, 2436, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 466, 467, 1024,
	0, 531, 529, 1941, 532, 2174, 534, 536, 404, 405,
	406, 407, 408, 409, 0, 548, 541, 547, 549, 551,
	552, 553, 554, 526, 524, 0, 548, 2000, 546, 1167,
	1168, 1152, 1153, 2212, 1194, 0, 193, 567, -2, -2,
	-2, 2320, -2, 599, -2, 606, 2324, 2214, 611, 0,
	613, -2, 616, 1170, 1172, 1174, 700, 701, 1951, 0,
	0, 0, 0, 34, 35, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1073, 1074, 1075, 0,
	197, 199, -2, -2, -2, -2, 0, 0, 2252, 2045,
	1909, 1967, 1912, 1907, 280, 282, 284, 285, 0, 0,
	0, 0, 0, 0, 310, 313, 315, -2, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 919, 911,
	912, 1118, 0, 0, 0, 0, 412, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 341, 469, 470, 0,
	1316, 1316, 0, 0, 0, 0, 254, 245, 865, 867,
	868, 0, 0, 0, 0, 556, 558, 0, 0, 227,
	870, 872, 873, 0, 0, 0, 0, 0, 256, 0,
	0, 572, 574, 576, 641, 643, 645, 647, 649, 651,
	653, 656, 658, 660, 662, 664, 666, 668, 670, 673,
	675, 677, 679, 681, 683, 685, 687, 689, 691, 693,
	695, 697, 707, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 789, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 710, 712, 713, 714, 0, 769, 787,
	788, 797, 699, 0, 1064, 1317, 1196, 1177, 1191, 1196,
	1179, 1180, 1181, 1182, 1183, 1188, 1190, 1184, 1185, 1186,
	37, 39, 41, 43, 45, 47, 49, 51, 53, 363,
	365, 367, 369, 371, 374, 376, 378, -2, 1286, 1287,
	418, 420, 422, 424, 426, 428, 430, 559, 0, 561,
	0, 711, -2, 0, 1321, 1321, 1321, 0, 0, 1287,
	1285, 0, 564, 565, 620, 621, 1552, 0, 0, 0,
	0, 0, 0, 0, 1806, 1638, 0, 622, -2, 1669,
	1671, 2295, 2320, 1805, 1673, 1674, 1675, 1676, 1677, 0,
	1679, 1680, 1681, 1682, 1683, 1684, 0, 1686, 0, 1691,
	1692, 1693, 0, 2302, 1886, 1961, -2, 0, 0, 2308,
	1957, 0, 1772, 1709, -2, -2, 1984, 1963, 1484, 1485,
	1486, 1487, 1488, -2, -2, 2337, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 0, 2283, 2303,
	2304, 2309, 2311, 2305, 2292, 1734, 2057, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1511, 1520, -2, -2, -2, -2, -2, -2, -2, 2296,
	2297, 2314, 2317, 2323, 2328, 2329, 2301, 2310, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 2351, 2352, 2353, 1512, -2, -2, -2, -2, 1304,
	2185, 1307, 1024, 1305, 1289, 1291, 0, 1293, 0, 0,
	0, 1298, 1324, 1322, 0, 1365, 1302, 1303, 1383, 1383,
	1407, 0, 1388, 0, 1407, 1316, 1433, 0, 1394, 2204,
	1710, 1711, 0, 1967, 1962, -2, -2, 2335, 0, 0,
	0, 0, 0, 0, 0, 527, 0, 533, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 1193, 1117, 569,
	570, 0, 594, 0, 598, 2291, -2, 2008, 2223, -2,
	602, 1197, 1201, 1202, 1203, 1204, 0, 0, 0, 0,
	0, 608, 0, 0, 595, 596, 614, 617, 0, 703,
	704, 705, 706, 63, 0, 2303, 1433, 65, 0, 1931,
	1992, 1993, 1994, 1995, 1996, 2336, 2355, 2356, 2357, 2358,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2337, 68, 0, 2303,
	72, 0, 2303, 0, -2, 79, 0, 1937, 82, 0,
	1934, 91, 0, 2303, 0, 1906, -2, 0, 178, 1945,
	0, 890, 1947, -2, 2303, 1072, 257, 258, 1980, 1981,
	1988, 1989, 1990, 1991, 0, 0, 0, 0, 857, 1903,
	1908, 858, 1927, 859, 1913, 0, 286, 287, 288, 289,
	290, 0, 291, 2303, 293, 294, 0, 296, 297, 2303,
	299, 300, 0, 302, 0, 210, 211, 318, 319, 0,
	321, 0, 2303, 0, 0, 0, 327, -2, 342, 0,
	339, 330, 331, 333, 334, 335, 336, 0, 382, 380,
	1942, 0, 885, 2303, 887, 0, 0, 1097, -2, 2303,
	1069, 0, 1103, 1099, 0, -2, 0, 1314, 2303, 1211,
	915, 916, 917, 918, 0, 401, 0, 1224, 0, 1226,
	0, 1247, 1439, 1383, 1383, 0, 343, 344, 345, 346,
	347, 2303, 0, 0, 0, 352, 0, 354, 355, 356,
	357, 358, 359, 360, 167, 2303, 435, 462, 0, 167,
	2303, 438, 167, 2303, 441, 0, 444, 1116, 167, 2303,
	447, 167, 2303, 450, 452, 167, 2303, 456, 457, 459,
	2303, 461, 259, 1163, 1164, 1165, 1166, 0, -2, 520,
	1950, -2, 472, 0, 473, 0, -2, 0, 271, 0,
	0, 874, 875, 876, 877, 878, 881, 882, 883, 884,
	1420, 230, 228, 0, 0, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 0, 0, 579, 0, 0, 708,
	709, 0, 0, 719, 720, 721, 0, 271, 2215, 2182,
	2077, 728, 0, 731, 734, -2, 0, 0, 0, 0,
	738, 0, 743, 744, 745, 0, 747, 863, 749, 0,
	0, 751, 0, 755, 0, 758, 0, 760, 0, 762,
	-2, -2, -2, 773, -2, 0, 776, 778, 0, 780,
	-2, 0, 789, 785, 786, 0, 0, 0, 0, 805,
	806, 0, 811, 0, 814, 815, 816, 0, 818, 819,
	0, 821, 822, 823, 824, 0, 826, 827, -2, -2,
	831, 833, 0, 840, 0, 844, 0, 848, 0, 715,
	716, 167, 1437, 1176, -2, 1178, 0, -2, 0, 560,
	0, 563, 1344, 1272, 1269, 0, 1341, 1342, 1273, 0,
	0, 0, 1280, 0, 1319, 1320, 0, 0, 0, 1259,
	1260, 0, 0, 0, 0, 1811, 1812, 1813, 1814, 1815,
	1816, 1819, 1820, 1817, 1818, 1821, 1822, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1826, 0, 0, 1828,
	0, 1830, 0, 0, 0, 0, 0, 0, 1617, 1619,
	1894, 0, 0, 1827, 1557, 1558, 1559, 1560, 1561, 1596,
	1597, 0, 0, 1670, 1891, 1890, 1672, 0, 1842, 0,
	1685, -2, 0, 1806, 1837, 0, 0, 1694, 1695, 1696,
	0, 0, 1842, 0, 0, 1885, 1706, 1707, 1549, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1498,
	1497, 0, 1499, 0, 1500, 1501, 1508, 1521, 0, 0,
	0, 0, 1525, 0, 0, 0, 0, 0, 0, 0,
	1866, -2, 0, 0, 0, 0, 1513, 0, 1306, 0,
	0, 1369, 1895, 1899, 1900, 1369, 1369, 0, 0, 1843,
	1430, 1430, 0, 0, 1426, 1426, 1426, 1424, 1407, 0,
	1407, 1417, 0, 1407, 1407, 0, -2, 1388, 0, 0,
	1417, 0, 1401, 508, 510, 512, 514, 515, 516, 518,
	1434, 1435, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 2261, 538, 550,
	1316, 0, 1845, 1456, 1460, 0, 1462, 1463, 1464, 1465,
	1466, 0, 0, 1457, -2, 1509, 1511, 1532, 1985, 1986,
	1987, 1492, 1493, 1494, 1495, 1496, 1504, 1491, 1491, 1491,
	1502, 1531, 1523, 1531, 1527, 1477, 1478, 1479, 1514, 1515,
	1516, 1517, 0, 2261, 543, 0, 0, 0, 0, 0,
	-2, 604, 609, 610, 0, 0, 1199, 0, 1205, 631,
	632, 633, 1207, 1208, 0, 607, 634, 635, 636, 637,
	638, 639, 0, 1915, 1916, 1917, 1918, 1921, 1922, 0,
	0, 605, 624, 612, 0, 618, 92, 1149, 0, 131,
	0, 1149, 1149, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 116, 127, 104, 105, 0, 0, 0,
	0, 0, 73, 1046, 0, 1049, 0, 0, 0, 0,
	0, 0, 0, 1062, 0, 0, 0, 0, 115, 0,
	0, 110, 94, 0, 0, 0, 117, 129, 0, 158,
	160, 0, 0, 0, 0, 0, 0, 177, 185, 0,
	0, 0, 0, 1070, 0, 1313, 0, 0, 2303, 1420,
	2115, 1420, 856, 0, 0, 1968, 1911, 0, 0, 0,
	0, 0, 0, 0, 320, 322, 0, 324, 325, 326,
	0, 1096, 0, 332, 372, 995, 2303, 0, 0, 399,
	394, 0, 396, 0, 1045, 2303, 1043, 1946, 0, 1067,
	0, 1024, 2303, 1944, 0, 0, 1104, 1977, 1113, 1117,
	1213, 0, 403, 0, 1227, 1229, 0, 0, 1440, 0,
	1442, 1443, 0, 349, 350, 351, 0, 431, 0, 165,
	166, 0, 167, 2303, 436, 0, 439, 0, 167, 2303,
	1901, 445, 0, 448, 0, 0, 454, 0, 0, 0,
	0, 1316, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 234, 0, 1419, 0, 1420, 228, 271,
	271, 1420, 581, 1420, 583, 0, 0, 722, 723, 0,
	271, 271, 271, 729, 730, 732, 733, -2, -2, 841,
	735, 736, 808, 0, 0, 0, 807, 748, 0, 850,
	2200, 861, 808, 2045, 808, 2045, 808, 2045, 759, 761,
	764, 800, 772, 777, 0, 0, 782, 790, -2, 0,
	792, 0, 794, 0, 796, 808, 809, 812, 817, 820,
	825, 0, 0, 0, 0, 0, 0, 0, 1063, 0,
	1189, 1344, 1272, 562, 1263, 1343, 1264, 1271, 1274, 0,
	0, 1276, 0, 1278, 0, 1339, 1340, 1347, 1348, 0,
	1358, 1359, 1351, 0, -2, 0, 0, 1354, 1355, 1282,
	0, 1299, 1300, 1301, 1328, 1331, 1127, 0, 2435, 1553,
	1451, 1554, 1555, 1930, 0, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, -2, -2, -2, -2, -2,
	-2, -2, -2, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, -2, -2, -2, 1594, 1595, -2,
	1829, 1831, 0, 1894, 0, -2, 0, -2, -2, -2,
	-2, 1614, 0, 1616, 1621, 1623, 1625, 0, 0, 0,
	0, 1893, 1635, 1877, 1878, 0, 0, 1808, 1809, 1810,
	1620, 0, 1639, 1892, 1889, 0, 0, 1841, 1327, 1698,
	0, 0, 0, 0, 1705, 1690, 1839, 0, 1838, 0,
	0, 0, 1849, 0, 1884, 1880, 0, 1928, 1548, 1535,
	1536, 1537, 1538, 1539, 1540, 1550, 0, 1925, 1954, 1960,
	1782, 0, 0, 0, 1735, 1736, 1737, 1738, 1739, 0,
	1741, 1742, 0, 1744, 1745, 0, 1747, 1748, 0, 1750,
	1751, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 0, 0, 1754,
	0, 1852, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1756, 0, 1758, 1843, 1863, 0, 0, 1640, 0,
	0, 0, 1806, 0, 1761, 1843, 1871, 0, 0, 0,
	0, 0, 1843, 0, 1876, 0, 1768, 0, 1770, 1308,
	0, 0, 1446, 0, 0, 0, 1898, 1446, 1446, 0,
	1364, 0, 0, 1427, 1428, 1429, 0, 0, 1430, 0,
	1421, 1425, 1422, 1423, 1417, 1380, 0, 0, 1932, 1417,
	1386, 1416, 0, 1024, 1406, 1417, 1417, 0, -2, 1390,
	1407, 0, 0, 509, 511, 513, 517, 519, 0, 0,
	1327, -2, 0, -2, 1023, 0, 0, 0, 0, 528,
	530, 0, 0, 451, 0, 522, 0, 525, 0, 1447,
	1450, 0, 0, 1461, 1467, 1468, 0, -2, 0, 0,
	1533, 0, 0, 0, 0, 192, 0, 597, 0, 1198,
	1206, 0, 628, 0, 630, 0, 1919, 1923, 1920, 1924,
	0, 619, 0, 0, 0, 0, 1148, 0, 135, 2303,
	0, 169, 0, 0, 988, 1938, 0, 0, 0, 0,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 1047, 1048, 1050, 1057, 1059, 0,
	1053, 1926, 0, 0, 1054, 0, 1056, 1058, 1060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 107, 0, 0, 0, 0, 1905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1092,
	1090, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 0,
	0, -2, 0, 0, 0, 202, 0, 262, 1904, 1914,
	0, 879, 880, 292, 295, 298, 301, 198, 0, 328,
	0, 0, 921, 896, 0, 0, 381, 271, 0, 0,
	395, 0, 1041, 1044, 0, 1024, 2303, 1081, 0, 0,
	0, 0, 0, 0, 1102, 0, 2303, 1933, 1976, 1977,
	1215, 1221, 0, 1446, 0, 1245, 1230, 0, 0, 0,
	1245, 1249, 1250, 1252, 1253, 0, 0, 1441, 0, 353,
	463, 167, 433, 0, 167, 167, 442, 0, 0, 167,
	453, 167, 458, 167, 260, 460, 471, 521, 1316, 1316,
	271, 269, 2157, 267, 264, 266, 0, 0, 0, 922,
	924, 925, 926, 927, 0, 1977, 0, 2104, 1977, 0,
	1233, 1235, 0, 224, 0, 231, 229, 234, 0, 0,
	393, 580, 585, 717, 0, 271, 725, 726, 727, 766,
	802, 737, 739, 740, 741, 0, 862, 860, 750, 808,
	753, 808, 756, 808, 775, 779, 784, 791, 0, 0,
	0, 804, 0, 0, 0, 0, 0, 0, 0, 845,
	846, 847, 849, 1438, 1267, 1268, 1270, 0, 1279, 0,
	0, 1353, -2, -2, 1352, 1356, 1357, -2, -2, -2,
	-2, 1275, 0, 1284, 1281, 0, 1338, 1125, 1126, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 1636, 0,
	-2, 1615, 1618, 1622, 1624, 1626, 0, 0, 0, 0,
	0, 0, 1832, 0, 1834, 1637, 1887, 1890, 1804, 0,
	0, 1326, 1327, 1327, 0, 1704, 0, 1840, 0, 1847,
	1848, 0, 1697, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 1740,
	1743, 1746, 1749, 0, 0, 0, 0, 1729, 0, 0,
	0, 1733, 1503, 1489, 0, 1531, 1529, 1530, 1524, 1531,
	1528, 1481, 0, 1480, 0, 1753, 0, 1755, 1757, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 1644, 1645, 1760, 1869,
	1870, 0, 0, 0, 0, 0, 0, 1766, 0, 1875,
	1767, 1769, 1316, 0, 1309, 0, 1366, 1361, 1445, 0,
	1896, 1420, 1368, 1370, 1897, 1935, 1361, 1361, 0, 1844,
	0, 0, 1411, 0, 0, 0, 1413, 1384, 0, 0,
	1378, 0, 1374, 1375, 1376, 1377, 1385, 1024, 1415, 1387,
	1391, 1954, 0, 1417, 0, 1402, 0, 1404, 1436, 0,
	1396, 1399, 0, 0, 1969, 272, 0, 303, 307, 308,
	304, 305, 306, 537, 0, 0, 0, 1846, 0, 1452,
	0, 1458, 0, 0, 0, 0, 542, 0, 0, 593,
	-2, 626, 627, 629, 0, 625, 132, 1149, 0, 0,
	1130, 1132, 0, 137, 2303, 146, 0, 962, 0, 1936,
	0, 0, 0, 0, 0, 1151, 0, 0, 2303, 167,
	2303, 167, 149, 152, 0, 157, 154, 155, 182, 183,
	184, 0, 0, 953, 93, 1149, 0, 96, 100, 108,
	0, 0, 0, 114, 0, 0, 0, 1134, 1140, 0,
	0, 1051, 1052, 1055, 1061, 74, 0, 0, 1138, 1144,
	80, 0, 1129, 159, 98, 102, 109, 0, 1146, 95,
	0, 181, 0, 0, 0, 173, 0, 174, 175, 186,
	0, 167, 2303, 0, 888, 889, 1091, 1065, 1066, 0,
	1071, 0, 0, 0, 194, 0, 1420, 202, 0, 1910,
	0, 0, 0, 0, 0, 0, 920, 1006, 0, 893,
	0, 0, 0, 387, 383, 0, 392, 398, 397, 886,
	0, 0, 0, -2, 0, 0, 1106, 1100, 1101, 0,
	0, 0, 2303, 1217, 1221, 0, 1220, 1314, 1327, 402,
	1222, 1245, 0, 0, 0, 1232, 1228, 1225, 1446, 0,
	0, 0, 0, 0, 348, 432, 167, 437, 440, 1902,
	167, 446, 449, 455, 474, 475, 246, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 931, 0, 1977, 1977,
	0, 1940, 0, 0, 0, 0, 232, 0, 235, 0,
	0, 0, 240, 241, 242, 243, 244, 225, 1420, 0,
	582, 0, 0, 724, 0, 752, 754, 757, 793, 795,
	808, 834, 835, 948, 0, 948, 0, 0, 1277, 0,
	1350, 1283, 1332, 1333, 0, 1127, 0, 1556, 1599, 0,
	0, -2, 0, 0, 1603, 0, 0, 0, -2, 0,
	0, 0, 1833, 1835, 0, 1889, 1699, 0, 0, 0,
	1703, 1687, 1688, 0, 1807, 1850, 1879, 1883, 0, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 0, 1929, 1955, 1959,
	1780, 1781, 1785, 1943, 0, 0, 0, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 1526, 0, 0,
	1851, 1862, 1864, 1641, 1642, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, -2, -2, -2, 1659, 1660,
	1661, -2, -2, -2, 0, 0, 0, 1865, 1867, 1868,
	1872, 1873, 0, 1763, 1764, 1765, 1874, 0, 1316, 1310,
	1363, 0, 1444, 1367, 0, 1363, 1363, 1323, 1409, 0,
	0, 1432, 0, 1381, 0, 1382, 0, 1414, 0, 1389,
	1392, 1393, 1403, 0, 1395, 0, 1398, 0, 1699, -2,
	273, 275, 0, 278, 540, 539, 523, 0, 0, 1454,
	0, 0, 1506, 1510, 1534, 545, 544, 1418, 0, 0,
	0, 0, 168, 960, 987, 0, 0, 0, 1120, 1127,
	0, 0, 993, 139, 0, 0, 0, 147, 0, 0,
	144, 0, 151, 156, 0, 0, 0, 0, 0, 0,
	111, 112, 113, 0, 118, 0, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	1124, 0, 0, 188, 0, 0, 0, 1094, 1095, 1135,
	1141, 0, 0, 200, 0, 203, 0, 206, 207, 0,
	202, 196, 0, 0, 323, 1024, 329, 942, 994, 0,
	996, 0, 894, 0, 0, 995, 379, 0, 386, 0,
	1045, 0, 0, 1068, 1079, 1024, 0, 1105, 1107, 1115,
	0, 0, 0, 1219, 1221, 0, 1212, 1213, 1346, 1223,
	1243, -2, 1242, 0, 1327, 1251, 1248, 1254, 1255, 0,
	434, 443, 268, 0, 263, 265, 0, 249, 0, 0,
	923, 928, 0, 0, 0, 0, 0, 1234, 1236, 0,
	0, 0, 0, 0, 0, 234, 255, 0, 718, 742,
	803, 836, 947, 0, 0, 838, 0, 0, 1349, 1336,
	1337, 1334, 1127, 1601, 1605, 0, 0, 0, 1607, -2,
	0, 1629, -2, -2, 1836, 1888, 1678, 1327, 1700, 1702,
	1689, 1882, 1551, 0, 1787, 1784, 0, 1771, 0, 1724,
	1725, 0, 0, 1728, 1730, 1731, 1732, 1490, 1483, 1482,
	1861, 0, 0, 0, 0, 1762, 1311, 0, 1776, 0,
	0, 1371, 1776, 1776, 1410, 0, 1412, 1379, 1372, 0,
	1955, 1405, 1397, 0, 0, 276, 0, 1448, 1453, 0,
	1459, 1505, 133, 134, 136, 0, 961, 0, 964, 0,
	0, 0, 0, 971, 972, 0, 0, 0, 0, 0,
	981, 0, 1010, 1020, 0, 1338, 0, 0, 0, 141,
	162, 0, 0, 1150, 0, 0, 167, 167, 0, 0,
	1131, 1133, 0, 0, 0, 0, 121, 0, 0, 1136,
	1142, 1139, 1145, 0, 0, 0, 1147, 179, 180, 0,
	167, 0, 172, 167, 167, 1124, 0, 0, 0, 0,
	0, 0, 0, 195, 261, 202, 0, 950, 0, 1006,
	998, 999, 1000, 0, 1005, 1007, 0, 0, 908, 895,
	0, 904, 0, 0, 921, 896, 0, 384, 1042, 1076,
	1024, 0, 1098, 0, 0, 0, 0, 0, 0, 1209,
	1221, 0, 1214, 1215, 1245, 1345, 0, 0, 0, 1231,
	1346, 0, 270, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 236, 0, 237, 238, 239, 226,
	584, 586, 0, 0, 592, 946, 0, 0, 0, 0,
	1335, 1609, -2, -2, 1630, 0, 1956, 1958, 1327, 0,
	1773, 1329, 0, 0, -2, 0, 0, 0, 1312, 1295,
	0, 1362, 1360, 1296, 1297, 1431, 0, 1400, 277, 0,
	1455, 138, 0, 965, 966, 1939, 968, 0, 970, 973,
	0, 976, 1979, 0, 980, 0, 989, 1011, 0, 942,
	0, 1016, 1017, 1018, 1121, 1122, 1022, 0, 140, 142,
	161, 1124, 0, 143, 150, 0, 0, 97, 0, 0,
	2038, 124, 122, 120, 1128, 99, 0, 181, 187, 1123,
	176, 189, 167, 0, 1137, 1143, 204, 0, 205, 208,
	0, 0, 896, 949, 0, 997, 0, 1008, 1009, 898,
	0, 897, 0, 0, 0, 0, 0, 385, 388, 0,
	391, 0, 0, 1108, 0, 1114, 0, 0, 0, 0,
	1216, 1217, 400, 0, 0, 0, 1245, 1256, 248, 0,
	0, 929, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 930, 1022, 0, 0, 986, 0, 253, 233, 0,
	588, 0, 590, 0, 837, 839, 0, 0, 1701, 1791,
	0, 0, 1726, 1727, -2, 0, 1667, 1775, 1777, 0,
	1373, 1449, 963, 967, 0, 0, 0, 1028, 0, 0,
	982, 0, 1014, 1015, 950, 0, 942, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 171, 190, 1124,
	201, 220, 0, 1077, 898, 0, 0, 906, 0, 909,
	0, 905, 902, 903, 942, 0, 389, 390, 0, 1080,
	0, 1115, 0, 0, 1218, 1219, 0, 1238, 1239, 1241,
	1246, 0, 0, 1020, 1022, 896, 0, 587, 0, 0,
	842, 843, 0, 0, 0, 0, 1786, 1330, 1668, 0,
	0, 0, 0, 975, 1033, 0, 0, 0, 1012, 1013,
	1010, 0, 991, 0, 1024, 145, 0, 1022, 0, 954,
	0, 0, 957, 0, 0, 125, 2038, 123, 0, 167,
	223, 0, 215, 213, 214, 891, 0, 0, 1002, 1004,
	0, 910, 950, 908, 1078, 1022, 0, 1020, 0, 1210,
	0, 1240, 271, 271, 942, 1020, 1446, 0, 271, 589,
	591, 1783, 1803, 1792, -2, 2263, 2042, 0, 1803, 1803,
	1778, 1779, 0, 0, 977, 1029, 1030, 0, 1025, 1026,
	1027, 1978, 978, 979, 1446, 1019, 0, 1028, 163, 942,
	951, 0, 0, 952, 0, 0, 128, 0, 130, 191,
	209, 0, 0, 0, 1001, 0, 0, 0, 0, 896,
	898, 1020, 0, 942, 0, 1446, 250, 251, 950, 942,
	985, 252, 1788, 0, 0, 1794, 1795, 1796, 1797, 1798,
	1789, 1790, 969, 0, 1031, 0, 1032, 0, 0, 0,
	990, 0, 1033, 148, 955, 0, 958, 0, 126, 0,
	218, 219, 0, 1003, 899, 0, 901, 898, 907, 942,
	0, 950, 0, 1237, 896, 950, 0, 1800, 1801, 0,
	0, 0, 1034, 0, 1037, 1038, 0, 1035, 0, 1010,
	0, 0, 0, 945, 900, 892, 950, 1022, 896, 1020,
	1446, 896, 1799, 1802, 1793, 974, 1036, 1039, 1040, 1021,
	992, 0, 0, 0, 941, 943, 944, 896, 1020, 1446,
	942, 983, 1446, 950, 0, 221, 0, 1446, 942, 1111,
	950, 984, 956, 0, 0, 1109, 950, 896, 0, 222,
	896, 1446, 0, 1446, 1112, 950, 1110, 959,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 505, 3, 511, 506, 3,
	516, 517, 509, 507, 521, 508, 518, 510, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 524, 3,
	497, 499, 498, 502, 520, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 514, 3, 515, 512, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 522, 504, 523, 500,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 501,
	57840, 503, 57841, 513, 57842, 519, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1211
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1216
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1228
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1236
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1369
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1373
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1377
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1394
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1419
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1451
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1455
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1459
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1465
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1469
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1475
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1484
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1499
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1505
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1523
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1527
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1548
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1555
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1567
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1574
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1582
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1587
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1591
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1596
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1602
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1621
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1631
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1641
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1650
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1661
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1667
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1693
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1698
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1735
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1818
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1867
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1934
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2019
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2023
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2027
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2030
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[5].union.unresolvedObjectName(), Concurrently: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2077
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2134
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2142
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2169
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2282
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2299
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = nil
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = nil
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2404
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2448
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2528
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2537
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2543
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2548
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2553
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2558
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2563
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2567
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2586
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2594
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = nil
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2670
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2696
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2718
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2719
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2743
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2746
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2818
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2830
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2849
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2854
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2866
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2868
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2869
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2870
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2871
		{
			return helpWith(sqllex, "CREATE")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2874
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			return unimplemented(sqllex, "create cast")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2876
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2878
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2879
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2880
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2881
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2882
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2883
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2884
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2885
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2886
		{
			return unimplemented(sqllex, "create operator")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2887
		{
			return unimplemented(sqllex, "create publication")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2888
		{
			return unimplemented(sqllex, "create rule")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2889
		{
			return unimplemented(sqllex, "create server")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2890
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2891
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2892
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2895
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2896
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2899
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2900
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2903
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2904
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2909
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2912
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2913
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2914
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2915
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2916
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2917
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplemented(sqllex, "drop server")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2930
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2931
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2936
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2937
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2973
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3044
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3079
		{

			sqlVAL.union.val = nil
		}
	case 400:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3103
		{
			return helpWith(sqllex, "DELETE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3106
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3107
		{
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3122
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3133
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3134
		{
			return helpWith(sqllex, "DROP")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3140
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3143
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3191
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3339
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3343
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3408
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3432
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3440
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3451
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "DELETE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3462
		{
			return helpWith(sqllex, "INSERT")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "DELETE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "INSERT")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3517
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3550
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3591
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3626
		{
			return helpWith(sqllex, "GRANT")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3661
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3670
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "RESET")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "RESET")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "USE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3744
		{
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3746
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3751
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			return helpWith(sqllex, "USE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3804
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3844
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 600:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3921
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3926
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3930
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3956
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3966
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			return unimplemented(sqllex, "set from current")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3985
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4034
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = tree.Low
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = tree.Normal
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = tree.High
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "SHOW")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4153
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4156
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4160
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4198
		{
			sqlVAL.str = "client_encoding"
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.str = "timezone"
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4220
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4283
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4292
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4300
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4317
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4322
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4342
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4358
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4399
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = true
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = true
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = false
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4512
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4601
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = true
		}
	case 798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = false
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4620
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4695
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4699
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4706
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4719
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4727
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4741
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4753
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4757
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4796
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4804
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4841
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4855
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4864
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4873
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4880
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5020
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5126
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5127
		{
			return helpWith(sqllex, "RESUME")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5145
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5186
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5234
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5276
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5291
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{

			sqlVAL.union.val = nil
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5315
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = nil
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5325
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5336
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5341
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5346
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 906:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5373
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5387
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5402
		{
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5403
		{
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5404
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5487
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5490
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5493
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5494
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5500
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5516
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5521
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.str = ""
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 951:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 956:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 959:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5616
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5710
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5724
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5735
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5834
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5845
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5862
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5872
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5952
		{
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5954
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5955
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5957
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6029
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6113
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6122
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6130
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6146
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6159
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6161
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6163
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6166
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6171
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6209
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = true
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6234
		{

			sqlVAL.union.val = true
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = false
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6249
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6263
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6275
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6287
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6297
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6307
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = nil
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6369
		{
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6370
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6386
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6388
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6390
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6392
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6396
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6434
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6452
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6471
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6488
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6505
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6509
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = false
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = true
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = false
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = true
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = false
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6563
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.str = ""
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6616
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6622
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6692
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6698
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6710
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6716
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6730
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6736
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6753
		{
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6754
		{
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6757
		{
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6758
		{
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6769
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6796
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6817
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6825
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6846
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6854
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6865
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6871
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6890
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6913
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6922
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6923
		{
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6924
		{
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6944
		{
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6945
		{
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6973
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6986
		{
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6988
		{
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6992
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7057
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.str = ""
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.str = ""
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.str = ""
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.str = ""
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7100
		{
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7101
		{
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7127
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7145
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7149
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7158
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7207
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7224
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7233
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7271
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7303
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7453
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7488
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7489
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7490
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7595
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7611
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = true
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = false
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7664
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7665
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = nil
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7679
		{
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = true
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = false
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = false
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = true
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7709
		{
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7750
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7771
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7776
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7838
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7894
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7897
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7898
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7951
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7953
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7968
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7990
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7995
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8000
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8011
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8023
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8042
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8081
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8091
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8137
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8167
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8200
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8202
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = nil
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = true
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = false
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.str = tree.AstFull
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.str = tree.AstRight
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.str = tree.AstInner
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8319
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8320
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.str = tree.AstHash
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.str = ""
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8387
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8405
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8411
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8417
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8427
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8456
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8469
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8477
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8478
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8496
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8498
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8506
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8526
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8535
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8575
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8588
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = types.Geography
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8613
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8621
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8655
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = nil
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = types.Int2
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = types.Int
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = types.Float4
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = types.Float
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8698
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = types.Bool
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = types.Float
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8747
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8753
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8775
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = types.String
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = true
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = false
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = types.Date
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8824
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8832
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8846
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8863
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8880
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = true
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = false
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = false
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = types.Interval
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8904
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8988
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9003
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = nil
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9033
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9093
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9345
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9411
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9627
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9632
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9658
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9667
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9682
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9712
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9723
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9724
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9748
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9814
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9939
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9944
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9953
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9962
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9971
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9985
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9990
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9995
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10009
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10010
		{
			return unimplemented(sqllex, "treat")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10036
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10083
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.str = ""
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10172
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10185
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10282
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = tree.Any
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = tree.Some
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = tree.All
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = tree.Div
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = tree.LT
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = tree.GT
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = tree.LE
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = tree.GE
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = tree.NE
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = tree.Like
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10644
		{
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10716
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10724
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10797
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10813
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10822
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10833
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10850
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10862
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11040
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11060
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.str = ""
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
