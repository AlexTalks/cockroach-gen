// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}

//line sql-gen.y:934
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14692

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1743,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 454,
	-2, 0,
	-1, 71,
	8, 911,
	29, 911,
	623, 911,
	624, 911,
	-2, 0,
	-1, 72,
	8, 911,
	29, 911,
	623, 911,
	624, 911,
	-2, 0,
	-1, 79,
	254, 268,
	544, 268,
	-2, 0,
	-1, 92,
	242, 1474,
	256, 1474,
	272, 450,
	410, 450,
	422, 1217,
	464, 450,
	478, 1217,
	528, 1217,
	556, 450,
	583, 1217,
	-2, 0,
	-1, 98,
	137, 1743,
	249, 1743,
	567, 1743,
	568, 1743,
	-2, 0,
	-1, 116,
	156, 1714,
	176, 1714,
	189, 1714,
	252, 1714,
	285, 1714,
	359, 1714,
	370, 1714,
	562, 1714,
	-2, 1685,
	-1, 158,
	164, 1045,
	271, 1045,
	413, 1006,
	483, 1006,
	527, 1006,
	547, 1045,
	549, 1006,
	-2, 0,
	-1, 163,
	4, 1745,
	21, 1745,
	22, 1745,
	23, 1745,
	24, 1745,
	25, 1745,
	26, 1745,
	27, 1745,
	28, 1745,
	30, 1745,
	31, 1745,
	37, 1745,
	41, 1745,
	43, 1745,
	44, 1745,
	46, 1745,
	47, 1745,
	48, 1745,
	49, 1745,
	50, 1745,
	51, 1745,
	52, 1745,
	53, 1745,
	54, 1745,
	56, 1745,
	57, 1745,
	58, 1745,
	59, 1745,
	61, 1745,
	62, 1745,
	63, 1745,
	64, 1745,
	65, 1745,
	66, 1745,
	67, 1745,
	71, 1745,
	72, 1745,
	73, 1745,
	74, 1745,
	76, 1745,
	77, 1745,
	78, 1745,
	82, 1745,
	83, 1745,
	84, 1745,
	85, 1745,
	86, 1745,
	87, 1745,
	88, 1745,
	89, 1745,
	92, 1745,
	93, 1745,
	94, 1745,
	95, 1745,
	96, 1745,
	98, 1745,
	100, 1745,
	101, 1745,
	102, 1745,
	103, 1745,
	104, 1745,
	105, 1745,
	107, 1745,
	108, 1745,
	109, 1745,
	111, 1745,
	112, 1745,
	113, 1745,
	121, 1745,
	122, 1745,
	123, 1745,
	124, 1745,
	125, 1745,
	127, 1745,
	128, 1745,
	129, 1745,
	130, 1745,
	132, 1745,
	133, 1745,
	134, 1745,
	136, 1745,
	137, 1745,
	138, 1745,
	140, 1745,
	141, 1745,
	142, 1745,
	145, 1745,
	146, 1745,
	147, 1745,
	149, 1745,
	150, 1745,
	151, 1745,
	153, 1745,
	154, 1745,
	155, 1745,
	157, 1745,
	158, 1745,
	159, 1745,
	160, 1745,
	161, 1745,
	162, 1745,
	163, 1745,
	164, 1745,
	165, 1745,
	166, 1745,
	167, 1745,
	168, 1745,
	169, 1745,
	170, 1745,
	171, 1745,
	172, 1745,
	173, 1745,
	175, 1745,
	181, 1745,
	182, 1745,
	183, 1745,
	184, 1745,
	188, 1745,
	190, 1745,
	191, 1745,
	192, 1745,
	194, 1745,
	195, 1745,
	198, 1745,
	199, 1745,
	200, 1745,
	201, 1745,
	202, 1745,
	203, 1745,
	204, 1745,
	205, 1745,
	206, 1745,
	207, 1745,
	208, 1745,
	209, 1745,
	210, 1745,
	211, 1745,
	213, 1745,
	214, 1745,
	216, 1745,
	217, 1745,
	219, 1745,
	220, 1745,
	221, 1745,
	222, 1745,
	223, 1745,
	224, 1745,
	225, 1745,
	226, 1745,
	227, 1745,
	228, 1745,
	229, 1745,
	231, 1745,
	232, 1745,
	234, 1745,
	235, 1745,
	236, 1745,
	237, 1745,
	238, 1745,
	242, 1745,
	243, 1745,
	244, 1745,
	245, 1745,
	248, 1745,
	249, 1745,
	250, 1745,
	251, 1745,
	253, 1745,
	255, 1745,
	256, 1745,
	258, 1745,
	260, 1745,
	261, 1745,
	262, 1745,
	264, 1745,
	268, 1745,
	269, 1745,
	270, 1745,
	271, 1745,
	272, 1745,
	273, 1745,
	275, 1745,
	276, 1745,
	277, 1745,
	279, 1745,
	280, 1745,
	282, 1745,
	283, 1745,
	286, 1745,
	287, 1745,
	288, 1745,
	289, 1745,
	290, 1745,
	291, 1745,
	292, 1745,
	295, 1745,
	296, 1745,
	297, 1745,
	298, 1745,
	300, 1745,
	301, 1745,
	302, 1745,
	303, 1745,
	304, 1745,
	305, 1745,
	306, 1745,
	307, 1745,
	308, 1745,
	309, 1745,
	310, 1745,
	311, 1745,
	312, 1745,
	313, 1745,
	314, 1745,
	315, 1745,
	316, 1745,
	317, 1745,
	318, 1745,
	319, 1745,
	320, 1745,
	321, 1745,
	322, 1745,
	324, 1745,
	326, 1745,
	327, 1745,
	328, 1745,
	329, 1745,
	330, 1745,
	331, 1745,
	332, 1745,
	333, 1745,
	334, 1745,
	335, 1745,
	336, 1745,
	337, 1745,
	338, 1745,
	339, 1745,
	340, 1745,
	341, 1745,
	342, 1745,
	344, 1745,
	345, 1745,
	347, 1745,
	349, 1745,
	350, 1745,
	351, 1745,
	352, 1745,
	354, 1745,
	355, 1745,
	356, 1745,
	357, 1745,
	358, 1745,
	361, 1745,
	363, 1745,
	365, 1745,
	366, 1745,
	367, 1745,
	368, 1745,
	371, 1745,
	372, 1745,
	373, 1745,
	375, 1745,
	377, 1745,
	378, 1745,
	379, 1745,
	380, 1745,
	381, 1745,
	382, 1745,
	383, 1745,
	384, 1745,
	385, 1745,
	386, 1745,
	387, 1745,
	388, 1745,
	389, 1745,
	391, 1745,
	392, 1745,
	393, 1745,
	394, 1745,
	395, 1745,
	396, 1745,
	397, 1745,
	398, 1745,
	399, 1745,
	400, 1745,
	401, 1745,
	402, 1745,
	403, 1745,
	404, 1745,
	405, 1745,
	407, 1745,
	408, 1745,
	409, 1745,
	411, 1745,
	412, 1745,
	413, 1745,
	414, 1745,
	415, 1745,
	416, 1745,
	417, 1745,
	418, 1745,
	419, 1745,
	420, 1745,
	421, 1745,
	422, 1745,
	423, 1745,
	424, 1745,
	426, 1745,
	428, 1745,
	429, 1745,
	430, 1745,
	436, 1745,
	437, 1745,
	438, 1745,
	440, 1745,
	441, 1745,
	442, 1745,
	443, 1745,
	444, 1745,
	445, 1745,
	446, 1745,
	447, 1745,
	448, 1745,
	449, 1745,
	450, 1745,
	452, 1745,
	453, 1745,
	454, 1745,
	456, 1745,
	457, 1745,
	458, 1745,
	459, 1745,
	460, 1745,
	461, 1745,
	462, 1745,
	464, 1745,
	465, 1745,
	466, 1745,
	467, 1745,
	468, 1745,
	469, 1745,
	470, 1745,
	471, 1745,
	472, 1745,
	473, 1745,
	474, 1745,
	475, 1745,
	476, 1745,
	478, 1745,
	479, 1745,
	480, 1745,
	481, 1745,
	482, 1745,
	483, 1745,
	485, 1745,
	486, 1745,
	487, 1745,
	488, 1745,
	489, 1745,
	490, 1745,
	492, 1745,
	493, 1745,
	494, 1745,
	495, 1745,
	496, 1745,
	497, 1745,
	498, 1745,
	499, 1745,
	501, 1745,
	503, 1745,
	504, 1745,
	505, 1745,
	506, 1745,
	507, 1745,
	508, 1745,
	509, 1745,
	510, 1745,
	511, 1745,
	512, 1745,
	513, 1745,
	514, 1745,
	515, 1745,
	516, 1745,
	517, 1745,
	518, 1745,
	519, 1745,
	520, 1745,
	521, 1745,
	523, 1745,
	524, 1745,
	526, 1745,
	527, 1745,
	529, 1745,
	530, 1745,
	531, 1745,
	532, 1745,
	533, 1745,
	534, 1745,
	536, 1745,
	537, 1745,
	539, 1745,
	540, 1745,
	541, 1745,
	542, 1745,
	543, 1745,
	545, 1745,
	547, 1745,
	548, 1745,
	549, 1745,
	550, 1745,
	551, 1745,
	552, 1745,
	553, 1745,
	555, 1745,
	556, 1745,
	557, 1745,
	558, 1745,
	559, 1745,
	560, 1745,
	561, 1745,
	564, 1745,
	565, 1745,
	566, 1745,
	567, 1745,
	568, 1745,
	569, 1745,
	570, 1745,
	571, 1745,
	573, 1745,
	576, 1745,
	577, 1745,
	578, 1745,
	579, 1745,
	580, 1745,
	581, 1745,
	583, 1745,
	584, 1745,
	585, 1745,
	586, 1745,
	587, 1745,
	588, 1745,
	589, 1745,
	590, 1745,
	595, 1745,
	596, 1745,
	597, 1745,
	598, 1745,
	599, 1745,
	600, 1745,
	-2, 0,
	-1, 164,
	1, 1593,
	135, 1593,
	260, 1593,
	346, 1593,
	408, 1593,
	418, 1593,
	604, 1593,
	636, 1593,
	-2, 0,
	-1, 166,
	1, 1593,
	636, 1593,
	-2, 0,
	-1, 167,
	1, 1593,
	636, 1593,
	-2, 0,
	-1, 168,
	1, 1593,
	544, 1593,
	636, 1593,
	-2, 0,
	-1, 200,
	156, 1713,
	176, 1713,
	189, 1713,
	252, 1713,
	285, 1713,
	359, 1713,
	370, 1713,
	562, 1713,
	-2, 1688,
	-1, 252,
	4, 1752,
	5, 1752,
	6, 1752,
	7, 1752,
	8, 1752,
	9, 1752,
	10, 1752,
	21, 1752,
	22, 1752,
	23, 1752,
	24, 1752,
	25, 1752,
	26, 1752,
	27, 1752,
	28, 1752,
	30, 1752,
	31, 1752,
	37, 1752,
	38, 1752,
	41, 1752,
	43, 1752,
	44, 1752,
	45, 1752,
	46, 1752,
	47, 1752,
	48, 1752,
	49, 1752,
	50, 1752,
	51, 1752,
	52, 1752,
	53, 1752,
	54, 1752,
	56, 1752,
	57, 1752,
	58, 1752,
	59, 1752,
	61, 1752,
	62, 1752,
	63, 1752,
	64, 1752,
	65, 1752,
	66, 1752,
	67, 1752,
	68, 1752,
	69, 1752,
	70, 1752,
	71, 1752,
	72, 1752,
	73, 1752,
	74, 1752,
	76, 1752,
	77, 1752,
	78, 1752,
	80, 1752,
	82, 1752,
	83, 1752,
	84, 1752,
	85, 1752,
	86, 1752,
	87, 1752,
	88, 1752,
	89, 1752,
	92, 1752,
	93, 1752,
	94, 1752,
	95, 1752,
	96, 1752,
	98, 1752,
	100, 1752,
	101, 1752,
	102, 1752,
	103, 1752,
	104, 1752,
	105, 1752,
	107, 1752,
	108, 1752,
	109, 1752,
	110, 1752,
	111, 1752,
	112, 1752,
	113, 1752,
	114, 1752,
	115, 1752,
	116, 1752,
	117, 1752,
	118, 1752,
	119, 1752,
	120, 1752,
	121, 1752,
	122, 1752,
	123, 1752,
	124, 1752,
	125, 1752,
	126, 1752,
	127, 1752,
	128, 1752,
	129, 1752,
	130, 1752,
	131, 1752,
	132, 1752,
	133, 1752,
	134, 1752,
	136, 1752,
	137, 1752,
	138, 1752,
	140, 1752,
	141, 1752,
	142, 1752,
	145, 1752,
	146, 1752,
	147, 1752,
	149, 1752,
	150, 1752,
	151, 1752,
	153, 1752,
	154, 1752,
	155, 1752,
	157, 1752,
	158, 1752,
	159, 1752,
	160, 1752,
	161, 1752,
	162, 1752,
	163, 1752,
	164, 1752,
	165, 1752,
	166, 1752,
	167, 1752,
	168, 1752,
	169, 1752,
	170, 1752,
	171, 1752,
	172, 1752,
	173, 1752,
	174, 1752,
	175, 1752,
	181, 1752,
	182, 1752,
	183, 1752,
	184, 1752,
	188, 1752,
	190, 1752,
	191, 1752,
	192, 1752,
	194, 1752,
	195, 1752,
	197, 1752,
	198, 1752,
	199, 1752,
	200, 1752,
	201, 1752,
	202, 1752,
	203, 1752,
	204, 1752,
	205, 1752,
	206, 1752,
	207, 1752,
	208, 1752,
	209, 1752,
	210, 1752,
	211, 1752,
	213, 1752,
	214, 1752,
	216, 1752,
	217, 1752,
	219, 1752,
	220, 1752,
	221, 1752,
	222, 1752,
	223, 1752,
	224, 1752,
	225, 1752,
	226, 1752,
	227, 1752,
	228, 1752,
	229, 1752,
	230, 1752,
	231, 1752,
	232, 1752,
	234, 1752,
	235, 1752,
	236, 1752,
	237, 1752,
	238, 1752,
	242, 1752,
	243, 1752,
	244, 1752,
	245, 1752,
	247, 1752,
	248, 1752,
	249, 1752,
	250, 1752,
	251, 1752,
	253, 1752,
	255, 1752,
	256, 1752,
	257, 1752,
	258, 1752,
	259, 1752,
	260, 1752,
	261, 1752,
	262, 1752,
	263, 1752,
	264, 1752,
	268, 1752,
	269, 1752,
	270, 1752,
	271, 1752,
	272, 1752,
	273, 1752,
	275, 1752,
	276, 1752,
	277, 1752,
	279, 1752,
	280, 1752,
	281, 1752,
	282, 1752,
	283, 1752,
	284, 1752,
	286, 1752,
	287, 1752,
	288, 1752,
	289, 1752,
	290, 1752,
	291, 1752,
	292, 1752,
	293, 1752,
	294, 1752,
	295, 1752,
	296, 1752,
	297, 1752,
	298, 1752,
	300, 1752,
	301, 1752,
	302, 1752,
	303, 1752,
	304, 1752,
	305, 1752,
	306, 1752,
	307, 1752,
	308, 1752,
	309, 1752,
	310, 1752,
	311, 1752,
	312, 1752,
	313, 1752,
	314, 1752,
	315, 1752,
	316, 1752,
	317, 1752,
	318, 1752,
	319, 1752,
	320, 1752,
	321, 1752,
	322, 1752,
	324, 1752,
	325, 1752,
	326, 1752,
	327, 1752,
	328, 1752,
	329, 1752,
	330, 1752,
	331, 1752,
	332, 1752,
	333, 1752,
	334, 1752,
	335, 1752,
	336, 1752,
	337, 1752,
	338, 1752,
	339, 1752,
	340, 1752,
	341, 1752,
	342, 1752,
	343, 1752,
	344, 1752,
	345, 1752,
	346, 1752,
	347, 1752,
	348, 1752,
	349, 1752,
	350, 1752,
	351, 1752,
	352, 1752,
	353, 1752,
	354, 1752,
	355, 1752,
	356, 1752,
	357, 1752,
	358, 1752,
	361, 1752,
	363, 1752,
	366, 1752,
	367, 1752,
	368, 1752,
	371, 1752,
	372, 1752,
	373, 1752,
	374, 1752,
	375, 1752,
	376, 1752,
	377, 1752,
	378, 1752,
	379, 1752,
	380, 1752,
	381, 1752,
	382, 1752,
	383, 1752,
	384, 1752,
	385, 1752,
	386, 1752,
	387, 1752,
	388, 1752,
	389, 1752,
	391, 1752,
	392, 1752,
	393, 1752,
	394, 1752,
	395, 1752,
	396, 1752,
	397, 1752,
	398, 1752,
	399, 1752,
	400, 1752,
	401, 1752,
	402, 1752,
	403, 1752,
	404, 1752,
	405, 1752,
	407, 1752,
	408, 1752,
	409, 1752,
	411, 1752,
	412, 1752,
	413, 1752,
	414, 1752,
	415, 1752,
	416, 1752,
	417, 1752,
	418, 1752,
	419, 1752,
	420, 1752,
	421, 1752,
	422, 1752,
	423, 1752,
	424, 1752,
	426, 1752,
	428, 1752,
	429, 1752,
	430, 1752,
	436, 1752,
	437, 1752,
	438, 1752,
	440, 1752,
	441, 1752,
	442, 1752,
	443, 1752,
	444, 1752,
	445, 1752,
	446, 1752,
	447, 1752,
	448, 1752,
	449, 1752,
	450, 1752,
	452, 1752,
	453, 1752,
	454, 1752,
	455, 1752,
	456, 1752,
	457, 1752,
	458, 1752,
	459, 1752,
	460, 1752,
	461, 1752,
	462, 1752,
	464, 1752,
	465, 1752,
	466, 1752,
	467, 1752,
	468, 1752,
	469, 1752,
	470, 1752,
	471, 1752,
	472, 1752,
	473, 1752,
	474, 1752,
	475, 1752,
	476, 1752,
	478, 1752,
	479, 1752,
	480, 1752,
	481, 1752,
	482, 1752,
	483, 1752,
	484, 1752,
	485, 1752,
	486, 1752,
	487, 1752,
	488, 1752,
	489, 1752,
	490, 1752,
	491, 1752,
	492, 1752,
	493, 1752,
	494, 1752,
	495, 1752,
	496, 1752,
	497, 1752,
	498, 1752,
	499, 1752,
	501, 1752,
	503, 1752,
	504, 1752,
	505, 1752,
	506, 1752,
	507, 1752,
	508, 1752,
	509, 1752,
	510, 1752,
	511, 1752,
	512, 1752,
	513, 1752,
	514, 1752,
	515, 1752,
	516, 1752,
	517, 1752,
	518, 1752,
	519, 1752,
	520, 1752,
	521, 1752,
	523, 1752,
	524, 1752,
	525, 1752,
	526, 1752,
	527, 1752,
	529, 1752,
	530, 1752,
	531, 1752,
	532, 1752,
	533, 1752,
	534, 1752,
	536, 1752,
	537, 1752,
	539, 1752,
	540, 1752,
	541, 1752,
	542, 1752,
	543, 1752,
	545, 1752,
	547, 1752,
	548, 1752,
	549, 1752,
	550, 1752,
	551, 1752,
	552, 1752,
	553, 1752,
	554, 1752,
	555, 1752,
	556, 1752,
	557, 1752,
	558, 1752,
	559, 1752,
	560, 1752,
	561, 1752,
	563, 1752,
	564, 1752,
	565, 1752,
	566, 1752,
	567, 1752,
	568, 1752,
	569, 1752,
	570, 1752,
	571, 1752,
	572, 1752,
	573, 1752,
	576, 1752,
	577, 1752,
	578, 1752,
	579, 1752,
	580, 1752,
	581, 1752,
	583, 1752,
	584, 1752,
	585, 1752,
	586, 1752,
	587, 1752,
	588, 1752,
	589, 1752,
	590, 1752,
	595, 1752,
	596, 1752,
	597, 1752,
	598, 1752,
	599, 1752,
	600, 1752,
	601, 1752,
	616, 1752,
	623, 1752,
	624, 1752,
	625, 1752,
	633, 1752,
	637, 1752,
	-2, 0,
	-1, 801,
	4, 1472,
	21, 1472,
	22, 1472,
	23, 1472,
	24, 1472,
	25, 1472,
	26, 1472,
	27, 1472,
	28, 1472,
	30, 1472,
	31, 1472,
	37, 1472,
	41, 1472,
	43, 1472,
	44, 1472,
	46, 1472,
	47, 1472,
	48, 1472,
	49, 1472,
	50, 1472,
	51, 1472,
	52, 1472,
	53, 1472,
	54, 1472,
	56, 1472,
	57, 1472,
	58, 1472,
	59, 1472,
	61, 1472,
	62, 1472,
	63, 1472,
	64, 1472,
	65, 1472,
	66, 1472,
	67, 1472,
	71, 1472,
	72, 1472,
	73, 1472,
	74, 1472,
	76, 1472,
	77, 1472,
	78, 1472,
	82, 1472,
	83, 1472,
	84, 1472,
	85, 1472,
	86, 1472,
	87, 1472,
	88, 1472,
	89, 1472,
	92, 1472,
	93, 1472,
	94, 1472,
	95, 1472,
	96, 1472,
	98, 1472,
	100, 1472,
	101, 1472,
	102, 1472,
	103, 1472,
	104, 1472,
	105, 1472,
	107, 1472,
	108, 1472,
	109, 1472,
	111, 1472,
	112, 1472,
	113, 1472,
	121, 1472,
	122, 1472,
	123, 1472,
	124, 1472,
	125, 1472,
	127, 1472,
	128, 1472,
	129, 1472,
	130, 1472,
	132, 1472,
	133, 1472,
	134, 1472,
	136, 1472,
	137, 1472,
	138, 1472,
	140, 1472,
	141, 1472,
	142, 1472,
	145, 1472,
	146, 1472,
	147, 1472,
	149, 1472,
	150, 1472,
	151, 1472,
	153, 1472,
	154, 1472,
	155, 1472,
	157, 1472,
	158, 1472,
	159, 1472,
	160, 1472,
	161, 1472,
	162, 1472,
	163, 1472,
	164, 1472,
	165, 1472,
	166, 1472,
	167, 1472,
	168, 1472,
	169, 1472,
	170, 1472,
	171, 1472,
	172, 1472,
	173, 1472,
	175, 1472,
	181, 1472,
	182, 1472,
	183, 1472,
	184, 1472,
	188, 1472,
	190, 1472,
	191, 1472,
	192, 1472,
	194, 1472,
	195, 1472,
	198, 1472,
	199, 1472,
	200, 1472,
	201, 1472,
	202, 1472,
	203, 1472,
	204, 1472,
	205, 1472,
	206, 1472,
	207, 1472,
	208, 1472,
	209, 1472,
	210, 1472,
	211, 1472,
	213, 1472,
	214, 1472,
	216, 1472,
	217, 1472,
	219, 1472,
	220, 1472,
	221, 1472,
	222, 1472,
	223, 1472,
	224, 1472,
	225, 1472,
	226, 1472,
	227, 1472,
	228, 1472,
	229, 1472,
	231, 1472,
	232, 1472,
	234, 1472,
	235, 1472,
	236, 1472,
	237, 1472,
	238, 1472,
	242, 1472,
	243, 1472,
	244, 1472,
	245, 1472,
	248, 1472,
	249, 1472,
	250, 1472,
	251, 1472,
	253, 1472,
	255, 1472,
	256, 1472,
	258, 1472,
	260, 1472,
	261, 1472,
	262, 1472,
	264, 1472,
	268, 1472,
	269, 1472,
	270, 1472,
	271, 1472,
	272, 1472,
	273, 1472,
	275, 1472,
	276, 1472,
	277, 1472,
	279, 1472,
	280, 1472,
	282, 1472,
	283, 1472,
	286, 1472,
	287, 1472,
	288, 1472,
	289, 1472,
	290, 1472,
	291, 1472,
	292, 1472,
	295, 1472,
	296, 1472,
	297, 1472,
	298, 1472,
	300, 1472,
	301, 1472,
	302, 1472,
	303, 1472,
	304, 1472,
	305, 1472,
	306, 1472,
	307, 1472,
	308, 1472,
	309, 1472,
	310, 1472,
	311, 1472,
	312, 1472,
	313, 1472,
	314, 1472,
	315, 1472,
	316, 1472,
	317, 1472,
	318, 1472,
	319, 1472,
	320, 1472,
	321, 1472,
	322, 1472,
	324, 1472,
	326, 1472,
	327, 1472,
	328, 1472,
	329, 1472,
	330, 1472,
	331, 1472,
	332, 1472,
	333, 1472,
	334, 1472,
	335, 1472,
	336, 1472,
	337, 1472,
	338, 1472,
	339, 1472,
	340, 1472,
	341, 1472,
	342, 1472,
	344, 1472,
	345, 1472,
	347, 1472,
	349, 1472,
	350, 1472,
	351, 1472,
	352, 1472,
	354, 1472,
	355, 1472,
	356, 1472,
	357, 1472,
	358, 1472,
	361, 1472,
	363, 1472,
	366, 1472,
	367, 1472,
	368, 1472,
	371, 1472,
	372, 1472,
	373, 1472,
	375, 1472,
	377, 1472,
	378, 1472,
	379, 1472,
	380, 1472,
	381, 1472,
	382, 1472,
	383, 1472,
	384, 1472,
	385, 1472,
	386, 1472,
	387, 1472,
	388, 1472,
	389, 1472,
	391, 1472,
	392, 1472,
	393, 1472,
	394, 1472,
	395, 1472,
	396, 1472,
	397, 1472,
	398, 1472,
	399, 1472,
	400, 1472,
	401, 1472,
	402, 1472,
	403, 1472,
	404, 1472,
	405, 1472,
	407, 1472,
	408, 1472,
	409, 1472,
	411, 1472,
	412, 1472,
	413, 1472,
	414, 1472,
	415, 1472,
	416, 1472,
	417, 1472,
	418, 1472,
	419, 1472,
	420, 1472,
	421, 1472,
	422, 1472,
	423, 1472,
	424, 1472,
	426, 1472,
	428, 1472,
	429, 1472,
	430, 1472,
	436, 1472,
	437, 1472,
	438, 1472,
	440, 1472,
	441, 1472,
	442, 1472,
	443, 1472,
	444, 1472,
	445, 1472,
	446, 1472,
	447, 1472,
	448, 1472,
	449, 1472,
	450, 1472,
	452, 1472,
	453, 1472,
	454, 1472,
	456, 1472,
	457, 1472,
	458, 1472,
	459, 1472,
	460, 1472,
	461, 1472,
	462, 1472,
	464, 1472,
	465, 1472,
	466, 1472,
	467, 1472,
	468, 1472,
	469, 1472,
	470, 1472,
	471, 1472,
	472, 1472,
	473, 1472,
	474, 1472,
	475, 1472,
	476, 1472,
	478, 1472,
	479, 1472,
	480, 1472,
	481, 1472,
	482, 1472,
	483, 1472,
	485, 1472,
	486, 1472,
	487, 1472,
	488, 1472,
	489, 1472,
	490, 1472,
	492, 1472,
	493, 1472,
	494, 1472,
	495, 1472,
	496, 1472,
	497, 1472,
	498, 1472,
	499, 1472,
	501, 1472,
	503, 1472,
	504, 1472,
	505, 1472,
	506, 1472,
	507, 1472,
	508, 1472,
	509, 1472,
	510, 1472,
	511, 1472,
	512, 1472,
	513, 1472,
	514, 1472,
	515, 1472,
	516, 1472,
	517, 1472,
	518, 1472,
	519, 1472,
	520, 1472,
	521, 1472,
	523, 1472,
	524, 1472,
	526, 1472,
	527, 1472,
	529, 1472,
	530, 1472,
	531, 1472,
	532, 1472,
	533, 1472,
	534, 1472,
	536, 1472,
	537, 1472,
	539, 1472,
	540, 1472,
	541, 1472,
	542, 1472,
	543, 1472,
	545, 1472,
	547, 1472,
	548, 1472,
	549, 1472,
	550, 1472,
	551, 1472,
	552, 1472,
	553, 1472,
	555, 1472,
	556, 1472,
	557, 1472,
	558, 1472,
	559, 1472,
	560, 1472,
	561, 1472,
	564, 1472,
	565, 1472,
	566, 1472,
	567, 1472,
	568, 1472,
	569, 1472,
	570, 1472,
	571, 1472,
	573, 1472,
	576, 1472,
	577, 1472,
	578, 1472,
	579, 1472,
	580, 1472,
	581, 1472,
	583, 1472,
	584, 1472,
	585, 1472,
	586, 1472,
	587, 1472,
	588, 1472,
	589, 1472,
	590, 1472,
	595, 1472,
	596, 1472,
	597, 1472,
	598, 1472,
	599, 1472,
	600, 1472,
	-2, 0,
	-1, 820,
	196, 2550,
	544, 2550,
	615, 2550,
	635, 2550,
	-2, 0,
	-1, 821,
	196, 2536,
	544, 2536,
	615, 2536,
	635, 2536,
	-2, 0,
	-1, 823,
	196, 2818,
	544, 2818,
	615, 2818,
	635, 2818,
	-2, 0,
	-1, 826,
	196, 2666,
	544, 2666,
	615, 2666,
	635, 2666,
	-2, 0,
	-1, 827,
	196, 2863,
	544, 2863,
	615, 2863,
	635, 2863,
	-2, 0,
	-1, 835,
	196, 2694,
	544, 2694,
	615, 2694,
	635, 2694,
	-2, 777,
	-1, 851,
	8, 910,
	29, 910,
	623, 910,
	624, 910,
	-2, 915,
	-1, 855,
	1, 2604,
	636, 2604,
	-2, 915,
	-1, 856,
	1, 2654,
	636, 2654,
	-2, 915,
	-1, 859,
	1, 2699,
	636, 2699,
	-2, 908,
	-1, 860,
	1, 2755,
	636, 2755,
	-2, 909,
	-1, 861,
	1, 2609,
	636, 2609,
	-2, 912,
	-1, 862,
	1, 2523,
	636, 2523,
	-2, 913,
	-1, 897,
	635, 2482,
	638, 2482,
	-2, 1132,
	-1, 898,
	635, 2484,
	638, 2484,
	-2, 1133,
	-1, 899,
	635, 2483,
	638, 2483,
	-2, 1134,
	-1, 900,
	638, 2406,
	-2, 1135,
	-1, 926,
	189, 287,
	-2, 0,
	-1, 949,
	45, 2455,
	-2, 0,
	-1, 950,
	583, 1450,
	-2, 1218,
	-1, 966,
	4, 1886,
	21, 1886,
	22, 1886,
	23, 1886,
	24, 1886,
	25, 1886,
	26, 1886,
	27, 1886,
	28, 1886,
	30, 1886,
	31, 1886,
	37, 1886,
	41, 1886,
	43, 1886,
	44, 1886,
	46, 1886,
	47, 1886,
	48, 1886,
	49, 1886,
	50, 1886,
	51, 1886,
	52, 1886,
	53, 1886,
	54, 1886,
	56, 1886,
	57, 1886,
	58, 1886,
	59, 1886,
	61, 1886,
	62, 1886,
	63, 1886,
	64, 1886,
	65, 1886,
	66, 1886,
	67, 1886,
	71, 1886,
	72, 1886,
	73, 1886,
	74, 1886,
	76, 1886,
	77, 1886,
	78, 1886,
	82, 1886,
	83, 1886,
	84, 1886,
	85, 1886,
	86, 1886,
	87, 1886,
	88, 1886,
	89, 1886,
	92, 1886,
	93, 1886,
	94, 1886,
	95, 1886,
	96, 1886,
	98, 1886,
	100, 1886,
	101, 1886,
	102, 1886,
	103, 1886,
	104, 1886,
	105, 1886,
	107, 1886,
	108, 1886,
	109, 1886,
	111, 1886,
	112, 1886,
	113, 1886,
	121, 1886,
	122, 1886,
	123, 1886,
	124, 1886,
	125, 1886,
	127, 1886,
	128, 1886,
	129, 1886,
	130, 1886,
	132, 1886,
	133, 1886,
	134, 1886,
	136, 1886,
	137, 1886,
	138, 1886,
	140, 1886,
	141, 1886,
	142, 1886,
	145, 1886,
	146, 1886,
	147, 1886,
	149, 1886,
	150, 1886,
	151, 1886,
	153, 1886,
	154, 1886,
	155, 1886,
	157, 1886,
	158, 1886,
	159, 1886,
	160, 1886,
	161, 1886,
	162, 1886,
	163, 1886,
	164, 1886,
	165, 1886,
	166, 1886,
	167, 1886,
	168, 1886,
	169, 1886,
	170, 1886,
	171, 1886,
	172, 1886,
	173, 1886,
	175, 1886,
	181, 1886,
	182, 1886,
	183, 1886,
	184, 1886,
	188, 1886,
	190, 1886,
	191, 1886,
	192, 1886,
	194, 1886,
	195, 1886,
	198, 1886,
	199, 1886,
	200, 1886,
	201, 1886,
	202, 1886,
	203, 1886,
	204, 1886,
	205, 1886,
	206, 1886,
	207, 1886,
	208, 1886,
	209, 1886,
	210, 1886,
	211, 1886,
	213, 1886,
	214, 1886,
	216, 1886,
	217, 1886,
	219, 1886,
	220, 1886,
	221, 1886,
	222, 1886,
	223, 1886,
	224, 1886,
	225, 1886,
	226, 1886,
	227, 1886,
	228, 1886,
	229, 1886,
	231, 1886,
	232, 1886,
	234, 1886,
	235, 1886,
	236, 1886,
	237, 1886,
	238, 1886,
	242, 1886,
	243, 1886,
	244, 1886,
	245, 1886,
	248, 1886,
	249, 1886,
	250, 1886,
	251, 1886,
	253, 1886,
	255, 1886,
	256, 1886,
	258, 1886,
	260, 1886,
	261, 1886,
	262, 1886,
	264, 1886,
	268, 1886,
	269, 1886,
	270, 1886,
	271, 1886,
	272, 1886,
	273, 1886,
	275, 1886,
	276, 1886,
	277, 1886,
	279, 1886,
	280, 1886,
	282, 1886,
	283, 1886,
	286, 1886,
	287, 1886,
	288, 1886,
	289, 1886,
	290, 1886,
	291, 1886,
	292, 1886,
	295, 1886,
	296, 1886,
	297, 1886,
	298, 1886,
	300, 1886,
	301, 1886,
	302, 1886,
	303, 1886,
	304, 1886,
	305, 1886,
	306, 1886,
	307, 1886,
	308, 1886,
	309, 1886,
	310, 1886,
	311, 1886,
	312, 1886,
	313, 1886,
	314, 1886,
	315, 1886,
	316, 1886,
	317, 1886,
	318, 1886,
	319, 1886,
	320, 1886,
	321, 1886,
	322, 1886,
	324, 1886,
	326, 1886,
	327, 1886,
	328, 1886,
	329, 1886,
	330, 1886,
	331, 1886,
	332, 1886,
	333, 1886,
	334, 1886,
	335, 1886,
	336, 1886,
	337, 1886,
	338, 1886,
	339, 1886,
	340, 1886,
	341, 1886,
	342, 1886,
	344, 1886,
	345, 1886,
	347, 1886,
	349, 1886,
	350, 1886,
	351, 1886,
	352, 1886,
	354, 1886,
	355, 1886,
	356, 1886,
	357, 1886,
	358, 1886,
	361, 1886,
	363, 1886,
	366, 1886,
	367, 1886,
	368, 1886,
	371, 1886,
	372, 1886,
	373, 1886,
	375, 1886,
	377, 1886,
	378, 1886,
	379, 1886,
	380, 1886,
	381, 1886,
	382, 1886,
	383, 1886,
	384, 1886,
	385, 1886,
	386, 1886,
	387, 1886,
	388, 1886,
	389, 1886,
	391, 1886,
	392, 1886,
	393, 1886,
	394, 1886,
	395, 1886,
	396, 1886,
	397, 1886,
	398, 1886,
	399, 1886,
	400, 1886,
	401, 1886,
	402, 1886,
	403, 1886,
	404, 1886,
	405, 1886,
	407, 1886,
	408, 1886,
	409, 1886,
	411, 1886,
	412, 1886,
	413, 1886,
	414, 1886,
	415, 1886,
	416, 1886,
	417, 1886,
	418, 1886,
	419, 1886,
	420, 1886,
	421, 1886,
	422, 1886,
	423, 1886,
	424, 1886,
	426, 1886,
	428, 1886,
	429, 1886,
	430, 1886,
	436, 1886,
	437, 1886,
	438, 1886,
	440, 1886,
	441, 1886,
	442, 1886,
	443, 1886,
	444, 1886,
	445, 1886,
	446, 1886,
	447, 1886,
	448, 1886,
	449, 1886,
	450, 1886,
	452, 1886,
	453, 1886,
	454, 1886,
	456, 1886,
	457, 1886,
	458, 1886,
	459, 1886,
	460, 1886,
	461, 1886,
	462, 1886,
	464, 1886,
	465, 1886,
	466, 1886,
	467, 1886,
	468, 1886,
	469, 1886,
	470, 1886,
	471, 1886,
	472, 1886,
	473, 1886,
	474, 1886,
	475, 1886,
	476, 1886,
	478, 1886,
	479, 1886,
	480, 1886,
	481, 1886,
	482, 1886,
	483, 1886,
	485, 1886,
	486, 1886,
	487, 1886,
	488, 1886,
	489, 1886,
	490, 1886,
	492, 1886,
	493, 1886,
	494, 1886,
	495, 1886,
	496, 1886,
	497, 1886,
	498, 1886,
	499, 1886,
	501, 1886,
	503, 1886,
	504, 1886,
	505, 1886,
	506, 1886,
	507, 1886,
	508, 1886,
	509, 1886,
	510, 1886,
	511, 1886,
	512, 1886,
	513, 1886,
	514, 1886,
	515, 1886,
	516, 1886,
	517, 1886,
	518, 1886,
	519, 1886,
	520, 1886,
	521, 1886,
	523, 1886,
	524, 1886,
	526, 1886,
	527, 1886,
	529, 1886,
	530, 1886,
	531, 1886,
	532, 1886,
	533, 1886,
	534, 1886,
	536, 1886,
	537, 1886,
	539, 1886,
	540, 1886,
	541, 1886,
	542, 1886,
	543, 1886,
	545, 1886,
	547, 1886,
	548, 1886,
	549, 1886,
	550, 1886,
	551, 1886,
	552, 1886,
	553, 1886,
	555, 1886,
	556, 1886,
	557, 1886,
	558, 1886,
	559, 1886,
	560, 1886,
	561, 1886,
	564, 1886,
	565, 1886,
	566, 1886,
	567, 1886,
	568, 1886,
	569, 1886,
	570, 1886,
	571, 1886,
	573, 1886,
	576, 1886,
	577, 1886,
	578, 1886,
	579, 1886,
	580, 1886,
	581, 1886,
	583, 1886,
	584, 1886,
	585, 1886,
	586, 1886,
	587, 1886,
	588, 1886,
	589, 1886,
	590, 1886,
	595, 1886,
	596, 1886,
	597, 1886,
	598, 1886,
	599, 1886,
	600, 1886,
	-2, 0,
	-1, 976,
	272, 454,
	-2, 0,
	-1, 1054,
	196, 954,
	-2, 0,
	-1, 1055,
	413, 1007,
	483, 1007,
	527, 1007,
	549, 1007,
	-2, 0,
	-1, 1056,
	413, 1006,
	483, 1006,
	527, 1006,
	549, 1006,
	-2, 928,
	-1, 1060,
	1, 1059,
	632, 1059,
	634, 1059,
	636, 1059,
	-2, 0,
	-1, 1062,
	1, 981,
	632, 981,
	634, 981,
	636, 981,
	-2, 0,
	-1, 1063,
	1, 985,
	632, 985,
	634, 985,
	636, 985,
	-2, 0,
	-1, 1064,
	1, 1131,
	189, 1131,
	632, 1131,
	634, 1131,
	636, 1131,
	-2, 0,
	-1, 1072,
	1, 1012,
	632, 1012,
	634, 1012,
	636, 1012,
	-2, 0,
	-1, 1079,
	1, 1059,
	632, 1059,
	634, 1059,
	636, 1059,
	-2, 0,
	-1, 1080,
	1, 1061,
	632, 1061,
	634, 1061,
	636, 1061,
	-2, 0,
	-1, 1081,
	1, 1064,
	632, 1064,
	634, 1064,
	636, 1064,
	-2, 0,
	-1, 1089,
	1, 1094,
	632, 1094,
	634, 1094,
	636, 1094,
	-2, 0,
	-1, 1090,
	1, 1096,
	632, 1096,
	634, 1096,
	636, 1096,
	-2, 0,
	-1, 1095,
	1, 1124,
	632, 1124,
	634, 1124,
	636, 1124,
	-2, 0,
	-1, 1151,
	176, 1756,
	189, 1756,
	285, 1756,
	359, 1756,
	-2, 1692,
	-1, 1167,
	176, 1755,
	189, 1755,
	285, 1755,
	359, 1755,
	-2, 1689,
	-1, 1196,
	635, 2481,
	-2, 785,
	-1, 1225,
	5, 2473,
	633, 2471,
	-2, 2462,
	-1, 1233,
	5, 2494,
	633, 2491,
	-2, 2482,
	-1, 1234,
	5, 2495,
	633, 2492,
	-2, 2483,
	-1, 1242,
	635, 2479,
	-2, 2461,
	-1, 1243,
	633, 2951,
	-2, 2480,
	-1, 1266,
	633, 2950,
	-2, 2496,
	-1, 1267,
	5, 1961,
	-2, 2921,
	-1, 1268,
	5, 1962,
	-2, 2922,
	-1, 1269,
	5, 1963,
	-2, 2936,
	-1, 1270,
	5, 1964,
	-2, 2900,
	-1, 1271,
	5, 1965,
	-2, 2934,
	-1, 1272,
	5, 1973,
	-2, 2913,
	-1, 1273,
	5, 1960,
	-2, 2909,
	-1, 1274,
	5, 1960,
	-2, 2908,
	-1, 1275,
	5, 1960,
	-2, 2927,
	-1, 1276,
	5, 1971,
	-2, 2902,
	-1, 1277,
	5, 1976,
	-2, 2901,
	-1, 1278,
	5, 1978,
	-2, 2946,
	-1, 1281,
	5, 2000,
	-2, 2939,
	-1, 1282,
	5, 1992,
	-2, 2940,
	-1, 1283,
	5, 2000,
	-2, 2941,
	-1, 1284,
	5, 1996,
	-2, 2942,
	-1, 1285,
	5, 1946,
	-2, 2914,
	-1, 1286,
	5, 1947,
	-2, 2915,
	-1, 1287,
	5, 1948,
	-2, 2903,
	-1, 1315,
	5, 1983,
	-2, 2947,
	-1, 1316,
	5, 1984,
	-2, 2937,
	-1, 1317,
	5, 1985,
	584, 1985,
	-2, 2904,
	-1, 1318,
	5, 1986,
	584, 1986,
	-2, 2905,
	-1, 1356,
	633, 2491,
	-2, 2482,
	-1, 1357,
	633, 2492,
	-2, 2483,
	-1, 1458,
	196, 2863,
	544, 2863,
	615, 2863,
	635, 2863,
	-2, 0,
	-1, 1463,
	1, 761,
	636, 761,
	-2, 1601,
	-1, 1610,
	379, 2456,
	440, 2456,
	485, 2456,
	625, 2456,
	-2, 2444,
	-1, 1616,
	196, 147,
	279, 147,
	344, 147,
	590, 147,
	-2, 2858,
	-1, 1617,
	196, 148,
	279, 148,
	344, 148,
	590, 148,
	-2, 2595,
	-1, 1618,
	196, 149,
	279, 149,
	344, 149,
	590, 149,
	-2, 2778,
	-1, 1624,
	637, 2456,
	-2, 2458,
	-1, 1648,
	1, 1447,
	445, 1401,
	485, 1401,
	607, 1401,
	612, 1401,
	632, 1447,
	634, 1447,
	636, 1447,
	-2, 1741,
	-1, 1654,
	212, 1544,
	233, 1544,
	454, 1544,
	-2, 0,
	-1, 1704,
	422, 1217,
	583, 1217,
	-2, 449,
	-1, 1722,
	45, 2454,
	-2, 1180,
	-1, 1729,
	1, 1447,
	632, 1447,
	634, 1447,
	636, 1447,
	-2, 1741,
	-1, 1737,
	4, 1472,
	21, 1472,
	22, 1472,
	23, 1472,
	24, 1472,
	25, 1472,
	26, 1472,
	27, 1472,
	28, 1472,
	30, 1472,
	31, 1472,
	37, 1472,
	41, 1472,
	43, 1472,
	44, 1472,
	46, 1472,
	47, 1472,
	48, 1472,
	49, 1472,
	50, 1472,
	51, 1472,
	52, 1472,
	53, 1472,
	54, 1472,
	56, 1472,
	57, 1472,
	58, 1472,
	59, 1472,
	61, 1472,
	62, 1472,
	63, 1472,
	64, 1472,
	65, 1472,
	66, 1472,
	67, 1472,
	71, 1472,
	72, 1472,
	73, 1472,
	74, 1472,
	76, 1472,
	77, 1472,
	78, 1472,
	82, 1472,
	83, 1472,
	84, 1472,
	85, 1472,
	86, 1472,
	87, 1472,
	88, 1472,
	89, 1472,
	92, 1472,
	93, 1472,
	94, 1472,
	95, 1472,
	96, 1472,
	98, 1472,
	100, 1472,
	101, 1472,
	102, 1472,
	103, 1472,
	104, 1472,
	105, 1472,
	107, 1472,
	108, 1472,
	109, 1472,
	111, 1472,
	112, 1472,
	113, 1472,
	121, 1472,
	122, 1472,
	123, 1472,
	124, 1472,
	125, 1472,
	127, 1472,
	128, 1472,
	129, 1472,
	130, 1472,
	132, 1472,
	133, 1472,
	134, 1472,
	136, 1472,
	137, 1472,
	138, 1472,
	140, 1472,
	141, 1472,
	142, 1472,
	145, 1472,
	146, 1472,
	147, 1472,
	149, 1472,
	150, 1472,
	151, 1472,
	153, 1472,
	154, 1472,
	155, 1472,
	157, 1472,
	158, 1472,
	159, 1472,
	160, 1472,
	161, 1472,
	162, 1472,
	163, 1472,
	164, 1472,
	165, 1472,
	166, 1472,
	167, 1472,
	168, 1472,
	169, 1472,
	170, 1472,
	171, 1472,
	172, 1472,
	173, 1472,
	181, 1472,
	182, 1472,
	183, 1472,
	184, 1472,
	188, 1472,
	190, 1472,
	191, 1472,
	192, 1472,
	194, 1472,
	195, 1472,
	198, 1472,
	199, 1472,
	200, 1472,
	201, 1472,
	202, 1472,
	203, 1472,
	204, 1472,
	205, 1472,
	206, 1472,
	207, 1472,
	208, 1472,
	209, 1472,
	210, 1472,
	211, 1472,
	213, 1472,
	214, 1472,
	216, 1472,
	217, 1472,
	219, 1472,
	220, 1472,
	221, 1472,
	222, 1472,
	223, 1472,
	224, 1472,
	225, 1472,
	226, 1472,
	227, 1472,
	228, 1472,
	229, 1472,
	231, 1472,
	232, 1472,
	234, 1472,
	235, 1472,
	236, 1472,
	237, 1472,
	238, 1472,
	243, 1472,
	244, 1472,
	245, 1472,
	248, 1472,
	249, 1472,
	250, 1472,
	251, 1472,
	253, 1472,
	255, 1472,
	256, 1472,
	258, 1472,
	260, 1472,
	261, 1472,
	262, 1472,
	264, 1472,
	268, 1472,
	269, 1472,
	270, 1472,
	271, 1472,
	272, 1472,
	273, 1472,
	275, 1472,
	276, 1472,
	277, 1472,
	279, 1472,
	280, 1472,
	282, 1472,
	283, 1472,
	286, 1472,
	287, 1472,
	288, 1472,
	289, 1472,
	290, 1472,
	291, 1472,
	292, 1472,
	295, 1472,
	296, 1472,
	297, 1472,
	298, 1472,
	300, 1472,
	301, 1472,
	302, 1472,
	303, 1472,
	304, 1472,
	305, 1472,
	306, 1472,
	307, 1472,
	308, 1472,
	309, 1472,
	310, 1472,
	311, 1472,
	312, 1472,
	313, 1472,
	314, 1472,
	315, 1472,
	316, 1472,
	317, 1472,
	318, 1472,
	319, 1472,
	320, 1472,
	321, 1472,
	322, 1472,
	324, 1472,
	326, 1472,
	327, 1472,
	328, 1472,
	329, 1472,
	330, 1472,
	331, 1472,
	332, 1472,
	333, 1472,
	334, 1472,
	335, 1472,
	336, 1472,
	337, 1472,
	338, 1472,
	339, 1472,
	340, 1472,
	341, 1472,
	342, 1472,
	344, 1472,
	345, 1472,
	349, 1472,
	350, 1472,
	351, 1472,
	352, 1472,
	354, 1472,
	355, 1472,
	356, 1472,
	357, 1472,
	358, 1472,
	361, 1472,
	363, 1472,
	364, 1472,
	366, 1472,
	367, 1472,
	368, 1472,
	371, 1472,
	372, 1472,
	373, 1472,
	375, 1472,
	377, 1472,
	378, 1472,
	379, 1472,
	380, 1472,
	381, 1472,
	382, 1472,
	383, 1472,
	384, 1472,
	385, 1472,
	386, 1472,
	387, 1472,
	388, 1472,
	389, 1472,
	391, 1472,
	392, 1472,
	393, 1472,
	394, 1472,
	395, 1472,
	396, 1472,
	397, 1472,
	398, 1472,
	399, 1472,
	400, 1472,
	401, 1472,
	402, 1472,
	403, 1472,
	404, 1472,
	405, 1472,
	407, 1472,
	408, 1472,
	409, 1472,
	411, 1472,
	412, 1472,
	413, 1472,
	414, 1472,
	415, 1472,
	416, 1472,
	417, 1472,
	418, 1472,
	419, 1472,
	420, 1472,
	421, 1472,
	422, 1472,
	423, 1472,
	424, 1472,
	426, 1472,
	428, 1472,
	429, 1472,
	430, 1472,
	436, 1472,
	437, 1472,
	438, 1472,
	440, 1472,
	441, 1472,
	442, 1472,
	443, 1472,
	444, 1472,
	445, 1472,
	446, 1472,
	447, 1472,
	448, 1472,
	449, 1472,
	450, 1472,
	452, 1472,
	453, 1472,
	454, 1472,
	456, 1472,
	457, 1472,
	458, 1472,
	459, 1472,
	460, 1472,
	461, 1472,
	462, 1472,
	464, 1472,
	465, 1472,
	466, 1472,
	467, 1472,
	468, 1472,
	469, 1472,
	470, 1472,
	471, 1472,
	472, 1472,
	473, 1472,
	474, 1472,
	475, 1472,
	476, 1472,
	478, 1472,
	479, 1472,
	480, 1472,
	481, 1472,
	482, 1472,
	483, 1472,
	485, 1472,
	486, 1472,
	487, 1472,
	488, 1472,
	489, 1472,
	490, 1472,
	492, 1472,
	493, 1472,
	494, 1472,
	495, 1472,
	496, 1472,
	497, 1472,
	498, 1472,
	499, 1472,
	501, 1472,
	503, 1472,
	504, 1472,
	505, 1472,
	506, 1472,
	507, 1472,
	508, 1472,
	509, 1472,
	510, 1472,
	511, 1472,
	512, 1472,
	513, 1472,
	514, 1472,
	515, 1472,
	516, 1472,
	517, 1472,
	518, 1472,
	519, 1472,
	520, 1472,
	521, 1472,
	523, 1472,
	524, 1472,
	526, 1472,
	527, 1472,
	529, 1472,
	530, 1472,
	531, 1472,
	532, 1472,
	533, 1472,
	534, 1472,
	536, 1472,
	537, 1472,
	539, 1472,
	540, 1472,
	541, 1472,
	542, 1472,
	543, 1472,
	545, 1472,
	547, 1472,
	548, 1472,
	549, 1472,
	550, 1472,
	551, 1472,
	552, 1472,
	553, 1472,
	555, 1472,
	556, 1472,
	557, 1472,
	558, 1472,
	559, 1472,
	560, 1472,
	561, 1472,
	564, 1472,
	565, 1472,
	566, 1472,
	567, 1472,
	568, 1472,
	569, 1472,
	570, 1472,
	571, 1472,
	573, 1472,
	576, 1472,
	577, 1472,
	578, 1472,
	579, 1472,
	580, 1472,
	581, 1472,
	583, 1472,
	584, 1472,
	585, 1472,
	586, 1472,
	587, 1472,
	588, 1472,
	589, 1472,
	590, 1472,
	595, 1472,
	596, 1472,
	597, 1472,
	598, 1472,
	599, 1472,
	600, 1472,
	-2, 0,
	-1, 1760,
	1, 591,
	632, 591,
	634, 591,
	636, 591,
	-2, 1712,
	-1, 1763,
	4, 2945,
	11, 2945,
	12, 2945,
	14, 2945,
	15, 2945,
	16, 2945,
	17, 2945,
	18, 2945,
	19, 2945,
	21, 2945,
	22, 2945,
	23, 2945,
	24, 2945,
	25, 2945,
	26, 2945,
	27, 2945,
	28, 2945,
	30, 2945,
	31, 2945,
	34, 2945,
	35, 2945,
	37, 2945,
	39, 2945,
	41, 2945,
	43, 2945,
	44, 2945,
	46, 2945,
	47, 2945,
	48, 2945,
	49, 2945,
	50, 2945,
	51, 2945,
	52, 2945,
	53, 2945,
	54, 2945,
	56, 2945,
	57, 2945,
	58, 2945,
	59, 2945,
	61, 2945,
	62, 2945,
	63, 2945,
	64, 2945,
	65, 2945,
	66, 2945,
	67, 2945,
	70, 2945,
	71, 2945,
	72, 2945,
	73, 2945,
	74, 2945,
	76, 2945,
	77, 2945,
	78, 2945,
	79, 2945,
	82, 2945,
	83, 2945,
	84, 2945,
	85, 2945,
	86, 2945,
	87, 2945,
	88, 2945,
	89, 2945,
	90, 2945,
	92, 2945,
	93, 2945,
	94, 2945,
	95, 2945,
	96, 2945,
	98, 2945,
	99, 2945,
	100, 2945,
	101, 2945,
	102, 2945,
	103, 2945,
	104, 2945,
	105, 2945,
	107, 2945,
	108, 2945,
	109, 2945,
	110, 2945,
	111, 2945,
	112, 2945,
	113, 2945,
	121, 2945,
	122, 2945,
	123, 2945,
	124, 2945,
	125, 2945,
	127, 2945,
	128, 2945,
	129, 2945,
	130, 2945,
	132, 2945,
	133, 2945,
	134, 2945,
	136, 2945,
	137, 2945,
	138, 2945,
	140, 2945,
	141, 2945,
	142, 2945,
	145, 2945,
	146, 2945,
	147, 2945,
	149, 2945,
	150, 2945,
	151, 2945,
	153, 2945,
	154, 2945,
	155, 2945,
	157, 2945,
	158, 2945,
	159, 2945,
	160, 2945,
	161, 2945,
	162, 2945,
	163, 2945,
	164, 2945,
	165, 2945,
	166, 2945,
	167, 2945,
	168, 2945,
	169, 2945,
	170, 2945,
	171, 2945,
	172, 2945,
	173, 2945,
	177, 2945,
	178, 2945,
	179, 2945,
	180, 2945,
	181, 2945,
	182, 2945,
	183, 2945,
	184, 2945,
	187, 2945,
	188, 2945,
	190, 2945,
	191, 2945,
	192, 2945,
	194, 2945,
	195, 2945,
	197, 2945,
	198, 2945,
	199, 2945,
	200, 2945,
	201, 2945,
	202, 2945,
	203, 2945,
	204, 2945,
	205, 2945,
	206, 2945,
	207, 2945,
	208, 2945,
	209, 2945,
	210, 2945,
	211, 2945,
	213, 2945,
	214, 2945,
	216, 2945,
	217, 2945,
	219, 2945,
	220, 2945,
	221, 2945,
	222, 2945,
	223, 2945,
	224, 2945,
	225, 2945,
	226, 2945,
	227, 2945,
	228, 2945,
	229, 2945,
	230, 2945,
	231, 2945,
	232, 2945,
	233, 2945,
	234, 2945,
	235, 2945,
	236, 2945,
	237, 2945,
	238, 2945,
	240, 2945,
	241, 2945,
	243, 2945,
	244, 2945,
	245, 2945,
	247, 2945,
	248, 2945,
	249, 2945,
	250, 2945,
	251, 2945,
	253, 2945,
	255, 2945,
	256, 2945,
	257, 2945,
	258, 2945,
	259, 2945,
	260, 2945,
	261, 2945,
	262, 2945,
	263, 2945,
	264, 2945,
	266, 2945,
	267, 2945,
	268, 2945,
	269, 2945,
	270, 2945,
	271, 2945,
	272, 2945,
	273, 2945,
	275, 2945,
	276, 2945,
	277, 2945,
	279, 2945,
	280, 2945,
	281, 2945,
	282, 2945,
	283, 2945,
	284, 2945,
	286, 2945,
	287, 2945,
	288, 2945,
	289, 2945,
	290, 2945,
	291, 2945,
	292, 2945,
	295, 2945,
	296, 2945,
	297, 2945,
	298, 2945,
	299, 2945,
	300, 2945,
	301, 2945,
	302, 2945,
	303, 2945,
	304, 2945,
	305, 2945,
	306, 2945,
	307, 2945,
	308, 2945,
	309, 2945,
	310, 2945,
	311, 2945,
	312, 2945,
	313, 2945,
	314, 2945,
	315, 2945,
	316, 2945,
	317, 2945,
	318, 2945,
	319, 2945,
	320, 2945,
	321, 2945,
	322, 2945,
	324, 2945,
	325, 2945,
	326, 2945,
	327, 2945,
	328, 2945,
	329, 2945,
	330, 2945,
	331, 2945,
	332, 2945,
	333, 2945,
	334, 2945,
	335, 2945,
	336, 2945,
	337, 2945,
	338, 2945,
	339, 2945,
	340, 2945,
	341, 2945,
	342, 2945,
	344, 2945,
	345, 2945,
	348, 2945,
	349, 2945,
	350, 2945,
	351, 2945,
	352, 2945,
	354, 2945,
	355, 2945,
	356, 2945,
	357, 2945,
	358, 2945,
	361, 2945,
	363, 2945,
	366, 2945,
	367, 2945,
	368, 2945,
	369, 2945,
	371, 2945,
	372, 2945,
	373, 2945,
	375, 2945,
	377, 2945,
	378, 2945,
	379, 2945,
	380, 2945,
	381, 2945,
	382, 2945,
	383, 2945,
	384, 2945,
	385, 2945,
	386, 2945,
	387, 2945,
	388, 2945,
	389, 2945,
	391, 2945,
	392, 2945,
	393, 2945,
	394, 2945,
	395, 2945,
	396, 2945,
	397, 2945,
	398, 2945,
	399, 2945,
	400, 2945,
	401, 2945,
	402, 2945,
	403, 2945,
	404, 2945,
	405, 2945,
	407, 2945,
	408, 2945,
	409, 2945,
	411, 2945,
	412, 2945,
	413, 2945,
	414, 2945,
	415, 2945,
	416, 2945,
	417, 2945,
	418, 2945,
	419, 2945,
	420, 2945,
	421, 2945,
	422, 2945,
	423, 2945,
	424, 2945,
	426, 2945,
	428, 2945,
	429, 2945,
	430, 2945,
	436, 2945,
	437, 2945,
	438, 2945,
	439, 2945,
	440, 2945,
	441, 2945,
	442, 2945,
	443, 2945,
	444, 2945,
	445, 2945,
	446, 2945,
	447, 2945,
	448, 2945,
	449, 2945,
	450, 2945,
	452, 2945,
	453, 2945,
	454, 2945,
	455, 2945,
	456, 2945,
	457, 2945,
	458, 2945,
	459, 2945,
	460, 2945,
	461, 2945,
	462, 2945,
	463, 2945,
	464, 2945,
	465, 2945,
	466, 2945,
	467, 2945,
	468, 2945,
	469, 2945,
	470, 2945,
	471, 2945,
	472, 2945,
	473, 2945,
	474, 2945,
	475, 2945,
	476, 2945,
	478, 2945,
	479, 2945,
	480, 2945,
	481, 2945,
	482, 2945,
	483, 2945,
	485, 2945,
	486, 2945,
	487, 2945,
	488, 2945,
	489, 2945,
	490, 2945,
	491, 2945,
	492, 2945,
	493, 2945,
	494, 2945,
	495, 2945,
	496, 2945,
	497, 2945,
	498, 2945,
	499, 2945,
	501, 2945,
	503, 2945,
	504, 2945,
	505, 2945,
	506, 2945,
	507, 2945,
	508, 2945,
	509, 2945,
	510, 2945,
	511, 2945,
	512, 2945,
	513, 2945,
	514, 2945,
	515, 2945,
	516, 2945,
	517, 2945,
	518, 2945,
	519, 2945,
	520, 2945,
	521, 2945,
	523, 2945,
	524, 2945,
	525, 2945,
	526, 2945,
	527, 2945,
	529, 2945,
	530, 2945,
	531, 2945,
	532, 2945,
	533, 2945,
	534, 2945,
	536, 2945,
	537, 2945,
	539, 2945,
	540, 2945,
	541, 2945,
	542, 2945,
	543, 2945,
	545, 2945,
	547, 2945,
	548, 2945,
	549, 2945,
	550, 2945,
	551, 2945,
	552, 2945,
	553, 2945,
	555, 2945,
	556, 2945,
	557, 2945,
	558, 2945,
	559, 2945,
	560, 2945,
	561, 2945,
	564, 2945,
	565, 2945,
	566, 2945,
	567, 2945,
	568, 2945,
	569, 2945,
	570, 2945,
	571, 2945,
	573, 2945,
	576, 2945,
	577, 2945,
	578, 2945,
	579, 2945,
	580, 2945,
	581, 2945,
	583, 2945,
	584, 2945,
	585, 2945,
	586, 2945,
	587, 2945,
	588, 2945,
	589, 2945,
	590, 2945,
	595, 2945,
	596, 2945,
	597, 2945,
	598, 2945,
	599, 2945,
	600, 2945,
	601, 2945,
	603, 2945,
	613, 2945,
	614, 2945,
	615, 2945,
	616, 2945,
	617, 2945,
	618, 2945,
	620, 2945,
	621, 2945,
	622, 2945,
	623, 2945,
	624, 2945,
	625, 2945,
	626, 2945,
	627, 2945,
	628, 2945,
	631, 2945,
	634, 2945,
	635, 2945,
	637, 2945,
	638, 2945,
	-2, 0,
	-1, 1768,
	196, 2818,
	544, 2818,
	615, 2818,
	635, 2818,
	-2, 0,
	-1, 1816,
	196, 955,
	-2, 2810,
	-1, 1817,
	196, 956,
	-2, 2602,
	-1, 1818,
	196, 957,
	-2, 2764,
	-1, 1823,
	413, 1007,
	483, 1007,
	527, 1007,
	549, 1007,
	-2, 0,
	-1, 1834,
	1, 1544,
	233, 1544,
	632, 1544,
	634, 1544,
	636, 1544,
	-2, 0,
	-1, 1851,
	1, 1002,
	632, 1002,
	634, 1002,
	636, 1002,
	-2, 0,
	-1, 1852,
	1, 1046,
	632, 1046,
	634, 1046,
	636, 1046,
	-2, 0,
	-1, 1853,
	1, 1054,
	632, 1054,
	634, 1054,
	636, 1054,
	-2, 0,
	-1, 1856,
	1, 1011,
	632, 1011,
	634, 1011,
	636, 1011,
	-2, 0,
	-1, 1858,
	1, 1017,
	632, 1017,
	634, 1017,
	636, 1017,
	-2, 0,
	-1, 1861,
	1, 1013,
	632, 1013,
	634, 1013,
	636, 1013,
	-2, 0,
	-1, 1866,
	1, 1027,
	632, 1027,
	634, 1027,
	636, 1027,
	-2, 0,
	-1, 1900,
	1, 2800,
	632, 2800,
	634, 2800,
	635, 2800,
	636, 2800,
	-2, 0,
	-1, 1904,
	1, 1105,
	632, 1105,
	634, 1105,
	636, 1105,
	-2, 0,
	-1, 1923,
	1, 1596,
	636, 1596,
	-2, 1601,
	-1, 1926,
	176, 1755,
	189, 1755,
	285, 1755,
	359, 1755,
	-2, 1693,
	-1, 2028,
	156, 1714,
	176, 1714,
	189, 1714,
	252, 1714,
	285, 1714,
	359, 1714,
	370, 1714,
	562, 1714,
	-2, 2165,
	-1, 2089,
	634, 2340,
	-2, 0,
	-1, 2125,
	156, 1714,
	176, 1714,
	189, 1714,
	252, 1714,
	285, 1714,
	359, 1714,
	370, 1714,
	562, 1714,
	-2, 1847,
	-1, 2181,
	633, 1988,
	-2, 1976,
	-1, 2213,
	196, 2815,
	635, 2815,
	638, 2815,
	-2, 0,
	-1, 2257,
	1, 763,
	636, 763,
	-2, 1601,
	-1, 2434,
	233, 282,
	-2, 2490,
	-1, 2435,
	233, 283,
	-2, 341,
	-1, 2548,
	1, 1004,
	632, 1004,
	634, 1004,
	636, 1004,
	-2, 0,
	-1, 2549,
	1, 1048,
	632, 1048,
	634, 1048,
	636, 1048,
	-2, 0,
	-1, 2550,
	1, 1056,
	632, 1056,
	634, 1056,
	636, 1056,
	-2, 0,
	-1, 2551,
	1, 1107,
	632, 1107,
	634, 1107,
	636, 1107,
	-2, 0,
	-1, 2592,
	1, 1029,
	632, 1029,
	634, 1029,
	636, 1029,
	-2, 0,
	-1, 2614,
	1, 1090,
	632, 1090,
	634, 1090,
	636, 1090,
	-2, 0,
	-1, 2662,
	461, 1782,
	462, 1782,
	-2, 2021,
	-1, 2695,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2041,
	-1, 2696,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2042,
	-1, 2697,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2043,
	-1, 2698,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2044,
	-1, 2699,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2045,
	-1, 2700,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2046,
	-1, 2701,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2047,
	-1, 2702,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2048,
	-1, 2714,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2060,
	-1, 2715,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2061,
	-1, 2716,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2062,
	-1, 2720,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2069,
	-1, 2726,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2073,
	-1, 2728,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2081,
	-1, 2729,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2082,
	-1, 2730,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2083,
	-1, 2731,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2084,
	-1, 2905,
	5, 2494,
	196, 2351,
	633, 2491,
	-2, 2482,
	-1, 2906,
	196, 2352,
	-2, 2896,
	-1, 2907,
	196, 2353,
	-2, 2692,
	-1, 2908,
	196, 2354,
	-2, 2568,
	-1, 2909,
	196, 2355,
	-2, 2630,
	-1, 2910,
	196, 2356,
	-2, 2677,
	-1, 2911,
	196, 2357,
	-2, 2813,
	-1, 2912,
	196, 2358,
	-2, 2148,
	-1, 2984,
	1, 1848,
	2, 1848,
	110, 1848,
	156, 1848,
	176, 1848,
	189, 1848,
	197, 1848,
	215, 1848,
	218, 1848,
	247, 1848,
	252, 1848,
	263, 1848,
	281, 1848,
	285, 1848,
	325, 1848,
	359, 1848,
	364, 1848,
	370, 1848,
	451, 1848,
	455, 1848,
	562, 1848,
	574, 1848,
	592, 1848,
	593, 1848,
	594, 1848,
	604, 1848,
	632, 1848,
	634, 1848,
	636, 1848,
	638, 1848,
	-2, 1847,
	-1, 2997,
	633, 2463,
	-2, 2477,
	-1, 2999,
	1, 358,
	592, 358,
	-2, 1741,
	-1, 3030,
	633, 1987,
	-2, 1977,
	-1, 3249,
	1, 1447,
	445, 1401,
	485, 1401,
	607, 1401,
	612, 1401,
	632, 1447,
	634, 1447,
	636, 1447,
	-2, 1741,
	-1, 3432,
	365, 1785,
	-2, 2935,
	-1, 3433,
	365, 1786,
	-2, 2797,
	-1, 3437,
	461, 2417,
	462, 2417,
	-2, 2146,
	-1, 3438,
	461, 2421,
	462, 2421,
	-2, 2147,
	-1, 3439,
	461, 2418,
	462, 2418,
	-2, 2146,
	-1, 3440,
	461, 2422,
	462, 2422,
	-2, 2147,
	-1, 3454,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2071,
	-1, 3455,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2075,
	-1, 3461,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2077,
	-1, 3692,
	1, 758,
	632, 758,
	634, 758,
	636, 758,
	-2, 1601,
	-1, 3894,
	45, 2454,
	-2, 1181,
	-1, 3899,
	1, 1447,
	632, 1447,
	634, 1447,
	636, 1447,
	-2, 1741,
	-1, 4008,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2079,
	-1, 4015,
	257, 0,
	259, 0,
	348, 0,
	-2, 2098,
	-1, 4083,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2127,
	-1, 4084,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2128,
	-1, 4085,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2129,
	-1, 4089,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2133,
	-1, 4090,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2134,
	-1, 4091,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2135,
	-1, 4139,
	633, 2464,
	-2, 2478,
	-1, 4359,
	635, 3052,
	-2, 1667,
	-1, 4418,
	257, 0,
	259, 0,
	348, 0,
	-2, 2099,
	-1, 4421,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2102,
	-1, 4422,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2104,
	-1, 4546,
	635, 2479,
	-2, 1482,
	-1, 4707,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2103,
	-1, 4708,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2105,
	-1, 4719,
	257, 0,
	-2, 2138,
	-1, 4914,
	257, 0,
	-2, 2139,
	-1, 5135,
	53, 0,
	230, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2899,
}

const sqlPrivate = 57344

const sqlLast = 147082

var sqlAct = [...]int{
	292, 3203, 5073, 5072, 5326, 3592, 4957, 4965, 1439, 5253,
	5121, 5181, 3173, 3323, 4781, 5197, 5134, 5009, 3881, 5147,
	5026, 5267, 5104, 5084, 2431, 3880, 5087, 5148, 5063, 5149,
	5206, 4332, 1495, 4882, 4401, 4860, 4918, 5145, 4831, 3102,
	4048, 4847, 1665, 5133, 4542, 2317, 4660, 4665, 4654, 1360,
	2472, 4624, 4597, 4786, 4695, 4000, 4728, 2131, 3719, 4343,
	2288, 2672, 2522, 4351, 1634, 4866, 3659, 3916, 4994, 1429,
	3293, 4543, 3446, 4265, 4523, 1436, 2937, 1339, 1786, 3103,
	899, 2743, 4315, 3343, 4296, 2497, 2520, 4670, 758, 3870,
	2239, 3783, 1935, 3910, 3865, 3854, 4298, 1514, 3945, 2682,
	3725, 3943, 2326, 1431, 4724, 3312, 3281, 899, 3706, 2168,
	1168, 3869, 3847, 3708, 832, 3309, 3707, 3307, 3011, 3846,
	1607, 3638, 3615, 4457, 4142, 2226, 2673, 3645, 3374, 3872,
	3575, 3596, 4400, 978, 3607, 1784, 3722, 3338, 2100, 3256,
	974, 4, 2420, 3204, 2355, 770, 3188, 2418, 3324, 2338,
	2407, 5182, 4109, 3746, 2679, 2977, 4919, 2075, 2036, 896,
	2821, 2823, 2006, 3574, 2976, 2756, 286, 3337, 3430, 969,
	1349, 3598, 2405, 1724, 1434, 894, 2469, 1236, 2419, 2397,
	1176, 190, 828, 3218, 2385, 2378, 1279, 2305, 3294, 2979,
	285, 2309, 1408, 1923, 1831, 1340, 1229, 2812, 2287, 2237,
	1497, 2644, 2101, 2740, 2661, 1234, 41, 2957, 2642, 3012,
	1761, 3317, 1419, 1422, 805, 2120, 1727, 1720, 2468, 2400,
	3127, 1478, 3128, 3088, 5027, 1225, 3873, 1636, 2934, 900,
	902, 1049, 1465, 1378, 1343, 2484, 2947, 2815, 2793, 2070,
	2966, 745, 2867, 2901, 2020, 768, 906, 2110, 2117, 848,
	1322, 1937, 2518, 200, 1936, 1357, 2643, 813, 1197, 3711,
	201, 824, 2428, 1493, 2645, 1179, 995, 1759, 1866, 1752,
	909, 115, 1657, 906, 2169, 119, 1851, 2666, 1615, 190,
	105, 2409, 5198, 5254, 1210, 763, 46, 1345, 759, 1320,
	772, 1232, 1490, 889, 45, 788, 43, 909, 950, 34,
	32, 30, 1942, 1922, 3484, 1915, 1671, 951, 1070, 4123,
	3478, 4124, 5337, 5329, 3594, 3660, 2956, 3825, 2228, 841,
	844, 5317, 2228, 5316, 5143, 2956, 2228, 2956, 78, 4754,
	5286, 4751, 1952, 1953, 4785, 1985, 1986, 1987, 1996, 1997,
	1998, 2228, 1172, 5284, 2228, 5227, 79, 4785, 2228, 2440,
	5183, 4750, 3545, 3546, 5184, 1989, 1983, 5173, 5171, 2249,
	3925, 2956, 2956, 84, 1955, 5168, 5165, 5131, 5130, 5169,
	5166, 2440, 2440, 5129, 2002, 5119, 5117, 3348, 5108, 4785,
	4785, 1796, 4785, 5107, 5082, 5048, 5041, 4785, 4785, 3021,
	2956, 2008, 5040, 4747, 5031, 5008, 2956, 1857, 2440, 2440,
	1954, 5005, 4987, 4746, 92, 4785, 4614, 1777, 4916, 4896,
	4862, 1974, 3021, 4376, 4192, 4804, 1474, 4803, 4792, 2440,
	1971, 2440, 2440, 4791, 4784, 970, 1337, 4785, 4785, 4735,
	1161, 4709, 4648, 2440, 4680, 3021, 1323, 1323, 3348, 4649,
	4491, 3926, 4592, 3825, 1152, 976, 2956, 3655, 4570, 1474,
	2519, 1151, 2956, 78, 1721, 973, 972, 1685, 51, 4420,
	114, 4367, 3677, 3021, 4361, 3938, 98, 111, 3938, 4312,
	2473, 79, 4223, 4313, 1173, 4191, 4224, 4134, 4132, 4192,
	1355, 4135, 4133, 4113, 2249, 4116, 4032, 2246, 84, 2956,
	2440, 4028, 3937, 1172, 3825, 2956, 3938, 2246, 1977, 1978,
	1979, 1980, 3044, 3591, 3493, 3586, 1167, 2956, 1960, 2956,
	3494, 3673, 3585, 3536, 3286, 3534, 2956, 3537, 3526, 3535,
	3524, 1672, 3527, 3495, 2956, 3016, 2440, 2956, 3551, 92,
	99, 3347, 3334, 2949, 1664, 3348, 2507, 1324, 3333, 3067,
	3020, 2246, 2507, 2956, 3021, 3009, 1352, 2249, 3001, 2956,
	1375, 1993, 2440, 2818, 2003, 2955, 2506, 3445, 2956, 2956,
	2507, 1982, 1984, 1385, 1326, 5049, 1327, 4920, 1673, 2249,
	976, 4911, 4899, 3348, 4113, 2948, 4658, 1231, 1999, 4614,
	2000, 2246, 4571, 51, 1673, 114, 4376, 1969, 1970, 4314,
	3180, 98, 111, 2331, 1673, 3087, 2249, 2263, 252, 3078,
	2227, 2243, 3286, 2438, 1679, 1991, 3198, 2096, 1376, 1660,
	2956, 4241, 4003, 3972, 2118, 2390, 3927, 1833, 2993, 2992,
	1975, 2991, 2990, 2989, 252, 2584, 1328, 1325, 1160, 1159,
	1158, 1157, 1156, 1155, 1154, 1150, 3928, 4475, 3545, 3546,
	3561, 3563, 3564, 3565, 1376, 1149, 1148, 1147, 1146, 254,
	2819, 1145, 1144, 1143, 1142, 99, 1141, 1140, 3400, 5158,
	1139, 4416, 1138, 1137, 1136, 1135, 1134, 1133, 1132, 2001,
	1227, 1131, 1952, 1953, 1113, 254, 1047, 1046, 1045, 1044,
	1043, 1684, 1042, 1041, 103, 1040, 1039, 1038, 3545, 3546,
	1990, 3563, 3564, 3565, 98, 1037, 1036, 1035, 1034, 2229,
	253, 2005, 1033, 2229, 1955, 1032, 1031, 2229, 1673, 1030,
	1029, 1028, 3545, 3546, 1027, 246, 1026, 3560, 1025, 1024,
	1023, 2005, 2229, 1022, 247, 2229, 253, 1021, 1020, 2229,
	1019, 3320, 2820, 1018, 2817, 1017, 1016, 1015, 1014, 1013,
	1954, 3545, 3546, 198, 1012, 106, 1011, 1000, 110, 999,
	998, 993, 992, 985, 202, 984, 983, 4672, 968, 4432,
	1981, 3483, 967, 925, 3302, 924, 2246, 3560, 923, 4167,
	1800, 2246, 922, 2246, 913, 252, 912, 911, 910, 871,
	202, 870, 839, 977, 1976, 838, 1781, 837, 158, 1447,
	1175, 1208, 819, 2246, 280, 279, 278, 277, 276, 275,
	274, 273, 272, 271, 3562, 270, 1441, 1234, 269, 103,
	268, 2974, 1994, 267, 3551, 266, 265, 264, 263, 262,
	3560, 261, 260, 259, 258, 257, 254, 256, 1678, 255,
	3095, 4128, 1351, 3976, 1234, 1234, 1234, 3939, 3286, 3641,
	1664, 3506, 3489, 3480, 3377, 3266, 2007, 3025, 1960, 1377,
	2998, 2983, 2850, 163, 2078, 2634, 252, 2290, 2848, 3095,
	2834, 2077, 2832, 1387, 3551, 2248, 2144, 2047, 198, 204,
	106, 5157, 252, 110, 2948, 1517, 3589, 253, 2121, 1234,
	2038, 1916, 252, 3925, 3567, 1234, 1639, 1234, 3551, 2249,
	1441, 2081, 246, 3054, 1482, 1483, 1484, 2227, 1648, 1667,
	252, 247, 2822, 1486, 1376, 199, 1359, 254, 977, 1949,
	203, 4325, 2246, 158, 1469, 2243, 1234, 3551, 1234, 2637,
	1234, 3590, 1992, 254, 5154, 5132, 3561, 1639, 5116, 5013,
	4908, 202, 252, 254, 1966, 1967, 1973, 1995, 1972, 1968,
	4923, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962,
	1625, 254, 1441, 2246, 2078, 4442, 4776, 4723, 253, 4441,
	1729, 2077, 1662, 3555, 3547, 3548, 3549, 3550, 3552, 3553,
	1620, 4902, 1639, 246, 253, 2948, 3561, 4674, 163, 1639,
	3545, 3546, 247, 254, 253, 4678, 1859, 4657, 1234, 246,
	1234, 2076, 1413, 1416, 204, 1639, 252, 4900, 247, 246,
	3561, 2045, 253, 252, 1234, 1376, 1234, 2005, 247, 1461,
	4229, 4499, 202, 1426, 1446, 4455, 158, 246, 4454, 4448,
	4447, 1463, 4446, 1733, 1736, 2816, 247, 3304, 202, 3561,
	199, 4439, 4438, 4436, 253, 203, 4431, 4428, 202, 3093,
	4427, 2005, 4311, 4171, 1755, 4170, 1353, 254, 4169, 246,
	2039, 4138, 2037, 2038, 254, 1639, 971, 2005, 247, 3034,
	3545, 3546, 4104, 1646, 4103, 4102, 4024, 4019, 906, 1510,
	906, 1604, 1609, 3636, 3582, 1234, 3573, 252, 1234, 252,
	3544, 2005, 3541, 3545, 3546, 1455, 3540, 2040, 202, 1336,
	3562, 1612, 909, 3538, 909, 3545, 3546, 3533, 253, 1489,
	252, 3532, 3531, 3528, 3525, 253, 3505, 3488, 3481, 3479,
	2005, 3335, 2984, 246, 2805, 1949, 2447, 1500, 1501, 2487,
	246, 1948, 247, 1670, 1722, 1677, 2445, 1683, 254, 247,
	254, 1659, 1658, 1659, 1658, 5332, 4239, 5275, 5274, 5196,
	3562, 1801, 1764, 1766, 1492, 1642, 5194, 1361, 1502, 1503,
	4050, 254, 202, 190, 190, 5074, 3551, 4326, 4992, 202,
	4977, 4973, 4972, 4971, 3562, 4951, 1952, 1953, 4950, 4948,
	1739, 3092, 4922, 4921, 4894, 2746, 1661, 4880, 4877, 253,
	4876, 253, 4858, 4326, 4857, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 3562, 246, 1775, 246, 1780, 1955, 1762,
	3092, 4800, 253, 247, 1469, 247, 4771, 1469, 3587, 4721,
	4704, 1794, 4703, 1799, 4644, 4640, 4637, 246, 1234, 4615,
	4474, 4453, 4377, 4227, 1234, 2752, 247, 4226, 4207, 4206,
	4204, 3092, 4119, 3319, 1954, 202, 3551, 4107, 4014, 2025,
	3557, 3558, 3559, 1173, 3303, 252, 4673, 3556, 3554, 3555,
	3547, 3548, 3549, 3550, 3552, 3553, 202, 3940, 3902, 3551,
	3665, 252, 1927, 3893, 252, 252, 3805, 3757, 3561, 3724,
	3667, 3551, 3510, 2027, 1875, 3509, 3504, 3470, 3280, 1858,
	3120, 2084, 1806, 2083, 1956, 1957, 1958, 1959, 1961, 1962,
	3557, 3558, 3559, 2082, 4925, 1776, 254, 3556, 3554, 3555,
	3547, 3548, 3549, 3550, 3552, 3553, 2079, 2071, 2069, 3032,
	1921, 1795, 254, 3031, 2995, 254, 254, 2988, 2954, 2830,
	2024, 3556, 3554, 3555, 3547, 3548, 3549, 3550, 3552, 3553,
	1234, 1234, 1234, 2143, 4748, 2099, 1234, 2093, 2092, 2091,
	2090, 2089, 1960, 1357, 2088, 1357, 2087, 253, 3561, 2005,
	3556, 3554, 3555, 3547, 3548, 3549, 3550, 3552, 3553, 2086,
	1517, 2085, 246, 253, 2066, 1824, 253, 253, 2065, 2064,
	2063, 247, 1234, 2098, 2062, 899, 1441, 2061, 246, 1860,
	2060, 246, 246, 2186, 899, 2059, 1441, 247, 2058, 1441,
	247, 247, 2057, 2056, 1928, 2055, 2054, 2053, 2052, 1950,
	2051, 202, 2040, 2026, 2147, 2023, 2018, 1454, 1382, 1371,
	4924, 4647, 2107, 1917, 1753, 4495, 3023, 202, 4424, 1758,
	202, 202, 4166, 4131, 1924, 1932, 4122, 3492, 2986, 2005,
	1152, 4497, 3562, 1931, 4165, 1952, 1953, 1151, 2039, 2275,
	2274, 2080, 3663, 1496, 2283, 2021, 4573, 3931, 2159, 1441,
	2139, 2164, 2005, 3545, 3546, 1234, 1926, 2153, 1481, 1496,
	1479, 2215, 3174, 1496, 2218, 3760, 3633, 1955, 1496, 2104,
	2105, 4867, 5266, 1945, 1946, 5146, 4981, 4974, 4677, 1234,
	4618, 4617, 4616, 1496, 2849, 4572, 4477, 1517, 4384, 1173,
	2847, 4383, 2833, 4382, 2831, 4381, 4380, 4379, 1496, 4378,
	4193, 4126, 4125, 1954, 2154, 3942, 3941, 3829, 3827, 3826,
	2281, 1323, 3562, 2320, 2072, 2073, 2128, 5150, 5223, 1494,
	5221, 1474, 4329, 3146, 2251, 2121, 4001, 190, 2078, 1480,
	1474, 2255, 1474, 1475, 2160, 2077, 4256, 1919, 2149, 2233,
	2368, 906, 2235, 2209, 3530, 1469, 3529, 3452, 2240, 1823,
	906, 3795, 2242, 2135, 1129, 3131, 1477, 2245, 4222, 2269,
	2180, 2129, 2151, 4319, 2818, 909, 2278, 2254, 1355, 2183,
	1355, 3883, 3726, 3882, 909, 4903, 2148, 2049, 4943, 2126,
	3216, 4187, 1876, 4188, 2421, 2539, 4944, 4775, 1832, 2119,
	2061, 2152, 3547, 3548, 3549, 3550, 3552, 3553, 4944, 2258,
	2061, 4901, 2473, 1130, 4861, 2231, 5179, 4655, 3344, 3855,
	4604, 2097, 1833, 2422, 4308, 4262, 1173, 4253, 4232, 3968,
	3690, 2605, 2516, 2387, 2453, 4725, 3594, 4052, 3498, 2046,
	2123, 2813, 4795, 2138, 1352, 4767, 1352, 3030, 3129, 2094,
	2074, 2137, 4557, 2136, 5155, 3863, 2134, 2133, 2132, 2481,
	4554, 1732, 2257, 1653, 1450, 3195, 1639, 1639, 1471, 1412,
	5170, 2819, 2165, 2253, 5167, 4585, 4966, 4583, 1517, 3921,
	3554, 3555, 3547, 3548, 3549, 3550, 3552, 3553, 3192, 1464,
	3190, 4198, 1810, 4661, 5081, 1757, 1515, 3729, 2280, 4217,
	3316, 1789, 3838, 963, 5258, 3547, 3548, 3549, 3550, 3552,
	3553, 2401, 2367, 2377, 5224, 5203, 2331, 2366, 3176, 3549,
	3550, 3552, 3553, 2488, 4798, 2363, 5156, 2372, 4794, 3376,
	1335, 4773, 1639, 2382, 3258, 3995, 2279, 5225, 1951, 4826,
	3694, 4275, 1475, 4559, 2432, 2437, 2374, 1698, 1178, 1855,
	2295, 1706, 2296, 2820, 1476, 2817, 1127, 3068, 3091, 1873,
	1855, 2614, 2303, 2304, 2611, 2284, 3091, 2598, 1125, 5328,
	1123, 1121, 2276, 1109, 3089, 1118, 1639, 2596, 1639, 4982,
	1639, 4819, 3089, 2377, 4806, 4607, 1874, 1758, 2329, 4606,
	1958, 1959, 1961, 1962, 4273, 4272, 2297, 2298, 1639, 1639,
	3696, 2325, 2270, 2301, 2302, 4264, 2337, 4247, 1171, 4246,
	5261, 2377, 1639, 4274, 4244, 964, 1472, 4243, 1481, 2549,
	2612, 2652, 1475, 4231, 1639, 1177, 1473, 1639, 1639, 1639,
	1852, 2511, 4190, 2402, 1755, 2863, 2499, 906, 2499, 3105,
	2424, 2425, 4189, 1707, 3844, 1655, 2500, 2360, 2375, 2613,
	3843, 899, 3797, 3654, 3503, 3502, 3501, 2477, 3500, 2426,
	3456, 909, 3214, 1854, 3213, 3197, 1872, 1471, 3186, 3178,
	3167, 3166, 3158, 1234, 1854, 4553, 2540, 1481, 4796, 1808,
	3313, 4768, 3157, 2650, 3156, 2550, 3136, 2482, 3135, 1480,
	3096, 3039, 2494, 4555, 3664, 3010, 1853, 2727, 2166, 1925,
	1659, 1658, 2537, 2373, 1170, 2359, 2356, 3759, 4897, 2381,
	2862, 1234, 5262, 2684, 2095, 811, 2514, 1745, 4702, 1744,
	811, 4201, 4505, 2822, 5259, 1702, 3133, 3726, 2411, 1398,
	1351, 2411, 1351, 2410, 2524, 5204, 2410, 2414, 2459, 3969,
	2623, 3038, 3793, 2439, 1115, 2544, 2331, 1471, 1480, 1234,
	1743, 1234, 1742, 1476, 2502, 2422, 2473, 3108, 1234, 2376,
	2491, 1234, 3075, 2186, 2186, 1517, 3014, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 1762, 1234, 1762, 1234, 1234, 1234, 1234,
	2569, 2461, 1474, 2460, 2504, 1472, 3015, 906, 2329, 3024,
	2471, 2632, 1172, 2535, 4515, 1473, 2496, 5264, 2531, 2376,
	1914, 2530, 1234, 1476, 1715, 2742, 1234, 1234, 2370, 2654,
	1455, 909, 2651, 2508, 1234, 2509, 2816, 1173, 1234, 1173,
	1234, 1234, 3467, 1757, 2641, 3152, 2636, 2376, 1517, 3150,
	2330, 2742, 1962, 2174, 1234, 1234, 1234, 1234, 2285, 2286,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 2585, 4574,
	3553, 2813, 1825, 3465, 1498, 1499, 3165, 2920, 1498, 1499,
	2327, 4514, 3351, 1498, 1499, 1472, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1473, 1234, 2559, 1498, 1499,
	1234, 2548, 2794, 2795, 3794, 3408, 3161, 4836, 4556, 3395,
	2649, 2626, 1357, 1498, 1499, 2323, 2794, 2810, 1890, 1517,
	3000, 3119, 2738, 966, 965, 1656, 1803, 2603, 1357, 2652,
	2180, 2180, 1871, 3159, 1353, 1918, 1353, 2592, 3428, 2183,
	2183, 2665, 1886, 2858, 1234, 1517, 810, 3443, 2328, 2677,
	2556, 810, 1453, 2736, 1892, 3194, 4959, 5224, 5290, 868,
	3107, 2403, 2904, 2904, 2918, 2750, 2794, 1441, 757, 2938,
	2940, 2145, 2748, 2678, 1833, 2590, 2946, 4551, 2324, 5260,
	1833, 2553, 3118, 2638, 2640, 2646, 2501, 2758, 5152, 3193,
	2653, 2650, 2639, 3981, 4701, 752, 1152, 3162, 2809, 1152,
	1152, 1474, 3132, 2669, 1169, 3693, 2670, 2671, 4288, 1821,
	2547, 4228, 3191, 1930, 3189, 2412, 2622, 3980, 1441, 3090,
	2996, 3462, 2436, 3411, 3160, 2388, 5263, 2680, 2681, 2625,
	2415, 3397, 4041, 2860, 2724, 3699, 2822, 2139, 2861, 3892,
	4934, 2864, 3017, 2865, 2866, 2404, 4605, 4245, 1804, 4214,
	1441, 1441, 3463, 1009, 1809, 2413, 3468, 4242, 3062, 4175,
	5270, 961, 812, 960, 2754, 2971, 3013, 812, 2557, 4289,
	4174, 4160, 4159, 3973, 3850, 1728, 3842, 866, 2807, 2648,
	2330, 1474, 2384, 2963, 3791, 4961, 1323, 3196, 3442, 3155,
	4038, 1517, 1119, 3043, 2985, 1173, 2339, 3134, 2291, 2128,
	3082, 2732, 2597, 3041, 1119, 1173, 1119, 1120, 3018, 1173,
	2383, 1119, 2595, 3057, 4287, 3037, 1868, 3106, 2962, 5236,
	1701, 2343, 2633, 5292, 1397, 2733, 3063, 2900, 2929, 3036,
	2913, 1726, 2734, 2970, 3026, 2975, 2739, 1355, 2981, 2982,
	2186, 2952, 2953, 3071, 5245, 2379, 5244, 2944, 190, 1469,
	2651, 3060, 3777, 1355, 2942, 2968, 2969, 3049, 2080, 1807,
	2964, 1100, 2126, 3053, 3410, 3008, 3073, 5211, 4837, 2444,
	2443, 4212, 4039, 5153, 1952, 1953, 1887, 3064, 2328, 2340,
	906, 4835, 3435, 3436, 4406, 5045, 1165, 4833, 4405, 3918,
	3768, 1517, 4549, 3974, 4538, 3253, 3851, 3407, 1983, 1173,
	3097, 3919, 2822, 1352, 909, 3074, 1955, 1639, 2380, 3848,
	4552, 2722, 3404, 3778, 2725, 3172, 2228, 1704, 5123, 1352,
	5124, 3059, 3033, 3048, 1441, 1912, 3072, 3051, 2649, 3052,
	4531, 2417, 3249, 2008, 4524, 2072, 2073, 4832, 5058, 2352,
	2388, 3081, 1954, 1659, 1658, 1234, 1234, 3207, 1234, 4759,
	3042, 3769, 4522, 3464, 3058, 3056, 3254, 2391, 3776, 3094,
	1116, 4526, 2398, 3466, 3713, 2721, 4834, 914, 3790, 3789,
	3786, 3153, 3175, 4967, 3342, 3289, 3066, 1441, 4989, 2441,
	3187, 1101, 1365, 5151, 1728, 3292, 4532, 3138, 3918, 3065,
	3341, 3695, 2416, 2344, 921, 3069, 3767, 3808, 1367, 1884,
	2353, 3252, 809, 1834, 4485, 3458, 3741, 867, 1639, 3409,
	3284, 4486, 1654, 1380, 4634, 2624, 1192, 2180, 3123, 2371,
	1639, 2334, 1639, 5268, 1888, 1362, 2183, 2369, 1639, 2109,
	4525, 2741, 3137, 2735, 3300, 3110, 3113, 3100, 5210, 1639,
	1639, 3327, 2822, 2737, 3164, 2351, 3154, 3083, 3084, 3168,
	1960, 3085, 3086, 3339, 2555, 3661, 3208, 2067, 753, 869,
	2345, 2346, 4550, 865, 3215, 1441, 3740, 1441, 4960, 3250,
	3251, 1368, 3833, 4484, 3091, 4697, 5234, 2388, 5189, 2392,
	3354, 3355, 2335, 4402, 5043, 2321, 3163, 2341, 5190, 1234,
	3111, 5092, 3362, 3363, 3364, 4714, 3177, 2109, 3345, 1369,
	3170, 4586, 3184, 1982, 1984, 906, 5288, 3144, 3145, 3147,
	3148, 3149, 3151, 778, 3139, 2804, 2113, 2310, 3361, 3200,
	3201, 3202, 2311, 2174, 2174, 1889, 2017, 2333, 2999, 909,
	5044, 2591, 2967, 1106, 1105, 2342, 3508, 1452, 2749, 5293,
	3378, 5269, 3379, 1366, 3259, 754, 3336, 2980, 3372, 1885,
	3267, 3849, 1805, 3270, 5277, 3272, 1010, 3346, 1234, 1891,
	1172, 4054, 1975, 3352, 1234, 1234, 2116, 2552, 1659, 3264,
	4646, 3380, 2723, 2412, 4391, 4610, 3331, 3278, 5271, 1234,
	3747, 1102, 2111, 3714, 2113, 3261, 3285, 190, 4494, 1351,
	3263, 4161, 1386, 3329, 1820, 1822, 2546, 755, 1929, 756,
	2114, 4527, 1384, 2348, 3318, 1351, 3311, 3318, 4528, 4213,
	2357, 4407, 3322, 2413, 3413, 2362, 3415, 3296, 3332, 4533,
	4696, 3997, 1234, 1234, 3426, 1839, 915, 916, 1234, 5010,
	5098, 5025, 1183, 3171, 2116, 1762, 4879, 3749, 4609, 2312,
	4608, 1234, 1234, 2005, 2112, 4635, 1001, 1234, 1234, 3369,
	2111, 4349, 5209, 1234, 3330, 3906, 3676, 2316, 3007, 2467,
	2106, 4530, 1383, 2347, 1374, 3385, 2683, 3387, 2114, 3389,
	3371, 3391, 3392, 1002, 744, 3259, 4827, 3349, 3384, 2331,
	4534, 4324, 1939, 3609, 3356, 3386, 3357, 3388, 2364, 3390,
	3393, 1939, 4301, 1100, 3401, 1934, 1940, 2229, 1234, 1234,
	1234, 2113, 4299, 2602, 1234, 2310, 3748, 3459, 4403, 2668,
	2311, 2395, 2112, 1103, 1234, 2332, 2271, 5298, 1165, 4451,
	4793, 4742, 4888, 986, 4093, 3646, 1976, 5003, 3720, 4941,
	3434, 1234, 2358, 3423, 4350, 4268, 2313, 2318, 2268, 4037,
	3416, 1104, 3425, 3418, 4301, 2349, 5188, 3491, 3424, 4248,
	991, 2116, 4199, 4197, 4299, 3836, 3907, 3898, 2665, 2825,
	3837, 3444, 3429, 3716, 3301, 3295, 4698, 2965, 3282, 2495,
	2489, 2483, 2393, 1363, 2115, 3486, 3487, 3451, 918, 917,
	3490, 2475, 4995, 2452, 2451, 2114, 5011, 4873, 2007, 4303,
	3211, 1938, 4183, 1695, 2658, 1389, 4996, 1108, 2958, 3112,
	1938, 4108, 4538, 1353, 3998, 818, 3482, 3140, 5064, 5028,
	3095, 1939, 2604, 1101, 2264, 2266, 1107, 2394, 4529, 1353,
	4352, 4302, 2314, 1234, 1234, 1234, 1234, 2312, 3457, 1364,
	4997, 4666, 1234, 1234, 1234, 2961, 3279, 1234, 4531, 1400,
	4853, 4303, 2115, 4851, 4408, 2316, 4770, 919, 920, 1234,
	1357, 1517, 2017, 2536, 4121, 1234, 2997, 1234, 3601, 3602,
	4539, 4540, 2267, 3732, 3728, 1940, 1357, 3727, 3449, 3427,
	3606, 3753, 3605, 4302, 1940, 2321, 2960, 1862, 1861, 2528,
	2517, 2959, 2449, 1856, 1517, 1964, 1956, 1957, 1958, 1959,
	1961, 1962, 1751, 3608, 4532, 4155, 1357, 3006, 4999, 1517,
	3005, 1737, 3004, 3003, 3002, 1003, 1004, 1749, 1719, 3497,
	2174, 1441, 1008, 3584, 4307, 1738, 4954, 1170, 1173, 4297,
	1938, 2294, 2186, 4998, 2313, 2318, 1517, 4094, 4625, 3626,
	3613, 3603, 3751, 4452, 4409, 3116, 1441, 2319, 4095, 5297,
	2659, 5000, 4320, 4782, 4205, 1441, 3635, 2493, 3858, 4194,
	2408, 5231, 5078, 3678, 4509, 857, 4757, 4755, 3375, 2115,
	3257, 3970, 3965, 3675, 2354, 1106, 1105, 1234, 3674, 3657,
	3656, 4855, 3350, 1721, 2369, 3262, 3260, 3752, 2521, 1234,
	2421, 1813, 987, 988, 3809, 4778, 3653, 1840, 3141, 3142,
	2320, 2371, 858, 5012, 4872, 4777, 4508, 1441, 5061, 4184,
	5070, 4765, 3079, 2186, 4300, 3715, 4458, 3640, 1632, 4110,
	2314, 3671, 4955, 1102, 2829, 4745, 4162, 1909, 5100, 1911,
	1234, 1908, 2618, 5235, 1906, 2365, 2320, 3691, 3703, 3704,
	2368, 3648, 3649, 3650, 3651, 3612, 1441, 3611, 5233, 3697,
	3624, 5172, 3644, 3632, 3765, 3684, 3627, 3628, 4854, 1690,
	3730, 3595, 4766, 3734, 4783, 1469, 4300, 1441, 1880, 1441,
	3579, 3580, 3581, 2321, 1878, 3780, 3639, 3782, 3625, 2315,
	2361, 4985, 3610, 3647, 3680, 1355, 1850, 3682, 3683, 1234,
	1234, 1848, 3686, 2387, 3687, 1846, 3688, 1517, 3796, 3717,
	2387, 1355, 4975, 3668, 3669, 5071, 3670, 4753, 1441, 2180,
	3630, 1770, 3631, 3835, 817, 2370, 3819, 4956, 2183, 4527,
	1844, 1842, 1836, 1005, 1006, 1441, 4528, 1785, 4720, 4195,
	3701, 1355, 4502, 3831, 3762, 2319, 1830, 4533, 2293, 1828,
	3811, 1747, 3813, 4450, 3744, 3817, 4306, 3576, 4013, 3823,
	3966, 1352, 3963, 3681, 1750, 1103, 3798, 3672, 3731, 3539,
	3469, 3736, 3824, 3787, 3738, 3685, 3283, 1352, 2406, 1748,
	1441, 1639, 3692, 1639, 1007, 3702, 3185, 1517, 3179, 4530,
	3130, 3834, 3035, 1104, 899, 1639, 2631, 1815, 3781, 3700,
	2180, 2627, 2538, 2527, 2512, 2217, 3617, 1352, 4534, 2183,
	989, 990, 2367, 2146, 2142, 1913, 3662, 2366, 1788, 4839,
	1441, 2594, 2561, 4507, 2430, 3810, 5001, 3577, 3899, 2620,
	3992, 3750, 5002, 1910, 3991, 1907, 2619, 1357, 1905, 3983,
	3868, 3914, 1934, 3399, 3398, 4162, 3912, 3359, 2647, 1108,
	1867, 3754, 3755, 3806, 3756, 3852, 3888, 1639, 2564, 3853,
	3771, 3856, 3775, 2450, 2216, 2828, 3897, 2214, 1107, 1639,
	2050, 1639, 1879, 3758, 1802, 1319, 5144, 2315, 1877, 3339,
	3891, 4587, 4255, 4254, 1117, 3801, 4591, 4569, 3339, 2152,
	1849, 5060, 3766, 3807, 4664, 1847, 3905, 3723, 3820, 1845,
	4596, 3792, 3828, 5207, 4582, 3618, 3934, 4520, 3802, 3803,
	3923, 3804, 4519, 4348, 3764, 4339, 4271, 3840, 4250, 3164,
	4220, 3832, 4218, 1644, 1843, 1841, 1835, 4196, 1517, 3901,
	3772, 1517, 3971, 3896, 3773, 3779, 3774, 3884, 3314, 3306,
	1829, 3299, 3291, 1827, 3275, 1746, 4529, 3274, 3841, 3908,
	3255, 3055, 3050, 3961, 2448, 2446, 2423, 3616, 3623, 2389,
	906, 2350, 2336, 2322, 3138, 2250, 1234, 3984, 3915, 3860,
	2247, 3845, 2244, 1234, 1234, 2241, 3818, 1234, 1234, 1234,
	2236, 1234, 3839, 3889, 909, 3895, 3894, 2234, 4539, 4540,
	1234, 2186, 2230, 3830, 2221, 3622, 4659, 4034, 3911, 1234,
	3821, 5202, 1332, 5128, 1234, 2398, 3962, 3920, 2593, 2560,
	1517, 2429, 2310, 2158, 3447, 1943, 3929, 2311, 5225, 1234,
	2272, 4953, 3990, 3932, 3933, 3419, 3420, 1517, 3989, 1333,
	3417, 3922, 2260, 2261, 190, 190, 3248, 2186, 2186, 1234,
	1234, 5110, 1234, 1234, 1234, 5019, 2630, 1351, 3913, 4679,
	4603, 1122, 1124, 1126, 4506, 3340, 3698, 2289, 1700, 4890,
	1234, 3117, 1355, 1351, 1234, 4883, 2186, 2186, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 4066, 1234,
	4067, 4360, 3999, 1351, 2628, 2331, 3091, 1234, 1234, 2186,
	4016, 3977, 2551, 3978, 1234, 3979, 3619, 3620, 3621, 1421,
	2492, 1173, 3089, 3448, 1420, 1234, 4026, 4027, 3996, 3959,
	3091, 2588, 3822, 1903, 1904, 3964, 1357, 1357, 1352, 1944,
	1234, 2583, 5109, 2558, 2312, 4560, 3114, 1952, 1953, 1952,
	1953, 2629, 3987, 1334, 4598, 3212, 1164, 1826, 4910, 1491,
	4780, 3993, 2316, 3121, 3994, 846, 4459, 4437, 3745, 2259,
	3122, 3143, 1517, 4023, 4021, 1947, 1448, 1388, 2180, 4140,
	281, 1955, 5219, 4033, 1488, 1441, 1441, 2183, 4267, 5180,
	4105, 3273, 4040, 4042, 4043, 4049, 4044, 3122, 4336, 2476,
	1459, 4056, 3192, 1441, 1441, 4127, 3190, 899, 1441, 1421,
	3199, 3181, 4266, 1421, 3183, 1954, 4064, 1954, 3124, 4063,
	4065, 1883, 2174, 3126, 2180, 2180, 5069, 1234, 3182, 741,
	4071, 849, 849, 2183, 2183, 4097, 4069, 3125, 863, 5050,
	5018, 2313, 2318, 5014, 4952, 4874, 4846, 4758, 4692, 4346,
	4156, 4338, 4323, 2180, 2180, 1234, 4137, 3900, 4106, 3321,
	4157, 4158, 2183, 2183, 2030, 3288, 2945, 2256, 2035, 4098,
	2167, 1353, 5265, 4779, 3169, 3836, 1652, 1651, 4172, 4173,
	3837, 1645, 1166, 4180, 4114, 4115, 2180, 1353, 1234, 1234,
	3658, 2408, 3600, 5296, 1664, 2183, 3545, 3546, 190, 1952,
	1953, 5238, 5016, 2174, 3836, 2300, 3077, 4117, 4118, 3837,
	2299, 3076, 4429, 1812, 5036, 2824, 4129, 1353, 1664, 1811,
	1663, 2680, 4057, 4164, 1664, 3629, 4130, 2314, 1234, 1234,
	3402, 2859, 4200, 2300, 2299, 1882, 1234, 4181, 1881, 4345,
	3642, 4182, 4875, 4820, 4600, 4595, 4594, 4487, 4483, 4482,
	2680, 4072, 4425, 4399, 4163, 4045, 3815, 1639, 1639, 4168,
	1639, 1355, 1355, 3812, 4233, 3405, 4176, 3666, 2044, 1639,
	2043, 3422, 2635, 906, 1441, 5281, 2308, 5246, 5114, 4112,
	2321, 5054, 4285, 4101, 5053, 5052, 4984, 4983, 4280, 4929,
	4219, 4926, 4221, 4849, 4238, 4240, 4810, 909, 4749, 2186,
	4744, 4743, 4741, 4740, 4237, 4738, 4642, 4622, 4558, 4496,
	4481, 4269, 4263, 4480, 4372, 4366, 4310, 4216, 4257, 4208,
	3904, 3903, 3737, 1234, 1351, 4335, 3679, 1352, 1352, 4225,
	3406, 3396, 3368, 3367, 4230, 3366, 3365, 2306, 4279, 3305,
	3277, 3276, 2319, 1639, 3115, 3046, 3028, 3027, 2753, 1234,
	2621, 2589, 2582, 2581, 4353, 3138, 2580, 1357, 1234, 2579,
	4362, 2578, 4316, 2490, 2462, 2458, 1639, 4290, 4291, 4270,
	2457, 1639, 1639, 1639, 2474, 4331, 2456, 2455, 2454, 2224,
	2223, 2222, 2307, 4305, 4293, 2220, 2157, 2156, 1902, 1901,
	1837, 1714, 1713, 1712, 1639, 3327, 1639, 1711, 1710, 4276,
	1709, 1639, 4330, 1517, 1708, 1703, 1699, 4354, 3339, 3208,
	1697, 1696, 1629, 1628, 1627, 4357, 4283, 4369, 1508, 1507,
	1506, 4294, 2510, 4318, 4322, 1505, 1504, 1451, 1407, 1406,
	1405, 1404, 1403, 4373, 1517, 1402, 1401, 1234, 1234, 1399,
	2523, 2525, 1242, 1234, 1234, 2186, 1394, 4337, 1234, 1234,
	1393, 1234, 1392, 1391, 2529, 4356, 1234, 1390, 975, 8,
	1314, 4334, 2262, 1128, 1114, 4958, 4537, 1234, 4536, 2541,
	2542, 2543, 4387, 4385, 2315, 4535, 2180, 4340, 4388, 4393,
	2617, 2470, 97, 1234, 1705, 2183, 4355, 4358, 4364, 938,
	288, 288, 288, 91, 747, 748, 2396, 764, 747, 764,
	776, 4370, 4215, 816, 4363, 4410, 4371, 836, 3642, 4691,
	4286, 1076, 843, 843, 843, 843, 5099, 4988, 1688, 946,
	5080, 3739, 288, 3217, 2563, 1838, 4869, 4423, 2565, 4309,
	3634, 4389, 4284, 4396, 2987, 5042, 4295, 4341, 1353, 4304,
	4433, 3507, 982, 4917, 1357, 4713, 2827, 2048, 3588, 288,
	93, 1218, 1357, 4404, 4419, 1264, 1517, 1517, 4633, 1517,
	4632, 4521, 4202, 3871, 4629, 4628, 1357, 4342, 2171, 2173,
	1182, 2174, 1520, 3723, 5122, 2273, 5287, 1639, 1639, 1224,
	4411, 2282, 1355, 3029, 2903, 1241, 1238, 2175, 2177, 1240,
	1239, 2176, 4464, 2068, 1237, 2170, 4344, 3890, 1517, 3325,
	3930, 1756, 1754, 4390, 1078, 2277, 2747, 4398, 2811, 3496,
	2041, 1198, 1220, 1351, 1351, 2808, 1381, 2174, 2174, 1209,
	3614, 4472, 2180, 3593, 1234, 3917, 4136, 2657, 955, 3542,
	4449, 2183, 2814, 1370, 2926, 1357, 2919, 1357, 2915, 3689,
	3315, 1920, 4727, 2019, 3326, 4386, 2174, 2174, 1352, 3986,
	1485, 1202, 1515, 2745, 4489, 4490, 2032, 3474, 2667, 4510,
	4511, 3924, 1441, 4395, 3637, 3022, 5103, 4053, 4461, 4462,
	4568, 3403, 1517, 2466, 1441, 1331, 4466, 1441, 4456, 2174,
	4548, 4547, 4577, 4463, 4513, 4580, 1330, 4473, 4561, 747,
	747, 1379, 1234, 4492, 4493, 1517, 4476, 288, 1329, 4564,
	4565, 5086, 4467, 4469, 5083, 2386, 4636, 3866, 4500, 4501,
	3867, 2265, 4504, 4488, 3070, 4460, 4518, 4516, 190, 2757,
	3885, 1214, 3381, 4465, 3382, 1623, 4503, 2609, 3985, 3599,
	4321, 4030, 1716, 4787, 1226, 2004, 3639, 1639, 1639, 4512,
	3244, 4599, 3243, 4601, 4947, 1470, 1468, 1467, 4046, 1466,
	5255, 3210, 2399, 4211, 4210, 4209, 251, 3441, 1941, 1933,
	248, 250, 249, 3743, 4141, 3643, 1814, 1441, 4563, 1355,
	5178, 4235, 4584, 3857, 4602, 4650, 25, 1355, 850, 1517,
	851, 852, 3080, 4626, 1639, 2292, 1487, 4562, 4186, 4623,
	24, 1355, 23, 22, 21, 4667, 120, 44, 4581, 4620,
	20, 162, 160, 137, 157, 4544, 156, 4544, 129, 1639,
	1639, 1639, 1639, 1639, 1639, 1639, 4621, 155, 154, 153,
	152, 4613, 4656, 151, 159, 150, 149, 1353, 1353, 144,
	4619, 148, 147, 1517, 146, 1352, 145, 4612, 4651, 143,
	141, 4593, 142, 1352, 4611, 1234, 1234, 1234, 4668, 136,
	140, 139, 138, 135, 134, 133, 4631, 1352, 132, 131,
	1355, 130, 1355, 1517, 4645, 4643, 4639, 4638, 1234, 128,
	161, 1234, 1234, 4627, 4699, 127, 126, 205, 125, 4671,
	124, 1234, 123, 4139, 2186, 122, 121, 829, 4684, 1234,
	1234, 4669, 4688, 830, 63, 62, 117, 4589, 118, 19,
	4690, 42, 14, 4676, 67, 4681, 1517, 68, 1639, 4682,
	4578, 18, 13, 37, 4705, 96, 109, 108, 107, 4567,
	38, 104, 36, 17, 16, 4662, 1352, 15, 1352, 102,
	4700, 101, 4576, 1441, 1351, 4579, 100, 35, 33, 11,
	9, 39, 2130, 12, 5, 195, 194, 197, 193, 196,
	95, 192, 191, 94, 284, 1517, 4736, 31, 4737, 10,
	4641, 187, 4865, 1234, 2751, 4328, 87, 4710, 189, 2174,
	188, 186, 185, 184, 88, 4652, 1234, 85, 183, 90,
	2030, 182, 86, 89, 29, 1234, 6, 4764, 66, 7,
	2186, 4694, 3967, 4722, 4716, 112, 4733, 4734, 4675, 113,
	1234, 40, 83, 1234, 82, 4653, 81, 80, 4752, 28,
	65, 27, 179, 229, 228, 227, 226, 225, 224, 1234,
	223, 222, 1234, 217, 221, 219, 218, 220, 216, 1517,
	4790, 242, 241, 240, 239, 1644, 238, 1441, 232, 4760,
	231, 237, 1644, 236, 235, 4829, 234, 1639, 1639, 1639,
	233, 230, 245, 76, 4763, 215, 4813, 2320, 4814, 3209,
	4769, 2180, 214, 4809, 213, 211, 207, 210, 1357, 212,
	2183, 209, 4693, 208, 206, 244, 243, 77, 4838, 177,
	178, 75, 176, 175, 174, 4825, 173, 4761, 172, 4762,
	171, 170, 74, 181, 180, 1517, 4852, 26, 1639, 2,
	4848, 4864, 1, 2662, 4812, 0, 0, 0, 4811, 4884,
	0, 0, 4856, 4859, 3868, 2174, 4807, 4801, 4802, 0,
	0, 1351, 0, 0, 0, 0, 4843, 4844, 4822, 1351,
	4841, 0, 0, 4871, 1234, 1234, 0, 0, 0, 4850,
	0, 4840, 0, 1351, 4756, 0, 4889, 4845, 1353, 0,
	0, 1234, 2186, 4821, 0, 4823, 2499, 4824, 0, 4893,
	0, 4895, 4885, 4868, 4870, 0, 0, 2180, 4887, 4863,
	0, 0, 0, 0, 0, 0, 2183, 1441, 1441, 0,
	3353, 1441, 1441, 0, 1441, 1441, 0, 0, 0, 4892,
	0, 3360, 1372, 4886, 4891, 0, 0, 0, 0, 4671,
	0, 0, 1234, 764, 1234, 0, 1234, 4898, 0, 0,
	4906, 4907, 1351, 0, 1351, 0, 1357, 764, 0, 4942,
	0, 0, 0, 4905, 0, 0, 0, 4940, 1396, 1234,
	4815, 1357, 0, 0, 0, 0, 0, 0, 4544, 0,
	288, 4881, 288, 288, 0, 1425, 288, 1435, 3471, 3472,
	0, 2921, 4927, 4928, 4909, 0, 4930, 4931, 1449, 4932,
	4933, 4915, 0, 0, 4799, 0, 836, 4939, 0, 836,
	0, 4938, 0, 4830, 0, 4970, 0, 0, 0, 4935,
	0, 0, 4969, 0, 0, 0, 0, 4962, 1357, 1357,
	4963, 0, 843, 1355, 0, 4828, 0, 0, 0, 0,
	0, 0, 4993, 4991, 0, 5017, 0, 0, 1357, 0,
	0, 1357, 0, 0, 0, 1639, 288, 0, 288, 288,
	1425, 0, 288, 288, 4978, 1639, 4980, 0, 0, 2180,
	0, 1435, 5006, 5007, 0, 1353, 0, 0, 2183, 0,
	0, 1234, 1234, 1353, 288, 0, 288, 0, 1666, 0,
	0, 1234, 5022, 0, 5004, 5024, 0, 1353, 4986, 1352,
	0, 5015, 0, 0, 1686, 0, 5021, 1163, 0, 1100,
	4471, 1693, 0, 0, 5038, 0, 5039, 0, 0, 5029,
	5030, 4979, 4868, 0, 5037, 5035, 4544, 5034, 0, 5033,
	1718, 0, 1435, 0, 1165, 0, 288, 288, 0, 1425,
	0, 4544, 0, 5047, 1234, 1234, 0, 5051, 1234, 4498,
	0, 0, 1639, 1441, 5077, 0, 1441, 5046, 0, 0,
	836, 0, 288, 288, 5055, 5056, 1353, 5059, 1353, 0,
	3569, 3570, 3571, 3572, 1782, 0, 5085, 5088, 0, 5102,
	0, 1355, 1164, 5106, 5101, 1790, 0, 0, 5076, 5075,
	982, 5067, 5068, 0, 4976, 0, 1355, 5032, 4544, 4544,
	0, 0, 5105, 5094, 0, 5090, 0, 5127, 5057, 0,
	0, 5125, 0, 0, 1234, 1234, 1234, 0, 4544, 0,
	5089, 4544, 0, 4990, 5093, 0, 0, 0, 5096, 1101,
	5095, 5097, 0, 0, 0, 5111, 0, 0, 0, 5115,
	5118, 0, 0, 0, 0, 0, 0, 1352, 5126, 0,
	0, 5020, 1234, 1355, 1355, 0, 5141, 5159, 5139, 5140,
	5164, 5142, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 1355, 0, 0, 1355, 0, 0, 0,
	0, 0, 5187, 5185, 2320, 5186, 5161, 5160, 0, 0,
	0, 0, 0, 0, 2174, 5193, 5195, 288, 0, 5162,
	0, 0, 0, 0, 0, 5199, 1234, 5177, 0, 0,
	0, 0, 0, 0, 1441, 0, 0, 0, 5192, 1352,
	1352, 0, 5208, 5191, 0, 0, 0, 4848, 5200, 0,
	5201, 0, 0, 5175, 5218, 5226, 0, 0, 0, 1352,
	5214, 5215, 1352, 0, 1644, 0, 5217, 5222, 5220, 0,
	5205, 0, 0, 5229, 0, 0, 0, 0, 0, 5241,
	5230, 5228, 0, 5242, 0, 1357, 5232, 1357, 0, 5251,
	5249, 5085, 5239, 0, 5088, 5237, 5243, 5240, 0, 0,
	5248, 1106, 1105, 0, 1515, 1351, 0, 5247, 0, 5216,
	5174, 5112, 5257, 5176, 5105, 5113, 0, 0, 0, 0,
	2174, 0, 0, 0, 0, 0, 1441, 0, 0, 5250,
	0, 5252, 5256, 0, 4711, 0, 5279, 5272, 5273, 5280,
	0, 0, 0, 5283, 0, 0, 0, 1644, 1644, 1102,
	5278, 0, 0, 0, 0, 5282, 1234, 1234, 5289, 0,
	5285, 0, 0, 0, 5291, 1234, 1234, 0, 0, 5303,
	0, 0, 5294, 0, 5305, 0, 0, 4711, 5299, 0,
	0, 5310, 5309, 5311, 5307, 0, 0, 5315, 5306, 0,
	3327, 5312, 5308, 0, 5314, 5313, 5318, 0, 0, 0,
	0, 5276, 5319, 1441, 5320, 5322, 5321, 0, 0, 5327,
	5325, 5323, 0, 5324, 0, 5330, 0, 0, 1430, 0,
	3327, 0, 0, 1234, 747, 3955, 2683, 5334, 0, 5336,
	5327, 5331, 5338, 3955, 0, 0, 0, 0, 3953, 5333,
	0, 5300, 5301, 0, 0, 288, 3953, 288, 3946, 0,
	0, 288, 0, 1351, 0, 4544, 3946, 4544, 0, 0,
	0, 0, 0, 0, 1666, 1425, 1435, 288, 1351, 288,
	2155, 0, 0, 0, 0, 0, 0, 288, 0, 764,
	3431, 1103, 2174, 0, 0, 0, 288, 0, 0, 0,
	0, 1610, 5302, 0, 1624, 1430, 0, 0, 78, 5335,
	2683, 0, 0, 2225, 0, 0, 0, 1162, 0, 1104,
	1355, 0, 1355, 0, 0, 288, 79, 4144, 0, 1353,
	0, 0, 288, 0, 0, 1351, 1351, 0, 0, 1644,
	1644, 1644, 1644, 84, 0, 3957, 0, 0, 0, 0,
	0, 0, 0, 3957, 0, 1351, 0, 0, 1351, 0,
	0, 0, 3948, 0, 0, 836, 0, 0, 0, 0,
	3948, 0, 0, 2921, 2921, 1108, 0, 3947, 1430, 1430,
	0, 0, 4145, 0, 92, 3947, 1352, 0, 1352, 0,
	0, 0, 0, 0, 1107, 0, 0, 3861, 0, 0,
	0, 0, 0, 843, 0, 843, 0, 0, 0, 4146,
	0, 4143, 0, 0, 0, 843, 843, 0, 0, 0,
	4154, 0, 0, 0, 0, 976, 4152, 0, 0, 0,
	0, 0, 0, 0, 3956, 4009, 4010, 0, 0, 0,
	114, 0, 3956, 0, 0, 0, 98, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3936,
	0, 4153, 0, 0, 0, 0, 4149, 0, 0, 0,
	0, 3960, 0, 0, 0, 3944, 0, 1353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4150, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	99, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4073, 4074, 4075, 4076, 4077,
	4078, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087,
	4088, 4089, 4090, 4091, 4092, 0, 4096, 0, 0, 1353,
	1353, 0, 0, 0, 0, 2921, 2921, 2921, 2921, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 1353,
	0, 0, 1353, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3954, 3949, 3950, 3951, 3952, 0, 0, 0, 3954,
	3949, 3950, 3951, 3952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4147, 0, 0, 0, 288, 0,
	0, 0, 4148, 0, 0, 0, 0, 0, 0, 288,
	0, 3958, 0, 0, 3019, 288, 0, 0, 0, 3958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 288, 103, 0, 0, 747, 0, 288,
	1189, 0, 1351, 0, 1351, 0, 0, 0, 0, 0,
	0, 836, 0, 0, 0, 982, 4151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1425, 288, 0,
	0, 0, 0, 198, 0, 106, 0, 0, 110, 0,
	0, 0, 0, 836, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 2562, 0,
	0, 0, 0, 288, 288, 252, 288, 0, 288, 0,
	288, 0, 288, 977, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2599, 0, 0,
	2600, 1624, 2601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 288, 288, 288,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 816, 0,
	0, 0, 836, 0, 1624, 0, 0, 1952, 1953, 204,
	1985, 1986, 1987, 1996, 1997, 1998, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 246, 0, 1644, 1644, 0, 0, 0, 1955,
	0, 247, 0, 0, 0, 199, 1353, 0, 1353, 2002,
	203, 0, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2008, 0, 0, 0,
	0, 202, 0, 0, 0, 1954, 3545, 3546, 0, 3563,
	3564, 3565, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 2759, 0, 4415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4277,
	4278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4281, 0, 0, 1644, 1644, 1644, 1644, 1644, 1644,
	1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
	1644, 1644, 1644, 1644, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3560, 0, 0, 0, 0,
	0, 0, 0, 1952, 1953, 0, 0, 0, 0, 747,
	0, 0, 0, 1977, 1978, 1979, 1980, 0, 0, 0,
	0, 0, 0, 1960, 288, 0, 0, 1983, 0, 0,
	0, 0, 0, 747, 0, 1955, 0, 0, 0, 0,
	288, 0, 747, 0, 0, 0, 3545, 3546, 0, 3563,
	3564, 3565, 0, 0, 288, 0, 0, 0, 4368, 0,
	0, 0, 2008, 2523, 4374, 4375, 1993, 0, 0, 2003,
	0, 1954, 0, 0, 288, 1435, 1982, 1984, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 0, 0,
	2921, 2921, 3551, 0, 0, 0, 0, 1196, 0, 0,
	0, 0, 1969, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 288, 1435, 3560, 288, 764, 0, 764,
	0, 0, 0, 0, 3045, 1975, 0, 0, 0, 0,
	288, 0, 0, 288, 0, 0, 0, 288, 0, 288,
	0, 2480, 0, 0, 1425, 0, 288, 288, 0, 1435,
	1435, 3061, 3567, 0, 0, 0, 288, 0, 0, 1977,
	1978, 1979, 1980, 0, 0, 0, 0, 0, 0, 1960,
	2921, 2921, 2921, 2921, 2921, 2921, 2921, 2921, 2921, 2921,
	2921, 2921, 2921, 2921, 2921, 2921, 2921, 2921, 2921, 2921,
	0, 2921, 0, 0, 3561, 0, 0, 0, 0, 0,
	843, 843, 0, 0, 843, 843, 2005, 0, 0, 0,
	0, 0, 3551, 3104, 2769, 2770, 2771, 2788, 2789, 2790,
	0, 0, 1982, 1984, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2791, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 3568, 4478,
	4479, 0, 0, 0, 836, 1981, 0, 0, 0, 836,
	2008, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	0, 1975, 3567, 0, 0, 0, 0, 0, 0, 1976,
	2781, 0, 288, 0, 0, 0, 0, 0, 0, 2777,
	0, 0, 0, 0, 0, 0, 3205, 1666, 0, 0,
	0, 0, 2610, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 3561, 0, 0, 0, 0, 1952,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 3265, 0, 0, 0, 78, 0, 0,
	0, 2007, 0, 1983, 0, 0, 0, 0, 3562, 0,
	0, 1955, 2005, 0, 0, 79, 0, 0, 0, 0,
	1666, 0, 0, 288, 0, 0, 3205, 2782, 2783, 2784,
	2785, 0, 84, 0, 288, 0, 0, 2776, 2008, 0,
	0, 0, 0, 0, 3310, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 3104, 2005, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 982, 3104, 0, 4719, 2523,
	0, 1981, 0, 92, 0, 0, 0, 1992, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 1966,
	1967, 1973, 1995, 1972, 1968, 1976, 1965, 1963, 1964, 1956,
	1957, 1958, 1959, 1961, 1962, 0, 0, 0, 288, 1425,
	288, 0, 0, 0, 976, 0, 2786, 2787, 0, 0,
	3383, 288, 0, 0, 1425, 0, 1425, 51, 1425, 114,
	0, 0, 0, 0, 0, 98, 111, 0, 3562, 0,
	0, 4683, 0, 4685, 4686, 4687, 0, 4689, 0, 2779,
	4772, 0, 0, 0, 0, 1960, 0, 2007, 3557, 3558,
	3559, 0, 0, 0, 0, 3556, 3554, 3555, 3547, 3548,
	3549, 3550, 3552, 3553, 0, 288, 288, 288, 288, 1425,
	0, 0, 1425, 0, 0, 288, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 1430, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961,
	1962, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 1430, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3557, 3558,
	3559, 0, 0, 0, 0, 3556, 3554, 3555, 3547, 3548,
	3549, 3550, 3552, 3553, 0, 0, 0, 0, 1430, 1430,
	0, 0, 0, 2780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 0, 103, 0, 0, 0, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 1196, 1196, 1196, 0,
	0, 0, 0, 0, 0, 2007, 0, 0, 0, 4842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 0,
	0, 0, 198, 0, 106, 1610, 4968, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 977, 0, 1624, 0, 0, 158, 0, 0,
	0, 0, 0, 2766, 2767, 2768, 2792, 2778, 2772, 0,
	2774, 2775, 2773, 2760, 2761, 2762, 2763, 2764, 2765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 2007, 0, 254, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 163, 747, 0, 0, 0, 0, 747, 0,
	0, 747, 0, 0, 747, 747, 0, 0, 204, 0,
	747, 0, 0, 0, 0, 0, 253, 0, 288, 0,
	0, 0, 0, 3545, 3546, 0, 3563, 3564, 3565, 0,
	288, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 199, 0, 4018, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	0, 1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0,
	1767, 0, 0, 288, 0, 0, 0, 288, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3560, 1430, 0, 0, 0, 0, 0, 0,
	0, 3104, 3104, 288, 0, 3709, 3712, 0, 0, 0,
	0, 0, 3104, 0, 2155, 0, 0, 2523, 0, 0,
	0, 0, 0, 3104, 2155, 0, 3104, 2155, 0, 0,
	2155, 1952, 1953, 3709, 1985, 1986, 1987, 1996, 1997, 1998,
	0, 0, 0, 0, 0, 288, 288, 3712, 1624, 288,
	1624, 0, 0, 0, 1989, 1983, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 0, 3712, 0,
	288, 0, 3785, 2002, 3785, 0, 0, 0, 0, 0,
	1425, 0, 0, 2921, 0, 0, 0, 0, 0, 3551,
	2008, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 3104, 0, 3104, 0, 3816, 3104, 3712,
	1974, 0, 3104, 0, 0, 1988, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 3712, 0, 0, 836,
	0, 3545, 3546, 0, 3563, 3564, 3565, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4017, 0, 0, 0, 0, 3567,
	0, 1425, 0, 0, 0, 2921, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 3862, 0,
	1644, 0, 3864, 3104, 0, 0, 288, 1977, 1978, 1979,
	1980, 3561, 0, 0, 1435, 0, 0, 1960, 0, 0,
	3560, 0, 0, 0, 0, 1644, 0, 0, 0, 288,
	0, 0, 0, 0, 3310, 0, 0, 1425, 0, 288,
	0, 0, 3104, 0, 747, 0, 0, 0, 0, 0,
	0, 3104, 0, 0, 0, 0, 0, 0, 0, 0,
	1993, 0, 1601, 2003, 0, 0, 0, 0, 0, 0,
	1982, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 2000,
	0, 0, 2005, 0, 0, 1988, 1969, 1970, 0, 0,
	3975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 1991, 0, 0, 3551, 1952, 1953,
	0, 0, 0, 3982, 0, 0, 0, 1666, 0, 1975,
	0, 1425, 288, 0, 288, 0, 0, 0, 0, 0,
	1425, 0, 1983, 1425, 78, 0, 0, 0, 0, 1988,
	1955, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 1988, 79, 2921, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 3562, 0, 2008, 2001, 84,
	0, 1196, 0, 0, 0, 0, 1954, 3567, 0, 1601,
	0, 3545, 3546, 0, 3563, 3564, 3565, 1974, 0, 1990,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 2921, 0, 0, 0,
	92, 0, 0, 0, 0, 0, 0, 0, 0, 3561,
	0, 4051, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2921, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 1988,
	0, 976, 4414, 0, 0, 0, 0, 0, 0, 1981,
	3560, 0, 0, 1988, 51, 0, 114, 0, 1988, 0,
	0, 0, 98, 111, 1977, 1978, 1979, 1980, 0, 1624,
	1624, 0, 0, 1976, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1994, 0, 0, 0, 3557, 3558, 3559, 288, 288,
	0, 0, 3556, 3554, 3555, 3547, 3548, 3549, 3550, 3552,
	3553, 0, 0, 0, 1988, 0, 99, 1982, 1984, 0,
	1988, 0, 0, 747, 747, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3551, 1624, 0,
	1601, 0, 0, 1969, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2480, 3562, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1992, 0, 0, 0, 0, 0, 3567, 0, 0,
	0, 0, 0, 1966, 1967, 1973, 1995, 1972, 1968, 0,
	1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962, 0,
	0, 0, 0, 0, 3520, 0, 0, 0, 3521, 0,
	0, 0, 0, 0, 1952, 1953, 0, 0, 0, 3561,
	0, 0, 836, 0, 0, 0, 0, 2005, 0, 0,
	1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1983, 0,
	103, 0, 0, 0, 0, 0, 1955, 0, 0, 4249,
	1988, 0, 4251, 4252, 0, 0, 0, 0, 0, 3785,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 288, 0, 0, 0, 0, 0,
	0, 1430, 1954, 3557, 3558, 3559, 1981, 0, 3205, 0,
	3556, 3554, 3555, 3547, 3548, 3549, 3550, 3552, 3553, 198,
	2005, 106, 0, 0, 110, 3712, 0, 288, 0, 2925,
	1976, 764, 764, 1435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 288, 0, 0, 1988,
	0, 252, 0, 0, 0, 0, 0, 288, 3310, 977,
	0, 3310, 2155, 0, 158, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 4333, 0, 3205, 0, 0, 288,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 288,
	0, 0, 2007, 0, 0, 0, 0, 0, 3235, 0,
	0, 0, 254, 3562, 0, 0, 1624, 0, 3104, 288,
	1960, 0, 0, 1196, 0, 0, 0, 1601, 0, 0,
	982, 3104, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 3225, 3223, 0, 0, 0, 0, 0, 3227,
	3229, 3219, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 288, 253, 0, 0, 3712, 0, 0, 3061,
	0, 0, 0, 1982, 1984, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 199, 3245, 0, 1972, 1968, 203, 1965, 1963, 1964,
	1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2108, 0, 0,
	0, 0, 0, 3557, 3558, 3559, 0, 0, 0, 0,
	3556, 3554, 3555, 3547, 3548, 3549, 3550, 3552, 3553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 1666, 2005, 288, 0, 0, 1601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3237,
	0, 0, 1435, 1435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 1435, 1435, 0,
	288, 1435, 0, 3236, 3226, 3224, 3228, 3230, 3220, 3222,
	3238, 3240, 3104, 3104, 79, 3709, 1952, 1953, 3785, 3104,
	0, 3232, 3234, 3242, 0, 0, 1976, 4546, 0, 4546,
	1666, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 3104, 0, 2155, 0, 0, 0, 3709, 1955, 1666,
	1666, 288, 3712, 0, 0, 0, 0, 3246, 0, 0,
	0, 0, 0, 0, 0, 3712, 0, 288, 3712, 0,
	288, 0, 92, 3785, 0, 2008, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 2007, 0,
	0, 0, 1181, 1601, 3104, 0, 3104, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 98, 111, 3104, 3104, 0, 0,
	0, 0, 3310, 3310, 0, 0, 1430, 0, 0, 3709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 3239, 0, 0,
	0, 0, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959,
	1961, 1962, 1960, 1601, 0, 0, 1988, 0, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2480, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 1988, 0, 0, 0, 1982, 1984, 0, 3247, 0,
	0, 0, 0, 0, 0, 1988, 0, 3231, 3233, 3241,
	0, 0, 0, 0, 0, 0, 1988, 1988, 1988, 1988,
	1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
	1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
	1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
	1988, 1988, 0, 0, 1975, 0, 0, 1988, 0, 1988,
	1988, 1988, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 2925, 2925, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 3104, 2155, 0, 2155, 0, 0, 4333, 0,
	0, 0, 103, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4788, 0, 4788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 1988, 0, 0,
	0, 0, 0, 0, 836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3785, 1666, 0, 1666, 1425,
	0, 198, 0, 106, 0, 0, 110, 1988, 0, 0,
	1988, 0, 0, 1988, 0, 0, 1988, 0, 3712, 0,
	288, 0, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 0,
	0, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 977, 0, 0, 0, 0, 158, 4333, 0, 0,
	4546, 0, 0, 1666, 0, 0, 0, 3104, 1976, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1196, 0, 0, 4878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 1666, 0, 1988, 0,
	0, 3566, 0, 2925, 2925, 2925, 2925, 0, 0, 1988,
	0, 1988, 1430, 0, 0, 0, 1988, 0, 0, 0,
	0, 163, 0, 0, 288, 288, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 796, 204, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 4051, 0,
	0, 0, 0, 0, 0, 0, 0, 779, 0, 0,
	246, 0, 780, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 199, 0, 0, 0, 0, 203, 0,
	3785, 4937, 2480, 0, 0, 0, 0, 0, 4333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 781, 0, 0, 0, 0, 4546, 1430,
	0, 0, 0, 0, 782, 0, 0, 0, 0, 0,
	0, 0, 0, 4546, 0, 0, 1963, 1964, 1956, 1957,
	1958, 1959, 1961, 1962, 0, 0, 783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 802, 0,
	0, 0, 764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 784,
	4546, 4546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1444, 0, 0, 0, 0, 0,
	4546, 0, 288, 4546, 785, 0, 0, 0, 0, 0,
	0, 0, 0, 2155, 0, 0, 0, 0, 0, 0,
	0, 1181, 1181, 1181, 1666, 0, 1666, 786, 0, 0,
	0, 0, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 811,
	0, 0, 0, 1601, 0, 0, 0, 1435, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 5065, 1630, 0, 0, 0, 801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 4788, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 1601, 0, 1668, 0, 1674, 0, 1680, 0, 78,
	0, 48, 47, 0, 0, 3104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 1601, 0,
	0, 164, 0, 0, 0, 798, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 288, 1988,
	1988, 0, 1988, 0, 0, 69, 0, 0, 0, 0,
	0, 0, 50, 0, 166, 0, 0, 0, 0, 1196,
	0, 0, 4051, 0, 0, 1773, 0, 1778, 0, 0,
	0, 1196, 0, 49, 0, 92, 0, 0, 0, 0,
	0, 1792, 0, 1797, 0, 0, 0, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 70, 789, 0, 0, 0, 0, 0,
	0, 53, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 51,
	0, 114, 0, 0, 809, 0, 790, 98, 111, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 1869, 0, 4333, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	810, 54, 0, 0, 0, 0, 0, 0, 791, 0,
	0, 0, 0, 806, 807, 0, 804, 3104, 0, 0,
	0, 99, 799, 0, 0, 792, 0, 4546, 0, 4546,
	0, 0, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 1988, 1624, 2925, 2925,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3566, 3566, 0, 0, 1988, 1988, 0, 0,
	793, 0, 800, 0, 0, 0, 1988, 0, 0, 1601,
	0, 794, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	1988, 0, 0, 3104, 0, 0, 795, 0, 72, 0,
	0, 803, 1988, 0, 0, 0, 0, 0, 0, 0,
	3205, 0, 0, 0, 0, 2029, 812, 0, 0, 0,
	0, 2042, 0, 3104, 0, 0, 0, 797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3205, 2925, 2925,
	2925, 2925, 2925, 2925, 2925, 2925, 2925, 2925, 2925, 2925,
	2925, 2925, 2925, 2925, 2925, 2925, 2925, 2925, 0, 2925,
	3566, 3566, 3566, 3566, 0, 0, 0, 0, 0, 0,
	0, 1430, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	58, 0, 0, 0, 0, 61, 0, 0, 0, 0,
	1601, 0, 0, 1601, 0, 73, 0, 2102, 2102, 2102,
	0, 0, 0, 60, 198, 0, 106, 0, 0, 110,
	0, 0, 0, 56, 0, 0, 0, 168, 0, 0,
	0, 1230, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 64, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 1953, 0, 0, 165, 0, 0, 0, 287,
	287, 287, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 254, 0, 1601,
	0, 0, 0, 1955, 0, 0, 0, 0, 0, 0,
	0, 907, 0, 1988, 2896, 2897, 2898, 2899, 2892, 2893,
	2894, 2895, 0, 0, 163, 0, 0, 0, 0, 0,
	2008, 0, 0, 0, 0, 0, 0, 0, 907, 1954,
	204, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	1974, 0, 0, 0, 0, 0, 1181, 0, 0, 1971,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	1988, 1988, 247, 0, 0, 0, 199, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2872, 2873,
	2874, 2875, 202, 0, 0, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4012, 0, 0, 0, 0,
	0, 0, 2884, 2885, 2886, 2887, 2880, 2881, 2882, 2883,
	2888, 2889, 2890, 2891, 1601, 0, 0, 1977, 1978, 1979,
	1980, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 1984, 0, 0, 0, 2868, 2869, 2870, 2871, 2876,
	2877, 2878, 2879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 1988, 0, 0, 1988,
	3566, 3566, 1988, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	1988, 1988, 1988, 1988, 0, 0, 0, 0, 0, 1988,
	2005, 1988, 0, 0, 3566, 3566, 3566, 3566, 3566, 3566,
	3566, 3566, 3566, 3566, 3566, 3566, 3566, 3566, 3566, 3566,
	3566, 3566, 3566, 3566, 0, 0, 0, 3566, 0, 0,
	1988, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1266, 0,
	0, 0, 0, 1976, 0, 1952, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2586, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 1988, 1955, 0, 0,
	0, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 2615, 0,
	0, 0, 0, 0, 2008, 2007, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 1601, 0, 0, 0,
	0, 0, 0, 0, 1974, 1988, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 2656, 0, 2660, 0,
	0, 0, 0, 0, 0, 2674, 0, 0, 1181, 1988,
	1988, 0, 0, 0, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	0, 2726, 0, 2728, 2729, 2730, 2731, 1972, 1968, 0,
	1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962, 0,
	0, 1977, 1978, 1979, 1980, 0, 0, 0, 0, 2755,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 0, 0, 0, 2806, 0, 0, 1601, 1601,
	0, 1601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2836, 2839, 2842, 2845, 0, 1988, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 1984, 0, 0, 0, 0,
	1601, 0, 0, 0, 0, 2917, 0, 2928, 2930, 2935,
	0, 0, 0, 1358, 0, 0, 0, 0, 0, 0,
	1969, 1970, 0, 1988, 1988, 0, 1196, 0, 1988, 1988,
	0, 0, 1988, 1988, 0, 0, 0, 1988, 0, 0,
	0, 1988, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 2925, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 287, 287, 0, 1601, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 0,
	1219, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 2925, 0, 287, 0, 287, 287, 0,
	0, 287, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 907, 0, 907, 0, 0, 0, 0,
	0, 1601, 1952, 1953, 0, 1985, 1986, 1987, 1996, 1997,
	1998, 0, 0, 1981, 0, 0, 0, 0, 0, 116,
	0, 1988, 0, 0, 0, 1989, 1983, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 1976, 0, 0,
	0, 1952, 1953, 0, 2002, 287, 287, 1996, 1997, 1998,
	0, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 1983, 0, 0, 0, 0,
	1954, 287, 287, 1955, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 2002, 0, 1601, 1952, 1953, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 2007,
	2008, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	1983, 1153, 0, 0, 0, 0, 0, 0, 1955, 0,
	1974, 0, 0, 1174, 0, 0, 0, 0, 1601, 1971,
	0, 0, 0, 0, 0, 0, 0, 1988, 1988, 1988,
	0, 0, 0, 0, 0, 2008, 0, 0, 1988, 1988,
	3566, 2925, 0, 0, 1954, 0, 0, 1988, 0, 0,
	1988, 0, 0, 0, 0, 1974, 0, 0, 1977, 1978,
	1979, 1980, 0, 0, 1971, 1341, 0, 1601, 1960, 0,
	287, 0, 3268, 3269, 0, 3271, 0, 0, 0, 0,
	0, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958,
	1959, 1961, 1962, 3566, 2925, 0, 287, 1977, 1978, 1979,
	1980, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	1988, 1993, 0, 0, 2003, 1196, 0, 0, 1988, 2925,
	4007, 1982, 1984, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 1999, 1988,
	2000, 1601, 1977, 1978, 1979, 1980, 0, 1969, 1970, 0,
	1993, 0, 1960, 2003, 0, 0, 0, 0, 0, 0,
	1982, 1984, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1975, 0, 0, 0, 0, 0, 1969, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1991, 1982, 1984, 1601, 0, 0,
	0, 0, 0, 0, 0, 0, 3394, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 1969, 1970, 0, 0, 3566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 1975, 0, 1988, 3566, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3566,
	0, 2009, 2010, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 1181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 0, 2124, 0, 1354, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 1976, 2005, 287, 2124, 287, 3454,
	3455, 0, 0, 0, 1358, 3461, 907, 0, 0, 1981,
	0, 0, 0, 0, 0, 907, 0, 0, 0, 0,
	0, 0, 1994, 0, 3475, 3476, 0, 0, 0, 0,
	2806, 0, 0, 1976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 1358, 0, 0, 0, 0,
	0, 287, 0, 0, 1981, 0, 2007, 0, 0, 0,
	0, 1994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3485, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 3499, 0, 0, 0, 2007, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3511, 1988,
	0, 0, 0, 1358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 0, 1988, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 1966, 1967, 1973, 1995, 1972, 1968,
	0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962,
	0, 0, 0, 0, 0, 2802, 0, 1196, 0, 2803,
	0, 1992, 0, 1358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1995, 1972, 1968, 0,
	1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2935,
	2935, 2935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2102, 0, 0, 0,
	0, 0, 1972, 1968, 3604, 1965, 1963, 1964, 1956, 1957,
	1958, 1959, 1961, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 907, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1181, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 1181, 0, 287, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 116,
	287, 116, 287, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 3742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 116, 116, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	0, 116, 0, 0, 0, 0, 3799, 3800, 0, 287,
	0, 1358, 0, 1358, 0, 116, 0, 116, 0, 0,
	0, 0, 907, 287, 0, 287, 0, 287, 1358, 287,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 287, 287, 287,
	0, 0, 0, 116, 0, 0, 1952, 1953, 0, 1985,
	1986, 1987, 1996, 1997, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	1983, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 0, 0,
	0, 0, 1952, 1953, 1954, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 1153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 2008, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 1974, 2034, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 1978, 1979, 1980, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2674, 0, 0, 0, 0, 0, 0,
	4004, 4005, 0, 0, 4008, 0, 0, 0, 4011, 0,
	0, 0, 0, 1354, 0, 0, 4006, 4015, 0, 0,
	0, 0, 0, 0, 0, 1993, 4022, 0, 2003, 1354,
	0, 3604, 0, 0, 0, 1982, 1984, 0, 1977, 1978,
	1979, 1980, 0, 287, 1358, 1358, 4035, 0, 1960, 0,
	0, 0, 1999, 0, 2000, 0, 1358, 0, 0, 0,
	0, 1969, 1970, 287, 0, 0, 4058, 4059, 0, 4060,
	4061, 4062, 0, 2122, 0, 2125, 0, 116, 0, 1991,
	0, 0, 0, 0, 0, 0, 0, 4068, 0, 0,
	0, 4070, 0, 0, 1975, 0, 0, 0, 0, 0,
	0, 1982, 1984, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 287, 0, 0, 907, 0, 0, 0, 0,
	0, 0, 0, 0, 4099, 4100, 0, 1969, 1970, 287,
	0, 0, 287, 0, 0, 0, 287, 0, 287, 0,
	0, 0, 4111, 2001, 0, 287, 287, 0, 0, 0,
	0, 0, 0, 0, 1358, 287, 1358, 4120, 1358, 0,
	1975, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 1358, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 1358, 1358, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 796, 0, 287, 0,
	0, 2005, 0, 0, 4185, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 779, 1976, 0,
	0, 0, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1994, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 781, 0, 0, 4234, 0, 0, 0,
	0, 0, 0, 0, 782, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 783, 0, 0, 0,
	907, 2187, 2187, 1358, 0, 4258, 4259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 784,
	0, 0, 0, 287, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 785, 0, 0, 0, 1966, 1967,
	1973, 1995, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957,
	1958, 1959, 1961, 1962, 0, 0, 0, 786, 0, 0,
	0, 0, 787, 4440, 0, 0, 1358, 287, 0, 0,
	2102, 0, 0, 0, 0, 0, 0, 0, 0, 811,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 287,
	0, 0, 0, 0, 0, 0, 2102, 0, 0, 0,
	287, 0, 0, 0, 0, 4365, 801, 0, 1972, 1968,
	0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1174, 0, 1174, 0,
	1358, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 0, 0, 287, 287, 287, 287, 0, 0,
	0, 0, 0, 1358, 287, 798, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4412, 4413, 0, 0, 0, 0,
	4417, 4418, 0, 0, 0, 4421, 4422, 0, 0, 0,
	287, 0, 0, 4426, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 4430, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 0,
	4435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 0, 789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 1953, 0,
	1985, 1986, 1987, 1996, 1997, 1998, 0, 0, 0, 0,
	0, 0, 0, 1153, 0, 0, 1153, 1153, 0, 1358,
	1989, 1983, 0, 0, 0, 0, 0, 0, 0, 1955,
	810, 0, 0, 0, 0, 0, 0, 0, 791, 2002,
	0, 0, 0, 806, 807, 0, 804, 0, 0, 0,
	0, 0, 799, 0, 0, 792, 2008, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 2187, 0,
	0, 0, 0, 0, 2744, 0, 1974, 0, 0, 0,
	0, 1181, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 0,
	793, 0, 800, 0, 2028, 0, 0, 0, 2028, 0,
	0, 794, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 795, 0, 0, 0,
	0, 803, 0, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 812, 0, 0, 4590,
	0, 0, 0, 0, 0, 0, 0, 797, 0, 0,
	0, 0, 0, 1977, 1978, 1979, 1980, 0, 0, 0,
	0, 0, 0, 1960, 0, 1347, 0, 0, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 0, 0, 0, 0, 0, 0, 2125, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 0, 0, 2003,
	0, 0, 0, 283, 283, 743, 1982, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 2124, 116, 0,
	0, 0, 0, 1999, 0, 2000, 0, 0, 1358, 287,
	1358, 0, 1969, 1970, 1952, 1953, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 1358, 0,
	1991, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 1975, 1955, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 287, 287, 0, 0,
	0, 0, 4706, 4707, 4708, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 2674, 0, 0, 4717, 4718,
	0, 0, 287, 1974, 2001, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 4726, 4729, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 287, 287, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 2124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3460, 287,
	0, 0, 872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 1978, 1979, 1980, 0, 1981, 0, 0, 883, 0,
	1960, 0, 0, 4789, 0, 0, 0, 0, 0, 0,
	0, 0, 4797, 0, 0, 0, 0, 0, 885, 1976,
	0, 0, 0, 0, 0, 0, 0, 4805, 0, 0,
	1181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 884, 1243, 0, 0, 0, 4816, 1994, 0, 4818,
	0, 0, 0, 1982, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	1970, 2007, 0, 0, 116, 907, 0, 116, 0, 116,
	289, 289, 289, 0, 877, 287, 0, 0, 0, 0,
	0, 893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 882, 0, 0, 287, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 116, 0, 0, 0, 0, 0, 116, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 1992, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 881, 1966,
	1967, 1973, 1995, 1972, 1968, 0, 1965, 1963, 1964, 1956,
	1957, 1958, 1959, 1961, 1962, 811, 0, 0, 0, 0,
	0, 0, 0, 2005, 4020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 879, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 287, 116, 0, 0, 0, 0, 4945,
	0, 0, 0, 4949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 1358,
	0, 0, 1981, 1952, 1953, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 892, 0, 0, 0, 0, 1976, 1983, 0, 0,
	0, 0, 1358, 0, 0, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2008, 0, 0, 0, 0, 0, 0, 0,
	2187, 1954, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 2007, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2744, 0, 0, 2674,
	0, 0, 0, 0, 0, 0, 0, 0, 4729, 0,
	0, 0, 0, 0, 0, 0, 878, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3453, 0, 0,
	0, 2187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 1354, 1977,
	1978, 1979, 1980, 0, 0, 0, 810, 0, 0, 1960,
	1972, 1968, 1181, 1965, 1963, 1964, 1956, 1957, 1958, 1959,
	1961, 1962, 888, 0, 0, 0, 0, 0, 876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 1984, 0, 1358, 0, 0, 907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 873, 0,
	0, 5138, 5138, 5138, 886, 0, 0, 0, 1969, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5163,
	0, 1975, 812, 1411, 0, 1411, 1411, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 0, 0, 0, 1358,
	0, 1358, 0, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 0, 0, 890, 891,
	0, 887, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 0, 0, 5138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1341, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 0, 0, 1512,
	0, 0, 2005, 287, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 1358,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 1358, 0, 287, 1358,
	0, 0, 0, 287, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 5138, 5295, 1771, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 116, 2007, 116, 2187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 927, 0, 0, 2187, 2187, 0, 0, 0,
	0, 0, 116, 116, 0, 116, 0, 0, 0, 0,
	0, 0, 0, 929, 1893, 0, 0, 0, 930, 0,
	289, 0, 289, 289, 2187, 2187, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961,
	1962, 0, 0, 0, 0, 0, 0, 2187, 0, 931,
	0, 948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 1358, 0, 932, 0, 0,
	0, 0, 933, 0, 0, 0, 289, 1521, 289, 289,
	0, 0, 289, 289, 0, 1354, 0, 0, 1521, 0,
	0, 0, 0, 1354, 956, 0, 0, 0, 0, 0,
	1358, 934, 0, 0, 289, 0, 289, 2124, 0, 0,
	0, 0, 0, 0, 0, 954, 0, 1341, 0, 0,
	1174, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 116, 116, 0, 0, 0, 0,
	928, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 289, 289, 0, 0,
	0, 0, 0, 935, 0, 0, 0, 0, 936, 0,
	0, 0, 0, 0, 1521, 0, 2124, 0, 2124, 0,
	958, 1521, 289, 289, 0, 811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 2140, 0, 0, 1521, 0, 0,
	0, 957, 0, 0, 0, 0, 0, 0, 0, 0,
	2150, 952, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 1358, 1358, 0, 1358, 0,
	0, 289, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 289, 1411, 0,
	0, 287, 0, 0, 0, 1622, 0, 2187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 898, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 940, 0, 0, 1358, 0, 0, 116, 0,
	898, 0, 0, 0, 1358, 0, 0, 0, 0, 1358,
	1358, 1358, 0, 0, 0, 0, 1341, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 1358, 0, 810, 0, 0, 1358,
	0, 1358, 0, 0, 0, 0, 0, 0, 0, 926,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2187, 0, 0, 0, 0, 947, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 942, 0, 0, 0,
	943, 961, 0, 960, 0, 0, 287, 944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 945, 0, 0, 0, 0, 953, 0, 0,
	0, 0, 0, 962, 0, 959, 0, 0, 0, 0,
	0, 0, 812, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 0, 289, 289, 289,
	0, 0, 1358, 0, 0, 0, 0, 289, 0, 287,
	1358, 0, 0, 0, 1358, 1358, 289, 1358, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 1358, 0, 0, 2124,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	287, 2464, 289, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2498, 0, 2498, 0, 0, 0,
	0, 0, 2505, 1358, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 287, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 2554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2570, 0, 2572,
	0, 2574, 0, 2576, 0, 2577, 0, 2124, 0, 0,
	0, 0, 0, 0, 0, 1358, 1358, 116, 0, 0,
	0, 0, 2124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	2606, 2607, 2608, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2124,
	2124, 0, 0, 0, 0, 0, 0, 1358, 1358, 1358,
	1358, 1358, 1358, 1358, 0, 0, 0, 0, 0, 2124,
	0, 287, 2124, 0, 0, 0, 289, 0, 1521, 1521,
	0, 1358, 0, 289, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 2187, 0, 1341, 0, 0, 0, 289, 0,
	0, 0, 1341, 0, 1521, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 1358, 289, 1358, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 289, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	1521, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 0, 0, 0, 0,
	1521, 1521, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 2187, 1521,
	1521, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 289, 0, 289, 2994, 289, 0,
	289, 0, 289, 0, 0, 0, 0, 1358, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 1358, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 289, 289, 289,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 116, 0, 1358, 0, 0, 0,
	0, 0, 0, 3047, 0, 0, 1411, 0, 0, 116,
	1411, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 1518, 2486,
	0, 0, 116, 0, 0, 0, 2124, 0, 2124, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 1640, 0, 0, 0, 1358,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 1358, 1358, 0, 0,
	0, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 1640, 1358,
	0, 0, 0, 1358, 289, 0, 0, 1521, 0, 0,
	0, 0, 0, 1358, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 1641, 0, 0,
	0, 0, 0, 0, 0, 0, 3287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 0,
	0, 0, 0, 289, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 289, 0, 0, 0, 289, 0, 289,
	1358, 3358, 0, 0, 0, 0, 289, 289, 0, 0,
	0, 0, 0, 1641, 0, 0, 289, 0, 0, 0,
	1641, 3370, 0, 3373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1641, 0, 2744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 3412, 1622,
	3414, 1622, 0, 0, 0, 0, 1641, 0, 3421, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 3450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 1518, 0, 0, 0, 116, 0, 0,
	0, 0, 0, 1358, 0, 1358, 0, 0, 898, 0,
	0, 0, 0, 0, 0, 0, 0, 898, 0, 0,
	0, 0, 0, 289, 0, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 1521, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 1521, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 0, 116,
	0, 0, 0, 0, 0, 289, 289, 289, 289, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	289, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 1411, 0, 0, 0,
	1622, 1622, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 1952, 1953, 0, 1985, 1986,
	1987, 1996, 1997, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3705, 0, 1989, 1983,
	0, 0, 0, 0, 0, 1640, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2002, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2008, 0, 0, 0, 3761, 3763,
	0, 0, 2486, 1954, 0, 0, 0, 0, 0, 1640,
	0, 1640, 0, 1640, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 1640, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	1640, 1640, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 1641, 0,
	0, 1977, 1978, 1979, 1980, 0, 0, 0, 0, 1519,
	0, 1960, 0, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 3886,
	0, 0, 0, 0, 1993, 0, 0, 2003, 0, 0,
	0, 1521, 0, 1641, 1982, 1984, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 2000, 0, 0, 0, 0, 1521, 0,
	1969, 1970, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 1991, 1641,
	0, 1641, 0, 289, 0, 0, 0, 289, 289, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 1641,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 1641, 0, 0, 1641, 1641,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 0, 0, 3988, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 1990, 0, 289, 289, 0, 0, 289,
	0, 0, 0, 0, 2005, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 4002, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1976, 1518, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 0, 0, 289, 0,
	0, 0, 0, 1521, 0, 1521, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 289, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 1966, 1967, 1973,
	1995, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958,
	1959, 1961, 1962, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 3523, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 289, 1521, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2486,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	4317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4327, 1640, 0, 0, 1952, 1953, 0, 1985, 1986, 1987,
	1996, 1997, 1998, 1640, 0, 1640, 0, 2486, 0, 0,
	0, 1640, 4347, 0, 0, 0, 0, 1989, 1983, 0,
	0, 0, 1640, 1640, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2002, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 1974, 0, 4392, 0, 0, 0, 289,
	0, 0, 1971, 0, 0, 0, 0, 0, 1641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 1978, 1979, 1980, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 0, 1641, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 1993, 289, 0, 2003, 0, 0, 0,
	1641, 1641, 0, 1982, 1984, 0, 0, 0, 0, 1521,
	1521, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	1999, 1521, 2000, 0, 0, 0, 0, 289, 0, 1969,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 1975, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 4566, 0, 0, 0, 1521, 0,
	0, 0, 0, 1521, 1521, 1521, 0, 0, 0, 0,
	2486, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 0, 1521, 0, 1521, 0,
	0, 0, 289, 1521, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2486, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 4663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 1994, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 1521,
	0, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 1967, 1973, 1995,
	1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959,
	1961, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 1519, 0, 0, 0, 0, 0, 0, 0,
	4774, 0, 0, 0, 1521, 0, 0, 289, 0, 0,
	289, 0, 0, 0, 0, 1952, 1953, 0, 1985, 1986,
	1987, 1996, 1997, 1998, 0, 1519, 0, 1521, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 289, 1989, 1983,
	1519, 0, 0, 0, 0, 0, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2002, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 1521,
	1521, 0, 0, 2486, 2008, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 289, 1971, 1640, 0, 1640, 0, 0, 0,
	1518, 1521, 289, 0, 2498, 0, 1521, 898, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 4904, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 1977, 1978, 1979, 1980, 0, 0, 0, 0, 0,
	0, 1960, 1640, 0, 1640, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 1993, 0, 0, 2003, 1521, 0,
	1521, 0, 0, 0, 1982, 1984, 0, 0, 0, 0,
	0, 1518, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 1999, 0, 2000, 0, 0, 0, 0, 0, 0,
	1969, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 1641, 1975, 1641, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 1641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 1952, 1953, 0, 1985, 1986,
	1987, 1996, 1997, 1998, 0, 5023, 0, 0, 0, 0,
	1518, 0, 2001, 0, 0, 0, 0, 0, 1989, 1983,
	0, 1521, 0, 0, 0, 0, 0, 1955, 0, 0,
	289, 0, 0, 1990, 0, 0, 0, 2002, 1641, 1521,
	1521, 1521, 0, 0, 2005, 0, 0, 0, 0, 0,
	1641, 0, 1641, 0, 2008, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 1521, 0, 0,
	1521, 0, 0, 5079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 0, 1519,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 289, 0, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 5120, 0, 0, 0, 1994, 0, 0, 0, 0,
	0, 1977, 1978, 1979, 1980, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	898, 0, 0, 0, 0, 0, 0, 0, 0, 2007,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 1993, 0, 0, 2003, 0, 0,
	0, 0, 0, 0, 1982, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 2000, 0, 0, 0, 0, 0, 289,
	1969, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 1967, 1973,
	1995, 1972, 1968, 1975, 1965, 1963, 1964, 1956, 1957, 1958,
	1959, 1961, 1962, 0, 0, 0, 0, 0, 5066, 0,
	0, 0, 289, 0, 0, 0, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 1952, 1953, 1521, 1985, 1986,
	1987, 1996, 1997, 1998, 0, 0, 0, 0, 0, 0,
	1640, 1640, 2001, 1640, 0, 0, 0, 0, 1989, 1983,
	0, 0, 1640, 1519, 0, 0, 0, 1955, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 2002, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2008, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 1640, 1640, 1640, 1976, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 1640,
	0, 0, 0, 0, 1640, 1994, 1518, 0, 0, 0,
	0, 1977, 1978, 1979, 1980, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 1641,
	0, 1641, 0, 0, 1993, 0, 0, 2003, 0, 0,
	1641, 0, 0, 0, 1982, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 2000, 0, 0, 0, 0, 0, 0,
	1969, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 1967, 1973,
	1995, 1972, 1968, 1975, 1965, 1963, 1964, 1956, 1957, 1958,
	1959, 1961, 1962, 0, 1641, 0, 0, 0, 0, 0,
	0, 0, 3519, 0, 0, 0, 0, 0, 0, 1518,
	1518, 0, 1518, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 1641, 1641, 1641, 0, 0, 0, 0, 0,
	1640, 1640, 2001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 1641, 0, 0,
	0, 1518, 1641, 1990, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1953, 0, 1985, 1986, 1987,
	1996, 1997, 1998, 1981, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 1983, 0,
	0, 0, 0, 0, 0, 0, 1955, 1976, 1518, 0,
	0, 0, 0, 0, 0, 0, 2002, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 1994, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	1640, 1640, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 1519, 1519, 2007,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 1641,
	0, 0, 1518, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 1640, 1640, 1640, 1640, 1640, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 1978, 1979, 1980, 0, 1992, 1518, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 1966, 1967, 1973,
	1995, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958,
	1959, 1961, 1962, 0, 0, 0, 1518, 0, 0, 0,
	0, 0, 3518, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 2003, 0, 0, 0,
	0, 0, 0, 1982, 1984, 0, 1519, 0, 0, 0,
	0, 1048, 0, 1100, 0, 0, 0, 0, 0, 1518,
	1999, 1640, 2000, 0, 0, 0, 0, 0, 0, 1969,
	1970, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 0, 0, 1991, 1641, 1641,
	0, 0, 0, 0, 0, 1071, 0, 1054, 1053, 0,
	0, 0, 1975, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1073, 0, 0, 0, 0, 0, 1055, 0, 0, 0,
	1519, 1058, 0, 0, 0, 1641, 1112, 0, 1083, 0,
	0, 0, 0, 0, 0, 0, 1068, 1069, 0, 0,
	0, 2001, 0, 0, 0, 1088, 0, 0, 0, 0,
	1641, 1641, 1641, 1641, 1641, 1641, 1641, 0, 0, 0,
	0, 0, 1990, 1101, 1060, 0, 0, 0, 0, 0,
	1061, 0, 1518, 2005, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 1640, 1640, 1062, 0, 0, 0, 0, 0, 0,
	0, 0, 1098, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 1099, 0, 1518, 0,
	0, 1640, 0, 0, 0, 0, 0, 1519, 0, 1641,
	0, 0, 1064, 0, 0, 0, 1976, 0, 0, 0,
	0, 1052, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1065, 1066, 0, 1994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 0,
	1074, 1072, 0, 0, 0, 0, 0, 0, 1067, 0,
	0, 0, 1084, 0, 0, 1106, 1105, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1109, 1097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 1641,
	1641, 0, 0, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 1967, 1973, 1995,
	1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959,
	1961, 1962, 0, 1059, 0, 0, 1111, 0, 0, 0,
	0, 3517, 0, 0, 0, 0, 1519, 0, 0, 1641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 1092, 1093, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 1095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 1090, 0, 0, 0,
	0, 0, 0, 0, 1110, 1085, 0, 0, 1077, 1075,
	0, 0, 1080, 0, 0, 0, 0, 0, 1081, 0,
	0, 1050, 0, 1104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 1096, 0,
	1094, 0, 1082, 0, 0, 0, 0, 0, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 1087,
	0, 0, 0, 0, 0, 0, 0, 1063, 1107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1641, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 1641, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 1522, 305, 306, 1523, 1524, 1525, 0,
	1526, 689, 1527, 1528, 1529, 307, 1530, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 1531, 694, 319, 320, 321, 322,
	323, 324, 1532, 1533, 0, 325, 695, 696, 697, 1534,
	326, 327, 698, 1535, 1602, 1536, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1537, 337, 338, 339, 336,
	340, 1538, 341, 1641, 342, 343, 344, 345, 346, 347,
	1539, 348, 349, 350, 1298, 351, 352, 353, 1540, 1541,
	1543, 1542, 1544, 1545, 1546, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 1547, 364, 360, 362, 1548,
	365, 363, 366, 1549, 367, 368, 369, 1550, 1551, 370,
	371, 372, 1552, 373, 374, 375, 1553, 376, 377, 378,
	1554, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 1555, 294,
	1556, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 1557, 397, 398, 399, 1558, 400, 401,
	1559, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1560, 414, 707, 1561,
	708, 415, 1562, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 1301, 423, 424, 1563, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1564, 1300, 512, 433, 712, 713, 1565, 714, 1566, 434,
	435, 1302, 715, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1567, 446,
	448, 447, 1568, 449, 716, 1305, 450, 451, 1306, 1569,
	452, 453, 454, 455, 456, 457, 460, 1570, 1571, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1572, 296, 1309, 506, 507, 508, 509, 1573, 717, 510,
	718, 513, 514, 1574, 0, 515, 0, 516, 1575, 1576,
	518, 519, 520, 1577, 1578, 521, 522, 719, 1310, 523,
	1311, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1579, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	1580, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 1581,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 1582, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 1583, 606, 607, 605, 608, 609, 610, 1584, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 1585, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 1586, 641, 642, 0,
	637, 628, 1587, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 1588, 651, 730, 731, 732, 733, 1589, 662,
	1590, 652, 654, 655, 656, 734, 657, 735, 1591, 658,
	659, 660, 661, 653, 663, 664, 1592, 1593, 665, 666,
	668, 670, 671, 667, 669, 672, 1594, 673, 1595, 0,
	674, 675, 676, 736, 737, 738, 1596, 678, 677, 679,
	680, 681, 739, 682, 683, 1597, 1598, 1599, 1600, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 2972, 0, 0, 0, 0,
	0, 0, 0, 2973, 297, 298, 300, 299, 301, 302,
	303, 304, 1522, 305, 306, 1523, 1524, 1525, 0, 1526,
	689, 1527, 1528, 1529, 307, 1530, 308, 309, 1297, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 1531, 694, 319, 320, 321, 322, 323,
	324, 1532, 1533, 0, 325, 695, 696, 697, 1534, 326,
	327, 698, 1535, 1602, 1536, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 1537, 337, 338, 339, 336, 340,
	1538, 341, 0, 342, 343, 344, 345, 346, 347, 1539,
	348, 349, 350, 1298, 351, 352, 353, 1540, 1541, 1543,
	1542, 1544, 1545, 1546, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 1547, 364, 360, 362, 1548, 365,
	363, 366, 1549, 367, 368, 369, 1550, 1551, 370, 371,
	372, 1552, 373, 374, 375, 1553, 376, 377, 378, 1554,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 1555, 294, 1556,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 1557, 397, 398, 399, 1558, 400, 401, 1559,
	1299, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 1560, 414, 707, 1561, 708,
	415, 1562, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 1301, 423, 424, 1563, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 1564,
	1300, 512, 433, 712, 713, 1565, 714, 1566, 434, 435,
	1302, 715, 1303, 436, 437, 438, 1304, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1567, 446, 448,
	447, 1568, 449, 716, 1305, 450, 451, 1306, 1569, 452,
	453, 454, 455, 456, 457, 460, 1570, 1571, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1307, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1308, 504, 492, 1572,
	296, 1309, 506, 507, 508, 509, 1573, 717, 510, 718,
	513, 514, 1574, 0, 515, 0, 516, 1575, 1576, 518,
	519, 520, 1577, 1578, 521, 522, 719, 1310, 523, 1311,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 1579, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 1580,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 1581, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 1582, 580, 581, 582, 1312, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	1583, 606, 607, 605, 608, 609, 610, 1584, 611, 612,
	594, 595, 613, 614, 1313, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 1585, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 1586, 641, 642, 0, 637,
	628, 1587, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 1588, 651, 730, 731, 732, 733, 1589, 662, 1590,
	652, 654, 655, 656, 734, 657, 735, 1591, 658, 659,
	660, 661, 653, 663, 664, 1592, 1593, 665, 666, 668,
	670, 671, 667, 669, 672, 1594, 673, 1595, 0, 674,
	675, 676, 736, 737, 738, 1596, 678, 677, 679, 680,
	681, 739, 682, 683, 1597, 1598, 1599, 1600, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 4029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4031, 297, 298, 300, 299, 301, 302, 303, 304, 1522,
	305, 306, 1523, 1524, 1525, 0, 1526, 689, 1527, 1528,
	1529, 307, 1530, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	1531, 694, 319, 320, 321, 322, 323, 324, 1532, 1533,
	0, 325, 695, 696, 697, 1534, 326, 327, 698, 1535,
	1602, 1536, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 1537, 337, 338, 339, 336, 340, 1538, 341, 0,
	342, 343, 344, 345, 346, 347, 1539, 348, 349, 350,
	1298, 351, 352, 353, 1540, 1541, 1543, 1542, 1544, 1545,
	1546, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 1547, 364, 360, 362, 1548, 365, 363, 366, 1549,
	367, 368, 369, 1550, 1551, 370, 371, 372, 1552, 373,
	374, 375, 1553, 376, 377, 378, 1554, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 1555, 294, 1556, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 1557,
	397, 398, 399, 1558, 400, 401, 1559, 1299, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 1560, 414, 707, 1561, 708, 415, 1562, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	1301, 423, 424, 1563, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 1564, 1300, 512, 433,
	712, 713, 1565, 714, 1566, 434, 435, 1302, 715, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1567, 446, 448, 447, 1568, 449,
	716, 1305, 450, 451, 1306, 1569, 452, 453, 454, 455,
	456, 457, 460, 1570, 1571, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1572, 296, 1309, 506,
	507, 508, 509, 1573, 717, 510, 718, 513, 514, 1574,
	0, 515, 0, 516, 1575, 1576, 518, 519, 520, 1577,
	1578, 521, 522, 719, 1310, 523, 1311, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	1579, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 1580, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 1581, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 1582, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 1583, 606, 607,
	605, 608, 609, 610, 1584, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 1585, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 1586, 641, 642, 0, 637, 628, 1587, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 1588, 651,
	730, 731, 732, 733, 1589, 662, 1590, 652, 654, 655,
	656, 734, 657, 735, 1591, 658, 659, 660, 661, 653,
	663, 664, 1592, 1593, 665, 666, 668, 670, 671, 667,
	669, 672, 1594, 673, 1595, 0, 674, 675, 676, 736,
	737, 738, 1596, 678, 677, 679, 680, 681, 739, 682,
	683, 1597, 1598, 1599, 1600, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4470, 297, 298, 300, 299, 301, 302, 303, 304,
	1522, 305, 306, 1523, 1524, 1525, 0, 1526, 689, 1527,
	1528, 1529, 307, 1530, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 1531, 694, 319, 320, 321, 322, 323, 324, 1532,
	1533, 0, 325, 695, 696, 697, 1534, 326, 327, 698,
	1535, 1602, 1536, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1537, 337, 338, 339, 336, 340, 1538, 341,
	0, 342, 343, 344, 345, 346, 347, 1539, 348, 349,
	350, 1298, 351, 352, 353, 1540, 1541, 1543, 1542, 1544,
	1545, 1546, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 1547, 364, 360, 362, 1548, 365, 363, 366,
	1549, 367, 368, 369, 1550, 1551, 370, 371, 372, 1552,
	373, 374, 375, 1553, 376, 377, 378, 1554, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 1555, 294, 1556, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	1557, 397, 398, 399, 1558, 400, 401, 1559, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1560, 414, 707, 1561, 708, 415, 1562,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1301, 423, 424, 1563, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1564, 1300, 512,
	433, 712, 713, 1565, 714, 1566, 434, 435, 1302, 715,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1567, 446, 448, 447, 1568,
	449, 716, 1305, 450, 451, 1306, 1569, 452, 453, 454,
	455, 456, 457, 460, 1570, 1571, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 1572, 296, 1309,
	506, 507, 508, 509, 1573, 717, 510, 718, 513, 514,
	1574, 0, 515, 0, 516, 1575, 1576, 518, 519, 520,
	1577, 1578, 521, 522, 719, 1310, 523, 1311, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1579, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 1580, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 1581, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 1582, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 1583, 606,
	607, 605, 608, 609, 610, 1584, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 1585, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 1586, 641, 642, 0, 637, 628, 1587,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 1588,
	651, 730, 731, 732, 733, 1589, 662, 1590, 652, 654,
	655, 656, 734, 657, 735, 1591, 658, 659, 660, 661,
	653, 663, 664, 1592, 1593, 665, 666, 668, 670, 671,
	667, 669, 672, 1594, 673, 1595, 0, 674, 675, 676,
	736, 737, 738, 1596, 678, 677, 679, 680, 681, 739,
	682, 683, 1597, 1598, 1599, 1600, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4468, 297, 298, 300, 299, 301, 302, 303,
	304, 1522, 305, 306, 1523, 1524, 1525, 0, 1526, 689,
	1527, 1528, 1529, 307, 1530, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 1531, 694, 319, 320, 321, 322, 323, 324,
	1532, 1533, 0, 325, 695, 696, 697, 1534, 326, 327,
	698, 1535, 1602, 1536, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1537, 337, 338, 339, 336, 340, 1538,
	341, 0, 342, 343, 344, 345, 346, 347, 1539, 348,
	349, 350, 1298, 351, 352, 353, 1540, 1541, 1543, 1542,
	1544, 1545, 1546, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 1547, 364, 360, 362, 1548, 365, 363,
	366, 1549, 367, 368, 369, 1550, 1551, 370, 371, 372,
	1552, 373, 374, 375, 1553, 376, 377, 378, 1554, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 1555, 294, 1556, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 1557, 397, 398, 399, 1558, 400, 401, 1559, 1299,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 1560, 414, 707, 1561, 708, 415,
	1562, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 1301, 423, 424, 1563, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 1564, 1300,
	512, 433, 712, 713, 1565, 714, 1566, 434, 435, 1302,
	715, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1567, 446, 448, 447,
	1568, 449, 716, 1305, 450, 451, 1306, 1569, 452, 453,
	454, 455, 456, 457, 460, 1570, 1571, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1572, 296,
	1309, 506, 507, 508, 509, 1573, 717, 510, 718, 513,
	514, 1574, 0, 515, 0, 516, 1575, 1576, 518, 519,
	520, 1577, 1578, 521, 522, 719, 1310, 523, 1311, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 1579, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 1580, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 1581, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 1582, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 1583,
	606, 607, 605, 608, 609, 610, 1584, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 1585, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 1586, 641, 642, 0, 637, 628,
	1587, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	1588, 651, 730, 731, 732, 733, 1589, 662, 1590, 652,
	654, 655, 656, 734, 657, 735, 1591, 658, 659, 660,
	661, 653, 663, 664, 1592, 1593, 665, 666, 668, 670,
	671, 667, 669, 672, 1594, 673, 1595, 0, 674, 675,
	676, 736, 737, 738, 1596, 678, 677, 679, 680, 681,
	739, 682, 683, 1597, 1598, 1599, 1600, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4712, 297, 298,
	300, 299, 301, 302, 303, 304, 1522, 305, 306, 1523,
	1524, 1525, 0, 1526, 689, 1527, 1528, 1529, 307, 1530,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 1531, 694, 319,
	320, 321, 322, 323, 324, 1532, 1533, 0, 325, 695,
	696, 697, 1534, 326, 327, 698, 1535, 1602, 1536, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 1537, 337,
	338, 339, 336, 340, 1538, 341, 0, 342, 343, 344,
	345, 346, 347, 1539, 348, 349, 350, 1298, 351, 352,
	353, 1540, 1541, 1543, 1542, 1544, 1545, 1546, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 1547, 364,
	360, 362, 1548, 365, 363, 366, 1549, 367, 368, 369,
	1550, 1551, 370, 371, 372, 1552, 373, 374, 375, 1553,
	376, 377, 378, 1554, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 1555, 294, 1556, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 1557, 397, 398, 399,
	1558, 400, 401, 1559, 1299, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 1560,
	414, 707, 1561, 708, 415, 1562, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 1301, 423, 424,
	1563, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 1564, 1300, 512, 433, 712, 713, 1565,
	714, 1566, 434, 435, 1302, 715, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1567, 446, 448, 447, 1568, 449, 716, 1305, 450,
	451, 1306, 1569, 452, 453, 454, 455, 456, 457, 460,
	1570, 1571, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 1572, 296, 1309, 506, 507, 508, 509,
	1573, 717, 510, 718, 513, 514, 1574, 0, 515, 0,
	516, 1575, 1576, 518, 519, 520, 1577, 1578, 521, 522,
	719, 1310, 523, 1311, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 1579, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 1580, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 1581, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 1582, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 1583, 606, 607, 605, 608, 609,
	610, 1584, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 1585,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 1586,
	641, 642, 0, 637, 628, 1587, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 1588, 651, 730, 731, 732,
	733, 1589, 662, 1590, 652, 654, 655, 656, 734, 657,
	735, 1591, 658, 659, 660, 661, 653, 663, 664, 1592,
	1593, 665, 666, 668, 670, 671, 667, 669, 672, 1594,
	673, 1595, 0, 674, 675, 676, 736, 737, 738, 1596,
	678, 677, 679, 680, 681, 739, 682, 683, 1597, 1598,
	1599, 1600, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4575, 297, 298, 300, 299, 301, 302, 303,
	304, 1522, 305, 306, 1523, 1524, 1525, 0, 1526, 689,
	1527, 1528, 1529, 307, 1530, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 1531, 694, 319, 320, 321, 322, 323, 324,
	1532, 1533, 0, 325, 695, 696, 697, 1534, 326, 327,
	698, 1535, 1602, 1536, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1537, 337, 338, 339, 336, 340, 1538,
	341, 0, 342, 343, 344, 345, 346, 347, 1539, 348,
	349, 350, 1298, 351, 352, 353, 1540, 1541, 1543, 1542,
	1544, 1545, 1546, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 1547, 364, 360, 362, 1548, 365, 363,
	366, 1549, 367, 368, 369, 1550, 1551, 370, 371, 372,
	1552, 373, 374, 375, 1553, 376, 377, 378, 1554, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 1555, 294, 1556, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 1557, 397, 398, 399, 1558, 400, 401, 1559, 1299,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 1560, 414, 707, 1561, 708, 415,
	1562, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 1301, 423, 424, 1563, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 1564, 1300,
	512, 433, 712, 713, 1565, 714, 1566, 434, 435, 1302,
	715, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1567, 446, 448, 447,
	1568, 449, 716, 1305, 450, 451, 1306, 1569, 452, 453,
	454, 455, 456, 457, 460, 1570, 1571, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1572, 296,
	1309, 506, 507, 508, 509, 1573, 717, 510, 718, 513,
	514, 1574, 0, 515, 0, 516, 1575, 1576, 518, 519,
	520, 1577, 1578, 521, 522, 719, 1310, 523, 1311, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 1579, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 1580, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 1581, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 1582, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 1583,
	606, 607, 605, 608, 609, 610, 1584, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 1585, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 1586, 641, 642, 0, 637, 628,
	1587, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	1588, 651, 730, 731, 732, 733, 1589, 662, 1590, 652,
	654, 655, 656, 734, 657, 735, 1591, 658, 659, 660,
	661, 653, 663, 664, 1592, 1593, 665, 666, 668, 670,
	671, 667, 669, 672, 1594, 673, 1595, 0, 674, 675,
	676, 736, 737, 738, 1596, 678, 677, 679, 680, 681,
	739, 682, 683, 1597, 1598, 1599, 1600, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4394, 297, 298,
	300, 299, 301, 302, 303, 304, 1522, 305, 306, 1523,
	1524, 1525, 0, 1526, 689, 1527, 1528, 1529, 307, 1530,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 1531, 694, 319,
	320, 321, 322, 323, 324, 1532, 1533, 0, 325, 695,
	696, 697, 1534, 326, 327, 698, 1535, 1602, 1536, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 1537, 337,
	338, 339, 336, 340, 1538, 341, 0, 342, 343, 344,
	345, 346, 347, 1539, 348, 349, 350, 1298, 351, 352,
	353, 1540, 1541, 1543, 1542, 1544, 1545, 1546, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 1547, 364,
	360, 362, 1548, 365, 363, 366, 1549, 367, 368, 369,
	1550, 1551, 370, 371, 372, 1552, 373, 374, 375, 1553,
	376, 377, 378, 1554, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 1555, 294, 1556, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 1557, 397, 398, 399,
	1558, 400, 401, 1559, 1299, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 1560,
	414, 707, 1561, 708, 415, 1562, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 1301, 423, 424,
	1563, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 1564, 1300, 512, 433, 712, 713, 1565,
	714, 1566, 434, 435, 1302, 715, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1567, 446, 448, 447, 1568, 449, 716, 1305, 450,
	451, 1306, 1569, 452, 453, 454, 455, 456, 457, 460,
	1570, 1571, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 1572, 296, 1309, 506, 507, 508, 509,
	1573, 717, 510, 718, 513, 514, 1574, 0, 515, 0,
	516, 1575, 1576, 518, 519, 520, 1577, 1578, 521, 522,
	719, 1310, 523, 1311, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 1579, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 1580, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 1581, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 1582, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 1583, 606, 607, 605, 608, 609,
	610, 1584, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 1585,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 1586,
	641, 642, 0, 637, 628, 1587, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 1588, 651, 730, 731, 732,
	733, 1589, 662, 1590, 652, 654, 655, 656, 734, 657,
	735, 1591, 658, 659, 660, 661, 653, 663, 664, 1592,
	1593, 665, 666, 668, 670, 671, 667, 669, 672, 1594,
	673, 1595, 0, 674, 675, 676, 736, 737, 738, 1596,
	678, 677, 679, 680, 681, 739, 682, 683, 1597, 1598,
	1599, 1600, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4047, 297, 298, 300, 299, 301, 302, 303,
	304, 1522, 305, 306, 1523, 1524, 1525, 0, 1526, 689,
	1527, 1528, 1529, 307, 1530, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 1531, 694, 319, 320, 321, 322, 323, 324,
	1532, 1533, 0, 325, 695, 696, 697, 1534, 326, 327,
	698, 1535, 1602, 1536, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1537, 337, 338, 339, 336, 340, 1538,
	341, 0, 342, 343, 344, 345, 346, 347, 1539, 348,
	349, 350, 1298, 351, 352, 353, 1540, 1541, 1543, 1542,
	1544, 1545, 1546, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 1547, 364, 360, 362, 1548, 365, 363,
	366, 1549, 367, 368, 369, 1550, 1551, 370, 371, 372,
	1552, 373, 374, 375, 1553, 376, 377, 378, 1554, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 1555, 294, 1556, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 1557, 397, 398, 399, 1558, 400, 401, 1559, 1299,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 1560, 414, 707, 1561, 708, 415,
	1562, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 1301, 423, 424, 1563, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 1564, 1300,
	512, 433, 712, 713, 1565, 714, 1566, 434, 435, 1302,
	715, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1567, 446, 448, 447,
	1568, 449, 716, 1305, 450, 451, 1306, 1569, 452, 453,
	454, 455, 456, 457, 460, 1570, 1571, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1572, 296,
	1309, 506, 507, 508, 509, 1573, 717, 510, 718, 513,
	514, 1574, 0, 515, 0, 516, 1575, 1576, 518, 519,
	520, 1577, 1578, 521, 522, 719, 1310, 523, 1311, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 1579, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 1580, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 1581, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 1582, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 1583,
	606, 607, 605, 608, 609, 610, 1584, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 1585, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 1586, 641, 642, 0, 637, 628,
	1587, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	1588, 651, 730, 731, 732, 733, 1589, 662, 1590, 652,
	654, 655, 656, 734, 657, 735, 1591, 658, 659, 660,
	661, 653, 663, 664, 1592, 1593, 665, 666, 668, 670,
	671, 667, 669, 672, 1594, 673, 1595, 0, 674, 675,
	676, 736, 737, 738, 1596, 678, 677, 679, 680, 681,
	739, 682, 683, 1597, 1598, 1599, 1600, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3859, 297, 298,
	300, 299, 301, 302, 303, 304, 1522, 305, 306, 1523,
	1524, 1525, 0, 1526, 689, 1527, 1528, 1529, 307, 1530,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 1531, 694, 319,
	320, 321, 322, 323, 324, 1532, 1533, 0, 325, 695,
	696, 697, 1534, 326, 327, 698, 1535, 1602, 1536, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 1537, 337,
	338, 339, 336, 340, 1538, 341, 0, 342, 343, 344,
	345, 346, 347, 1539, 348, 349, 350, 1298, 351, 352,
	353, 1540, 1541, 1543, 1542, 1544, 1545, 1546, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 1547, 364,
	360, 362, 1548, 365, 363, 366, 1549, 367, 368, 369,
	1550, 1551, 370, 371, 372, 1552, 373, 374, 375, 1553,
	376, 377, 378, 1554, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 1555, 294, 1556, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 1557, 397, 398, 399,
	1558, 400, 401, 1559, 1299, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 1560,
	414, 707, 1561, 708, 415, 1562, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 1301, 423, 424,
	1563, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 1564, 1300, 512, 433, 712, 713, 1565,
	714, 1566, 434, 435, 1302, 715, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1567, 446, 448, 447, 1568, 449, 716, 1305, 450,
	451, 1306, 1569, 452, 453, 454, 455, 456, 457, 460,
	1570, 1571, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 1572, 296, 1309, 506, 507, 508, 509,
	1573, 717, 510, 718, 513, 514, 1574, 0, 515, 0,
	516, 1575, 1576, 518, 519, 520, 1577, 1578, 521, 522,
	719, 1310, 523, 1311, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 1579, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 1580, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 1581, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 1582, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 1583, 606, 607, 605, 608, 609,
	610, 1584, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 1585,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 1586,
	641, 642, 0, 637, 628, 1587, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 1588, 651, 730, 731, 732,
	733, 1589, 662, 1590, 652, 654, 655, 656, 734, 657,
	735, 1591, 658, 659, 660, 661, 653, 663, 664, 1592,
	1593, 665, 666, 668, 670, 671, 667, 669, 672, 1594,
	673, 1595, 0, 674, 675, 676, 736, 737, 738, 1596,
	678, 677, 679, 680, 681, 739, 682, 683, 1597, 1598,
	1599, 1600, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2826, 297, 298, 300, 299, 301, 302, 303,
	304, 1522, 305, 306, 1523, 1524, 1525, 0, 1526, 689,
	1527, 1528, 1529, 307, 1530, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 1531, 694, 319, 320, 321, 322, 323, 324,
	1532, 1533, 0, 325, 695, 696, 697, 1534, 326, 327,
	698, 1535, 1602, 1536, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1537, 337, 338, 339, 336, 340, 1538,
	341, 0, 342, 343, 344, 345, 346, 347, 1539, 348,
	349, 350, 1298, 351, 352, 353, 1540, 1541, 1543, 1542,
	1544, 1545, 1546, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 1547, 364, 360, 362, 1548, 365, 363,
	366, 1549, 367, 368, 369, 1550, 1551, 370, 371, 372,
	1552, 373, 374, 375, 1553, 376, 377, 378, 1554, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 1555, 294, 1556, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 1557, 397, 398, 399, 1558, 400, 401, 1559, 1299,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 1560, 414, 707, 1561, 708, 415,
	1562, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 1301, 423, 424, 1563, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 1564, 1300,
	512, 433, 712, 713, 1565, 714, 1566, 434, 435, 1302,
	715, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1567, 446, 448, 447,
	1568, 449, 716, 1305, 450, 451, 1306, 1569, 452, 453,
	454, 455, 456, 457, 460, 1570, 1571, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1572, 296,
	1309, 506, 507, 508, 509, 1573, 717, 510, 718, 513,
	514, 1574, 0, 515, 0, 516, 1575, 1576, 518, 519,
	520, 1577, 1578, 521, 522, 719, 1310, 523, 1311, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 1579, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 1580, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 1581, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 1582, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 1583,
	606, 607, 605, 608, 609, 610, 1584, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 1585, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 1586, 641, 642, 0, 637, 628,
	1587, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	1588, 651, 730, 731, 732, 733, 1589, 662, 1590, 652,
	654, 655, 656, 734, 657, 735, 1591, 658, 659, 660,
	661, 653, 663, 664, 1592, 1593, 665, 666, 668, 670,
	671, 667, 669, 672, 1594, 673, 1595, 0, 674, 675,
	676, 736, 737, 738, 1596, 678, 677, 679, 680, 681,
	739, 682, 683, 1597, 1598, 1599, 1600, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 1513,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2442, 297, 298,
	300, 299, 301, 302, 303, 304, 1522, 305, 306, 1523,
	1524, 1525, 0, 1526, 689, 1527, 1528, 1529, 307, 1530,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 1531, 694, 319,
	320, 321, 322, 323, 324, 1532, 1533, 0, 325, 695,
	696, 697, 1534, 326, 327, 698, 1535, 1602, 1536, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 1537, 337,
	338, 339, 336, 340, 1538, 341, 0, 342, 343, 344,
	345, 346, 347, 1539, 348, 349, 350, 1298, 351, 352,
	353, 1540, 1541, 1543, 1542, 1544, 1545, 1546, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 1547, 364,
	360, 362, 1548, 365, 363, 366, 1549, 367, 368, 369,
	1550, 1551, 370, 371, 372, 1552, 373, 374, 375, 1553,
	376, 377, 378, 1554, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 1555, 294, 1556, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 1557, 397, 398, 399,
	1558, 400, 401, 1559, 1299, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 1560,
	414, 707, 1561, 708, 415, 1562, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 1301, 423, 424,
	1563, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 1564, 1300, 512, 433, 712, 713, 1565,
	714, 1566, 434, 435, 1302, 715, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1567, 446, 448, 447, 1568, 449, 716, 1305, 450,
	451, 1306, 1569, 452, 453, 454, 455, 456, 457, 460,
	1570, 1571, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 1572, 296, 1309, 506, 507, 508, 509,
	1573, 717, 510, 718, 513, 514, 1574, 0, 515, 0,
	516, 1575, 1576, 518, 519, 520, 1577, 1578, 521, 522,
	719, 1310, 523, 1311, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 1579, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 1580, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 1581, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 1582, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 1583, 606, 607, 605, 608, 609,
	610, 1584, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 1585,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 1586,
	641, 642, 0, 637, 628, 1587, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 1588, 651, 730, 731, 732,
	733, 1589, 662, 1590, 652, 654, 655, 656, 734, 657,
	735, 1591, 658, 659, 660, 661, 653, 663, 664, 1592,
	1593, 665, 666, 668, 670, 671, 667, 669, 672, 1594,
	673, 1595, 0, 674, 675, 676, 736, 737, 738, 1596,
	678, 677, 679, 680, 681, 739, 682, 683, 1597, 1598,
	1599, 1600, 684, 685, 740, 686, 687, 688, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 1522, 305, 306, 1523, 1524, 1525, 0,
	1526, 689, 1527, 1528, 1529, 307, 1530, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 1531, 694, 319, 320, 321, 322,
	323, 324, 1532, 1533, 0, 325, 695, 696, 697, 1534,
	326, 327, 698, 1535, 1602, 1536, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1537, 337, 338, 339, 336,
	340, 1538, 341, 0, 342, 343, 344, 345, 346, 347,
	1539, 348, 349, 350, 1298, 351, 352, 353, 1540, 1541,
	1543, 1542, 1544, 1545, 1546, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 1547, 364, 360, 362, 1548,
	365, 363, 366, 1549, 367, 368, 369, 1550, 1551, 370,
	371, 372, 1552, 373, 374, 375, 1553, 376, 377, 378,
	1554, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 1555, 294,
	1556, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 1557, 397, 398, 399, 1558, 400, 401,
	1559, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1560, 414, 707, 1561,
	708, 415, 1562, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 1301, 423, 424, 1563, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1564, 1300, 512, 433, 712, 713, 1565, 714, 1566, 434,
	435, 1302, 715, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1567, 446,
	448, 447, 1568, 449, 716, 1305, 450, 451, 1306, 1569,
	452, 453, 454, 455, 456, 457, 460, 1570, 1571, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1572, 296, 1309, 506, 507, 508, 509, 1573, 717, 510,
	718, 513, 514, 1574, 0, 515, 0, 516, 1575, 1576,
	518, 519, 520, 1577, 1578, 521, 522, 719, 1310, 523,
	1311, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1579, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	1580, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 1581,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 1582, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 1583, 606, 607, 605, 608, 609, 610, 1584, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 1585, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 1586, 641, 642, 0,
	637, 628, 1587, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 1588, 651, 730, 731, 732, 733, 1589, 662,
	1590, 652, 654, 655, 656, 734, 657, 735, 1591, 658,
	659, 660, 661, 653, 663, 664, 1592, 1593, 665, 666,
	668, 670, 671, 667, 669, 672, 1594, 673, 1595, 0,
	674, 675, 676, 736, 737, 738, 1596, 678, 677, 679,
	680, 681, 739, 682, 683, 1597, 1598, 1599, 1600, 684,
	685, 740, 686, 687, 688, 2801, 0, 1233, 1205, 1206,
	1207, 1203, 1204, 1216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 2798, 305, 306, 0, 0, 0, 0, 0,
	1257, 1221, 0, 0, 307, 0, 308, 309, 1297, 310,
	311, 312, 313, 314, 315, 316, 690, 1270, 0, 317,
	1277, 318, 1276, 0, 1287, 319, 320, 321, 322, 323,
	324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326,
	327, 1263, 0, 1244, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1298, 351, 352, 353, 1247, 1245, 1246,
	1253, 1249, 1248, 1252, 354, 355, 356, 357, 358, 1280,
	359, 361, 1274, 1273, 1193, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 2799, 0, 370, 1265,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1199, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1288, 1289, 392, 1212, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1272, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1299, 402, 403, 404, 1285, 1286, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1295, 0, 1222,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1258,
	1259, 1262, 511, 1301, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1300, 512, 433, 1267, 1268, 0, 1228, 0, 434, 435,
	1302, 1260, 1303, 436, 437, 438, 1304, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1296, 1305, 450, 451, 1306, 0, 452,
	453, 454, 455, 456, 457, 460, 1251, 1250, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1307, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1308, 504, 492, 1190,
	296, 1309, 506, 507, 508, 509, 1213, 1261, 510, 1275,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1310, 523, 1311,
	1290, 524, 525, 1200, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1291, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1271, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1312, 583,
	584, 585, 586, 587, 1201, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1254, 611, 612,
	594, 595, 613, 614, 1313, 615, 616, 617, 618, 619,
	620, 621, 1269, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1316, 631, 632, 633,
	634, 1292, 638, 639, 640, 0, 641, 642, 1187, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1281, 1282, 1283, 1284, 0, 662, 0,
	652, 654, 655, 656, 1293, 657, 1294, 1211, 658, 659,
	660, 661, 653, 663, 664, 0, 1194, 665, 666, 668,
	670, 671, 667, 669, 672, 1255, 673, 0, 0, 674,
	675, 676, 736, 1278, 1315, 2797, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1186,
	0, 0, 0, 0, 0, 0, 1184, 1185, 2800, 0,
	0, 0, 0, 0, 0, 0, 1217, 2796, 0, 1175,
	1215, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1257, 1221, 0, 0, 307, 0,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 1270, 0, 317, 1277, 318, 1276, 0, 1287, 319,
	320, 321, 322, 323, 324, 1223, 1256, 1188, 325, 1317,
	1318, 697, 0, 326, 327, 1263, 0, 1244, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1298, 351, 352,
	353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355,
	356, 357, 358, 1280, 359, 361, 1274, 1273, 1193, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1265, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1199, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1288, 1289,
	392, 1212, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1272, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1299, 402, 403, 404, 1285, 1286,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1295, 0, 1222, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1258, 1259, 1262, 511, 1301, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1300, 512, 433, 1267, 1268, 0,
	1228, 0, 434, 435, 1302, 1260, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1296, 1305, 450,
	451, 1306, 0, 452, 453, 454, 455, 456, 457, 460,
	1251, 1250, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 1190, 296, 1309, 506, 507, 508, 509,
	1213, 1261, 510, 1275, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1310, 523, 1311, 1290, 524, 525, 1200, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1291, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1271, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 1201, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 252, 606, 607, 605, 608, 609,
	610, 1254, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 1269, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1316, 631, 632, 633, 634, 1292, 638, 639, 640, 0,
	641, 642, 1187, 637, 628, 254, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1281, 1282, 1283,
	1284, 0, 662, 0, 652, 654, 655, 656, 1293, 657,
	1294, 1211, 658, 659, 660, 661, 653, 663, 664, 0,
	1194, 665, 666, 668, 670, 671, 667, 669, 672, 1255,
	673, 0, 0, 674, 675, 676, 1763, 1278, 1315, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 246, 684, 685, 740, 686, 687, 688, 1191, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1186, 0, 0, 0, 0, 0, 0,
	1184, 1185, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	2033, 2031, 0, 0, 1215, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 252, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 254, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 1763, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 246, 684, 685, 740, 686, 687, 688, 1191,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 1233, 1205, 1206, 1207, 1203, 1204, 1216,
	0, 2033, 3473, 0, 0, 1215, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1257, 1221, 0, 0,
	307, 0, 308, 309, 1297, 310, 311, 312, 313, 314,
	315, 316, 690, 1270, 0, 317, 1277, 318, 1276, 0,
	1287, 319, 320, 321, 322, 323, 324, 1223, 1256, 1188,
	325, 1317, 1318, 697, 0, 326, 327, 1263, 0, 1244,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1298,
	351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252,
	354, 355, 356, 357, 358, 1280, 359, 361, 1274, 1273,
	1193, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1265, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1199, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1288, 1289, 392, 1212, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1272, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1299, 402, 403, 404,
	1285, 1286, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1295, 0, 1222, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1258, 1259, 1262, 511, 1301,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1300, 512, 433, 1267,
	1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303, 436,
	437, 438, 1304, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1296,
	1305, 450, 451, 1306, 0, 452, 453, 454, 455, 456,
	457, 460, 1251, 1250, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1307, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1308, 504, 492, 1190, 296, 1309, 506, 507,
	508, 509, 1213, 1261, 510, 1275, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1310, 523, 1311, 1290, 524, 525, 1200,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1291, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1271, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1312, 583, 584, 585, 586, 587,
	1201, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 252, 606, 607, 605,
	608, 609, 610, 1254, 611, 612, 594, 595, 613, 614,
	1313, 615, 616, 617, 618, 619, 620, 621, 1269, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1316, 631, 632, 633, 634, 1292, 638, 639,
	640, 0, 641, 642, 1187, 637, 628, 254, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1281,
	1282, 1283, 1284, 0, 662, 0, 652, 654, 655, 656,
	1293, 657, 1294, 1211, 658, 659, 660, 661, 653, 663,
	664, 0, 1194, 665, 666, 668, 670, 671, 667, 669,
	672, 1255, 673, 0, 0, 674, 675, 676, 1763, 1278,
	1315, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 246, 684, 685, 740, 686, 687, 688,
	1191, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1186, 0, 0, 0, 0,
	0, 0, 1184, 1185, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 2033, 2031, 0, 0, 1215, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	2931, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 2936, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 2932, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 2933, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 2846, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 0,
	0, 0, 0, 0, 0, 0, 0, 1217, 2844, 0,
	2843, 1215, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 0, 0, 0, 0, 0, 0, 0,
	0, 1217, 2841, 0, 2840, 1215, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 0, 0, 0,
	0, 0, 0, 0, 0, 1217, 2838, 0, 2837, 1215,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 0, 0, 0, 0, 0, 0, 0, 0, 1217,
	2835, 0, 1865, 1215, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1864, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 1180, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 1195, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	0, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 5091, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 1195, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 2676, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 2675, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 0, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	4808, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	1195, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 0, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 1195, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 0, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 4359, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 2103,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 1217, 0, 0,
	0, 1215, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 2103, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 1217,
	0, 0, 0, 1215, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	4025, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 2936, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 0, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 0, 0, 0, 0, 0, 0, 0, 0, 1217,
	2031, 0, 2941, 1215, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 2939, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	2927, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 2916, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 2914, 0,
	2905, 2912, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 2908, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	2909, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 2910, 470, 2907, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 2911, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 2906, 688, 1191, 0, 0,
	0, 0, 2902, 0, 2905, 2912, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 2908, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 2909, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 2910, 470, 2907, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 2911, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 2906,
	688, 1191, 0, 0, 0, 0, 0, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 0,
	0, 0, 0, 0, 0, 2039, 0, 1217, 0, 0,
	0, 1215, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 2655, 305, 306,
	0, 0, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 2616, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 2587, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 1870, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 1798, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	1793, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 1779, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 1774, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 1682, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1681, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 1676, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1675, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	1669, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 1631, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 1613, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 1617, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 1618, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 1616, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 1445, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 0, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	0, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 5137, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 5136, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 5135, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 5137, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 5136, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 0, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 4731, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 4732, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 4730, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 0, 0, 1233, 1205, 1206, 1207, 3439, 3440,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 0, 0, 1233, 1205,
	1206, 1207, 3437, 3438, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	0, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 2663, 2664, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 0, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 0, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 2924, 0,
	0, 0, 0, 0, 0, 2922, 2923, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 0, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 0, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 3432, 3433, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 2285,
	2286, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 0, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 5137, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 0, 1260, 0,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 0, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	5136, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 2943, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 0, 1256, 0, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	0, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 1643, 0, 1233,
	1205, 1206, 1207, 1203, 1204, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 1217, 0, 0,
	0, 1215, 1257, 1221, 0, 0, 307, 0, 308, 309,
	1297, 310, 311, 312, 313, 314, 315, 316, 690, 1270,
	0, 317, 1277, 318, 1276, 0, 1287, 319, 320, 321,
	322, 323, 324, 0, 1256, 0, 325, 1317, 1318, 697,
	0, 326, 327, 1263, 0, 1244, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1298, 351, 352, 353, 1247,
	1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357,
	358, 1280, 359, 361, 1274, 1273, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1265, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1288, 1289, 392, 1212,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1272,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1299, 402, 403, 404, 1285, 1286, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1295,
	0, 1222, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1258, 1259, 1262, 511, 1301, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1300, 512, 433, 1267, 1268, 0, 1228, 0,
	434, 435, 1302, 1260, 1303, 436, 437, 438, 1304, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1296, 1305, 450, 451, 1306,
	0, 452, 453, 454, 455, 456, 457, 460, 1251, 1250,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1307, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1308, 504,
	492, 0, 296, 1309, 506, 507, 508, 509, 1213, 1261,
	510, 1275, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1310,
	523, 1311, 1290, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1291, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1271, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1312, 583, 584, 585, 586, 587, 1201, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1254,
	611, 612, 594, 595, 613, 614, 1313, 615, 616, 617,
	618, 619, 620, 621, 1269, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1316, 631,
	632, 633, 634, 1292, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1281, 1282, 1283, 1284, 0,
	662, 0, 652, 654, 655, 656, 1293, 657, 1294, 1211,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 1255, 673, 0,
	0, 674, 675, 676, 736, 1278, 1315, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1175, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 1217, 0,
	0, 1257, 1215, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 1256, 0, 325, 695, 696, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1342, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	0, 296, 1309, 506, 507, 508, 509, 0, 1261, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 1348,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 1350, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 252, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 254, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 1763, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 246, 684,
	685, 740, 686, 687, 688, 1356, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 1346, 0, 2127, 1257, 0,
	0, 0, 307, 0, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	1256, 0, 325, 695, 696, 697, 0, 326, 327, 1263,
	0, 1244, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249,
	1248, 1252, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1288, 1289, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1295, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1258, 1259, 1262,
	511, 1301, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1300, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 1302, 1260,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1342, 446, 448, 447, 0,
	449, 1296, 1305, 450, 451, 1306, 0, 452, 453, 454,
	455, 456, 457, 460, 1251, 1250, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 0, 296, 1309,
	506, 507, 508, 509, 0, 1261, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 1348, 518, 519, 520,
	0, 0, 521, 522, 719, 1310, 523, 1311, 1290, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1291, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 1350, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 252, 606,
	607, 605, 608, 609, 610, 1254, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 1292,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 254,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 1293, 657, 1294, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 1255, 673, 0, 0, 674, 675, 676,
	1763, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 246, 684, 685, 740, 686,
	687, 688, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3597, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 2127, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 1257, 0, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 1256, 0, 325, 695, 696, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1342, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	0, 296, 1309, 506, 507, 508, 509, 0, 1261, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 1348,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 1350, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1338, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 1346, 0, 1344, 0, 0,
	1257, 0, 0, 0, 307, 0, 308, 309, 1297, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 1256, 0, 325, 695, 696, 697, 0, 326,
	327, 1263, 0, 1244, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1298, 351, 352, 353, 1247, 1245, 1246,
	1253, 1249, 1248, 1252, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1288, 1289, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1299, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1295, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1258,
	1259, 1262, 511, 1301, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1300, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	1302, 1260, 1303, 436, 437, 438, 1304, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1342, 446, 448,
	447, 0, 449, 1296, 1305, 450, 451, 1306, 0, 452,
	453, 454, 455, 456, 457, 460, 1251, 1250, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1307, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1308, 504, 492, 0,
	296, 1309, 506, 507, 508, 509, 0, 1261, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 1348, 518,
	519, 520, 0, 0, 521, 522, 719, 1310, 523, 1311,
	1290, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1291, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1312, 583,
	584, 585, 586, 587, 726, 1350, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1254, 611, 612,
	594, 595, 613, 614, 1313, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 1292, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 1293, 657, 1294, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 1255, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 1346, 0, 1344, 1257, 0, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 1256,
	0, 325, 695, 696, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1342, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 0, 296, 1309, 506,
	507, 508, 509, 0, 1261, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 1348, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 726, 1350, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 1346, 0, 1344, 1257, 0, 0, 0, 307, 0,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 1256, 0, 325, 695,
	696, 697, 0, 326, 327, 1263, 0, 1244, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1298, 351, 352,
	353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1288, 1289,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1299, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1295, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1258, 1259, 1262, 511, 1301, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1300, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 1302, 1260, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1296, 1305, 450,
	451, 1306, 0, 452, 453, 454, 455, 456, 457, 460,
	1251, 1250, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 0, 296, 1309, 506, 507, 508, 509,
	0, 1261, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1310, 523, 1311, 1290, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1291, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1254, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 1292, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 1293, 657,
	1294, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 1255,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	4545, 1257, 0, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 1256, 0, 325, 695, 696, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	0, 296, 1309, 506, 507, 508, 509, 0, 1261, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 1350, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 291, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 2769, 2770, 2771, 2788,
	2789, 2790, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 2791, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 2023, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 2008, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 2781, 0, 337, 338, 339, 336, 340, 0,
	341, 2777, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 2782,
	2783, 2784, 2785, 393, 394, 395, 704, 0, 0, 2776,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 2786, 2787,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 2779, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 2780, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 2007, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1175, 0, 1638, 2766, 2767, 2768, 2792, 2778,
	2772, 0, 2774, 2775, 2773, 2760, 2761, 2762, 2763, 2764,
	2765, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	1602, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1300, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 1302, 715, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 0, 0, 1309, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 252, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 254, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 1763,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 246, 684, 685, 740, 686, 687,
	688, 0, 1760, 247, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 202, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	1602, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1300, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 1302, 715, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 0, 0, 1309, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 252, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 254, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 1763,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 246, 684, 685, 740, 686, 687,
	688, 1638, 1637, 247, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 202, 689, 0, 0, 0, 307, 0,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 1602, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1298, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1299, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 1301, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 1300, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 1302, 715, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 1305, 450,
	451, 1306, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 0, 0, 1309, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1310, 523, 1311, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1638, 1637,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	1787, 689, 0, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 1602, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1300, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1302, 715, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	0, 0, 1309, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1638, 1637, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 3935, 689, 0,
	0, 0, 307, 0, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 1602, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1298, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1301, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1300, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 1302, 715,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 1305, 450, 451, 1306, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 0, 0, 1309,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1310, 523, 1311, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 2526, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1638, 2434, 0, 0, 0, 0, 2435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 1787, 689, 0, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 1602, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1300, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 1302, 715, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 2433, 448, 447, 0, 449, 716, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 0, 0, 1309, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1638,
	1637, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 1787, 689, 0, 0, 0, 307, 0, 308, 309,
	1297, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 1602, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1298, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1299, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 1301, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1300, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1302, 715, 1303, 436, 437, 438, 1304, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 1305, 450, 451, 1306,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1307, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1308, 504,
	492, 0, 0, 1309, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1310,
	523, 1311, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1312, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 1313, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1175, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 1769, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 252, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 254, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 1763, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 291, 0, 246, 684,
	685, 740, 686, 687, 688, 0, 0, 247, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 202, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 291, 3206, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 2141, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 291, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 5304, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 1757,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 3887, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 291, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 3328,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 291, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 4050, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 2513, 1257, 0, 0, 0,
	307, 0, 308, 309, 1297, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 1256, 0,
	325, 695, 696, 697, 0, 326, 327, 1263, 0, 1244,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1298,
	351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1288, 1289, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1299, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1295, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1258, 1259, 1262, 511, 1301,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1300, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 1302, 1260, 1303, 436,
	437, 438, 1304, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1296,
	1305, 450, 451, 1306, 0, 452, 453, 454, 455, 456,
	457, 460, 1251, 1250, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1307, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1308, 504, 492, 0, 296, 1309, 506, 507,
	508, 509, 0, 1261, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1310, 523, 1311, 1290, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1291, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1312, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1254, 611, 612, 594, 595, 613, 614,
	1313, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 1292, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	1293, 657, 1294, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 1255, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	997, 0, 897, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 905, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 994, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 901, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 996, 0, 637, 628, 903, 643, 644, 645,
	646, 647, 904, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 2185,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 908, 0, 0, 307, 0, 308, 309,
	1297, 310, 311, 312, 313, 314, 315, 316, 0, 2191,
	0, 317, 2181, 318, 2197, 0, 2204, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 2207, 2208, 0,
	0, 326, 327, 0, 0, 1602, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1298, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 1280, 359, 361, 2195, 2194, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1265, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 0, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 2193,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1299, 402, 403, 404, 2202, 2203, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 0, 0, 0, 511, 1301, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1300, 512, 433, 2188, 2189, 0, 2184, 0,
	434, 435, 1302, 0, 1303, 436, 437, 438, 1304, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 0, 1305, 450, 451, 1306,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1307, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1308, 504,
	492, 0, 0, 1309, 506, 507, 508, 509, 0, 0,
	510, 2196, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 0, 1310,
	523, 1311, 0, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 2178, 537,
	538, 539, 2179, 540, 541, 542, 0, 543, 0, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 2192, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1312, 583, 584, 585, 586, 587, 0, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 1313, 615, 616, 617,
	618, 619, 620, 621, 2190, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 2206, 631,
	632, 633, 634, 0, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 2198, 2199, 2200, 2201, 0,
	662, 0, 652, 654, 655, 656, 0, 657, 0, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 0, 2182, 2205, 0, 678, 677,
	679, 680, 681, 0, 682, 683, 0, 0, 0, 0,
	684, 685, 0, 686, 687, 688, 897, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 4179, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 2172, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 905, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 4178, 601, 602, 603, 604, 0,
	901, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	903, 643, 644, 645, 646, 647, 904, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 4177,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 897, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 2212, 305,
	306, 0, 0, 0, 0, 0, 689, 908, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 905, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 2211, 601, 602, 603, 604, 0, 2213, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 903, 643, 644,
	645, 646, 647, 904, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 2210, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	897, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 2163, 305, 306, 0, 0,
	0, 0, 0, 689, 908, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	905, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 2162, 601,
	602, 603, 604, 0, 901, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 903, 643, 644, 645, 646, 647,
	904, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 2161, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 895, 0, 897,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 908, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 905,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 901, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 903, 643, 644, 645, 646, 647, 904,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 897, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	908, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 905, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	901, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	903, 643, 644, 645, 646, 647, 904, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 3040, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 908, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 897, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 908, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 905, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 2566, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	2567, 601, 602, 603, 604, 0, 901, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 903, 643, 644, 645,
	646, 647, 904, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 2568, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 908, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	908, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 1637, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4397, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 1602, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1298, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1299, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 1301, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 1300, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 1302, 715, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 1305, 450,
	451, 1306, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 0, 0, 1309, 506, 507, 508, 509,
	4282, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1310, 523, 1311, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1819, 0,
	1638, 1637, 0, 0, 0, 0, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 1602, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 1817, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1300, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 1302, 715, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 0, 0, 1309, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 1818, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 1816,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1689, 0, 1638,
	1637, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	1297, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 1602, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1298, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1299, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1691, 710, 711, 511, 1301, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1300, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1302, 715, 1303, 436, 437, 438, 1304, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 1305, 450, 451, 1306,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1307, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1308, 504,
	492, 0, 0, 1309, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1310,
	523, 1311, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1312, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 1313, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1633, 0, 1638, 1637,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 1602, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1300, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1302, 715, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	0, 0, 1309, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1638, 1637, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 1602, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1298, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1301, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1300, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 1302, 715,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 1305, 450, 451, 1306, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 0, 0, 1309,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1310, 523, 1311, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1638, 1637, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 1602, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1300, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 1302, 715, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 0, 0, 1309, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 1638,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	1297, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 1602, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1298, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1299, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 1301, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1300, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1302, 715, 1303, 436, 437, 438, 1304, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 1305, 450, 451, 1306,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1307, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1308, 504,
	492, 0, 0, 1309, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1310,
	523, 1311, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1312, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 1313, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 3105, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 3879,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 3109,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 3878, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 3108, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 3875, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 3877, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 3874, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 3107, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 3876, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 3105, 326, 327, 698, 0, 0,
	3099, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 3101, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 3109, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 3108, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 3098, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 3107, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 3106, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1899, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 1898, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 1897, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 1900, 592, 593,
	600, 601, 602, 603, 604, 0, 1896, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 1894, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 1895, 677, 679, 680, 681, 739, 682, 683, 1606,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1608, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 1348, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1603, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1605, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 1348, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 1509, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1511, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	1348, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 775, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	773, 303, 304, 762, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	765, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 771, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 767, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 774, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 761, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 762, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 765,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 766, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	767, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 760, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 762,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 765, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 766, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 767, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 762, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 765, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 4292,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 767, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 1348,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 3770, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 3298, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 3297, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 2534, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	2479, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 2478, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 2463,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 2465, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	2427, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 1348,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 1735, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1734,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1626, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 1619, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1621, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1428, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1427, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1418, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1417, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1415, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1414, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 1410,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1409, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 742, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 282, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 765, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 766, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 767, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	2575, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 2573, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 2571, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 2485, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	2238, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 2232, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 981, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 980, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 979, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 864, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 853, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 862,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 855, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 861, 401, 857, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 858, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 856, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 859, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 860, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 854, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	847, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	853, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 862, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 855, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 861, 401, 857, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 858, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 856, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 859, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 860, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 854, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	3878, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 4630, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1456, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 1459,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 1457, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 835, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	834, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 833, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 1460, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 831, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 1456, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 1459, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 1457, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 835, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 834,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 833, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 1460, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 831, 731, 732, 733, 0, 662, 0,
	652, 1458, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 842, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 840, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 751, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	750, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 749, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 3206, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 4936, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 3710, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 4517, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 4236, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 2978, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 3206, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 3290, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 2371, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 834, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 833,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 831, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 2545, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 2532, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1791, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 1783, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 825, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 821, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 826, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 835, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 834, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 833, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 1768, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	831, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1741, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1740, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1725, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1723, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 1717,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1694, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1692, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 1687, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1647, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 1611, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1462, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 834, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 833, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 831, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 1433, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1432, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1424, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1423, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 1373, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 845, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 825, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 821, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 820, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 826, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 835,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 834, 584, 585, 586, 587, 822, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 833, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 823, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 831, 731, 732, 733, 0,
	662, 0, 652, 827, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 814, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	815, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 777, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 769, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 746, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 3909, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 834, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 833, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 831, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 3814, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 3788, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 3784,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 3735, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 3733, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	3721, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 3718, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 3308, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 815, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 2503, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 0, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1395, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 1321, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	0, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 0, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 0,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 0, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1731, 0, 1440, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 0,
	318, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 0, 0, 0, 0, 326, 327,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 1442, 354, 355, 356, 357, 358, 0, 359,
	361, 0, 0, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 0, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 0, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1730, 0,
	0, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 0, 0, 0, 0, 0, 434, 435, 0,
	0, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 0, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 0, 510, 0, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 0, 0, 523, 0, 0,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 0, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 0, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 0, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1443, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 0, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 0, 631, 632, 633, 634,
	0, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 0, 0, 0, 0, 0, 662, 0, 652,
	654, 655, 656, 0, 657, 0, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 0, 0, 0, 0, 678, 677, 679, 680, 681,
	0, 682, 683, 1650, 0, 1440, 0, 684, 685, 0,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 0, 317, 0, 318,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 0, 0, 0, 0, 326, 327, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 1442, 354, 355, 356, 357, 358, 0, 359, 361,
	0, 0, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	0, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 0, 0, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 0, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1649, 0, 0,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 0, 0, 0, 0, 0, 434, 435, 0, 0,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 0, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 0, 510, 0, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 0, 0, 523, 0, 0, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 0, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	0, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 0, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1443, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	0, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 0, 631, 632, 633, 634, 0,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 0, 0, 0, 0, 0, 662, 0, 652, 654,
	655, 656, 0, 657, 0, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	0, 0, 0, 0, 678, 677, 679, 680, 681, 0,
	682, 683, 1438, 0, 1440, 0, 684, 685, 0, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 0, 318, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 0, 0, 0, 0, 326, 327, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	1442, 354, 355, 356, 357, 358, 0, 359, 361, 0,
	0, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 0,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 0, 0, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 0, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1437, 0, 0, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	0, 0, 0, 0, 0, 434, 435, 0, 0, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	0, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 0, 510, 0, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 0, 0, 523, 0, 0, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 0, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 0,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 0, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1443, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 0,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 0, 631, 632, 633, 634, 0, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	0, 0, 0, 0, 0, 662, 0, 652, 654, 655,
	656, 0, 657, 0, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 0,
	0, 0, 0, 678, 677, 679, 680, 681, 0, 682,
	683, 2252, 0, 1440, 0, 684, 685, 0, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 0, 317, 0, 318, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 0, 0, 0, 0, 326, 327, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 1442,
	354, 355, 356, 357, 358, 0, 359, 361, 0, 0,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 0, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	0, 0, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 0, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 0, 0, 0, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 0,
	0, 0, 0, 0, 434, 435, 0, 0, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 0,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 0, 510, 0, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 0, 0, 523, 0, 0, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	0, 543, 0, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 0, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	0, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1443, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 0, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 0, 631, 632, 633, 634, 0, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 0,
	0, 0, 0, 0, 662, 0, 652, 654, 655, 656,
	0, 657, 0, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 0, 0,
	0, 0, 678, 677, 679, 680, 681, 0, 682, 683,
	2219, 0, 1440, 0, 684, 685, 0, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 0, 318, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	0, 0, 0, 0, 326, 327, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 1442, 354,
	355, 356, 357, 358, 0, 359, 361, 0, 0, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 0, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 0, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 0, 0, 0, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 0, 0,
	0, 0, 0, 434, 435, 0, 0, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 0, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 0, 510, 0, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 0, 0, 523, 0, 0, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 0, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 0, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 0,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1443, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 0, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 0, 631, 632, 633, 634, 0, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 0, 0,
	0, 0, 0, 662, 0, 652, 654, 655, 656, 0,
	657, 0, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 0, 0, 0,
	0, 678, 677, 679, 680, 681, 1440, 682, 683, 0,
	0, 0, 0, 684, 685, 0, 686, 687, 688, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 0,
	318, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 0, 0, 0, 0, 326, 327,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 1442, 354, 355, 356, 357, 358, 0, 359,
	361, 0, 0, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 0, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 0, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 0, 0,
	0, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 0, 0, 0, 0, 0, 434, 435, 0,
	0, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 0, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 0, 510, 0, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 0, 0, 523, 0, 0,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 0, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 0, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 0, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1443, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 0, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 0, 631, 632, 633, 634,
	0, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 0, 0, 0, 0, 0, 662, 0, 652,
	654, 655, 656, 0, 657, 0, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 0, 0, 0, 0, 678, 677, 679, 680, 681,
	0, 682, 683, 0, 0, 0, 0, 684, 685, 0,
	686, 687, 688, 1952, 1953, 0, 1985, 1986, 1987, 1996,
	1997, 1998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 1983, 0, 0,
	0, 0, 0, 1952, 1953, 1955, 1985, 1986, 1987, 1996,
	1997, 1998, 0, 0, 0, 2002, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 1983, 0, 0,
	0, 0, 2008, 0, 0, 1955, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 2002, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 2008, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	1978, 1979, 1980, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	1978, 1979, 1980, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 2003, 0, 0, 0, 0,
	0, 0, 1982, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 2000, 1993, 0, 0, 2003, 0, 0, 1969, 1970,
	0, 0, 1982, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 1999,
	0, 2000, 0, 0, 0, 0, 0, 0, 1969, 1970,
	0, 1975, 0, 0, 0, 0, 1952, 1953, 0, 1985,
	1986, 1987, 1996, 1997, 1998, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	1983, 1975, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 0,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 0, 0,
	0, 1990, 0, 0, 1954, 0, 0, 0, 0, 0,
	2001, 0, 2005, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	0, 1981, 1977, 1978, 1979, 1980, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1953, 0, 1985, 1986, 1987,
	1996, 1997, 1998, 1994, 0, 1993, 0, 2007, 2003, 0,
	0, 0, 0, 0, 0, 1982, 1984, 1989, 1983, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 1999, 0, 2000, 0, 2002, 2007, 0, 0,
	0, 1969, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 0, 1991,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 1975, 0, 0, 0, 0, 0,
	0, 0, 1971, 1992, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 1967, 1973, 1995, 1972,
	1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961,
	1962, 0, 0, 1992, 0, 0, 0, 0, 0, 0,
	2803, 0, 0, 2001, 0, 1966, 1967, 1973, 1995, 1972,
	1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961,
	1962, 0, 0, 0, 1990, 0, 5062, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	1977, 1978, 1979, 1980, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 1953, 0, 1985, 1986, 1987, 1996, 1997,
	1998, 0, 0, 1993, 1981, 0, 2003, 0, 0, 0,
	0, 0, 0, 1982, 1984, 1989, 1983, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 1976, 0,
	1999, 0, 2000, 0, 2002, 0, 0, 0, 0, 1969,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 1994, 1991, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 1975, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 0, 0, 0, 1977, 1978,
	1979, 1980, 0, 0, 0, 0, 1992, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 1967,
	1973, 1995, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957,
	1958, 1959, 1961, 1962, 0, 0, 0, 0, 0, 4964,
	1952, 1953, 0, 1985, 1986, 1987, 1996, 1997, 1998, 0,
	0, 1993, 1981, 0, 2003, 0, 0, 0, 0, 0,
	0, 1982, 1984, 1989, 1983, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 1976, 0, 1999, 0,
	2000, 0, 2002, 0, 0, 0, 0, 1969, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2008,
	0, 0, 0, 0, 1994, 1991, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	1975, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 1977, 1978, 1979, 1980,
	0, 0, 0, 0, 1992, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 1967, 1973, 1995,
	1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959,
	1961, 1962, 0, 0, 0, 0, 0, 4913, 1952, 1953,
	0, 1985, 1986, 1987, 1996, 1997, 1998, 0, 0, 1993,
	1981, 0, 2003, 0, 0, 0, 0, 0, 0, 1982,
	1984, 1989, 1983, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 0, 0, 1976, 0, 1999, 0, 2000, 0,
	2002, 0, 0, 0, 0, 1969, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 1994, 1991, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 1975, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2005,
	0, 0, 0, 0, 1977, 1978, 1979, 1980, 0, 0,
	0, 0, 1992, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 1967, 1973, 1995, 1972, 1968,
	0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962,
	0, 0, 0, 0, 0, 4912, 1952, 1953, 0, 1985,
	1986, 1987, 1996, 1997, 1998, 0, 0, 1993, 1981, 0,
	2003, 0, 0, 0, 0, 0, 0, 1982, 1984, 1989,
	1983, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 1976, 0, 1999, 0, 2000, 0, 2002, 0,
	0, 0, 0, 1969, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 0, 0,
	1994, 1991, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 1975, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 1977, 1978, 1979, 1980, 0, 0, 0, 0,
	1992, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 1967, 1973, 1995, 1972, 1968, 0, 1965,
	1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962, 0, 0,
	0, 0, 0, 4715, 1952, 1953, 0, 1985, 1986, 1987,
	1996, 1997, 1998, 0, 0, 1993, 1981, 0, 2003, 0,
	0, 0, 0, 0, 0, 1982, 1984, 1989, 1983, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	1976, 0, 1999, 0, 2000, 0, 2002, 0, 0, 0,
	0, 1969, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 1994, 1991,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 1975, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	1977, 1978, 1979, 1980, 0, 0, 0, 0, 1992, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 1967, 1973, 1995, 1972, 1968, 0, 1965, 1963, 1964,
	1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0, 0,
	0, 4541, 1952, 1953, 0, 1985, 1986, 1987, 1996, 1997,
	1998, 0, 0, 1993, 1981, 0, 2003, 0, 0, 0,
	0, 0, 0, 1982, 1984, 1989, 1983, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 1976, 0,
	1999, 0, 2000, 0, 2002, 0, 0, 0, 0, 1969,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 1994, 1991, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 1975, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 0, 0, 0, 1977, 1978,
	1979, 1980, 0, 0, 0, 0, 1992, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 1967,
	1973, 1995, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957,
	1958, 1959, 1961, 1962, 0, 0, 0, 0, 0, 4445,
	1952, 1953, 0, 1985, 1986, 1987, 1996, 1997, 1998, 0,
	0, 1993, 1981, 0, 2003, 0, 0, 0, 0, 0,
	0, 1982, 1984, 1989, 1983, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 1976, 0, 1999, 0,
	2000, 0, 2002, 0, 0, 0, 0, 1969, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2008,
	0, 0, 0, 0, 1994, 1991, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	1975, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 1977, 1978, 1979, 1980,
	0, 0, 0, 0, 1992, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 1967, 1973, 1995,
	1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959,
	1961, 1962, 0, 0, 0, 0, 0, 4444, 1952, 1953,
	0, 1985, 1986, 1987, 1996, 1997, 1998, 0, 0, 1993,
	1981, 0, 2003, 0, 0, 0, 0, 0, 0, 1982,
	1984, 1989, 1983, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 0, 0, 1976, 0, 1999, 0, 2000, 0,
	2002, 0, 0, 0, 0, 1969, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 1994, 1991, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 1975, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2005,
	0, 0, 0, 0, 1977, 1978, 1979, 1980, 0, 0,
	0, 0, 1992, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 1967, 1973, 1995, 1972, 1968,
	0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962,
	0, 0, 0, 0, 0, 4443, 1952, 1953, 0, 1985,
	1986, 1987, 1996, 1997, 1998, 0, 0, 1993, 1981, 0,
	2003, 0, 0, 0, 0, 0, 0, 1982, 1984, 1989,
	1983, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 1976, 0, 1999, 0, 2000, 0, 2002, 0,
	0, 0, 0, 1969, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 0, 0,
	1994, 1991, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 1975, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 1977, 1978, 1979, 1980, 0, 0, 0, 0,
	1992, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 1967, 1973, 1995, 1972, 1968, 0, 1965,
	1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962, 0, 0,
	0, 0, 0, 4055, 1952, 1953, 0, 1985, 1986, 1987,
	1996, 1997, 1998, 0, 0, 1993, 1981, 0, 2003, 0,
	0, 0, 0, 0, 0, 1982, 1984, 1989, 1983, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	1976, 0, 1999, 0, 2000, 0, 2002, 0, 0, 0,
	0, 1969, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 1994, 1991,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 1975, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	1977, 1978, 1979, 1980, 0, 0, 0, 0, 1992, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 1967, 1973, 1995, 1972, 1968, 0, 1965, 1963, 1964,
	1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0, 0,
	0, 3515, 1952, 1953, 0, 1985, 1986, 1987, 1996, 1997,
	1998, 0, 0, 1993, 1981, 0, 2003, 0, 0, 0,
	0, 0, 0, 1982, 1984, 1989, 1983, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 1976, 0,
	1999, 0, 2000, 0, 2002, 0, 0, 0, 0, 1969,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 1994, 1991, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 1975, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 0, 0, 0, 1977, 1978,
	1979, 1980, 0, 0, 0, 0, 1992, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 1967,
	1973, 1995, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957,
	1958, 1959, 1961, 1962, 0, 0, 0, 0, 0, 3514,
	1952, 1953, 0, 1985, 1986, 1987, 1996, 1997, 1998, 0,
	0, 1993, 1981, 0, 2003, 0, 0, 0, 0, 0,
	0, 1982, 1984, 1989, 1983, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 1976, 0, 1999, 0,
	2000, 0, 2002, 0, 0, 0, 0, 1969, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2008,
	0, 0, 0, 0, 1994, 1991, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	1975, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 1977, 1978, 1979, 1980,
	0, 0, 0, 0, 1992, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 1967, 1973, 1995,
	1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959,
	1961, 1962, 0, 0, 0, 0, 0, 3513, 0, 0,
	1952, 1953, 0, 1985, 1986, 1987, 1996, 1997, 1998, 1993,
	1981, 0, 2003, 0, 2401, 0, 0, 0, 0, 1982,
	1984, 0, 0, 1989, 1983, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 1976, 0, 1999, 0, 2000, 0,
	0, 0, 2002, 0, 0, 1969, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2008,
	0, 0, 1994, 1991, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 2402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2005,
	0, 0, 0, 0, 0, 0, 1977, 1978, 1979, 1980,
	0, 0, 1992, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 1966, 1967, 1973, 1995, 1972, 1968,
	0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962,
	0, 0, 0, 0, 0, 3512, 0, 0, 1952, 1953,
	0, 1985, 1986, 1987, 1996, 1997, 1998, 0, 1981, 1993,
	0, 0, 2003, 0, 0, 0, 0, 0, 0, 1982,
	1984, 1989, 1983, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 1976, 0, 0, 0, 1999, 0, 2000, 0,
	2002, 0, 0, 0, 0, 1969, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	1994, 0, 0, 1991, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 1975, 0,
	0, 2331, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 2329, 0, 0, 0, 0, 0, 2005,
	0, 0, 0, 0, 1977, 1978, 1979, 1980, 0, 0,
	1992, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 1966, 1967, 1973, 1995, 1972, 1968, 0, 1965,
	1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962, 0, 0,
	0, 3477, 0, 0, 0, 0, 0, 0, 1952, 1953,
	0, 1985, 1986, 1987, 1996, 1997, 1998, 1993, 1981, 0,
	2003, 0, 0, 0, 0, 0, 0, 1982, 1984, 0,
	0, 1989, 1983, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 1976, 0, 1999, 0, 2000, 0, 0, 0,
	2002, 0, 0, 1969, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2403, 0, 0, 2008, 0, 0,
	1994, 1991, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2404, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 0, 0, 1977, 1978, 1979, 1980, 0, 0,
	1992, 0, 0, 0, 1960, 5213, 0, 0, 0, 0,
	0, 0, 1966, 1967, 1973, 1995, 1972, 1968, 0, 1965,
	1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2330, 1981, 1993, 0, 0,
	2003, 0, 0, 0, 0, 0, 0, 1982, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1976, 0, 0, 0, 1999, 0, 2000, 0, 0, 0,
	0, 0, 0, 1969, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1994, 1952,
	1953, 1991, 1985, 1986, 1987, 1996, 1997, 1998, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 1989, 1983, 0, 0, 0, 0, 0, 0,
	0, 1955, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 0, 2328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 0,
	0, 0, 0, 0, 0, 2001, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 1990, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5212,
	1966, 1967, 1973, 1995, 1972, 1968, 0, 1965, 1963, 1964,
	1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 1953, 0,
	1985, 1986, 1987, 1996, 1997, 1998, 1981, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 1978, 1979, 1980, 0,
	1989, 1983, 0, 0, 0, 1960, 3447, 3577, 0, 1955,
	1976, 0, 0, 0, 3576, 0, 0, 0, 0, 2002,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2008, 0, 1994, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 1993, 0,
	0, 2003, 0, 0, 0, 0, 1974, 0, 1982, 1984,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 1999, 0, 2000, 0, 0,
	0, 0, 0, 0, 1969, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1991, 0, 0, 3448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1977, 1978, 1979, 1980, 0, 1992, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	1966, 1967, 1973, 1995, 1972, 1968, 2001, 1965, 1963, 1964,
	1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 0, 2005, 2003,
	0, 0, 0, 0, 0, 0, 1982, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 2000, 0, 0, 0, 0,
	0, 0, 1969, 1970, 0, 0, 0, 0, 0, 0,
	0, 2951, 0, 0, 0, 0, 0, 0, 1952, 1953,
	1991, 1985, 1986, 1987, 1996, 1997, 1998, 1981, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 1989, 1983, 0, 0, 0, 2950, 0, 0, 0,
	1955, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 1994,
	0, 0, 0, 0, 2001, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 1990, 1971, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 1978, 1979, 1980, 0, 1992,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 1976,
	0, 1966, 1967, 1973, 1995, 1972, 1968, 0, 1965, 1963,
	1964, 1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 1952, 1953,
	0, 1985, 1986, 1987, 1996, 1997, 1998, 1993, 0, 0,
	2003, 0, 0, 0, 0, 0, 0, 1982, 1984, 0,
	0, 1989, 1983, 0, 0, 0, 0, 0, 0, 0,
	1955, 2007, 0, 0, 1999, 0, 2000, 0, 0, 0,
	2002, 0, 0, 1969, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 1991, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1992, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	1967, 1973, 1995, 1972, 1968, 2001, 1965, 1963, 1964, 1956,
	1957, 1958, 1959, 1961, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 0, 0, 1977, 1978, 1979, 1980, 0, 0,
	0, 0, 0, 0, 1960, 0, 4817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 1953, 0, 1985,
	1986, 1987, 1996, 1997, 1998, 0, 1981, 1993, 0, 0,
	2003, 0, 0, 0, 0, 0, 0, 1982, 1984, 1989,
	1983, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	1976, 0, 0, 0, 1999, 0, 2000, 0, 2002, 0,
	0, 0, 0, 1969, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 1994, 0,
	0, 1991, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 1975, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 1977, 1978, 1979, 1980, 0, 0, 1992, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	1966, 1967, 1973, 1995, 1972, 1968, 0, 1965, 1963, 1964,
	1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1953, 0, 1985, 1986, 1987,
	1996, 1997, 1998, 0, 0, 1993, 1981, 0, 2003, 0,
	0, 0, 0, 0, 0, 1982, 1984, 1989, 1983, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	1976, 0, 1999, 0, 2000, 0, 2002, 0, 0, 0,
	0, 1969, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 1994, 1991,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 1975, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 1172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	1977, 1978, 1979, 1980, 0, 0, 0, 0, 1992, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 1967, 1973, 1995, 1972, 1968, 0, 1965, 1963, 1964,
	1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0, 0,
	0, 0, 1952, 1953, 0, 1985, 1986, 1987, 1996, 1997,
	1998, 0, 0, 1993, 1981, 0, 2003, 0, 0, 0,
	0, 0, 0, 1982, 1984, 1989, 1983, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 1976, 0,
	1999, 0, 2000, 0, 2002, 0, 0, 0, 0, 1969,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 1994, 1991, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 1975, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 0, 0, 0, 1977, 1978,
	1979, 1980, 0, 0, 0, 0, 1992, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 1967,
	1973, 1995, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957,
	1958, 1959, 1961, 1962, 0, 0, 0, 0, 0, 0,
	1952, 1953, 0, 1985, 1986, 1987, 1996, 1997, 1998, 0,
	0, 1993, 1981, 0, 2003, 0, 0, 0, 0, 0,
	0, 1982, 1984, 1989, 1983, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 1976, 0, 1999, 0,
	2000, 0, 2002, 0, 0, 0, 0, 1969, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2008,
	0, 0, 0, 0, 1994, 1991, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	1975, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 1977, 1978, 1979, 1980,
	0, 0, 0, 0, 1992, 0, 1960, 0, 4260, 0,
	0, 0, 0, 0, 0, 0, 1966, 1967, 1973, 1995,
	1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959,
	1961, 1962, 0, 0, 0, 0, 0, 0, 1952, 1953,
	0, 1985, 1986, 1987, 1996, 1997, 1998, 0, 0, 1993,
	1981, 0, 2003, 0, 0, 0, 0, 0, 0, 1982,
	1984, 1989, 1983, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 0, 0, 1976, 0, 1999, 0, 2000, 0,
	2002, 0, 0, 0, 0, 1969, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 1994, 1991, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 1975, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2005,
	0, 0, 0, 0, 1977, 1978, 1979, 1980, 0, 0,
	0, 0, 1992, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 1967, 1973, 1995, 1972, 1968,
	0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1952, 1953, 0, 1985,
	1986, 1987, 1996, 1997, 1998, 0, 0, 1993, 1981, 0,
	2003, 0, 0, 0, 0, 0, 0, 1982, 1984, 1989,
	1983, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 1976, 0, 1999, 0, 2000, 0, 2002, 0,
	0, 0, 0, 1969, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 0, 0,
	1994, 1991, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 1975, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 1977, 1978, 1979, 1980, 0, 0, 0, 0,
	1992, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 3583, 1966, 1967, 1973, 1995, 1972, 1968, 0, 1965,
	1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1952, 1953, 0, 1985, 1986, 1987,
	1996, 1997, 1998, 0, 0, 1993, 1981, 0, 2003, 0,
	0, 0, 0, 0, 0, 1982, 1984, 1989, 1983, 0,
	0, 0, 3578, 0, 0, 0, 1955, 0, 0, 0,
	1976, 0, 1999, 0, 2000, 0, 2002, 0, 0, 0,
	0, 1969, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 1994, 1991,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 1975, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4036, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	1977, 1978, 1979, 1980, 0, 0, 0, 0, 1992, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 1967, 1973, 1995, 1972, 1968, 0, 1965, 1963, 1964,
	1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0, 0,
	0, 0, 1952, 1953, 0, 1985, 1986, 1987, 1996, 1997,
	1998, 0, 0, 1993, 1981, 0, 2003, 0, 0, 0,
	0, 0, 0, 1982, 1984, 1989, 1983, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 1976, 0,
	1999, 0, 2000, 0, 2002, 0, 0, 0, 0, 1969,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 1994, 1991, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 1975, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 0, 0, 0, 1977, 1978,
	1979, 1980, 0, 0, 0, 0, 1992, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 1967,
	1973, 1995, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957,
	1958, 1959, 1961, 1962, 0, 0, 0, 0, 0, 0,
	1952, 1953, 0, 1985, 1986, 1987, 1996, 1997, 1998, 0,
	0, 1993, 1981, 0, 2003, 0, 0, 0, 0, 0,
	0, 1982, 1984, 1989, 1983, 0, 0, 0, 3516, 0,
	0, 0, 1955, 0, 0, 0, 1976, 0, 1999, 0,
	2000, 0, 2002, 0, 0, 0, 0, 1969, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2008,
	0, 0, 0, 0, 1994, 1991, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	1975, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 1977, 1978, 1979, 1980,
	0, 3543, 0, 0, 1992, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 1967, 1973, 1995,
	1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959,
	1961, 1962, 0, 0, 0, 0, 0, 0, 1952, 1953,
	0, 1985, 1986, 1987, 1996, 1997, 1998, 0, 0, 1993,
	1981, 0, 2003, 0, 0, 0, 0, 0, 0, 1982,
	1984, 1989, 1983, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 0, 0, 1976, 0, 1999, 0, 2000, 0,
	2002, 0, 0, 0, 0, 1969, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 1994, 1991, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 1975, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2005,
	0, 0, 0, 0, 1977, 1978, 1979, 1980, 0, 0,
	0, 0, 1992, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 1967, 1973, 1995, 1972, 1968,
	0, 1965, 1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1952, 1953, 0, 1985,
	1986, 1987, 1996, 1997, 1998, 0, 0, 1993, 1981, 0,
	2003, 0, 0, 0, 0, 0, 0, 1982, 1984, 1989,
	1983, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 1976, 0, 1999, 0, 2000, 0, 2002, 0,
	0, 0, 0, 1969, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 0, 0,
	1994, 1991, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 1975, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 1977, 1978, 1979, 1980, 0, 0, 0, 0,
	1992, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 1967, 1973, 1995, 1972, 1968, 0, 1965,
	1963, 1964, 1956, 1957, 1958, 1959, 1961, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 1953, 0, 1985,
	1986, 1987, 1996, 1997, 1998, 1993, 1981, 0, 2003, 0,
	0, 0, 0, 0, 0, 1982, 1984, 0, 0, 1989,
	1983, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	1976, 0, 1999, 0, 2000, 0, 0, 0, 2002, 0,
	0, 1969, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 1994, 1991,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1975, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	0, 2515, 1977, 1978, 1979, 1980, 0, 0, 1992, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	1966, 1967, 1973, 1995, 1972, 1968, 0, 1965, 1963, 1964,
	1956, 1957, 1958, 1959, 1961, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1953, 0, 1985, 1986, 1987,
	1996, 1997, 1998, 0, 1981, 1993, 0, 0, 2003, 0,
	0, 0, 0, 0, 0, 1982, 1984, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 1976, 0,
	0, 0, 1999, 0, 2000, 0, 2002, 0, 0, 0,
	0, 1969, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 1994, 0, 0, 1991,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 1975, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	1977, 1978, 1979, 1980, 0, 0, 1992, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 1966, 1967,
	1973, 1995, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957,
	1958, 1959, 1961, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1993, 1981, 0, 2003, 0, 0, 0,
	0, 0, 0, 1982, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	1999, 0, 2000, 0, 0, 0, 0, 0, 0, 1969,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1994, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 1967,
	1973, 1995, 1972, 1968, 0, 1965, 1963, 1964, 1956, 1957,
	1958, 1959, 1961, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 1967, 1973, 1995,
	1972, 1968, 0, 1965, 1963, 1964, 1956, 1957, 1958, 1959,
	1961, 1962,
}

var sqlPact = [...]int{
	8969, -1000, -1000, -1000, -1000, 193, -1000, -1000, 191, 189,
	188, 187, 186, 185, 183, 182, 181, 180, 179, -1000,
	-1000, 177, 174, 172, 169, -1000, -1000, 167, -1000, -1000,
	166, -1000, 165, 164, 163, -1000, -1000, 162, -1000, 161,
	-1000, -1000, -1000, -1000, 160, 159, 158, 98655, 98066, 99242,
	2410, 125711, 108061, 2166, 88063, 125122, 87474, 124533, 2235, 11764,
	123944, 2903, 156, -1000, 123355, 151, 149, 146, -1000, 107472,
	122766, 105118, 104529, 2035, -1000, 145, 143, -1000, 12590, 76245,
	142, 141, 140, 138, 2465, 136, -1000, 132, 129, -1000,
	127, -1000, 13430, 1556, -1000, 126, 122, -1000, 423, 103940,
	120, 119, 117, 2821, 116, 115, 73298, 114, 113, 111,
	2744, 3010, -1000, -1000, 2182, -1000, -1000, 110, 108, 103,
	102, 101, 100, 99, 97, 94, 92, 91, 87, 84,
	-1000, 83, 82, 80, 78, 75, -1000, 74, 73, 70,
	-1000, 69, -1000, 66, 62, 61, 60, 59, 51, 50,
	49, 47, 46, 44, 43, 42, 41, 40, 18209, -1000,
	-1000, 38, -1000, 1932, 1763, 1759, 1758, 1756, 1744, 1006,
	35, 32, 31, 30, 29, 28, 27, 26, 24, 21,
	20, 18, 17, 16, 15, 12, 11, 10, 9, -1,
	147, -2, -3, -4, -5, -6, -7, -8, 4935, 3723,
	-1000, 1642, 788, 1256, 32954, 3166, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 134516, 126298, -9, -72,
	-10, -1000, 3480, 1087, 60823, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 271, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 514, 2401, 776, -1000, -1000, -1000, 122177,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2400, 6,
	88650, -1000, 2104, -1000, -1000, -1000, -1000, -1000, 775, -1000,
	2398, 2335, 367, 2325, 88650, -1000, -1000, -1000, 3584, 2590,
	4025, 4021, 4020, 4018, 4014, 133929, 1796, 4007, 2667, 4004,
	4003, 4000, 3999, 3998, 3997, 3996, -1000, 97477, 1076, 96888,
	96299, 3592, 121590, 95710, 121001, 136870, 51170, 787, 3583, -1000,
	-1000, -1000, -1000, -1000, -1000, 126298, -1000, 1071, -1000, -1000,
	3995, 2150, 774, 106883, -1000, -1000, 120412, 1677, -1000, -1000,
	-1000, 956, 1264, 35370, 35370, 35370, 268, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3598, -1000, -1000, -1000, -1000, 126298,
	2859, 2859, 1490, 1475, 1475, 2859, 2859, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3994, 3993, 3988, 3987, 3986,
	-1000, -1000, -1000, 86885, 25517, 86296, 85707, 119823, 50566, 95121,
	94532, 3982, 3981, 3980, 49962, 81584, 58415, 3722, 119234, 136281,
	3718, 3717, 1070, 2103, 1581, -1000, -1000, -1000, -1000, -1000,
	-1000, 78595, -29, 78595, 3786, 126298, -1000, 264, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 49358, 519, 48754, 602, 48150,
	455, 118645, -1000, -1000, -1000, -1000, 80985, -1000, 118056, 2588,
	3979, 3978, 1185, 3974, 3436, 1792, 3973, 1975, 1277, 3972,
	3968, 3966, 3965, 3961, 3960, 3959, 1496, 117467, 2819, 116878,
	1853, 135692, 1068, 93943, 99242, 2759, 116289, 1409, 1376, -1000,
	-1000, -1000, -1000, 3229, 3005, 2990, 1412, -1000, -1000, -1000,
	-1000, 64410, 7404, 6427, -1000, -1000, 8724, 115700, 67395, 99242,
	99242, -1000, -1000, -1000, -1000, -1000, -1000, 47546, 405, 46942,
	784, 115111, -1000, -1000, 65007, 3102, 1118, -1000, -1000, -1000,
	-1000, -1000, 114522, 46338, 379, 45734, 768, 126298, -1000, 3165,
	2124, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2357, 1680, 3781, 2848, 80386, 2207, 1472, 3550, 3227, 3224,
	1586, 2094, 3210, 3958, 2723, 3209, 3208, 3183, 3179, 3174,
	1337, 2721, 395, 2716, 32350, 3141, 1846, 45130, 1585, 1580,
	3162, 3156, 3803, 3648, 2085, 2140, 2116, 2152, 85118, 3957,
	3956, 3511, 3122, 3119, 2906, 3117, 1995, -1000, 3099, 1492,
	246, -1000, -1000, -1000, -1000, -1000, -1000, 246, 1535, -1000,
	-1000, -1000, -1000, -1000, 89824, -1000, -1000, 1398, -1000, -1000,
	1398, -1000, -1000, -1000, -1000, -1000, 1345, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1642, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2789, -1000, 2211, -1000, -1000, -1000, 2606, 3466,
	3466, 3466, 3582, 487, 481, -1000, 147, 914, 1169, -1000,
	-1000, 146035, -1000, -1000, 51774, 51774, 51774, 51774, 51774, 51774,
	51774, 51774, 2250, -1000, 773, -1000, -1000, 814, -1000, 772,
	687, 606, -1000, -1000, -1000, -1000, -1000, -1000, 770, -1000,
	-1000, -1000, -1000, -1000, -1000, 3756, -1000, 28589, -1000, -1000,
	-1000, 419, 769, 51774, -1000, -1000, 3835, 3833, 996, -1000,
	232, 982, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3161, 767, 765, -1000, 764, 763,
	762, 760, 759, -1000, 755, -1000, 752, 747, 744, 741,
	737, 736, 735, 731, -1000, 2154, -1000, -1000, -1000, -1000,
	-1000, -1000, 675, 674, 674, 674, -1000, 1056, -1000, -1000,
	-1000, 358, 673, 258, 660, 650, 648, -1000, 728, 726,
	713, 711, 708, 707, 706, 705, 704, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1055, -1000, -1000, -1000, -1000, 1370,
	-31, 126298, -1000, 514, -31, -1000, -1000, 702, -1000, 36596,
	36596, 36596, -1000, -1000, 2396, 51774, -1000, 2487, -1000, -23,
	-23, 922, 62614, -1000, 59611, 922, 526, 825, 68582, -1000,
	3098, -1000, -1000, 700, 231, -1000, -1000, -1000, -1000, 26114,
	3097, 126298, 126298, 126298, 99242, 99242, 99242, 126298, 3955, 3954,
	3351, 51774, -1000, -1000, 75656, 138632, 99829, 1344, -30, -1000,
	-1000, 3701, 73885, 75069, 3158, 138632, 3155, 3089, 138048, 3953,
	-1000, -1000, -1000, -1000, -1000, 3315, 3949, 3948, 3947, -1000,
	126298, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 259, 3313,
	-1000, -1000, 103351, 259, 3308, -1000, 259, 3301, -1000, 102764,
	-1000, -1000, 2349, 3296, -1000, -1000, 277, 3293, -1000, -1000,
	-1000, 274, 3291, -1000, -1000, 230, -91, 3286, -1000, -1000,
	-1000, -1000, -1000, -1000, 146035, -1000, -1000, -1000, 137459, -1000,
	3498, -1000, 126298, -1000, 51774, -1000, -1000, 3698, 1597, 3508,
	3625, -1000, -1000, -41, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2631, 2617, 1194, 2459, -1000, 3365, 1435, 35370, 3424,
	-1000, -1000, -1000, -1000, -1000, 222, 26114, 2980, -1000, -1000,
	126298, -1000, 126298, 2859, 2859, -1000, -1000, -1000, 3796, 3795,
	2859, 2859, 126298, 126298, -1000, -1000, -1000, -1000, -1000, -1000,
	3467, 3284, 1612, -1000, 2458, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2142, 3283, -1000, 2257, 3282, 2060,
	-1000, -1000, 2685, -1000, 142637, 1457, -1000, -1000, -1000, -1000,
	1842, 3280, -22, -1000, -1000, 2432, -1000, -1000, -1000, -1000,
	142429, -1000, 3025, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1770, -1000, -1000, 2228, 2052, -1000, 1351, 3277,
	-1000, 2847, 2847, 93354, 3302, 66798, 65007, -35, -1000, -1000,
	78595, -35, -1000, -1000, -1000, -112, -1000, 24912, 146035, -1000,
	-1000, -1000, -1000, 1900, 146035, 967, -1000, -1000, 3276, -1000,
	146035, 957, -1000, -1000, 3275, -1000, 2720, -1000, 3154, -1000,
	-1000, 2538, 2537, 1030, -1000, 3946, -1000, -1000, 3945, -1000,
	3944, 3938, 3933, -1000, 1730, 2092, 3932, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 92767, 2395, -1000, -1000, 1482,
	1008, 82181, -1000, 2535, 3624, -1000, 92178, 1066, -1000, 1019,
	2525, -1000, 102177, 1080, 2524, -1000, 3931, 3588, 2805, 1019,
	2523, -1000, -1000, -1000, -1000, -1000, 1054, -1000, 69758, -1000,
	69758, -1000, 1701, -1000, 133342, -23, 99242, 3756, -1000, -78,
	-1000, -1000, -1000, 1087, -1000, 63810, -1000, 63810, 106294, 82181,
	1008, 3088, 72112, 145827, -1000, 1028, -1000, -1000, 146035, -1000,
	-1000, -1000, 2718, -1000, -188, 2845, -1000, 82181, 66201, 3087,
	2717, -1000, 146035, -1000, -1000, -1000, -1000, 146035, -1000, -1000,
	-1000, 82181, 1482, -1000, 113933, 91589, -1000, -1000, 1485, 2689,
	-1000, -1000, -1000, 65007, 3086, 1352, 82181, 82181, 82181, -1000,
	113344, -1000, -1000, 2208, 1326, 3489, 2179, 99242, -1000, 2026,
	-1000, -1000, -1000, 3530, 3300, 126298, -1000, -1000, 3149, -1000,
	78008, 101590, -1000, 101003, -1000, 100416, -1000, 99242, -1000, 99242,
	-1000, 3929, 3927, 3924, -1000, -1000, 3921, -1000, 3920, 3523,
	-1000, 623, 44526, 146035, 3513, -1000, 3919, 2127, 3141, 146035,
	-1000, 3299, 1765, 1755, 126298, -1000, -1000, 126298, -1000, 126298,
	-1000, -1000, -1000, 2444, 1619, -1000, -1000, 2629, -1000, -1000,
	-1000, 1027, -1000, -1000, 99242, 99242, 99242, 99242, 1281, -1000,
	43922, -1000, -1000, 3120, 3918, 1688, -1000, 1987, -1000, 3085,
	3497, -1000, 3080, 1483, 1855, 220, 3838, 220, -1000, -1000,
	281, -1000, -1000, -41, -1000, 132755, -1000, 2606, -1000, 126298,
	-1000, 2615, 3133, 3139, 1861, 2437, 2735, -1000, 43318, 2711,
	55398, 2452, 147, -1000, -1000, 147, 147, 34162, -1000, -1000,
	35370, 914, 73885, 73885, 26114, 1363, 51774, 51774, 51774, 51774,
	51774, 51774, 51774, 51774, 51774, 51774, 51774, 51774, 51774, 51774,
	51774, 51774, 51774, 51774, 51774, 51774, 51774, 51774, 51774, 51774,
	51774, 51774, 51774, 51774, 51774, 51774, 51774, 51774, 51774, 51774,
	51774, 51774, 2181, 51774, 1343, 51774, 51774, 51774, 51774, 1979,
	-1000, -1000, 2009, 542, 2136, 687, -1000, -1000, -1000, 3758,
	3758, 3758, 661, 661, 661, 146453, 146453, 592, 3916, 814,
	-1000, 51774, -1000, 121, 63202, 51774, 26713, -1000, 481, 10331,
	2576, -1000, 480, 27347, -1000, -1000, -1000, 28589, 606, 42684,
	51774, 1040, 146035, -1000, -1000, 1437, 3777, 24307, 3163, 2899,
	686, 860, 858, 31716, 31082, 30448, 29814, 856, 850, 51774,
	51774, 51774, 51774, 51774, 51774, 51774, 51774, -1000, -1000, 3793,
	-1000, 3777, -1000, -1000, -1000, -1000, 3777, 1360, 1285, 3777,
	-1000, 3777, 3777, 9312, 9312, 42080, 41476, 40872, 56002, 40268,
	51774, 29210, 39664, 39060, -1000, 57814, 126298, -31, 3697, 51774,
	337, -1000, 143537, -1000, 337, 337, 685, -79, 146035, 2679,
	2679, 61420, 2604, 2258, 2258, 2258, -1000, 922, 18824, 922,
	111583, 2276, 922, 922, 216, 275, 478, 59014, 2487, 111583,
	796, 684, -13, -14, -15, -1000, -1000, -17, -18, -1000,
	-1000, 99242, 681, 26713, 26114, 215, 2118, -86, 2747, 2746,
	2745, 2743, -1000, 2740, 2394, -1000, -1000, -1000, 1903, -89,
	1341, 99242, 126298, 1477, -69, -1000, 138632, 5378, -94, -1000,
	1378, 212, 3777, -1000, -1000, -1000, -1000, -1000, 3915, 3914,
	-1000, 1053, 680, 676, 426, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 675, 674, 674, 674, -1000, 358, 673,
	258, 660, 650, 648, -1000, -1000, -1000, -1000, -1000, 3076,
	99242, 126298, 1402, 77421, 88650, -91, 99829, 138632, -42, -1000,
	-1000, 126298, -1000, -1000, -1000, 3913, -1000, 99242, -1000, -1000,
	99242, 259, 3273, -1000, 99242, -1000, 99242, 255, 3272, -1000,
	-1000, 126298, -1000, 99242, 99242, -1000, 126298, 126298, 126298, 138632,
	138632, 251, -1000, 99242, 914, -95, 1199, -41, -1000, -1000,
	-1000, -1000, 1398, -1000, 1925, -1000, -1000, -1000, -1000, -1000,
	-1000, 1428, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	996, -1000, -1000, -1000, -1000, 3772, 3767, -39, -1000, -1000,
	26114, -1000, 1970, -1000, -1000, -1000, -1000, 126298, 126298, -1000,
	-1000, 126298, 126298, -1000, -1000, -43, 1675, 567, 1336, -1000,
	84529, 2493, 3519, 3912, 2791, 3444, 1697, -1000, 1613, 647,
	-1000, 3604, 89824, 3645, 3664, 1359, -1000, 3074, -1000, -1000,
	-1000, 955, 1674, 1825, 1334, 1332, 89824, 2257, -1000, 73885,
	-1000, 2785, 3578, 1475, 1460, 1475, 1475, 1455, 1451, -1000,
	89824, 1817, 1330, 1328, 1318, -1000, -1000, 1705, 1678, -1000,
	-1000, 112757, 1557, -1000, 1317, 1316, 127472, 3715, 2789, 2284,
	847, 2044, -1000, 1429, 1315, 3072, -1000, -1000, -48, 3638,
	3655, 1359, -1000, 3070, 1314, -1000, -1000, -1000, 3577, 99242,
	26114, 1636, 1634, 1611, 1815, 1311, -32, -1000, 3636, 1676,
	-1000, 1482, 1482, 108648, 126298, 3736, 82181, -1000, 2562, -1000,
	-1000, -1000, 3549, 3548, -1000, -1000, 1310, 1308, -1000, 1095,
	7862, 3392, -1000, 138632, 1095, 1095, 2016, 3271, 2827, 1695,
	-1000, 2843, 917, 2842, -1000, -1000, -1000, 917, 78595, -35,
	126298, 210, -1000, 121, 51774, 51774, 121, 51774, 121, -1000,
	3613, 3268, 3265, 3909, -1000, -1000, -1000, -1000, -1000, 3908,
	2062, 2664, -1000, -1000, 645, 2522, 3060, 126298, 200, -1000,
	99242, -1000, 3696, 112170, -1000, 3263, 138632, 2257, 2519, -1000,
	-1000, 91000, -1000, 3262, 514, 2518, -1000, 611, 3907, 3260,
	-1000, 132168, -1000, 3498, 1338, 3259, 1116, 600, 3690, -1000,
	600, 70936, -1000, 126298, -1000, -23, 298, 83355, -96, -102,
	477, -1000, 126298, 126298, 3412, 2070, 2054, -1000, 1014, 65007,
	-1000, 65007, -103, -1000, -188, 2839, 1571, 65007, -1000, 1008,
	-124, 917, -1000, 917, -1000, 99242, 3138, -1000, 82181, 65007,
	-1000, 1008, 1008, 1008, -1000, -1000, -1000, -1000, 3904, 3903,
	3901, 3900, -1000, -1000, 1018, 99242, 126298, 99242, -1000, 2825,
	1690, -1000, 209, -1000, 138632, -1000, 138632, 126298, 99242, -1000,
	1018, 126298, 1018, 126298, 1018, 126298, 1018, 1018, -1000, -1000,
	-1000, -1000, -1000, 121, -1000, -1000, 146035, -1000, 51774, -1000,
	-1000, 1601, 3899, 1749, -1000, 3135, -1000, 3134, -1000, 23,
	-1000, -1000, 3792, 1961, -1000, 3830, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3898, 146035, -1000, 1981, -1000, -1000,
	-1000, -1000, 99242, 99242, 99242, 99242, 126298, 3386, -1000, 126298,
	3380, 3382, 99242, -1000, 3837, -1000, -1000, 89824, -1000, 2615,
	3133, -1000, -1000, -1000, -1000, -1000, -1000, 1543, 2359, -1000,
	2701, -1000, 1649, -1000, -1000, -1000, 146035, 56606, -1000, -1000,
	146035, 1921, -1000, 54794, 54190, -1000, -1000, 1795, 99242, 2765,
	-1000, 2765, -81, -1000, 143266, 2700, 99242, -39, 35370, -1000,
	-1000, -1000, -1000, -1000, 947, 1155, 1155, 1424, 1424, 1424,
	1424, 3608, 2363, 6428, 8195, 10370, 10370, 6092, 6092, 6092,
	6092, 6092, 10370, 7753, 661, 661, 7753, 7753, 7753, 7753,
	7753, 661, 661, 661, 10370, 10370, 10370, 661, 146453, 146245,
	12862, 51774, 51774, 1306, 1983, 542, 12433, 51774, 9914, 9914,
	9914, 9914, -1000, 1899, -1000, -1000, -1000, -1000, 3054, 644,
	56002, 56002, -1000, -1000, -1000, -1000, 27968, 51774, -1000, -1000,
	-1000, -1000, 38426, -1000, -1000, 142219, -331, 475, -1000, 208,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 474, -80, 123, -1000, 51774, 51774, 51774,
	473, -1000, 207, 51774, 126298, -1000, 139222, 795, -128, -1000,
	-111, 1480, -1000, 51774, -1000, -1000, 1304, -1000, 1302, 1301,
	1300, -1000, 643, 472, -1000, 206, -1000, 2261, 642, 639,
	51774, -1000, -1000, -1000, -1000, -1000, 142011, -1000, -1000, 141803,
	-1000, -1000, 141595, -1000, -1000, 141387, -1000, -1000, -1000, -1000,
	-1000, 145619, 17963, 17544, 17224, 7120, 16243, 15424, -114, 470,
	-116, 469, 946, 944, 468, 467, 463, -119, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-121, 459, -1000, 3053, -80, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 452, -1000, 448, -1000, 145411, -80, 446,
	6135, -1000, 56002, 56002, 56002, 56002, 442, -1000, 143118, -1000,
	145203, 37822, 37822, 37822, 440, 144995, 51774, -80, -122, -1000,
	-129, -1000, -1000, -1000, -1000, 575, -131, 1034, 36596, 60224,
	26114, -1000, 1034, 1034, 51774, -1000, 51774, 2709, -1000, -1000,
	-1000, -1000, 2707, 2419, 2679, 61420, -1000, -1000, -1000, -1000,
	111583, -1000, 3756, 3246, -1000, 111583, -1000, -1000, 126298, 514,
	-1000, 111583, 111583, 26114, 922, -1000, 922, 111583, 832, -1000,
	-1000, -1000, -1000, -1000, 439, 72709, 123, 204, 26114, 1019,
	-1000, -1000, 2820, 2820, 2820, 2820, 2820, 99242, -1000, -1000,
	138632, 1299, -37, -97, 2837, 2836, 3734, -279, -1000, 2164,
	-1000, 73885, -1000, 811, 1252, 26114, -1000, -1000, -1000, 637,
	-1000, 3777, 3777, -1000, 3777, 138632, 3051, 315, 2835, 2830,
	-1000, 2392, 266, -91, 138632, 3894, -1000, -1000, 259, -1000,
	99242, 259, 259, -1000, 99242, 99242, 2349, -1000, 277, -1000,
	274, -1000, -1000, -91, -1000, 1026, 35370, -1000, 1398, -1000,
	-1000, 1644, -1000, 2073, -1000, 1250, -1000, -1000, 35370, -1000,
	3415, -1000, 1764, -1000, -1000, -1000, -1000, 2780, 126298, 126298,
	99242, -1000, 109822, 126298, -1000, 2254, 138632, -1000, 2517, 131581,
	2482, 130994, 73885, -1000, -1000, 636, 976, 2699, 2696, 1113,
	126298, 126298, 2695, 130407, 129820, -1000, 3890, 126298, 2148, 51774,
	109822, 3575, 2390, 2592, 121, 121, -1000, 121, -1000, -1000,
	634, 1323, 99242, 99242, 126298, 138632, 99242, 2011, -1000, -1000,
	-1000, -1000, -1000, 90411, -1000, -1000, 1475, -1000, -1000, -1000,
	1475, -1000, 1475, 2257, 1973, 126298, 138632, 99242, 138632, 129233,
	2042, 128646, 2041, -1000, -1000, 2040, 1812, 126298, -1000, -1000,
	-1000, -1000, -1000, 1504, -1000, 847, 1298, 3050, 51774, 51774,
	2194, 121, 121, -1000, 121, 633, 26114, 2057, -1000, 3079,
	126298, 3828, 128059, 3821, 126298, 126298, 126298, 138632, 3455, 126298,
	-1000, -124, -36, -144, -1000, 894, 893, -112, -1000, 3736,
	-1000, 892, 2150, 126298, 138632, -1000, 127472, 7862, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2187, 2850, 1122, 126298, 1351,
	-1000, -1000, 1804, 1296, 1290, 89824, 2197, 1802, 1939, 138632,
	65007, 1015, 65007, 2811, -1000, -1000, 23702, -1000, 146035, 146035,
	-1000, 146035, -1000, 76832, 82181, 126298, -1000, -1000, 1062, 126298,
	83942, 977, 3258, 70347, -112, 1008, 1482, 3185, 1762, -144,
	630, 126298, -1000, -1000, 2257, 3254, 514, 2511, -1000, 138632,
	3688, 3250, 625, 3889, 3888, -1000, 99242, 2391, 2510, -1000,
	-1000, 126885, 3329, 847, 126298, 1034, 61420, 2037, -1000, 67994,
	1090, 126298, 1938, 245, -1000, -1000, -1000, 1, 126298, -1000,
	822, -1000, -1000, 298, 298, 1008, 65604, -142, -1000, 202,
	624, 891, 890, -1000, 5207, -1000, -188, -1000, 82181, 1014,
	65007, 3046, -188, 2829, 3044, -1000, -1000, 1025, -1000, 1401,
	2828, 1008, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -24, -1000, 1801, 1936, 126298, -91, -91,
	-57, -1000, -1000, 198, -37, -1000, 1018, -1000, 1018, -1000,
	1018, -1000, -1000, -1000, 146035, -1000, -1000, -1000, 1735, 1711,
	126298, -1000, 3130, -1000, 126298, -1000, -1000, 26114, 126298, 99242,
	26114, 99242, 3125, 3121, -1000, -1000, -1000, 126298, -1000, -1000,
	126298, -1000, -1000, -1000, -1000, -1000, -1000, 1158, -1000, 1921,
	2356, -1000, 606, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2609, -1000, -38, 34162, 924, -1000, -1000, 99242,
	-25, -39, 51774, 51774, 11391, 10415, 51774, 56002, 56002, -1000,
	51774, 9460, -1000, -1000, -1000, -1000, -1000, 3042, 605, 51774,
	73885, 7220, 7002, -1000, 433, 12176, 7753, -1000, 51774, -1000,
	6310, -1000, 432, 37218, -1000, 143955, -28, -143, -1000, 19443,
	-80, -148, -1000, -1000, 807, -1000, 3325, -1000, 51774, 144787,
	2531, 2066, 1926, 1760, 3777, 3820, 23097, -1000, 71524, 1035,
	2291, 141179, -1000, -1000, -1000, -1000, 73885, 73885, 51774, 51774,
	-1000, 51774, 51774, 51774, -1000, -1000, -1000, 3777, 932, -1000,
	-1000, -1000, 932, -1000, -1000, 1475, -1000, 1475, -1000, 51774,
	-1000, -1000, 3041, 51774, -1000, 73885, 73885, 56002, 56002, 56002,
	56002, 56002, 56002, 56002, 56002, 56002, 56002, 56002, 56002, 56002,
	56002, 56002, 56002, 56002, 56002, 56002, 56002, 2681, 56002, 3755,
	3755, 3755, 1072, -1000, 3118, 3041, 51774, 51774, 73885, 431,
	430, 428, -1000, 51774, -80, -1000, -1000, 8156, 604, -1000,
	2600, -1000, 2894, -1000, 51774, -1000, -155, -1000, 2487, -1000,
	-1000, 2894, 2894, -149, 146035, 61420, 61420, -1000, 599, 51774,
	2691, -1000, -1000, 794, -329, -1000, 887, -1000, -1000, -1000,
	-1000, -1000, -1000, 886, -1000, 514, -1000, -1000, -1000, 196,
	111583, 111583, 791, -1000, -156, -1000, -1000, -157, -1000, 3687,
	417, 26114, -1000, 1034, 5371, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2738, -279, 138632, 138632, 1800, 1799, 2324, -1000,
	2904, 3819, -1000, 3785, 803, 790, 134, 3777, 414, 411,
	409, -91, 138632, 138632, 1798, 1787, 74482, 138632, -1000, -1000,
	-1000, 259, -1000, -1000, -1000, 255, -1000, -1000, -1000, -1000,
	2769, -1000, -41, -1000, -1000, -1000, 51774, -1000, 987, -1000,
	-1000, 3495, 598, 1288, 1278, -1000, -159, -1000, 885, -1000,
	-1000, -1000, -1000, -1000, 2986, -1000, 3248, -1000, 2507, -1000,
	1105, 2506, 1754, -1000, 51774, 597, 2802, 596, 595, 3887,
	2224, 3885, 1115, 3243, 2349, 3241, 2349, -1000, -1000, -1000,
	960, -1000, 146035, -162, -1000, 2390, -1000, 594, 590, -1000,
	-43, 1667, 538, 1269, 1024, -1000, -1000, 51774, 51774, 110996,
	-1000, 499, 3481, -26, -1000, -1000, -1000, 1785, 1263, 1260,
	-1000, -1000, -1000, -1000, -1000, 2257, 1775, 1255, 1253, -1000,
	-1000, -1000, -1000, -1000, 2503, -1000, 126298, -1000, 3239, 126298,
	126298, 1023, -1000, 3190, 3189, 936, 126298, 51774, 51774, 144579,
	144371, -1000, 1021, -1000, -1000, 51774, -1000, -48, 1251, 3631,
	2489, 99242, -1000, 2349, 3237, 1241, -1000, 1240, -1000, -1000,
	-1000, 3632, 3628, 1246, -1000, 108648, 82181, 82181, 3736, 65007,
	-1000, -1000, -1000, 3769, -1000, -1000, -1000, -1000, 79787, -1000,
	-1000, 1095, 126298, 138632, 99242, 1829, -1000, -1000, 88650, 89237,
	126298, 2827, -91, 917, -1000, 2651, 917, 1015, 3040, -1000,
	2760, -1000, 1020, 99242, 3884, 408, -165, -49, 73885, -1000,
	-1000, -1000, -1000, 2482, 99242, 126298, 1321, 2800, 126298, 126298,
	3683, -1000, 2420, 550, 99242, 928, -1000, 3756, -1000, -1000,
	-1000, 126298, 36596, 108648, -1000, 3623, 99242, 3682, 3236, 1019,
	121, 99242, 3804, -1000, -1000, 3680, 99242, 3234, 2387, 2488,
	2643, 847, 82768, 1019, 2290, -64, -1000, 1938, 35974, 3476,
	-170, -1000, -1000, -1000, 1034, 70936, 61420, 51774, 3883, -173,
	-1000, -1000, -1000, -1000, -1000, 82181, 1008, 126298, 126298, 3882,
	82181, 82181, 82181, -52, 589, -1000, 884, 882, 881, -1000,
	-1000, -1000, -1000, -1000, -1000, 880, 878, 876, 873, 1014,
	-1000, -1000, -188, 65007, 1014, 65007, 121, -1000, 2306, 99242,
	65007, -1000, 22492, 126298, 2825, -1000, 79182, -1000, -1000, -1000,
	-1000, -1000, 1018, 3818, -112, -1000, -1000, -1000, 2200, 2451,
	2200, 1927, 1923, -1000, -1000, -1000, 2346, -1000, -1000, -1000,
	-1000, 2761, 3454, 26114, 3606, 9914, 51774, 51774, 7397, 6005,
	627, 9914, 51774, 51774, 73885, 5936, -175, 51774, 51774, -1000,
	51774, 786, 146035, -1000, 3817, 51774, 406, 403, -1000, -1000,
	-1000, 3774, -1000, -1000, -1000, 146035, 51774, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 402, -1000, 124, -1000, -1000, -1000,
	135103, -1000, 51774, 399, 3574, -1000, 398, 397, 11325, 321,
	140971, 140763, 140555, 388, -1000, -1000, 386, 385, 146035, 3118,
	146035, -1000, -1000, 1084, 1084, 1442, 1442, 1442, 1442, 3755,
	341, 969, 1049, 730, 730, 730, 701, 1072, 1072, 730,
	730, 730, 1072, 3037, 2676, 588, 7470, -1000, -1000, 146035,
	146035, 384, -1000, -1000, -1000, -80, 381, 8156, -1000, 2888,
	3573, 146035, -1000, 61420, 2888, 2888, -1000, -1000, 2419, 126298,
	146035, 61420, -1000, 3246, -1000, 20671, 20060, -1000, 26114, -1000,
	-1000, -1000, -1000, 3756, -1000, 72709, -1000, 587, -1000, 2,
	-1000, 5371, -1000, 871, -1000, -1000, 82181, 82181, 3881, 3878,
	-1000, 3814, 3813, 2158, 3812, 2820, -1000, -279, -154, 126298,
	126298, -1000, 2321, -1000, 783, 3877, 800, 26114, 377, -1000,
	-1000, -1000, -91, -91, 126298, 126298, 3026, 99242, 126298, 1383,
	-91, -1000, -1000, -1000, 3411, 146035, 3114, 2873, 2831, 126298,
	126298, -1000, 109822, 35370, 1553, 110409, 126298, 3233, -1000, 3228,
	-1000, 1113, 2355, 140347, 62017, -1000, 62017, 126298, -1000, -1000,
	-1000, -1000, 2046, 1519, 3876, 1176, -1000, 3533, 126298, -1000,
	126298, -1000, -1000, -1000, 109822, -1000, 126298, 126298, 99242, 126298,
	-1000, 138632, 3200, -186, 146035, -56, -1000, 870, -1000, 1444,
	-1000, 21887, 126298, 138632, 99242, 126298, 138632, 99242, 3225, 1088,
	126298, -1000, 1086, 2220, -1000, -1000, 3188, -1000, 146035, 144163,
	121, 51774, 3199, -192, 26114, -1000, 3811, 3810, 3221, 3545,
	-1000, 126298, 3809, 126298, 99242, 3407, -1000, -1000, -1000, 1016,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1774, 1235, 1231,
	2376, 2374, 2308, -57, 2197, 1015, -59, 586, -1000, 867,
	-1000, -1000, 866, 865, 1015, -1000, 82181, 65007, 3875, 514,
	-1000, 2784, -1000, 105705, 83942, 2339, -1000, -1000, 583, 126298,
	126298, 582, -1000, 121, -1000, 3874, 109822, 581, -1000, 2302,
	-1000, 779, -1000, -1000, 236, -195, 138632, 2257, 121, 99242,
	-1000, 1013, 514, 353, -62, -1000, 3323, 1109, 26114, 99242,
	3215, 2655, 847, 82768, -1000, 1338, 2735, -1000, -63, -1000,
	613, 121, 2290, -1000, -64, 146035, -1000, 863, 351, -1000,
	3406, -1000, -1000, -200, -1000, -1000, 5215, 5215, 82181, 65007,
	82181, 82181, 82181, 65007, 82181, -1000, 1014, 3679, -1000, -188,
	-1000, 2478, -1000, 1008, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 26114, 1666, -1000, 579, 577, -1000, -1000, -1000,
	-1000, 3454, 9914, 9914, 51774, 51774, 51774, 9914, 5936, -203,
	-1000, 9914, 9914, -80, -1000, -1000, 143955, -1000, -1000, -1000,
	146035, -1000, 21282, 2212, -1000, 140139, -1000, 34162, -1000, -1000,
	51774, 51774, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	56002, 3022, 576, 73885, -1000, -1000, 323, 1032, 51774, 53586,
	2487, 1032, 1032, -1000, -205, -1000, -1000, -1000, 3756, -1000,
	3756, 2, -1000, -1000, 3873, 26114, -1000, 82181, -1000, -1000,
	-1000, -1000, -1000, 3871, 3870, 2468, 3869, 3868, -1000, -1000,
	-1000, 3113, -141, -151, -1000, 703, -1000, 3866, -1000, -1000,
	155, 135, 138632, 3001, 133, 2824, -1000, 121, -1000, -1000,
	-1000, -1000, -1000, -1000, 2823, 3678, -1000, 2021, -1000, 126298,
	126298, -1000, 126298, -1000, 26114, 126298, 2926, 1282, -1000, 976,
	2678, 573, 56002, 1154, 99242, 954, 2870, 2860, -1000, 3712,
	3567, 2908, -210, -1000, 126298, 51774, 126298, -211, -216, 2467,
	-1000, -1000, 1151, 1279, 51774, 1147, -1000, -1000, -1000, 73885,
	568, 2349, 2349, -1000, -217, -219, -1000, -1000, -1000, 51774,
	1230, 126298, 34766, -1000, 3864, 3481, -1000, -1000, -1000, -1000,
	-1000, -1000, 126298, 126298, -1000, 126298, 126298, -1000, 51774, -1000,
	143747, 51774, 1227, -1000, -1000, -1000, 3808, 2349, 26114, 2349,
	-1000, 2349, 3545, 1172, 2413, 126298, 138632, 99242, 1908, 1908,
	3110, -1000, -1000, -1000, 2703, 2703, 82181, 65007, 65007, -1000,
	-65, 1015, -1000, 3677, 2202, 3861, -1000, -1000, -1000, -1000,
	2675, -1000, -1000, -1000, 126298, 2672, 2913, 62017, 551, 549,
	126298, 1010, -1000, -224, 83942, 977, 926, -1000, 69758, -1000,
	-1000, -1000, -1000, 514, -1000, 2764, 3676, -1000, 3807, 547,
	545, 126298, 2372, 544, 26114, 3449, 847, 82768, -1000, 3329,
	1938, -1000, 2475, 126298, 3442, -1000, 2735, 542, 1008, 541,
	1008, -1000, -225, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1364, 1014, -66, -1000, 968, 942, -1000, -1000,
	-1000, 99242, 99242, 51774, 51774, -1000, 9914, 9914, 9914, -1000,
	296, -1000, -1000, 2290, 3565, -1000, -67, 139931, 139723, 677,
	56002, 73885, -226, -1000, -1000, 126298, 146035, -71, -1000, 146035,
	540, 539, 454, -1000, -1000, -1000, 778, 662, -1000, -1000,
	-1000, -1000, 3859, -1000, -1000, -1000, 138632, 138632, 3857, -1000,
	138632, 138632, -91, 138632, 138632, 1768, -1000, 109235, 126298, -1000,
	-1000, 1754, 2863, -1000, -1000, 126298, 2483, -1000, -1000, -1000,
	1004, 51774, 7470, 56002, 536, 51774, -1000, 535, 532, 3675,
	3370, -1000, 2770, 2976, 2051, 62017, -1000, 3454, -1000, 139515,
	-1000, 1092, 2048, -1000, -1000, -1000, -1000, 146035, 56002, 3545,
	62017, -1000, -1000, 530, 529, 146035, 528, 862, 2996, -1000,
	-1000, -1000, -1000, -112, -112, -1000, 146035, 121, 146035, 527,
	3631, -1000, -1000, -1000, -1000, 2349, 99242, 861, -1000, -1000,
	-1000, 1225, -1000, -1000, -1000, -1000, 3855, 3854, 2975, 88650,
	-1000, -232, -1000, -1000, -1000, 2055, 121, 977, -1000, -1000,
	2339, 525, -1000, 992, 2798, 2798, -233, 62017, 62017, -239,
	2365, 2763, -1000, 295, 3674, 926, -1000, 3763, -1000, 1034,
	-1000, 3671, 3402, -1000, 121, -1000, 3804, 62017, -1000, 99242,
	62017, 2367, 2113, 2624, 82768, -1000, 2643, -1000, -1000, -240,
	126298, 1938, -1000, -1000, 82181, -1000, -1000, 3780, -1000, 2478,
	-1000, 126298, -1000, 126298, -1000, -1000, -242, -248, -1000, 2168,
	51774, 34162, -1000, -1000, 677, -249, -1000, -73, -1000, 3670,
	53586, 3853, 3852, 3849, -1000, -1000, -1000, -279, -279, -1000,
	-91, -91, -91, -91, 126298, -1000, 2010, -1000, 2482, -1000,
	-1000, 3212, -1000, 2879, 524, 139252, 7470, 2608, 126298, 16904,
	2257, 2257, -1000, 3657, 2964, -1000, -1000, 2194, 522, -1000,
	-1000, -1000, -1000, 924, 126298, 992, 2833, 99242, 7470, 1110,
	-250, 2200, 2200, 51774, 33558, 2210, -1000, 51774, -1000, -1000,
	3545, 65007, 138632, -1000, -1000, 138632, 2366, -1000, 2921, 3769,
	-1000, 2365, 126298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1092, -251, -256, -1000, -1000,
	3527, -1000, 3398, 2784, 121, -1000, -1000, -1000, 121, 3846,
	1013, 294, -258, 1109, -259, 99242, 1990, -1000, 847, -1000,
	2655, 1034, 3339, -1000, -261, -1000, -1000, -1000, -266, -267,
	-1000, -1000, 291, 52982, 52982, 52982, -80, -81, -1000, 126298,
	517, -1000, -1000, -1000, -1000, -1000, -1000, 128, -1000, -1000,
	3181, 872, -1000, 907, 1991, 290, 1128, 237, 25, -1000,
	-1000, -1000, 2908, -1000, 126298, -1000, -1000, -1000, 872, 514,
	-1000, 51774, 1092, -268, -1000, 1085, -269, -1000, 1081, -276,
	-1000, 2945, -1000, -277, 2349, -1000, -279, 251, 1908, 1012,
	3611, -1000, 2618, -284, -1000, -1000, 2051, 1092, 2194, 2441,
	-1000, 2202, 1010, -1000, -1000, -1000, -1000, 1092, 513, 2051,
	506, 1508, 847, -1000, -1000, 1475, 3449, 3337, 1358, 1008,
	-1000, -1000, -1000, 3226, -1000, 57210, 2350, 1906, 142847, 3226,
	3226, -1000, -1000, 138632, 126298, 992, 3594, -1000, 910, 908,
	1590, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1034,
	-289, -1000, 2608, 146035, 992, -1000, 2200, 2818, -1000, 2200,
	2942, -1000, 2195, -1000, -1000, -1000, -1000, 2927, -1000, 1850,
	3740, -1000, -1000, 992, 126298, 2194, 2051, 992, 1884, 1882,
	3845, 977, 2365, 2051, 62017, 2194, 62017, 2138, -1000, 126298,
	-1000, 2113, 1347, -1000, 1694, -1000, -1000, 1687, 3708, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -91, -1000, -1000, 857,
	-1000, 3361, -1000, 1137, 2193, 2193, -1000, -1000, 907, -1000,
	-1000, 505, -1000, 504, -1000, 138632, 2286, -1000, -1000, -1000,
	-1000, 992, 2194, 1034, -1000, 3843, -1000, 2365, -1000, 2194,
	-291, 992, -304, 2227, -1000, -1000, -112, 1990, -1000, 1673,
	70936, 1862, -1000, -1000, 2267, 52378, 51774, -1000, 3739, -1000,
	-1000, 2686, -1000, 2908, 51774, 51774, 251, 69170, 1034, 992,
	-1000, -1000, 2618, 992, 1092, 1034, 2051, -1000, 847, 1508,
	70936, -278, -1000, -1000, -1000, 146035, -1000, -1000, -1000, -1000,
	-311, -313, -1000, -144, 108648, -1000, 1034, -1000, 1034, 2051,
	-1000, 2194, 138632, 2138, -278, -1000, 2194, 1215, -321, -1000,
	-1000, 2194, 992, -1000, -1000, -1000, -1000, -1000, 502, -1000,
	992, 1034, 51774, 1034, -1000, -322, -1000, 2194, -1000,
}

var sqlPgo = [...]int{
	0, 4672, 4669, 4667, 4664, 4663, 4662, 4661, 4660, 4658,
	4656, 4654, 4653, 4652, 4651, 144, 4650, 4649, 4647, 4646,
	4645, 4644, 4643, 4641, 4639, 4637, 4636, 4635, 4634, 4632,
	4625, 4623, 4622, 4621, 4620, 4616, 4614, 4613, 4611, 4610,
	4608, 4606, 4604, 4603, 4602, 4601, 4598, 4597, 4596, 4595,
	4594, 4593, 4591, 4590, 4588, 4587, 4586, 4585, 4584, 4583,
	4582, 4581, 4580, 4579, 4577, 4576, 4574, 4572, 4571, 4569,
	4565, 4562, 4561, 54, 4559, 4558, 4556, 4554, 4553, 4552,
	4551, 4549, 4548, 4547, 4544, 4543, 4542, 4541, 4540, 4538,
	4536, 4535, 4532, 65, 4531, 301, 4529, 4527, 4523, 4522,
	4521, 4520, 4519, 4518, 4517, 4516, 4515, 4514, 300, 4513,
	140, 169, 4512, 4511, 4028, 4510, 4509, 299, 4508, 4507,
	4506, 4501, 4499, 306, 4497, 4494, 4493, 4492, 4491, 280,
	4490, 4488, 4487, 4486, 4485, 4483, 78, 135, 4482, 4481,
	206, 4477, 4474, 4472, 4471, 4469, 4468, 4466, 275, 281,
	4465, 4464, 4463, 261, 182, 4457, 296, 4456, 4455, 4452,
	4450, 4448, 4447, 4446, 4445, 4440, 4439, 4431, 4429, 4428,
	4425, 4424, 4423, 4422, 4421, 4420, 4419, 4412, 4410, 4409,
	4406, 4404, 4402, 4401, 4399, 4396, 4395, 4394, 4393, 4390,
	4389, 4388, 4387, 4378, 4376, 4374, 4373, 4372, 4371, 276,
	231, 127, 4370, 4367, 294, 286, 4366, 4364, 4363, 4362,
	4360, 3635, 4358, 4356, 4355, 4352, 4351, 4350, 4348, 4346,
	4343, 143, 1, 50, 4341, 4340, 95, 96, 84, 83,
	98, 101, 4336, 4335, 124, 4334, 133, 113, 4333, 116,
	108, 25, 18, 271, 260, 10260, 253, 4332, 4331, 4330,
	264, 201, 4329, 251, 4328, 4327, 4326, 4325, 4324, 4323,
	72, 55, 219, 4322, 4321, 150, 172, 191, 187, 184,
	185, 125, 58, 105, 93, 63, 47, 10, 91, 224,
	20, 9, 283, 4320, 282, 15, 151, 11, 33, 4319,
	4317, 4316, 4315, 4012, 115, 4314, 285, 257, 183, 4312,
	4310, 4305, 791, 4304, 4303, 52, 249, 213, 146, 117,
	39, 137, 4302, 156, 178, 31, 4300, 189, 136, 4299,
	4298, 97, 99, 9431, 12365, 4297, 4295, 120, 69, 235,
	4524, 190, 166, 209, 259, 128, 174, 173, 4294, 103,
	4292, 230, 229, 196, 225, 4291, 85, 4290, 3650, 90,
	199, 162, 5770, 4289, 4284, 4281, 94, 4280, 106, 4277,
	4276, 68, 17, 4, 2, 153, 41, 45, 3, 4275,
	34, 132, 51, 23, 4274, 26, 4271, 4268, 4261, 4256,
	48, 4245, 49, 167, 4243, 4241, 304, 4237, 110, 61,
	44, 4236, 42, 233, 4235, 236, 131, 4234, 4231, 272,
	192, 4228, 76, 238, 4227, 4226, 4223, 4221, 4220, 305,
	138, 13, 148, 4214, 4213, 152, 4212, 56, 256, 208,
	4211, 67, 4210, 4209, 188, 70, 149, 302, 194, 240,
	134, 247, 207, 243, 4208, 4206, 4204, 228, 4203, 4202,
	237, 160, 4199, 4198, 212, 308, 100, 46, 92, 254,
	87, 204, 168, 4197, 211, 4196, 4195, 303, 193, 232,
	37, 7, 6, 89, 111, 4193, 5, 244, 165, 248,
	122, 4190, 8077, 2077, 2732, 258, 4189, 163, 130, 81,
	123, 158, 284, 109, 4186, 4185, 2516, 4182, 4181, 4180,
	4179, 197, 4178, 4176, 4175, 155, 164, 215, 4174, 126,
	71, 53, 22, 171, 77, 287, 121, 234, 195, 269,
	4172, 4171, 4170, 202, 4169, 86, 252, 217, 4167, 210,
	267, 59, 4166, 274, 4165, 154, 670, 73, 157, 4164,
	239, 4163, 4161, 4160, 4159, 4158, 4157, 4156, 186, 242,
	4155, 4154, 4153, 32, 200, 4151, 277, 161, 263, 57,
	60, 198, 114, 811, 4149, 177, 227, 64, 8, 4146,
	75, 4145, 2222, 62, 4144, 0, 13941, 9918, 12662, 13743,
	4142, 5992, 4140, 4139, 4138, 226, 79, 4135, 4134, 4133,
	129, 4132, 82, 4131, 4130, 74, 4128, 28, 19, 21,
	29, 27, 577, 291, 4125, 4121, 170, 142, 180, 4120,
	289, 250, 4118, 4117, 4116, 4115, 104, 4113, 36, 4111,
	40, 4110, 4105, 43, 16, 30, 4104, 4100, 159, 4098,
	118, 218, 176, 4096, 4095, 175, 4094, 88, 147, 4093,
	4091, 278, 220, 222, 102, 4090, 298, 4089, 214, 4088,
	4087, 24, 4086, 4081, 268, 119, 112, 66, 262, 139,
	38, 4079, 221, 223, 4072, 4066, 179, 4063, 4059, 4054,
	295, 4052, 4051, 3629, 292, 4050, 35, 4045, 4038, 4036,
	14, 4035, 4034, 216, 3364, 4033, 4032, 12, 4030, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 631, 631, 631,
	632, 632, 633, 633, 633, 26, 51, 19, 20, 20,
	20, 20, 634, 634, 634, 634, 39, 27, 52, 32,
	32, 32, 32, 32, 224, 224, 224, 224, 25, 25,
	47, 47, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 630, 630, 270, 270, 269, 257,
	257, 258, 258, 259, 259, 635, 635, 271, 271, 271,
	272, 272, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 527, 527, 527, 558, 558, 558, 558, 560,
	560, 655, 655, 656, 656, 656, 656, 656, 139, 139,
	423, 423, 423, 61, 61, 61, 61, 61, 625, 625,
	226, 226, 226, 228, 228, 227, 227, 227, 227, 227,
	84, 84, 641, 641, 640, 639, 639, 639, 642, 642,
	642, 225, 225, 225, 135, 135, 135, 135, 135, 135,
	135, 135, 136, 136, 137, 137, 651, 651, 651, 229,
	229, 229, 231, 231, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 236, 18, 18,
	18, 118, 118, 118, 118, 118, 118, 118, 113, 113,
	562, 562, 563, 563, 220, 220, 221, 221, 221, 221,
	222, 222, 223, 223, 223, 76, 76, 233, 233, 235,
	235, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 64, 64, 64, 64, 64, 65,
	65, 65, 65, 65, 65, 66, 66, 66, 66, 66,
	66, 67, 67, 74, 74, 74, 74, 74, 74, 74,
	74, 201, 201, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 81, 81, 81, 81, 81,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 658,
	658, 659, 659, 660, 660, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 90, 90, 384, 384, 347, 347, 91, 91, 91,
	92, 92, 93, 93, 78, 78, 78, 621, 621, 622,
	623, 662, 662, 518, 518, 517, 517, 95, 95, 422,
	422, 96, 96, 96, 96, 96, 96, 97, 97, 97,
	97, 97, 97, 97, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 105, 105,
	105, 105, 105, 106, 106, 106, 103, 103, 103, 100,
	100, 100, 99, 99, 99, 104, 104, 104, 620, 333,
	333, 102, 102, 102, 101, 101, 101, 400, 400, 107,
	107, 107, 107, 348, 108, 108, 108, 108, 108, 108,
	108, 108, 111, 111, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 520, 520, 4,
	4, 263, 263, 262, 262, 262, 262, 5, 5, 5,
	266, 266, 265, 264, 109, 109, 109, 484, 484, 114,
	114, 114, 438, 438, 115, 115, 115, 115, 115, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 627, 627, 393, 393, 296, 296, 296,
	296, 127, 127, 127, 127, 128, 128, 128, 128, 129,
	129, 206, 206, 145, 145, 145, 145, 144, 144, 144,
	144, 144, 144, 144, 144, 68, 68, 68, 69, 69,
	70, 70, 71, 71, 72, 72, 73, 73, 73, 73,
	73, 148, 148, 31, 31, 31, 31, 149, 149, 652,
	652, 151, 147, 147, 147, 147, 147, 147, 147, 146,
	146, 150, 150, 150, 150, 152, 154, 154, 154, 154,
	154, 153, 153, 153, 153, 153, 155, 155, 552, 552,
	408, 408, 550, 550, 572, 572, 551, 551, 354, 354,
	354, 354, 354, 355, 355, 355, 561, 561, 561, 561,
	561, 561, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 207, 207,
	207, 208, 208, 213, 213, 214, 214, 214, 215, 215,
	215, 212, 212, 212, 209, 209, 210, 210, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 218, 218,
	216, 216, 217, 217, 664, 664, 663, 663, 219, 219,
	219, 219, 219, 182, 182, 182, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 409,
	409, 185, 185, 185, 169, 169, 157, 157, 157, 157,
	157, 157, 157, 157, 232, 232, 232, 232, 162, 162,
	162, 162, 162, 162, 162, 162, 163, 163, 163, 158,
	158, 171, 171, 171, 171, 171, 164, 164, 165, 165,
	165, 166, 166, 166, 166, 193, 193, 168, 168, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 159, 159,
	159, 159, 173, 173, 173, 173, 445, 445, 445, 199,
	199, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 196, 196, 196,
	196, 196, 196, 643, 643, 644, 644, 644, 189, 189,
	189, 189, 189, 189, 498, 498, 183, 183, 183, 183,
	188, 188, 188, 188, 191, 191, 191, 191, 428, 428,
	180, 180, 180, 181, 181, 181, 186, 186, 198, 187,
	385, 385, 184, 184, 190, 190, 190, 190, 192, 192,
	192, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	161, 161, 161, 161, 194, 194, 179, 179, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 665,
	665, 175, 175, 175, 174, 174, 174, 174, 177, 177,
	178, 178, 178, 178, 178, 178, 178, 176, 167, 197,
	624, 624, 618, 618, 618, 618, 618, 618, 618, 618,
	618, 618, 619, 619, 619, 619, 619, 626, 626, 119,
	119, 119, 119, 119, 119, 119, 130, 130, 130, 130,
	130, 130, 130, 133, 133, 120, 120, 120, 120, 120,
	120, 120, 123, 123, 121, 121, 121, 121, 122, 122,
	85, 85, 85, 85, 85, 17, 17, 17, 86, 86,
	287, 287, 241, 241, 241, 372, 372, 242, 242, 362,
	362, 362, 362, 237, 237, 238, 238, 239, 240, 240,
	87, 87, 666, 666, 666, 636, 636, 636, 637, 637,
	637, 637, 637, 637, 356, 356, 357, 357, 464, 464,
	464, 464, 464, 360, 360, 360, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 370, 371, 371, 363, 363,
	369, 368, 368, 367, 367, 366, 366, 364, 365, 365,
	365, 374, 374, 373, 376, 376, 375, 463, 581, 581,
	583, 583, 583, 583, 583, 583, 583, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 446, 446, 667, 667, 668, 669,
	579, 579, 579, 580, 575, 575, 576, 576, 576, 576,
	576, 358, 358, 359, 359, 359, 359, 577, 578, 391,
	391, 502, 582, 582, 584, 584, 586, 670, 670, 670,
	670, 670, 670, 671, 671, 671, 462, 462, 461, 461,
	460, 460, 382, 382, 587, 587, 587, 587, 588, 588,
	588, 588, 588, 591, 590, 589, 589, 589, 589, 589,
	89, 89, 89, 425, 425, 424, 424, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 203, 203, 299, 299, 299,
	83, 83, 83, 14, 14, 14, 14, 14, 14, 14,
	314, 314, 15, 15, 15, 15, 638, 638, 638, 88,
	88, 88, 88, 88, 88, 380, 380, 380, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 629, 629, 628, 628, 300, 300,
	673, 673, 94, 94, 94, 94, 94, 94, 94, 94,
	521, 521, 522, 522, 82, 82, 82, 82, 82, 447,
	447, 444, 444, 443, 443, 390, 390, 500, 500, 500,
	501, 304, 304, 305, 305, 260, 260, 260, 34, 33,
	24, 24, 28, 28, 29, 29, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 30, 30, 54, 54, 54,
	54, 55, 55, 55, 55, 58, 58, 59, 59, 53,
	53, 53, 53, 56, 56, 50, 50, 60, 60, 60,
	60, 60, 645, 647, 647, 646, 646, 650, 650, 650,
	650, 650, 650, 648, 648, 335, 335, 649, 649, 653,
	653, 654, 654, 126, 126, 131, 131, 131, 131, 131,
	132, 132, 132, 132, 134, 134, 134, 134, 143, 143,
	202, 202, 202, 202, 202, 202, 202, 62, 62, 62,
	62, 75, 75, 75, 75, 141, 675, 675, 675, 142,
	142, 142, 674, 674, 297, 297, 457, 457, 458, 458,
	676, 676, 459, 459, 459, 459, 459, 290, 289, 291,
	291, 292, 292, 80, 80, 80, 280, 280, 279, 281,
	281, 282, 282, 277, 277, 564, 564, 284, 284, 284,
	285, 285, 273, 273, 274, 274, 275, 275, 276, 276,
	288, 288, 559, 559, 677, 677, 117, 117, 117, 205,
	205, 346, 346, 346, 454, 454, 454, 383, 383, 311,
	311, 456, 456, 456, 456, 456, 421, 421, 421, 204,
	204, 398, 398, 411, 411, 412, 412, 514, 514, 413,
	124, 124, 125, 125, 140, 140, 245, 245, 243, 243,
	243, 243, 243, 243, 243, 243, 250, 250, 251, 251,
	252, 252, 253, 254, 254, 254, 254, 401, 401, 255,
	255, 255, 244, 244, 244, 246, 246, 246, 246, 246,
	246, 246, 249, 249, 249, 249, 256, 256, 256, 248,
	248, 598, 598, 598, 600, 600, 602, 602, 601, 601,
	597, 597, 599, 599, 672, 672, 427, 427, 427, 379,
	381, 377, 377, 378, 378, 388, 388, 386, 387, 387,
	389, 389, 499, 499, 499, 261, 261, 261, 418, 418,
	418, 418, 419, 419, 450, 450, 448, 448, 448, 448,
	449, 449, 451, 451, 451, 452, 452, 453, 453, 415,
	415, 416, 416, 417, 417, 417, 417, 480, 480, 247,
	247, 247, 395, 395, 395, 396, 396, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 471, 471,
	469, 469, 469, 469, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 504, 505, 505, 397, 397, 506, 455,
	455, 616, 616, 616, 617, 617, 497, 497, 507, 507,
	507, 507, 507, 507, 495, 495, 496, 496, 515, 516,
	516, 431, 431, 431, 431, 429, 429, 432, 432, 432,
	432, 432, 430, 430, 508, 508, 508, 508, 420, 420,
	509, 509, 509, 509, 510, 511, 511, 512, 512, 465,
	466, 466, 523, 523, 523, 523, 525, 394, 394, 394,
	394, 394, 574, 573, 573, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 540, 540, 540, 540,
	540, 540, 540, 526, 526, 526, 526, 526, 530, 530,
	530, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 531, 531, 536, 536, 537, 537, 537, 532,
	533, 538, 538, 538, 538, 678, 678, 542, 542, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 528, 528,
	528, 535, 535, 535, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 439, 439, 441,
	441, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 474, 474, 474, 474, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 592, 592, 592, 592, 592, 592, 592, 592, 476,
	476, 595, 595, 596, 596, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 603, 603, 604, 604,
	606, 606, 607, 607, 608, 609, 609, 609, 610, 611,
	611, 605, 605, 612, 612, 612, 612, 613, 613, 614,
	614, 614, 614, 614, 615, 615, 615, 615, 615, 486,
	486, 487, 487, 493, 493, 493, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 353, 353, 352, 301, 301, 301, 301, 301, 301,
	406, 406, 404, 404, 404, 407, 407, 405, 405, 403,
	403, 402, 402, 483, 483, 481, 481, 485, 485, 433,
	433, 541, 541, 541, 541, 541, 541, 541, 541, 434,
	434, 434, 442, 435, 435, 436, 436, 436, 436, 436,
	477, 478, 437, 437, 437, 479, 479, 488, 492, 492,
	491, 490, 490, 489, 489, 467, 467, 468, 468, 414,
	414, 679, 679, 410, 410, 513, 513, 513, 513, 350,
	350, 399, 399, 349, 349, 341, 341, 342, 342, 342,
	342, 392, 392, 494, 494, 543, 543, 544, 544, 545,
	545, 546, 546, 547, 548, 549, 482, 482, 322, 321,
	308, 309, 320, 319, 318, 307, 310, 315, 316, 317,
	312, 313, 329, 328, 327, 278, 283, 334, 336, 336,
	339, 339, 340, 338, 337, 337, 324, 325, 326, 519,
	306, 343, 343, 344, 344, 344, 345, 345, 345, 345,
	302, 302, 303, 303, 330, 330, 331, 332, 332, 323,
	323, 323, 293, 293, 293, 294, 294, 295, 295, 557,
	557, 554, 554, 554, 555, 555, 555, 556, 556, 556,
	556, 553, 553, 553, 553, 553, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	566, 566, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	568, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 571, 571,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 3, 3, 0, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 9, 2, 7, 2,
	1, 1, 1, 3, 3, 0, 3, 1, 3, 1,
	1, 3, 2, 5, 0, 7, 5, 2, 0, 1,
	2, 3, 1, 1, 2, 2, 2, 2, 1, 2,
	3, 3, 4, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 6, 3, 8, 5, 3,
	4, 3, 3, 4, 3, 4, 4, 4, 3, 5,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 4, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 10, 5, 1, 3, 3,
	1, 1, 0, 2, 0, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 4,
	3, 1, 2, 3, 2, 2, 2, 4, 6, 3,
	1, 2, 2, 7, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 7,
	4, 7, 8, 8, 9, 11, 11, 6, 2, 6,
	9, 4, 7, 7, 10, 7, 10, 10, 10, 13,
	5, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 4, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 2, 1, 2, 2,
	2, 9, 2, 1, 0, 1, 1, 0, 1, 2,
	0, 2, 2, 0, 2, 2, 2, 2, 1, 2,
	3, 3, 4, 4, 4, 4, 3, 3, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	3, 5, 7, 3, 3, 3, 4, 8, 6, 4,
	5, 5, 5, 3, 0, 1, 1, 1, 4, 4,
	3, 4, 4, 3, 4, 4, 1, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 5, 7,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 6, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 7, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 12, 15,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 1, 1, 1, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 3, 6, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	10, 11, 9, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 6, 1,
	3, 1, 2, 0, 1, 2, 3, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 3, 0,
	4, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 2, 3, 1, 4, 2, 3, 2, 2,
	4, 7, 3, 4, 6, 5, 7, 5, 5, 3,
	3, 0, 2, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 8, 11, 5, 4, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 16, 19, 15, 18, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 14, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 7, 10, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 636, -110, -107, -76, -74, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -61, -63, -77,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-68, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 454, 466, 421, 147,
	444, 426, -150, -151, 485, -62, -75, -142, -141, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -83, -79, -90, -84, -78,
	-81, -657, 106, -599, -98, -101, -134, -661, 168, 232,
	-120, -121, -122, 386, -128, -129, 447, -131, -132, -133,
	450, 169, -70, -69, 162, -243, -245, -147, -146, -148,
	-206, -157, -158, -159, -160, -161, -163, -164, -166, -193,
	-167, -168, -169, -170, -171, -172, -176, -196, -173, -174,
	-175, -178, -177, -179, -184, -180, -181, -182, -183, -185,
	-186, -188, -189, -190, -191, -192, -194, -195, 490, -187,
	-197, -165, -198, 555, 52, 506, 85, 152, 458, 21,
	-7, -8, -9, -10, -11, -12, -13, -17, -16, -60,
	-4, -5, -80, -82, -85, -86, -87, -94, -88, -89,
	-598, -99, -100, -103, -105, -106, -102, -104, 445, 607,
	-246, -244, 633, 612, 571, -162, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -46, -51, -48, -49,
	-47, -50, -52, -53, -54, -55, -56, -57, -58, -59,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -45, -19, -20, -32, 594, 603, -249, -247,
	-248, -256, 477, 579, 528, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, -348, 2, -324, -330, -331, -332, -323, -293, -568,
	-571, 4, -565, -569, 175, 242, 347, 21, 22, 24,
	23, 25, 26, 27, 28, 30, 31, 41, 43, 44,
	46, 47, 48, 49, 50, 51, 52, 56, 58, 62,
	63, 64, 65, 66, 67, 71, 76, 77, 82, 83,
	84, 85, 86, 87, 88, 89, 95, 92, 93, 94,
	96, 98, 100, 101, 102, 103, 104, 105, 107, 108,
	109, 111, 112, 113, 121, 122, 123, 124, 125, 127,
	133, 128, 134, 137, 132, 136, 138, 140, 141, 142,
	145, 146, 147, 149, 150, 151, 153, 154, 155, 157,
	158, 160, 161, 162, 165, 163, 166, 164, 167, 168,
	169, 170, 173, 181, 182, 183, 188, 190, 191, 192,
	194, 195, 198, 199, 200, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 217, 219, 220, 221, 222,
	223, 224, 225, 231, 232, 234, 235, 236, 237, 238,
	243, 244, 245, 249, 255, 256, 260, 261, 262, 264,
	268, 269, 270, 271, 272, 273, 275, 277, 276, 279,
	282, 283, 286, 287, 288, 289, 290, 291, 295, 296,
	292, 297, 298, 300, 301, 304, 302, 305, 306, 303,
	307, 310, 311, 312, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 308, 309, 324, 322, 326, 327, 328,
	329, 330, 345, 340, 341, 342, 334, 335, 331, 336,
	332, 333, 337, 338, 344, 339, 349, 350, 351, 352,
	355, 229, 248, 357, 358, 361, 363, 380, 366, 367,
	368, 371, 372, 375, 378, 379, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 391, 392, 394, 395, 396,
	398, 399, 400, 402, 404, 405, 407, 408, 409, 411,
	412, 413, 414, 415, 416, 417, 418, 420, 421, 423,
	422, 424, 426, 428, 429, 430, 436, 437, 444, 438,
	440, 441, 442, 443, 445, 446, 447, 448, 449, 450,
	452, 453, 454, 456, 457, 458, 459, 460, 462, 464,
	465, 469, 470, 471, 487, 488, 509, 466, 467, 468,
	472, 473, 474, 475, 476, 480, 478, 479, 481, 482,
	483, 485, 486, 489, 490, 492, 493, 494, 495, 496,
	497, 498, 501, 503, 504, 505, 506, 507, 527, 508,
	510, 514, 515, 516, 517, 511, 512, 526, 519, 520,
	521, 523, 524, 529, 530, 531, 532, 533, 534, 536,
	537, 539, 547, 559, 548, 549, 550, 552, 555, 556,
	557, 558, 545, 560, 561, 564, 565, 569, 566, 570,
	567, 568, 571, 573, 576, 577, 578, 584, 583, 585,
	586, 587, 589, 590, 595, 596, 598, 599, 600, 37,
	53, 54, 57, 59, 61, 72, 73, 74, 78, 129,
	130, 159, 171, 172, 184, 201, 202, 214, 216, 226,
	227, 228, 250, 251, 253, 258, 280, 354, 356, 373,
	377, 393, 397, 401, 403, 419, 461, 499, 513, 518,
	540, 541, 542, 543, 551, 553, 579, 580, 581, 588,
	597, -348, 2, -324, 364, -317, 2, -293, -293, 404,
	29, 2, 29, 392, 479, 531, 533, 2, -627, -393,
	524, 2, 29, -296, -293, 106, 212, 477, -317, 2,
	-627, 212, -393, 26, 524, 2, -293, 2, 378, 23,
	28, 69, 80, 102, 145, 170, 193, 198, -660, 380,
	412, 464, 481, 526, 537, 552, 2, 583, 301, 478,
	528, 242, 124, 557, 472, -638, 469, 470, 378, 410,
	456, 215, 572, -297, 2, 466, -293, 301, 2, 636,
	98, 77, 461, 482, -153, 2, 291, 548, -154, -155,
	-152, 540, -552, 472, 456, 324, -293, 636, 636, 636,
	29, -306, 2, -293, -306, 2, -211, 2, -306, -663,
	-218, -217, -216, 22, 437, 183, 273, 196, 233, 329,
	407, 194, 50, -211, 2, 528, 242, 472, 124, 524,
	636, 636, 2, 528, 383, 583, 478, 124, 416, 242,
	557, 198, 145, 28, 71, 48, 534, 611, 472, -638,
	608, 609, 301, 131, -625, 2, -618, 4, -569, -565,
	-342, 478, -341, 528, 534, 124, -332, -323, 625, -331,
	636, 636, 636, 636, 2, 261, 262, 414, 413, 482,
	483, 29, 636, 636, 636, 636, 469, 2, 170, 23,
	28, 69, 97, 102, 131, 193, 198, 369, -658, 380,
	412, 481, 526, 530, 537, 552, -637, 508, 71, 472,
	-636, -638, 301, 557, 145, -443, 124, 291, 210, 565,
	533, 531, 563, 137, 249, 568, 567, 636, 636, -111,
	2, 633, 33, 32, -110, -114, 147, 485, -236, 528,
	254, 2, -293, 636, 636, 636, 2, 261, 262, 469,
	470, 29, 636, 636, 196, -618, 524, 2, 636, 636,
	636, 2, 29, 261, 262, 469, 470, 254, 2, 71,
	474, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 2, -200,
	482, 508, 222, 49, 48, 77, 29, 411, 82, 384,
	125, 131, 154, 558, 213, 242, 243, 269, 97, 98,
	-445, 46, 262, 71, 261, 470, -643, 469, -498, 529,
	473, 479, 523, 89, 273, 466, 548, 550, 106, 573,
	457, 600, 416, 417, 521, 430, 519, 292, 163, 197,
	4, 124, 324, 456, 484, 277, 276, 559, 540, 291,
	465, 387, 87, 636, -672, 2, 528, -674, 2, 548,
	548, 2, -674, 2, -674, 2, -674, 2, -675, 548,
	597, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, -244, -246, -245, 636, 636, 636, 636, 636, 636,
	636, -200, 482, 2, 77, 29, 29, -386, -388, 562,
	252, 156, 370, -243, -245, 2, -598, 559, 482, -550,
	2, -472, -572, -474, 623, 624, 616, 525, 70, -352,
	346, 601, -486, 131, 563, 364, -571, -475, -488, 159,
	380, 461, -407, 8, 9, 5, 6, 7, -302, -476,
	-482, 554, 174, 353, -345, 637, 10, 633, -595, -245,
	-487, 38, 216, 68, -554, -344, -303, -526, 253, -343,
	-323, -592, -593, 4, -565, -566, -555, -529, -537, -533,
	-534, -540, -293, -568, 80, 115, 116, 114, 119, 118,
	294, 293, 120, 117, 484, 572, 69, 37, 226, 227,
	258, 354, 228, 78, -594, 146, -567, 250, 251, 499,
	54, 419, 184, 130, 129, 356, 59, 57, 580, -538,
	126, 540, 541, 542, 543, 201, 202, 61, 171, 172,
	377, 401, 518, 551, 553, 214, 280, 45, 110, 197,
	247, 230, 257, 259, 263, 281, 284, 325, 343, 348,
	374, 376, 455, 491, -678, 581, 513, 72, 73, 189,
	-600, 422, -601, -317, -600, 636, 636, 638, 636, -377,
	-379, -381, 2, 29, 143, 633, 2, -503, 2, -504,
	-508, -245, 274, -507, 633, -505, 631, -324, 365, -596,
	462, -592, -593, -302, -323, -344, 4, -565, -567, 635,
	-382, 633, 124, 472, 528, 81, 242, 97, 170, 198,
	-438, 633, -293, 29, 364, 544, 638, -627, -393, -378,
	409, -484, 633, 364, 367, 196, 367, -627, 63, 305,
	2, 2, 2, 2, 2, 226, -293, 528, 123, 2,
	272, 2, 2, 2, 2, 2, 2, 2, -400, 226,
	2, -324, 583, -400, 226, 2, -400, 226, 2, -444,
	2, 91, -307, 226, 2, -293, -333, 226, 2, -328,
	-330, -339, 226, 2, -336, -293, -560, 226, 2, -558,
	4, -565, 120, 484, -472, 2, -140, 2, 63, -293,
	583, 2, 487, 2, 633, -153, 2, 74, 548, 45,
	482, -154, 2, -458, 2, -459, -289, -290, -291, -515,
	-292, 260, 408, 418, 604, 135, 346, 600, -652, 196,
	615, 544, -550, -550, -550, -408, 635, -213, 56, -306,
	-664, -663, -664, -548, 29, -543, 8, -544, 623, 624,
	-548, -548, -664, -664, 2, 2, 2, 2, 2, 2,
	-508, 226, -324, 2, -321, -553, 4, -565, -569, -566,
	-570, -568, 29, 32, 33, 34, 36, 38, 39, 40,
	42, 60, 68, 69, 75, 79, 81, 91, 97, 106,
	114, 115, 117, 116, 118, 119, 120, 131, 135, 139,
	143, 144, 148, 152, 156, 174, 176, 189, 193, 196,
	212, 215, 218, 233, 246, 252, 254, 274, 278, 285,
	293, 294, 346, 353, 359, 364, 365, 369, 370, 390,
	406, 425, 451, 477, 484, 502, 522, 528, 538, 544,
	546, 554, 562, 563, 572, 574, 582, 591, 592, 593,
	594, -571, 80, 2, -508, 226, 2, -327, 226, -508,
	-330, 2, -307, 2, -472, -631, 536, 166, 438, 2,
	-349, 226, -324, -326, -330, -328, 2, 2, 2, 2,
	-472, 2, -562, 2, -557, 10, -556, 5, 4, -565,
	-569, -566, -475, 2, -486, 29, -336, 2, -558, 226,
	2, 29, 29, 583, 409, 254, 544, -399, -341, -342,
	638, -399, -549, 4, 8, -392, -293, 635, -472, 2,
	-140, -123, 2, 189, -472, 226, 2, -140, 226, 2,
	-472, 226, 2, -140, 226, 2, -293, 2, -639, 2,
	-562, 226, 226, -293, 2, 305, 2, 2, 552, 2,
	102, 528, 123, 2, 442, -659, 464, 556, 2, 2,
	2, 2, 2, 2, 2, 528, -312, 2, -293, 189,
	-517, 254, -336, 226, -337, 2, 478, -673, 422, -558,
	226, 2, 583, -328, 226, 2, -328, 242, 256, -307,
	226, 2, 533, 531, 533, 531, 196, 2, 254, 2,
	254, 2, -509, 2, -510, -504, -511, 631, 365, -520,
	2, -519, -556, 579, -111, 633, -111, 633, 482, 633,
	-562, -324, -324, -472, 2, -140, -123, 2, -472, 2,
	-140, 2, -293, 2, -137, -562, -136, 633, 196, 573,
	-293, 2, -472, 2, -140, -123, 2, -472, 2, -140,
	2, -236, 189, 2, 124, 528, -200, 2, 189, 574,
	2, 8, 2, 233, -232, -562, 473, 181, 417, 2,
	487, 2, 488, 77, -445, 600, 77, 196, 2, 196,
	2, -428, 2, 594, 409, 196, 2, 2, -624, 2,
	364, 196, 2, 196, 2, 196, 2, 196, 2, 196,
	2, -199, 483, 549, 527, 413, 262, 2, -140, 591,
	-123, 262, 261, -472, 591, 2, -644, 189, 470, -472,
	2, 547, 271, 164, 196, -428, 2, 196, 2, 196,
	2, 5, 2, 43, 414, 509, 2, 260, 408, 509,
	2, 507, 2, -324, 528, 583, 478, 124, 29, 2,
	469, 2, 2, 92, 93, 196, 2, 196, 2, 211,
	196, 2, 430, 196, 528, -409, 635, -409, 600, 2,
	-420, -508, -457, -458, -457, 544, -386, -388, -200, 487,
	2, -250, -418, -252, 189, -448, -449, -253, 285, 176,
	359, -254, -427, 29, 143, -427, -427, 63, 634, 634,
	-652, 559, 11, 12, 79, 43, 623, 624, 625, 626,
	187, 627, 628, 621, 622, 620, 613, 614, 618, 266,
	267, 99, 617, 615, 90, 299, 463, 177, 178, 179,
	180, 439, 240, 35, 241, 14, 15, 16, -352, 34,
	369, 284, 601, 230, 491, 616, 17, 18, 19, 257,
	259, 348, 53, 233, -301, 380, -351, 525, 70, -472,
	-472, -472, -472, -472, -472, -472, -472, 376, 633, -414,
	-467, 631, -245, 633, 633, 633, 633, -549, -245, -472,
	-486, 634, -405, 633, -245, -486, -481, 633, 461, 631,
	633, -489, -472, 5, 5, 5, 633, 635, -603, 595,
	189, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 403, -531, 633,
	-530, 633, -530, -530, 584, -528, 633, 603, 596, 633,
	-528, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 584, 534, 638, -600, -382, 633,
	-410, -513, -472, 625, -410, -410, 364, -402, -472, 110,
	-431, 263, 325, 197, 281, 455, 247, -469, 637, -469,
	-497, 603, -245, -505, -323, -245, -507, 633, -503, -497,
	-112, -549, -95, -108, -117, -140, -156, -204, -205, 625,
	-324, 633, 196, 633, 635, -553, 196, -392, -307, -336,
	-324, -343, -344, -349, -318, -293, 2, 2, 142, -402,
	-618, 557, 472, 29, -560, -296, 544, 39, -483, -523,
	-524, -574, 637, -573, -526, -536, -532, -535, 393, 397,
	-555, 57, 580, -538, 253, 4, -565, -567, 250, 251,
	499, 54, 419, 184, 130, 129, 356, 59, 540, 541,
	542, 543, 201, 202, 61, 581, 513, 72, 73, -618,
	557, 472, 29, 478, 189, -560, 189, 196, -560, 2,
	2, 159, 2, 2, 2, -293, -271, 638, 67, 448,
	159, -400, 226, -271, 159, -271, 159, -350, 226, -349,
	-271, 159, -271, 638, 159, -271, 638, 159, 635, 638,
	159, -560, 2, -444, -552, -402, 39, -458, 2, 131,
	4, 5, -676, 638, 283, -355, 298, 345, 221, 365,
	598, 357, 135, -561, 5, 4, -482, -494, 131, 291,
	253, -543, -545, 9, -546, 623, 624, -551, -550, 113,
	635, -553, -214, 248, 41, -306, -306, -664, -664, 8,
	8, -664, -664, -306, -306, -268, 440, 485, 379, -267,
	25, 30, 147, 244, 330, 577, 165, -367, 245, 445,
	-364, 383, 159, 503, 566, -631, -634, 468, 536, 166,
	438, 94, 357, 485, 379, 440, 159, -424, -426, 39,
	122, 330, 378, 64, 236, 303, 304, 506, 446, 588,
	159, 485, 379, 440, 379, -15, -282, 25, 147, -284,
	-279, 485, 30, -634, 103, 440, 612, 607, 445, 389,
	520, 406, -634, -631, 279, -633, 590, 344, -270, 503,
	566, -631, -634, 468, 440, -269, -369, -364, 383, 159,
	637, 25, 147, 440, 485, 379, -655, -656, 30, -263,
	-262, 25, 147, 485, 569, -266, 233, -265, 25, -149,
	-129, -148, 445, 485, -149, 2, 440, 379, -628, -314,
	-597, 233, 594, 159, -314, -314, -508, 226, -648, 189,
	2, -641, -136, 275, 5, 10, -562, -136, 638, -399,
	638, -553, 625, 470, 469, 159, 159, 159, 159, 262,
	189, 346, 346, 594, 2, 2, 2, 2, 2, 198,
	-636, -660, 2, 2, -324, 226, -384, 364, -621, -622,
	-662, 528, -223, 594, -562, 346, 45, -327, 226, 2,
	-330, 583, -628, 346, -329, 226, -324, 39, 633, 346,
	2, -444, 2, 242, -597, 346, -509, -346, -324, -504,
	-346, 485, -317, 39, -469, -324, 634, 638, -520, -520,
	-562, -223, 196, 633, -236, 594, 594, 262, -516, 638,
	-515, 233, -563, -562, -137, -562, 443, 196, 262, -562,
	-621, -307, 2, -324, 2, 528, 264, -136, 196, 233,
	-223, -562, -562, -562, -552, 29, 488, 2, -199, 483,
	549, 93, 488, 2, -324, 528, 124, 242, 83, -648,
	189, 2, -293, -626, 189, -619, 456, 472, 557, -618,
	-324, 124, -324, 124, -324, 124, -324, -324, 2, 2,
	2, 2, 2, 88, 2, -140, -472, 2, 88, 2,
	48, 504, -644, 189, 2, 547, 2, 547, 2, -293,
	-293, -293, 359, 508, 283, 594, -324, -324, -324, -325,
	-330, 473, 529, 558, 470, -472, 2, -665, 2, 196,
	189, 2, 528, 242, 528, 242, 124, 196, 77, 124,
	29, 196, 528, 467, 635, 4, -271, 638, -297, -250,
	-418, -552, -419, -418, -251, -250, -253, 189, 418, 567,
	330, 489, 268, -449, -448, 29, -472, -453, 183, 329,
	-472, -451, -474, 623, 624, -544, -546, -401, 357, -244,
	-244, -244, -389, -499, -472, 406, 242, -551, -652, -525,
	-523, -523, -322, -553, 540, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, 284, 230, 491, 53, 233, -472, 544, -472, -472,
	-472, -472, 322, 346, 353, 554, 174, 564, 143, 357,
	-679, 522, 42, -479, -245, -406, 633, -493, 36, 502,
	29, -486, 633, 2, -467, -472, -468, -353, -351, -293,
	623, 624, 625, 626, 627, 628, 613, 614, 615, 14,
	15, 16, 618, 622, 620, 621, 187, 99, 617, 299,
	463, 90, 177, 178, 179, 180, 266, 267, 17, 18,
	19, 35, 616, -403, -402, -402, 634, 582, 29, 143,
	625, 2, 634, 638, 39, 634, -472, -403, -485, -481,
	-402, -492, -491, 591, -439, -440, 599, 308, 127, 224,
	306, -441, 476, -547, 8, -553, 625, -604, 182, 215,
	633, 634, 2, 634, 2, 634, -472, 2, 634, -472,
	2, 634, -472, 2, 634, -472, 2, 634, 2, 634,
	2, -472, -472, -472, -472, -472, -472, -472, -402, 8,
	-547, -547, 540, 540, -547, -547, -547, -539, 393, 394,
	395, 396, 286, 287, 288, 289, 397, 398, 399, 400,
	314, 315, 316, 317, 310, 311, 312, 313, 318, 319,
	320, 321, 206, 207, 208, 209, 202, 203, 204, 205,
	-539, -433, 2, -541, -402, 4, 599, 308, 127, 224,
	306, 476, 5, -433, 2, -434, 2, -472, -402, -435,
	-473, -474, 623, 624, 616, -352, -436, 2, -472, -403,
	-472, 60, 278, 546, -437, -472, 196, -402, -402, 2,
	-402, 2, -475, 2, -601, 39, -402, -395, 638, 196,
	39, 4, -395, -395, 633, 634, 638, -432, 219, 302,
	297, 256, -432, -503, -431, 263, -429, 374, -429, -429,
	-497, -308, 631, 639, -553, -497, -496, -495, 39, -317,
	371, -497, -497, 635, 634, -496, 632, -616, 633, 636,
	636, 636, 636, 636, -324, 633, -402, -553, 635, 510,
	2, 634, 257, 257, 257, 257, 257, 364, 462, 634,
	544, -620, -333, -339, 479, 529, 594, -560, -110, 366,
	634, 638, -394, 38, 631, 635, -547, 2, 2, -542,
	584, 633, 633, -440, 633, 196, -620, -339, 529, 479,
	2, -627, -393, -560, 544, -293, 2, -324, -400, -271,
	159, -400, -400, -271, 638, 159, -307, -328, -333, -336,
	-339, -293, -558, -560, -271, -329, -652, 634, 548, -459,
	-354, 418, 501, 441, 480, 524, 9, 9, 638, -553,
	-215, 471, 330, -306, -306, -306, -306, 638, -653, 97,
	544, 81, 633, 472, -286, 292, 544, -463, 226, 81,
	-575, 97, -310, -576, -293, 75, 563, 406, 193, 157,
	-653, 97, 406, -653, 97, 2, 244, 97, 485, 508,
	633, 29, 63, -508, 43, 43, 29, -632, -633, 279,
	196, 600, 528, 242, 472, 544, 544, -508, -426, -523,
	122, 303, 304, 63, -548, -548, 63, -548, -548, -548,
	594, -548, 594, -327, -508, 472, 544, 544, 544, 428,
	519, 428, 519, -279, -154, 519, 544, 544, -154, 29,
	-200, 449, 131, -677, 615, 428, 279, -633, 544, 196,
	638, 43, 43, 29, -632, 196, 544, -349, -308, 578,
	44, 578, 44, 578, 544, 44, 472, 544, 638, 44,
	-262, -621, -621, -222, -221, -293, 5, -392, -265, -562,
	-264, 328, 77, 544, 544, -15, 485, -629, -298, 109,
	336, 296, 337, 101, 333, 100, 332, 107, 334, 108,
	335, 585, 349, 586, 350, 66, 331, 307, 338, 505,
	339, 587, 351, -299, -300, 150, 385, 576, 124, -558,
	-15, -15, 485, 379, 440, 159, -649, 233, 29, -638,
	233, -516, 233, -516, -341, -293, 635, -140, -472, -472,
	-140, -472, -140, 48, 159, 159, 2, 2, -673, 272,
	633, -358, 346, 196, -392, -517, 638, -324, 39, -222,
	368, 159, -558, -425, -424, 346, -329, 226, 2, 159,
	-382, 346, 153, 633, 416, 2, 159, -309, 226, -294,
	-293, -444, -273, 532, 159, -422, 574, -454, -140, 633,
	131, 39, -454, -411, -412, -514, -413, -310, 633, -317,
	-469, -111, -519, 634, 634, 634, -236, -383, -311, -310,
	123, 420, 420, -229, 594, -136, -137, 634, 638, -516,
	233, 511, -137, -562, -223, -223, -516, -516, -324, 189,
	-562, -136, -223, -223, -223, 2, 2, 2, 2, -428,
	-324, -307, -349, -324, -335, 233, 29, 635, -560, -560,
	-339, -340, -338, -293, -333, -428, -307, -428, -307, -428,
	-307, -428, -428, -140, -472, 508, 2, 482, 189, 189,
	635, -428, 8, -385, 451, 5, 2, 416, 124, 528,
	383, 242, -324, -349, -324, -349, -307, 124, -307, 125,
	124, -324, 4, -508, -419, -251, 365, 268, 489, -451,
	-452, -474, 461, 462, -452, 461, 462, 8, 9, 8,
	9, -255, 493, 352, -400, 638, -260, 40, 139, 268,
	-324, -551, 600, 155, -472, -472, 544, -679, 522, -479,
	155, -472, 322, 353, 554, 174, 564, 143, 357, 196,
	633, -473, -473, 634, -404, -472, -472, 632, 641, 634,
	635, 634, -388, 638, -386, -472, -402, -402, 634, 635,
	-402, -392, 632, 632, 638, 634, -490, -491, 148, -472,
	544, 544, 544, 544, 633, 634, 635, -609, 375, 633,
	633, -472, 634, 634, 634, 634, 39, 638, 638, 638,
	634, 638, 638, 638, 634, 634, 634, 638, 634, 600,
	600, 634, 634, 634, 634, 638, 634, 638, 634, 196,
	634, 634, -442, 390, 634, 11, 12, 623, 624, 625,
	626, 187, 627, 628, 621, 622, 620, 613, 614, 615,
	90, 299, 463, 14, 15, 16, -352, 257, 233, -473,
	-473, -473, -473, 634, -477, -478, 196, 189, 39, -437,
	-437, -437, 634, 196, -402, 634, 634, 633, -602, 301,
	346, 634, -466, -465, 592, -513, -396, 2, -503, -319,
	-553, -466, -466, -402, -472, 263, 263, -430, 574, 364,
	-432, -503, -496, -549, -471, -470, 191, 40, 139, 340,
	341, 342, 229, 192, -496, -317, -382, -496, -496, -553,
	-497, -497, -495, 634, -617, -549, 634, -397, -506, -596,
	-388, 635, -553, -233, -597, -201, 5, 353, -201, -201,
	-201, -201, -324, -560, 544, 544, 233, 233, 26, -647,
	594, 391, -523, 631, 632, 8, -553, 633, -547, -547,
	-547, -560, 196, 196, 233, 233, 364, 196, -558, 2,
	-271, -400, -271, -271, -349, -350, -271, -271, -271, -423,
	594, -550, -458, 561, 86, 418, 540, -550, 121, 471,
	-267, 440, 485, -310, -310, -324, -240, -239, -237, -293,
	5, -334, -293, 210, 429, -558, 346, -463, 226, -272,
	346, 226, -318, -523, 633, -446, 596, 268, 268, 574,
	-310, -318, 268, 226, -310, 226, -318, 2, -318, -630,
	418, 358, -472, -238, -237, 63, -365, 290, 416, 347,
	-268, 440, 485, 379, -140, -140, -140, 633, -652, 574,
	142, -324, -349, -324, -334, -558, -329, 485, 379, 440,
	343, -343, -548, -548, -548, -424, 485, 379, 440, -334,
	-558, -327, -558, -278, 226, -293, 428, -278, 226, 428,
	428, 472, -307, 428, 600, 47, -677, 544, 196, -472,
	-472, -269, -140, -140, -140, 633, -308, -270, 440, 5,
	226, -310, 5, -310, 226, 5, -293, -310, -334, -558,
	-656, 25, 147, -310, -223, 638, 615, 615, -266, 615,
	-334, -558, -298, 385, -641, 353, 5, 10, 570, -307,
	-628, -314, 472, 544, 544, -508, -645, -646, 212, 454,
	472, 457, -560, -136, -226, 594, -136, -220, 237, 625,
	-625, -562, -293, 583, -293, -356, -359, -357, -310, -464,
	-463, -579, -580, -575, 284, 242, 563, 256, 175, 97,
	-241, -242, 596, 594, 159, -347, -324, 631, -223, -622,
	-518, 175, 477, 633, -336, -337, 159, -382, 346, -558,
	39, 159, 633, 2, 2, -328, 364, 346, -309, 226,
	-274, 149, -677, -307, -466, -396, -421, -456, 451, 364,
	-383, 579, -317, -421, -398, 638, 196, 615, 635, -383,
	-512, 625, -111, -111, -223, 633, -562, 634, 638, 635,
	633, 615, 615, -231, 368, -230, 151, 270, 255, 495,
	496, 497, 498, 141, 494, 128, 327, 238, 534, -516,
	-562, -229, -137, 196, -516, 233, 196, -71, 594, 528,
	233, -223, 637, 472, 457, -293, 635, -428, -428, -428,
	482, 482, -293, 189, -392, -320, -553, -307, -324, -321,
	-349, 189, 189, -307, -307, 567, -452, 365, 295, -499,
	-261, 602, -324, 637, -472, -472, 155, 155, -472, -473,
	-473, -472, 155, 196, 633, -472, -483, 34, 34, 634,
	638, -468, -472, -351, 634, 582, -388, -388, 634, 625,
	-553, 637, 634, -481, 152, -472, 538, 308, 224, 306,
	-441, 306, -441, -441, -547, 5, -553, 625, -610, -313,
	633, -293, 592, -387, 370, 634, -525, -523, -472, -472,
	-472, -472, -472, -547, -528, -528, -543, -543, -472, -477,
	-472, -525, -523, -473, -473, -473, -473, -473, -473, -473,
	-473, -473, -473, -473, -473, -473, -473, -473, -473, -473,
	-473, -473, -473, 143, 346, 357, -473, -478, -477, -472,
	-472, -523, 634, 634, 634, -402, -110, 633, 301, -415,
	215, -472, -516, 638, -415, -415, 634, -503, -503, 633,
	-472, 263, 632, 638, 640, 615, 615, -382, 635, -495,
	-496, 632, 634, 638, 634, 638, -455, 39, 634, -553,
	-466, -235, -234, 140, 56, 111, 138, 353, 361, 195,
	220, 415, 155, 190, 149, 257, -647, -560, -560, 472,
	472, 367, 212, 5, 8, 631, 632, 635, -547, 634,
	634, 634, -560, -560, 472, 472, -618, 557, 472, 29,
	-560, -271, -271, 123, 330, -472, -212, 594, 596, 544,
	544, 634, 638, 615, 63, 233, 159, 346, 576, 346,
	-576, 157, -581, -472, 633, 242, 633, 633, 2, -257,
	-258, -259, 147, 485, 25, -654, 2, 574, 159, -271,
	159, -271, 598, 634, 638, -365, 633, 633, 544, 472,
	-286, 544, 594, -402, -472, -224, 131, -552, -634, 637,
	-634, 637, 472, 544, 544, 472, 544, 544, 346, -293,
	159, -293, -293, 594, 173, 173, 600, -278, -472, -472,
	189, 544, 594, -402, 544, -527, 51, 27, 346, -328,
	-271, 159, 544, 544, 557, 485, -221, -562, -562, -136,
	-641, -562, 353, -15, -334, -558, -329, 485, 379, 440,
	-627, -627, 212, -339, -649, -516, -228, 368, -227, 151,
	453, 141, 270, 238, -516, -226, 196, 254, 594, -329,
	2, 634, 634, 638, 638, -582, -272, -324, -309, 242,
	242, -316, -294, 39, 361, 361, 633, -324, -91, 594,
	-515, -549, -315, -293, -410, -222, 45, -327, 39, 159,
	-628, -140, -329, -521, -522, 5, 39, -324, 159, 364,
	346, -275, 277, -677, -557, -597, -388, -421, -410, 347,
	95, 634, -466, -412, -396, -472, 2, 634, -562, -223,
	-236, -311, 2, -563, -562, -562, 638, 633, 615, 615,
	615, 615, 615, 615, 615, -229, -516, -136, -229, -137,
	-140, 368, -324, -136, 625, -334, -335, 625, -428, 5,
	-371, -370, 383, 357, -371, 461, 461, 365, 183, 273,
	-260, -308, -472, -472, 155, 34, 34, -472, -472, -483,
	634, -472, -472, -402, 632, 5, -472, 634, 634, 8,
	-472, 634, 635, -611, -293, -472, 634, 63, 634, 634,
	638, 638, 634, 634, 634, 634, 634, 634, 634, -478,
	196, 143, 357, 633, 634, 634, -110, -480, 218, 63,
	-503, -480, -480, -430, -392, -503, -470, -308, 631, -308,
	631, -553, -549, -506, 633, 635, -234, 615, -562, -562,
	2, 2, 5, 5, 415, 346, 353, 5, -201, -647,
	-647, 594, -339, -339, 367, 632, 2, 631, -553, 634,
	-339, -339, 196, -620, -339, 529, 123, 189, 223, 223,
	-310, -310, -239, -550, 528, 461, -278, 406, -463, 159,
	159, -583, 97, -585, 79, 175, 106, 346, 353, 563,
	406, 75, 131, 364, 425, -667, -668, -669, 39, 605,
	606, 634, -390, -500, -596, 633, -293, -390, -392, 346,
	516, 131, 364, 346, 131, 364, 589, 123, 2, 557,
	82, -310, -318, -237, -392, -392, -324, -334, -558, 167,
	634, 638, 615, 2, 625, 625, -334, -558, -329, -334,
	-558, -327, 159, 579, -278, 579, 381, 173, 544, -140,
	-472, 167, 634, -308, 5, 5, 159, -305, 79, -310,
	5, -310, -328, 123, 594, 472, 544, 544, 364, 364,
	367, -645, -646, -226, 638, 633, 615, 615, 615, -226,
	-563, -136, 2, -382, -372, 244, -310, -580, -577, -578,
	406, -464, -584, -586, 175, 406, -360, 633, -309, -294,
	633, -140, 2, -240, 633, -358, 368, 632, 196, 634,
	-558, -425, -140, -329, -380, 594, -382, 634, 638, 153,
	-447, 574, -308, -324, 159, -276, 276, -677, -557, -273,
	-450, -448, 144, 633, 364, -140, -388, 615, 634, 123,
	634, -230, -231, -562, -136, -562, -562, -562, -136, -562,
	-229, -651, 39, -516, -72, -73, 242, 97, 388, -223,
	-321, 528, 242, 633, 633, -260, -472, -472, -472, 634,
	-388, -553, 625, -605, 383, 634, -499, -472, -472, -473,
	196, 633, -483, 634, -606, 593, -472, -416, -417, -472,
	459, 112, 216, -606, -606, 634, -549, -549, 2, -562,
	2, 2, 353, 2, 2, 2, 544, 544, 631, 2,
	196, 196, -560, 196, 196, 233, -140, 233, 39, 428,
	-463, -318, -318, -322, -315, 175, 226, 353, 589, -446,
	268, 633, -473, 567, -324, 633, 2, 225, 225, 31,
	63, -670, 135, 246, 634, 638, -501, -304, -293, -472,
	-501, 634, 634, 353, 567, 353, 589, -472, 567, -523,
	633, -271, -271, 634, 634, -472, 544, -552, 104, -550,
	2, -634, -278, -392, -392, -307, -472, 189, -472, 544,
	5, -271, -322, -271, -271, -305, 557, 363, -334, -558,
	-329, -650, 529, 479, 558, 473, 199, 460, -650, 189,
	-227, -228, -562, -136, -136, -226, 39, -366, -367, 2,
	-582, 268, -315, 268, 235, 158, -390, 633, 633, -392,
	-666, 594, 634, -356, -241, -92, -93, 545, -515, -623,
	-346, -382, 330, 123, 39, 5, 633, 633, -293, 364,
	633, -308, -288, 96, -677, -557, -274, -421, 347, -392,
	97, -450, -479, -223, 633, -223, 634, 534, -229, 638,
	29, 633, 29, 633, -324, -349, -402, -402, 634, -388,
	63, 638, 634, 634, -473, -483, 634, -607, -608, -313,
	638, 633, 633, 486, 632, 632, 2, -560, -560, 2,
	-560, -560, -560, -560, 472, -278, 406, -293, -576, -585,
	-315, 346, -242, 574, 594, -472, -473, -295, 633, -472,
	633, 633, 39, 131, 246, 136, 231, -462, -671, 105,
	517, 234, -500, -260, 634, -461, 574, 425, -473, -305,
	-390, 633, 633, 633, 615, 196, -140, 633, -527, -271,
	-328, 615, 544, 2, 2, 196, -627, 634, -640, 423,
	-140, -241, 633, -242, -361, 84, 98, 132, 225, 200,
	243, 508, 514, 29, -361, 634, -390, -390, 634, -362,
	364, 123, 330, 634, 39, -93, 9, -466, 39, 123,
	-140, -521, -390, -324, -390, 364, -280, -279, 285, -557,
	-275, 634, -318, -421, -563, -549, 4, -73, -392, -392,
	634, 634, -612, 416, 462, 217, -402, -389, 634, 638,
	39, -417, 2, 2, 2, -647, -647, -339, 428, -272,
	159, 219, 634, -587, 300, -293, 634, -425, -425, 39,
	136, 231, -368, -364, 633, -261, -501, -242, 219, -324,
	-635, 574, 634, -374, -373, -370, -376, -375, -370, -402,
	-550, 104, 381, -402, -305, -136, -560, -560, 364, -642,
	197, -641, -362, -391, -502, -310, -461, 634, 634, 85,
	123, -372, -140, -140, 2, -380, 634, 634, -447, 634,
	-324, -277, -564, 428, 430, -677, -276, -466, 144, 634,
	634, 634, 634, -613, -614, 53, 560, 113, -472, -613,
	-613, -608, -610, 196, 175, -460, 603, -588, -591, -590,
	610, 492, 197, 382, 634, 516, 588, 634, 634, -670,
	-392, -460, -382, -472, -461, 634, 638, 579, 634, 638,
	579, 634, 196, 634, -271, -647, -271, -650, -225, 594,
	48, -287, -286, 634, 638, -462, -461, -368, 405, 137,
	147, -366, -666, -461, 633, -462, 633, -285, -284, -677,
	-543, -288, 144, 347, 567, -223, -615, 157, -614, 402,
	188, 461, 402, 188, -615, -615, -560, -315, -242, 58,
	-590, 610, -591, 610, 567, 137, -466, 634, -587, -242,
	-373, 233, -375, 196, 381, 196, 469, -641, 31, -242,
	-502, -368, -462, -242, 462, 462, 2, -241, -362, -462,
	-390, -368, -390, -281, -282, -283, -392, -280, 347, 567,
	485, 113, 215, 539, 330, 34, 615, -589, 330, 448,
	67, 485, -589, -588, 633, 633, -560, 368, -242, -368,
	-466, 2, -362, -368, 634, -242, 634, -559, 379, -277,
	485, -411, 461, 372, -614, -472, 24, 353, 131, -670,
	-402, -402, -271, -222, 633, -466, -242, -287, -242, -461,
	-466, -462, -677, -285, -411, -466, 634, 634, -222, -466,
	-466, -462, -368, -558, -281, -466, -363, -364, 544, 634,
	-368, -242, 633, -242, -466, -402, -466, 634, -363,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 594, 595, 597, 598,
	599, 601, 602, 604, 606, 608, 609, 610, 612, 613,
	615, 616, 617, 618, 619, 621, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 713, 715, 0, 1570, 1572, 1574, 1576, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	375, 377, 379, 381, 0, 413, 415, 416, 418, 420,
	421, 423, -2, 0, 527, 528, 530, 532, -2, 0,
	1149, 1151, 1153, 0, 701, 703, 0, 1156, 1158, 1160,
	0, 0, 725, 726, 0, 1684, -2, 717, 719, 721,
	723, 802, 804, 806, 808, 810, 812, 814, 816, 818,
	820, 821, 823, 825, 827, 829, 831, 832, 834, 836,
	838, 839, 841, 842, 844, 846, 848, 850, 852, 854,
	856, 858, 860, 862, 864, 866, 868, 870, -2, 873,
	874, 875, 877, -2, -2, 0, -2, -2, -2, 1588,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 71, 474, 476, 478, 480, 482, 485, 487, 489,
	1742, 534, 536, 538, 540, 542, 544, 546, 0, 0,
	-2, 1756, 0, 0, 0, 966, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 127, 128, 129, 130,
	131, 132, 133, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 124, 125, 84, 0, 0, 1715, 1717,
	1719, 1721, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 33, 35, 37,
	39, 596, 600, 603, 605, 607, 611, 614, 620, 622,
	624, 579, 580, 583, 2456, 2474, 2475, 2476, 2479, 2480,
	2481, 2482, 2483, 2484, 2970, 3051, 3052, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798,
	2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808,
	2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818,
	2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828,
	2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838,
	2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848,
	2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858,
	2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868,
	2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878,
	2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888,
	2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898,
	2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908,
	2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918,
	2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928,
	2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938,
	2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948,
	2949, 581, 582, 1343, 0, 663, 661, 2439, 664, 2753,
	666, 668, 521, 522, 523, 524, 525, 526, 0, 694,
	2851, 678, 1754, 695, 697, 698, 699, 700, 658, 656,
	0, 699, 694, 2511, 2851, 692, 1568, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 453,
	1406, 1407, 1408, 1553, 1554, 2806, 1595, 0, 259, 714,
	-2, -2, 2935, -2, 756, 757, -2, -2, 771, 775,
	766, 2939, 0, 2809, 2792, -2, 778, 1571, 1573, 1575,
	878, 879, 880, 2460, 884, 882, 894, 895, 898, 0,
	915, -2, 0, 2507, 2776, -2, -2, 916, 917, -2,
	-2, -2, -2, 896, 897, 0, 0, 0, 0, 0,
	44, 46, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 269, -2, -2, -2,
	-2, 2815, 0, 0, 2857, 2566, 2407, 2476, 2410, 2405,
	376, 378, 380, 382, 383, 0, 0, 0, 0, 0,
	0, 0, 414, 417, 419, 422, -2, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 1223,
	1215, 1216, 1473, 0, 0, 0, -2, 529, 531, 584,
	585, 0, 1743, 1743, 592, 593, -2, 0, 0, 0,
	0, 337, 327, 1150, 1152, 1154, 1155, 0, 0, 0,
	0, 0, 702, 704, 0, 0, 2851, 301, 1157, 1159,
	1161, 1162, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 718, 720, 722, 724, 803, 805, 807, 809, 811,
	813, 815, 817, 819, 822, 824, 826, 828, 830, 833,
	835, 837, 840, 843, 845, 847, 849, 851, 853, 855,
	857, 859, 861, 863, 865, 867, 869, 871, 872, 923,
	0, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 1035, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 0, 1127, 0, 0,
	926, 929, 930, 931, 932, 933, 934, 935, 0, 1008,
	1033, 1034, 1044, 876, 0, 1386, 1744, 1597, 1578, 1592,
	1597, 1580, 1581, 1582, 1583, 1584, 1589, 1591, 1585, 1586,
	1587, 50, 52, 54, 56, 58, 60, 62, 64, 66,
	68, 70, 72, 475, 477, 479, 481, 483, 486, 488,
	490, -2, 1713, 1714, 535, 537, 539, 541, 543, 545,
	547, 705, 0, 708, 0, 928, 707, -2, 0, 1748,
	1748, 1748, 0, 0, 1714, 1712, 0, 0, 0, 711,
	712, 782, 783, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 2281, 2109, 0, 784, -2, 2142, 2144, 2910,
	2726, 2935, 2280, 2146, 2147, 2148, 2149, 2150, 0, 2152,
	2153, 2154, 2155, 2156, 2157, 0, 2159, 0, 2164, 2165,
	2166, 0, 2917, 2384, 2470, -2, 0, 0, 2923, 2466,
	0, 2247, 2182, -2, -2, 2493, 2472, 1953, 1954, 1955,
	1956, 1957, -2, -2, 2953, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 0, 2898, 2918, 2919,
	2924, 2926, 2920, 2907, 2207, 2580, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1980,
	1989, -2, -2, -2, -2, -2, -2, -2, 2911, 2912,
	2929, 2932, 2938, 2943, 2944, 2916, 2925, 2952, 2954, 2955,
	2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965,
	2966, 2967, 2968, 2969, 1981, -2, -2, -2, -2, 0,
	1731, 2769, 1734, 1343, 1732, 1716, 1718, 0, 1720, 0,
	0, 0, 1725, 1751, 1749, 0, 1800, 1729, 1730, 1823,
	1823, 1847, 0, 1828, 0, 1847, 1743, 1874, 0, 1834,
	2797, 2183, 2184, 0, 2476, 2471, -2, -2, 2950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 665, 667, 0, 0, 0, 0, 694, 693,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	456, 457, 458, 459, 460, 2918, 0, 0, 0, 465,
	0, 467, 468, 469, 470, 471, 472, 473, 229, 2918,
	552, 577, 0, 229, 2918, 555, 229, 2918, 558, 0,
	561, 1471, 229, 2918, 564, 2435, 229, 2918, 567, 569,
	2443, 229, 2918, 573, 2450, 2448, 574, 0, 576, 249,
	245, 246, 247, 248, 1564, 1565, 1566, 1567, 0, 1594,
	1472, 716, 0, 742, 0, 754, 755, 2906, -2, 0,
	2818, 759, 760, -2, 762, 1598, 1602, 1603, 1604, 1605,
	1606, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	749, 750, 769, 770, 776, 779, 0, 887, 883, 899,
	0, 914, 0, 915, 915, 2424, 2415, 2416, 0, 0,
	915, 915, 0, 0, 918, 919, 920, 921, 922, 83,
	0, 2918, 1874, 85, 0, 2429, 2501, 2502, 2503, 2504,
	2505, 2951, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978,
	2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988,
	2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998,
	2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008,
	3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018,
	3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028,
	3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038,
	3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048,
	3049, 3050, 2953, 89, 0, 2918, 94, 0, 2918, 0,
	-2, 110, 0, 126, 0, 153, -2, -2, -2, 134,
	0, 2918, 0, 2404, -2, 0, 241, 328, 329, 330,
	0, 640, 0, 649, 340, 341, 2489, 2490, 2497, 2498,
	2499, 2500, 0, 745, 2281, 0, 0, 1187, -2, 0,
	1399, 1401, 1401, 0, -2, 0, 0, 1136, 2401, 2406,
	0, 1138, 1139, 1140, 2425, 1141, 2411, 0, 384, 385,
	386, 387, 388, 0, 389, 2918, 391, 392, 0, 394,
	395, 2918, 397, 398, 0, 400, 0, 402, 0, 281,
	285, 2918, 2918, 426, 429, 0, 431, 432, 0, 434,
	0, 0, 0, 438, -2, 454, 0, 451, 441, 442,
	444, 445, 446, 447, 448, 0, 494, 492, 2440, 512,
	354, 0, -2, 2918, 0, 1184, 0, 0, 1451, -2,
	0, 1392, 0, 1458, 2918, 1454, 0, -2, 0, 1741,
	2918, 1615, 1219, 1220, 1221, 1222, 1886, 518, 0, 1648,
	0, 1650, 0, 1670, 1880, 1823, 0, 0, 1885, 0,
	-2, 637, 2459, -2, 587, 0, 588, 0, -2, 0,
	354, 0, 0, 1165, 1167, 1168, 1170, 1171, 1174, 1175,
	1176, 1177, 0, 1179, 1860, 302, 304, 0, 0, 0,
	0, 1164, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 0, 512, 727, 0, 0, 924, 925, 0, 0,
	943, 944, 945, 0, 0, 354, -2, -2, -2, 953,
	0, 960, 963, -2, 0, 0, 0, 0, 970, 0,
	975, 976, 977, 0, -2, 0, 984, 986, 1148, 988,
	0, 0, 990, 0, 994, 0, 997, 0, 999, 0,
	1001, -2, -2, -2, 1009, 1010, -2, 1015, -2, 0,
	1019, -2, 0, 1022, 0, 1025, -2, 0, 1035, 1031,
	1032, 0, 0, 0, 0, 1052, 1053, 0, 1062, 0,
	1065, 1066, 1067, 0, 0, 1072, 1073, 0, 1075, 1076,
	1077, 1079, 1080, 1081, 0, 2887, 2815, 2566, 0, 1089,
	-2, 1095, 1097, 0, -2, 0, 1113, 0, 1117, 0,
	0, 1126, 0, 0, 0, 927, 0, 936, 937, 938,
	229, 1878, 1577, -2, 1579, 0, -2, 0, 706, 0,
	710, 1773, 1699, 1696, 0, 1770, 1771, 1700, 0, 0,
	0, 1707, 0, 1746, 1747, 0, 0, 0, 1686, 1687,
	0, 0, 0, 0, 0, 0, 2286, 2287, 2288, 2289,
	2302, 2290, 2291, 2301, 2299, 2300, 2292, 2293, 2298, 2312,
	2313, 2303, 2304, 2294, 2307, 2305, 2306, 2308, 2309, 2310,
	2311, 0, 0, 2317, 0, 2295, 2296, 2297, 2325, 0,
	0, 2326, 0, 2328, 0, 2318, 2314, 2315, 2316, 0,
	2088, 2090, 2392, 0, 0, 0, 2324, 2319, 2320, 2026,
	2027, 2028, 2029, 2030, 2063, 2067, 2068, 0, 0, 2143,
	2389, 2388, 2145, 0, 0, 2340, 0, 2158, -2, 0,
	2281, 2335, 0, 0, 2167, 2168, 2169, 0, 0, 2340,
	0, 0, 2383, 2179, 2180, 2018, 0, 0, 2249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1966, 0,
	1968, 0, 1969, 1970, 1977, 1990, 0, 0, 0, 0,
	1994, 0, 0, 0, 0, 0, 0, 0, 2364, -2,
	0, 0, 0, 0, 1982, 0, 0, 1733, 0, 0,
	1804, 2393, 2397, 2398, 1804, 1804, 0, 0, 2341, 1871,
	1871, 0, 0, 1866, 1866, 1866, 1864, 1847, 0, 1847,
	1857, 0, 1847, 1847, 0, -2, 1828, 0, 0, 1857,
	0, 1841, 625, 627, 629, 631, 632, 633, 635, 1875,
	1876, 0, 0, 0, 0, 2477, 0, 0, 0, 0,
	0, 0, 2462, 0, 0, 2434, 409, 410, 0, 0,
	0, 2869, 2809, 0, 670, 696, 0, 1743, 0, 2343,
	1901, 1905, 0, 1907, 1908, 1909, 1910, 1911, 0, 0,
	1902, -2, 1978, 1980, 2001, 2494, 2495, 2496, 1961, 1962,
	1963, 1964, 1965, 1973, 1960, 1960, 1960, 1971, 2000, 1992,
	2000, 1996, 1946, 1947, 1948, 1983, 1984, 1985, 1986, 0,
	2869, 2809, 0, -2, 0, 681, 0, 0, 0, 1681,
	455, 0, 462, 463, 464, 0, 548, 0, 227, 228,
	0, 229, 2918, 553, 0, 556, 0, 229, 2918, 2399,
	562, 0, 565, 0, 0, 571, 0, 0, 0, 0,
	0, 229, 1683, 0, 0, 0, 0, -2, 764, 772,
	773, 774, 0, 1600, 0, 1607, 793, 794, 795, 1609,
	1610, 0, 1612, 767, 796, 797, 798, 799, 800, 801,
	0, 2413, 2414, 2419, 2420, 0, 0, 765, 786, 768,
	0, 780, 890, 885, 886, 900, 901, 0, 0, 2417,
	2418, 0, 0, 906, 907, 135, 1550, 0, 0, 182,
	0, 1550, 1550, 0, 0, 0, 0, 210, 0, 0,
	1253, 0, 0, 0, 0, 153, 167, 178, 147, 148,
	149, 0, 0, 0, 0, 0, 0, 95, 1365, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 1381, 1384,
	0, 0, 0, 0, 0, 112, 113, 0, 0, 118,
	119, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	1645, 0, 157, 153, 0, 0, 152, 154, 137, 0,
	0, 153, 168, 180, 0, 216, 218, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 251, 0, 639,
	641, 512, 512, 0, 0, 647, 0, 650, 0, 743,
	747, 748, 0, 0, 744, 746, 0, 0, 1393, 0,
	0, 0, 1740, 0, 0, 0, 0, 2918, 1548, 0,
	1531, 0, 1860, 2655, -2, -2, 302, 1860, 0, 1137,
	0, 2477, 2409, 0, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 430, 433, 435, 436, 437, 0,
	1450, 0, 443, 484, 1312, 2918, 0, 0, 516, 507,
	0, 511, 0, 0, 515, 0, 0, 1364, 2918, 1362,
	2444, 0, 1390, 0, 1343, 2918, 2442, 0, 0, 0,
	1459, 2486, 1468, 1472, 1633, 0, 520, 0, 1651, 1653,
	0, 0, 1881, 0, 1883, 1823, 1743, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 1178, 311, 0,
	1859, 0, 0, 342, 1860, 302, 2782, 0, 1163, 354,
	354, 1860, 729, 1860, 731, 0, 0, 946, 0, 0,
	949, 354, 354, 354, 958, 959, 961, 962, -2, -2,
	-2, -2, 964, 965, 1059, 0, 0, 0, 1058, 1546,
	0, 980, 983, 987, 0, 1130, 2792, 2809, 2869, 1146,
	1059, 2566, 1059, 2566, 1059, 2566, 1059, 1059, 1003, 1047,
	1055, 1014, 1021, 0, 1016, 1020, 1023, 1026, 0, 1028,
	1036, 0, -2, 0, 1039, 0, 1041, 0, 1043, 1059,
	1060, 1063, 0, 1071, 1074, 0, 1082, 1083, 1084, 1085,
	2457, 1086, 1087, 1088, -2, 1092, 1093, 0, 1104, 1109,
	1110, 1106, 0, 0, 0, 0, 0, 0, 1120, 1121,
	0, 0, 0, 1129, 0, 939, 1385, 0, 1590, 1773,
	1699, 709, 1690, 1772, 1691, 1698, 1701, 0, 0, 1703,
	0, 1705, 0, 1768, 1769, 1776, 1777, 0, 1787, 1788,
	1780, 0, -2, 0, 0, 1783, 1784, 1709, 0, 1726,
	1727, 1728, 1757, 1760, 1487, 0, 3051, 752, 0, 2022,
	1896, 2023, 2024, 2428, 0, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, -2, -2, -2, -2, -2,
	-2, -2, -2, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, -2, -2, -2, 2064, 2065, 2066,
	-2, 2327, 2329, 0, 2392, 0, -2, 0, -2, -2,
	-2, -2, 2085, 0, 2087, 2092, 2094, 2096, 0, 0,
	0, 0, 2391, 2106, 2375, 2376, 0, 0, 2283, 2284,
	2285, 2091, 0, 2110, 2390, 2387, 0, 0, 2321, 0,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 0, 2339, 1756, 2171, 0, 0, 0,
	0, 2178, 2163, 2337, 0, 2336, 0, 0, 0, 2347,
	0, 2382, 2378, 0, 2426, 2017, 2004, 2005, 2006, 2007,
	2008, 2009, 2019, 0, 2423, 2463, 2469, 2257, 0, 0,
	0, 2208, 2209, 2210, 2211, 2212, 0, 2214, 2215, 0,
	2217, 2218, 0, 2220, 2221, 0, 2223, 2224, 2225, 2226,
	2227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	0, 0, 2229, 0, 2350, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2231, 0, 2233, 2341, 2361, 0,
	0, 2111, 0, 0, 0, 0, 0, 2236, 2341, 2369,
	0, 0, 0, 0, 0, 2341, 0, 2374, 0, 2243,
	0, 2245, 967, 968, 1735, 0, 0, 1891, 0, 0,
	0, 2396, 1891, 1891, 0, 1799, 0, 0, 1867, 1868,
	1869, 1870, 0, 0, 1871, 0, 1861, 1865, 1862, 1863,
	1857, 1820, 0, 0, 2430, 1857, 1826, 1856, 0, 1343,
	1846, 1857, 1857, 0, -2, 1830, 1847, 0, 0, 626,
	628, 630, 634, 636, 0, 0, 1756, -2, 0, -2,
	356, 1342, 0, 0, 0, 0, 0, 0, 660, 662,
	0, 0, 568, 0, 0, 0, 0, 1534, 654, 0,
	657, 0, 1892, 1895, 0, 0, 1906, 1912, 1913, 0,
	-2, 0, 0, 2002, 0, 0, 0, 0, 0, 0,
	691, 0, 0, 690, 0, 0, 466, 578, 229, 550,
	0, 229, 229, 559, 0, 0, 229, 570, 229, 2451,
	229, 2449, 250, 575, 1682, 262, 0, 751, 0, 1599,
	1608, 0, 790, 0, 792, 0, 2421, 2422, 0, 781,
	0, 888, 0, 902, 903, 904, 905, 0, 0, 0,
	0, 1549, 0, 0, 1494, 0, 0, 186, 2918, 0,
	231, 0, 0, 1305, 2436, 0, 1295, 0, 0, 2588,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 150, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 1366, 1367,
	1369, 1376, 1378, 0, 1372, 1373, 0, 1375, 1377, 1379,
	0, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 1402, 0, 0, 0, 1403, 1404,
	1405, 1621, 1622, 0, 1644, 1645, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 2403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 354, 644, 645, 350, 347, 349, 646, 651, 0,
	652, 0, 0, 0, 0, 1395, 0, 1446, 1444, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 0, 0, 0, 0, -2,
	1397, 1398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 345, 2402, 2412, 0, 1172, 1173, 390,
	393, 396, 399, 268, 0, 0, 428, 439, 0, 0,
	1225, 1197, 0, 0, 493, 354, 512, 514, 0, 352,
	2729, 2455, 1182, 1360, 1363, 0, 1343, 2918, 1414, 0,
	0, 0, 0, 0, 0, 1457, 0, 0, 2918, 2431,
	2485, 2486, 1635, 1645, 0, 1891, 0, 1668, 1654, 0,
	0, 0, 1668, 1672, 1673, 1675, 1676, 0, 0, 1882,
	1888, 586, 638, 1743, 1743, 354, 0, 0, 1657, 1659,
	0, 0, 0, 294, 0, 305, 1860, 303, 0, 311,
	0, 0, 1860, 302, 0, 506, 728, 733, 941, 0,
	0, 354, 950, 951, 952, 1005, 1049, 1057, 1108, 969,
	971, 972, 973, 0, 978, 0, 0, 0, 1147, 1142,
	1143, 1144, 2452, 2448, 1145, 989, 1059, 992, 1059, 995,
	1059, 998, 1000, 1018, 1024, 1037, 1030, 1038, 0, 0,
	0, 1051, 0, 1069, 0, 1078, 1091, 0, 0, 0,
	0, 0, 0, 0, 1114, 1115, 1116, 1118, 1123, 1122,
	0, 1128, 940, 1879, 1694, 1695, 1697, 0, 1706, 0,
	0, 1782, -2, -2, 1781, 1785, 1786, -2, -2, -2,
	-2, 1702, 0, 1711, 1708, 0, 1767, 1485, 1486, 0,
	0, 753, 0, 0, -2, -2, 0, 0, 0, 2107,
	0, -2, 2086, 2089, 2093, 2095, 2097, 0, 0, 0,
	0, 0, 0, 2330, 0, 2332, 2108, 2385, 2388, 2323,
	0, 2279, 0, 0, 1755, 1756, 1756, 0, 2177, 0,
	2338, 0, 2345, 2346, 0, 2170, 0, 2379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2181, 0, 0,
	0, 0, 2213, 2216, 2219, 2222, 0, 0, 0, 0,
	2202, 0, 0, 0, 2206, 1972, 1958, 0, 2000, 1998,
	1999, 1993, 2000, 1997, 1950, 0, 1949, 0, 2228, 0,
	2230, 2232, 0, 0, 2234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2114,
	2115, 2116, 2136, 2235, 2367, 2368, 0, 0, 0, 0,
	0, 0, 2241, 0, 2373, 2242, 2244, 1743, 0, 1736,
	0, 1801, 1790, 1890, 0, 2394, 1860, 1803, 1805, 2395,
	2433, 1790, 1790, 0, 2342, 0, 0, 1851, 0, 0,
	0, 1853, 1824, 0, 0, 1818, 0, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1825, 1343, 1855, 1827, 1831, 2463,
	0, 1857, 0, 1842, 0, 1844, 1877, 0, 1836, 1839,
	0, 0, 2478, 1891, 0, 403, 411, 412, 404, 405,
	406, 407, 0, 1534, 0, 0, 0, 0, 0, 677,
	0, 0, 2344, 0, 1897, 0, 1903, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 1680, 461,
	549, 229, 554, 557, 2400, 229, 563, 566, 572, 258,
	0, 741, -2, 788, 789, 791, 0, 787, 893, 889,
	183, 1550, 0, 0, 0, 1490, 0, 1208, 0, 1203,
	1204, 1492, 2447, 1496, 1502, 1505, 0, 188, 2918, 200,
	0, 2918, 0, 1269, 0, 0, 0, 0, 0, 0,
	1552, 0, 0, 2918, 229, 2918, 229, 204, 206, 209,
	0, 215, 211, 0, 1205, 0, 1257, 0, 0, 1260,
	136, 1550, 0, 0, 139, 143, 155, 0, 0, 0,
	165, 0, 0, 0, 1507, 1511, 1519, 0, 0, 0,
	1370, 1371, 1374, 1380, 1383, 96, 0, 0, 0, 1515,
	1517, 1523, 111, 114, 2918, 2445, 0, 116, 2918, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 141, 145, 156, 0, 1525, 138, 0, 244,
	0, 0, 234, 229, 2918, 0, 236, 0, 237, 238,
	252, 0, 0, 0, 643, 0, 0, 0, 648, 0,
	1185, 1186, 1445, 0, 1388, 1389, 282, 283, 0, 1400,
	1394, 0, 0, 0, 0, 0, 1527, 1528, 0, 0,
	0, 1548, 1543, 1860, 264, 0, 1860, 272, 0, 2408,
	0, 286, 425, 0, 0, 0, 0, 1224, 1323, 1226,
	1228, 1229, 1230, 231, 0, 2486, 1295, 2644, 2486, 0,
	0, 1192, 0, 0, 0, 499, 495, 0, 504, 508,
	509, 0, 0, 0, -2, 0, 0, 0, 0, -2,
	0, 0, 1461, 1455, 1456, 0, 0, 0, 0, 2918,
	1637, 1645, 0, 1741, 1756, 519, 1646, 1668, 0, 0,
	0, 1656, 1652, 1649, 1891, 0, 0, 0, 0, 0,
	1884, 1887, 589, 590, 331, 0, 354, 0, 0, 0,
	0, 0, 0, 309, 0, 312, 0, 0, 0, 317,
	318, 319, 320, 321, 322, 0, 0, 0, 0, 311,
	343, 296, 1860, 0, 311, 0, 0, 730, 0, 0,
	0, 948, 0, 0, 1546, 982, 0, 991, 993, 996,
	1040, 1042, 1059, 0, 1070, 1098, 2432, 1099, 1247, 0,
	1247, 0, 0, 1119, 1125, 1704, 0, 1779, 1710, 1761,
	1762, 0, 1487, 0, 2025, 2070, 0, 0, -2, 0,
	0, 2074, 0, 0, 0, -2, 0, 0, 0, 2331,
	2333, 0, 2387, 2322, 2172, 0, 0, 0, 2176, 2160,
	2161, 0, 2282, 2348, 2377, 2381, 0, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 0, 2427, 2464, 2468, 2255, 2256,
	2260, 2441, 0, 0, 0, 2185, 0, 0, 0, 0,
	0, 0, 0, 0, 1991, 1995, 0, 0, 2349, 2360,
	2362, 2112, 2113, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, -2, -2, -2, 2130, 2131, 2132, -2,
	-2, -2, 2137, 0, 0, 0, 2363, 2365, 2366, 2370,
	2371, 0, 2238, 2239, 2240, 2372, 0, 1743, 1737, 1798,
	0, 1889, 1802, 0, 1798, 1798, 1750, 1849, 0, 0,
	1873, 0, 1821, 0, 1822, 0, 0, 1854, 0, 1829,
	1832, 1833, 1843, 0, 1835, 0, 1838, 0, 2172, -2,
	355, 357, 359, 0, 362, 363, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 669, 1534, 1534, 0,
	0, 671, 0, 655, 0, 0, 1899, 0, 0, 1975,
	1979, 2003, 683, 685, 0, 0, 0, 2869, 2809, 0,
	682, 551, 560, 260, 0, 1858, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 230, 0,
	1304, 0, 1267, 0, 0, 1294, 0, 0, 1310, 190,
	191, 192, 0, 0, 0, 0, 202, 0, 0, 198,
	0, 208, 214, 213, 0, 1254, 0, 0, 0, 0,
	1495, 0, 0, 0, 162, 163, 164, 0, 169, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 1627, 1628, 0, 1618, 159, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 1484,
	254, 0, 0, 0, 0, 0, 351, 346, 348, 0,
	1387, 1448, 1449, 1396, 1508, 1512, 1520, 0, 0, 0,
	0, 0, 699, 1547, 0, 272, 270, 0, 273, 0,
	276, 277, 0, 0, 272, 266, 0, 0, 0, 1343,
	440, 1195, 1311, 0, 0, 1313, 1231, 1235, 0, 2486,
	2486, 0, 2438, 0, 1193, 0, 0, 1312, 491, 0,
	498, 0, 513, 2437, 0, 0, 0, 1364, 0, 0,
	1391, 1417, 1343, 0, 1460, 1462, 0, 1470, 0, 0,
	0, 1639, 1645, 0, 1632, 1633, 1775, 1647, 1666, -2,
	0, 0, 1756, 1674, 1671, 1677, 1678, 0, 0, 334,
	0, 1658, 1660, 0, 1166, 1169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 311, 308, 298, 1860,
	338, 0, 942, 354, 974, 1545, 979, 2453, 1050, 1068,
	1100, 1246, 0, 0, 1102, 0, 0, 1778, 1765, 1766,
	1763, 1487, 2072, 2076, 0, 0, 0, 2078, -2, 0,
	2100, -2, -2, 2334, 2386, 2151, 1756, 2173, 2175, 2162,
	2380, 2020, 0, 2262, 2259, 0, 2246, 0, 2197, 2198,
	0, 0, 2201, 2203, 2204, 2205, 1959, 1952, 1951, 2359,
	0, 0, 0, 0, 2237, 1738, 0, 2251, 0, 0,
	1806, 2251, 2251, 1850, 0, 1852, 1819, 1807, 0, 1816,
	0, 2464, 1845, 1837, 0, 0, 360, 0, 364, 365,
	366, 367, 369, 0, 0, 0, 0, 0, 408, 672,
	673, 0, 0, 0, 1533, 1893, 1898, 0, 1904, 1974,
	0, 0, 0, 0, 0, 0, 261, 0, 891, 892,
	184, 185, 1209, 1207, 1499, 1503, 1500, 0, 187, 0,
	0, 1268, 0, 1271, 0, 0, 0, 0, 1278, 1295,
	0, 0, 0, 0, 0, 0, 1297, 0, 1296, 0,
	0, 1327, 0, 1475, 1482, 0, -2, 0, 0, 0,
	194, 220, 0, 0, 0, 0, 223, 1551, 196, 0,
	0, 229, 229, 1206, 0, 0, 1491, 1493, 1506, 0,
	0, 0, 0, 172, 0, 0, 1509, 1513, 1521, 1516,
	1518, 1524, 0, 0, 117, 0, 0, 1629, 0, 158,
	0, 0, 0, 1526, 242, 243, 0, 229, 0, 229,
	235, 229, 1484, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 1530, 263, 0, 0, 0, 0, 0, 265,
	344, 272, 427, 0, 1256, 0, 1323, 1315, 1316, 1317,
	0, 1227, 1322, 1324, 0, 0, 1232, 0, 0, 0,
	0, 1212, 1194, 0, 1225, 1197, 0, 496, 0, 353,
	1183, 1361, 1409, 1343, 1412, 0, 0, 1452, 0, 0,
	0, 0, 0, 0, 0, 1641, 1645, 0, 1634, 1635,
	1668, 1774, 0, 0, 0, 1655, 1775, 0, 354, 0,
	354, 313, 0, 314, 315, 316, 323, 324, 325, 326,
	297, 300, 0, 311, 732, 734, 0, 0, 740, 947,
	1245, 0, 0, 0, 0, 1764, 2080, -2, -2, 2101,
	0, 2465, 2467, 1756, 0, 2248, 1758, 0, 0, -2,
	0, 0, 0, 1739, 1722, 0, 1797, 1789, 1791, 1793,
	2795, 2561, 2917, 1723, 1724, 1872, 0, 0, 1840, 361,
	370, 371, 0, 373, 374, 674, 0, 0, 0, 1900,
	0, 0, 680, 0, 0, 0, 881, 0, 0, 1501,
	189, 0, 0, 1272, 1273, 1275, 0, 1277, 1279, 1280,
	1197, 0, 1284, 0, 2488, 0, 1289, 1292, 1293, 0,
	0, 1306, 1328, 0, 1337, 0, 1477, 1487, 1481, 0,
	1479, 1339, 0, 193, 222, 195, 224, 219, 0, 1484,
	0, 197, 207, 0, 0, 140, 0, 0, 2555, 175,
	173, 171, 115, 121, 123, 1488, 161, 0, 142, 0,
	244, 253, 1483, 255, 239, 229, 0, 0, 1510, 1514,
	1522, 0, 1537, 1538, 1539, 1540, 0, 0, 0, 0,
	274, 0, 275, 278, 279, 0, 0, 1197, 1255, 1196,
	1314, 0, 1325, 1197, 0, 0, 0, 0, 0, 0,
	1199, 0, 1198, 0, 0, 497, 500, 0, 503, 1891,
	510, 0, 0, 1416, 0, 1463, 1461, 0, 1469, 0,
	0, 0, 1617, 0, 0, 1636, 1637, 517, 1661, 0,
	0, 1668, 1679, 333, 0, 336, 310, 0, 299, 0,
	736, 0, 738, 0, 1101, 1103, 0, 0, 2174, 2266,
	0, 0, 2199, 2200, -2, 0, 2140, 2250, 2252, 0,
	0, 0, 0, 0, 1808, 1817, 372, 1534, 1534, 1894,
	687, 688, 684, 686, 0, 1497, 0, 1504, 231, 1270,
	1274, 0, 1281, 0, 0, 0, 1285, 1347, 0, 0,
	1364, 1364, 1298, 0, 0, 1331, 1332, 1252, 0, 1333,
	1334, 1335, 1476, 1767, 1482, 1197, 0, 0, 221, 226,
	0, 0, 0, 0, 0, 0, 160, 0, 233, 256,
	1484, 0, 0, 1541, 1542, 0, 0, 271, 290, 0,
	1410, 1199, 0, 1326, 1233, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1234, 1339, 0, 0, 1303, 1210,
	0, 1213, 0, 1195, 0, 501, 502, 505, 0, 0,
	1417, 0, 0, 1470, 0, 0, 1624, 1616, 1645, 1638,
	1639, 1891, 0, 1669, 0, 306, 307, 735, 0, 0,
	1111, 1112, 0, 0, 0, 0, 2261, 1759, 2141, 0,
	0, 1792, 1794, 1795, 1796, 675, 676, 0, 1498, 201,
	0, 1341, 1283, 1352, 0, 0, 0, 0, 0, 1299,
	1329, 1330, 1327, 1251, 0, 1480, 1478, 1308, 1341, 1343,
	199, 0, 1339, 0, 1261, 0, 0, 1264, 0, 0,
	176, 2555, 174, 0, 229, 653, 1534, 229, 0, 293,
	0, 284, 1191, 0, 1319, 1321, 1337, 1339, 1252, 0,
	1214, 1256, 1212, 1411, 1415, 1413, 1453, 1339, 0, 1337,
	0, 1631, 1645, 1625, 1626, 0, 1641, 0, 0, 354,
	737, 739, 2258, 2278, 2267, -2, 2872, 2562, 0, 2278,
	2278, 2253, 2254, 0, 0, 1197, 0, 1286, 1348, 1349,
	0, 1344, 1345, 1346, 2487, 1287, 1288, 1290, 1291, 1891,
	0, 1338, 1347, 225, 1197, 1258, 0, 0, 1259, 0,
	0, 179, 0, 181, 257, 1532, 1535, 0, 280, 0,
	0, 1188, 1190, 1197, 0, 1252, 1337, 1197, 0, 0,
	0, 1197, 1199, 1337, 0, 1252, 0, 1620, 1630, 0,
	1640, 1617, 0, 1664, 0, 335, 2263, 0, 0, 2269,
	2270, 2271, 2272, 2273, 2264, 2265, 689, 1276, 1282, 0,
	1350, 0, 1351, 0, 0, 0, 1307, 1336, 1352, 205,
	1262, 0, 1265, 0, 177, 0, 0, 288, 289, 1318,
	1320, 1197, 1252, 1891, 1200, 0, 1202, 1199, 1211, 1252,
	0, 1197, 0, 1643, 1619, 1623, 2446, 1624, 1662, 0,
	0, 0, 2275, 2276, 0, 0, 0, 1353, 0, 1356,
	1357, 0, 1354, 1327, 0, 0, 229, 0, 1891, 1197,
	1302, 1201, 1191, 1197, 1339, 1891, 1337, 1613, 1645, 1631,
	0, 1891, 2274, 2277, 2268, 1340, 1355, 1358, 1359, 1309,
	0, 0, 1536, 291, 0, 1300, 1891, 1189, 1891, 1337,
	1466, 1252, 0, 1620, 1891, 1665, 1249, 0, 0, 1301,
	1464, 1252, 1197, 1642, 1614, 1663, 1263, 1248, 0, 292,
	1197, 1891, 0, 1891, 1467, 0, 1465, 1249, 1266,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 621, 3, 627, 622, 3,
	633, 634, 625, 623, 638, 624, 635, 626, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 641, 3,
	613, 615, 614, 618, 637, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 631, 3, 632, 628, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 639, 620, 640, 616,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 617, 57956, 619, 57957, 629, 57958, 630, 57959, 636,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1595
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1596
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1597
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1620
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1621
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1622
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1623
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1624
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1625
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1626
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1727
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1747
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1791
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1795
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1802
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1814
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1932
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1964
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1988
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1997
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2018
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2026
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2062
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2073
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2085
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2106
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2168
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2177
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2188
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2196
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2207
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2217
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2227
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2236
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2247
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2253
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2279
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2284
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2375
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2419
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2429
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2432
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2438
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2490
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2685
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2689
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2776
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2873
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2881
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2889
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3035
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.targetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3331
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3335
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3362
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3371
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3377
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3382
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3387
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3419
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = nil
		}
	case 355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3495
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3569
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3655
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3727
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3748
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3749
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3753
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3758
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return helpWith(sqllex, "CREATE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3791
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3794
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3797
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3800
		{
			return unimplemented(sqllex, "create access method")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplemented(sqllex, "create cast")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplemented(sqllex, "create publication")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplemented(sqllex, "create rule")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplemented(sqllex, "create server")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3822
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3825
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3826
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3829
		{
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3830
		{
		}
	case 455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3833
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3835
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3836
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3839
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3840
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3841
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3842
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3844
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3846
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3848
		{
			return unimplemented(sqllex, "drop server")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3850
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3851
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3899
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3978
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3996
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4027
		{
		}
	case 512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4029
		{
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.str = ""
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4047
		{

			sqlVAL.union.val = nil
		}
	case 517:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "DELETE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4075
		{
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4101
		{
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "DROP")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4167
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4301
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4306
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4367
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4383
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4391
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4399
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4418
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "DELETE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "INSERT")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4428
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "DELETE")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4446
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4447
		{
			return helpWith(sqllex, "INSERT")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4454
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4589
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4622
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4713
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.TargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "GRANT")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.TargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4866
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4879
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "RESET")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "RESET")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4952
		{
			return helpWith(sqllex, "USE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4957
		{
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4962
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4964
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4965
		{
			return helpWith(sqllex, "USE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4999
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5089
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5097
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5104
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5135
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5141
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5172
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			return unimplemented(sqllex, "set from current")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5240
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5266
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = tree.Low
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = tree.Normal
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = tree.High
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5410
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5411
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5412
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5416
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5420
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5421
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5422
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5423
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5424
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5425
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5426
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5427
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5428
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5430
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5431
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5433
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5434
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5435
		{
			return helpWith(sqllex, "SHOW")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5458
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = true
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = false
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = true
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = false
		}
	case 893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = false
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5543
		{
			return helpWith(sqllex, "FETCH")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5556
		{
			return helpWith(sqllex, "MOVE")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5595
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = int64(1)
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = int64(-1)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = int64(1)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = int64(1)
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = int64(-1)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5650
		{
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5651
		{
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5654
		{
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5655
		{
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5664
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5691
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.str = "client_encoding"
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5711
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5713
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.str = "timezone"
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5719
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5747
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5762
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5834
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5869
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5874
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5883
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5889
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5903
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5914
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5948
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5966
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5996
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6006
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6019
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6027
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6060
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6087
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6092
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = true
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = true
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = false
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6128
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6129
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6130
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6147
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6173
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6174
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6190
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6198
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6242
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6247
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6249
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = true
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = false
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6304
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6314
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6319
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = true
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = false
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6351
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6358
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6366
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6376
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6387
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6409
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6419
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6423
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6437
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6453
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6458
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6463
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6468
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6497
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6502
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6513
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6524
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6542
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6550
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6571
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6576
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6581
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6594
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6608
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6617
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6629
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6695
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6705
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6718
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6851
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6898
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6917
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6972
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6974
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6975
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6985
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6987
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6988
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6999
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7027
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7040
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7072
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7080
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7091
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7127
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7155
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7191
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7206
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7234
		{

			sqlVAL.union.val = nil
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7240
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.str = ""
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7250
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = nil
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7273
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7277
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7313
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7326
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7340
		{
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7341
		{
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7342
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7397
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7423
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7434
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7437
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7440
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7441
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.str = ""
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7579
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7686
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7731
		{

			sqlVAL.union.val = true
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = false
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7741
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7745
		{
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7748
		{
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7845
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7873
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7883
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7966
		{
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7967
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7969
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7971
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8053
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8138
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8147
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8155
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8166
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8184
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8194
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8196
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8198
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8200
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8203
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8206
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8208
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8211
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8213
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8227
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8231
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8258
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8292
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.str = ""
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8312
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = true
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8335
		{

			sqlVAL.union.val = true
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = false
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8350
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8364
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8376
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8388
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8398
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8408
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8412
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = true
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = true
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = nil
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8555
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8556
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8581
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8583
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8585
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8587
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8591
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8626
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8643
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8661
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8677
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8693
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8697
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = false
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = true
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = false
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = true
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = false
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8751
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8757
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8763
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8771
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.str = ""
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.str = ""
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8824
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8830
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9055
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9061
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9073
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9079
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9093
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9099
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9158
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = true
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = false
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9218
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9222
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.str = ""
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9257
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9258
		{
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9262
		{
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9273
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9291
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9300
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9329
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9350
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9358
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9374
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9375
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9417
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9427
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9428
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9445
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9448
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9449
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9477
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9492
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.str = ""
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9609
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9614
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9631
		{

		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9646
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.str = ""
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.str = ""
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.str = ""
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.str = ""
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9701
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9727
		{
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9756
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9774
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9778
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9836
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9881
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9919
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9951
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9972
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9987
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10131
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10166
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10167
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10168
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10229
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10273
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = true
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = false
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10342
		{
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10343
		{
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = nil
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10357
		{
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = true
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = false
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = false
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = true
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10387
		{
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10390
		{
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10391
		{
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10432
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10444
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10449
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10508
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10564
		{
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10602
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10603
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10604
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10634
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10636
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10651
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10673
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10678
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10683
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10704
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10720
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10751
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10793
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10803
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10849
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10879
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10912
		{
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = nil
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = true
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = false
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.str = tree.AstFull
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.str = tree.AstRight
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.str = tree.AstInner
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11032
		{
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.str = tree.AstHash
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.str = ""
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11101
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11106
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11124
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11136
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11146
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = true
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = false
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = true
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = false
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11195
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11208
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11216
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11217
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11235
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11237
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11245
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11258
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11265
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11274
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11314
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11326
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11327
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = types.Geography
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11376
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11384
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11410
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11418
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = nil
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = types.Int2
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = types.Int
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = types.Float4
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = types.Float
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11461
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11469
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11477
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = types.Bool
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11491
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = types.Float
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11510
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11516
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11538
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = types.String
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = true
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = false
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = types.Date
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11587
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11595
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11609
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11618
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11626
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11643
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = true
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = false
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = false
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = types.Interval
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11667
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = nil
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11796
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11856
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12005
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12013
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12135
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12212
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12234
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12342
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12350
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12451
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12477
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12501
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12535
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12546
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12547
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12562
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12571
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12637
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12752
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12762
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12767
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12776
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12785
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12794
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12796
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12803
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12805
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12808
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12813
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12818
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12823
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12828
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12837
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12838
		{
			return unimplemented(sqllex, "treat")
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12848
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12859
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12864
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12874
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12901
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12911
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12934
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.str = ""
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12978
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13013
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13081
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13110
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13122
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13126
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13151
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13152
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13163
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13165
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13170
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13174
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13186
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13210
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13211
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13239
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13245
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13274
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13278
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13291
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13295
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13301
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13311
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13331
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13335
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13358
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13362
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13366
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13372
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13379
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13383
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13400
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13404
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13408
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13438
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13442
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13448
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13460
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13467
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13477
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13483
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13487
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13494
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13500
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13504
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13511
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13517
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13526
		{
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13527
		{
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13531
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13535
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13541
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13550
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13566
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13570
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13599
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13607
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13630
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13639
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13643
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13647
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13651
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13657
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13676
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13680
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13692
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13696
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13705
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13716
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13725
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13733
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13750
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13835
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13843
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13847
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13853
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13863
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13869
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13876
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13903
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13910
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13914
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13918
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13932
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13936
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13940
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13953
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13962
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13980
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13993
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14000
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14025
		{
			sqlVAL.str = ""
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14031
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14035
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
