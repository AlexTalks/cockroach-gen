// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionParams() tree.FuncParams {
	return u.val.(tree.FuncParams)
}
func (u *sqlSymUnion) functionParam() tree.FuncParam {
	return u.val.(tree.FuncParam)
}
func (u *sqlSymUnion) functionParamClass() tree.FuncParamClass {
	return u.val.(tree.FuncParamClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:982
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const AT_AT = lexbase.AT_AT
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const EXTREMES = lexbase.EXTREMES
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INDEX_BEFORE_PAREN = lexbase.INDEX_BEFORE_PAREN
const INDEX_BEFORE_NAME_THEN_PAREN = lexbase.INDEX_BEFORE_NAME_THEN_PAREN
const INDEX_AFTER_ORDER_BY_BEFORE_AT = lexbase.INDEX_AFTER_ORDER_BY_BEFORE_AT
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTHING_AFTER_RETURNING = lexbase.NOTHING_AFTER_RETURNING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"AT_AT",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"EXTREMES",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INDEX_BEFORE_PAREN",
	"INDEX_BEFORE_NAME_THEN_PAREN",
	"INDEX_AFTER_ORDER_BY_BEFORE_AT",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTHING_AFTER_RETURNING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15995

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1941,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 65,
	289, 588,
	-2, 0,
	-1, 77,
	8, 1073,
	29, 1073,
	657, 1073,
	658, 1073,
	-2, 0,
	-1, 78,
	8, 1073,
	29, 1073,
	657, 1073,
	658, 1073,
	-2, 0,
	-1, 81,
	171, 1211,
	287, 1211,
	433, 1172,
	508, 1172,
	555, 1172,
	575, 1211,
	577, 1172,
	-2, 0,
	-1, 82,
	1, 1788,
	141, 1788,
	276, 1788,
	364, 1788,
	428, 1788,
	438, 1788,
	638, 1788,
	670, 1788,
	-2, 0,
	-1, 83,
	1, 1788,
	670, 1788,
	-2, 0,
	-1, 89,
	269, 297,
	572, 297,
	-2, 0,
	-1, 104,
	207, 488,
	252, 1662,
	271, 1662,
	289, 488,
	430, 488,
	442, 1403,
	486, 488,
	503, 1403,
	556, 1403,
	585, 488,
	614, 1403,
	-2, 0,
	-1, 112,
	143, 1941,
	264, 1941,
	597, 1941,
	598, 1941,
	-2, 0,
	-1, 130,
	163, 1912,
	185, 1912,
	198, 1912,
	267, 1912,
	303, 1912,
	378, 1912,
	389, 1912,
	591, 1912,
	-2, 1883,
	-1, 179,
	4, 1943,
	21, 1943,
	22, 1943,
	23, 1943,
	24, 1943,
	25, 1943,
	26, 1943,
	27, 1943,
	28, 1943,
	30, 1943,
	31, 1943,
	37, 1943,
	42, 1943,
	44, 1943,
	45, 1943,
	46, 1943,
	48, 1943,
	49, 1943,
	50, 1943,
	51, 1943,
	52, 1943,
	53, 1943,
	54, 1943,
	55, 1943,
	56, 1943,
	58, 1943,
	59, 1943,
	60, 1943,
	61, 1943,
	63, 1943,
	64, 1943,
	65, 1943,
	66, 1943,
	67, 1943,
	68, 1943,
	69, 1943,
	70, 1943,
	74, 1943,
	75, 1943,
	76, 1943,
	77, 1943,
	79, 1943,
	80, 1943,
	81, 1943,
	85, 1943,
	86, 1943,
	87, 1943,
	88, 1943,
	89, 1943,
	90, 1943,
	91, 1943,
	92, 1943,
	95, 1943,
	96, 1943,
	97, 1943,
	98, 1943,
	99, 1943,
	100, 1943,
	102, 1943,
	104, 1943,
	105, 1943,
	106, 1943,
	107, 1943,
	108, 1943,
	109, 1943,
	110, 1943,
	112, 1943,
	113, 1943,
	114, 1943,
	116, 1943,
	117, 1943,
	118, 1943,
	126, 1943,
	127, 1943,
	128, 1943,
	129, 1943,
	130, 1943,
	132, 1943,
	133, 1943,
	134, 1943,
	135, 1943,
	137, 1943,
	138, 1943,
	139, 1943,
	140, 1943,
	142, 1943,
	143, 1943,
	144, 1943,
	145, 1943,
	147, 1943,
	148, 1943,
	149, 1943,
	152, 1943,
	153, 1943,
	154, 1943,
	156, 1943,
	157, 1943,
	158, 1943,
	160, 1943,
	161, 1943,
	162, 1943,
	164, 1943,
	165, 1943,
	166, 1943,
	167, 1943,
	168, 1943,
	169, 1943,
	170, 1943,
	171, 1943,
	172, 1943,
	173, 1943,
	174, 1943,
	175, 1943,
	176, 1943,
	177, 1943,
	178, 1943,
	179, 1943,
	180, 1943,
	181, 1943,
	182, 1943,
	184, 1943,
	190, 1943,
	191, 1943,
	192, 1943,
	193, 1943,
	197, 1943,
	199, 1943,
	200, 1943,
	201, 1943,
	203, 1943,
	204, 1943,
	207, 1943,
	208, 1943,
	209, 1943,
	210, 1943,
	211, 1943,
	212, 1943,
	213, 1943,
	214, 1943,
	215, 1943,
	216, 1943,
	217, 1943,
	218, 1943,
	219, 1943,
	220, 1943,
	222, 1943,
	223, 1943,
	225, 1943,
	226, 1943,
	228, 1943,
	229, 1943,
	230, 1943,
	231, 1943,
	232, 1943,
	233, 1943,
	234, 1943,
	235, 1943,
	236, 1943,
	237, 1943,
	238, 1943,
	240, 1943,
	241, 1943,
	242, 1943,
	244, 1943,
	245, 1943,
	246, 1943,
	247, 1943,
	248, 1943,
	252, 1943,
	253, 1943,
	254, 1943,
	255, 1943,
	257, 1943,
	258, 1943,
	259, 1943,
	261, 1943,
	262, 1943,
	263, 1943,
	264, 1943,
	265, 1943,
	266, 1943,
	268, 1943,
	270, 1943,
	271, 1943,
	272, 1943,
	274, 1943,
	276, 1943,
	277, 1943,
	278, 1943,
	280, 1943,
	284, 1943,
	285, 1943,
	286, 1943,
	287, 1943,
	288, 1943,
	289, 1943,
	290, 1943,
	292, 1943,
	293, 1943,
	294, 1943,
	296, 1943,
	297, 1943,
	298, 1943,
	300, 1943,
	301, 1943,
	304, 1943,
	305, 1943,
	306, 1943,
	307, 1943,
	308, 1943,
	309, 1943,
	310, 1943,
	313, 1943,
	314, 1943,
	315, 1943,
	316, 1943,
	318, 1943,
	319, 1943,
	320, 1943,
	321, 1943,
	322, 1943,
	323, 1943,
	324, 1943,
	325, 1943,
	326, 1943,
	327, 1943,
	328, 1943,
	329, 1943,
	330, 1943,
	331, 1943,
	332, 1943,
	333, 1943,
	334, 1943,
	335, 1943,
	336, 1943,
	337, 1943,
	338, 1943,
	339, 1943,
	340, 1943,
	342, 1943,
	344, 1943,
	345, 1943,
	346, 1943,
	347, 1943,
	348, 1943,
	349, 1943,
	350, 1943,
	351, 1943,
	352, 1943,
	353, 1943,
	354, 1943,
	355, 1943,
	356, 1943,
	357, 1943,
	358, 1943,
	359, 1943,
	360, 1943,
	362, 1943,
	363, 1943,
	365, 1943,
	366, 1943,
	368, 1943,
	369, 1943,
	370, 1943,
	371, 1943,
	373, 1943,
	374, 1943,
	375, 1943,
	376, 1943,
	377, 1943,
	380, 1943,
	382, 1943,
	384, 1943,
	385, 1943,
	386, 1943,
	387, 1943,
	390, 1943,
	391, 1943,
	392, 1943,
	394, 1943,
	396, 1943,
	397, 1943,
	398, 1943,
	399, 1943,
	400, 1943,
	401, 1943,
	402, 1943,
	403, 1943,
	404, 1943,
	405, 1943,
	406, 1943,
	407, 1943,
	408, 1943,
	409, 1943,
	411, 1943,
	412, 1943,
	413, 1943,
	414, 1943,
	415, 1943,
	416, 1943,
	417, 1943,
	418, 1943,
	419, 1943,
	420, 1943,
	421, 1943,
	422, 1943,
	423, 1943,
	424, 1943,
	425, 1943,
	427, 1943,
	428, 1943,
	429, 1943,
	431, 1943,
	432, 1943,
	433, 1943,
	434, 1943,
	435, 1943,
	436, 1943,
	437, 1943,
	438, 1943,
	439, 1943,
	440, 1943,
	441, 1943,
	442, 1943,
	443, 1943,
	444, 1943,
	446, 1943,
	448, 1943,
	449, 1943,
	450, 1943,
	456, 1943,
	457, 1943,
	458, 1943,
	460, 1943,
	461, 1943,
	462, 1943,
	463, 1943,
	464, 1943,
	465, 1943,
	466, 1943,
	467, 1943,
	468, 1943,
	469, 1943,
	470, 1943,
	472, 1943,
	473, 1943,
	474, 1943,
	475, 1943,
	476, 1943,
	478, 1943,
	479, 1943,
	480, 1943,
	481, 1943,
	482, 1943,
	483, 1943,
	484, 1943,
	486, 1943,
	487, 1943,
	488, 1943,
	489, 1943,
	490, 1943,
	491, 1943,
	492, 1943,
	493, 1943,
	494, 1943,
	495, 1943,
	496, 1943,
	497, 1943,
	498, 1943,
	499, 1943,
	500, 1943,
	501, 1943,
	503, 1943,
	504, 1943,
	505, 1943,
	506, 1943,
	507, 1943,
	508, 1943,
	510, 1943,
	511, 1943,
	512, 1943,
	513, 1943,
	514, 1943,
	515, 1943,
	516, 1943,
	518, 1943,
	519, 1943,
	520, 1943,
	521, 1943,
	522, 1943,
	523, 1943,
	524, 1943,
	525, 1943,
	527, 1943,
	529, 1943,
	530, 1943,
	531, 1943,
	532, 1943,
	533, 1943,
	534, 1943,
	535, 1943,
	536, 1943,
	537, 1943,
	538, 1943,
	539, 1943,
	540, 1943,
	541, 1943,
	542, 1943,
	543, 1943,
	544, 1943,
	545, 1943,
	546, 1943,
	547, 1943,
	548, 1943,
	549, 1943,
	551, 1943,
	552, 1943,
	554, 1943,
	555, 1943,
	557, 1943,
	558, 1943,
	559, 1943,
	560, 1943,
	561, 1943,
	562, 1943,
	564, 1943,
	565, 1943,
	567, 1943,
	568, 1943,
	569, 1943,
	570, 1943,
	571, 1943,
	573, 1943,
	575, 1943,
	576, 1943,
	577, 1943,
	578, 1943,
	579, 1943,
	580, 1943,
	581, 1943,
	582, 1943,
	584, 1943,
	585, 1943,
	586, 1943,
	587, 1943,
	588, 1943,
	589, 1943,
	590, 1943,
	593, 1943,
	594, 1943,
	595, 1943,
	596, 1943,
	597, 1943,
	598, 1943,
	599, 1943,
	600, 1943,
	601, 1943,
	603, 1943,
	606, 1943,
	607, 1943,
	608, 1943,
	609, 1943,
	610, 1943,
	611, 1943,
	613, 1943,
	614, 1943,
	615, 1943,
	616, 1943,
	617, 1943,
	618, 1943,
	619, 1943,
	620, 1943,
	621, 1943,
	622, 1943,
	623, 1943,
	624, 1943,
	629, 1943,
	630, 1943,
	631, 1943,
	632, 1943,
	633, 1943,
	634, 1943,
	-2, 0,
	-1, 181,
	1, 1788,
	670, 1788,
	673, 1788,
	-2, 0,
	-1, 182,
	1, 1788,
	572, 1788,
	670, 1788,
	673, 1788,
	-2, 0,
	-1, 218,
	163, 1911,
	185, 1911,
	198, 1911,
	267, 1911,
	303, 1911,
	378, 1911,
	389, 1911,
	591, 1911,
	-2, 1886,
	-1, 279,
	4, 1950,
	5, 1950,
	6, 1950,
	7, 1950,
	8, 1950,
	9, 1950,
	10, 1950,
	21, 1950,
	22, 1950,
	23, 1950,
	24, 1950,
	25, 1950,
	26, 1950,
	27, 1950,
	28, 1950,
	30, 1950,
	31, 1950,
	37, 1950,
	38, 1950,
	42, 1950,
	44, 1950,
	45, 1950,
	46, 1950,
	47, 1950,
	48, 1950,
	49, 1950,
	50, 1950,
	51, 1950,
	52, 1950,
	53, 1950,
	54, 1950,
	55, 1950,
	56, 1950,
	58, 1950,
	59, 1950,
	60, 1950,
	61, 1950,
	63, 1950,
	64, 1950,
	65, 1950,
	66, 1950,
	67, 1950,
	68, 1950,
	69, 1950,
	70, 1950,
	71, 1950,
	72, 1950,
	73, 1950,
	74, 1950,
	75, 1950,
	76, 1950,
	77, 1950,
	79, 1950,
	80, 1950,
	81, 1950,
	83, 1950,
	85, 1950,
	86, 1950,
	87, 1950,
	88, 1950,
	89, 1950,
	90, 1950,
	91, 1950,
	92, 1950,
	95, 1950,
	96, 1950,
	97, 1950,
	98, 1950,
	99, 1950,
	100, 1950,
	102, 1950,
	104, 1950,
	105, 1950,
	106, 1950,
	107, 1950,
	108, 1950,
	109, 1950,
	110, 1950,
	112, 1950,
	113, 1950,
	114, 1950,
	115, 1950,
	116, 1950,
	117, 1950,
	118, 1950,
	119, 1950,
	120, 1950,
	121, 1950,
	122, 1950,
	123, 1950,
	124, 1950,
	125, 1950,
	126, 1950,
	127, 1950,
	128, 1950,
	129, 1950,
	130, 1950,
	131, 1950,
	132, 1950,
	133, 1950,
	134, 1950,
	135, 1950,
	136, 1950,
	137, 1950,
	138, 1950,
	139, 1950,
	140, 1950,
	142, 1950,
	143, 1950,
	144, 1950,
	145, 1950,
	147, 1950,
	148, 1950,
	149, 1950,
	152, 1950,
	153, 1950,
	154, 1950,
	156, 1950,
	157, 1950,
	158, 1950,
	160, 1950,
	161, 1950,
	162, 1950,
	164, 1950,
	165, 1950,
	166, 1950,
	167, 1950,
	168, 1950,
	169, 1950,
	170, 1950,
	171, 1950,
	172, 1950,
	173, 1950,
	174, 1950,
	175, 1950,
	176, 1950,
	177, 1950,
	178, 1950,
	179, 1950,
	180, 1950,
	181, 1950,
	182, 1950,
	183, 1950,
	184, 1950,
	190, 1950,
	191, 1950,
	192, 1950,
	193, 1950,
	197, 1950,
	199, 1950,
	200, 1950,
	201, 1950,
	203, 1950,
	204, 1950,
	206, 1950,
	207, 1950,
	208, 1950,
	209, 1950,
	210, 1950,
	211, 1950,
	212, 1950,
	213, 1950,
	214, 1950,
	215, 1950,
	216, 1950,
	217, 1950,
	218, 1950,
	219, 1950,
	220, 1950,
	222, 1950,
	223, 1950,
	225, 1950,
	226, 1950,
	228, 1950,
	229, 1950,
	230, 1950,
	231, 1950,
	232, 1950,
	233, 1950,
	234, 1950,
	235, 1950,
	236, 1950,
	237, 1950,
	238, 1950,
	239, 1950,
	240, 1950,
	241, 1950,
	242, 1950,
	244, 1950,
	245, 1950,
	246, 1950,
	247, 1950,
	248, 1950,
	252, 1950,
	253, 1950,
	254, 1950,
	255, 1950,
	257, 1950,
	258, 1950,
	259, 1950,
	260, 1950,
	261, 1950,
	262, 1950,
	263, 1950,
	264, 1950,
	265, 1950,
	266, 1950,
	268, 1950,
	270, 1950,
	271, 1950,
	272, 1950,
	273, 1950,
	274, 1950,
	275, 1950,
	276, 1950,
	277, 1950,
	278, 1950,
	279, 1950,
	280, 1950,
	284, 1950,
	285, 1950,
	286, 1950,
	287, 1950,
	288, 1950,
	289, 1950,
	290, 1950,
	292, 1950,
	293, 1950,
	294, 1950,
	296, 1950,
	297, 1950,
	298, 1950,
	299, 1950,
	300, 1950,
	301, 1950,
	302, 1950,
	304, 1950,
	305, 1950,
	306, 1950,
	307, 1950,
	308, 1950,
	309, 1950,
	310, 1950,
	311, 1950,
	312, 1950,
	313, 1950,
	314, 1950,
	315, 1950,
	316, 1950,
	318, 1950,
	319, 1950,
	320, 1950,
	321, 1950,
	322, 1950,
	323, 1950,
	324, 1950,
	325, 1950,
	326, 1950,
	327, 1950,
	328, 1950,
	329, 1950,
	330, 1950,
	331, 1950,
	332, 1950,
	333, 1950,
	334, 1950,
	335, 1950,
	336, 1950,
	337, 1950,
	338, 1950,
	339, 1950,
	340, 1950,
	342, 1950,
	343, 1950,
	344, 1950,
	345, 1950,
	346, 1950,
	347, 1950,
	348, 1950,
	349, 1950,
	350, 1950,
	351, 1950,
	352, 1950,
	353, 1950,
	354, 1950,
	355, 1950,
	356, 1950,
	357, 1950,
	358, 1950,
	359, 1950,
	360, 1950,
	361, 1950,
	362, 1950,
	363, 1950,
	364, 1950,
	365, 1950,
	366, 1950,
	367, 1950,
	368, 1950,
	369, 1950,
	370, 1950,
	371, 1950,
	372, 1950,
	373, 1950,
	374, 1950,
	375, 1950,
	376, 1950,
	377, 1950,
	380, 1950,
	382, 1950,
	385, 1950,
	386, 1950,
	387, 1950,
	390, 1950,
	391, 1950,
	392, 1950,
	393, 1950,
	394, 1950,
	395, 1950,
	396, 1950,
	397, 1950,
	398, 1950,
	399, 1950,
	400, 1950,
	401, 1950,
	402, 1950,
	403, 1950,
	404, 1950,
	405, 1950,
	406, 1950,
	407, 1950,
	408, 1950,
	409, 1950,
	411, 1950,
	412, 1950,
	413, 1950,
	414, 1950,
	415, 1950,
	416, 1950,
	417, 1950,
	418, 1950,
	419, 1950,
	420, 1950,
	421, 1950,
	422, 1950,
	423, 1950,
	424, 1950,
	425, 1950,
	427, 1950,
	428, 1950,
	429, 1950,
	431, 1950,
	432, 1950,
	433, 1950,
	434, 1950,
	435, 1950,
	436, 1950,
	437, 1950,
	438, 1950,
	439, 1950,
	440, 1950,
	441, 1950,
	442, 1950,
	443, 1950,
	444, 1950,
	446, 1950,
	448, 1950,
	449, 1950,
	450, 1950,
	456, 1950,
	457, 1950,
	458, 1950,
	460, 1950,
	461, 1950,
	462, 1950,
	463, 1950,
	464, 1950,
	465, 1950,
	466, 1950,
	467, 1950,
	468, 1950,
	469, 1950,
	470, 1950,
	472, 1950,
	473, 1950,
	474, 1950,
	475, 1950,
	476, 1950,
	477, 1950,
	478, 1950,
	479, 1950,
	480, 1950,
	481, 1950,
	482, 1950,
	483, 1950,
	484, 1950,
	486, 1950,
	487, 1950,
	488, 1950,
	489, 1950,
	490, 1950,
	491, 1950,
	492, 1950,
	493, 1950,
	494, 1950,
	495, 1950,
	496, 1950,
	497, 1950,
	498, 1950,
	499, 1950,
	500, 1950,
	501, 1950,
	503, 1950,
	504, 1950,
	505, 1950,
	506, 1950,
	507, 1950,
	508, 1950,
	509, 1950,
	510, 1950,
	511, 1950,
	512, 1950,
	513, 1950,
	514, 1950,
	515, 1950,
	516, 1950,
	517, 1950,
	518, 1950,
	519, 1950,
	520, 1950,
	521, 1950,
	522, 1950,
	523, 1950,
	524, 1950,
	525, 1950,
	527, 1950,
	529, 1950,
	530, 1950,
	531, 1950,
	532, 1950,
	533, 1950,
	534, 1950,
	535, 1950,
	536, 1950,
	537, 1950,
	538, 1950,
	539, 1950,
	540, 1950,
	541, 1950,
	542, 1950,
	543, 1950,
	544, 1950,
	545, 1950,
	546, 1950,
	547, 1950,
	548, 1950,
	549, 1950,
	551, 1950,
	552, 1950,
	553, 1950,
	554, 1950,
	555, 1950,
	557, 1950,
	558, 1950,
	559, 1950,
	560, 1950,
	561, 1950,
	562, 1950,
	564, 1950,
	565, 1950,
	567, 1950,
	568, 1950,
	569, 1950,
	570, 1950,
	571, 1950,
	573, 1950,
	575, 1950,
	576, 1950,
	577, 1950,
	578, 1950,
	579, 1950,
	580, 1950,
	581, 1950,
	582, 1950,
	583, 1950,
	584, 1950,
	585, 1950,
	586, 1950,
	587, 1950,
	588, 1950,
	589, 1950,
	590, 1950,
	592, 1950,
	593, 1950,
	594, 1950,
	595, 1950,
	596, 1950,
	597, 1950,
	598, 1950,
	599, 1950,
	600, 1950,
	601, 1950,
	602, 1950,
	603, 1950,
	606, 1950,
	607, 1950,
	608, 1950,
	609, 1950,
	610, 1950,
	611, 1950,
	613, 1950,
	614, 1950,
	615, 1950,
	616, 1950,
	617, 1950,
	618, 1950,
	619, 1950,
	620, 1950,
	621, 1950,
	622, 1950,
	623, 1950,
	624, 1950,
	629, 1950,
	630, 1950,
	631, 1950,
	632, 1950,
	633, 1950,
	634, 1950,
	635, 1950,
	650, 1950,
	657, 1950,
	658, 1950,
	659, 1950,
	667, 1950,
	671, 1950,
	-2, 0,
	-1, 865,
	4, 1660,
	21, 1660,
	22, 1660,
	23, 1660,
	24, 1660,
	25, 1660,
	26, 1660,
	27, 1660,
	28, 1660,
	30, 1660,
	31, 1660,
	37, 1660,
	42, 1660,
	44, 1660,
	45, 1660,
	46, 1660,
	48, 1660,
	49, 1660,
	50, 1660,
	51, 1660,
	52, 1660,
	53, 1660,
	54, 1660,
	55, 1660,
	56, 1660,
	58, 1660,
	59, 1660,
	60, 1660,
	61, 1660,
	63, 1660,
	64, 1660,
	65, 1660,
	66, 1660,
	67, 1660,
	68, 1660,
	69, 1660,
	70, 1660,
	74, 1660,
	75, 1660,
	76, 1660,
	77, 1660,
	79, 1660,
	80, 1660,
	81, 1660,
	85, 1660,
	86, 1660,
	87, 1660,
	88, 1660,
	89, 1660,
	90, 1660,
	91, 1660,
	92, 1660,
	95, 1660,
	96, 1660,
	97, 1660,
	98, 1660,
	99, 1660,
	100, 1660,
	102, 1660,
	104, 1660,
	105, 1660,
	106, 1660,
	107, 1660,
	108, 1660,
	109, 1660,
	110, 1660,
	112, 1660,
	113, 1660,
	114, 1660,
	116, 1660,
	117, 1660,
	118, 1660,
	126, 1660,
	127, 1660,
	128, 1660,
	129, 1660,
	130, 1660,
	132, 1660,
	133, 1660,
	134, 1660,
	135, 1660,
	137, 1660,
	138, 1660,
	139, 1660,
	140, 1660,
	142, 1660,
	143, 1660,
	144, 1660,
	145, 1660,
	147, 1660,
	148, 1660,
	149, 1660,
	152, 1660,
	153, 1660,
	154, 1660,
	156, 1660,
	157, 1660,
	158, 1660,
	160, 1660,
	161, 1660,
	162, 1660,
	164, 1660,
	165, 1660,
	166, 1660,
	167, 1660,
	168, 1660,
	169, 1660,
	170, 1660,
	171, 1660,
	172, 1660,
	173, 1660,
	174, 1660,
	175, 1660,
	176, 1660,
	177, 1660,
	178, 1660,
	179, 1660,
	180, 1660,
	181, 1660,
	182, 1660,
	184, 1660,
	190, 1660,
	191, 1660,
	192, 1660,
	193, 1660,
	197, 1660,
	199, 1660,
	200, 1660,
	201, 1660,
	203, 1660,
	204, 1660,
	207, 1660,
	208, 1660,
	209, 1660,
	210, 1660,
	211, 1660,
	212, 1660,
	213, 1660,
	214, 1660,
	215, 1660,
	216, 1660,
	217, 1660,
	218, 1660,
	219, 1660,
	220, 1660,
	222, 1660,
	223, 1660,
	225, 1660,
	226, 1660,
	228, 1660,
	229, 1660,
	230, 1660,
	231, 1660,
	232, 1660,
	233, 1660,
	234, 1660,
	235, 1660,
	236, 1660,
	237, 1660,
	238, 1660,
	240, 1660,
	241, 1660,
	242, 1660,
	244, 1660,
	245, 1660,
	246, 1660,
	247, 1660,
	248, 1660,
	252, 1660,
	253, 1660,
	254, 1660,
	255, 1660,
	257, 1660,
	258, 1660,
	259, 1660,
	261, 1660,
	262, 1660,
	263, 1660,
	264, 1660,
	265, 1660,
	266, 1660,
	268, 1660,
	270, 1660,
	271, 1660,
	272, 1660,
	274, 1660,
	276, 1660,
	277, 1660,
	278, 1660,
	280, 1660,
	284, 1660,
	285, 1660,
	286, 1660,
	287, 1660,
	288, 1660,
	289, 1660,
	290, 1660,
	292, 1660,
	293, 1660,
	294, 1660,
	296, 1660,
	297, 1660,
	298, 1660,
	300, 1660,
	301, 1660,
	304, 1660,
	305, 1660,
	306, 1660,
	307, 1660,
	308, 1660,
	309, 1660,
	310, 1660,
	313, 1660,
	314, 1660,
	315, 1660,
	316, 1660,
	318, 1660,
	319, 1660,
	320, 1660,
	321, 1660,
	322, 1660,
	323, 1660,
	324, 1660,
	325, 1660,
	326, 1660,
	327, 1660,
	328, 1660,
	329, 1660,
	330, 1660,
	331, 1660,
	332, 1660,
	333, 1660,
	334, 1660,
	335, 1660,
	336, 1660,
	337, 1660,
	338, 1660,
	339, 1660,
	340, 1660,
	342, 1660,
	344, 1660,
	345, 1660,
	346, 1660,
	347, 1660,
	348, 1660,
	349, 1660,
	350, 1660,
	351, 1660,
	352, 1660,
	353, 1660,
	354, 1660,
	355, 1660,
	356, 1660,
	357, 1660,
	358, 1660,
	359, 1660,
	360, 1660,
	362, 1660,
	363, 1660,
	365, 1660,
	366, 1660,
	368, 1660,
	369, 1660,
	370, 1660,
	371, 1660,
	373, 1660,
	374, 1660,
	375, 1660,
	376, 1660,
	377, 1660,
	380, 1660,
	382, 1660,
	385, 1660,
	386, 1660,
	387, 1660,
	390, 1660,
	391, 1660,
	392, 1660,
	394, 1660,
	396, 1660,
	397, 1660,
	398, 1660,
	399, 1660,
	400, 1660,
	401, 1660,
	402, 1660,
	403, 1660,
	404, 1660,
	405, 1660,
	406, 1660,
	407, 1660,
	408, 1660,
	409, 1660,
	411, 1660,
	412, 1660,
	413, 1660,
	414, 1660,
	415, 1660,
	416, 1660,
	417, 1660,
	418, 1660,
	419, 1660,
	420, 1660,
	421, 1660,
	422, 1660,
	423, 1660,
	424, 1660,
	425, 1660,
	427, 1660,
	428, 1660,
	429, 1660,
	431, 1660,
	432, 1660,
	433, 1660,
	434, 1660,
	435, 1660,
	436, 1660,
	437, 1660,
	438, 1660,
	439, 1660,
	440, 1660,
	441, 1660,
	442, 1660,
	443, 1660,
	444, 1660,
	446, 1660,
	448, 1660,
	449, 1660,
	450, 1660,
	456, 1660,
	457, 1660,
	458, 1660,
	460, 1660,
	461, 1660,
	462, 1660,
	463, 1660,
	464, 1660,
	465, 1660,
	466, 1660,
	467, 1660,
	468, 1660,
	469, 1660,
	470, 1660,
	472, 1660,
	473, 1660,
	474, 1660,
	475, 1660,
	476, 1660,
	478, 1660,
	479, 1660,
	480, 1660,
	481, 1660,
	482, 1660,
	483, 1660,
	484, 1660,
	486, 1660,
	487, 1660,
	488, 1660,
	489, 1660,
	490, 1660,
	491, 1660,
	492, 1660,
	493, 1660,
	494, 1660,
	495, 1660,
	496, 1660,
	497, 1660,
	498, 1660,
	499, 1660,
	500, 1660,
	501, 1660,
	503, 1660,
	504, 1660,
	505, 1660,
	506, 1660,
	507, 1660,
	508, 1660,
	510, 1660,
	511, 1660,
	512, 1660,
	513, 1660,
	514, 1660,
	515, 1660,
	516, 1660,
	518, 1660,
	519, 1660,
	520, 1660,
	521, 1660,
	522, 1660,
	523, 1660,
	524, 1660,
	525, 1660,
	527, 1660,
	529, 1660,
	530, 1660,
	531, 1660,
	532, 1660,
	533, 1660,
	534, 1660,
	535, 1660,
	536, 1660,
	537, 1660,
	538, 1660,
	539, 1660,
	540, 1660,
	541, 1660,
	542, 1660,
	543, 1660,
	544, 1660,
	545, 1660,
	546, 1660,
	547, 1660,
	548, 1660,
	549, 1660,
	551, 1660,
	552, 1660,
	554, 1660,
	555, 1660,
	557, 1660,
	558, 1660,
	559, 1660,
	560, 1660,
	561, 1660,
	562, 1660,
	564, 1660,
	565, 1660,
	567, 1660,
	568, 1660,
	569, 1660,
	570, 1660,
	571, 1660,
	573, 1660,
	575, 1660,
	576, 1660,
	577, 1660,
	578, 1660,
	579, 1660,
	580, 1660,
	581, 1660,
	582, 1660,
	584, 1660,
	585, 1660,
	586, 1660,
	587, 1660,
	588, 1660,
	589, 1660,
	590, 1660,
	593, 1660,
	594, 1660,
	595, 1660,
	596, 1660,
	597, 1660,
	598, 1660,
	599, 1660,
	600, 1660,
	601, 1660,
	603, 1660,
	606, 1660,
	607, 1660,
	608, 1660,
	609, 1660,
	610, 1660,
	611, 1660,
	613, 1660,
	614, 1660,
	615, 1660,
	616, 1660,
	617, 1660,
	618, 1660,
	619, 1660,
	620, 1660,
	621, 1660,
	622, 1660,
	623, 1660,
	624, 1660,
	629, 1660,
	630, 1660,
	631, 1660,
	632, 1660,
	633, 1660,
	634, 1660,
	-2, 0,
	-1, 885,
	205, 2771,
	572, 2771,
	649, 2771,
	669, 2771,
	-2, 0,
	-1, 886,
	205, 2756,
	572, 2756,
	649, 2756,
	669, 2756,
	-2, 0,
	-1, 888,
	205, 3057,
	572, 3057,
	649, 3057,
	669, 3057,
	-2, 0,
	-1, 891,
	205, 2898,
	572, 2898,
	649, 2898,
	669, 2898,
	-2, 0,
	-1, 892,
	205, 3104,
	572, 3104,
	649, 3104,
	669, 3104,
	-2, 0,
	-1, 900,
	205, 2926,
	572, 2926,
	649, 2926,
	669, 2926,
	-2, 933,
	-1, 916,
	8, 1072,
	29, 1072,
	657, 1072,
	658, 1072,
	-2, 1077,
	-1, 920,
	1, 2830,
	670, 2830,
	673, 2830,
	-2, 1077,
	-1, 921,
	1, 2885,
	670, 2885,
	673, 2885,
	-2, 1077,
	-1, 924,
	1, 2931,
	670, 2931,
	673, 2931,
	-2, 1070,
	-1, 925,
	1, 2989,
	670, 2989,
	673, 2989,
	-2, 1071,
	-1, 926,
	1, 2835,
	670, 2835,
	673, 2835,
	-2, 1074,
	-1, 927,
	1, 2742,
	670, 2742,
	673, 2742,
	-2, 1075,
	-1, 945,
	205, 1117,
	-2, 0,
	-1, 946,
	433, 1173,
	508, 1173,
	555, 1173,
	577, 1173,
	-2, 0,
	-1, 947,
	433, 1172,
	508, 1172,
	555, 1172,
	577, 1172,
	-2, 1090,
	-1, 951,
	1, 1229,
	666, 1229,
	668, 1229,
	670, 1229,
	673, 1229,
	-2, 0,
	-1, 953,
	1, 1145,
	666, 1145,
	668, 1145,
	670, 1145,
	673, 1145,
	-2, 0,
	-1, 954,
	1, 1149,
	666, 1149,
	668, 1149,
	670, 1149,
	673, 1149,
	-2, 0,
	-1, 955,
	1, 1308,
	198, 1308,
	666, 1308,
	668, 1308,
	670, 1308,
	673, 1308,
	-2, 0,
	-1, 965,
	1, 1178,
	666, 1178,
	668, 1178,
	670, 1178,
	673, 1178,
	-2, 0,
	-1, 972,
	1, 1229,
	666, 1229,
	668, 1229,
	670, 1229,
	673, 1229,
	-2, 0,
	-1, 973,
	1, 1222,
	666, 1222,
	668, 1222,
	670, 1222,
	673, 1222,
	-2, 0,
	-1, 974,
	1, 1231,
	666, 1231,
	668, 1231,
	670, 1231,
	673, 1231,
	-2, 0,
	-1, 975,
	1, 1234,
	666, 1234,
	668, 1234,
	670, 1234,
	673, 1234,
	-2, 0,
	-1, 983,
	1, 1271,
	666, 1271,
	668, 1271,
	670, 1271,
	673, 1271,
	-2, 0,
	-1, 984,
	1, 1273,
	666, 1273,
	668, 1273,
	670, 1273,
	673, 1273,
	-2, 0,
	-1, 989,
	1, 1301,
	666, 1301,
	668, 1301,
	670, 1301,
	673, 1301,
	-2, 0,
	-1, 1039,
	669, 2699,
	672, 2699,
	-2, 1319,
	-1, 1040,
	669, 2701,
	672, 2701,
	-2, 1320,
	-1, 1041,
	669, 2700,
	672, 2700,
	-2, 1321,
	-1, 1042,
	672, 2622,
	-2, 1322,
	-1, 1069,
	198, 331,
	-2, 0,
	-1, 1092,
	47, 2671,
	-2, 0,
	-1, 1093,
	614, 1638,
	-2, 1404,
	-1, 1110,
	4, 2098,
	21, 2098,
	22, 2098,
	23, 2098,
	24, 2098,
	25, 2098,
	26, 2098,
	27, 2098,
	28, 2098,
	30, 2098,
	31, 2098,
	37, 2098,
	42, 2098,
	44, 2098,
	45, 2098,
	46, 2098,
	48, 2098,
	49, 2098,
	50, 2098,
	51, 2098,
	52, 2098,
	53, 2098,
	54, 2098,
	55, 2098,
	56, 2098,
	58, 2098,
	59, 2098,
	60, 2098,
	61, 2098,
	63, 2098,
	64, 2098,
	65, 2098,
	66, 2098,
	67, 2098,
	68, 2098,
	69, 2098,
	70, 2098,
	74, 2098,
	75, 2098,
	76, 2098,
	77, 2098,
	79, 2098,
	80, 2098,
	81, 2098,
	85, 2098,
	86, 2098,
	87, 2098,
	88, 2098,
	89, 2098,
	90, 2098,
	91, 2098,
	92, 2098,
	95, 2098,
	96, 2098,
	97, 2098,
	98, 2098,
	99, 2098,
	100, 2098,
	102, 2098,
	104, 2098,
	105, 2098,
	106, 2098,
	107, 2098,
	108, 2098,
	109, 2098,
	110, 2098,
	112, 2098,
	113, 2098,
	114, 2098,
	116, 2098,
	117, 2098,
	118, 2098,
	126, 2098,
	127, 2098,
	128, 2098,
	129, 2098,
	130, 2098,
	132, 2098,
	133, 2098,
	134, 2098,
	135, 2098,
	137, 2098,
	138, 2098,
	139, 2098,
	140, 2098,
	142, 2098,
	143, 2098,
	144, 2098,
	145, 2098,
	147, 2098,
	148, 2098,
	149, 2098,
	152, 2098,
	153, 2098,
	154, 2098,
	156, 2098,
	157, 2098,
	158, 2098,
	160, 2098,
	161, 2098,
	162, 2098,
	164, 2098,
	165, 2098,
	166, 2098,
	167, 2098,
	168, 2098,
	169, 2098,
	170, 2098,
	171, 2098,
	172, 2098,
	173, 2098,
	174, 2098,
	175, 2098,
	176, 2098,
	177, 2098,
	178, 2098,
	179, 2098,
	180, 2098,
	181, 2098,
	182, 2098,
	184, 2098,
	190, 2098,
	191, 2098,
	192, 2098,
	193, 2098,
	197, 2098,
	199, 2098,
	200, 2098,
	201, 2098,
	203, 2098,
	204, 2098,
	207, 2098,
	208, 2098,
	209, 2098,
	210, 2098,
	211, 2098,
	212, 2098,
	213, 2098,
	214, 2098,
	215, 2098,
	216, 2098,
	217, 2098,
	218, 2098,
	219, 2098,
	220, 2098,
	222, 2098,
	223, 2098,
	225, 2098,
	226, 2098,
	228, 2098,
	229, 2098,
	230, 2098,
	231, 2098,
	232, 2098,
	233, 2098,
	234, 2098,
	235, 2098,
	236, 2098,
	237, 2098,
	238, 2098,
	240, 2098,
	241, 2098,
	242, 2098,
	244, 2098,
	245, 2098,
	246, 2098,
	247, 2098,
	248, 2098,
	252, 2098,
	253, 2098,
	254, 2098,
	255, 2098,
	257, 2098,
	258, 2098,
	259, 2098,
	261, 2098,
	262, 2098,
	263, 2098,
	264, 2098,
	265, 2098,
	266, 2098,
	268, 2098,
	270, 2098,
	271, 2098,
	272, 2098,
	274, 2098,
	276, 2098,
	277, 2098,
	278, 2098,
	280, 2098,
	284, 2098,
	285, 2098,
	286, 2098,
	287, 2098,
	288, 2098,
	289, 2098,
	290, 2098,
	292, 2098,
	293, 2098,
	294, 2098,
	296, 2098,
	297, 2098,
	298, 2098,
	300, 2098,
	301, 2098,
	304, 2098,
	305, 2098,
	306, 2098,
	307, 2098,
	308, 2098,
	309, 2098,
	310, 2098,
	313, 2098,
	314, 2098,
	315, 2098,
	316, 2098,
	318, 2098,
	319, 2098,
	320, 2098,
	321, 2098,
	322, 2098,
	323, 2098,
	324, 2098,
	325, 2098,
	326, 2098,
	327, 2098,
	328, 2098,
	329, 2098,
	330, 2098,
	331, 2098,
	332, 2098,
	333, 2098,
	334, 2098,
	335, 2098,
	336, 2098,
	337, 2098,
	338, 2098,
	339, 2098,
	340, 2098,
	342, 2098,
	344, 2098,
	345, 2098,
	346, 2098,
	347, 2098,
	348, 2098,
	349, 2098,
	350, 2098,
	351, 2098,
	352, 2098,
	353, 2098,
	354, 2098,
	355, 2098,
	356, 2098,
	357, 2098,
	358, 2098,
	359, 2098,
	360, 2098,
	362, 2098,
	363, 2098,
	365, 2098,
	366, 2098,
	368, 2098,
	369, 2098,
	370, 2098,
	371, 2098,
	373, 2098,
	374, 2098,
	375, 2098,
	376, 2098,
	377, 2098,
	380, 2098,
	382, 2098,
	385, 2098,
	386, 2098,
	387, 2098,
	390, 2098,
	391, 2098,
	392, 2098,
	394, 2098,
	396, 2098,
	397, 2098,
	398, 2098,
	399, 2098,
	400, 2098,
	401, 2098,
	402, 2098,
	403, 2098,
	404, 2098,
	405, 2098,
	406, 2098,
	407, 2098,
	408, 2098,
	409, 2098,
	411, 2098,
	412, 2098,
	413, 2098,
	414, 2098,
	415, 2098,
	416, 2098,
	417, 2098,
	418, 2098,
	419, 2098,
	420, 2098,
	421, 2098,
	422, 2098,
	423, 2098,
	424, 2098,
	425, 2098,
	427, 2098,
	428, 2098,
	429, 2098,
	431, 2098,
	432, 2098,
	433, 2098,
	434, 2098,
	435, 2098,
	436, 2098,
	437, 2098,
	438, 2098,
	439, 2098,
	440, 2098,
	441, 2098,
	442, 2098,
	443, 2098,
	444, 2098,
	446, 2098,
	448, 2098,
	449, 2098,
	450, 2098,
	456, 2098,
	457, 2098,
	458, 2098,
	460, 2098,
	461, 2098,
	462, 2098,
	463, 2098,
	464, 2098,
	465, 2098,
	466, 2098,
	467, 2098,
	468, 2098,
	469, 2098,
	470, 2098,
	472, 2098,
	473, 2098,
	474, 2098,
	475, 2098,
	476, 2098,
	478, 2098,
	479, 2098,
	480, 2098,
	481, 2098,
	482, 2098,
	483, 2098,
	484, 2098,
	486, 2098,
	487, 2098,
	488, 2098,
	489, 2098,
	490, 2098,
	491, 2098,
	492, 2098,
	493, 2098,
	494, 2098,
	495, 2098,
	496, 2098,
	497, 2098,
	498, 2098,
	499, 2098,
	500, 2098,
	501, 2098,
	503, 2098,
	504, 2098,
	505, 2098,
	506, 2098,
	507, 2098,
	508, 2098,
	510, 2098,
	511, 2098,
	512, 2098,
	513, 2098,
	514, 2098,
	515, 2098,
	516, 2098,
	518, 2098,
	519, 2098,
	520, 2098,
	521, 2098,
	522, 2098,
	523, 2098,
	524, 2098,
	525, 2098,
	527, 2098,
	529, 2098,
	530, 2098,
	531, 2098,
	532, 2098,
	533, 2098,
	534, 2098,
	535, 2098,
	536, 2098,
	537, 2098,
	538, 2098,
	539, 2098,
	540, 2098,
	541, 2098,
	542, 2098,
	543, 2098,
	544, 2098,
	545, 2098,
	546, 2098,
	547, 2098,
	548, 2098,
	549, 2098,
	551, 2098,
	552, 2098,
	554, 2098,
	555, 2098,
	557, 2098,
	558, 2098,
	559, 2098,
	560, 2098,
	561, 2098,
	562, 2098,
	564, 2098,
	565, 2098,
	567, 2098,
	568, 2098,
	569, 2098,
	570, 2098,
	571, 2098,
	573, 2098,
	575, 2098,
	576, 2098,
	577, 2098,
	578, 2098,
	579, 2098,
	580, 2098,
	581, 2098,
	582, 2098,
	584, 2098,
	585, 2098,
	586, 2098,
	587, 2098,
	588, 2098,
	589, 2098,
	590, 2098,
	593, 2098,
	594, 2098,
	595, 2098,
	596, 2098,
	597, 2098,
	598, 2098,
	599, 2098,
	600, 2098,
	601, 2098,
	603, 2098,
	606, 2098,
	607, 2098,
	608, 2098,
	609, 2098,
	610, 2098,
	611, 2098,
	613, 2098,
	614, 2098,
	615, 2098,
	616, 2098,
	617, 2098,
	618, 2098,
	619, 2098,
	620, 2098,
	621, 2098,
	622, 2098,
	623, 2098,
	624, 2098,
	629, 2098,
	630, 2098,
	631, 2098,
	632, 2098,
	633, 2098,
	634, 2098,
	-2, 0,
	-1, 1122,
	289, 588,
	-2, 0,
	-1, 1123,
	171, 1211,
	287, 1211,
	433, 1172,
	508, 1172,
	555, 1172,
	575, 1211,
	577, 1172,
	-2, 0,
	-1, 1234,
	185, 1954,
	198, 1954,
	303, 1954,
	378, 1954,
	-2, 1890,
	-1, 1251,
	185, 1953,
	198, 1953,
	303, 1953,
	378, 1953,
	-2, 1887,
	-1, 1280,
	669, 2698,
	-2, 941,
	-1, 1287,
	667, 2688,
	-2, 3320,
	-1, 1310,
	5, 2690,
	667, 2687,
	-2, 2678,
	-1, 1318,
	5, 2711,
	667, 2708,
	-2, 2699,
	-1, 1319,
	5, 2712,
	667, 2709,
	-2, 2700,
	-1, 1329,
	669, 2696,
	-2, 2677,
	-1, 1330,
	667, 3219,
	-2, 2697,
	-1, 1353,
	5, 2713,
	38, 2713,
	136, 2713,
	649, 2713,
	665, 2713,
	668, 2713,
	669, 2713,
	672, 2713,
	-2, 3218,
	-1, 1354,
	5, 2173,
	-2, 3188,
	-1, 1355,
	5, 2174,
	-2, 3189,
	-1, 1356,
	5, 2175,
	-2, 3204,
	-1, 1357,
	5, 2176,
	-2, 3166,
	-1, 1358,
	5, 2177,
	-2, 3201,
	-1, 1359,
	5, 2185,
	-2, 3179,
	-1, 1360,
	5, 2172,
	-2, 3175,
	-1, 1361,
	5, 2172,
	-2, 3174,
	-1, 1362,
	5, 2172,
	-2, 3194,
	-1, 1363,
	5, 2183,
	-2, 3168,
	-1, 1364,
	5, 2188,
	667, 2200,
	-2, 3167,
	-1, 1365,
	5, 2190,
	-2, 3214,
	-1, 1368,
	5, 2212,
	-2, 3207,
	-1, 1369,
	5, 2204,
	-2, 3208,
	-1, 1370,
	5, 2212,
	-2, 3209,
	-1, 1371,
	5, 2208,
	-2, 3210,
	-1, 1372,
	5, 2156,
	-2, 3180,
	-1, 1373,
	5, 2157,
	-2, 3181,
	-1, 1374,
	5, 2158,
	-2, 3169,
	-1, 1402,
	5, 2195,
	667, 2195,
	-2, 3215,
	-1, 1403,
	5, 2196,
	667, 2196,
	-2, 3205,
	-1, 1404,
	5, 2197,
	615, 2197,
	667, 2197,
	-2, 3170,
	-1, 1405,
	5, 2198,
	615, 2198,
	667, 2198,
	-2, 3171,
	-1, 1443,
	667, 2708,
	-2, 2699,
	-1, 1444,
	667, 2709,
	-2, 2700,
	-1, 1555,
	205, 3104,
	572, 3104,
	649, 3104,
	669, 3104,
	-2, 0,
	-1, 1560,
	1, 917,
	670, 917,
	673, 917,
	-2, 1796,
	-1, 1619,
	205, 1118,
	-2, 3047,
	-1, 1620,
	205, 1119,
	-2, 2828,
	-1, 1621,
	205, 1120,
	-2, 2998,
	-1, 1622,
	205, 1121,
	-2, 3127,
	-1, 1637,
	433, 1173,
	508, 1173,
	555, 1173,
	577, 1173,
	-2, 0,
	-1, 1648,
	1, 1735,
	243, 1735,
	666, 1735,
	668, 1735,
	670, 1735,
	673, 1735,
	-2, 0,
	-1, 1667,
	1, 1168,
	666, 1168,
	668, 1168,
	670, 1168,
	673, 1168,
	-2, 0,
	-1, 1668,
	1, 1212,
	666, 1212,
	668, 1212,
	670, 1212,
	673, 1212,
	-2, 0,
	-1, 1669,
	1, 1224,
	666, 1224,
	668, 1224,
	670, 1224,
	673, 1224,
	-2, 0,
	-1, 1672,
	1, 1177,
	666, 1177,
	668, 1177,
	670, 1177,
	673, 1177,
	-2, 0,
	-1, 1674,
	1, 1183,
	666, 1183,
	668, 1183,
	670, 1183,
	673, 1183,
	-2, 0,
	-1, 1678,
	1, 1179,
	666, 1179,
	668, 1179,
	670, 1179,
	673, 1179,
	-2, 0,
	-1, 1683,
	1, 1193,
	666, 1193,
	668, 1193,
	670, 1193,
	673, 1193,
	-2, 0,
	-1, 1722,
	1, 3036,
	666, 3036,
	668, 3036,
	669, 3036,
	670, 3036,
	673, 3036,
	-2, 0,
	-1, 1727,
	1, 1282,
	666, 1282,
	668, 1282,
	670, 1282,
	673, 1282,
	-2, 0,
	-1, 1744,
	1, 1791,
	670, 1791,
	673, 1791,
	-2, 1796,
	-1, 1844,
	398, 2672,
	460, 2672,
	510, 2672,
	659, 2672,
	-2, 2660,
	-1, 1852,
	205, 172,
	296, 172,
	362, 172,
	624, 172,
	-2, 3099,
	-1, 1853,
	205, 173,
	296, 173,
	362, 173,
	624, 173,
	-2, 2819,
	-1, 1854,
	205, 174,
	296, 174,
	362, 174,
	624, 174,
	-2, 3012,
	-1, 1860,
	671, 2672,
	-2, 2674,
	-1, 1863,
	25, 3036,
	243, 3036,
	-2, 0,
	-1, 1875,
	1, 1635,
	465, 1589,
	510, 1589,
	641, 1589,
	646, 1589,
	666, 1635,
	668, 1635,
	670, 1635,
	673, 1635,
	-2, 1939,
	-1, 1881,
	221, 1735,
	243, 1735,
	476, 1735,
	-2, 0,
	-1, 1950,
	47, 2670,
	-2, 1366,
	-1, 1957,
	1, 1635,
	666, 1635,
	668, 1635,
	670, 1635,
	673, 1635,
	-2, 1939,
	-1, 1960,
	442, 1403,
	614, 1403,
	-2, 487,
	-1, 1966,
	4, 1660,
	21, 1660,
	22, 1660,
	23, 1660,
	24, 1660,
	25, 1660,
	26, 1660,
	27, 1660,
	28, 1660,
	30, 1660,
	31, 1660,
	37, 1660,
	42, 1660,
	44, 1660,
	45, 1660,
	46, 1660,
	48, 1660,
	49, 1660,
	50, 1660,
	51, 1660,
	52, 1660,
	53, 1660,
	54, 1660,
	55, 1660,
	56, 1660,
	58, 1660,
	59, 1660,
	60, 1660,
	61, 1660,
	63, 1660,
	64, 1660,
	65, 1660,
	66, 1660,
	67, 1660,
	68, 1660,
	69, 1660,
	70, 1660,
	74, 1660,
	75, 1660,
	76, 1660,
	77, 1660,
	79, 1660,
	80, 1660,
	81, 1660,
	85, 1660,
	86, 1660,
	87, 1660,
	88, 1660,
	89, 1660,
	90, 1660,
	91, 1660,
	92, 1660,
	95, 1660,
	96, 1660,
	97, 1660,
	98, 1660,
	99, 1660,
	100, 1660,
	102, 1660,
	104, 1660,
	105, 1660,
	106, 1660,
	107, 1660,
	108, 1660,
	109, 1660,
	110, 1660,
	112, 1660,
	113, 1660,
	114, 1660,
	116, 1660,
	117, 1660,
	118, 1660,
	126, 1660,
	127, 1660,
	128, 1660,
	129, 1660,
	130, 1660,
	132, 1660,
	133, 1660,
	134, 1660,
	135, 1660,
	137, 1660,
	138, 1660,
	139, 1660,
	140, 1660,
	142, 1660,
	143, 1660,
	144, 1660,
	145, 1660,
	147, 1660,
	148, 1660,
	149, 1660,
	152, 1660,
	153, 1660,
	154, 1660,
	156, 1660,
	157, 1660,
	158, 1660,
	160, 1660,
	161, 1660,
	162, 1660,
	164, 1660,
	165, 1660,
	166, 1660,
	167, 1660,
	168, 1660,
	169, 1660,
	170, 1660,
	171, 1660,
	172, 1660,
	173, 1660,
	174, 1660,
	175, 1660,
	176, 1660,
	177, 1660,
	178, 1660,
	179, 1660,
	180, 1660,
	181, 1660,
	182, 1660,
	190, 1660,
	191, 1660,
	192, 1660,
	193, 1660,
	197, 1660,
	199, 1660,
	200, 1660,
	201, 1660,
	203, 1660,
	204, 1660,
	207, 1660,
	208, 1660,
	209, 1660,
	210, 1660,
	211, 1660,
	212, 1660,
	213, 1660,
	214, 1660,
	215, 1660,
	216, 1660,
	217, 1660,
	218, 1660,
	219, 1660,
	220, 1660,
	222, 1660,
	223, 1660,
	225, 1660,
	226, 1660,
	228, 1660,
	229, 1660,
	230, 1660,
	231, 1660,
	232, 1660,
	233, 1660,
	234, 1660,
	235, 1660,
	236, 1660,
	237, 1660,
	238, 1660,
	240, 1660,
	241, 1660,
	242, 1660,
	244, 1660,
	245, 1660,
	246, 1660,
	247, 1660,
	248, 1660,
	252, 1660,
	253, 1660,
	254, 1660,
	255, 1660,
	261, 1660,
	262, 1660,
	263, 1660,
	264, 1660,
	265, 1660,
	266, 1660,
	268, 1660,
	270, 1660,
	271, 1660,
	272, 1660,
	274, 1660,
	276, 1660,
	277, 1660,
	278, 1660,
	280, 1660,
	284, 1660,
	285, 1660,
	286, 1660,
	287, 1660,
	288, 1660,
	289, 1660,
	290, 1660,
	292, 1660,
	293, 1660,
	294, 1660,
	296, 1660,
	297, 1660,
	298, 1660,
	300, 1660,
	301, 1660,
	304, 1660,
	305, 1660,
	306, 1660,
	307, 1660,
	308, 1660,
	309, 1660,
	310, 1660,
	313, 1660,
	314, 1660,
	315, 1660,
	316, 1660,
	318, 1660,
	319, 1660,
	320, 1660,
	321, 1660,
	322, 1660,
	323, 1660,
	324, 1660,
	325, 1660,
	326, 1660,
	327, 1660,
	328, 1660,
	329, 1660,
	330, 1660,
	331, 1660,
	332, 1660,
	333, 1660,
	334, 1660,
	335, 1660,
	336, 1660,
	337, 1660,
	338, 1660,
	339, 1660,
	340, 1660,
	342, 1660,
	344, 1660,
	345, 1660,
	346, 1660,
	347, 1660,
	348, 1660,
	349, 1660,
	350, 1660,
	351, 1660,
	352, 1660,
	353, 1660,
	354, 1660,
	355, 1660,
	356, 1660,
	357, 1660,
	358, 1660,
	359, 1660,
	360, 1660,
	362, 1660,
	363, 1660,
	365, 1660,
	368, 1660,
	369, 1660,
	370, 1660,
	371, 1660,
	373, 1660,
	374, 1660,
	375, 1660,
	376, 1660,
	377, 1660,
	380, 1660,
	382, 1660,
	383, 1660,
	385, 1660,
	386, 1660,
	387, 1660,
	390, 1660,
	391, 1660,
	392, 1660,
	394, 1660,
	396, 1660,
	397, 1660,
	398, 1660,
	399, 1660,
	400, 1660,
	401, 1660,
	402, 1660,
	403, 1660,
	404, 1660,
	405, 1660,
	406, 1660,
	407, 1660,
	408, 1660,
	409, 1660,
	411, 1660,
	412, 1660,
	413, 1660,
	414, 1660,
	415, 1660,
	416, 1660,
	417, 1660,
	418, 1660,
	419, 1660,
	420, 1660,
	421, 1660,
	422, 1660,
	423, 1660,
	424, 1660,
	425, 1660,
	427, 1660,
	428, 1660,
	429, 1660,
	431, 1660,
	432, 1660,
	433, 1660,
	434, 1660,
	435, 1660,
	436, 1660,
	437, 1660,
	438, 1660,
	439, 1660,
	440, 1660,
	441, 1660,
	442, 1660,
	443, 1660,
	444, 1660,
	446, 1660,
	448, 1660,
	449, 1660,
	450, 1660,
	456, 1660,
	457, 1660,
	458, 1660,
	460, 1660,
	461, 1660,
	462, 1660,
	463, 1660,
	464, 1660,
	465, 1660,
	466, 1660,
	467, 1660,
	468, 1660,
	469, 1660,
	470, 1660,
	472, 1660,
	473, 1660,
	474, 1660,
	475, 1660,
	476, 1660,
	478, 1660,
	479, 1660,
	480, 1660,
	481, 1660,
	482, 1660,
	483, 1660,
	484, 1660,
	486, 1660,
	487, 1660,
	488, 1660,
	489, 1660,
	490, 1660,
	491, 1660,
	492, 1660,
	493, 1660,
	494, 1660,
	495, 1660,
	496, 1660,
	497, 1660,
	498, 1660,
	499, 1660,
	500, 1660,
	501, 1660,
	503, 1660,
	504, 1660,
	505, 1660,
	506, 1660,
	507, 1660,
	508, 1660,
	510, 1660,
	511, 1660,
	512, 1660,
	513, 1660,
	514, 1660,
	515, 1660,
	516, 1660,
	518, 1660,
	519, 1660,
	520, 1660,
	521, 1660,
	522, 1660,
	523, 1660,
	524, 1660,
	525, 1660,
	527, 1660,
	529, 1660,
	530, 1660,
	531, 1660,
	532, 1660,
	533, 1660,
	534, 1660,
	535, 1660,
	536, 1660,
	537, 1660,
	538, 1660,
	539, 1660,
	540, 1660,
	541, 1660,
	542, 1660,
	543, 1660,
	544, 1660,
	545, 1660,
	546, 1660,
	547, 1660,
	548, 1660,
	549, 1660,
	551, 1660,
	552, 1660,
	554, 1660,
	555, 1660,
	557, 1660,
	558, 1660,
	559, 1660,
	560, 1660,
	561, 1660,
	562, 1660,
	564, 1660,
	565, 1660,
	567, 1660,
	568, 1660,
	569, 1660,
	570, 1660,
	571, 1660,
	573, 1660,
	575, 1660,
	576, 1660,
	577, 1660,
	578, 1660,
	579, 1660,
	580, 1660,
	581, 1660,
	582, 1660,
	584, 1660,
	585, 1660,
	586, 1660,
	587, 1660,
	588, 1660,
	589, 1660,
	590, 1660,
	593, 1660,
	594, 1660,
	595, 1660,
	596, 1660,
	597, 1660,
	598, 1660,
	599, 1660,
	600, 1660,
	601, 1660,
	603, 1660,
	606, 1660,
	607, 1660,
	608, 1660,
	609, 1660,
	610, 1660,
	611, 1660,
	613, 1660,
	614, 1660,
	615, 1660,
	616, 1660,
	617, 1660,
	618, 1660,
	619, 1660,
	620, 1660,
	621, 1660,
	622, 1660,
	623, 1660,
	624, 1660,
	629, 1660,
	630, 1660,
	631, 1660,
	632, 1660,
	633, 1660,
	634, 1660,
	-2, 0,
	-1, 1989,
	1, 740,
	666, 740,
	668, 740,
	670, 740,
	673, 740,
	-2, 1910,
	-1, 1992,
	4, 3213,
	11, 3213,
	12, 3213,
	14, 3213,
	15, 3213,
	16, 3213,
	17, 3213,
	18, 3213,
	19, 3213,
	21, 3213,
	22, 3213,
	23, 3213,
	24, 3213,
	25, 3213,
	26, 3213,
	27, 3213,
	28, 3213,
	30, 3213,
	31, 3213,
	34, 3213,
	35, 3213,
	37, 3213,
	39, 3213,
	41, 3213,
	42, 3213,
	44, 3213,
	45, 3213,
	46, 3213,
	48, 3213,
	49, 3213,
	50, 3213,
	51, 3213,
	52, 3213,
	53, 3213,
	54, 3213,
	55, 3213,
	56, 3213,
	58, 3213,
	59, 3213,
	60, 3213,
	61, 3213,
	63, 3213,
	64, 3213,
	65, 3213,
	66, 3213,
	67, 3213,
	68, 3213,
	69, 3213,
	70, 3213,
	73, 3213,
	74, 3213,
	75, 3213,
	76, 3213,
	77, 3213,
	79, 3213,
	80, 3213,
	81, 3213,
	82, 3213,
	85, 3213,
	86, 3213,
	87, 3213,
	88, 3213,
	89, 3213,
	90, 3213,
	91, 3213,
	92, 3213,
	93, 3213,
	95, 3213,
	96, 3213,
	97, 3213,
	98, 3213,
	99, 3213,
	100, 3213,
	102, 3213,
	103, 3213,
	104, 3213,
	105, 3213,
	106, 3213,
	107, 3213,
	108, 3213,
	109, 3213,
	110, 3213,
	112, 3213,
	113, 3213,
	114, 3213,
	115, 3213,
	116, 3213,
	117, 3213,
	118, 3213,
	126, 3213,
	127, 3213,
	128, 3213,
	129, 3213,
	130, 3213,
	132, 3213,
	133, 3213,
	134, 3213,
	135, 3213,
	137, 3213,
	138, 3213,
	139, 3213,
	140, 3213,
	142, 3213,
	143, 3213,
	144, 3213,
	145, 3213,
	147, 3213,
	148, 3213,
	149, 3213,
	152, 3213,
	153, 3213,
	154, 3213,
	156, 3213,
	157, 3213,
	158, 3213,
	160, 3213,
	161, 3213,
	162, 3213,
	164, 3213,
	165, 3213,
	166, 3213,
	167, 3213,
	168, 3213,
	169, 3213,
	170, 3213,
	171, 3213,
	172, 3213,
	173, 3213,
	174, 3213,
	175, 3213,
	176, 3213,
	177, 3213,
	178, 3213,
	179, 3213,
	180, 3213,
	181, 3213,
	182, 3213,
	186, 3213,
	187, 3213,
	188, 3213,
	189, 3213,
	190, 3213,
	191, 3213,
	192, 3213,
	193, 3213,
	196, 3213,
	197, 3213,
	199, 3213,
	200, 3213,
	201, 3213,
	203, 3213,
	204, 3213,
	206, 3213,
	207, 3213,
	208, 3213,
	209, 3213,
	210, 3213,
	211, 3213,
	212, 3213,
	213, 3213,
	214, 3213,
	215, 3213,
	216, 3213,
	217, 3213,
	218, 3213,
	219, 3213,
	220, 3213,
	222, 3213,
	223, 3213,
	225, 3213,
	226, 3213,
	228, 3213,
	229, 3213,
	230, 3213,
	231, 3213,
	232, 3213,
	233, 3213,
	234, 3213,
	235, 3213,
	236, 3213,
	237, 3213,
	238, 3213,
	239, 3213,
	240, 3213,
	241, 3213,
	242, 3213,
	243, 3213,
	244, 3213,
	245, 3213,
	246, 3213,
	247, 3213,
	248, 3213,
	250, 3213,
	251, 3213,
	252, 3213,
	253, 3213,
	254, 3213,
	255, 3213,
	260, 3213,
	261, 3213,
	262, 3213,
	263, 3213,
	264, 3213,
	265, 3213,
	266, 3213,
	268, 3213,
	270, 3213,
	271, 3213,
	272, 3213,
	273, 3213,
	274, 3213,
	275, 3213,
	276, 3213,
	277, 3213,
	278, 3213,
	279, 3213,
	280, 3213,
	282, 3213,
	283, 3213,
	284, 3213,
	285, 3213,
	286, 3213,
	287, 3213,
	288, 3213,
	289, 3213,
	290, 3213,
	292, 3213,
	293, 3213,
	294, 3213,
	296, 3213,
	297, 3213,
	298, 3213,
	299, 3213,
	300, 3213,
	301, 3213,
	302, 3213,
	304, 3213,
	305, 3213,
	306, 3213,
	307, 3213,
	308, 3213,
	309, 3213,
	310, 3213,
	313, 3213,
	314, 3213,
	315, 3213,
	316, 3213,
	317, 3213,
	318, 3213,
	319, 3213,
	320, 3213,
	321, 3213,
	322, 3213,
	323, 3213,
	324, 3213,
	325, 3213,
	326, 3213,
	327, 3213,
	328, 3213,
	329, 3213,
	330, 3213,
	331, 3213,
	332, 3213,
	333, 3213,
	334, 3213,
	335, 3213,
	336, 3213,
	337, 3213,
	338, 3213,
	339, 3213,
	340, 3213,
	342, 3213,
	343, 3213,
	344, 3213,
	345, 3213,
	346, 3213,
	347, 3213,
	348, 3213,
	349, 3213,
	350, 3213,
	351, 3213,
	352, 3213,
	353, 3213,
	354, 3213,
	355, 3213,
	356, 3213,
	357, 3213,
	358, 3213,
	359, 3213,
	360, 3213,
	362, 3213,
	363, 3213,
	365, 3213,
	367, 3213,
	368, 3213,
	369, 3213,
	370, 3213,
	371, 3213,
	373, 3213,
	374, 3213,
	375, 3213,
	376, 3213,
	377, 3213,
	380, 3213,
	382, 3213,
	385, 3213,
	386, 3213,
	387, 3213,
	388, 3213,
	390, 3213,
	391, 3213,
	392, 3213,
	394, 3213,
	396, 3213,
	397, 3213,
	398, 3213,
	399, 3213,
	400, 3213,
	401, 3213,
	402, 3213,
	403, 3213,
	404, 3213,
	405, 3213,
	406, 3213,
	407, 3213,
	408, 3213,
	409, 3213,
	411, 3213,
	412, 3213,
	413, 3213,
	414, 3213,
	415, 3213,
	416, 3213,
	417, 3213,
	418, 3213,
	419, 3213,
	420, 3213,
	421, 3213,
	422, 3213,
	423, 3213,
	424, 3213,
	425, 3213,
	427, 3213,
	428, 3213,
	429, 3213,
	431, 3213,
	432, 3213,
	433, 3213,
	434, 3213,
	435, 3213,
	436, 3213,
	437, 3213,
	438, 3213,
	439, 3213,
	440, 3213,
	441, 3213,
	442, 3213,
	443, 3213,
	444, 3213,
	446, 3213,
	448, 3213,
	449, 3213,
	450, 3213,
	456, 3213,
	457, 3213,
	458, 3213,
	459, 3213,
	460, 3213,
	461, 3213,
	462, 3213,
	463, 3213,
	464, 3213,
	465, 3213,
	466, 3213,
	467, 3213,
	468, 3213,
	469, 3213,
	470, 3213,
	472, 3213,
	473, 3213,
	474, 3213,
	475, 3213,
	476, 3213,
	477, 3213,
	478, 3213,
	479, 3213,
	480, 3213,
	481, 3213,
	482, 3213,
	483, 3213,
	484, 3213,
	485, 3213,
	486, 3213,
	487, 3213,
	488, 3213,
	489, 3213,
	490, 3213,
	491, 3213,
	492, 3213,
	493, 3213,
	494, 3213,
	495, 3213,
	496, 3213,
	497, 3213,
	498, 3213,
	499, 3213,
	500, 3213,
	501, 3213,
	503, 3213,
	504, 3213,
	505, 3213,
	506, 3213,
	507, 3213,
	508, 3213,
	510, 3213,
	511, 3213,
	512, 3213,
	513, 3213,
	514, 3213,
	515, 3213,
	516, 3213,
	517, 3213,
	518, 3213,
	519, 3213,
	520, 3213,
	521, 3213,
	522, 3213,
	523, 3213,
	524, 3213,
	525, 3213,
	527, 3213,
	529, 3213,
	530, 3213,
	531, 3213,
	532, 3213,
	533, 3213,
	534, 3213,
	535, 3213,
	536, 3213,
	537, 3213,
	538, 3213,
	539, 3213,
	540, 3213,
	541, 3213,
	542, 3213,
	543, 3213,
	544, 3213,
	545, 3213,
	546, 3213,
	547, 3213,
	548, 3213,
	549, 3213,
	551, 3213,
	552, 3213,
	553, 3213,
	554, 3213,
	555, 3213,
	557, 3213,
	558, 3213,
	559, 3213,
	560, 3213,
	561, 3213,
	562, 3213,
	564, 3213,
	565, 3213,
	567, 3213,
	568, 3213,
	569, 3213,
	570, 3213,
	571, 3213,
	573, 3213,
	575, 3213,
	576, 3213,
	577, 3213,
	578, 3213,
	579, 3213,
	580, 3213,
	581, 3213,
	582, 3213,
	584, 3213,
	585, 3213,
	586, 3213,
	587, 3213,
	588, 3213,
	589, 3213,
	590, 3213,
	593, 3213,
	594, 3213,
	595, 3213,
	596, 3213,
	597, 3213,
	598, 3213,
	599, 3213,
	600, 3213,
	601, 3213,
	603, 3213,
	606, 3213,
	607, 3213,
	608, 3213,
	609, 3213,
	610, 3213,
	611, 3213,
	613, 3213,
	614, 3213,
	615, 3213,
	616, 3213,
	617, 3213,
	618, 3213,
	619, 3213,
	620, 3213,
	621, 3213,
	622, 3213,
	623, 3213,
	624, 3213,
	629, 3213,
	630, 3213,
	631, 3213,
	632, 3213,
	633, 3213,
	634, 3213,
	635, 3213,
	637, 3213,
	647, 3213,
	648, 3213,
	649, 3213,
	650, 3213,
	651, 3213,
	652, 3213,
	654, 3213,
	655, 3213,
	656, 3213,
	657, 3213,
	658, 3213,
	659, 3213,
	660, 3213,
	661, 3213,
	662, 3213,
	665, 3213,
	668, 3213,
	669, 3213,
	671, 3213,
	672, 3213,
	-2, 0,
	-1, 1997,
	205, 3057,
	572, 3057,
	649, 3057,
	669, 3057,
	-2, 0,
	-1, 2039,
	185, 1953,
	198, 1953,
	303, 1953,
	378, 1953,
	-2, 1891,
	-1, 2142,
	163, 1912,
	185, 1912,
	198, 1912,
	267, 1912,
	303, 1912,
	378, 1912,
	389, 1912,
	591, 1912,
	-2, 2378,
	-1, 2189,
	667, 2199,
	-2, 2189,
	-1, 2206,
	668, 2554,
	-2, 0,
	-1, 2243,
	163, 1912,
	185, 1912,
	198, 1912,
	267, 1912,
	303, 1912,
	378, 1912,
	389, 1912,
	591, 1912,
	-2, 2053,
	-1, 2282,
	669, 2699,
	672, 2699,
	-2, 1309,
	-1, 2283,
	669, 2701,
	672, 2701,
	-2, 1310,
	-1, 2284,
	669, 2700,
	672, 2700,
	-2, 1311,
	-1, 2285,
	672, 2622,
	-2, 1312,
	-1, 2321,
	667, 2200,
	-2, 2188,
	-1, 2338,
	205, 3054,
	669, 3054,
	672, 3054,
	-2, 0,
	-1, 2390,
	1, 919,
	670, 919,
	673, 919,
	-2, 1796,
	-1, 2455,
	1, 1170,
	666, 1170,
	668, 1170,
	670, 1170,
	673, 1170,
	-2, 0,
	-1, 2456,
	1, 1214,
	666, 1214,
	668, 1214,
	670, 1214,
	673, 1214,
	-2, 0,
	-1, 2457,
	1, 1226,
	666, 1226,
	668, 1226,
	670, 1226,
	673, 1226,
	-2, 0,
	-1, 2458,
	1, 1284,
	666, 1284,
	668, 1284,
	670, 1284,
	673, 1284,
	-2, 0,
	-1, 2502,
	1, 1195,
	666, 1195,
	668, 1195,
	670, 1195,
	673, 1195,
	-2, 0,
	-1, 2529,
	1, 1263,
	666, 1263,
	668, 1263,
	670, 1263,
	673, 1263,
	-2, 0,
	-1, 2708,
	243, 325,
	-2, 2707,
	-1, 2709,
	243, 326,
	-2, 389,
	-1, 2834,
	483, 1980,
	484, 1980,
	-2, 2233,
	-1, 2867,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2253,
	-1, 2868,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2254,
	-1, 2869,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2255,
	-1, 2870,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2256,
	-1, 2871,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2257,
	-1, 2872,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2258,
	-1, 2873,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2259,
	-1, 2874,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2260,
	-1, 2887,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2273,
	-1, 2888,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2274,
	-1, 2889,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2275,
	-1, 2893,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2282,
	-1, 2899,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2286,
	-1, 2901,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2294,
	-1, 2902,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2295,
	-1, 2903,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2296,
	-1, 2904,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2297,
	-1, 3082,
	5, 2711,
	205, 2565,
	667, 2708,
	-2, 2699,
	-1, 3083,
	205, 2566,
	-2, 3143,
	-1, 3084,
	205, 2567,
	-2, 2924,
	-1, 3085,
	205, 2568,
	-2, 2790,
	-1, 3086,
	205, 2569,
	-2, 2856,
	-1, 3087,
	205, 2570,
	-2, 2909,
	-1, 3088,
	205, 2571,
	-2, 3050,
	-1, 3089,
	205, 2572,
	-2, 2361,
	-1, 3184,
	1, 2054,
	2, 2054,
	115, 2054,
	163, 2054,
	185, 2054,
	198, 2054,
	206, 2054,
	224, 2054,
	227, 2054,
	260, 2054,
	267, 2054,
	279, 2054,
	299, 2054,
	303, 2054,
	343, 2054,
	378, 2054,
	383, 2054,
	389, 2054,
	471, 2054,
	477, 2054,
	591, 2054,
	604, 2054,
	626, 2054,
	627, 2054,
	628, 2054,
	638, 2054,
	666, 2054,
	668, 2054,
	670, 2054,
	672, 2054,
	673, 2054,
	-2, 2053,
	-1, 3200,
	667, 2679,
	-2, 2694,
	-1, 3202,
	1, 406,
	626, 406,
	673, 406,
	-2, 1939,
	-1, 3267,
	38, 2711,
	136, 2711,
	649, 2711,
	665, 2711,
	668, 2711,
	669, 2711,
	672, 2711,
	-2, 2708,
	-1, 3268,
	38, 2712,
	136, 2712,
	649, 2712,
	665, 2712,
	668, 2712,
	669, 2712,
	672, 2712,
	-2, 2709,
	-1, 3374,
	1, 1267,
	666, 1267,
	668, 1267,
	670, 1267,
	673, 1267,
	-2, 0,
	-1, 3577,
	1, 1635,
	465, 1589,
	510, 1589,
	641, 1589,
	646, 1589,
	666, 1635,
	668, 1635,
	670, 1635,
	673, 1635,
	-2, 1939,
	-1, 3691,
	384, 1983,
	-2, 3202,
	-1, 3692,
	384, 1984,
	-2, 3033,
	-1, 3696,
	483, 2633,
	484, 2633,
	-2, 2359,
	-1, 3697,
	483, 2637,
	484, 2637,
	-2, 2360,
	-1, 3698,
	483, 2634,
	484, 2634,
	-2, 2359,
	-1, 3699,
	483, 2638,
	484, 2638,
	-2, 2360,
	-1, 3713,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2284,
	-1, 3714,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2288,
	-1, 3720,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2290,
	-1, 3969,
	1, 914,
	666, 914,
	668, 914,
	670, 914,
	673, 914,
	-2, 1796,
	-1, 4229,
	47, 2670,
	-2, 1367,
	-1, 4234,
	1, 1635,
	666, 1635,
	668, 1635,
	670, 1635,
	673, 1635,
	-2, 1939,
	-1, 4319,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2292,
	-1, 4326,
	273, 0,
	275, 0,
	367, 0,
	-2, 2311,
	-1, 4395,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2340,
	-1, 4396,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2341,
	-1, 4397,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2342,
	-1, 4401,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2346,
	-1, 4402,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2347,
	-1, 4403,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2348,
	-1, 4455,
	667, 2680,
	-2, 2695,
	-1, 4720,
	669, 3322,
	-2, 1865,
	-1, 4763,
	273, 0,
	275, 0,
	367, 0,
	-2, 2312,
	-1, 4766,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2315,
	-1, 4767,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2317,
	-1, 4904,
	669, 2696,
	-2, 1670,
	-1, 5077,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2316,
	-1, 5078,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2318,
	-1, 5089,
	273, 0,
	-2, 2351,
	-1, 5292,
	273, 0,
	-2, 2352,
	-1, 5525,
	55, 0,
	239, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 3165,
}

const sqlPrivate = 57344

const sqlLast = 165737

var sqlAct = [...]int16{
	322, 5688, 1536, 3648, 5750, 5730, 5659, 5453, 5454, 3500,
	5348, 5158, 3317, 5598, 5580, 3856, 1121, 10, 5524, 5573,
	5511, 5538, 4, 5393, 5409, 5673, 1260, 207, 5492, 5340,
	1120, 6, 5465, 2705, 5444, 1592, 5539, 5265, 4216, 5540,
	2565, 5468, 5245, 5484, 1891, 4217, 5230, 1447, 4521, 1624,
	4359, 5215, 5536, 4693, 5296, 5042, 5607, 5523, 5031, 4996,
	4311, 5037, 4960, 3929, 2421, 5163, 4032, 3617, 5098, 5070,
	1528, 4704, 4035, 4712, 3114, 2015, 3260, 2796, 821, 5376,
	4154, 4687, 2844, 1524, 4611, 4252, 4901, 3705, 4881, 3668,
	1041, 3408, 3409, 4685, 2794, 2916, 4246, 4669, 5047, 4184,
	2296, 4200, 3516, 2048, 4445, 1252, 2758, 4024, 4104, 4038,
	4651, 2854, 4653, 897, 5094, 4279, 3637, 2371, 3607, 4281,
	4019, 1041, 3632, 4204, 4178, 3857, 4207, 4177, 4197, 2845,
	3319, 4021, 4205, 3214, 3879, 4020, 1750, 4458, 1426, 207,
	2771, 833, 3912, 3871, 3905, 4802, 2347, 1309, 3860, 3663,
	2249, 3862, 3649, 3634, 3837, 1125, 3529, 2692, 3584, 2694,
	2218, 2675, 4520, 2624, 935, 3335, 5581, 4059, 2013, 3185,
	1841, 2278, 2586, 316, 4198, 3177, 4422, 3896, 5297, 2215,
	2851, 1886, 3176, 2150, 2120, 2192, 3689, 1887, 3836, 2929,
	2744, 1645, 2673, 129, 1036, 1115, 2995, 1533, 3546, 2669,
	2655, 3618, 2997, 3662, 2557, 2651, 2647, 2553, 893, 1314,
	1744, 2369, 3258, 2219, 3157, 3259, 3111, 2986, 2913, 2420,
	2833, 1952, 1575, 1319, 1590, 1503, 2792, 1500, 1510, 2816,
	1626, 1531, 3220, 2814, 2417, 1594, 1990, 315, 3642, 2235,
	1948, 1955, 3433, 2743, 870, 2238, 5731, 2678, 3394, 3215,
	2410, 940, 3179, 4208, 1514, 3434, 1562, 1506, 1480, 1465,
	5410, 913, 1477, 1047, 2693, 2184, 1517, 2228, 1430, 1281,
	2574, 1043, 2989, 3166, 1409, 3044, 3078, 1042, 2967, 5489,
	2134, 3126, 1444, 2049, 2815, 878, 2050, 1263, 218, 2817,
	219, 1981, 1093, 852, 1047, 889, 5599, 1915, 5660, 1988,
	2683, 2466, 1043, 1683, 2470, 1667, 1587, 1851, 1042, 826,
	808, 52, 1295, 51, 831, 49, 133, 1427, 40, 38,
	822, 119, 835, 36, 1432, 1407, 2055, 1050, 3743, 1743,
	1676, 1317, 1738, 1031, 3737, 963, 1436, 906, 909, 4436,
	2349, 2349, 4437, 3858, 5740, 2349, 2349, 2349, 2349, 1094,
	3930, 5534, 5765, 2065, 2066, 1890, 3156, 5118, 1050, 2110,
	2111, 2112, 3807, 3808, 5753, 5738, 5737, 5697, 3982, 3156,
	3156, 5162, 5695, 5533, 4838, 5629, 5162, 2096, 2445, 2713,
	5582, 5564, 1256, 2097, 5583, 3156, 2068, 5562, 5559, 4261,
	5126, 3156, 5560, 5123, 2382, 5122, 1256, 2116, 5121, 2065,
	2066, 5117, 2099, 2100, 2101, 2110, 2111, 2112, 5556, 5521,
	5025, 5116, 5557, 2713, 1257, 2122, 5520, 5519, 2382, 4262,
	2713, 3673, 2103, 2096, 2067, 3946, 5509, 5507, 1949, 2097,
	5162, 5162, 2068, 1424, 5498, 2087, 3807, 3808, 5162, 3825,
	3826, 3827, 5496, 2116, 3822, 2084, 5162, 5463, 5427, 5414,
	5392, 5162, 3231, 2713, 2713, 3940, 5390, 2379, 5388, 4761,
	5162, 2122, 5162, 5369, 3807, 3808, 3128, 4985, 1245, 5317,
	2067, 5316, 5294, 3156, 5279, 3156, 3231, 3982, 4737, 5247,
	5239, 2087, 5181, 4530, 5162, 5180, 2713, 1571, 5169, 2713,
	5168, 2084, 2713, 5161, 5162, 5105, 1235, 5162, 1234, 2713,
	5079, 2379, 5057, 4955, 3231, 3922, 3673, 3156, 4928, 2065,
	2066, 2379, 3156, 4862, 1472, 4817, 4765, 3982, 3822, 4818,
	3231, 2793, 112, 2446, 1571, 2713, 1410, 1410, 2090, 2091,
	2092, 2093, 4728, 2096, 3252, 4722, 4274, 4666, 2073, 4274,
	4561, 4667, 2068, 1462, 4562, 4529, 4451, 3813, 1251, 4530,
	4452, 4449, 4429, 2382, 3704, 4450, 3156, 4900, 4426, 4343,
	4339, 4273, 3949, 2713, 3156, 4274, 3950, 3612, 3855, 3853,
	3156, 2122, 3156, 3854, 2090, 2091, 2092, 2093, 3848, 3847,
	2067, 2107, 3156, 3156, 2073, 2117, 3226, 2992, 279, 5428,
	3807, 3808, 2095, 2098, 1673, 3798, 5298, 3796, 3785, 3799,
	1411, 3797, 3786, 3783, 3754, 2379, 3752, 3156, 3156, 5289,
	3672, 3659, 3753, 1439, 3673, 2781, 3658, 5281, 3292, 3230,
	2781, 3813, 3156, 3231, 2082, 2083, 3673, 2107, 3212, 3204,
	2382, 2117, 3156, 2713, 2382, 4426, 3155, 2780, 2095, 2098,
	3156, 2781, 281, 1463, 2105, 2065, 2066, 3127, 1413, 3813,
	1414, 5035, 4985, 2379, 4929, 4737, 4668, 4661, 3507, 2088,
	2579, 2113, 3393, 2114, 2396, 3156, 2712, 3303, 3823, 2096,
	2082, 2083, 3612, 4150, 2375, 2348, 3526, 3221, 2068, 3742,
	2213, 2362, 1463, 1884, 4579, 4314, 3986, 2236, 2993, 2662,
	2105, 4263, 1647, 3266, 2073, 280, 3196, 3195, 3829, 3194,
	3193, 3192, 279, 1415, 1412, 2088, 1244, 2122, 1243, 1242,
	1241, 4264, 2025, 1240, 273, 1239, 2067, 1238, 1237, 1233,
	1232, 1231, 1230, 274, 1229, 1228, 1227, 1226, 1225, 1224,
	1223, 1222, 1221, 3364, 5049, 1220, 1219, 1218, 2350, 2350,
	1217, 2119, 3823, 2350, 2350, 2350, 2350, 1216, 2095, 2098,
	2119, 1215, 1214, 220, 1213, 2115, 281, 1212, 1211, 1198,
	1197, 1196, 2942, 2943, 2944, 2961, 2962, 2963, 1195, 1194,
	3823, 1193, 1192, 1191, 88, 3813, 2104, 1190, 1189, 2994,
	1188, 2991, 1187, 2964, 1186, 1185, 1184, 2119, 1183, 2965,
	1677, 1182, 1181, 1180, 89, 1179, 1178, 1177, 1176, 1175,
	1174, 2094, 1173, 1172, 1171, 1170, 1169, 1168, 1167, 280,
	1166, 1165, 94, 1164, 1163, 2088, 5549, 1162, 2379, 1161,
	2006, 2122, 1910, 1160, 2119, 1159, 1158, 2089, 1147, 4822,
	2073, 3612, 1146, 1145, 1140, 1139, 3824, 1132, 3024, 1131,
	2379, 2954, 1130, 1114, 1113, 1112, 1111, 2094, 1068, 279,
	1310, 2950, 2119, 1067, 1066, 104, 1065, 2379, 4777, 2108,
	2379, 1064, 2379, 1123, 1063, 2379, 1054, 220, 1053, 1052,
	4484, 1538, 1319, 2089, 1051, 1890, 1013, 3127, 1012, 904,
	903, 902, 884, 1904, 2095, 2098, 4261, 310, 309, 308,
	2065, 2066, 1463, 307, 306, 2121, 3823, 2119, 1122, 1319,
	1319, 1319, 1464, 281, 305, 2108, 304, 303, 1677, 302,
	3824, 57, 301, 128, 300, 299, 1474, 298, 297, 112,
	125, 296, 2379, 2068, 1898, 295, 294, 293, 292, 291,
	290, 3851, 289, 3127, 2955, 2956, 2957, 2958, 3824, 1319,
	2494, 2121, 2382, 3278, 2949, 3401, 1629, 2379, 2375, 2348,
	2809, 2088, 288, 287, 2996, 286, 280, 285, 284, 283,
	3645, 2067, 282, 1579, 1580, 1581, 5051, 4441, 1319, 4275,
	3991, 1319, 3908, 3765, 3748, 273, 3852, 2106, 2119, 3739,
	3593, 1463, 3401, 2089, 274, 1316, 113, 1566, 3627, 2029,
	3366, 3339, 2109, 2085, 2081, 3235, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 3818, 3816, 3817, 3809, 3810,
	3811, 3812, 3814, 3815, 220, 3201, 1677, 1753, 3183, 3022,
	3008, 2239, 1319, 2106, 3006, 1629, 2551, 2423, 1319, 1319,
	2959, 2960, 1538, 2119, 1875, 2079, 2080, 2086, 2109, 2085,
	2081, 2381, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 2121, 2062, 5284, 2262, 1909, 4787, 1319, 2161, 1319,
	4786, 1319, 2195, 2152, 3824, 2952, 1893, 1739, 1583, 2194,
	1629, 1446, 3819, 3820, 3821, 2073, 5548, 2010, 5545, 3818,
	3816, 3817, 3809, 3810, 3811, 3812, 3814, 3815, 2990, 1509,
	1513, 2195, 5522, 5301, 279, 1538, 5506, 1957, 2194, 2198,
	1558, 5397, 1566, 1560, 5286, 5153, 5093, 1861, 3816, 3817,
	3809, 3810, 3811, 3812, 3814, 3815, 1903, 1521, 1629, 2089,
	1677, 2152, 3240, 2761, 5055, 5034, 1629, 4800, 2193, 4567,
	4799, 4793, 1442, 4792, 1544, 1319, 4791, 1319, 3807, 3808,
	1856, 4784, 1629, 1597, 1598, 207, 207, 4783, 281, 4781,
	117, 1319, 4776, 1319, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 4773, 4772, 4681, 1692, 4665, 3399, 4660, 4485, 4454,
	4416, 4415, 1259, 4414, 3807, 3808, 1586, 3825, 3826, 3827,
	4375, 1962, 1965, 4335, 1552, 4330, 3903, 2121, 3844, 3835,
	3807, 3808, 3806, 1609, 3803, 3802, 1888, 4760, 3800, 3795,
	3794, 280, 3793, 3790, 3789, 3788, 3807, 3808, 1606, 216,
	3784, 120, 279, 3764, 124, 3747, 3740, 1675, 1047, 3738,
	273, 3660, 3184, 1589, 2979, 2062, 2159, 1599, 1600, 274,
	3807, 3808, 2061, 2953, 4577, 3817, 3809, 3810, 3811, 3812,
	3814, 3815, 1423, 2718, 5759, 2153, 279, 2151, 2154, 1984,
	5050, 5681, 5680, 5597, 1124, 2716, 3822, 5595, 1448, 220,
	1123, 4361, 1873, 5455, 3629, 4682, 281, 1438, 5374, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1885, 1846, 3849,
	5360, 5356, 1050, 1638, 5355, 5354, 5334, 1848, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 1566, 1870, 5333,
	281, 2121, 3398, 1319, 5331, 2925, 5300, 5299, 5283, 1319,
	2030, 1257, 5277, 2919, 1993, 1995, 5263, 5260, 5259, 280,
	279, 5243, 279, 3813, 1950, 5241, 279, 5177, 179, 5148,
	2065, 2066, 5091, 1746, 1740, 1838, 1843, 5018, 273, 3398,
	2040, 5014, 5012, 5010, 4986, 222, 4867, 274, 1991, 4866,
	4798, 1293, 4738, 280, 2096, 4672, 4565, 4564, 4545, 3813,
	2097, 4544, 4542, 2068, 3398, 3897, 2216, 1968, 4432, 4419,
	4325, 2139, 273, 4276, 281, 3813, 281, 220, 4238, 4130,
	281, 274, 4070, 279, 4037, 217, 3983, 3935, 1897, 3769,
	221, 3813, 2122, 3768, 3763, 2939, 2940, 2941, 2966, 2951,
	2945, 2067, 2947, 2948, 2946, 2933, 2934, 2935, 2936, 2937,
	2938, 220, 2087, 3729, 3606, 3813, 3604, 1319, 1319, 1319,
	3426, 2201, 2084, 1319, 279, 2200, 2199, 280, 2196, 280,
	1444, 2190, 1444, 280, 2185, 2183, 3829, 281, 3198, 3191,
	279, 3154, 3035, 3004, 3823, 2138, 273, 1753, 273, 2353,
	4682, 2141, 273, 2261, 2217, 274, 2210, 274, 2209, 1319,
	207, 274, 2284, 1538, 2208, 2207, 2005, 2206, 2205, 2204,
	2309, 2284, 2203, 1538, 2202, 2191, 1538, 1629, 281, 2180,
	3823, 4759, 2024, 2179, 2063, 220, 2178, 220, 2177, 279,
	280, 3644, 2176, 2265, 281, 3628, 1257, 2225, 2041, 2175,
	2174, 2173, 2172, 1982, 3023, 2090, 2091, 2092, 2093, 273,
	2171, 2170, 2169, 47, 2168, 2073, 2167, 2036, 274, 2166,
	2165, 2154, 2140, 2137, 2132, 1551, 2119, 2272, 1469, 1458,
	5303, 280, 2037, 2277, 5302, 3900, 3823, 2045, 2071, 2072,
	2074, 2075, 2044, 281, 5024, 3233, 1538, 280, 220, 1235,
	273, 1234, 1319, 4843, 4769, 4483, 2197, 4448, 4435, 274,
	3751, 3189, 2119, 2039, 1987, 5119, 273, 4845, 4482, 2095,
	2098, 2271, 2153, 3933, 2135, 274, 1319, 279, 2222, 2223,
	4267, 2058, 2059, 2246, 1753, 1593, 2416, 2257, 1576, 220,
	3807, 3808, 1578, 1593, 2119, 1593, 280, 3501, 5672, 4931,
	1593, 2082, 2083, 5364, 5357, 220, 2065, 2066, 5054, 4971,
	2414, 1593, 3824, 4970, 1591, 273, 4662, 1629, 2119, 1593,
	1629, 1629, 1629, 1629, 274, 1257, 2388, 2186, 2187, 4969,
	4968, 281, 4967, 1440, 279, 1047, 2088, 4930, 4824, 2068,
	4745, 4744, 2334, 2287, 1047, 4743, 4742, 2360, 3824, 2285,
	1566, 4741, 2287, 2365, 220, 2284, 4740, 2367, 2285, 4739,
	2292, 1410, 2269, 2387, 2372, 2065, 2066, 2237, 2374, 1577,
	2340, 5541, 279, 2343, 4531, 2378, 3452, 2067, 2247, 4439,
	1319, 4438, 2267, 2637, 280, 3021, 3007, 4278, 281, 4277,
	3005, 5285, 2441, 4159, 3985, 3984, 5625, 5623, 2068, 1050,
	2244, 1571, 5537, 273, 3824, 2239, 4688, 4312, 1050, 4688,
	2195, 1637, 274, 4602, 1304, 130, 2266, 2194, 2119, 3792,
	1742, 3791, 3711, 1319, 3437, 1572, 281, 1574, 3544, 4560,
	4039, 2163, 4120, 2363, 2214, 2402, 2067, 4690, 1209, 1693,
	4690, 280, 220, 2384, 2175, 2256, 4674, 2255, 2451, 2254,
	1646, 2762, 2252, 2251, 2241, 2568, 2175, 2250, 5327, 3858,
	273, 1439, 3858, 1439, 4686, 4219, 2390, 4218, 5326, 274,
	5152, 1571, 2446, 2293, 1571, 4506, 2391, 4507, 2094, 280,
	2695, 3818, 3816, 3817, 3809, 3810, 3811, 3812, 3814, 3815,
	5689, 3858, 5327, 1210, 5246, 5570, 5032, 3669, 273, 220,
	2444, 4185, 2386, 4975, 2089, 2696, 2579, 274, 5095, 4073,
	3819, 3820, 3821, 4659, 4608, 4599, 4570, 3818, 3816, 3817,
	3809, 3810, 3811, 3812, 3814, 3815, 2476, 130, 1047, 1647,
	4305, 3967, 2790, 2727, 2516, 2438, 2287, 220, 3811, 3812,
	3814, 3815, 2285, 4363, 2189, 1986, 5723, 2987, 5546, 2428,
	2073, 2429, 3809, 3810, 3811, 3812, 3814, 3815, 3757, 2636,
	1568, 2436, 2437, 3435, 2635, 2659, 3514, 3503, 2211, 4235,
	2754, 1961, 2121, 1880, 1547, 1505, 3809, 3810, 3811, 3812,
	3814, 3815, 2577, 1629, 1629, 1987, 2519, 2409, 2160, 5172,
	3523, 2656, 1050, 5561, 1753, 2408, 2407, 2430, 2431, 1593,
	2416, 5144, 5558, 4947, 2434, 2435, 4915, 1422, 4943, 4257,
	4536, 3520, 5349, 3518, 4912, 1572, 5038, 5462, 4042, 1629,
	2643, 4555, 1236, 4169, 3641, 2018, 5547, 1613, 2679, 2646,
	2660, 5626, 5175, 2646, 2626, 1258, 5627, 5171, 5150, 2631,
	1003, 2992, 1691, 4306, 2455, 3971, 2064, 1262, 1573, 4621,
	1629, 5204, 4917, 5208, 1931, 1578, 3293, 5752, 2706, 2710,
	2477, 5664, 1207, 1205, 1203, 5604, 5365, 1011, 1008, 1882,
	2085, 2081, 5197, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 5183, 2403, 2508, 4978, 2646, 4134, 4977, 2502,
	3397, 4619, 1924, 4618, 4610, 1629, 1428, 1629, 4865, 1629,
	4585, 3586, 4584, 3397, 4582, 2506, 2579, 3395, 4581, 1107,
	4569, 2746, 1569, 4528, 2671, 4527, 2633, 1629, 1629, 4175,
	3395, 4174, 1570, 4122, 3921, 4620, 3762, 2411, 1261, 3761,
	3760, 1629, 1577, 1255, 1690, 3759, 3715, 3542, 3541, 3525,
	3513, 3505, 2993, 2585, 3494, 3934, 2530, 3493, 5690, 3481,
	1568, 3470, 1319, 2119, 1319, 3468, 2573, 2680, 1047, 3337,
	3463, 1319, 3462, 2627, 1319, 3442, 2309, 2309, 1753, 3441,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 2644, 1319, 2629,
	1319, 1319, 1319, 1319, 1984, 2755, 2773, 2711, 2773, 2632,
	2774, 2641, 1050, 1611, 4039, 2751, 2607, 2652, 2768, 4663,
	1108, 4118, 3402, 2994, 3213, 2991, 1319, 1254, 1573, 5173,
	1319, 1319, 4911, 2698, 2699, 2628, 2900, 2625, 1319, 2657,
	1689, 5145, 1319, 2826, 1319, 1319, 2813, 2788, 2642, 2413,
	5220, 4913, 1753, 2297, 2650, 2696, 1986, 2578, 1319, 1319,
	1319, 1319, 3234, 2688, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 2808, 2702, 2294, 2446, 2798, 2685, 1257, 2685,
	1257, 2645, 2684, 5665, 2684, 2645, 876, 5605, 2700, 2575,
	2412, 2038, 1569, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1570, 1319, 2968, 2969, 2723, 1662, 1319, 2731,
	3458, 2765, 1571, 3973, 2778, 1991, 3040, 1991, 2968, 2984,
	1444, 3456, 1578, 3039, 2418, 2419, 2776, 1753, 2571, 2856,
	2824, 3815, 1595, 1596, 1595, 1596, 1444, 2212, 2645, 1595,
	1596, 3638, 3979, 2757, 876, 3032, 4932, 2075, 4896, 1256,
	1595, 1596, 1319, 1753, 4072, 1639, 3246, 2770, 1595, 1596,
	1200, 1926, 1883, 2576, 2442, 2803, 3219, 3081, 3081, 3095,
	1442, 2968, 1442, 2849, 3115, 3117, 3411, 2850, 2838, 2837,
	1935, 2549, 3125, 1552, 2782, 1538, 2783, 4889, 4854, 2824,
	2804, 2032, 4864, 2270, 2822, 2572, 2543, 2623, 2996, 1577,
	4155, 2069, 2070, 2071, 2072, 2074, 2075, 4119, 2638, 1561,
	2439, 1491, 207, 2931, 2810, 2812, 3228, 2747, 2987, 3439,
	2811, 1257, 2825, 2818, 3223, 2640, 3199, 2983, 1105, 3171,
	1104, 1257, 2911, 1538, 1235, 1257, 2841, 1235, 1235, 2842,
	2843, 3216, 1741, 5207, 3268, 4890, 1974, 1972, 1973, 1971,
	2529, 3378, 4873, 2822, 2526, 1647, 1943, 1737, 2257, 2634,
	1927, 3300, 4539, 4152, 2637, 2909, 1647, 2915, 2785, 2540,
	2915, 3163, 2639, 1538, 1538, 3287, 1543, 3203, 3034, 5667,
	5626, 3492, 4151, 3036, 3037, 4909, 3038, 2246, 994, 3041,
	4914, 3042, 3043, 2500, 2463, 1705, 3425, 3243, 3977, 3359,
	3414, 2514, 1571, 2681, 2927, 1438, 3522, 1438, 3248, 2630,
	1711, 1671, 2227, 1249, 1753, 2527, 5543, 3482, 2033, 2542,
	2923, 3702, 2981, 3687, 5221, 4872, 5701, 2921, 1688, 1257,
	1550, 2460, 2990, 3162, 1629, 1629, 3970, 2609, 5219, 1709,
	875, 3285, 3521, 2820, 1635, 2528, 5217, 2639, 1572, 3281,
	1047, 1253, 1047, 1110, 1109, 5229, 1410, 2454, 5666, 3242,
	5342, 2823, 1538, 3519, 1538, 3517, 1671, 3077, 4566, 1674,
	3090, 3170, 3119, 3175, 3381, 3106, 3181, 3182, 3121, 2619,
	1566, 3396, 3227, 3290, 1319, 5668, 2456, 2043, 3164, 1319,
	3188, 3265, 2682, 3236, 3152, 3153, 3168, 3169, 875, 5216,
	3273, 2197, 1047, 2231, 2244, 2897, 3277, 3530, 3484, 5676,
	3316, 3222, 3424, 995, 1050, 3483, 1050, 2464, 3257, 1612,
	2823, 3289, 2905, 820, 1629, 2775, 1009, 1009, 1202, 5218,
	3251, 1009, 1009, 1670, 3996, 3342, 2689, 4157, 2418, 2419,
	2636, 1668, 3995, 2821, 3225, 2635, 2906, 2507, 2615, 3361,
	815, 1439, 3245, 933, 2907, 2457, 1321, 2234, 2912, 4228,
	3486, 1896, 3217, 1902, 877, 1908, 1050, 1439, 2505, 3701,
	3239, 3288, 3333, 4885, 2186, 2187, 2229, 130, 2309, 3271,
	3296, 4886, 1509, 1568, 1513, 4156, 2686, 3276, 1670, 4643,
	4552, 3250, 4891, 3474, 5344, 1956, 2232, 3253, 5732, 2996,
	3291, 3284, 2821, 3298, 3254, 3244, 3485, 4352, 5315, 5670,
	1669, 2612, 5544, 4907, 3275, 3218, 3282, 3491, 1156, 5314,
	4976, 4583, 877, 3438, 3413, 3380, 4580, 4490, 2663, 2579,
	3280, 2687, 4910, 2670, 4090, 4888, 3307, 4853, 4489, 2004,
	2230, 2009, 3294, 3330, 4488, 2414, 2414, 3299, 3383, 4081,
	3385, 4644, 4477, 1753, 4892, 2023, 1954, 2028, 3377, 3340,
	3347, 3341, 3349, 4476, 3351, 1629, 3353, 3354, 2617, 3297,
	130, 1573, 4475, 2539, 4181, 4173, 931, 1000, 999, 4116,
	3873, 3403, 3308, 3309, 3538, 3976, 3310, 3311, 1538, 2895,
	3577, 3365, 3581, 2898, 4349, 3987, 4091, 3524, 3469, 3726,
	3461, 4642, 3338, 2493, 2492, 2577, 1148, 1319, 1934, 1319,
	3440, 4082, 3400, 1706, 5638, 3346, 1685, 3539, 2608, 4550,
	3332, 2600, 4153, 2541, 2550, 5651, 996, 5650, 5542, 1055,
	3694, 3695, 3724, 1149, 2618, 1569, 3348, 3211, 3350, 1490,
	3352, 1538, 5703, 3616, 5574, 1570, 4089, 5612, 3444, 2852,
	2853, 4526, 2894, 4525, 3582, 4182, 1062, 2664, 3988, 3459,
	4992, 4080, 130, 4179, 130, 2908, 130, 4254, 2605, 3515,
	2622, 1440, 1629, 1440, 2233, 2910, 5424, 3610, 3379, 3369,
	4255, 3306, 2996, 2601, 1629, 4350, 1629, 5674, 3601, 3499,
	3412, 1629, 4908, 2349, 3312, 1960, 3625, 207, 3416, 3419,
	3386, 4887, 3406, 3388, 3580, 1735, 3450, 3451, 3453, 3454,
	3455, 3457, 2587, 2691, 1201, 4114, 3322, 3323, 3324, 3325,
	1319, 2462, 1258, 130, 130, 3531, 1319, 1319, 5669, 3489,
	2603, 4112, 4026, 2599, 3495, 5513, 2582, 5514, 5439, 2591,
	130, 1319, 130, 2610, 5136, 2034, 4113, 3543, 4897, 4898,
	4111, 3620, 3578, 3579, 2620, 4110, 130, 3652, 130, 3670,
	3478, 3479, 997, 1312, 4107, 1707, 3502, 3488, 4254, 3664,
	5350, 2616, 3465, 2501, 3717, 2690, 1047, 2914, 3429, 3497,
	2604, 3487, 1956, 3511, 3591, 1319, 1319, 4157, 3504, 3721,
	3972, 1319, 3443, 998, 5343, 874, 2656, 3667, 2583, 3666,
	2588, 3872, 2613, 2227, 1319, 1319, 3460, 5675, 1703, 2611,
	1319, 1319, 3202, 3536, 3537, 3535, 1319, 2621, 932, 2922,
	4832, 3722, 4054, 3588, 1610, 3727, 994, 3590, 4833, 1704,
	1881, 1648, 3661, 816, 1467, 2660, 2640, 2253, 3338, 5006,
	1050, 1549, 1710, 2459, 3397, 1571, 2181, 4628, 2581, 5677,
	5611, 1249, 1002, 4164, 3671, 1634, 1636, 4626, 3931, 3676,
	2996, 3417, 1319, 1319, 1319, 1236, 3656, 2896, 1319, 2453,
	4060, 2638, 1001, 1708, 3611, 2660, 934, 4522, 1319, 1133,
	930, 1150, 1151, 4053, 3718, 2231, 5422, 2569, 2136, 3624,
	2578, 4831, 2654, 2614, 2231, 1319, 5084, 5073, 2042, 2686,
	5636, 2667, 1991, 3647, 1056, 1057, 1138, 2142, 3657, 3655,
	3693, 2148, 3636, 3750, 5699, 3674, 5473, 5590, 4180, 2592,
	3654, 3680, 2653, 3681, 4949, 817, 841, 4062, 5591, 2131,
	3767, 3167, 3684, 2978, 5423, 3683, 3955, 3745, 3746, 2234,
	3688, 1157, 3749, 5704, 2687, 4115, 3180, 4630, 2234, 4291,
	1256, 995, 4365, 5683, 2838, 2837, 1513, 5385, 3165, 3703,
	3710, 2648, 4027, 2665, 4289, 3741, 5021, 2229, 4751, 4981,
	1442, 4842, 4632, 4478, 4282, 4551, 4752, 1473, 2232, 1471,
	818, 4308, 819, 3685, 1653, 4629, 1442, 2232, 5394, 5479,
	1319, 1319, 1319, 1319, 2593, 2594, 2576, 5408, 4061, 1319,
	1319, 1319, 5262, 1257, 1319, 4990, 3716, 1452, 4980, 4979,
	4680, 4710, 4242, 2666, 4100, 5377, 4098, 3682, 1319, 1444,
	1753, 2589, 3498, 3944, 1454, 3472, 3210, 2742, 2649, 2224,
	5378, 2230, 3723, 1470, 2240, 1461, 2243, 807, 130, 5211,
	4628, 2053, 3725, 2513, 4523, 1319, 4405, 1319, 5071, 4796,
	4626, 2052, 1449, 5072, 2657, 3913, 1444, 4193, 3865, 3866,
	1059, 1058, 5575, 2840, 4293, 5379, 2052, 2580, 2404, 5709,
	2590, 3678, 3679, 5170, 1753, 5610, 2609, 5112, 3846, 2047,
	4588, 5007, 2495, 4167, 4099, 3473, 4284, 5271, 4168, 1444,
	2401, 2350, 1753, 3756, 4033, 1152, 1153, 5324, 4711, 4614,
	1455, 4589, 4283, 4537, 1538, 1438, 4535, 4243, 4233, 4029,
	1618, 3626, 3619, 3608, 2769, 1000, 999, 2763, 2619, 3867,
	2756, 1438, 2309, 2749, 3534, 2726, 1753, 2722, 3787, 2830,
	1456, 5395, 1538, 4348, 1060, 1061, 5256, 5381, 4502, 2596,
	4630, 1928, 1482, 1538, 883, 3947, 4420, 3446, 5445, 3268,
	2309, 4309, 3401, 5411, 1134, 1135, 2233, 2515, 2052, 3927,
	2397, 4292, 5380, 3477, 996, 2233, 4713, 5043, 4753, 2051,
	5236, 3445, 3605, 1492, 4627, 1453, 2399, 5234, 4629, 5147,
	2440, 5382, 1319, 2801, 2051, 4045, 3418, 2615, 4041, 1864,
	3158, 4040, 3708, 3686, 1319, 3907, 4434, 3870, 3869, 5589,
	2791, 1679, 1678, 4280, 5074, 2720, 2595, 3875, 1672, 3097,
	1947, 4471, 4101, 3877, 3475, 3841, 3842, 3843, 3945, 3209,
	3208, 3207, 3206, 2400, 3205, 3952, 3954, 1980, 4657, 1538,
	1978, 3859, 3902, 3161, 1916, 1254, 1155, 2427, 1966, 3915,
	3916, 3917, 3918, 3876, 2053, 4941, 3968, 4587, 3888, 3890,
	2612, 5159, 3911, 5337, 3891, 3892, 3899, 1967, 3974, 2053,
	4406, 4675, 4676, 4188, 4532, 4997, 4754, 3422, 1753, 3874,
	2524, 1753, 4407, 4543, 2767, 4797, 2051, 3160, 1566, 4652,
	5238, 1949, 3159, 130, 2831, 1047, 3961, 5633, 922, 2131,
	1999, 3948, 2568, 1538, 2597, 4028, 3265, 2579, 5134, 2309,
	997, 3920, 2676, 5128, 4000, 5708, 2014, 2617, 3957, 5127,
	3585, 4295, 3959, 3960, 3336, 4302, 1319, 3963, 3980, 3964,
	3894, 3889, 3965, 3943, 3942, 3898, 923, 3941, 2568, 3938,
	3895, 998, 1538, 3937, 4078, 3925, 4290, 4285, 4286, 4287,
	4288, 3447, 3448, 3924, 3926, 3923, 4102, 3675, 3476, 1050,
	1439, 5396, 3589, 1538, 3587, 4093, 5255, 2795, 4503, 2695,
	5237, 1538, 3953, 4097, 3951, 1654, 5160, 4627, 1136, 1137,
	3881, 1616, 1538, 2618, 4103, 5451, 4016, 4017, 4294, 4135,
	4044, 3962, 4593, 4049, 5155, 5142, 4051, 1439, 5338, 4008,
	1002, 5154, 3958, 4859, 3969, 4858, 1319, 1319, 4043, 5459,
	5442, 4047, 4121, 4803, 1753, 4423, 2659, 4007, 1267, 2622,
	1001, 3003, 5115, 1655, 2659, 4479, 1538, 1450, 4145, 5481,
	1439, 2535, 3914, 1732, 5637, 3906, 3989, 1976, 4030, 4296,
	3992, 5635, 3993, 1538, 3994, 4162, 5143, 1734, 4077, 4079,
	5563, 1731, 4533, 4598, 1729, 5367, 5358, 4075, 4057, 1699,
	4166, 5223, 1697, 5125, 1695, 1666, 1664, 5090, 2426, 4092,
	4850, 882, 1661, 5383, 4795, 4656, 4495, 4096, 3838, 5384,
	4324, 1440, 1659, 5452, 1657, 1650, 3882, 3466, 1629, 1451,
	1629, 1644, 2610, 4108, 1753, 4303, 5339, 1440, 4013, 1041,
	1629, 1629, 1642, 2620, 1979, 3268, 4123, 1977, 4165, 3939,
	4137, 3801, 4139, 1154, 3728, 4143, 4131, 3609, 3512, 4149,
	2616, 3506, 3436, 3372, 1538, 3241, 4234, 2800, 2786, 3467,
	2674, 2725, 4144, 2548, 4094, 2544, 2523, 4063, 2443, 2342,
	3880, 3887, 1444, 2264, 2260, 4005, 2017, 1736, 4248, 4161,
	4857, 2613, 3839, 2704, 4011, 4010, 4250, 4012, 2611, 4084,
	4071, 4088, 1629, 4183, 2504, 4186, 2621, 2468, 4232, 4009,
	3999, 2047, 3363, 3362, 1629, 3314, 1629, 4085, 3886, 2819,
	2721, 4086, 5535, 4087, 1684, 207, 207, 2471, 2341, 2339,
	2164, 2031, 3978, 1406, 3002, 3981, 4227, 4950, 4203, 4601,
	1007, 4600, 5023, 4586, 4954, 1319, 4927, 5441, 4126, 1258,
	5041, 1258, 1319, 1319, 4959, 4241, 1319, 1319, 1319, 4136,
	1319, 4133, 4132, 5608, 4945, 4158, 4146, 2537, 5036, 1319,
	2309, 4942, 2558, 4259, 2536, 4171, 3664, 2559, 1319, 4878,
	1975, 4479, 2614, 1319, 4163, 3664, 4345, 4877, 4247, 1753,
	1733, 2345, 3265, 3489, 1730, 5603, 4709, 1728, 1319, 4244,
	4699, 4117, 1698, 4617, 4299, 1696, 1753, 1694, 1665, 1663,
	1236, 4591, 1047, 1236, 1236, 1660, 2309, 2309, 1319, 1319,
	1043, 1319, 1319, 1319, 1010, 1658, 1042, 1656, 1649, 4558,
	4251, 3444, 4556, 4190, 1643, 4534, 4237, 4231, 3883, 3884,
	3885, 4220, 1319, 4225, 3639, 1641, 1319, 3631, 2309, 2309,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	4327, 1319, 2917, 4378, 4310, 4379, 1050, 4230, 1257, 1319,
	1319, 2309, 4172, 4170, 4300, 3623, 1319, 4229, 4256, 2703,
	4337, 4338, 1258, 3615, 4268, 4269, 3602, 4265, 3599, 1319,
	2503, 2560, 2142, 2467, 3583, 3279, 2142, 3274, 2719, 2717,
	1444, 1444, 2697, 2056, 1319, 4307, 207, 2661, 2598, 2564,
	4418, 2584, 1204, 1206, 2570, 2383, 2380, 2377, 2376, 2373,
	2368, 2366, 2361, 2355, 2447, 2448, 2449, 2450, 4297, 4258,
	2351, 4176, 4147, 4301, 1419, 5518, 4249, 2670, 2276, 1753,
	3471, 3706, 5627, 2405, 5336, 4160, 2393, 2394, 2547, 3389,
	4417, 3576, 1538, 1538, 4334, 3932, 4456, 4332, 3390, 3387,
	5500, 1420, 5402, 5056, 4966, 4856, 3665, 4344, 3975, 1038,
	1538, 1538, 2422, 1933, 1428, 2284, 4360, 1538, 3397, 5273,
	3397, 3268, 2309, 3423, 2309, 3374, 4367, 4351, 4353, 4354,
	2243, 2561, 2566, 2458, 5266, 3395, 4355, 3420, 3224, 2545,
	2766, 2533, 1918, 1439, 1319, 1476, 4376, 4721, 2579, 1442,
	4377, 1629, 1726, 1727, 4472, 1629, 1629, 1753, 4383, 4374,
	4224, 4409, 1515, 4381, 2057, 1516, 4511, 2498, 2491, 5499,
	2465, 4918, 4961, 2065, 2066, 3355, 3356, 2065, 2066, 3540,
	130, 1248, 1640, 1588, 911, 3427, 1442, 3707, 2546, 5288,
	5157, 4430, 4431, 4804, 4782, 4058, 4410, 3428, 4498, 3449,
	4499, 4148, 2060, 5621, 1545, 1475, 2306, 1585, 1319, 4270,
	2068, 311, 4427, 4428, 5571, 4631, 4696, 3598, 2392, 1442,
	2750, 3428, 1421, 4613, 1556, 2562, 4509, 3520, 3518, 3527,
	1142, 5641, 1516, 3508, 3430, 3510, 1702, 3432, 5450, 4440,
	4442, 1319, 1319, 4443, 2067, 5671, 4453, 5282, 2067, 4612,
	3509, 4447, 3431, 5429, 1516, 5400, 5398, 4425, 5335, 5257,
	5254, 914, 914, 928, 5135, 4515, 804, 4707, 3265, 4698,
	4679, 4236, 4036, 3646, 3614, 4500, 3600, 3122, 2389, 4501,
	2569, 2295, 5156, 4510, 1438, 3496, 4491, 1879, 1047, 4473,
	4474, 1878, 4594, 1319, 1319, 4497, 2287, 1872, 4538, 4167,
	4167, 1319, 2285, 1250, 4168, 4168, 3928, 4486, 4487, 2676,
	5707, 3807, 3808, 4167, 4496, 4571, 2065, 2066, 4168, 2433,
	3302, 1438, 1629, 1629, 4516, 5640, 4972, 2432, 3301, 3188,
	1629, 5022, 2672, 1890, 4774, 1889, 4481, 4014, 1890, 1890,
	1629, 4524, 2567, 1615, 2998, 1538, 3367, 4640, 3033, 1614,
	2433, 2432, 1050, 5578, 1438, 1701, 4575, 4706, 1700, 4518,
	5258, 4633, 5198, 1916, 4557, 4963, 4559, 4958, 4635, 4957,
	4834, 1439, 1439, 4830, 2309, 4609, 130, 130, 4829, 4770,
	4519, 4480, 4356, 4141, 4138, 3370, 2158, 4015, 2157, 3392,
	2552, 4615, 5692, 5652, 2748, 5504, 4563, 5433, 4624, 1319,
	4603, 3595, 4568, 3597, 5432, 4634, 5431, 5366, 5308, 5304,
	5232, 5187, 5120, 5114, 5113, 5111, 5110, 5016, 4991, 1629,
	4916, 4844, 4648, 4828, 4827, 1319, 4733, 4714, 4645, 4646,
	4727, 3444, 4664, 1444, 1319, 4554, 4625, 4546, 4240, 4239,
	4050, 4002, 1629, 2784, 3956, 4670, 4723, 1629, 1629, 1629,
	3630, 4639, 4641, 3603, 3421, 3643, 4616, 4655, 3643, 3373,
	3360, 2797, 2799, 3329, 3328, 3327, 3326, 3270, 4715, 3238,
	2270, 3237, 2926, 1629, 2764, 2802, 1401, 4622, 2737, 2736,
	2735, 2734, 2733, 2732, 2563, 1753, 4689, 1329, 1319, 1319,
	3531, 2538, 2499, 2490, 1319, 1319, 2309, 2489, 2488, 1319,
	1319, 2487, 1319, 2486, 2358, 2357, 4638, 1319, 2356, 4718,
	2354, 4649, 4701, 2302, 4703, 4576, 4578, 4691, 1319, 2275,
	2274, 1942, 1941, 3652, 4734, 1940, 4717, 1939, 1938, 1937,
	1936, 1932, 4460, 1930, 1319, 1929, 3664, 1867, 4678, 1866,
	1725, 318, 318, 318, 4692, 810, 811, 1724, 827, 810,
	827, 839, 1651, 1605, 881, 4596, 4597, 4746, 901, 4695,
	1604, 4748, 4700, 908, 908, 908, 908, 1603, 318, 1602,
	1601, 4755, 4697, 1548, 1499, 1498, 4768, 318, 1497, 4716,
	4650, 4725, 1496, 4654, 4724, 4719, 1495, 4756, 1494, 1493,
	4461, 1487, 1486, 2297, 4732, 1485, 4764, 1444, 1484, 4731,
	1483, 1129, 130, 2395, 130, 1444, 1208, 1199, 318, 1753,
	1753, 5341, 1753, 4895, 4894, 4893, 207, 2309, 4462, 2534,
	4801, 4459, 2745, 1444, 111, 1925, 3464, 103, 2668, 4553,
	4470, 5572, 5684, 1629, 1629, 5716, 4468, 2728, 2602, 2852,
	4368, 4749, 5483, 5482, 5371, 3255, 2352, 4809, 4196, 4195,
	1440, 5577, 2606, 5228, 1074, 1753, 130, 969, 5480, 130,
	1913, 1089, 1442, 5461, 4052, 130, 1538, 3545, 1652, 5251,
	2472, 2852, 4384, 4469, 3901, 3190, 5421, 4778, 4465, 3766,
	5295, 5083, 3001, 2162, 3850, 105, 1303, 1440, 1351, 5005,
	5004, 4879, 1247, 1753, 994, 4540, 4206, 4747, 5001, 5000,
	2299, 2301, 1319, 4466, 4413, 1266, 4794, 4836, 4837, 1756,
	3130, 4812, 4814, 1444, 3132, 1444, 4839, 4840, 4841, 1249,
	1440, 5512, 2406, 5698, 2415, 2188, 3080, 1328, 1366, 4847,
	4848, 4849, 1323, 1324, 4852, 2303, 1327, 1325, 1326, 2182,
	1538, 4811, 4926, 4806, 4807, 4808, 1322, 2298, 4805, 4705,
	1753, 4226, 1538, 3650, 4935, 1538, 4810, 4938, 4266, 1985,
	4906, 810, 810, 1983, 1439, 4823, 4871, 4821, 971, 318,
	1248, 4820, 3186, 2920, 2985, 3755, 2155, 1282, 1319, 4922,
	4923, 1753, 1305, 2917, 4835, 2982, 1468, 1294, 3878, 4868,
	4869, 4253, 3123, 4444, 2829, 1099, 4851, 1438, 3804, 2988,
	1457, 4920, 2306, 2306, 2142, 3103, 3096, 3092, 3966, 3640,
	2035, 5097, 4874, 2133, 3651, 1582, 1286, 2918, 4919, 995,
	2146, 4730, 3733, 2839, 4260, 3904, 3232, 1629, 1629, 4863,
	5491, 4364, 3268, 1319, 1319, 4973, 4870, 4876, 3368, 2741,
	1418, 1417, 1466, 1444, 1416, 4925, 4463, 5467, 5464, 2658,
	5008, 4201, 4202, 2398, 4464, 3295, 2930, 4221, 4934, 4936,
	1299, 4937, 3343, 4855, 4921, 3344, 1859, 1538, 2521, 5026,
	4944, 4003, 3863, 4946, 4965, 4677, 1944, 4948, 5164, 4962,
	1753, 4964, 1311, 4956, 2118, 1629, 3572, 3571, 3315, 5330,
	1442, 1442, 1567, 5044, 1565, 1564, 1563, 5661, 3533, 3528,
	2677, 4549, 4548, 4989, 4988, 4547, 278, 3700, 2054, 4467,
	1629, 1629, 1629, 1629, 1629, 1629, 1629, 2046, 275, 5030,
	4984, 5033, 277, 276, 4987, 4056, 4939, 4457, 1439, 4998,
	1319, 1319, 1319, 4974, 5045, 5027, 1439, 5020, 3910, 1617,
	5569, 4573, 4187, 27, 4983, 915, 916, 4982, 1753, 917,
	4689, 3305, 2425, 1319, 1439, 1584, 1319, 1319, 4505, 3906,
	4993, 26, 5003, 25, 4999, 24, 1319, 5011, 23, 2309,
	134, 28, 5019, 5017, 1319, 1319, 5029, 50, 3375, 3265,
	31, 4691, 5039, 1000, 999, 30, 5061, 5, 22, 178,
	5065, 5048, 176, 1753, 153, 1629, 174, 173, 3174, 5053,
	144, 172, 171, 5046, 170, 169, 168, 5067, 167, 175,
	166, 165, 160, 1428, 5075, 164, 163, 162, 161, 159,
	157, 1538, 158, 152, 5059, 1438, 1438, 5058, 156, 155,
	154, 151, 996, 150, 149, 148, 147, 1319, 1319, 146,
	145, 143, 177, 142, 1439, 141, 1439, 5080, 223, 4902,
	1428, 4902, 140, 1753, 139, 138, 137, 4860, 4861, 29,
	136, 1319, 135, 894, 1276, 895, 69, 4036, 68, 5092,
	131, 132, 21, 48, 1319, 16, 73, 74, 20, 15,
	43, 108, 5086, 1319, 123, 122, 121, 44, 2309, 118,
	2306, 5103, 5104, 5108, 42, 19, 18, 17, 1319, 116,
	115, 1319, 114, 41, 39, 13, 11, 5141, 45, 2302,
	2302, 5132, 5133, 2248, 4067, 4068, 14, 4069, 7, 3532,
	110, 5138, 1319, 5139, 215, 1319, 212, 211, 214, 210,
	213, 107, 1753, 209, 5106, 109, 5107, 208, 1629, 1319,
	5167, 1629, 1629, 106, 37, 12, 5068, 203, 1538, 4684,
	5213, 97, 206, 5131, 205, 204, 102, 202, 5190, 201,
	200, 1629, 5191, 1440, 5140, 5186, 197, 5146, 997, 98,
	95, 199, 101, 100, 1439, 2568, 198, 96, 99, 4902,
	5137, 1444, 35, 1444, 8, 72, 9, 5069, 4304, 2297,
	126, 127, 4127, 4128, 46, 4129, 93, 1246, 5203, 998,
	92, 91, 5222, 90, 34, 71, 33, 5231, 272, 270,
	271, 269, 1753, 5184, 268, 1629, 5209, 5210, 5124, 193,
	248, 5189, 247, 5267, 246, 245, 244, 243, 5249, 5244,
	5235, 242, 241, 240, 235, 239, 5178, 5179, 237, 236,
	238, 234, 264, 5200, 263, 3677, 262, 5253, 261, 260,
	259, 258, 257, 251, 5212, 5214, 250, 256, 1002, 5226,
	255, 1319, 2309, 254, 5268, 5272, 5233, 5225, 5224, 253,
	252, 249, 4905, 267, 86, 233, 232, 5199, 1001, 5201,
	4203, 5202, 231, 1442, 229, 5250, 4689, 1538, 1538, 1538,
	5248, 225, 1538, 1538, 1538, 228, 1538, 1538, 230, 227,
	1459, 226, 224, 5270, 266, 265, 196, 87, 191, 192,
	4819, 827, 85, 5269, 5264, 130, 130, 4691, 130, 1319,
	5275, 1319, 5274, 1319, 2306, 827, 190, 5048, 5280, 189,
	188, 318, 187, 1444, 2773, 186, 5252, 185, 1489, 184,
	84, 195, 194, 32, 2, 1, 1319, 0, 1444, 318,
	0, 318, 318, 0, 1520, 318, 1525, 1532, 0, 5287,
	0, 0, 5293, 5325, 0, 0, 5323, 0, 1546, 0,
	0, 0, 0, 0, 5188, 0, 901, 0, 0, 901,
	0, 0, 0, 0, 0, 0, 5193, 0, 0, 5192,
	0, 1440, 1440, 130, 130, 0, 130, 2302, 5322, 2309,
	5009, 5321, 908, 0, 0, 0, 0, 0, 0, 5352,
	0, 0, 1444, 5318, 1444, 0, 0, 0, 1438, 5345,
	5387, 0, 5346, 0, 0, 0, 0, 0, 0, 0,
	0, 1444, 0, 0, 1444, 0, 0, 5399, 1629, 5373,
	0, 0, 0, 0, 0, 0, 0, 1442, 1629, 0,
	0, 0, 5375, 5361, 0, 1442, 0, 0, 5363, 1319,
	1319, 0, 0, 0, 0, 0, 0, 0, 0, 1319,
	318, 0, 5368, 1442, 0, 5372, 0, 5370, 0, 0,
	0, 0, 0, 0, 5305, 5306, 5307, 5412, 5386, 5309,
	5310, 5311, 0, 5312, 5313, 0, 0, 0, 5419, 0,
	5420, 5404, 5020, 318, 0, 318, 318, 318, 1520, 0,
	318, 318, 1439, 5413, 1439, 4689, 5415, 4902, 1532, 4902,
	5362, 5418, 0, 0, 0, 5417, 1428, 1319, 1319, 1258,
	5416, 1319, 318, 5425, 1892, 1629, 1538, 5430, 1538, 5434,
	5435, 5436, 5426, 130, 130, 0, 4691, 0, 0, 0,
	1911, 0, 0, 0, 0, 5437, 5438, 0, 5440, 0,
	1919, 1922, 0, 1442, 5458, 1442, 0, 5490, 5497, 5495,
	0, 5448, 5449, 5466, 5469, 0, 0, 5456, 1946, 0,
	1532, 0, 1438, 5457, 0, 318, 318, 5494, 1520, 0,
	1438, 5515, 5471, 1319, 1319, 1319, 5475, 0, 0, 0,
	5517, 5470, 0, 0, 5276, 5474, 5278, 0, 1438, 0,
	5476, 0, 901, 0, 318, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 5501, 0, 0,
	0, 2302, 5505, 1319, 0, 5550, 5493, 2019, 5508, 5516,
	0, 0, 1129, 0, 5555, 0, 0, 0, 0, 0,
	5532, 5529, 5530, 5531, 0, 0, 0, 1629, 0, 0,
	0, 0, 2297, 0, 1439, 0, 0, 0, 0, 4902,
	5551, 0, 5584, 0, 0, 0, 5588, 5586, 5553, 1439,
	2568, 0, 5552, 0, 4902, 0, 0, 318, 5594, 0,
	0, 0, 5600, 1442, 0, 5585, 1319, 5576, 1438, 0,
	1438, 5568, 0, 0, 1538, 1538, 5579, 0, 0, 5596,
	0, 5566, 5231, 5587, 5609, 5593, 0, 0, 5592, 0,
	0, 5601, 0, 0, 5602, 0, 0, 0, 0, 0,
	0, 0, 0, 5477, 130, 5478, 5628, 0, 5240, 0,
	5242, 0, 2834, 1439, 0, 1439, 1319, 5624, 4902, 5622,
	4902, 0, 5620, 0, 1428, 1428, 5615, 5616, 5630, 5619,
	5632, 0, 1439, 5646, 0, 1439, 1444, 4902, 1444, 0,
	4902, 5631, 5634, 5648, 5657, 5639, 5466, 0, 0, 5469,
	0, 5176, 5644, 0, 1440, 0, 5647, 5654, 0, 0,
	0, 0, 5565, 0, 5655, 5567, 0, 5663, 5643, 0,
	5645, 5653, 0, 0, 5649, 0, 0, 0, 1538, 0,
	0, 0, 0, 0, 0, 5662, 0, 0, 0, 0,
	0, 0, 5679, 5678, 0, 5687, 0, 0, 1438, 0,
	0, 5685, 2558, 5694, 0, 5691, 0, 2559, 0, 0,
	5702, 0, 1319, 1319, 4291, 5493, 0, 5693, 0, 0,
	0, 1319, 1319, 0, 5700, 0, 0, 5720, 0, 4289,
	5705, 5710, 5686, 5724, 0, 0, 5714, 0, 0, 4282,
	0, 10, 5721, 5696, 5719, 5735, 5727, 5718, 5725, 5733,
	0, 207, 5728, 0, 5734, 6, 0, 0, 5736, 0,
	0, 0, 0, 5741, 3098, 0, 810, 5729, 5739, 0,
	5745, 5617, 5618, 5722, 1538, 5353, 5747, 5746, 5742, 0,
	5726, 5748, 5743, 0, 5754, 5755, 5751, 318, 0, 318,
	4702, 5749, 5756, 318, 5758, 5711, 5712, 5744, 3652, 0,
	1319, 0, 0, 5764, 0, 5766, 1892, 1520, 1532, 318,
	5767, 318, 2273, 5761, 5751, 0, 5763, 0, 1440, 318,
	0, 827, 0, 0, 0, 2297, 1440, 0, 318, 4293,
	0, 2560, 5757, 3652, 0, 0, 0, 0, 2306, 5389,
	0, 5391, 5760, 0, 1440, 0, 0, 0, 0, 2564,
	2359, 4284, 0, 0, 0, 0, 0, 4750, 5405, 2065,
	2066, 5407, 0, 318, 0, 2306, 2306, 4283, 0, 5713,
	0, 0, 318, 1608, 5762, 5682, 0, 3807, 3808, 0,
	3825, 3826, 3827, 2096, 0, 1751, 0, 0, 0, 0,
	0, 0, 2068, 3807, 3808, 0, 3825, 3826, 3827, 0,
	0, 1442, 0, 1442, 0, 0, 0, 901, 0, 0,
	0, 0, 0, 0, 4191, 4192, 4329, 0, 0, 0,
	0, 2122, 0, 0, 0, 0, 4292, 0, 0, 0,
	2067, 2561, 2566, 0, 1440, 0, 1440, 0, 5606, 0,
	0, 0, 0, 0, 0, 908, 0, 908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 908, 908, 3822,
	0, 0, 0, 1608, 0, 0, 0, 1439, 0, 1439,
	0, 0, 4902, 0, 4902, 3822, 4272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4298, 0,
	0, 130, 901, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 2469, 0, 0,
	0, 0, 318, 0, 318, 2306, 318, 1428, 318, 0,
	0, 318, 0, 318, 0, 2562, 0, 0, 3807, 3808,
	0, 3825, 3826, 3827, 0, 0, 1438, 0, 1438, 0,
	0, 0, 0, 0, 2073, 320, 0, 0, 0, 2509,
	2558, 4328, 2510, 1442, 2511, 2559, 2512, 0, 130, 0,
	0, 0, 3813, 0, 1440, 0, 0, 0, 1442, 0,
	0, 318, 318, 318, 318, 4066, 4295, 318, 3813, 0,
	2569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2095, 2098,
	0, 4290, 4285, 4286, 4287, 4288, 0, 0, 0, 0,
	3822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3807, 3808, 0, 3825, 3826, 3827, 0,
	0, 0, 1442, 0, 1442, 0, 0, 4064, 0, 314,
	0, 0, 2567, 4294, 0, 2302, 0, 0, 0, 0,
	0, 1442, 0, 0, 1442, 3829, 0, 0, 0, 0,
	4952, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 2302, 2302, 130, 0, 0, 0, 0, 2560,
	0, 1428, 0, 3823, 0, 0, 0, 4065, 1438, 1428,
	0, 0, 0, 5656, 4296, 5658, 0, 2564, 0, 3823,
	0, 0, 0, 1438, 0, 3822, 0, 0, 0, 0,
	0, 2306, 0, 3813, 0, 0, 0, 0, 0, 0,
	937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5015, 0, 0, 0, 2144, 318, 0,
	0, 2149, 318, 0, 0, 0, 0, 2119, 0, 0,
	0, 0, 5028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 1438, 1280, 1438,
	0, 0, 0, 3730, 3731, 0, 5052, 0, 0, 2561,
	2566, 2119, 318, 0, 2563, 0, 1438, 0, 0, 1438,
	3829, 0, 0, 0, 0, 0, 0, 0, 0, 4512,
	4513, 318, 0, 0, 0, 0, 0, 0, 3813, 0,
	0, 0, 318, 0, 0, 2263, 2065, 2066, 0, 318,
	0, 0, 2302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 3823, 318, 2306, 318, 0, 0,
	2096, 810, 0, 318, 0, 0, 2097, 0, 0, 2068,
	0, 3824, 0, 0, 0, 901, 0, 0, 0, 1129,
	0, 130, 0, 0, 0, 0, 0, 3824, 0, 0,
	0, 0, 0, 2562, 0, 0, 0, 0, 2122, 0,
	0, 0, 2306, 2306, 0, 3829, 0, 2067, 3690, 0,
	0, 1520, 318, 0, 0, 0, 881, 0, 2087, 0,
	901, 2121, 1440, 0, 1440, 0, 0, 0, 0, 0,
	0, 5129, 0, 0, 2306, 2306, 2119, 0, 0, 0,
	0, 0, 0, 2556, 0, 0, 0, 0, 2569, 3823,
	0, 0, 0, 0, 130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2306, 0, 0,
	0, 0, 2424, 130, 0, 0, 0, 0, 0, 3831,
	3832, 3833, 3834, 0, 0, 0, 4623, 0, 0, 0,
	0, 0, 3098, 3098, 0, 0, 0, 130, 0, 0,
	0, 0, 0, 0, 4636, 2554, 1442, 0, 1442, 0,
	2567, 2090, 2091, 2092, 2093, 0, 2932, 0, 0, 0,
	0, 2073, 3824, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 2119, 0, 3819, 3820, 3821, 0, 0, 2302, 0,
	3818, 3816, 3817, 3809, 3810, 3811, 3812, 3814, 3815, 3819,
	3820, 3821, 0, 0, 0, 2555, 3818, 3816, 3817, 3809,
	3810, 3811, 3812, 3814, 3815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1440, 2095, 2098, 2306, 2306, 0,
	2306, 0, 0, 0, 0, 0, 0, 0, 0, 1440,
	0, 810, 0, 0, 3124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4729, 318, 0, 0,
	0, 2797, 4735, 4736, 0, 0, 810, 3824, 0, 0,
	0, 0, 0, 318, 0, 810, 3807, 3808, 0, 3825,
	3826, 3827, 130, 0, 0, 0, 0, 318, 0, 0,
	0, 1438, 2088, 1438, 0, 0, 0, 0, 0, 0,
	0, 0, 2563, 1440, 0, 1440, 0, 318, 1532, 0,
	0, 0, 0, 2302, 318, 0, 318, 1892, 0, 318,
	0, 0, 1440, 0, 0, 1440, 0, 0, 3098, 3098,
	3098, 3098, 0, 0, 3819, 3820, 3821, 0, 0, 0,
	0, 3818, 3816, 3817, 3809, 3810, 3811, 3812, 3814, 3815,
	0, 0, 0, 0, 0, 0, 0, 0, 3822, 2302,
	2302, 0, 0, 318, 1532, 0, 318, 827, 0, 827,
	0, 0, 0, 0, 2119, 0, 318, 0, 0, 318,
	0, 0, 0, 3269, 0, 0, 0, 0, 0, 318,
	318, 2302, 2302, 0, 318, 0, 318, 0, 0, 0,
	0, 1520, 0, 318, 318, 3283, 0, 1532, 1532, 3286,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 5359,
	0, 0, 0, 0, 2302, 0, 0, 0, 0, 3819,
	3820, 3821, 2714, 0, 2094, 0, 3818, 3816, 3817, 3809,
	3810, 3811, 3812, 3814, 3815, 0, 0, 4825, 4826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 908, 908,
	2089, 3813, 908, 908, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 3320, 0, 0, 0, 5401, 2917,
	2306, 5403, 2065, 2066, 0, 0, 0, 0, 0, 0,
	318, 1520, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3345, 318, 0, 0, 2096, 1520, 3830, 1520,
	0, 1520, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 2302, 2302, 0, 2302, 3829, 0,
	0, 0, 0, 0, 2122, 0, 0, 0, 0, 0,
	0, 318, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 318, 318,
	318, 1520, 0, 0, 1520, 0, 0, 318, 0, 0,
	0, 0, 3823, 0, 0, 0, 3410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 2306, 0, 4896, 0, 2855, 0, 0, 0,
	0, 0, 318, 0, 1280, 1280, 1280, 0, 0, 0,
	130, 0, 5502, 0, 5503, 0, 318, 0, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 2797, 0, 4889, 0, 0, 1273, 4882, 0, 3480,
	0, 0, 0, 1481, 0, 0, 0, 1440, 901, 1440,
	0, 0, 0, 901, 2119, 0, 4880, 2073, 0, 0,
	0, 1504, 0, 1504, 1504, 0, 4884, 937, 0, 130,
	0, 0, 130, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2999, 4890, 0, 0, 0, 0, 0, 0, 0, 3320,
	1892, 0, 0, 0, 0, 2065, 2066, 0, 0, 0,
	0, 2095, 2098, 2306, 5060, 0, 5062, 5063, 5064, 0,
	5066, 0, 1836, 0, 0, 0, 2924, 0, 0, 2096,
	318, 3592, 0, 0, 0, 2097, 4320, 4321, 2068, 4883,
	3824, 0, 2144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 0, 318, 0, 0, 0, 2122, 0, 0,
	0, 0, 318, 0, 0, 0, 2067, 2302, 2088, 0,
	0, 0, 0, 3635, 0, 0, 0, 2087, 0, 0,
	0, 3200, 0, 3410, 0, 810, 0, 2084, 0, 5109,
	1608, 0, 0, 0, 1129, 3410, 0, 1608, 0, 0,
	0, 0, 0, 130, 0, 130, 0, 0, 1844, 1481,
	0, 0, 1860, 937, 0, 0, 0, 318, 0, 4385,
	4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395,
	4396, 4397, 4398, 4399, 4400, 4401, 4402, 4403, 4404, 0,
	4408, 0, 0, 0, 0, 0, 4323, 0, 318, 0,
	2119, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 2091, 2092, 2093, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 937, 937, 2302,
	0, 0, 3819, 3820, 3821, 0, 0, 0, 0, 3818,
	3816, 3817, 3809, 3810, 3811, 3812, 3814, 3815, 0, 4885,
	0, 0, 0, 0, 0, 0, 0, 4886, 2306, 0,
	2065, 2066, 0, 0, 0, 3098, 3098, 0, 4891, 0,
	0, 0, 5205, 0, 2095, 2098, 2089, 0, 0, 0,
	0, 0, 3304, 0, 2096, 0, 0, 0, 0, 0,
	2097, 0, 0, 2068, 0, 5227, 0, 0, 0, 0,
	0, 0, 0, 0, 3563, 0, 2082, 2083, 0, 0,
	0, 4888, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2122, 0, 0, 0, 1892, 0, 0, 0,
	4892, 2067, 0, 0, 0, 0, 0, 0, 0, 3553,
	3551, 2088, 2087, 0, 2121, 0, 0, 3555, 3557, 3547,
	2302, 0, 2084, 0, 0, 0, 0, 0, 3098, 3098,
	3098, 3098, 3098, 3098, 3098, 3098, 3098, 3098, 3098, 3098,
	3098, 3098, 3098, 3098, 3098, 3098, 3098, 3098, 0, 3098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3573, 0, 0, 2306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2119, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 0, 2090, 2091, 2092, 2093, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 4887, 0, 0,
	0, 0, 1836, 2094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2095,
	2098, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 318, 2306, 0, 0, 0, 810, 0,
	0, 0, 0, 810, 4897, 4898, 810, 0, 0, 810,
	810, 2082, 2083, 0, 0, 810, 0, 0, 810, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 3549,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	3565, 0, 0, 0, 0, 2302, 2088, 0, 0, 318,
	0, 0, 1892, 0, 0, 0, 0, 2121, 0, 0,
	0, 0, 2797, 1860, 3564, 3554, 3552, 3556, 3558, 3548,
	3550, 3566, 3568, 0, 0, 0, 0, 827, 0, 0,
	0, 0, 0, 3560, 3562, 3570, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 318, 0, 0, 0, 318, 318, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	3574, 0, 0, 0, 1860, 0, 0, 0, 2119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 3990, 2306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2302, 0, 0, 0, 0, 0, 2094, 0,
	0, 0, 3997, 0, 3998, 0, 0, 1892, 0, 0,
	318, 0, 0, 0, 0, 0, 1520, 318, 0, 318,
	0, 0, 0, 0, 2089, 1520, 0, 0, 1520, 0,
	0, 0, 3410, 3410, 318, 0, 4022, 4025, 0, 0,
	0, 0, 0, 3410, 1608, 2273, 0, 0, 0, 0,
	0, 0, 0, 0, 3410, 2273, 3567, 3410, 2273, 0,
	0, 2273, 0, 0, 4022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 318, 4025, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2121, 0, 0, 0, 0, 0, 0, 4025,
	0, 318, 0, 0, 0, 0, 4095, 4025, 0, 0,
	0, 2302, 0, 0, 0, 2306, 5485, 0, 0, 0,
	4106, 0, 4106, 0, 0, 0, 0, 0, 1608, 1608,
	0, 3575, 1520, 0, 0, 2520, 2522, 0, 0, 2525,
	0, 3559, 3561, 0, 2609, 3569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3410, 0, 3410, 0,
	4142, 3410, 4025, 0, 0, 3410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4025,
	0, 0, 901, 0, 0, 0, 2619, 0, 0, 0,
	2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 1836,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	4194, 0, 0, 4199, 3410, 0, 0, 318, 0, 0,
	0, 0, 0, 1532, 0, 2615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 3635, 0, 0, 1520, 3864, 318,
	0, 0, 3410, 0, 810, 2302, 0, 0, 0, 0,
	0, 3410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 1608, 1608, 1608, 2612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3893, 0, 0, 2065, 2066, 0, 2099, 2100,
	2101, 2110, 2111, 2112, 2730, 0, 318, 0, 0, 0,
	3909, 0, 0, 0, 0, 0, 0, 0, 2103, 2096,
	0, 0, 0, 0, 0, 2097, 5486, 0, 2068, 0,
	0, 0, 0, 0, 2520, 2617, 0, 0, 0, 2116,
	0, 0, 0, 0, 3936, 0, 0, 0, 0, 1280,
	0, 0, 0, 1836, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 0, 0, 4362, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 2302, 0, 0, 0, 0, 2084, 0, 0,
	0, 0, 0, 0, 0, 5089, 0, 0, 0, 0,
	0, 2618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 4421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 318, 0,
	2090, 2091, 2092, 2093, 0, 0, 0, 0, 0, 0,
	2073, 0, 2102, 0, 0, 0, 4004, 0, 0, 1751,
	5149, 0, 810, 0, 0, 4446, 810, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 0, 0, 0, 0,
	2610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2620, 1836, 2107, 0, 0, 0, 2117, 0, 0,
	0, 0, 0, 0, 2095, 2098, 0, 0, 2616, 0,
	0, 0, 318, 0, 0, 0, 0, 3467, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 2113, 0, 2114,
	0, 0, 0, 0, 0, 0, 2082, 2083, 0, 2613,
	0, 0, 0, 0, 0, 0, 2611, 318, 0, 0,
	3320, 3320, 0, 0, 2621, 4025, 2105, 0, 0, 3286,
	0, 0, 0, 0, 3098, 0, 0, 0, 0, 0,
	0, 2088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 2066, 0, 0, 0,
	0, 2115, 0, 0, 0, 0, 0, 0, 0, 937,
	2614, 0, 0, 0, 5488, 0, 0, 0, 0, 2096,
	901, 1481, 2104, 0, 0, 2097, 0, 0, 2068, 0,
	0, 0, 0, 2119, 0, 0, 0, 0, 0, 3098,
	5292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3909, 0, 0, 4590, 0, 2122, 4592, 1836,
	0, 4595, 0, 0, 0, 937, 2067, 0, 0, 4106,
	0, 0, 0, 0, 0, 0, 0, 2087, 1481, 0,
	0, 1481, 0, 0, 0, 318, 0, 2084, 0, 0,
	0, 1504, 3272, 2094, 0, 0, 1504, 0, 1504, 0,
	5329, 0, 0, 0, 0, 937, 937, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 4025, 0, 318, 0, 5351, 0, 827, 827, 1532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4658, 0, 0, 0, 0, 4317, 0, 0, 0,
	0, 2108, 0, 0, 0, 0, 0, 318, 0, 4673,
	0, 0, 3635, 2273, 0, 0, 0, 0, 318, 0,
	2090, 2091, 2092, 2093, 0, 4694, 0, 0, 0, 318,
	2073, 0, 0, 318, 0, 318, 0, 2121, 0, 0,
	318, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 937, 0, 4341, 0, 3410,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1129, 3410, 0, 4357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2095, 2098, 0, 0, 0, 3098,
	0, 1608, 1608, 0, 0, 0, 0, 2102, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2082, 2083, 0, 2106,
	1860, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 1836, 3098,
	0, 2088, 3779, 0, 0, 0, 3780, 0, 0, 4779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3098, 0, 0, 0, 1844, 0,
	0, 0, 0, 0, 1608, 1608, 1608, 1608, 1608, 1608,
	1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608,
	1608, 1608, 1608, 1608, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4455, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	1892, 0, 318, 2119, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	0, 0, 0, 1532, 1532, 1532, 0, 2065, 2066, 0,
	0, 0, 0, 0, 0, 2102, 1532, 1532, 1532, 0,
	318, 1532, 0, 2094, 0, 0, 0, 0, 0, 0,
	0, 2096, 0, 0, 0, 0, 0, 2097, 0, 0,
	2068, 2102, 0, 0, 0, 0, 2102, 0, 0, 2089,
	0, 0, 2102, 0, 0, 3410, 3410, 0, 4022, 0,
	0, 4106, 3410, 0, 0, 0, 1280, 0, 0, 2122,
	4904, 0, 4904, 1892, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 3410, 0, 2273, 0, 0, 2087,
	4022, 0, 1892, 1892, 318, 4025, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 4025, 0,
	318, 4025, 0, 318, 4940, 0, 0, 2121, 0, 4106,
	0, 0, 4106, 0, 0, 0, 4106, 0, 0, 0,
	0, 0, 0, 0, 0, 3073, 3074, 3075, 3076, 3069,
	3070, 3071, 3072, 0, 0, 3410, 0, 3410, 318, 2102,
	1504, 0, 0, 0, 2102, 0, 0, 0, 3719, 0,
	3320, 0, 0, 0, 0, 0, 0, 0, 2102, 0,
	0, 0, 0, 2102, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 0,
	0, 0, 2073, 0, 0, 3410, 3410, 0, 0, 0,
	4904, 0, 3635, 0, 5013, 0, 0, 0, 0, 0,
	4022, 0, 0, 0, 2226, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 318, 3049, 3050,
	3051, 3052, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 2095, 2098, 0, 0,
	0, 0, 3061, 3062, 3063, 3064, 3057, 3058, 3059, 3060,
	3065, 3066, 3067, 3068, 0, 0, 0, 0, 0, 0,
	2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2082, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3045, 3046, 3047,
	3048, 3053, 3054, 3055, 3056, 1836, 4446, 0, 0, 1014,
	0, 0, 3102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	0, 0, 0, 2102, 0, 1026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 318, 0, 2119, 0, 1024, 0, 1836,
	0, 0, 0, 0, 0, 3410, 2273, 0, 2273, 0,
	0, 4694, 0, 0, 0, 0, 0, 1836, 0, 0,
	318, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	5165, 0, 5165, 0, 0, 0, 0, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 2094, 0, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4106, 1892, 0, 0, 0, 1892, 1020, 1520, 0, 0,
	4816, 2089, 0, 1035, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 4025, 0, 318, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 0, 0, 4846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4694, 0, 0, 0, 4904, 0,
	4904, 0, 1892, 0, 0, 0, 3410, 0, 0, 2121,
	0, 0, 0, 318, 1019, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 5261, 0, 0, 0,
	0, 876, 0, 0, 0, 0, 0, 0, 1892, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 1860, 1860,
	0, 0, 0, 1836, 0, 0, 1836, 0, 0, 1022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0,
	0, 0, 4106, 5320, 0, 0, 1034, 0, 0, 0,
	4694, 0, 0, 0, 0, 0, 0, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4904, 1860, 0, 0, 0, 2065, 2066, 0, 2099, 2100,
	2101, 2110, 2111, 2112, 0, 4904, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2096,
	0, 0, 0, 0, 0, 2097, 0, 0, 2068, 1836,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 2116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	1016, 827, 0, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 4904,
	0, 4904, 0, 2520, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 1021, 0, 0, 0, 2084, 4904, 0,
	318, 4904, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2273, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 1892, 0, 1892, 0, 0, 5081, 0, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1030, 1532, 1532, 0, 0, 0, 0, 0, 0,
	1018, 0, 0, 0, 0, 0, 0, 0, 0, 5446,
	0, 5081, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 2091, 2092, 2093, 0, 5165, 0, 0, 318, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 0, 3410, 1015, 0, 0, 0, 0, 0, 1028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2855, 0, 2107, 0, 0, 0, 2117, 0, 0,
	0, 0, 0, 1023, 2095, 2098, 318, 0, 0, 0,
	0, 937, 0, 0, 0, 0, 0, 0, 0, 877,
	0, 0, 0, 0, 0, 0, 4362, 0, 0, 0,
	0, 1017, 0, 0, 1836, 0, 2082, 2083, 0, 0,
	0, 0, 0, 0, 0, 2102, 0, 0, 0, 2102,
	0, 1836, 0, 1892, 0, 0, 2105, 0, 0, 1032,
	1033, 0, 1029, 2102, 0, 1608, 0, 0, 0, 0,
	2855, 2088, 0, 0, 2102, 2102, 2102, 2102, 2102, 2102,
	2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
	2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
	2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 2102,
	2102, 0, 0, 0, 0, 0, 2102, 0, 2102, 2102,
	2102, 2102, 0, 0, 0, 0, 0, 0, 0, 0,
	3102, 3102, 0, 4694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2102, 0, 0, 0, 0,
	0, 0, 0, 2119, 0, 0, 1541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3410, 0, 1265, 1265, 1265, 0, 0, 2065, 2066,
	0, 0, 0, 4904, 1836, 4904, 0, 2102, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 2094, 0, 0, 0, 0, 2097, 0,
	0, 2068, 0, 0, 0, 0, 0, 2102, 0, 0,
	2102, 0, 0, 2102, 0, 0, 2102, 0, 0, 2089,
	0, 0, 2102, 2102, 2102, 2102, 2102, 2102, 2102, 0,
	2122, 0, 1680, 0, 0, 1686, 0, 0, 0, 2067,
	0, 0, 0, 0, 3410, 1608, 0, 0, 0, 0,
	2087, 2108, 1836, 0, 0, 0, 0, 0, 0, 0,
	2084, 3320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3410,
	0, 0, 0, 0, 0, 0, 1850, 2121, 0, 0,
	0, 2102, 1868, 3320, 3828, 0, 3102, 3102, 3102, 3102,
	0, 0, 2102, 0, 2102, 1608, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3712,
	0, 1894, 0, 1899, 0, 1905, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 2002,
	0, 2007, 0, 0, 0, 0, 0, 2095, 2098, 0,
	0, 0, 0, 0, 0, 2021, 0, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2102, 2102, 2119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2143, 0, 0,
	0, 0, 0, 2156, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 3131,
	0, 2520, 0, 0, 0, 0, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 2103,
	2096, 0, 0, 0, 3129, 0, 2097, 0, 0, 2068,
	3133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3134, 0, 0, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 2220, 2220, 2220, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 3135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 1836, 0, 1836, 0, 0,
	2121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3136, 0, 0, 0, 0, 0, 0,
	3137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3138, 0, 0, 0, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 2102, 0, 2102, 0, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 0, 0, 2107, 0, 3139, 0, 2117, 0,
	0, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	1265, 0, 0, 0, 0, 1836, 0, 3140, 0, 0,
	0, 0, 937, 0, 0, 0, 0, 3141, 2113, 0,
	2114, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 3142, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 0, 0, 0,
	2102, 2102, 0, 3102, 3102, 0, 0, 2102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3828, 3828, 0,
	0, 2102, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 2102, 0, 0, 2496, 2520, 0, 0, 0, 0,
	0, 0, 2115, 0, 0, 2102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	0, 0, 0, 2104, 0, 1836, 0, 0, 0, 0,
	937, 0, 1315, 0, 2119, 3143, 0, 2531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3102, 3102, 3102, 3102,
	3102, 3102, 3102, 3102, 3102, 3102, 3102, 3102, 3102, 3102,
	3102, 3102, 3102, 3102, 3102, 3102, 0, 3102, 3828, 3828,
	3828, 3828, 0, 0, 0, 0, 317, 317, 317, 0,
	0, 0, 0, 1836, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3144, 3145, 0,
	0, 0, 0, 317, 0, 2102, 0, 0, 0, 0,
	2089, 0, 1048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3146, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 3151, 0, 0, 0,
	0, 0, 2108, 1048, 0, 0, 0, 0, 0, 0,
	0, 1353, 0, 0, 0, 0, 0, 3147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3148, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 0, 0, 1860, 0, 1836, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 2828, 0, 2832, 0,
	0, 2102, 2102, 0, 0, 2846, 0, 0, 1265, 0,
	0, 0, 0, 0, 2857, 2858, 2859, 2860, 2861, 2862,
	2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872,
	2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882,
	2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892,
	2893, 0, 2899, 0, 2901, 2902, 2903, 2904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	2928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2143, 0, 0, 0, 2980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3010, 3013, 3016, 3019, 0, 0, 3025, 3026,
	3027, 3028, 3029, 3030, 3031, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3094,
	0, 3105, 3107, 3112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 2102, 0, 0, 2102, 3828, 3828, 2102,
	0, 0, 0, 2102, 0, 0, 0, 0, 0, 0,
	2102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 937, 0, 2102, 2102, 2102, 2102,
	2102, 0, 0, 0, 0, 0, 0, 2102, 0, 2102,
	0, 0, 3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828,
	3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828,
	3828, 3828, 0, 0, 0, 3828, 0, 0, 2102, 2102,
	0, 0, 0, 0, 0, 2065, 2066, 0, 0, 0,
	0, 2102, 0, 1280, 0, 0, 0, 0, 0, 0,
	2102, 0, 0, 0, 0, 0, 0, 0, 0, 2096,
	0, 0, 0, 0, 0, 2097, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 2102, 0, 0, 0, 0, 0, 2084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3357, 0,
	0, 0, 1434, 3358, 0, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 2091, 2092, 2093, 0, 0, 0, 0, 0, 0,
	2073, 2102, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 313, 806, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 317, 317, 0, 0,
	317, 0, 0, 0, 2095, 2098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2082, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2088, 0, 2102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2102, 2102, 0, 0, 0, 2102,
	2102, 0, 0, 2102, 2102, 317, 0, 0, 2102, 0,
	0, 0, 2102, 0, 0, 0, 0, 2102, 0, 0,
	0, 3594, 0, 3596, 0, 0, 0, 0, 0, 0,
	0, 0, 3102, 88, 0, 0, 0, 0, 317, 0,
	317, 317, 317, 2119, 0, 317, 317, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1048, 1116, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 1445, 1119, 1118,
	0, 0, 0, 2094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 104, 0, 89, 0, 0, 0,
	317, 317, 0, 0, 0, 0, 0, 3102, 0, 2089,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	2123, 2124, 0, 0, 0, 0, 0, 0, 0, 317,
	317, 0, 0, 0, 0, 1265, 0, 1122, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 0, 128, 0, 0, 0, 1445, 104, 112, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2102, 0, 0, 0, 0, 0, 0, 2121, 0, 3713,
	3714, 0, 0, 0, 0, 3720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1122, 1445, 317, 0, 3734, 3735, 0, 0, 0, 0,
	2980, 2102, 2102, 57, 0, 128, 0, 0, 0, 0,
	0, 112, 125, 0, 0, 113, 0, 0, 0, 0,
	2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 2103, 2096, 0, 3744, 1445, 0, 0,
	2097, 0, 0, 2068, 0, 0, 0, 0, 0, 0,
	0, 0, 3758, 1445, 2116, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 113, 3770,
	0, 0, 2122, 2102, 2102, 2102, 0, 0, 0, 0,
	0, 2067, 0, 0, 2102, 2102, 3828, 3102, 0, 0,
	0, 0, 2087, 2102, 0, 0, 2102, 0, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3828, 3102, 3229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 0, 0, 117,
	0, 2102, 3102, 3112, 3112, 3112, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 2090, 2091, 2092, 2093, 0,
	0, 2102, 2220, 2102, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 0, 0, 0,
	0, 0, 2242, 0, 1441, 0, 0, 0, 317, 0,
	0, 3868, 0, 0, 0, 0, 0, 0, 216, 0,
	120, 0, 117, 124, 317, 2242, 317, 0, 2107, 0,
	0, 0, 2117, 0, 1048, 0, 0, 0, 0, 2095,
	2098, 0, 0, 1048, 0, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 2113, 1124, 2114, 0, 89, 0, 0, 1123,
	0, 2082, 2083, 0, 0, 0, 0, 0, 317, 3828,
	0, 216, 0, 120, 94, 0, 124, 317, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 281,
	0, 0, 0, 0, 0, 2102, 3828, 0, 279, 2102,
	0, 0, 0, 0, 0, 0, 1124, 104, 0, 0,
	0, 1445, 1123, 1445, 0, 0, 0, 179, 3828, 0,
	0, 0, 0, 0, 0, 0, 1265, 0, 1445, 0,
	0, 0, 0, 0, 222, 0, 2115, 0, 1265, 0,
	0, 0, 280, 0, 0, 0, 88, 0, 0, 0,
	1122, 2310, 281, 0, 0, 0, 0, 2104, 1445, 0,
	0, 273, 0, 57, 0, 128, 89, 0, 2119, 0,
	274, 112, 125, 0, 217, 0, 0, 0, 0, 221,
	179, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 222, 0, 0,
	220, 0, 0, 0, 0, 280, 0, 1048, 0, 317,
	0, 317, 0, 317, 0, 0, 317, 0, 317, 0,
	0, 0, 0, 0, 273, 0, 0, 104, 2094, 0,
	0, 0, 0, 274, 0, 0, 0, 217, 113, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	4055, 0, 0, 1117, 0, 1445, 317, 317, 317, 317,
	1122, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 0, 128, 2108, 0, 0, 0,
	0, 112, 125, 0, 0, 2102, 0, 0, 1445, 0,
	0, 1445, 1445, 1445, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 0, 0, 0, 88,
	0, 2102, 2121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	4124, 4125, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 1858, 0, 94, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 0, 117, 0, 2106, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 2079, 2080, 2086, 2109,
	2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 0, 317, 0, 0, 0, 1048, 0, 0,
	0, 4785, 0, 1122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 2000,
	2001, 216, 0, 120, 112, 125, 124, 0, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 1124, 317, 0, 0,
	0, 0, 1123, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	317, 113, 317, 0, 0, 0, 0, 0, 317, 2846,
	0, 0, 0, 0, 0, 0, 4315, 4316, 0, 0,
	4319, 0, 281, 0, 4322, 0, 0, 0, 0, 0,
	0, 0, 0, 4326, 1445, 1445, 0, 0, 0, 0,
	0, 0, 4333, 0, 0, 1445, 0, 3868, 0, 0,
	179, 216, 0, 120, 0, 0, 124, 317, 0, 0,
	0, 0, 4346, 0, 0, 0, 0, 222, 0, 0,
	1445, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 4369, 4370, 0, 4371, 4372, 4373, 279, 0,
	0, 0, 0, 0, 273, 0, 1124, 0, 0, 0,
	0, 1445, 1123, 274, 0, 0, 4380, 217, 0, 0,
	4382, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1996, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 4411, 4412, 0, 1445, 0, 1445, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4424, 0, 117, 0, 0, 1445, 1445,
	179, 0, 0, 0, 0, 0, 0, 0, 4433, 0,
	0, 0, 1445, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 2310, 2310, 1445,
	0, 0, 0, 274, 216, 0, 120, 217, 0, 124,
	0, 0, 221, 0, 0, 0, 0, 0, 2258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1441, 1994, 2268, 0, 1858, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 0, 1441, 1124,
	0, 0, 0, 0, 0, 1123, 0, 0, 4504, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 1048,
	0, 1048, 0, 1445, 317, 281, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4541, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	222, 1048, 0, 0, 0, 0, 0, 0, 280, 860,
	0, 317, 0, 0, 317, 0, 4572, 0, 0, 0,
	0, 1445, 0, 0, 317, 317, 0, 273, 1445, 317,
	844, 317, 0, 0, 0, 845, 274, 1445, 317, 317,
	217, 0, 0, 0, 0, 221, 0, 0, 0, 317,
	0, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 4604, 4605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 846,
	0, 0, 0, 0, 2461, 0, 0, 0, 0, 0,
	847, 0, 0, 0, 0, 0, 0, 0, 0, 2478,
	0, 2480, 317, 2482, 0, 0, 2484, 0, 2485, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 866, 0, 317, 0,
	860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2517, 2518, 0, 849,
	0, 844, 0, 0, 0, 0, 845, 0, 0, 0,
	0, 0, 0, 2220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 850, 842, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2220,
	0, 0, 317, 317, 317, 317, 0, 0, 4726, 851,
	846, 0, 317, 0, 843, 1445, 0, 0, 0, 0,
	0, 847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 876, 0, 317, 0, 1445, 1445, 0, 0, 0,
	0, 0, 0, 0, 848, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 865,
	0, 317, 4757, 4758, 0, 0, 0, 866, 4762, 4763,
	0, 0, 0, 4766, 4767, 0, 0, 0, 0, 0,
	0, 4771, 0, 0, 0, 0, 0, 0, 0, 0,
	849, 0, 4775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4780, 0,
	0, 0, 0, 0, 0, 850, 842, 0, 0, 0,
	0, 0, 0, 0, 317, 1445, 862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1048, 0, 0, 0, 2310,
	0, 0, 0, 0, 0, 0, 2739, 0, 0, 0,
	865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2760, 0, 853, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	2772, 0, 2772, 0, 0, 0, 2065, 2066, 2779, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 874, 0, 854,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 2103,
	2096, 0, 0, 0, 1445, 0, 2097, 862, 0, 2068,
	0, 0, 0, 0, 0, 0, 1445, 0, 1075, 0,
	2116, 0, 317, 1076, 0, 0, 1265, 2806, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 2122, 0,
	0, 0, 0, 855, 0, 0, 0, 2067, 871, 872,
	0, 869, 0, 317, 0, 0, 0, 0, 2087, 0,
	863, 317, 0, 856, 0, 0, 0, 1077, 2084, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 873, 0, 853, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 0, 0, 0,
	0, 1079, 4953, 0, 0, 0, 0, 0, 0, 0,
	0, 857, 0, 864, 0, 0, 0, 0, 874, 868,
	854, 0, 858, 1445, 1100, 0, 0, 0, 0, 0,
	0, 1080, 0, 0, 0, 1445, 0, 1445, 859, 0,
	0, 0, 1445, 867, 0, 0, 0, 1098, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 4994, 4995, 877,
	0, 2073, 0, 0, 0, 0, 875, 0, 0, 0,
	0, 861, 1073, 1070, 855, 0, 0, 0, 0, 871,
	872, 0, 869, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 0, 0, 856, 0, 0, 1081, 0, 0,
	0, 0, 0, 0, 2107, 0, 0, 0, 2117, 0,
	0, 0, 0, 0, 1102, 2095, 2098, 0, 0, 876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2113, 0,
	2114, 0, 857, 0, 864, 0, 0, 2082, 2083, 0,
	868, 0, 3197, 858, 5076, 5077, 5078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 859,
	0, 0, 0, 0, 867, 0, 0, 2846, 0, 0,
	5087, 5088, 2088, 0, 0, 0, 0, 0, 0, 0,
	877, 0, 0, 0, 0, 0, 0, 0, 5096, 5099,
	0, 0, 861, 0, 1101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1096, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2115, 0, 0, 0, 0, 0, 0, 0,
	0, 1441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1441, 2760,
	0, 0, 0, 1095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1082, 0, 0, 0, 5166, 0,
	0, 0, 0, 0, 0, 0, 0, 5174, 0, 0,
	0, 2242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5182, 317, 2094, 1265, 0, 1083, 0, 0,
	0, 0, 3313, 0, 1048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5194, 0, 0, 5196,
	2089, 0, 0, 0, 0, 3331, 0, 3334, 0, 0,
	0, 0, 0, 5206, 0, 0, 0, 0, 0, 0,
	1445, 1445, 0, 875, 0, 0, 0, 0, 0, 0,
	0, 0, 2108, 0, 0, 0, 1069, 317, 0, 1092,
	0, 317, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 1084, 0, 0, 0, 0, 0, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 3371, 0, 2121, 0,
	0, 0, 0, 0, 0, 1445, 0, 0, 0, 0,
	1090, 0, 3382, 1858, 3384, 1858, 0, 0, 0, 0,
	1445, 0, 3391, 1445, 0, 0, 0, 0, 0, 1085,
	0, 0, 0, 1086, 1105, 0, 1104, 1072, 0, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2310, 0, 0, 1088, 1445, 0, 0,
	0, 1097, 0, 0, 0, 317, 0, 1106, 0, 0,
	1103, 0, 317, 0, 317, 0, 0, 877, 0, 0,
	2106, 2310, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 0, 2976, 0, 0, 0, 2977, 0, 0,
	0, 0, 0, 5328, 0, 0, 0, 5332, 0, 0,
	0, 317, 317, 0, 1858, 317, 0, 0, 0, 0,
	0, 0, 2242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 1445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3613, 0,
	0, 0, 0, 0, 0, 0, 0, 2760, 0, 0,
	2310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2846, 0, 0, 0, 0, 0,
	0, 0, 0, 5099, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3709, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 1265, 0, 1441, 1445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2103, 2096, 0, 0, 0, 0,
	1330, 2097, 0, 0, 2068, 0, 0, 5528, 5528, 5528,
	0, 317, 0, 0, 0, 2116, 0, 0, 0, 1445,
	0, 1445, 0, 0, 0, 1445, 0, 0, 0, 0,
	0, 1445, 1445, 2122, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 5554, 0, 0,
	0, 0, 0, 2087, 319, 319, 319, 0, 0, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1445, 0, 1445, 0, 0,
	5528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 2091, 2092, 2093,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	5642, 2310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1441, 1441, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 2107,
	0, 0, 0, 2117, 0, 0, 0, 2310, 2310, 0,
	2095, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2113, 0, 2114, 0, 0, 0, 2310,
	2310, 0, 2082, 2083, 0, 0, 0, 1048, 0, 0,
	0, 0, 0, 0, 0, 0, 5528, 5706, 0, 0,
	0, 0, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2310, 0, 0, 0, 0, 2088, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3919, 0, 0, 0, 0, 0, 0,
	0, 1445, 1445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2119,
	0, 1858, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2310, 0, 2310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1445, 0, 0, 0, 1445, 1445, 1445, 2094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4001, 0, 0, 0, 0,
	0, 0, 4006, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2108, 317, 4018,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 2121, 0, 0, 0, 0, 0, 0,
	0, 4074, 4076, 317, 0, 2760, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 317, 0,
	317, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 1445, 0, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 2106, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 0, 0, 2079, 2080, 2086,
	2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4331, 0, 0, 2310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4222, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 1445, 1445,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1441,
	0, 0, 0, 0, 1445, 0, 0, 1441, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 2242, 0, 2310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4313, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 2242, 0, 2242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 0, 319, 0, 319, 319, 1445, 0, 319, 317,
	1445, 1445, 0, 1445, 0, 0, 0, 0, 2310, 0,
	0, 0, 0, 0, 1445, 317, 0, 0, 317, 0,
	0, 0, 0, 0, 1445, 1445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 2242, 1445, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 0, 317, 0, 0, 319, 1632, 319, 319,
	319, 0, 1040, 319, 319, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1445, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 1040, 0, 0, 0, 0, 0, 0,
	0, 0, 4508, 0, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 319,
	0, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 1632, 319, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 1632, 0, 0, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 317, 0,
	0, 1445, 1445, 1445, 1445, 1445, 1445, 1445, 0, 0,
	0, 0, 0, 0, 2065, 2066, 0, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 317, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 2103, 2096, 1445,
	0, 0, 0, 0, 2097, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2116, 0,
	2310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 1445, 2067, 1445, 0, 2760, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 1320, 0, 0, 2084, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2242, 1445, 2242, 0, 0, 2760, 0,
	2760, 0, 0, 0, 0, 4708, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 1445,
	0, 0, 1445, 1445, 0, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 0, 0, 2117, 0, 0, 0,
	0, 0, 1445, 2095, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 1445, 0, 1445, 0, 2113, 1632, 2114, 0,
	0, 0, 319, 319, 319, 2082, 2083, 0, 0, 0,
	0, 0, 319, 0, 0, 2242, 0, 0, 0, 0,
	0, 319, 0, 1445, 0, 2105, 1445, 1632, 0, 0,
	2242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 317, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 2310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 0, 0, 0, 2242, 0, 2242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 2242, 0, 317, 2242, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	1632, 1632, 1632, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 4924,
	0, 0, 0, 317, 0, 319, 0, 319, 2089, 319,
	2310, 319, 0, 0, 319, 2760, 319, 0, 0, 0,
	0, 0, 0, 1445, 0, 1445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2108, 0, 1445, 0, 0, 1445, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 317, 0, 0, 319, 319, 319, 319, 0, 0,
	319, 0, 183, 0, 0, 0, 2121, 0, 0, 0,
	0, 88, 0, 54, 53, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 0, 2760, 0, 0, 0, 0, 56, 0, 181,
	0, 0, 0, 5040, 0, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2106, 55,
	0, 0, 104, 0, 0, 0, 0, 0, 0, 0,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	58, 76, 0, 0, 0, 3782, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 65, 0, 0, 0, 0,
	83, 0, 0, 0, 0, 0, 0, 0, 57, 0,
	128, 0, 0, 0, 0, 0, 112, 125, 1630, 0,
	0, 319, 0, 1632, 1632, 319, 77, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 2242, 0,
	2242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 1632,
	0, 0, 60, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 319, 0, 0, 5130, 1858, 1754,
	1632, 0, 0, 0, 0, 319, 0, 1630, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5151, 0, 0, 319, 0,
	319, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 1632, 0, 1632,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 78, 1445,
	0, 1632, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 2760, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 2772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 61, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 0, 0, 0, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 1632, 0, 0, 66, 216, 0, 120, 0,
	0, 124, 0, 0, 0, 0, 0, 62, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 63,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 70, 0, 0, 0, 0, 0, 81, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	319, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 179, 0, 319, 0, 319,
	1755, 0, 319, 0, 0, 80, 0, 0, 1631, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 319, 0, 274, 319,
	0, 0, 217, 1631, 0, 5406, 0, 221, 0, 319,
	0, 0, 319, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 319, 319, 0, 0, 0, 319, 220, 319,
	0, 3, 0, 0, 0, 0, 319, 319, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 1631, 0, 0, 2283, 0, 0, 0, 0, 1631,
	0, 0, 0, 2283, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 5460, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 1632, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 319, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	2096, 5510, 0, 0, 0, 0, 2097, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 1632, 0, 0, 2067, 0, 0,
	319, 319, 319, 319, 0, 0, 0, 0, 2087, 1630,
	319, 0, 1630, 1630, 1630, 1630, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 2283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2107, 0, 0, 0, 2117, 0,
	0, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 2113, 0,
	2114, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	1631, 0, 0, 0, 0, 319, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 1632, 0, 0, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 1630, 1630, 0, 0, 0,
	0, 0, 2115, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 2104, 0, 0, 0, 0, 0, 319,
	0, 1630, 0, 0, 2119, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 1631, 1631, 1631, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 1630,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3781, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 2066, 1632, 2099, 2100, 2101, 2110, 2111,
	2112, 0, 1631, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 2103, 2096, 0, 0, 0,
	0, 319, 2097, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 319, 1631, 0, 0, 2116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 2122, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 2087, 0, 0, 0, 1631, 0,
	1631, 0, 1631, 0, 2084, 319, 0, 0, 0, 319,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 2090, 2091, 2092,
	2093, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 319, 0, 0, 1630, 1630, 1632, 0,
	319, 1632, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112,
	2107, 0, 0, 0, 2117, 0, 0, 0, 0, 0,
	0, 2095, 2098, 0, 2103, 2096, 0, 0, 0, 0,
	0, 2097, 0, 0, 2068, 1755, 0, 0, 0, 319,
	319, 0, 0, 319, 2113, 2116, 2114, 0, 0, 0,
	319, 0, 0, 2082, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 2122, 319, 0, 1630, 0, 0, 0,
	0, 0, 2067, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 2115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2119, 0, 0, 0, 0, 0, 2090, 2091, 2092, 2093,
	0, 0, 0, 0, 319, 0, 2073, 0, 1632, 0,
	1632, 0, 0, 0, 1632, 1754, 0, 0, 0, 319,
	1632, 1632, 0, 0, 0, 1632, 0, 1630, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 2107,
	2094, 0, 319, 2117, 0, 0, 0, 0, 0, 0,
	2095, 2098, 0, 2103, 2096, 0, 0, 0, 0, 0,
	2097, 0, 0, 2068, 0, 0, 2089, 0, 0, 0,
	0, 0, 1632, 2113, 2116, 2114, 0, 0, 0, 0,
	0, 0, 2082, 2083, 1632, 0, 1632, 0, 0, 0,
	0, 0, 2122, 0, 0, 0, 0, 0, 2108, 0,
	0, 2067, 2105, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 2088, 0, 319,
	0, 0, 2084, 0, 1630, 0, 0, 1631, 1631, 0,
	0, 0, 0, 0, 2121, 0, 1630, 0, 1630, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 2115, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2119,
	0, 0, 0, 0, 0, 2090, 2091, 2092, 2093, 0,
	0, 0, 0, 0, 0, 2073, 2106, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 2080,
	2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3778, 0, 0, 0, 0, 2107, 2094,
	0, 0, 2117, 0, 0, 0, 0, 0, 0, 2095,
	2098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 2113, 0, 2114, 0, 0, 0, 0, 0,
	0, 2082, 2083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2108, 0, 1632,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 2121, 0, 319, 0, 0, 1631, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2115, 0, 0, 0,
	319, 1632, 0, 0, 0, 1632, 1632, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 2080, 2086,
	2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 0, 0, 1631, 0, 0, 5447, 0,
	0, 0, 1754, 0, 0, 0, 0, 1631, 2094, 1631,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2108, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 1632, 0, 0, 0, 0, 0, 0,
	1632, 0, 2121, 0, 0, 0, 0, 0, 1754, 0,
	1632, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 319, 0, 319, 0,
	0, 0, 0, 319, 2106, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 2079, 2080, 2086, 2109,
	2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 1632, 0, 0, 0, 0, 1632, 1632, 1632,
	0, 3777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 1754, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	1632, 0, 1632, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 1632, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1630, 1632, 0, 0, 1754, 0, 0, 0,
	0, 1040, 1630, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 319, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 1630, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 1755, 0, 0, 1632, 1632, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 319, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 1632, 1632, 1632, 1632, 1632, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 1631, 0, 319, 319, 1755, 0, 0,
	0, 0, 0, 1631, 1631, 0, 0, 2283, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 1630, 1630, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 1632, 0,
	0, 1632, 1632, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 1632, 2065, 2066, 1632, 2099, 2100, 2101, 2110,
	2111, 2112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2103, 2096, 0, 0,
	0, 0, 0, 2097, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 1630, 1630, 0, 2116, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 2122, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 319, 0, 0, 0, 1630,
	1630, 1630, 0, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 1631, 1631,
	1755, 0, 0, 319, 0, 0, 0, 0, 1632, 0,
	0, 2107, 0, 0, 0, 2117, 0, 0, 1632, 0,
	0, 0, 2095, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2113, 0, 2114, 0, 0,
	0, 0, 0, 0, 2082, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 1754, 1754, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 1630, 0, 0, 2115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	2104, 0, 0, 0, 0, 1631, 1631, 0, 0, 0,
	0, 2119, 0, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 2089, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112,
	0, 0, 0, 1754, 0, 1631, 0, 0, 0, 2108,
	1631, 1631, 1631, 0, 2103, 2096, 0, 0, 0, 0,
	0, 2097, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2116, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 2121, 0, 0, 1755, 1630,
	1630, 0, 0, 2122, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2106, 0, 0,
	0, 0, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 2079,
	2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3776, 0, 2090, 2091, 2092, 2093,
	1754, 0, 1755, 1755, 0, 1755, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 1630, 1755, 2107,
	0, 0, 0, 2117, 0, 0, 0, 0, 0, 0,
	2095, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2113, 0, 2114, 1755, 0, 0, 0,
	0, 0, 2082, 2083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 2065, 2066, 0, 2099, 2100,
	2101, 2110, 2111, 2112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2103, 2096,
	0, 0, 0, 0, 1755, 2097, 0, 2115, 2068, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 2116,
	1630, 0, 0, 1630, 1630, 0, 0, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 2119,
	0, 0, 0, 1630, 0, 0, 2067, 0, 0, 0,
	1631, 1631, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 1630, 0, 2094,
	0, 0, 0, 1755, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 1631, 1631, 1631, 1631, 1631, 1631, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 2091, 2092, 2093, 0, 0, 0, 2108, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2107, 0, 0, 0, 2117, 0, 0,
	0, 0, 0, 0, 2095, 2098, 1755, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2113, 0, 2114,
	0, 0, 0, 0, 0, 0, 2082, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 1755, 0, 0, 0,
	0, 2088, 0, 0, 0, 0, 0, 2079, 2080, 2086,
	2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2977, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 2115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2104, 0, 0, 1755, 0, 0, 0, 0,
	0, 1631, 0, 2119, 1631, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 2094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0,
	0, 0, 5443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 1757, 337, 338, 1758, 1759, 1760,
	0, 1761, 750, 1762, 1763, 1764, 0, 339, 1765, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 1766, 755, 352,
	353, 354, 355, 356, 357, 358, 1767, 1768, 1631, 359,
	756, 757, 758, 1769, 360, 361, 759, 1770, 1633, 1771,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 1772,
	371, 372, 373, 370, 374, 375, 1773, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 1774, 384, 385, 386,
	1385, 387, 388, 389, 1775, 1776, 1778, 1777, 1779, 1780,
	1781, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 1782, 400, 402, 396, 398, 1783, 401, 399, 403,
	404, 1784, 405, 406, 407, 1785, 1786, 408, 409, 410,
	1787, 411, 412, 413, 1788, 414, 415, 416, 1789, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 1790, 324,
	1791, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	1631, 0, 436, 1792, 437, 438, 439, 1793, 440, 441,
	1794, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 1795, 454, 768, 1796,
	769, 455, 1797, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 1798, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 1799, 326, 325, 327, 1387, 773, 475, 559, 476,
	774, 775, 1800, 776, 1801, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 1802, 491, 493, 492,
	1803, 495, 778, 494, 1392, 496, 497, 1393, 1804, 498,
	499, 500, 501, 502, 503, 506, 1805, 1806, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1807,
	539, 328, 1396, 553, 554, 555, 556, 1808, 779, 557,
	780, 560, 561, 1809, 0, 562, 0, 563, 1810, 1811,
	565, 566, 567, 1812, 1813, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 1814, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 1815, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	1816, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 1817, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 1818, 659, 660,
	658, 661, 662, 663, 1819, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 1820, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 1821, 696, 697, 0, 691,
	682, 1822, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 1823, 706, 793, 794, 795, 796, 1824, 718, 1825,
	707, 709, 710, 711, 712, 797, 713, 798, 1826, 714,
	715, 716, 717, 708, 719, 720, 1827, 1828, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1829, 730, 1830,
	0, 731, 732, 733, 799, 800, 801, 1831, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1832, 1833, 1834, 1835, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 0, 0,
	3172, 0, 0, 0, 0, 0, 0, 0, 0, 3173,
	329, 330, 332, 331, 333, 334, 335, 336, 1757, 337,
	338, 1758, 1759, 1760, 0, 1761, 750, 1762, 1763, 1764,
	0, 339, 1765, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 1766, 755, 352, 353, 354, 355, 356, 357, 358,
	1767, 1768, 0, 359, 756, 757, 758, 1769, 360, 361,
	759, 1770, 1633, 1771, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 1772, 371, 372, 373, 370, 374, 375,
	1773, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	1774, 384, 385, 386, 1385, 387, 388, 389, 1775, 1776,
	1778, 1777, 1779, 1780, 1781, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 1782, 400, 402, 396, 398,
	1783, 401, 399, 403, 404, 1784, 405, 406, 407, 1785,
	1786, 408, 409, 410, 1787, 411, 412, 413, 1788, 414,
	415, 416, 1789, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 1790, 324, 1791, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 1792, 437, 438,
	439, 1793, 440, 441, 1794, 1386, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	1795, 454, 768, 1796, 769, 455, 1797, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 1388, 463,
	464, 465, 1798, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 1799, 326, 325, 327, 1387,
	773, 475, 559, 476, 774, 775, 1800, 776, 1801, 477,
	478, 480, 1389, 777, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	1802, 491, 493, 492, 1803, 495, 778, 494, 1392, 496,
	497, 1393, 1804, 498, 499, 500, 501, 502, 503, 506,
	1805, 1806, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1807, 539, 328, 1396, 553, 554, 555,
	556, 1808, 779, 557, 780, 560, 561, 1809, 0, 562,
	0, 563, 1810, 1811, 565, 566, 567, 1812, 1813, 568,
	569, 781, 1397, 570, 1398, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 1814,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 1815, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 1816, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	1817, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 1818, 659, 660, 658, 661, 662, 663, 1819, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 1820, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 1821,
	696, 697, 0, 691, 682, 1822, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 1823, 706, 793, 794, 795,
	796, 1824, 718, 1825, 707, 709, 710, 711, 712, 797,
	713, 798, 1826, 714, 715, 716, 717, 708, 719, 720,
	1827, 1828, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1829, 730, 1830, 0, 731, 732, 733, 799, 800,
	801, 1831, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1832, 1833, 1834, 1835, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 4340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4342, 329, 330, 332, 331, 333, 334, 335, 336, 1757,
	337, 338, 1758, 1759, 1760, 0, 1761, 750, 1762, 1763,
	1764, 0, 339, 1765, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 1766, 755, 352, 353, 354, 355, 356, 357,
	358, 1767, 1768, 0, 359, 756, 757, 758, 1769, 360,
	361, 759, 1770, 1633, 1771, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 1772, 371, 372, 373, 370, 374,
	375, 1773, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 1774, 384, 385, 386, 1385, 387, 388, 389, 1775,
	1776, 1778, 1777, 1779, 1780, 1781, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 1782, 400, 402, 396,
	398, 1783, 401, 399, 403, 404, 1784, 405, 406, 407,
	1785, 1786, 408, 409, 410, 1787, 411, 412, 413, 1788,
	414, 415, 416, 1789, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 1790, 324, 1791, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 1792, 437,
	438, 439, 1793, 440, 441, 1794, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 1795, 454, 768, 1796, 769, 455, 1797, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 1388,
	463, 464, 465, 1798, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 1799, 326, 325, 327,
	1387, 773, 475, 559, 476, 774, 775, 1800, 776, 1801,
	477, 478, 480, 1389, 777, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 1802, 491, 493, 492, 1803, 495, 778, 494, 1392,
	496, 497, 1393, 1804, 498, 499, 500, 501, 502, 503,
	506, 1805, 1806, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1807, 539, 328, 1396, 553, 554,
	555, 556, 1808, 779, 557, 780, 560, 561, 1809, 0,
	562, 0, 563, 1810, 1811, 565, 566, 567, 1812, 1813,
	568, 569, 781, 1397, 570, 1398, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	1814, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 1815, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 1816, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 1817, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 1818, 659, 660, 658, 661, 662, 663, 1819,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 1820, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	1821, 696, 697, 0, 691, 682, 1822, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 1823, 706, 793, 794,
	795, 796, 1824, 718, 1825, 707, 709, 710, 711, 712,
	797, 713, 798, 1826, 714, 715, 716, 717, 708, 719,
	720, 1827, 1828, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1829, 730, 1830, 0, 731, 732, 733, 799,
	800, 801, 1831, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1832, 1833, 1834, 1835, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4815, 329, 330, 332, 331,
	333, 334, 335, 336, 1757, 337, 338, 1758, 1759, 1760,
	0, 1761, 750, 1762, 1763, 1764, 0, 339, 1765, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 1766, 755, 352,
	353, 354, 355, 356, 357, 358, 1767, 1768, 0, 359,
	756, 757, 758, 1769, 360, 361, 759, 1770, 1633, 1771,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 1772,
	371, 372, 373, 370, 374, 375, 1773, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 1774, 384, 385, 386,
	1385, 387, 388, 389, 1775, 1776, 1778, 1777, 1779, 1780,
	1781, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 1782, 400, 402, 396, 398, 1783, 401, 399, 403,
	404, 1784, 405, 406, 407, 1785, 1786, 408, 409, 410,
	1787, 411, 412, 413, 1788, 414, 415, 416, 1789, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 1790, 324,
	1791, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 1792, 437, 438, 439, 1793, 440, 441,
	1794, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 1795, 454, 768, 1796,
	769, 455, 1797, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 1798, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 1799, 326, 325, 327, 1387, 773, 475, 559, 476,
	774, 775, 1800, 776, 1801, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 1802, 491, 493, 492,
	1803, 495, 778, 494, 1392, 496, 497, 1393, 1804, 498,
	499, 500, 501, 502, 503, 506, 1805, 1806, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1807,
	539, 328, 1396, 553, 554, 555, 556, 1808, 779, 557,
	780, 560, 561, 1809, 0, 562, 0, 563, 1810, 1811,
	565, 566, 567, 1812, 1813, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 1814, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 1815, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	1816, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 1817, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 1818, 659, 660,
	658, 661, 662, 663, 1819, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 1820, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 1821, 696, 697, 0, 691,
	682, 1822, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 1823, 706, 793, 794, 795, 796, 1824, 718, 1825,
	707, 709, 710, 711, 712, 797, 713, 798, 1826, 714,
	715, 716, 717, 708, 719, 720, 1827, 1828, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1829, 730, 1830,
	0, 731, 732, 733, 799, 800, 801, 1831, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1832, 1833, 1834, 1835, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4813, 329, 330, 332, 331, 333, 334, 335, 336, 1757,
	337, 338, 1758, 1759, 1760, 0, 1761, 750, 1762, 1763,
	1764, 0, 339, 1765, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 1766, 755, 352, 353, 354, 355, 356, 357,
	358, 1767, 1768, 0, 359, 756, 757, 758, 1769, 360,
	361, 759, 1770, 1633, 1771, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 1772, 371, 372, 373, 370, 374,
	375, 1773, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 1774, 384, 385, 386, 1385, 387, 388, 389, 1775,
	1776, 1778, 1777, 1779, 1780, 1781, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 1782, 400, 402, 396,
	398, 1783, 401, 399, 403, 404, 1784, 405, 406, 407,
	1785, 1786, 408, 409, 410, 1787, 411, 412, 413, 1788,
	414, 415, 416, 1789, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 1790, 324, 1791, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 1792, 437,
	438, 439, 1793, 440, 441, 1794, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 1795, 454, 768, 1796, 769, 455, 1797, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 1388,
	463, 464, 465, 1798, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 1799, 326, 325, 327,
	1387, 773, 475, 559, 476, 774, 775, 1800, 776, 1801,
	477, 478, 480, 1389, 777, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 1802, 491, 493, 492, 1803, 495, 778, 494, 1392,
	496, 497, 1393, 1804, 498, 499, 500, 501, 502, 503,
	506, 1805, 1806, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1807, 539, 328, 1396, 553, 554,
	555, 556, 1808, 779, 557, 780, 560, 561, 1809, 0,
	562, 0, 563, 1810, 1811, 565, 566, 567, 1812, 1813,
	568, 569, 781, 1397, 570, 1398, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	1814, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 1815, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 1816, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 1817, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 1818, 659, 660, 658, 661, 662, 663, 1819,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 1820, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	1821, 696, 697, 0, 691, 682, 1822, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 1823, 706, 793, 794,
	795, 796, 1824, 718, 1825, 707, 709, 710, 711, 712,
	797, 713, 798, 1826, 714, 715, 716, 717, 708, 719,
	720, 1827, 1828, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1829, 730, 1830, 0, 731, 732, 733, 799,
	800, 801, 1831, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1832, 1833, 1834, 1835, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5082,
	329, 330, 332, 331, 333, 334, 335, 336, 1757, 337,
	338, 1758, 1759, 1760, 0, 1761, 750, 1762, 1763, 1764,
	0, 339, 1765, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 1766, 755, 352, 353, 354, 355, 356, 357, 358,
	1767, 1768, 0, 359, 756, 757, 758, 1769, 360, 361,
	759, 1770, 1633, 1771, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 1772, 371, 372, 373, 370, 374, 375,
	1773, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	1774, 384, 385, 386, 1385, 387, 388, 389, 1775, 1776,
	1778, 1777, 1779, 1780, 1781, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 1782, 400, 402, 396, 398,
	1783, 401, 399, 403, 404, 1784, 405, 406, 407, 1785,
	1786, 408, 409, 410, 1787, 411, 412, 413, 1788, 414,
	415, 416, 1789, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 1790, 324, 1791, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 1792, 437, 438,
	439, 1793, 440, 441, 1794, 1386, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	1795, 454, 768, 1796, 769, 455, 1797, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 1388, 463,
	464, 465, 1798, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 1799, 326, 325, 327, 1387,
	773, 475, 559, 476, 774, 775, 1800, 776, 1801, 477,
	478, 480, 1389, 777, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	1802, 491, 493, 492, 1803, 495, 778, 494, 1392, 496,
	497, 1393, 1804, 498, 499, 500, 501, 502, 503, 506,
	1805, 1806, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1807, 539, 328, 1396, 553, 554, 555,
	556, 1808, 779, 557, 780, 560, 561, 1809, 0, 562,
	0, 563, 1810, 1811, 565, 566, 567, 1812, 1813, 568,
	569, 781, 1397, 570, 1398, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 1814,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 1815, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 1816, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	1817, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 1818, 659, 660, 658, 661, 662, 663, 1819, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 1820, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 1821,
	696, 697, 0, 691, 682, 1822, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 1823, 706, 793, 794, 795,
	796, 1824, 718, 1825, 707, 709, 710, 711, 712, 797,
	713, 798, 1826, 714, 715, 716, 717, 708, 719, 720,
	1827, 1828, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1829, 730, 1830, 0, 731, 732, 733, 799, 800,
	801, 1831, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1832, 1833, 1834, 1835, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4933, 329,
	330, 332, 331, 333, 334, 335, 336, 1757, 337, 338,
	1758, 1759, 1760, 0, 1761, 750, 1762, 1763, 1764, 0,
	339, 1765, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	1766, 755, 352, 353, 354, 355, 356, 357, 358, 1767,
	1768, 0, 359, 756, 757, 758, 1769, 360, 361, 759,
	1770, 1633, 1771, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 1772, 371, 372, 373, 370, 374, 375, 1773,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 1774,
	384, 385, 386, 1385, 387, 388, 389, 1775, 1776, 1778,
	1777, 1779, 1780, 1781, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 1782, 400, 402, 396, 398, 1783,
	401, 399, 403, 404, 1784, 405, 406, 407, 1785, 1786,
	408, 409, 410, 1787, 411, 412, 413, 1788, 414, 415,
	416, 1789, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 1790, 324, 1791, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 1792, 437, 438, 439,
	1793, 440, 441, 1794, 1386, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 1795,
	454, 768, 1796, 769, 455, 1797, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 1388, 463, 464,
	465, 1798, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 1799, 326, 325, 327, 1387, 773,
	475, 559, 476, 774, 775, 1800, 776, 1801, 477, 478,
	480, 1389, 777, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 1802,
	491, 493, 492, 1803, 495, 778, 494, 1392, 496, 497,
	1393, 1804, 498, 499, 500, 501, 502, 503, 506, 1805,
	1806, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1807, 539, 328, 1396, 553, 554, 555, 556,
	1808, 779, 557, 780, 560, 561, 1809, 0, 562, 0,
	563, 1810, 1811, 565, 566, 567, 1812, 1813, 568, 569,
	781, 1397, 570, 1398, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 1814, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 1815, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 1816, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 1817,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	1818, 659, 660, 658, 661, 662, 663, 1819, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 1820, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 1821, 696,
	697, 0, 691, 682, 1822, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 1823, 706, 793, 794, 795, 796,
	1824, 718, 1825, 707, 709, 710, 711, 712, 797, 713,
	798, 1826, 714, 715, 716, 717, 708, 719, 720, 1827,
	1828, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1829, 730, 1830, 0, 731, 732, 733, 799, 800, 801,
	1831, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1832, 1833, 1834, 1835, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4514, 329, 330,
	332, 331, 333, 334, 335, 336, 1757, 337, 338, 1758,
	1759, 1760, 0, 1761, 750, 1762, 1763, 1764, 0, 339,
	1765, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 1766,
	755, 352, 353, 354, 355, 356, 357, 358, 1767, 1768,
	0, 359, 756, 757, 758, 1769, 360, 361, 759, 1770,
	1633, 1771, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 1772, 371, 372, 373, 370, 374, 375, 1773, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 1774, 384,
	385, 386, 1385, 387, 388, 389, 1775, 1776, 1778, 1777,
	1779, 1780, 1781, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 1782, 400, 402, 396, 398, 1783, 401,
	399, 403, 404, 1784, 405, 406, 407, 1785, 1786, 408,
	409, 410, 1787, 411, 412, 413, 1788, 414, 415, 416,
	1789, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	1790, 324, 1791, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 1792, 437, 438, 439, 1793,
	440, 441, 1794, 1386, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 1795, 454,
	768, 1796, 769, 455, 1797, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 1388, 463, 464, 465,
	1798, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 1799, 326, 325, 327, 1387, 773, 475,
	559, 476, 774, 775, 1800, 776, 1801, 477, 478, 480,
	1389, 777, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 1802, 491,
	493, 492, 1803, 495, 778, 494, 1392, 496, 497, 1393,
	1804, 498, 499, 500, 501, 502, 503, 506, 1805, 1806,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1807, 539, 328, 1396, 553, 554, 555, 556, 1808,
	779, 557, 780, 560, 561, 1809, 0, 562, 0, 563,
	1810, 1811, 565, 566, 567, 1812, 1813, 568, 569, 781,
	1397, 570, 1398, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 1814, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 1815, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 1816, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 1817, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 1818,
	659, 660, 658, 661, 662, 663, 1819, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 1820, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 1821, 696, 697,
	0, 691, 682, 1822, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 1823, 706, 793, 794, 795, 796, 1824,
	718, 1825, 707, 709, 710, 711, 712, 797, 713, 798,
	1826, 714, 715, 716, 717, 708, 719, 720, 1827, 1828,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1829,
	730, 1830, 0, 731, 732, 733, 799, 800, 801, 1831,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1832, 1833, 1834, 1835, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4358, 329, 330, 332,
	331, 333, 334, 335, 336, 1757, 337, 338, 1758, 1759,
	1760, 0, 1761, 750, 1762, 1763, 1764, 0, 339, 1765,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 1766, 755,
	352, 353, 354, 355, 356, 357, 358, 1767, 1768, 0,
	359, 756, 757, 758, 1769, 360, 361, 759, 1770, 1633,
	1771, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	1772, 371, 372, 373, 370, 374, 375, 1773, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 1774, 384, 385,
	386, 1385, 387, 388, 389, 1775, 1776, 1778, 1777, 1779,
	1780, 1781, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 1782, 400, 402, 396, 398, 1783, 401, 399,
	403, 404, 1784, 405, 406, 407, 1785, 1786, 408, 409,
	410, 1787, 411, 412, 413, 1788, 414, 415, 416, 1789,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 1790,
	324, 1791, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 1792, 437, 438, 439, 1793, 440,
	441, 1794, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 1795, 454, 768,
	1796, 769, 455, 1797, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 1798,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 1799, 326, 325, 327, 1387, 773, 475, 559,
	476, 774, 775, 1800, 776, 1801, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 1802, 491, 493,
	492, 1803, 495, 778, 494, 1392, 496, 497, 1393, 1804,
	498, 499, 500, 501, 502, 503, 506, 1805, 1806, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1807, 539, 328, 1396, 553, 554, 555, 556, 1808, 779,
	557, 780, 560, 561, 1809, 0, 562, 0, 563, 1810,
	1811, 565, 566, 567, 1812, 1813, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 1814, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 1815, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 1816, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 1817, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 1818, 659,
	660, 658, 661, 662, 663, 1819, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 1820, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 1821, 696, 697, 0,
	691, 682, 1822, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 1823, 706, 793, 794, 795, 796, 1824, 718,
	1825, 707, 709, 710, 711, 712, 797, 713, 798, 1826,
	714, 715, 716, 717, 708, 719, 720, 1827, 1828, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1829, 730,
	1830, 0, 731, 732, 733, 799, 800, 801, 1831, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1832, 1833, 1834, 1835, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4189, 329, 330, 332, 331,
	333, 334, 335, 336, 1757, 337, 338, 1758, 1759, 1760,
	0, 1761, 750, 1762, 1763, 1764, 0, 339, 1765, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 1766, 755, 352,
	353, 354, 355, 356, 357, 358, 1767, 1768, 0, 359,
	756, 757, 758, 1769, 360, 361, 759, 1770, 1633, 1771,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 1772,
	371, 372, 373, 370, 374, 375, 1773, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 1774, 384, 385, 386,
	1385, 387, 388, 389, 1775, 1776, 1778, 1777, 1779, 1780,
	1781, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 1782, 400, 402, 396, 398, 1783, 401, 399, 403,
	404, 1784, 405, 406, 407, 1785, 1786, 408, 409, 410,
	1787, 411, 412, 413, 1788, 414, 415, 416, 1789, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 1790, 324,
	1791, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 1792, 437, 438, 439, 1793, 440, 441,
	1794, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 1795, 454, 768, 1796,
	769, 455, 1797, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 1798, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 1799, 326, 325, 327, 1387, 773, 475, 559, 476,
	774, 775, 1800, 776, 1801, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 1802, 491, 493, 492,
	1803, 495, 778, 494, 1392, 496, 497, 1393, 1804, 498,
	499, 500, 501, 502, 503, 506, 1805, 1806, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1807,
	539, 328, 1396, 553, 554, 555, 556, 1808, 779, 557,
	780, 560, 561, 1809, 0, 562, 0, 563, 1810, 1811,
	565, 566, 567, 1812, 1813, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 1814, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 1815, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	1816, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 1817, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 1818, 659, 660,
	658, 661, 662, 663, 1819, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 1820, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 1821, 696, 697, 0, 691,
	682, 1822, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 1823, 706, 793, 794, 795, 796, 1824, 718, 1825,
	707, 709, 710, 711, 712, 797, 713, 798, 1826, 714,
	715, 716, 717, 708, 719, 720, 1827, 1828, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1829, 730, 1830,
	0, 731, 732, 733, 799, 800, 801, 1831, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1832, 1833, 1834, 1835, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3000, 329, 330, 332, 331, 333,
	334, 335, 336, 1757, 337, 338, 1758, 1759, 1760, 0,
	1761, 750, 1762, 1763, 1764, 0, 339, 1765, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 1766, 755, 352, 353,
	354, 355, 356, 357, 358, 1767, 1768, 0, 359, 756,
	757, 758, 1769, 360, 361, 759, 1770, 1633, 1771, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 1772, 371,
	372, 373, 370, 374, 375, 1773, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 1774, 384, 385, 386, 1385,
	387, 388, 389, 1775, 1776, 1778, 1777, 1779, 1780, 1781,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	1782, 400, 402, 396, 398, 1783, 401, 399, 403, 404,
	1784, 405, 406, 407, 1785, 1786, 408, 409, 410, 1787,
	411, 412, 413, 1788, 414, 415, 416, 1789, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 1790, 324, 1791,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 1792, 437, 438, 439, 1793, 440, 441, 1794,
	1386, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 1795, 454, 768, 1796, 769,
	455, 1797, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 1388, 463, 464, 465, 1798, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	1799, 326, 325, 327, 1387, 773, 475, 559, 476, 774,
	775, 1800, 776, 1801, 477, 478, 480, 1389, 777, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 1802, 491, 493, 492, 1803,
	495, 778, 494, 1392, 496, 497, 1393, 1804, 498, 499,
	500, 501, 502, 503, 506, 1805, 1806, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1807, 539,
	328, 1396, 553, 554, 555, 556, 1808, 779, 557, 780,
	560, 561, 1809, 0, 562, 0, 563, 1810, 1811, 565,
	566, 567, 1812, 1813, 568, 569, 781, 1397, 570, 1398,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 1814, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	1815, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 1816,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 1817, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 1818, 659, 660, 658,
	661, 662, 663, 1819, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 1820, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 1821, 696, 697, 0, 691, 682,
	1822, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	1823, 706, 793, 794, 795, 796, 1824, 718, 1825, 707,
	709, 710, 711, 712, 797, 713, 798, 1826, 714, 715,
	716, 717, 708, 719, 720, 1827, 1828, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1829, 730, 1830, 0,
	731, 732, 733, 799, 800, 801, 1831, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1832,
	1833, 1834, 1835, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 1749, 0, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2715, 329, 330, 332, 331, 333, 334,
	335, 336, 1757, 337, 338, 1758, 1759, 1760, 0, 1761,
	750, 1762, 1763, 1764, 0, 339, 1765, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 1766, 755, 352, 353, 354,
	355, 356, 357, 358, 1767, 1768, 0, 359, 756, 757,
	758, 1769, 360, 361, 759, 1770, 1633, 1771, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 1772, 371, 372,
	373, 370, 374, 375, 1773, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 1774, 384, 385, 386, 1385, 387,
	388, 389, 1775, 1776, 1778, 1777, 1779, 1780, 1781, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 1782,
	400, 402, 396, 398, 1783, 401, 399, 403, 404, 1784,
	405, 406, 407, 1785, 1786, 408, 409, 410, 1787, 411,
	412, 413, 1788, 414, 415, 416, 1789, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 1790, 324, 1791, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 1792, 437, 438, 439, 1793, 440, 441, 1794, 1386,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 1795, 454, 768, 1796, 769, 455,
	1797, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 1388, 463, 464, 465, 1798, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 1799,
	326, 325, 327, 1387, 773, 475, 559, 476, 774, 775,
	1800, 776, 1801, 477, 478, 480, 1389, 777, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 1802, 491, 493, 492, 1803, 495,
	778, 494, 1392, 496, 497, 1393, 1804, 498, 499, 500,
	501, 502, 503, 506, 1805, 1806, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1807, 539, 328,
	1396, 553, 554, 555, 556, 1808, 779, 557, 780, 560,
	561, 1809, 0, 562, 0, 563, 1810, 1811, 565, 566,
	567, 1812, 1813, 568, 569, 781, 1397, 570, 1398, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 1814, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 1815,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 1816, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 1817, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 1818, 659, 660, 658, 661,
	662, 663, 1819, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 1820, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 1821, 696, 697, 0, 691, 682, 1822,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 1823,
	706, 793, 794, 795, 796, 1824, 718, 1825, 707, 709,
	710, 711, 712, 797, 713, 798, 1826, 714, 715, 716,
	717, 708, 719, 720, 1827, 1828, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1829, 730, 1830, 0, 731,
	732, 733, 799, 800, 801, 1831, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1832, 1833,
	1834, 1835, 745, 746, 803, 747, 748, 749, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 1757, 337, 338, 1758, 1759, 1760, 0,
	1761, 750, 1762, 1763, 1764, 0, 339, 1765, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 1766, 755, 352, 353,
	354, 355, 356, 357, 358, 1767, 1768, 0, 359, 756,
	757, 758, 1769, 360, 361, 759, 1770, 1633, 1771, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 1772, 371,
	372, 373, 370, 374, 375, 1773, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 1774, 384, 385, 386, 1385,
	387, 388, 389, 1775, 1776, 1778, 1777, 1779, 1780, 1781,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	1782, 400, 402, 396, 398, 1783, 401, 399, 403, 404,
	1784, 405, 406, 407, 1785, 1786, 408, 409, 410, 1787,
	411, 412, 413, 1788, 414, 415, 416, 1789, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 1790, 324, 1791,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 1792, 437, 438, 439, 1793, 440, 441, 1794,
	1386, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 1795, 454, 768, 1796, 769,
	455, 1797, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 1388, 463, 464, 465, 1798, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	1799, 326, 325, 327, 1387, 773, 475, 559, 476, 774,
	775, 1800, 776, 1801, 477, 478, 480, 1389, 777, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 1802, 491, 493, 492, 1803,
	495, 778, 494, 1392, 496, 497, 1393, 1804, 498, 499,
	500, 501, 502, 503, 506, 1805, 1806, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1807, 539,
	328, 1396, 553, 554, 555, 556, 1808, 779, 557, 780,
	560, 561, 1809, 0, 562, 0, 563, 1810, 1811, 565,
	566, 567, 1812, 1813, 568, 569, 781, 1397, 570, 1398,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 1814, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	1815, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 1816,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 1817, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 1818, 659, 660, 658,
	661, 662, 663, 1819, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 1820, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 1821, 696, 697, 0, 691, 682,
	1822, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	1823, 706, 793, 794, 795, 796, 1824, 718, 1825, 707,
	709, 710, 711, 712, 797, 713, 798, 1826, 714, 715,
	716, 717, 708, 719, 720, 1827, 1828, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1829, 730, 1830, 0,
	731, 732, 733, 799, 800, 801, 1831, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1832,
	1833, 1834, 1835, 745, 746, 803, 747, 748, 749, 2975,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 2972, 337, 338, 0,
	0, 0, 0, 0, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 2973, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 2971,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 2974, 0, 0, 0,
	0, 0, 0, 0, 1302, 2970, 0, 1259, 1300, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 279, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 281, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 1992, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 273, 745, 746, 803, 747, 748, 749,
	1275, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 2147, 2145, 0, 0, 1300, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 279, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 281, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 1992,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 273, 745,
	746, 803, 747, 748, 749, 1275, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 2147, 3732, 0,
	0, 1300, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 1344, 1306, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 279, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 281, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 1992, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 273, 745, 746, 803, 747, 748, 749,
	1275, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 2147, 2145, 0, 0, 1300, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 3108, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 3113, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 3109, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 3110, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	3020, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 3018, 0, 3017, 1300,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 3015, 0, 3014, 1300, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 1344, 1306, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 1302, 3012, 0, 3011, 1300, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 1344,
	1306, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	3009, 0, 1682, 1300, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1681, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	1264, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 1279, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 0, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 5472, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 1279,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1275, 0, 0, 0, 0, 0, 0, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 2848, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	2847, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 0, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	5185, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 1279, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 0, 0, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 329, 330, 332, 331, 333, 334, 335, 336, 1302,
	337, 338, 0, 1300, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 1279, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 4720, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 2221, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 1302, 0, 0, 0, 1300,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 1344, 1306, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 2221, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 1302, 0, 0, 0, 1300, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 4336, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 3113, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 0, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 2145, 0, 3118, 1300, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 1344, 1306, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 3116, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 3104, 0, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 329, 330, 332, 331, 333, 334, 335, 336, 1302,
	337, 338, 0, 1300, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	3093, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 3091, 0,
	3082, 3089, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 3085, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 3086,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	3087, 516, 3084, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 3088, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 3083,
	749, 1275, 0, 0, 0, 0, 3079, 0, 3082, 3089,
	1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 3085, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 3086, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 3087, 516,
	3084, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 3088, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 3083, 749, 1275,
	0, 0, 0, 0, 0, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 0, 0, 0, 0, 0, 0, 2153, 0, 1302,
	0, 0, 0, 1300, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 2827,
	337, 338, 0, 0, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	2532, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 2497, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1275, 0, 0, 0, 0, 2027, 0, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 2022, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 2008, 0, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 329, 330, 332, 331, 333, 334, 335, 336, 1302,
	337, 338, 0, 1300, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	2003, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 1907, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1906, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1275, 0, 0, 0, 0, 1901, 0, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1900,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 1895, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 1869, 0, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 329, 330, 332, 331, 333, 334, 335, 336, 1302,
	337, 338, 0, 1300, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	1849, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 1853, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 1854, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 1852, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 1687, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1275, 0, 0, 0, 0, 1542, 0, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 0, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 0, 0, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 329, 330, 332, 331, 333, 334, 335, 336, 1302,
	337, 338, 0, 1300, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 5527, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 5526,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 5525, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 5527, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 5526, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 0, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 5101, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 5102, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 5100, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1275, 0, 0, 0, 0, 0, 0, 1318, 1290,
	1291, 1292, 3698, 3699, 1301, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 0, 0, 1318, 1290, 1291, 1292,
	3696, 3697, 1301, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 0, 0, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 329, 330, 332, 331, 333, 334, 335, 336, 1302,
	337, 338, 0, 1300, 0, 0, 0, 1344, 1306, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 2835, 2836, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 0, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 0, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 3101, 0,
	0, 0, 0, 0, 0, 3099, 3100, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 0,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 3691,
	3692, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 2418, 2419, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 0,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 5527, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 0, 1347, 0,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 0, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 5526, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 3120, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 1268, 1269, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 0, 1343, 0, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 1871,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 1302,
	0, 0, 0, 1300, 1344, 1306, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 0, 1343,
	0, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 1607, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 1302, 0, 0, 0, 1300, 1344,
	1306, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 0, 1343, 0, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1259, 0, 1443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 1302,
	0, 0, 1344, 1300, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 1343, 0, 359,
	756, 757, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 1429, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 328, 1396, 553, 554, 555, 556, 0, 1348, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 1435,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 1437,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 279, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 281, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 1992, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 273, 745, 746, 803, 747, 748, 749,
	1443, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	1433, 0, 2245, 1344, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 1343, 0,
	359, 756, 757, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 1429, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 328, 1396, 553, 554, 555, 556, 0, 1348,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	1435, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	1437, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 279, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 281, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 1992, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 273, 745, 746, 803, 747, 748,
	749, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3861, 0, 1443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1433, 0, 2245, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 1343, 0, 359, 756, 757,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 1429, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 328,
	1396, 553, 554, 555, 556, 0, 1348, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 1435, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 788, 1437, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 1425,
	0, 1443, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 1433, 339,
	1431, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 1343,
	0, 359, 756, 757, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 1429, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 328, 1396, 553, 554, 555, 556, 0,
	1348, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 1435, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	788, 1437, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 1443, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 1433, 339, 1431, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 1343, 0, 359, 756, 757, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 1429, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 0, 539, 328, 1396, 553,
	554, 555, 556, 0, 1348, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 1435, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 788, 1437, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 1443,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 1433, 339, 1431, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 1343, 0, 359,
	756, 757, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 328, 1396, 553, 554, 555, 556, 0, 1348, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 1443, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 339, 4903, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 1343, 0, 359, 756, 757, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 0, 539, 328, 1396, 553, 554, 555,
	556, 0, 1348, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 788, 1437, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 321, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 2942, 2943, 2944,
	2961, 2962, 2963, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 2964, 0,
	750, 0, 0, 0, 2965, 339, 2137, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 2122, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 2954, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 2950, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 2955,
	2956, 2957, 2958, 433, 434, 435, 765, 0, 0, 2949,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 2959, 2960, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	2952, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 2953, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 2121, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1259, 0, 1628,
	2939, 2940, 2941, 2966, 2951, 2945, 0, 2947, 2948, 2946,
	2933, 2934, 2935, 2936, 2937, 2938, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 1633, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 0, 1396, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 279, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 281, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 1992, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 273, 745, 746, 803, 747, 748, 749,
	0, 1989, 274, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 220, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 1633, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 1387,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 1389, 777, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 0, 539, 0, 1396, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 279, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 281, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 1992, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 273, 745, 746,
	803, 747, 748, 749, 1628, 1627, 274, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 220, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 1633, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	1387, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 1389, 777, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 0, 539, 0, 1396, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1628, 1627, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 2016, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 1633, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 1387, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 1389, 777, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 0, 539, 0, 1396, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1628, 2708, 0, 0,
	0, 0, 2709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 4271, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 1633, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 1387, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 1389, 777, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 2707, 493, 492, 0, 495, 778,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 0, 1396,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1628, 1627, 0,
	0, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 2016,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 1633, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 1387, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 1389, 777, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 0,
	1396, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 1259,
	0, 321, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	1998, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 279,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 281, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 1992, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 273, 745, 746, 803, 747,
	748, 749, 321, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 220, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 326, 325, 327, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 328, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 321, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 2259, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 326,
	325, 327, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 328, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 321, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 1986, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 326, 325, 327, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	328, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	321, 3321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 4223,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 1443, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 339, 5715, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 1343, 0, 359, 756, 757, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 0, 539, 328, 1396, 553, 554,
	555, 556, 0, 1348, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 3267, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 0, 2314, 0, 350,
	2321, 351, 2320, 0, 2329, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 2332, 2333, 0, 0,
	360, 361, 0, 0, 1633, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 1367, 395, 397, 2318, 2317, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 0, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	0, 0, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 2316, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 2327, 2328, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 0, 0, 0, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 0, 0, 0, 558,
	1388, 463, 464, 465, 3261, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 1387, 3263, 475, 559, 476, 2311, 2312, 0, 2307,
	0, 477, 478, 480, 1389, 0, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 0, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 0, 539, 0, 1396, 553,
	554, 555, 556, 0, 0, 557, 2319, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 3262, 1397, 570, 1398, 0, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 2304, 585, 586, 587, 2305, 588,
	589, 590, 0, 591, 0, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	2315, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 0, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 0, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 2313, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 2331, 685, 686, 687, 688, 0, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 2323,
	2324, 2325, 2326, 0, 718, 0, 707, 709, 710, 711,
	712, 0, 713, 0, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	0, 2322, 2330, 3264, 735, 736, 734, 737, 738, 741,
	739, 740, 0, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 0, 747, 748, 749, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 3256,
	750, 0, 2300, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 3267, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	3653, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 0, 2314, 0, 350, 2321, 351, 2320, 0,
	2329, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 2332, 2333, 0, 0, 360, 361, 0, 0,
	1633, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 1367, 395,
	397, 2318, 2317, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 0, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 0, 0, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	2316, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 2327, 2328, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	0, 0, 0, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 0, 0, 0, 558, 1388, 463, 464, 465,
	3261, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 1387, 3263, 475,
	559, 476, 2311, 2312, 0, 2307, 0, 477, 478, 480,
	1389, 0, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 0, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 0, 1396, 553, 554, 555, 556, 0,
	0, 557, 2319, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 3262,
	1397, 570, 1398, 0, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	2304, 585, 586, 587, 2305, 588, 589, 590, 0, 591,
	0, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 2315, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	0, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 0, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 2313, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 2331, 685, 686,
	687, 688, 0, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 2323, 2324, 2325, 2326, 0,
	718, 0, 707, 709, 710, 711, 712, 0, 713, 0,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 0, 2322, 2330, 3264,
	735, 736, 734, 737, 738, 741, 739, 740, 0, 742,
	743, 744, 0, 0, 0, 321, 745, 746, 0, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 2300, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 321,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 4361, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 1144, 0, 1039, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 2787, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 1046, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 1141, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 1143, 0, 691, 682, 1044, 698, 699, 700, 701,
	702, 1045, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 2282, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 4494,
	337, 338, 0, 0, 0, 0, 0, 750, 1049, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 2289,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 2290, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 2291, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 4493, 643, 652, 653, 654, 655,
	657, 656, 0, 2286, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 2288, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 4492, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 2308, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 0, 1049,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 0, 2314, 0, 350,
	2321, 351, 2320, 0, 2329, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 2332, 2333, 0, 0,
	360, 361, 0, 0, 1633, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 1367, 395, 397, 2318, 2317, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 0, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	0, 0, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 2316, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 2327, 2328, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 0, 0, 0, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 0, 0, 0, 558,
	1388, 463, 464, 465, 3261, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 1387, 3263, 475, 559, 476, 2311, 2312, 0, 2307,
	0, 477, 478, 480, 1389, 0, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 0, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 0, 539, 0, 1396, 553,
	554, 555, 556, 0, 0, 557, 2319, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 3262, 1397, 570, 1398, 0, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 2304, 585, 586, 587, 2305, 588,
	589, 590, 0, 591, 0, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	2315, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 0, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 0, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 2313, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 2331, 685, 686, 687, 688, 0, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 2323,
	2324, 2325, 2326, 0, 718, 0, 707, 709, 710, 711,
	712, 0, 713, 0, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	0, 2322, 2330, 3264, 735, 736, 734, 737, 738, 741,
	739, 740, 0, 742, 743, 744, 0, 0, 0, 2282,
	745, 746, 0, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 2337, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 2300, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 2289, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 2290, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 2291, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 2336,
	643, 652, 653, 654, 655, 657, 656, 0, 2338, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 2288, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 2335, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	2282, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 2281, 337, 338, 0, 0,
	0, 0, 0, 750, 1049, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 2289, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 2290, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 2291, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	2280, 643, 652, 653, 654, 655, 657, 656, 0, 2286,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 2288, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 2279, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1037, 0, 1039, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 1049, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 1046, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 1044, 698, 699, 700, 701,
	702, 1045, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1039, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 1049, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 1046,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 1044, 698, 699, 700,
	701, 702, 1045, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 3247, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 1049,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 2282, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 1049, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 2289, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 2290, 763, 764, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 2291, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 326, 325, 327, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	328, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 2473, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 2474, 643,
	652, 653, 654, 655, 657, 656, 0, 2286, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	2288, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	2475, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 321,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 1049, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 1049, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 3267, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 0, 936, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 0, 2314, 0, 350, 2321, 351, 2320, 0,
	2329, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 2332, 2333, 0, 0, 360, 361, 0, 0,
	1633, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 1367, 395,
	397, 2318, 2317, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 0, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 0, 0, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	2316, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 2327, 2328, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	0, 0, 0, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 0, 0, 0, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 1387, 0, 475,
	559, 476, 2311, 2312, 0, 2307, 0, 477, 478, 480,
	1389, 0, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 0, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 0, 1396, 553, 554, 555, 556, 0,
	0, 557, 2319, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 0,
	1397, 570, 1398, 0, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	2304, 585, 586, 587, 2305, 588, 589, 590, 0, 591,
	0, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 2315, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	0, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 0, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 2313, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 2331, 685, 686,
	687, 688, 0, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 2323, 2324, 2325, 2326, 0,
	718, 0, 707, 709, 710, 711, 712, 0, 713, 0,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 0, 2322, 2330, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 0, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 0, 747,
	748, 749, 2308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 2300, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 0, 2314, 0, 350, 2321, 351, 2320,
	0, 2329, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 2332, 2333, 0, 0, 360, 361, 0,
	0, 1633, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 1367,
	395, 397, 2318, 2317, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 0, 0, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 2316, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 2327, 2328,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 0, 0, 0, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 0, 0, 0, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 1387, 0,
	475, 559, 476, 2311, 2312, 0, 2307, 0, 477, 478,
	480, 1389, 0, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 0, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 0, 539, 0, 1396, 553, 554, 555, 556,
	0, 0, 557, 2319, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	0, 1397, 570, 1398, 0, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 2304, 585, 586, 587, 2305, 588, 589, 590, 0,
	591, 0, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 2315, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 0, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 0,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 2313, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 2331, 685,
	686, 687, 688, 0, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 2323, 2324, 2325, 2326,
	0, 718, 0, 707, 709, 710, 711, 712, 0, 713,
	0, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 0, 2322, 2330,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 0,
	742, 743, 744, 0, 0, 0, 321, 745, 746, 0,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 2300,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1627, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4517, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 1633, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 1387, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 1389, 777, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 0, 539, 0, 1396, 553,
	554, 555, 556, 4637, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 3376, 0, 1628, 1627,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 1633, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 1387, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 1389, 777, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 0, 539,
	0, 1396, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 2724,
	0, 1628, 1627, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	1633, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1917, 771, 772, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 1387, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	1389, 777, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 0, 1396, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 2346, 0, 1628, 1627, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 1633, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	1387, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 1389, 777, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 0, 539, 0, 1396, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1914, 0, 1628, 1627, 0,
	0, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 1633, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1917, 771,
	772, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 1387, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 1389, 777, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 0,
	1396, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1865, 0,
	1628, 1627, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 1633,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 0, 1396, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 1863, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1623, 0, 1628, 1627, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 1633, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 1620,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 1387,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 1389, 777, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 0, 539, 0, 1396, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 1621, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 1619, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 1622, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1628, 1627, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 1633, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	1387, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 1389, 777, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 0, 539, 0, 1396, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1628, 1627, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 1633, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 1387, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 1389, 777, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 0, 539, 0, 1396, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1628, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 1633, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 1387, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 1389, 777, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 0, 1396,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 321, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 3411, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 4215, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 3415, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 4214, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 3414, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	4210, 4211, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 4213, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 4209, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 3413,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 4212, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1721, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 1720, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 1716, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 1723, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 1719, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 1717,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 1722, 642, 644,
	651, 643, 652, 653, 654, 655, 1718, 656, 0, 1715,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 1713, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	1714, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1840, 0, 321, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1842, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 1435, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1837, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1839, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 326,
	325, 327, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 328, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 1435, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1745, 0, 321,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1747, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 1435,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	1435, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 321, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 4083, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 3622, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 3621, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 321, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 3411,
	360, 361, 759, 0, 0, 3405, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 3407, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 3415, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 3414, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 3404, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 3413, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 3412, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 2807, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 326, 325, 327, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	328, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 2753,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 2752, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 2738, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 2740, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 2729, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 2701,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 326, 325, 327, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	328, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 1435, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1964,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1963, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1862, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1855, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1857, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1845, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 326, 325, 327, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 328, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1523, 0, 321, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1522, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1512, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1511, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 326,
	325, 327, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 328, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1508, 0, 321,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1507, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1502, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1501, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 326, 325, 327, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 328, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1479, 0, 321, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1478, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 326, 325,
	327, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 328, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 805, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 326, 325, 327, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	328, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 312,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 321, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 326, 325, 327, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 328, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 2759, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 2483,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 321, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	2481, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 326, 325,
	327, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 328, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 321, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 2479, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 326,
	325, 327, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 328, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 321, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 2370, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 2364,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 326, 325, 327, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	328, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 838,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 836, 335, 336, 825, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 828, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 834, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 830,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 837,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 824, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 825,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 828, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 829, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 830, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 823, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 321, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	825, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 828, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 829, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 830, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 321, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 825, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 828, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 4647, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 830, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 321, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 825, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 828, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 829, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 830, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 3249, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 828, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 829, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 830, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1128,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 1127, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 1126, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 929, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 918, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 927, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 920, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 926, 441, 922, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 923, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	921, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 924, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 925, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 919, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 912, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 918, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 927, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 920, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 926, 441, 922, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 923, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 921, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	924, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	925, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	919, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 4214, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	5002, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1553,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 1556, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 1554, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 900,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 899, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 898, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 1557, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 896, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1553, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 1556, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 1554, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 900, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 899, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 898, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 1557, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 896, 794,
	795, 796, 0, 718, 0, 707, 1555, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 907, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 905, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 814, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 813, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	812, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 321, 3321, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 321, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 5319, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 4023, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 4875, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 321, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 4574, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 321, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 3187, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 321, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 3178, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	2640, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 899, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 898, 643,
	652, 653, 654, 655, 3490, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 896, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 321,
	3321, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 3318, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	2805, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 2452, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 2020, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 2012, 0, 321,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	890, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 886, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 891, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	900, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 899, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 898, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 1997, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 896, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1970, 0, 321, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1969, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1953, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1951,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1945,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1923, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1921, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1920, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1912, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1874, 0, 321, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1847, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1559, 0, 321,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 899, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 898,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 896, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1530, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1529, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1527, 0, 321, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1526, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1519, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1518,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 321,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 1460, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	910, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 890, 0, 321, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 886, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 885, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	891, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 900, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 899,
	634, 635, 636, 637, 887, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 898, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 888, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 896,
	794, 795, 796, 0, 718, 0, 707, 892, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 879, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 880, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 840,
	0, 321, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 832, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 809, 0, 321, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 321,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	4245, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 899, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	898, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 896, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 321, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 4140, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 321, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 4109, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 4105, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 339, 0, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 0, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 4048, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 0, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 321, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 4046, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 321, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 4034, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 321, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 4031, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 756,
	757, 758, 0, 360, 361, 759, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 768, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 3633,
	771, 772, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 0, 777, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 778, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 779, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 0, 570, 0,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 0, 664, 789, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 797, 713, 798, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 799, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 321,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 880, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 2777, 0, 0, 339, 0,
	340, 341, 342, 0, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 0,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 0, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 0, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 0,
	777, 0, 479, 481, 482, 0, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 0, 496, 497, 0, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 0,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 0, 551, 538,
	0, 539, 0, 0, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 0,
	570, 0, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 0, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 0, 789, 665, 645,
	646, 666, 667, 0, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 321, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1488, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 321, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	1408, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 0, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 0, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 0, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 0, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1959, 0, 1537, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 0, 0, 0,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 0, 0, 0,
	0, 360, 361, 0, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 1539, 390, 391,
	392, 393, 394, 0, 395, 397, 0, 0, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 0, 0, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 0, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 0, 0, 0, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1958, 0, 0,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 0, 475, 559, 476, 0, 0, 0,
	0, 0, 477, 478, 480, 0, 0, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 0,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 0, 557, 0, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 0, 0, 570, 0, 0, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 0, 585, 586, 587, 0,
	588, 589, 590, 0, 591, 0, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 0, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 0, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1540, 664, 0, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 0, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 0, 685, 686, 687, 688, 0, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	0, 0, 0, 0, 0, 718, 0, 707, 709, 710,
	711, 712, 0, 713, 0, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 0, 0, 0, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 0, 742, 743, 744, 1877, 0, 1537,
	0, 745, 746, 0, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	0, 0, 0, 350, 0, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	0, 0, 0, 0, 360, 361, 0, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	1539, 390, 391, 392, 393, 394, 0, 395, 397, 0,
	0, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 0, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 0, 0, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 0, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 0, 0,
	0, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1876, 0, 0, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 0, 475, 559, 476,
	0, 0, 0, 0, 0, 477, 478, 480, 0, 0,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 0, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 0, 557,
	0, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 0, 0, 570,
	0, 0, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 0, 591, 0, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 0, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 0, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1540, 664, 0, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	0, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 0, 685, 686, 687, 688,
	0, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 0, 0, 0, 0, 0, 718, 0,
	707, 709, 710, 711, 712, 0, 713, 0, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 0, 0, 0, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 0, 742, 743, 744,
	1535, 0, 1537, 0, 745, 746, 0, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 0, 0, 0, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 0, 0, 0, 0, 360, 361, 0,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 1539, 390, 391, 392, 393, 394, 0,
	395, 397, 0, 0, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 0, 0, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 0, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 0, 0, 0, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1534, 0, 0, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 0,
	475, 559, 476, 0, 0, 0, 0, 0, 477, 478,
	480, 0, 0, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 0, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 0, 557, 0, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	0, 0, 570, 0, 0, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 0, 585, 586, 587, 0, 588, 589, 590, 0,
	591, 0, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 0, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 0, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1540, 664, 0,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 0, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 0, 685,
	686, 687, 688, 0, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 0, 0, 0, 0,
	0, 718, 0, 707, 709, 710, 711, 712, 0, 713,
	0, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 0, 0, 0,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 0,
	742, 743, 744, 2385, 0, 1537, 0, 745, 746, 0,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 0, 0, 0, 350,
	0, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 0, 0, 0, 0,
	360, 361, 0, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 1539, 390, 391, 392,
	393, 394, 0, 395, 397, 0, 0, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 0, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	0, 0, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 0, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 0, 0, 0, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 0, 0, 0, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 0, 475, 559, 476, 0, 0, 0, 0,
	0, 477, 478, 480, 0, 0, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 0, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 0, 557, 0, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 0, 0, 570, 0, 0, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 0, 591, 0, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	0, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 0, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1540, 664, 0, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 0, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 0, 685, 686, 687, 688, 0, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 0,
	0, 0, 0, 0, 718, 0, 707, 709, 710, 711,
	712, 0, 713, 0, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	0, 0, 0, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 0, 742, 743, 744, 2344, 0, 1537, 0,
	745, 746, 0, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 340, 341,
	342, 0, 343, 344, 345, 346, 347, 348, 349, 0,
	0, 0, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 0, 359, 0,
	0, 0, 0, 360, 361, 0, 0, 0, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 0, 0, 0, 0, 0, 1539,
	390, 391, 392, 393, 394, 0, 395, 397, 0, 0,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 0, 0, 431, 432, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 0, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 0, 0, 0,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 0,
	0, 0, 558, 0, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 0, 475, 559, 476, 0,
	0, 0, 0, 0, 477, 478, 480, 0, 0, 0,
	479, 481, 482, 0, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 0, 494, 0, 496, 497, 0, 0, 498, 499,
	500, 501, 502, 503, 506, 0, 0, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 0, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 0, 551, 538, 0, 539,
	0, 0, 553, 554, 555, 556, 0, 0, 557, 0,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 0, 0, 570, 0,
	0, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 0, 585, 586,
	587, 0, 588, 589, 590, 0, 591, 0, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 0, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 0, 633, 634, 635, 636, 637, 0, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1540, 664, 0, 665, 645, 646, 666,
	667, 0, 668, 669, 670, 671, 672, 673, 674, 0,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 0, 685, 686, 687, 688, 0,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 0, 0, 0, 0, 0, 718, 0, 707,
	709, 710, 711, 712, 0, 713, 0, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 0, 730, 0, 0,
	731, 732, 733, 0, 0, 0, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 1537, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 0, 747, 748, 749, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 0, 0, 0, 350,
	0, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 0, 0, 0, 0,
	360, 361, 0, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 1539, 390, 391, 392,
	393, 394, 0, 395, 397, 0, 0, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 0, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	0, 0, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 0, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 0, 0, 0, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 0, 0, 0, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 0, 475, 559, 476, 0, 0, 0, 0,
	0, 477, 478, 480, 0, 0, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 0, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 0, 557, 0, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 0, 0, 570, 0, 0, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 0, 591, 0, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	0, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 0, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1540, 664, 0, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 0, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 0, 685, 686, 687, 688, 0, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 0,
	0, 0, 0, 0, 718, 0, 707, 709, 710, 711,
	712, 0, 713, 0, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	0, 0, 0, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 0, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 0, 747, 748, 749, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	2096, 0, 0, 0, 0, 0, 2097, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112,
	0, 0, 0, 0, 0, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 2103, 2096, 0, 2067, 0, 0,
	0, 2097, 0, 0, 2068, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 2116, 2065, 2066, 2084, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0, 0,
	0, 0, 0, 2122, 0, 0, 0, 0, 0, 2103,
	2096, 0, 2067, 0, 0, 0, 2097, 0, 0, 2068,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 2084, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 2091, 2092, 2093,
	0, 0, 0, 0, 2107, 0, 2073, 0, 2117, 0,
	0, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2113, 0,
	2114, 2090, 2091, 2092, 2093, 0, 0, 2082, 2083, 2107,
	0, 2073, 0, 2117, 0, 0, 0, 0, 0, 0,
	2095, 2098, 0, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2088, 2113, 0, 2114, 0, 0, 0, 0,
	0, 0, 2082, 2083, 2107, 0, 2065, 2066, 2117, 2099,
	2100, 2101, 2110, 2111, 2112, 2095, 2098, 0, 0, 0,
	0, 0, 2105, 0, 0, 0, 0, 0, 0, 2103,
	2096, 0, 0, 0, 0, 0, 2097, 2088, 2113, 2068,
	2114, 0, 2115, 0, 0, 0, 0, 2082, 2083, 0,
	2116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 2105, 2122, 0,
	0, 0, 0, 0, 2119, 0, 0, 2067, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 2115, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2115, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 2119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2094,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 2107, 0, 0, 2108, 2117, 0,
	0, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2113, 0,
	2114, 0, 0, 2121, 0, 0, 0, 2082, 2083, 0,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 2088, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 0, 5347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 0, 0, 0, 0,
	0, 0, 2115, 0, 0, 0, 0, 2079, 2080, 2086,
	2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 2104, 0, 0, 0, 0, 5291, 0,
	0, 0, 0, 0, 2119, 0, 0, 0, 0, 0,
	2106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 0, 5290, 2065, 2066, 0, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 2103, 2096, 0,
	0, 0, 0, 0, 2097, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2116, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 2108, 0, 2065, 2066, 2087, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 2096, 0,
	0, 0, 0, 0, 2097, 0, 0, 2068, 2121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 2107, 5085, 0, 0, 2117, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 2113, 0, 2114, 2073,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 0, 2107, 0, 0, 0, 2117, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 0, 0, 2065,
	2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0,
	0, 0, 0, 0, 0, 0, 2113, 0, 2114, 0,
	0, 0, 2103, 2096, 0, 2082, 2083, 0, 0, 2097,
	2115, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2116, 0, 2105, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 2122, 2119, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	2108, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 2089, 0,
	0, 2117, 0, 0, 0, 0, 0, 0, 2095, 2098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2108, 2113, 0, 2114, 0, 0, 0, 0, 0, 0,
	2082, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 2121, 0, 2106, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 4899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 2106, 0,
	0, 0, 0, 0, 0, 0, 0, 2119, 0, 0,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 4790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 2066, 0, 2099, 2100,
	2101, 2110, 2111, 2112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2094, 2103, 2096,
	0, 0, 0, 0, 0, 2097, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2116,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 2108, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 2065, 2066, 2084, 2099, 2100,
	2101, 2110, 2111, 2112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2103, 2096,
	0, 2121, 0, 0, 0, 2097, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	2090, 2091, 2092, 2093, 0, 0, 0, 2084, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 2107, 0, 0, 4789, 2117, 0, 0,
	0, 0, 0, 0, 2095, 2098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2113, 0, 2114,
	2090, 2091, 2092, 2093, 0, 0, 2082, 2083, 0, 0,
	2073, 0, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111,
	2112, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 2096, 0, 0, 0,
	0, 2088, 2097, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 2107, 0, 0, 2116, 2117, 0, 0,
	0, 0, 0, 0, 2095, 2098, 0, 0, 0, 0,
	0, 0, 0, 0, 2122, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 2113, 0, 2114,
	0, 2115, 0, 0, 2087, 0, 2082, 2083, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 2104, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 2119, 0, 0, 0, 0, 0, 0,
	0, 2088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2115, 0, 2094, 0, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 2104, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 2119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2107, 2108, 0, 0, 2117, 0, 0, 0, 0, 0,
	0, 2095, 2098, 0, 0, 0, 0, 2065, 2066, 0,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0,
	0, 0, 0, 2094, 2113, 0, 2114, 2121, 0, 0,
	2103, 2096, 0, 2082, 2083, 0, 0, 2097, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 2116, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 2122,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 2108, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2106,
	0, 0, 0, 0, 0, 0, 0, 2121, 2115, 0,
	0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 2104,
	0, 0, 4788, 0, 0, 0, 0, 0, 0, 0,
	2119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 0,
	0, 0, 2073, 0, 0, 0, 0, 0, 0, 2106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0,
	0, 0, 4366, 0, 0, 2107, 2089, 0, 0, 2117,
	0, 0, 0, 0, 0, 0, 2095, 2098, 0, 0,
	2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2108, 2113,
	0, 2114, 0, 2103, 2096, 0, 0, 0, 2082, 2083,
	2097, 0, 0, 2068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2116, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	0, 0, 2122, 2088, 0, 0, 0, 0, 0, 0,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2104, 0, 2106, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 2079, 2080,
	2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 0, 0, 0, 0, 3774,
	0, 0, 0, 0, 0, 2090, 2091, 2092, 2093, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 2066, 0, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 2096, 0,
	0, 0, 0, 0, 2097, 0, 0, 2068, 2107, 0,
	0, 2089, 2117, 0, 0, 0, 0, 0, 2116, 2095,
	2098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 2113, 2108, 2114, 2067, 0, 0, 0, 0,
	0, 2082, 2083, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 2121,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 0, 2104, 0, 2073,
	0, 2106, 0, 0, 0, 0, 0, 0, 2119, 0,
	0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0,
	0, 0, 0, 0, 3773, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 0, 0, 2117, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 2065, 2066, 0,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 2094, 0,
	0, 0, 0, 0, 0, 0, 2113, 0, 2114, 0,
	2103, 2096, 0, 0, 0, 2082, 2083, 2097, 0, 0,
	2068, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 2116, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2122,
	2088, 0, 0, 0, 0, 0, 2108, 0, 2067, 0,
	2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 2087,
	0, 0, 0, 0, 2679, 0, 0, 0, 0, 2084,
	0, 0, 0, 2103, 2096, 0, 0, 0, 0, 0,
	2097, 0, 2121, 2068, 0, 0, 0, 0, 0, 0,
	2115, 0, 0, 0, 2116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2104, 2122, 0, 0, 0, 0, 0, 0, 0,
	0, 2067, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 0,
	0, 0, 2073, 0, 2106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2079, 2080, 2086, 2109,
	2085, 2081, 2094, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 0, 2680, 0, 0, 0, 3772, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 2089, 2117,
	0, 0, 0, 0, 0, 0, 2095, 2098, 0, 0,
	0, 0, 0, 0, 0, 2090, 2091, 2092, 2093, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 2113,
	2108, 2114, 0, 0, 0, 0, 0, 0, 2082, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 2121, 0, 2107, 0,
	0, 0, 2117, 2088, 0, 0, 0, 0, 0, 2095,
	2098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2113, 0, 2114, 0, 0, 0, 0, 0,
	0, 2082, 2083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2115, 0, 0, 0, 0, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2104, 0, 2088, 0, 2106, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 0, 0,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 3771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2115, 0, 0, 0,
	0, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112,
	0, 0, 0, 0, 0, 2094, 0, 2104, 0, 0,
	0, 0, 0, 0, 2103, 2096, 0, 0, 2119, 0,
	0, 2097, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 2116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2122, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 2108, 2065, 2066, 0, 2099, 2100, 2101,
	2110, 2111, 2112, 2087, 0, 0, 0, 2579, 2094, 0,
	0, 0, 0, 2084, 0, 0, 0, 2103, 2096, 0,
	0, 0, 0, 0, 2097, 0, 0, 2068, 0, 2121,
	0, 0, 0, 0, 2089, 0, 0, 0, 2116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 2681,
	0, 0, 0, 0, 0, 2067, 2108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 2577, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 2091, 2092, 2093,
	0, 0, 2121, 0, 0, 0, 2073, 0, 0, 0,
	0, 2106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0,
	0, 0, 3736, 0, 0, 0, 0, 0, 2682, 2107,
	0, 0, 0, 2117, 0, 0, 0, 0, 0, 0,
	2095, 2098, 0, 0, 0, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 0, 0, 0, 2073,
	5614, 0, 0, 2113, 2106, 2114, 0, 0, 0, 0,
	0, 0, 2082, 2083, 0, 0, 2079, 2080, 2086, 2109,
	2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 0, 0, 2117, 2088, 0, 0,
	0, 0, 0, 2095, 2098, 0, 0, 2065, 2066, 0,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2113, 0, 2114, 0,
	2103, 2096, 0, 0, 0, 2082, 2083, 2097, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 2115, 0, 0,
	0, 2116, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2104, 2122,
	2088, 0, 0, 0, 0, 0, 0, 0, 2067, 2119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 0, 0, 0, 0, 0, 0, 2065, 2066, 0,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 2578, 2094,
	0, 2104, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 2096, 2119, 0, 0, 0, 3706, 2097, 0, 0,
	2068, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 2116, 0, 0, 0, 5613, 0, 0, 0, 0,
	0, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 2122,
	0, 0, 2073, 0, 3839, 0, 0, 2108, 2067, 0,
	0, 3838, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2121, 0, 2107, 0, 0, 2089, 2117,
	0, 0, 0, 0, 2576, 0, 2095, 2098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3707, 0, 0, 0, 0, 0, 0, 2113,
	2108, 2114, 0, 0, 0, 0, 0, 0, 2082, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 2090, 2091, 2092, 2093, 2121, 0, 0, 0,
	0, 0, 2073, 2088, 0, 2106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 2080, 2086,
	2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 2117,
	0, 0, 0, 2115, 0, 0, 2095, 2098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2104, 0, 0, 0, 2106, 2113,
	0, 2114, 0, 0, 0, 2119, 0, 0, 2082, 2083,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 2105, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	54, 53, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 2089, 0, 2115, 56, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2104, 0, 55, 0, 0, 104,
	0, 0, 0, 2108, 0, 2119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 58, 76, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 2121,
	0, 0, 65, 0, 0, 0, 0, 5717, 0, 0,
	0, 0, 0, 0, 0, 57, 0, 128, 0, 0,
	0, 0, 0, 112, 125, 2094, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 2108, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0,
	0, 0, 0, 0, 2065, 2066, 0, 2099, 2100, 2101,
	2110, 2111, 2112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 2103, 2096, 0,
	0, 0, 0, 0, 2097, 0, 0, 2068, 0, 0,
	0, 0, 61, 0, 0, 0, 0, 0, 2116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 64,
	0, 0, 0, 0, 67, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 79, 2067, 0, 0, 0, 0,
	0, 0, 66, 216, 0, 120, 2087, 0, 124, 0,
	5575, 0, 0, 0, 62, 0, 2084, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 63, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 70, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 0, 0, 0, 2073,
	0, 5195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 2107, 0, 0, 0, 2117, 0, 0, 0,
	0, 0, 0, 2095, 2098, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 217,
	0, 0, 0, 0, 221, 0, 2113, 0, 2114, 0,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 0,
	0, 0, 0, 2065, 2066, 220, 2099, 2100, 2101, 2110,
	2111, 2112, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2103, 2096, 0, 0,
	2088, 0, 0, 2097, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2116, 2065, 2066,
	0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 0, 0, 0, 0,
	0, 2103, 2096, 0, 2067, 0, 0, 0, 2097, 0,
	2115, 2068, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 2116, 0, 0, 2084, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 0, 0, 0,
	2122, 0, 2119, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 0,
	2108, 2107, 0, 2073, 0, 2117, 0, 0, 0, 0,
	0, 0, 2095, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2113, 2121, 2114, 0, 0,
	0, 0, 0, 0, 2082, 2083, 2107, 0, 0, 0,
	2117, 0, 0, 0, 0, 0, 0, 2095, 2098, 0,
	0, 0, 0, 0, 2105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	2113, 0, 2114, 0, 0, 0, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2105,
	0, 0, 0, 0, 0, 0, 0, 0, 2106, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2115,
	2079, 2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	2104, 1256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2119, 0, 0, 2065,
	2066, 0, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2103, 2096, 0, 0, 0, 0, 0, 2097,
	0, 0, 2068, 0, 0, 0, 0, 2089, 0, 0,
	0, 0, 0, 2116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 2122, 0, 0, 0, 0, 0, 0, 0, 2108,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 2089, 0, 0, 0, 0, 0, 0, 2065,
	2066, 2084, 2099, 2100, 2101, 2110, 2111, 2112, 0, 0,
	0, 0, 0, 0, 0, 2121, 0, 0, 0, 0,
	0, 0, 2103, 2096, 2108, 0, 0, 0, 0, 2097,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2121, 2122, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 4951,
	0, 2087, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 2084, 0, 0, 2073, 0, 0, 2106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2079,
	2080, 2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 2117, 2106, 0, 0, 0, 0, 0, 2095, 2098,
	0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 2113, 0, 2114, 2090, 2091, 2092, 2093, 0, 0,
	2082, 2083, 0, 0, 2073, 0, 4606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 2065, 2066,
	0, 2099, 2100, 2101, 2110, 2111, 2112, 2107, 0, 0,
	0, 2117, 0, 0, 0, 0, 0, 0, 2095, 2098,
	0, 2103, 2096, 0, 0, 0, 0, 0, 2097, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2113, 2116, 2114, 0, 2115, 0, 0, 0, 0,
	2082, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	2122, 0, 0, 0, 0, 0, 2104, 0, 0, 2067,
	2105, 0, 0, 0, 0, 0, 0, 2119, 0, 0,
	2087, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2115, 0, 2094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 2119, 0, 0,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2107, 2094, 0, 0,
	2117, 2121, 0, 0, 0, 0, 0, 2095, 2098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4607, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	2113, 0, 2114, 0, 0, 0, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2108, 0, 0, 0, 2105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 2106, 0, 0, 0, 0, 0, 0,
	0, 2121, 0, 0, 0, 2079, 2080, 2086, 2109, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111, 2112,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 2103, 2096, 0, 0, 0, 0,
	0, 2097, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 2089, 0, 0, 2116, 0, 2065, 2066, 0,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0,
	0, 0, 0, 2122, 0, 0, 0, 0, 0, 0,
	2103, 2096, 2067, 0, 2108, 3840, 0, 2097, 0, 0,
	2068, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 2116, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2122,
	2121, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 4347, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 2091, 2092, 2093,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 2106, 0, 0, 3845, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 2080, 2086, 2109, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 2107,
	0, 0, 2073, 2117, 0, 0, 0, 0, 0, 0,
	2095, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2113, 0, 2114, 0, 0, 0, 0,
	0, 0, 2082, 2083, 0, 2107, 0, 0, 0, 2117,
	0, 0, 0, 0, 0, 0, 2095, 2098, 0, 0,
	0, 0, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 0, 2113,
	0, 2114, 0, 0, 0, 0, 0, 0, 2082, 2083,
	0, 0, 0, 0, 0, 0, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	2096, 0, 0, 2088, 0, 0, 2097, 2115, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 0, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2122, 2119,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 2115, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 2065, 2066, 0,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0, 2094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 2096, 0, 0, 0, 3775, 0, 2097, 0, 0,
	2068, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 2116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 2122,
	0, 2090, 2091, 2092, 2093, 0, 0, 2108, 2067, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2108, 2107, 0, 0, 0, 2117, 0,
	0, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2113, 2121,
	2114, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 2091, 2092, 2093, 0, 2105, 0, 0,
	0, 0, 2073, 0, 0, 2106, 0, 0, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 2079, 2080, 2086,
	2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 2117,
	0, 2106, 0, 0, 0, 0, 2095, 2098, 0, 0,
	0, 0, 2115, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 2113,
	0, 2114, 0, 2104, 0, 0, 0, 0, 2082, 2083,
	0, 0, 0, 0, 2119, 0, 2065, 2066, 0, 2099,
	2100, 2101, 2110, 2111, 2112, 3805, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	2096, 0, 0, 2088, 0, 0, 2097, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111,
	2112, 0, 0, 0, 2094, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 0, 2103, 2096, 2067, 0, 0,
	0, 0, 2097, 2115, 0, 2068, 0, 0, 2087, 0,
	2089, 0, 0, 0, 0, 0, 2116, 0, 2084, 0,
	0, 0, 0, 0, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2122, 2119, 0, 0, 0, 0,
	0, 0, 2108, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 2108, 2107, 0, 0, 2073, 2117, 0,
	2106, 0, 0, 0, 0, 2095, 2098, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 2113, 2121,
	2114, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	2107, 0, 0, 0, 2117, 0, 0, 0, 0, 0,
	0, 2095, 2098, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2088, 0, 2113, 0, 2114, 0, 0, 0,
	0, 0, 0, 2082, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 2115, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2119, 0, 2065, 2066, 0, 2099, 2100, 2101, 2110, 2111,
	2112, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 2096, 0, 0, 0,
	0, 0, 2097, 0, 0, 2068, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 2116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 2122, 0, 0, 0, 0, 0,
	0, 0, 2108, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 2789, 0, 0, 0, 2073, 0, 0,
	2106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2109, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2107, 0, 0, 0, 2117, 0, 2106, 0, 0, 0,
	0, 2095, 2098, 0, 0, 0, 0, 0, 2079, 2080,
	2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 2113, 0, 2114, 0, 0, 0,
	0, 0, 0, 2082, 2083, 0, 0, 2065, 2066, 0,
	2099, 2100, 2101, 2110, 2111, 2112, 0, 0, 0, 0,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 2096, 0, 0, 0, 0, 0, 2097, 2088, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2122,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2115, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 0,
	0, 0, 2073, 0, 939, 0, 994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 2108, 2117,
	964, 0, 945, 944, 0, 0, 2095, 2098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 966, 0, 0, 2113,
	0, 2114, 946, 0, 2121, 0, 0, 949, 2082, 2083,
	960, 0, 1006, 0, 977, 0, 0, 0, 0, 0,
	0, 0, 0, 961, 962, 0, 0, 0, 2105, 0,
	0, 0, 0, 982, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 995, 951, 0, 0, 0, 0, 0, 952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 953, 0, 0, 2106, 0, 0, 0,
	0, 0, 992, 2115, 0, 0, 0, 0, 2079, 2080,
	2086, 2109, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 939, 0, 994, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 993, 0,
	973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 0, 0, 943, 0, 0, 0, 0, 0, 0,
	964, 0, 945, 944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 957, 958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 966, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 949, 0, 967,
	965, 0, 1006, 0, 977, 0, 0, 959, 0, 0,
	0, 2089, 978, 961, 962, 1000, 999, 0, 0, 0,
	0, 0, 0, 982, 0, 0, 0, 0, 0, 0,
	0, 1003, 991, 0, 0, 0, 0, 0, 0, 0,
	0, 995, 951, 2108, 0, 0, 0, 0, 952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 996, 0, 0, 0, 0, 0,
	0, 0, 0, 953, 0, 0, 0, 0, 0, 2121,
	0, 0, 992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 993, 0,
	973, 0, 0, 0, 0, 0, 950, 0, 0, 1005,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 0, 0, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 948, 0, 0, 0, 0, 986, 987,
	0, 2106, 0, 0, 957, 958, 0, 0, 0, 0,
	0, 0, 989, 2079, 2080, 2086, 2109, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 967,
	965, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	997, 984, 978, 0, 0, 1000, 999, 0, 0, 1004,
	979, 0, 0, 970, 968, 0, 0, 0, 974, 0,
	0, 1003, 991, 0, 0, 0, 975, 0, 0, 941,
	0, 998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 996, 0, 0, 942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 990, 0,
	0, 988, 0, 976, 956, 0, 0, 0, 0, 972,
	0, 0, 0, 0, 938, 0, 0, 0, 0, 0,
	1002, 0, 0, 0, 0, 0, 0, 0, 980, 0,
	981, 0, 0, 0, 0, 0, 0, 0, 0, 954,
	1001, 0, 0, 0, 0, 0, 950, 0, 0, 1005,
	0, 0, 0, 0, 0, 983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 948, 0, 0, 0, 0, 986, 987,
	0, 0, 0, 0, 0, 0, 985, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	997, 984, 0, 0, 0, 0, 0, 0, 0, 1004,
	979, 0, 0, 970, 968, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 975, 0, 0, 941,
	0, 998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 990, 0,
	0, 988, 0, 976, 956, 0, 0, 0, 0, 972,
	0, 0, 0, 0, 938, 0, 0, 0, 0, 0,
	1002, 0, 0, 0, 0, 0, 0, 0, 980, 0,
	981, 0, 0, 0, 0, 0, 0, 0, 0, 954,
	1001, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 985,
}

var sqlPact = [...]int32{
	16121, -1000, -1000, -1000, -1000, -1000, -1000, 292, -1000, -1000,
	289, 288, 287, 285, 283, 282, 262, 260, 259, 258,
	257, -1000, -1000, 256, 255, 251, 248, -1000, -1000, 247,
	245, 244, -1000, 242, -1000, -1000, 239, -1000, 237, 236,
	234, -1000, -1000, 224, -1000, 223, -1000, -1000, -1000, -1000,
	219, 218, 217, 109717, 109094, 110338, 2764, 143313, 122776, 2531,
	115310, 142690, 114687, 142067, 2639, 13198, 141444, 3252, 212, -1000,
	140821, 211, 210, 209, -1000, 122153, 140198, 119663, 119040, 2434,
	85966, 164912, 1966, 1965, -1000, 208, 206, -1000, 9137, 82859,
	204, 199, 198, 196, 2737, 194, -1000, 191, 186, -1000,
	184, 183, 178, -1000, 13505, 1866, -1000, 176, 175, 174,
	173, -1000, 11766, 118417, 172, 169, 167, 2987, 165, 164,
	79749, 163, 162, 158, 2714, 3344, -1000, -1000, 2554, -1000,
	-1000, 156, 155, 153, 149, 147, 144, 143, 141, 140,
	138, 137, 136, 135, 134, -1000, 133, 132, 130, 129,
	128, 127, -1000, 126, 125, 123, -1000, 122, -1000, 121,
	118, 116, 115, 114, 112, 110, 108, 107, 103, 102,
	101, 99, 98, 91, 90, -1000, -1000, 89, -1000, 2268,
	1962, 1961, 1960, 1162, 88, 87, 84, 82, 81, 77,
	70, 67, 66, 65, 62, 61, 60, 59, 58, 57,
	56, 55, 54, 52, 51, 50, 49, 200, 48, 47,
	45, 43, 40, 39, 38, 36, 4520, 4104, -1000, 1870,
	1170, 1440, 35898, 3495, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 152628, 143934, 34, -22, 33, -1000, 3902,
	1240, 65957, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 402, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 591, 3033, 862, -1000,
	-1000, -1000, 139575, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2762, -29, 115931, -1000, 2515, -1000, -1000, -1000, -1000,
	-1000, 861, -1000, 2760, 2703, 309, 2701, 115931, -1000, -1000,
	-1000, 3970, 3876, 108471, 2929, 4428, 4426, 4423, 4420, 4419,
	152007, 2193, 2994, 4417, 4416, 4414, 4410, 4406, 4403, 4402,
	-1000, 107848, 1261, 107225, 106602, 3990, 138954, 105979, 138331, 137708,
	155118, 55134, 1132, 3969, -1000, -1000, -1000, -1000, -1000, -1000,
	143934, -1000, 1260, -1000, -1000, 4401, 2438, 858, 121530, -1000,
	-1000, 137085, 2317, -1000, -1000, -1000, 1093, 1383, 38450, 38450,
	38450, 399, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3979,
	-1000, -1000, -1000, -1000, 143934, 3193, 3193, 1585, 1587, 1587,
	3193, 3193, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4398, 4397, 4395, 4388, 4381, -1000, -1000, -1000, 63422, -1000,
	-1000, 2932, 1925, 4171, 3238, 92279, 2452, 1631, 3932, 3600,
	3589, 1748, 2512, 3583, 4380, 3092, 3301, 3582, 3580, 3570,
	1647, 3564, 3563, 2043, 3040, 592, 3034, 35260, 3486, 2234,
	54496, 1863, 1737, 3562, 3560, 3557, 4183, 4022, 2484, 2403,
	2447, 2418, 95396, 4375, 4368, 3887, 3552, 3549, 3313, 3545,
	2365, -1000, 3442, 1811, 398, -1000, -1000, -1000, -1000, -1000,
	-1000, 398, 1718, -1000, -1000, -1000, -1000, 1584, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 97265, 28053, 96642, 96019, 105356,
	136462, 53858, 104733, 104110, 91646, 4367, 4365, 53220, 62787, 4098,
	135839, 154495, 4092, 4088, 1259, 2511, 1700, -1000, -1000, -1000,
	-1000, -1000, -1000, 11, 85345, 4161, 143934, -1000, 397, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 52582, 922, 51944, 881,
	51306, 820, 135216, -1000, -1000, -1000, -1000, -1000, -1000, 91013,
	3873, -1000, 134593, 133970, 1785, 2928, 4363, 4361, 1373, 4359,
	3837, 2162, 4358, 4357, 4356, 4355, 4353, 4350, 4349, 1810,
	133347, 3122, 132724, 2163, 153872, 2343, 1257, 103487, 110338, 3096,
	132101, 1798, 1797, -1000, -1000, -1000, -1000, 3535, 3338, 3335,
	1501, -1000, -1000, -1000, -1000, -1000, -1000, 69729, 12286, 12166,
	-1000, -1000, 13067, 165102, 131478, 72253, 110338, 110338, -1000, -1000,
	-1000, -1000, -1000, -1000, 50668, 818, 50030, 1075, 130855, -1000,
	-1000, 70360, 3441, 1322, -1000, -1000, -1000, -1000, -1000, 130232,
	49392, 710, 48754, 987, 143934, -1000, 3493, 2299, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 97886,
	-1000, -1000, 1584, -1000, -1000, -1000, 1629, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1870, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2394, -1000, 2495, -1000,
	-1000, -1000, 2991, 3844, 3844, 3844, 3967, 564, 557, -1000,
	200, 1020, 1358, -1000, -1000, 164051, -1000, -1000, 55772, 55772,
	55772, 55772, 55772, 55772, 55772, 55772, 2644, -1000, 857, -1000,
	-1000, 909, -1000, 856, 778, 704, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 855, -1000, -1000, -1000, -1000, -1000, -1000,
	4155, -1000, 31295, -1000, -1000, -1000, 580, 854, 55772, -1000,
	-1000, 4213, 4211, 1221, -1000, 389, 1102, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3492, 853, 852, -1000, 849, 847, 845, 844, 843,
	-1000, 835, -1000, 834, 833, 832, 825, 821, 819, 816,
	812, -1000, 2533, -1000, -1000, -1000, -1000, -1000, -1000, 768,
	767, 767, 767, -1000, 1229, 764, 808, -1000, 461, 761,
	432, 759, 758, 754, -1000, 807, 805, 802, 801, 800,
	798, 797, 791, 789, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1253, -1000, -1000, -1000, -1000, 1685, 8, 143934, -1000,
	699, 8, -1000, -1000, 787, -1000, 39744, 39744, 39744, -1000,
	-1000, 2756, 55772, -1000, 2798, -1000, 16, 16, 1068, 67829,
	-1000, 64686, 1068, 347, 928, 73508, -1000, 3439, -1000, -1000,
	786, 385, -1000, -1000, -1000, -1000, 28684, 3438, 143934, 143934,
	143934, 110338, 110338, 110338, 143934, 4348, 4347, 3759, 55772, -1000,
	-1000, 82236, 156981, 117794, 1612, 10, -1000, -1000, 4072, 87218,
	81615, 3491, 156981, 3490, 3434, 156364, 90380, 277, 3734, -1000,
	-1000, 782, 4338, -1000, -1000, -1000, -1000, -1000, 3727, 4336,
	4333, 4332, 143934, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2733, 3726, -1000, 9, -1000, 114064, 2733, 3725, -1000, 9,
	2733, 3724, -1000, 9, 113443, -1000, -1000, 2733, 3723, -1000,
	-1000, 276, 3722, -1000, -1000, -1000, 3721, -1000, 275, 3720,
	-1000, -1000, 372, -119, 3719, -1000, -1000, -1000, -1000, -1000,
	-1000, 164051, -1000, -1000, -1000, 155741, -1000, 3901, -1000, 143934,
	-1000, 55772, -1000, -1000, 4069, 1774, 3912, 4007, -1000, -1000,
	-8, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2969, 2970,
	1351, 2802, -1000, 3772, 1891, 38450, 3824, -1000, -1000, -1000,
	-1000, -1000, 358, 28684, 3305, -1000, -1000, 143934, -1000, 143934,
	3193, 3193, -1000, -1000, -1000, 4173, 4172, 3193, 3193, 143934,
	143934, -1000, -1000, -1000, -1000, -1000, 1207, -1000, -1000, -1000,
	-1000, 1764, 3010, -1000, -1000, -1000, 70360, 3433, 1557, 92910,
	92910, 92910, 92910, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 129609, -1000, -1000, 2465, 1988, 3867,
	2439, 110338, -1000, 2275, -1000, -1000, -1000, 3914, 3665, 143934,
	-1000, -1000, 3489, -1000, 84724, 3489, 112822, -1000, 112201, -1000,
	111580, -1000, -1000, 110338, -1000, 110338, -1000, 4331, 4329, 4326,
	-1000, -1000, 4325, -1000, 4321, 3907, -1000, 2222, 938, 48116,
	164051, 3906, -1000, 4320, 2353, 3486, 164051, -1000, 3662, 2003,
	1982, 143934, -1000, -1000, 143934, -1000, 143934, -1000, 143934, -1000,
	-1000, -1000, 2775, 1876, -1000, -1000, 2966, -1000, -1000, -1000,
	1206, -1000, -1000, 110338, 110338, 110338, 110338, 3431, 3127, 110338,
	1868, -1000, 47478, 3872, -1000, -1000, 3529, 4319, 2127, -1000,
	2177, -1000, 3430, 3889, -1000, 3428, 1735, 2245, 357, 4216,
	357, -1000, -1000, -1000, -8, -1000, 5985, 3718, 1709, -1000,
	2801, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2448, 3715,
	-1000, 2783, 3712, 2333, -1000, -1000, 2380, -1000, 1909, -1000,
	160740, 1624, -1000, -1000, -1000, -1000, 2542, 3711, 18, -1000,
	-1000, 2613, -1000, 4160, 3387, -1000, -1000, -1000, 160379, -1000,
	2131, -1000, 2544, 2425, -1000, 1537, 3706, -1000, 3226, 3226,
	102864, 3651, 71622, 70360, 85345, -6, -1000, -1000, -1000, -1000,
	-1000, -147, -1000, 27414, 164051, -1000, -1000, -1000, -1000, 164051,
	1089, -1000, -1000, 3703, -1000, 164051, 1077, -1000, -1000, 3702,
	-1000, 3037, -1000, 3482, -1000, -1000, -1000, 2873, 89747, 3426,
	-1000, 2871, 1205, -1000, 102243, 2475, 4311, -1000, 4310, -1000,
	-1000, 4309, -1000, 4308, 4307, 4306, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 101620, 2754, -1000, -1000, 1455, 1144, 92910,
	-1000, 2869, 4003, -1000, 100997, 1256, -1000, 1177, 2866, -1000,
	1779, 110959, 1084, 2863, -1000, 4302, 3968, 3132, 1177, 2860,
	-1000, -1000, -1000, -1000, -1000, 1180, -1000, 74132, -1000, 74132,
	-1000, 2025, -1000, 151386, 16, 110338, 4155, -1000, -31, -1000,
	-1000, -1000, 1240, -1000, 69095, -1000, 69095, 120907, 92910, 1144,
	3423, 79125, 164005, -1000, 1204, -1000, -1000, 164051, -1000, -1000,
	-1000, 3032, -1000, -151, 3224, -1000, 92910, 70360, 3422, 3015,
	-1000, 164051, -1000, -1000, -1000, -1000, 164051, -1000, -1000, -1000,
	92910, 1455, -1000, 128988, 100374, 278, -1000, -1000, 150765, -1000,
	2991, -1000, 143934, -1000, 2976, 3473, 3481, 2015, 2773, 3083,
	-1000, 46840, 3047, 59600, 2797, 200, -1000, -1000, 200, 200,
	37174, -1000, -1000, 38450, 1020, 87218, 87218, 28684, 1671, 55772,
	55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772,
	55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772,
	55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772,
	55772, 55772, 55772, 55772, 55772, 55772, 2460, 55772, 1574, 55772,
	55772, 55772, 55772, 2192, -1000, -1000, 2337, 646, 2401, 778,
	-1000, -1000, -1000, 4135, 4135, 4135, 1654, 1654, 1654, 164716,
	164716, 638, 4300, 909, -1000, 55772, -1000, 86, 68453, 55772,
	29317, -1000, 557, 13475, 3004, -1000, 556, 29985, -1000, -1000,
	-1000, 31295, 704, 46172, 55772, 1222, 164051, -1000, -1000, 1809,
	4166, 26775, 3503, 3297, 776, 1022, 1018, 34592, 33924, 33256,
	32588, 1017, 836, 55772, 55772, 55772, 55772, 55772, 55772, 55772,
	55772, -1000, -1000, 4170, -1000, 4166, -1000, -1000, 775, -1000,
	4166, 4166, -1000, 4166, 1665, 1658, 4166, -1000, 4166, 4166,
	8714, 8714, 45534, 44896, 44258, 60238, 43620, 55772, 31950, 42982,
	42344, -1000, 62152, 143934, 8, 4068, 143934, 55772, 261, -1000,
	10325, -1000, 261, 261, 774, -32, 164051, 3072, 3072, 66581,
	2789, 2648, 2648, 2648, -1000, 1068, 20985, 1068, 127123, 2666,
	1068, 1068, 349, 384, 554, 64055, 2798, 126502, 895, 772,
	31, 30, 29, -1000, -1000, 27, 26, -1000, -1000, 110338,
	771, 29317, 28684, 346, 2385, -39, 3061, 3059, 3058, 3057,
	-1000, 3056, 2753, -1000, -1000, -1000, 2263, -40, 1562, 110338,
	143934, 2068, -1000, -1000, -1000, -1000, 85345, 5, 85345, 143934,
	3869, 110338, -42, -1000, 156981, 11703, -49, -1000, 1507, 326,
	4166, -1000, -1000, -1000, 4299, 4297, -1000, 455, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 768, 767, 767, 767,
	-1000, 1229, 764, 461, 761, 432, 759, 758, 754, -1000,
	-1000, -1000, -1000, -1000, 3420, 110338, 143934, 2058, 84103, 117173,
	-119, 117794, 156981, -38, -1000, -1000, -1000, -1000, 110338, -1000,
	-1000, 110338, -1000, 76621, -1000, 143934, -1000, -1000, -1000, 4295,
	-1000, 110338, 110338, 2733, 3701, -1000, 110338, -1000, 110338, 271,
	3699, -1000, -1000, 143934, -1000, 110338, 110338, 143934, -1000, 143934,
	143934, 143934, 156981, 156981, 270, -1000, 110338, 1020, -50, 1380,
	-8, -1000, -1000, -1000, -1000, 1584, -1000, 2152, -1000, -1000,
	-1000, -1000, -1000, -1000, 1819, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1221, -1000, -1000, -1000, -1000, 4149, 4141,
	-5, -1000, -1000, 28684, -1000, 2298, -1000, -1000, -1000, -1000,
	143934, 143934, -1000, -1000, 143934, 143934, -1000, -1000, 2341, 110338,
	3477, -1000, -1000, 92910, 70360, -1000, 128365, 1144, 1144, 1144,
	1144, -1000, -1000, -1000, -1000, 4294, 4293, 4292, 4291, -1000,
	-1000, 1201, 110338, 143934, 110338, -1000, 3181, 2030, -1000, 322,
	-1000, 156981, -1000, 156981, 143934, 110338, -1000, -1000, 1201, 143934,
	1201, 143934, 1201, 143934, 1201, 1201, -1000, -1000, -1000, -1000,
	-1000, 86, 86, 55772, -1000, -1000, 164051, -1000, 55772, -1000,
	-1000, 1874, 4288, 2052, -1000, 3475, -1000, 3474, -1000, 64,
	321, -1000, -1000, 4168, 2318, -1000, 4210, -1000, -1000, -1000,
	-1000, -1000, -1000, 110338, 3418, -1000, -1000, -1000, -1000, 4287,
	3855, 164051, -1000, 89114, 2232, -1000, -1000, -1000, -1000, 110338,
	110338, 110338, 110338, 143934, 3800, -1000, 143934, 3789, 3799, 110338,
	-1000, 4215, -1000, -10, 1919, 672, 1560, -1000, 99751, 2870,
	3866, 4282, 3123, 3852, 2012, -1000, 1871, 753, -1000, 3986,
	97886, 4020, 4038, 1567, -1000, 3417, -1000, -1000, -1000, 1090,
	2077, 2226, 1497, 1493, 97886, 2783, -1000, 87218, -1000, 3130,
	3964, 1587, 1611, 1587, 1587, 1603, 1592, -1000, 97886, 2216,
	1490, 1488, 3119, 1483, 2214, 1479, 3765, -1000, -1000, 2752,
	2823, -1000, -1000, -1000, -1000, 2102, 3186, -1000, 2975, 1577,
	1577, 143934, -1000, 1477, -1000, -1000, 1979, 2070, -1000, -1000,
	127744, 2081, -1000, 1475, 1472, 145176, 4086, 2394, 2663, 948,
	2428, -1000, 1571, 1469, 3416, -1000, -1000, -14, 4019, 4036,
	1567, -1000, -1000, 3413, 1468, -1000, 1244, -1000, -1000, -1000,
	3962, 110338, 28684, 1867, 1865, 1844, 2213, 1467, 4, -1000,
	4013, 2007, -1000, 4114, 92910, -1000, 2888, 1903, -1000, 1455,
	1455, 123397, 143934, -1000, -1000, -1000, 3931, 3929, -1000, -1000,
	1466, 1465, -1000, 1218, 7205, 3792, -1000, 156981, 1218, 1218,
	2304, 3698, 3177, 1972, -1000, 3221, 1063, 3219, -1000, -1000,
	1063, -6, 85345, 143934, 311, -1000, 55772, 86, 55772, 86,
	-1000, 3997, 3692, 4067, -1000, 2335, 3690, 4281, 749, -1000,
	-1000, 2993, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 747,
	2859, 3412, 143934, 159, -1000, 110338, -1000, 4065, -1000, 3687,
	156981, 2783, 2858, -1000, 99130, -1000, 3679, 2450, 591, 2857,
	-1000, 828, 4278, 3641, -1000, 150144, -1000, 3901, 1691, 3638,
	1320, 824, 4064, -1000, 824, 77253, -1000, 143934, -1000, 16,
	744, 94152, -52, -57, 553, -1000, 143934, 143934, 3808, 2469,
	2467, -1000, 1169, 70360, -1000, 70360, -58, -1000, -151, 3214,
	70360, -1000, 1144, -105, 1063, -1000, 1063, -1000, -1000, 97886,
	-1000, 2976, 3473, -1000, -1000, -1000, -1000, -1000, -1000, 1956,
	2709, -1000, 3019, -1000, 1918, -1000, -1000, -1000, 164051, 60876,
	-1000, -1000, 164051, 2257, -1000, 58962, 58324, -1000, -1000, 2060,
	110338, 3078, -1000, 3078, -118, -1000, 161176, 3018, 110338, -5,
	38450, -1000, -1000, -1000, -1000, -1000, 1088, 879, 879, 1595,
	1595, 1595, 1595, 3996, 498, 6761, 5808, 342, 342, 6265,
	6265, 6265, 6265, 6265, 342, 634, 1654, 1654, 634, 634,
	634, 634, 634, 1654, 1654, 634, 1654, 342, 342, 342,
	1654, 164716, 164441, 9897, 55772, 55772, 1464, 2334, 646, 8786,
	55772, 11344, 11344, 11344, 11344, -1000, 2559, -1000, -1000, -1000,
	-1000, 3409, 746, 60238, 60238, -1000, -1000, -1000, -1000, 30640,
	55772, -1000, -1000, -1000, -1000, 41676, -1000, -1000, 160306, -342,
	551, -1000, 310, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 548, -102, 7,
	-1000, 55772, 55772, 55772, 547, -1000, 305, 55772, 143934, -1000,
	19940, 894, -60, -1000, -64, 1703, -1000, 55772, -1000, -1000,
	1463, -1000, 1458, 1457, 1454, -1000, 727, 545, -1000, 304,
	-1000, 2646, 726, 722, 55772, -1000, -1000, -1000, -1000, -1000,
	160063, -1000, -1000, 159869, -1000, -1000, 159626, -1000, -1000, 159381,
	-1000, -1000, -1000, -1000, -1000, 163726, 19452, 18029, 17591, 8004,
	16875, 15593, -65, 542, -70, 4166, 537, 536, 535, 1087,
	1085, 534, 532, 531, -71, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -73, 530, -1000,
	3406, -102, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	527, -1000, 526, -1000, 163615, -102, 524, 6555, -1000, 60238,
	60238, 60238, 60238, 521, -1000, 161056, -1000, 163336, 41038, 41038,
	41038, 520, 163290, 55772, -102, -89, -1000, -90, -1000, -1000,
	-1000, -1000, 612, -99, -1000, -100, 1165, 39744, 65333, 28684,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1165, 1165, 55772, -1000, 55772, 3029, -1000, -1000,
	-1000, -1000, 3028, 2307, 3072, 66581, -1000, -1000, -1000, -1000,
	127123, -1000, 4155, 3440, -1000, 127123, -1000, -1000, 143934, 699,
	-1000, 127123, 127123, 28684, 1068, -1000, -1000, 143934, 698, 1068,
	127123, 867, -1000, -1000, -1000, -1000, -1000, 518, 76000, 7,
	303, 28684, 1177, -1000, -1000, 3160, 3160, 3160, 3160, 3160,
	110338, -1000, -1000, 156981, 1452, 2, -67, 3212, 3210, 3202,
	-6, 85345, -6, -147, 143934, 3, 4110, -278, -1000, 2557,
	-1000, 87218, -1000, 908, 1379, 28684, -1000, -1000, -1000, -1000,
	4166, 156981, 3404, 250, 3194, 3191, 3190, -1000, 2750, 115931,
	220, -119, 156981, -1000, 277, -106, -1000, -1000, 86587, 80991,
	-1000, 2654, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4272,
	-1000, 2733, -1000, -1000, 110338, 2733, 2733, -1000, 110338, 110338,
	2733, -1000, 276, -1000, -1000, 275, -1000, -1000, -119, -1000,
	1203, 38450, -1000, 1584, -1000, -1000, 1856, -1000, 2462, -1000,
	1655, -1000, -1000, 38450, -1000, 3812, -1000, 2202, -1000, -1000,
	-1000, -1000, 1872, 1144, 1696, 3185, 1144, -195, 719, -1000,
	1046, 1045, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15, -1000, 2211, 2289, 156981, 143934,
	-119, -119, -19, -1000, -1000, 301, 2, -1000, 1201, -1000,
	1201, -1000, 1201, -1000, -1000, -1000, -1000, 164051, 164051, -1000,
	-1000, -1000, 2045, 2037, 143934, -1000, 143934, 3472, -1000, 143934,
	-1000, -1000, 110338, -1000, 4269, -1000, -1000, 28684, 143934, 110338,
	28684, 110338, 3471, 3457, -1000, -1000, -1000, 143934, -1000, -1000,
	143934, -1000, -1000, 3707, 143934, 143934, 110338, -1000, 124639, 143934,
	-1000, 2623, 156981, -1000, 2855, 149523, 2840, 148902, 87218, -1000,
	-1000, 717, 1100, 3017, 3014, 1314, 143934, 143934, 3011, 148281,
	147660, -1000, 4268, 143934, 2555, 55772, 124639, 3960, 2672, 5637,
	86, 86, -1000, 86, -1000, -1000, 715, 1660, 110338, 110338,
	143934, 156981, 110338, 2261, -1000, -1000, -1000, -1000, -1000, 98507,
	-1000, -1000, 1587, -1000, -1000, -1000, 1587, -1000, 1587, 2783,
	2246, 143934, 156981, 110338, -1000, -1000, -1000, -1000, 143934, 143934,
	156981, 2743, 2822, 2741, 3184, -1000, -1000, -1000, -1000, -1000,
	-1000, 156981, 147039, 2426, 146418, 2417, 2412, -1000, -1000, -1000,
	2393, 2408, 2606, 2195, 143934, -1000, -1000, -1000, -1000, -1000,
	1683, -1000, 948, 1451, 3401, 55772, 55772, 2582, 86, 86,
	-1000, 86, 712, 28684, -1000, 1527, -1000, 3484, 143934, 4209,
	145797, 4208, 143934, 143934, 143934, 156981, 3877, 143934, 1, -1000,
	2104, -1000, 4114, -1000, 1044, -1000, -105, 0, -195, -147,
	2438, 143934, 156981, -1000, 145176, 7205, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2558, 3188, 1323, 143934, 1537, -1000, -1000,
	2191, 1449, 1447, 97886, 2552, 2190, 2286, 70360, 1173, 70360,
	3126, -1000, -1000, 26136, 164051, -1000, 164051, -1000, 83480, 92910,
	92910, 2791, 143934, -1000, 77877, 143934, 94773, 1137, 3635, 74754,
	-147, 1144, 1455, 3512, 2067, 143934, -1000, -1000, 2783, 3631,
	591, 2854, -1000, 156981, 1255, 4062, 3630, 711, 4267, 4266,
	-1000, 110338, 2739, 2853, -1000, -1000, 144555, 3592, 948, 143934,
	1165, 66581, 2407, -1000, 72877, 1300, 143934, 2306, 214, -1000,
	-1000, -1000, 42, 143934, -1000, 921, -1000, -1000, 744, 744,
	1144, 70991, -107, -1000, 300, 706, 1040, 1038, -1000, 2926,
	-1000, -151, -1000, 92910, 1169, 70360, -151, 3182, 3390, -1000,
	-1000, 1202, -1000, -1000, -1000, -1000, 1346, -1000, 2257, 2707,
	-1000, 704, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2948, -1000, -1000, 37174, 1071, -1000, -1000, 110338, 14,
	-5, 55772, 55772, 8354, 7219, 55772, 60238, 60238, -1000, 55772,
	6994, -1000, -1000, -1000, -1000, -1000, 3375, 703, 55772, 87218,
	5977, 5842, -1000, 517, 14380, 634, -1000, 55772, -1000, 748,
	-1000, 515, 40400, -1000, 162112, -7, -108, -1000, 21639, -102,
	-109, -1000, -1000, 907, -1000, 3587, -1000, 55772, 162857, 2917,
	2471, 2293, 2110, 4166, 4207, 25497, -1000, 78501, 1217, 2673,
	159194, -1000, -1000, -1000, -1000, 87218, 87218, 55772, 55772, -1000,
	55772, 55772, 55772, -1000, -1000, -1000, 4166, 512, -1000, -1000,
	1080, -1000, -1000, -1000, 1080, -1000, -1000, 1587, -1000, 1587,
	-1000, 55772, -1000, -1000, 3373, 55772, -1000, 87218, 87218, 60238,
	60238, 60238, 60238, 60238, 60238, 60238, 60238, 60238, 60238, 60238,
	60238, 60238, 60238, 60238, 60238, 60238, 60238, 60238, 60238, 3006,
	60238, 4130, 4130, 4130, 1195, -1000, 3454, 3373, 55772, 55772,
	87218, 505, 503, 502, -1000, 55772, -102, -1000, -1000, 12459,
	702, -1000, 2937, -1000, 143934, -1000, 3291, -1000, 55772, -1000,
	-114, -1000, 2798, -1000, -1000, 3291, 3291, -116, 164051, 66581,
	66581, -1000, 701, 55772, 3027, -1000, -1000, 892, -333, -1000,
	1032, -1000, -1000, -1000, -1000, -1000, -1000, 1030, -1000, 699,
	-1000, -1000, -1000, 298, 127123, 698, -1000, 143934, 127123, 891,
	-1000, -117, -1000, -1000, -122, -1000, 126502, 501, 28684, -1000,
	1165, 4304, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3048,
	-278, 156981, 156981, 2188, 2179, 2168, -6, -147, 2697, -1000,
	3304, 4206, -1000, 4158, 903, 889, 201, 500, -119, 156981,
	156981, 2160, 2154, 2143, 80370, 3371, 156981, -1000, -1000, -1000,
	77877, 87218, -1000, 87218, -1000, -1000, -1000, -1000, 2733, -1000,
	-1000, -1000, 271, -1000, -1000, -1000, -1000, 3120, -1000, -8,
	-1000, -1000, -1000, 55772, -1000, 1147, -1000, -1000, -1000, 110338,
	70360, -1000, 123397, 123397, 92910, 92910, 24858, 143934, 3181, -119,
	-1000, 87842, -1000, -1000, -1000, -1000, -1000, 1201, -1000, 4205,
	-147, -1000, -1000, -1000, -1000, -1000, 2584, 2778, 2584, 2280,
	2278, -1000, -1000, -1000, 3864, 697, 1443, 1441, -1000, -123,
	-1000, 1025, -1000, -1000, -1000, -1000, -1000, 3309, -1000, 3629,
	-1000, 2852, -1000, 1304, 2849, 2208, -1000, 55772, 695, 3131,
	694, 691, 4265, 2575, 4263, 1317, 3626, 2733, 3623, 2733,
	-1000, -1000, -1000, 1097, -1000, 164051, -128, -1000, 2672, -1000,
	690, 689, -1000, -10, 1906, 635, 1438, 1188, -1000, -1000,
	55772, 55772, 125881, -1000, 563, 3881, 13, -1000, -1000, -1000,
	2142, 1436, 1432, -1000, -1000, -1000, -1000, -1000, 2783, 2137,
	1430, 1428, -1000, -1000, -1000, -1000, -1000, -1000, 3526, 3095,
	2818, -1000, -1000, -1000, -1000, 2847, -1000, 143934, -1000, 3605,
	143934, 3257, 948, 143934, 3881, 3310, 1187, -1000, 3519, 3517,
	1079, 143934, 55772, 55772, 162638, 162548, -1000, 1186, -1000, -1000,
	55772, -1000, -14, -1000, 1422, 4026, 2845, 110338, -1000, 2733,
	3597, 1421, -1000, 1419, -1000, -1000, -1000, 4012, 4011, 1439,
	2007, 92910, 70360, 2809, -1000, 3995, 2696, 4138, 4114, 70360,
	-1000, -1000, -1000, -1000, 4138, -1000, -1000, -1000, -1000, 88481,
	-1000, -1000, 1218, 143934, 156981, 110338, 2201, -1000, -1000, 115931,
	116552, 143934, 3177, 1063, -1000, 3002, 1063, 1173, 3370, -1000,
	3069, -1000, -1000, 143934, 1185, 499, -15, -1000, 1480, 4260,
	497, -131, -16, 87218, -1000, -1000, -1000, -1000, 2840, 110338,
	688, 143934, 1494, 3114, 143934, 143934, 4061, -1000, 2740, 783,
	110338, 1136, -1000, 4155, -1000, -1000, -1000, 143934, 39744, -1000,
	3999, 110338, 4060, 3594, 1177, 110338, 86, 110338, 4182, -1000,
	-1000, 4058, 110338, 3590, 2738, 2844, 2982, 948, 93531, 1177,
	2671, -37, -1000, 2306, 39088, 3879, -133, -1000, -1000, -1000,
	1165, 77253, 66581, 55772, 4258, -136, -1000, -1000, -1000, -1000,
	-1000, 92910, 1144, 143934, 143934, 4254, 92910, 92910, 92910, -17,
	685, -1000, 1010, 1007, 1002, -1000, -1000, -1000, -1000, -1000,
	-1000, 997, 996, 992, 991, -1000, -1000, 1169, -1000, -1000,
	-151, 1169, 70360, 86, -1000, 2691, -1000, 2702, -1000, -1000,
	-1000, -1000, 3086, 3871, 28684, 3992, 11344, 55772, 55772, 1319,
	1163, 425, 11344, 55772, 55772, 87218, 9474, -152, 55772, 55772,
	-1000, 55772, 888, 164051, -1000, 4204, 55772, 494, 493, -1000,
	-1000, -1000, 4156, -1000, -1000, -1000, 164051, 55772, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 484, -1000, 189, -1000, -1000,
	-1000, 153249, -1000, 55772, 481, 3959, -1000, 479, 473, 11939,
	388, 159104, 158678, 158433, 468, -1000, -1000, -1000, 465, 463,
	164051, 3454, 164051, -1000, -1000, 1179, 1179, 1579, 1579, 1579,
	1579, 4130, 579, 1219, 453, 351, 351, 351, 1127, 1195,
	1195, 351, 351, 351, 1195, 3369, 3009, 683, 6072, -1000,
	-1000, 164051, 164051, 462, -1000, -1000, -1000, -102, 459, 12459,
	-1000, -1000, 3286, 3958, 164051, -1000, 66581, 3286, 3286, -1000,
	-1000, 2307, 143934, 164051, 66581, -1000, 3440, -1000, 22935, 22290,
	-1000, 28684, -1000, -1000, -153, -1000, 87218, -1000, -1000, -1000,
	4155, -1000, 76000, -1000, -1000, 160, -1000, 4304, -1000, 989,
	-1000, -1000, 92910, 92910, 4252, 4251, -1000, 4203, 4198, 2566,
	4195, 3160, -1000, -278, -254, 143934, 143934, 143934, -1000, 2695,
	-1000, 887, 4249, 902, 28684, -1000, -119, -119, 143934, 143934,
	143934, 3365, 110338, 143934, 2090, 156981, -119, -1000, -1000, -1000,
	-1000, -1000, -1000, 3807, 164051, 3452, 3273, 3271, 1144, 1144,
	-1000, -155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 28684, 1746, -1000, 682, 679, 143934, 143934, -1000,
	124639, 38450, 1879, 125260, 143934, 3581, -1000, 3573, -1000, 1314,
	6855, 158353, 67205, -1000, 67205, 143934, -1000, -1000, -1000, -1000,
	2259, 1778, 4248, 1366, -1000, 3916, 143934, -1000, 143934, -1000,
	-1000, -1000, 124639, -1000, 143934, 143934, 110338, 143934, -1000, 156981,
	3532, -160, 164051, -18, -1000, 988, -1000, 1597, -1000, 24219,
	143934, 156981, 110338, 143934, 156981, 110338, 143934, -1000, 3093, 3565,
	1299, 143934, -1000, 3558, 143934, 1294, -1000, -1000, 143934, 2633,
	-1000, -1000, 3515, -1000, 164051, 162157, 86, 55772, 3530, -165,
	28684, -1000, 4194, 4192, 3548, 3920, -1000, 143934, 4190, 143934,
	110338, 3806, -1000, -1000, -1000, -1000, 983, 981, 980, 964,
	960, 4125, 123397, -1000, 1175, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2136, 1416, 1413, 2736, 2735, 2693, -19, 2552,
	1173, -20, 677, -1000, 1173, -1000, 92910, 70360, 2732, 4246,
	2297, 77877, 55772, 55772, -1000, 3121, -1000, 120284, 94773, 2765,
	-1000, -1000, 67205, 676, 143934, 675, 143934, 674, -1000, 86,
	-1000, 4245, 124639, 670, -1000, 1133, 2689, -1000, 4152, -1000,
	3521, -1000, 878, -1000, -1000, 205, 156981, 2783, 86, 110338,
	-1000, 591, 1168, 591, 457, -21, -1000, 3568, 1312, 28684,
	110338, 3544, 2984, 948, 93531, -1000, 1691, 3083, -1000, -25,
	-1000, 583, 86, 2671, -1000, -37, 164051, -1000, 959, 456,
	-1000, 3805, -1000, -1000, -166, -1000, -1000, 5541, 5541, 92910,
	70360, 92910, 92910, 92910, 70360, 92910, -1000, 1169, -1000, -151,
	-1000, 2906, -1000, -1000, -1000, -1000, 3871, 11344, 11344, 55772,
	55772, 55772, 11344, 9474, -168, -1000, 11344, 11344, -102, -1000,
	-1000, 162112, -1000, -1000, -1000, 164051, -1000, 23580, 2603, -1000,
	157925, -1000, 37174, -1000, -1000, 55772, 55772, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 60238, 3362, 665, 87218, -1000,
	-1000, 438, 1181, 55772, 57686, 2798, 1181, 1181, -1000, -173,
	-1000, -1000, -1000, 4155, -1000, 4155, 160, -1000, 143934, -1000,
	-1000, -1000, 28684, -1000, 92910, -1000, -1000, -1000, -1000, -1000,
	4244, 4243, 2815, 4242, 4241, -1000, -1000, -1000, 3520, -161,
	-171, -215, -1000, 900, -1000, 4240, -1000, 193, 190, 188,
	156981, 3358, 185, 3176, 3170, -119, -1000, 86, -1000, -1000,
	-1000, -1000, -1000, -1000, 110338, 110338, 55772, 55772, -1000, -1000,
	-1000, -1000, 3165, 4055, -1000, 2406, -1000, 143934, 143934, -1000,
	143934, -1000, 28684, 143934, 3311, 1529, -1000, 1100, 3005, 662,
	60238, 1341, 110338, 1103, 3267, 3260, -1000, 4081, 3955, 3220,
	-175, -1000, 143934, 55772, 143934, -178, -180, 2811, -1000, -1000,
	1340, 1517, 55772, 1335, -1000, -1000, -1000, 87218, 660, 2733,
	2733, -1000, -183, -186, -1000, -1000, -1000, 55772, 1410, 143934,
	37812, -1000, 4239, 3881, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 143934, 143934, -1000, -1000, -1000, 143934, 3881, 143934,
	-1000, 55772, -1000, 161833, 55772, 1400, -1000, -1000, -1000, 4187,
	2733, 28684, 2733, -1000, 2733, 3920, 1365, 92910, 55772, 1770,
	70360, 70360, -1000, -1000, -1000, 2767, 143934, 156981, 110338, 1952,
	1952, 3363, -1000, -1000, -1000, 2809, 2809, -1000, -46, 1173,
	92910, -1000, 1954, -1000, 164051, 164051, 2594, 4238, -1000, -1000,
	-1000, -1000, 3003, -1000, -1000, -1000, 143934, 2996, 3225, -188,
	67205, 658, 67205, 654, 143934, 1166, -1000, -189, 94773, 1137,
	-1000, 1133, -1000, -1000, -1000, 74132, -1000, -1000, -1000, 591,
	4051, -1000, 3118, 4050, -1000, 4185, 651, 650, 143934, 2729,
	649, 28684, 3865, 948, 93531, -1000, 3592, 2306, -1000, 2832,
	143934, 3848, -1000, 3083, 646, 1144, 645, 1144, -1000, -194,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1169, -55,
	-1000, 4048, 641, 1024, -1000, -1000, 11344, 11344, 11344, -1000,
	436, -1000, -1000, 2671, 3954, -1000, -63, 157695, 157650, 5826,
	60238, 87218, -196, -1000, -1000, 143934, 164051, -76, -1000, 164051,
	640, 639, 581, -1000, -1000, -1000, 868, 864, -1000, -1000,
	-1000, -1000, 4237, -1000, -1000, -1000, 156981, 156981, 156981, 4236,
	-1000, 156981, 156981, 156981, -119, 156981, 156981, 2135, 2124, -1000,
	-1000, -1000, -197, -199, 124018, 143934, -1000, -1000, 2208, 2219,
	-1000, -1000, 143934, 2843, -1000, -1000, -1000, 1164, 55772, 6072,
	60238, 637, 55772, -1000, 632, 619, 4049, 3778, -1000, 3107,
	3356, 2360, 67205, -1000, 3871, -1000, 157605, -1000, 1308, 2435,
	-1000, -1000, -1000, -1000, 164051, 60238, 3920, 67205, -1000, -1000,
	618, 617, 164051, 614, 955, 3351, -1000, -1000, -1000, -1000,
	-147, -147, -1000, -1000, 164051, 86, 164051, 613, 4026, -1000,
	-1000, -1000, -1000, 2733, 110338, -1000, 164051, -1000, -1000, -1000,
	-1000, 954, -1000, -1000, -1000, 1394, -1000, -1000, -1000, -1000,
	-1000, 4235, 3350, 115931, -1000, -205, 2454, -1000, 87218, -1000,
	1137, -1000, -1000, 2765, 601, -1000, 1130, 3038, 3038, 1308,
	-210, 67205, -212, 67205, -218, 2715, 3113, -1000, 433, 4047,
	1133, 1165, -1000, 4046, 86, 3804, -1000, 86, -1000, 4182,
	67205, -1000, 110338, 67205, 2724, 2520, 2960, 93531, -1000, 2982,
	-1000, -1000, -219, 143934, 2306, -1000, -1000, 92910, -1000, -1000,
	-1000, 2906, -1000, 143934, -1000, 143934, -1000, 2560, 55772, 37174,
	-1000, -1000, 5826, -220, -1000, -83, -1000, 4044, 57686, 4234,
	4232, 4225, -1000, -1000, -1000, -278, -278, -278, -1000, -119,
	-119, -119, -119, -119, 143934, 143934, -1000, -1000, -1000, 2400,
	-1000, 2840, -1000, -1000, 3541, -1000, 3282, 598, 20264, 6072,
	2940, 143934, 17810, 2783, 2783, -1000, 4029, 3343, -1000, -1000,
	2582, 596, -1000, -1000, -1000, -1000, 1071, 143934, 1130, 3281,
	110338, 6072, 1313, -221, 2584, 2584, 55772, 36536, 2625, -1000,
	55772, -1000, -1000, 3920, 70360, 156981, -1000, 156981, 2716, -1000,
	3323, 7757, -1000, 2715, 143934, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2360, 1308, -226,
	2582, -234, -1000, -1000, 3911, -1000, 3802, 3121, 86, -1000,
	86, -1000, 4223, 1168, 428, -241, 1312, -242, 110338, 2397,
	-1000, 948, -1000, 2984, 1165, 3754, -1000, -251, -1000, -252,
	-259, 424, 57048, 57048, 57048, -102, -118, -1000, 143934, 594,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 168, 146, -1000,
	-1000, 3498, 1065, -1000, 1027, 2220, 410, 1305, 408, 148,
	-1000, -1000, -1000, 3220, -1000, 143934, -1000, -1000, -1000, 1065,
	591, -1000, 55772, 1308, -260, -1000, 1293, -280, -1000, 1284,
	-281, -1000, 3345, -1000, -287, 2733, -1000, -278, 270, 1952,
	1167, 3994, 2700, 7757, -1000, 4178, 93531, -1000, -1000, -1000,
	2952, -288, -1000, -1000, 2582, 2360, 1308, 1130, 2582, 2884,
	-1000, 2594, 1166, -1000, -1000, -1000, -1000, 1308, 590, 2360,
	586, 1834, 948, -1000, -1000, 1587, 3865, 3604, 1600, 1144,
	-1000, -1000, -1000, 3559, -1000, 61514, 2763, 2274, 160813, 3559,
	3559, -1000, -1000, 156981, 156981, 143934, 1130, 3973, -1000, 1053,
	1052, 1793, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1165, -293, -1000, 2940, 164051, 1130, -1000, 2584, 3154, -1000,
	2584, 3336, -1000, 2609, -1000, -1000, -1000, -1000, 3329, -1000,
	2233, 4124, -1000, -1000, 4016, 55772, -1000, -1000, -1000, -1000,
	-1000, -1000, 1130, 143934, 1130, 2582, 2360, 1165, 1130, 2253,
	2251, 4221, 1137, 2715, 2360, 67205, 2582, 67205, 2572, -1000,
	143934, -1000, 2520, 1596, -1000, 1958, -1000, -1000, 2271, 4041,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -119, -119, -1000,
	-1000, 949, -1000, 3769, -1000, 1334, 2449, 2449, -1000, -1000,
	1027, -1000, -1000, 585, -1000, 584, -1000, 156981, 2676, -1000,
	-1000, -1000, 164051, -1000, -1000, 1165, 1130, 2582, 1426, 1165,
	-1000, 4220, -1000, 2715, -1000, 2582, -296, 1130, -301, 2626,
	-1000, -1000, -147, 2397, -1000, 1926, 77253, 2269, -1000, -1000,
	2662, 56410, 55772, -1000, 4116, -1000, -1000, 3043, -1000, 3220,
	55772, 55772, 270, 75376, 161458, 1426, 1165, 1130, -1000, 1224,
	-1000, 1426, -1000, 2952, 1130, 1308, 1165, 2360, 2108, 948,
	1834, 77253, -283, -1000, -1000, -1000, 164051, -1000, -1000, -1000,
	-1000, -302, -303, -1000, -195, 123397, -329, -1000, -1000, -1000,
	-1000, 1426, 1165, -1000, -1000, -1000, 1165, 2360, 1426, 2582,
	-1000, -1000, 2393, 156981, 2572, -283, -1000, 2582, 1385, -304,
	-1000, -1000, 1426, 1426, 2582, -1000, 1130, -1000, 2108, -1000,
	-1000, -1000, 577, -1000, -1000, -1000, 1130, 1165, -1000, 55772,
	1165, 1426, -316, 1426, -1000, 2582, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5175, 5174, 22, 5173, 5172, 5171, 5170, 5169, 5167,
	5165, 5162, 5160, 5159, 5156, 5142, 163, 5139, 5138, 5137,
	5136, 5135, 5134, 5132, 5131, 5129, 5128, 5125, 5121, 5114,
	5112, 5106, 5105, 5104, 5103, 5101, 5100, 5099, 5093, 5090,
	5087, 5086, 5083, 5082, 5081, 5080, 5079, 5078, 5076, 5074,
	5072, 5071, 5070, 5069, 5068, 5065, 5064, 5063, 5062, 5061,
	5057, 5056, 5055, 5054, 5052, 5050, 5049, 5044, 5041, 5040,
	5039, 5038, 5036, 5035, 5034, 5033, 5031, 5030, 5026, 5024,
	5021, 5020, 5018, 5017, 69, 5016, 5015, 5014, 5012, 5008,
	5007, 5006, 5003, 5002, 5001, 5000, 4999, 4996, 4990, 4989,
	4987, 4986, 4985, 4984, 4982, 4981, 4979, 93, 81, 4977,
	323, 4975, 4974, 4973, 4967, 4965, 4963, 4961, 4960, 4959,
	4958, 4957, 4956, 4954, 4950, 4948, 319, 4946, 30, 195,
	4943, 4938, 16, 4936, 4935, 318, 4934, 4933, 4932, 4930,
	4929, 330, 4927, 4926, 4925, 4924, 4919, 321, 4917, 4916,
	4915, 4914, 4911, 4910, 75, 168, 4909, 4908, 1513, 4907,
	4906, 4905, 4903, 4902, 4901, 4900, 316, 300, 4898, 4896,
	4895, 295, 208, 4893, 315, 4892, 4890, 4889, 4886, 4885,
	4884, 4882, 4878, 4875, 4873, 4872, 4871, 4870, 4869, 4866,
	4865, 4864, 4863, 4861, 4860, 4859, 4858, 4853, 4852, 4850,
	4849, 4848, 4847, 4846, 4845, 4842, 4841, 4840, 4839, 4838,
	4836, 4835, 4834, 4832, 4831, 4830, 4827, 4826, 4824, 4822,
	4819, 305, 251, 142, 4818, 4817, 4815, 4810, 4807, 4801,
	313, 311, 4800, 4798, 4795, 4793, 4791, 4014, 4788, 4785,
	4782, 4781, 4779, 4776, 4775, 4773, 4772, 130, 12, 378,
	4771, 4770, 99, 112, 110, 89, 119, 115, 4769, 4768,
	137, 4757, 155, 131, 4755, 135, 120, 38, 45, 193,
	290, 1714, 288, 4753, 4752, 4748, 289, 229, 4747, 286,
	4738, 4737, 4736, 4735, 4732, 4731, 87, 60, 247, 4730,
	156, 4729, 4728, 161, 192, 204, 207, 200, 206, 146,
	66, 116, 96, 73, 55, 20, 108, 260, 24, 246,
	5, 6, 298, 4727, 296, 13, 166, 14, 37, 4726,
	4725, 4724, 4722, 4317, 153, 4719, 309, 285, 198, 4717,
	4716, 4714, 1351, 4712, 4708, 62, 261, 266, 102, 122,
	91, 149, 4706, 178, 264, 53, 4705, 252, 72, 4702,
	4701, 136, 111, 10722, 11502, 4698, 4696, 170, 83, 106,
	6099, 237, 173, 249, 107, 165, 231, 221, 4695, 70,
	4692, 181, 187, 209, 850, 4690, 140, 4687, 4041, 117,
	211, 184, 6936, 4686, 4685, 4683, 101, 4682, 118, 4681,
	4680, 79, 23, 4, 8, 167, 46, 40, 7, 4679,
	48, 162, 59, 32, 4678, 41, 4677, 4674, 4672, 4671,
	58, 4670, 47, 203, 4669, 4668, 328, 4661, 105, 82,
	557, 4660, 44, 259, 4656, 281, 148, 4655, 4654, 232,
	225, 228, 227, 257, 4653, 74, 278, 4652, 4650, 4647,
	4646, 4645, 332, 160, 3, 152, 4644, 4643, 176, 4641,
	68, 284, 233, 4640, 85, 4639, 4638, 201, 67, 172,
	326, 191, 273, 143, 267, 214, 276, 4637, 4636, 4635,
	216, 4630, 4629, 272, 196, 4628, 4625, 254, 335, 109,
	61, 1, 205, 103, 283, 98, 220, 186, 4624, 238,
	177, 4623, 179, 4622, 104, 4621, 329, 210, 256, 52,
	10, 29, 132, 123, 125, 15, 280, 189, 239, 134,
	4618, 9004, 3319, 3518, 269, 4617, 188, 154, 95, 145,
	183, 312, 100, 4616, 4615, 4894, 4612, 4607, 4606, 4605,
	217, 4604, 4603, 250, 175, 182, 4602, 169, 245, 4598,
	129, 86, 65, 28, 151, 138, 324, 144, 268, 317,
	291, 4593, 4589, 4588, 213, 4583, 94, 226, 240, 4581,
	236, 299, 71, 4579, 693, 4577, 180, 2873, 84, 185,
	4576, 265, 4569, 4568, 4567, 4566, 4565, 4563, 4562, 4558,
	275, 4557, 4556, 4555, 35, 235, 4554, 234, 202, 224,
	150, 64, 219, 113, 4828, 147, 2566, 230, 49, 2,
	4553, 197, 4552, 2274, 77, 4551, 0, 15693, 10851, 14420,
	4544, 4540, 15352, 4539, 6005, 4535, 4531, 4530, 253, 92,
	4529, 4528, 4526, 126, 4525, 97, 4521, 4520, 88, 4519,
	34, 21, 25, 39, 36, 985, 331, 4518, 4516, 336,
	159, 26, 4515, 325, 274, 4514, 4513, 4512, 4511, 114,
	4510, 54, 4509, 50, 4507, 4506, 57, 18, 56, 4505,
	4504, 243, 190, 3939, 194, 171, 4500, 133, 4499, 4498,
	304, 78, 157, 4497, 4494, 307, 242, 255, 270, 4493,
	292, 4491, 244, 4490, 80, 33, 4488, 4487, 303, 127,
	124, 63, 301, 158, 51, 4487, 4484, 4483, 4482, 215,
	4481, 4479, 4478, 4476, 4475, 128, 174, 4474, 76, 4473,
	4472, 4468, 43, 279, 212, 4467, 19, 4465, 4462, 4461,
	258, 262, 297, 222, 248, 4459, 4458, 199, 4457, 4456,
	4455, 293, 4454, 4452, 4013, 306, 4449, 42, 4445, 4444,
	4443, 11, 4441, 4437, 241, 3700, 4436, 4433, 9, 4306,
	218,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
	4, 4, 4, 4, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 14, 14, 10, 10, 10, 10, 11,
	11, 11, 11, 11, 63, 63, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 20, 20, 20, 20, 20, 20, 20, 42,
	44, 43, 37, 37, 38, 38, 39, 40, 40, 45,
	47, 46, 48, 49, 49, 50, 50, 50, 13, 13,
	13, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	23, 23, 51, 51, 24, 24, 53, 53, 25, 25,
	54, 54, 675, 675, 675, 676, 676, 677, 677, 677,
	28, 56, 58, 58, 482, 482, 21, 22, 22, 22,
	22, 678, 678, 678, 678, 41, 29, 57, 34, 34,
	34, 34, 34, 250, 250, 250, 250, 27, 27, 52,
	52, 296, 296, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 674, 674, 298, 298, 297, 283, 283,
	284, 284, 285, 285, 679, 679, 299, 299, 299, 300,
	300, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 568, 568, 568, 599, 599, 599, 599, 601, 601,
	726, 726, 727, 727, 727, 727, 727, 157, 157, 456,
	456, 456, 72, 72, 72, 72, 72, 664, 664, 252,
	252, 252, 254, 254, 253, 253, 253, 253, 253, 253,
	253, 253, 96, 96, 97, 97, 291, 291, 290, 290,
	290, 290, 290, 290, 290, 685, 685, 684, 722, 722,
	683, 683, 686, 686, 686, 251, 251, 251, 93, 93,
	115, 115, 153, 153, 153, 153, 153, 153, 153, 154,
	154, 155, 155, 695, 695, 695, 255, 255, 255, 257,
	257, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 262, 19, 19, 136,
	136, 136, 136, 136, 136, 136, 131, 131, 603, 603,
	604, 604, 246, 246, 247, 247, 247, 247, 248, 248,
	249, 249, 249, 87, 87, 259, 259, 261, 261, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 75, 75, 75, 75, 75, 76, 76, 76,
	76, 76, 76, 77, 77, 77, 77, 77, 77, 78,
	78, 85, 85, 85, 85, 85, 85, 85, 85, 223,
	223, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 101, 101, 101,
	92, 92, 92, 92, 92, 104, 104, 696, 696, 697,
	697, 715, 701, 701, 702, 702, 705, 705, 705, 706,
	706, 706, 706, 706, 714, 714, 714, 714, 714, 708,
	707, 709, 709, 710, 710, 712, 712, 712, 712, 712,
	713, 713, 713, 713, 713, 713, 713, 713, 713, 713,
	713, 713, 713, 713, 713, 713, 713, 700, 716, 717,
	717, 718, 718, 719, 719, 719, 123, 123, 123, 721,
	721, 720, 720, 703, 703, 704, 704, 67, 711, 711,
	729, 729, 68, 69, 70, 71, 698, 698, 728, 728,
	728, 728, 728, 728, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 728, 728, 730, 730, 731, 731, 732,
	732, 732, 732, 732, 732, 732, 732, 732, 732, 732,
	732, 732, 732, 732, 732, 732, 732, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 105, 105, 414, 414,
	377, 377, 106, 106, 106, 107, 107, 108, 108, 108,
	108, 89, 89, 89, 661, 661, 662, 668, 733, 733,
	559, 559, 558, 558, 110, 110, 455, 455, 111, 111,
	111, 111, 111, 111, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 121, 121, 121, 121, 121, 122, 122, 122, 119,
	119, 119, 116, 116, 116, 114, 114, 114, 120, 120,
	120, 124, 124, 124, 667, 363, 363, 118, 118, 118,
	117, 117, 117, 430, 430, 431, 433, 432, 125, 125,
	125, 125, 378, 126, 126, 126, 126, 126, 126, 126,
	126, 129, 129, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 561, 561, 5, 5,
	289, 289, 288, 288, 288, 288, 6, 6, 6, 294,
	294, 293, 292, 210, 210, 210, 127, 127, 127, 523,
	523, 132, 132, 132, 471, 471, 133, 133, 133, 133,
	133, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 671,
	671, 423, 423, 326, 326, 326, 326, 145, 145, 145,
	145, 146, 146, 146, 146, 147, 147, 232, 232, 163,
	163, 163, 163, 162, 162, 162, 162, 162, 162, 162,
	162, 79, 79, 79, 80, 80, 81, 81, 82, 82,
	83, 83, 84, 84, 84, 84, 84, 166, 166, 33,
	33, 33, 33, 167, 167, 723, 723, 169, 165, 165,
	165, 165, 165, 165, 165, 164, 164, 168, 168, 168,
	168, 170, 172, 172, 172, 172, 172, 171, 171, 171,
	171, 171, 173, 173, 593, 593, 441, 441, 591, 591,
	615, 615, 592, 592, 384, 384, 384, 384, 384, 385,
	385, 385, 602, 602, 602, 602, 602, 602, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	233, 233, 233, 234, 234, 239, 239, 240, 240, 240,
	241, 241, 241, 238, 238, 238, 235, 235, 236, 236,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	244, 244, 242, 242, 243, 243, 735, 735, 734, 734,
	245, 245, 245, 245, 245, 203, 203, 203, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 442, 442, 206, 206, 206, 190, 190, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 258, 258, 258,
	258, 258, 182, 182, 182, 182, 182, 182, 182, 182,
	183, 183, 183, 176, 176, 192, 192, 192, 192, 192,
	184, 184, 185, 185, 185, 186, 186, 186, 186, 215,
	215, 189, 189, 189, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 177, 178, 178, 178, 178, 194, 194,
	194, 194, 478, 478, 478, 221, 221, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 218, 218, 218, 218, 218, 218, 687,
	687, 688, 688, 688, 211, 211, 211, 211, 211, 211,
	539, 539, 204, 204, 204, 204, 209, 209, 209, 209,
	188, 188, 188, 188, 213, 213, 213, 213, 461, 461,
	201, 201, 201, 202, 202, 202, 207, 207, 220, 208,
	415, 415, 205, 205, 212, 212, 212, 212, 214, 214,
	214, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 180, 180, 180, 180, 181, 181, 181,
	181, 216, 216, 200, 200, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 736, 736, 196, 196,
	196, 195, 195, 195, 195, 198, 198, 199, 199, 199,
	199, 199, 199, 199, 197, 187, 219, 669, 669, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 665, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 666, 666,
	666, 666, 666, 670, 670, 137, 137, 137, 137, 137,
	137, 137, 148, 148, 148, 148, 148, 148, 148, 151,
	151, 138, 138, 138, 138, 138, 138, 138, 141, 141,
	139, 139, 139, 139, 140, 140, 98, 98, 98, 98,
	98, 18, 18, 18, 99, 99, 317, 317, 267, 267,
	267, 402, 402, 268, 268, 392, 392, 392, 392, 263,
	263, 264, 264, 265, 266, 266, 100, 100, 737, 737,
	737, 680, 680, 680, 681, 681, 681, 681, 681, 681,
	386, 386, 387, 387, 503, 503, 503, 503, 503, 390,
	390, 390, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 400, 401, 401, 393, 393, 399, 398, 398, 397,
	397, 396, 396, 394, 395, 395, 395, 404, 404, 403,
	406, 406, 405, 502, 624, 624, 626, 626, 626, 626,
	626, 626, 626, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	479, 479, 738, 738, 739, 740, 622, 622, 622, 622,
	622, 623, 618, 618, 619, 619, 619, 619, 619, 388,
	388, 389, 389, 389, 389, 620, 621, 421, 421, 543,
	625, 625, 627, 627, 629, 741, 741, 741, 741, 741,
	741, 742, 742, 742, 501, 501, 500, 500, 499, 499,
	412, 412, 630, 630, 630, 630, 631, 631, 631, 631,
	631, 634, 633, 632, 632, 632, 632, 632, 103, 103,
	103, 458, 458, 457, 457, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 228, 228, 329, 329, 329, 95, 95,
	95, 15, 15, 15, 15, 15, 15, 15, 344, 344,
	16, 16, 16, 16, 682, 682, 682, 102, 102, 102,
	102, 102, 102, 410, 410, 410, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 673, 673, 672, 672, 330, 330, 744, 744,
	109, 109, 109, 109, 109, 109, 109, 109, 562, 562,
	563, 563, 94, 94, 94, 94, 94, 480, 480, 477,
	477, 476, 476, 420, 420, 541, 541, 541, 542, 334,
	334, 335, 335, 286, 286, 286, 481, 481, 481, 36,
	35, 26, 26, 30, 30, 31, 31, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 32, 32, 60, 60,
	60, 60, 61, 61, 61, 61, 64, 64, 65, 65,
	59, 59, 59, 59, 62, 62, 55, 55, 66, 66,
	66, 66, 66, 689, 691, 691, 690, 690, 694, 694,
	694, 694, 694, 694, 692, 692, 365, 365, 693, 693,
	724, 724, 725, 725, 144, 144, 149, 149, 149, 149,
	149, 150, 150, 150, 150, 152, 152, 152, 152, 161,
	161, 224, 224, 224, 224, 224, 224, 224, 73, 73,
	86, 86, 159, 746, 746, 746, 160, 160, 160, 225,
	225, 225, 225, 226, 226, 227, 227, 745, 745, 327,
	327, 496, 496, 497, 497, 747, 747, 498, 498, 498,
	498, 498, 320, 319, 321, 321, 322, 322, 91, 91,
	91, 308, 308, 307, 310, 310, 309, 311, 311, 312,
	312, 305, 305, 605, 605, 314, 314, 314, 315, 315,
	301, 301, 302, 302, 303, 303, 304, 304, 318, 318,
	600, 600, 748, 748, 135, 135, 135, 231, 231, 376,
	376, 376, 489, 489, 489, 413, 413, 341, 341, 495,
	495, 495, 495, 495, 454, 454, 454, 230, 230, 428,
	428, 444, 444, 445, 445, 555, 555, 446, 142, 142,
	143, 143, 158, 158, 271, 271, 269, 269, 269, 269,
	269, 269, 269, 269, 276, 276, 277, 277, 278, 278,
	279, 280, 280, 280, 280, 434, 434, 281, 281, 281,
	270, 270, 270, 272, 272, 272, 272, 272, 272, 272,
	275, 275, 275, 275, 282, 282, 282, 274, 274, 641,
	641, 641, 643, 643, 645, 645, 644, 644, 640, 640,
	642, 642, 743, 743, 460, 460, 460, 409, 411, 407,
	407, 408, 408, 418, 418, 416, 417, 417, 419, 419,
	540, 540, 540, 287, 287, 287, 451, 451, 451, 451,
	452, 452, 485, 485, 483, 483, 483, 483, 484, 484,
	486, 486, 486, 487, 487, 488, 488, 448, 448, 449,
	449, 450, 450, 450, 450, 519, 519, 273, 273, 273,
	425, 425, 425, 426, 426, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 510, 510, 508, 508,
	508, 508, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 545, 546, 546, 427, 427, 547, 492, 492, 493,
	493, 490, 490, 491, 491, 494, 494, 659, 659, 659,
	660, 660, 538, 538, 548, 548, 548, 548, 548, 548,
	534, 534, 535, 535, 536, 536, 537, 537, 556, 557,
	557, 464, 464, 464, 464, 462, 462, 465, 465, 465,
	465, 465, 463, 463, 549, 549, 549, 549, 453, 453,
	229, 229, 550, 550, 550, 550, 551, 552, 552, 553,
	553, 504, 505, 505, 564, 564, 564, 564, 566, 424,
	424, 424, 424, 424, 617, 616, 616, 565, 565, 565,
	565, 565, 565, 565, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 581, 581, 581, 581,
	581, 581, 581, 567, 567, 567, 567, 567, 567, 567,
	571, 571, 571, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 572, 572, 577, 577, 578, 578,
	578, 573, 574, 579, 579, 579, 579, 749, 749, 583,
	583, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	569, 569, 569, 576, 576, 576, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 472,
	472, 474, 474, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 513, 513, 513, 513, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 635, 635, 635, 635, 635, 635,
	635, 635, 515, 515, 638, 638, 639, 639, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 637, 637, 637, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 637, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 637, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 637, 637, 637, 637, 637, 637, 646,
	646, 647, 647, 649, 649, 650, 650, 651, 652, 652,
	652, 653, 654, 654, 648, 648, 655, 655, 655, 655,
	656, 656, 657, 657, 657, 657, 657, 658, 658, 658,
	658, 658, 525, 525, 526, 526, 532, 532, 532, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 383, 383, 382, 331, 331,
	331, 331, 331, 331, 439, 439, 437, 437, 437, 440,
	440, 438, 438, 436, 436, 435, 435, 522, 522, 520,
	520, 524, 524, 466, 466, 582, 582, 582, 582, 582,
	582, 582, 582, 467, 467, 467, 475, 468, 468, 469,
	469, 469, 469, 469, 516, 517, 470, 470, 470, 518,
	518, 527, 531, 531, 530, 529, 529, 528, 528, 506,
	506, 507, 507, 447, 447, 750, 750, 443, 443, 554,
	554, 554, 554, 611, 611, 380, 380, 429, 429, 379,
	379, 371, 371, 372, 372, 372, 372, 422, 422, 533,
	533, 584, 584, 585, 585, 586, 586, 587, 587, 588,
	589, 590, 521, 521, 352, 351, 338, 339, 350, 349,
	348, 337, 340, 345, 346, 347, 342, 343, 359, 358,
	357, 306, 313, 364, 366, 366, 369, 369, 370, 368,
	367, 367, 354, 355, 356, 560, 336, 373, 373, 374,
	374, 374, 375, 375, 375, 375, 332, 332, 332, 333,
	333, 360, 360, 361, 362, 362, 353, 353, 353, 323,
	323, 323, 324, 324, 325, 325, 598, 598, 595, 595,
	595, 596, 596, 596, 699, 597, 597, 597, 597, 594,
	594, 594, 594, 594, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 607, 607,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 609, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 614,
	614, 614, 614,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 6,
	4, 4, 6, 9, 6, 8, 4, 4, 5, 9,
	7, 9, 5, 6, 8, 7, 7, 9, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 1, 1, 1, 0, 1,
	6, 6, 4, 6, 2, 1, 4, 8, 7, 10,
	9, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	8, 4, 2, 3, 10, 3, 6, 4, 3, 1,
	3, 4, 4, 2, 1, 1, 3, 1, 3, 2,
	4, 3, 2, 3, 2, 0, 1, 1, 0, 2,
	0, 7, 10, 6, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 1, 1, 1, 1, 3,
	1, 3, 6, 4, 6, 7, 9, 6, 2, 2,
	3, 0, 8, 6, 8, 7, 2, 0, 1, 2,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 3,
	3, 3, 12, 3, 5, 4, 1, 3, 3, 3,
	3, 2, 4, 4, 4, 1, 1, 2, 1, 4,
	1, 0, 3, 3, 0, 4, 6, 0, 6, 4,
	4, 4, 5, 7, 6, 8, 7, 9, 2, 1,
	3, 1, 3, 3, 3, 0, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 1, 3, 3, 6,
	4, 9, 7, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 2, 2, 1, 2, 3, 3,
	4, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 4,
	3, 6, 6, 6, 6, 6, 8, 4, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 3, 9, 3,
	6, 3, 8, 5, 3, 12, 4, 2, 0, 1,
	0, 1, 1, 0, 1, 3, 1, 3, 3, 3,
	3, 2, 2, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 0, 1, 2, 2, 2, 1, 1, 1,
	4, 5, 1, 1, 1, 1, 3, 3, 2, 2,
	1, 2, 2, 2, 2, 1, 1, 1, 2, 1,
	1, 3, 0, 1, 4, 0, 4, 6, 3, 1,
	3, 2, 1, 3, 2, 1, 3, 5, 1, 2,
	1, 0, 6, 6, 6, 8, 1, 0, 4, 3,
	3, 4, 3, 4, 4, 4, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 1, 3, 0, 1, 2, 2, 1, 2,
	1, 6, 10, 5, 1, 3, 3, 1, 1, 0,
	2, 0, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 3, 5, 3, 1, 1, 3, 4, 6, 3,
	3, 5, 3, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 4, 3,
	1, 2, 3, 2, 2, 2, 4, 6, 3, 1,
	2, 2, 7, 3, 6, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 7, 4, 7, 8, 8, 9, 11, 11, 11,
	6, 2, 6, 9, 4, 7, 7, 10, 7, 10,
	10, 10, 13, 10, 13, 5, 8, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 4,
	4, 3, 4, 1, 1, 1, 1, 5, 4, 5,
	3, 3, 2, 2, 6, 3, 3, 3, 3, 4,
	4, 3, 1, 3, 3, 2, 2, 1, 3, 3,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 2, 1,
	2, 2, 2, 9, 2, 1, 0, 1, 1, 0,
	1, 2, 0, 2, 2, 0, 2, 2, 2, 2,
	1, 2, 3, 3, 4, 4, 4, 4, 3, 3,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 3, 6, 8, 3, 3, 3, 4, 8,
	6, 4, 5, 5, 5, 5, 3, 0, 1, 1,
	1, 1, 4, 4, 3, 4, 4, 3, 4, 4,
	1, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 5, 7, 4, 2, 6, 4, 3, 2,
	3, 4, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 3, 5, 3, 5, 3, 3, 4,
	4, 5, 0, 1, 1, 1, 1, 3, 2, 3,
	4, 3, 4, 3, 5, 3, 4, 4, 3, 4,
	5, 3, 4, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	6, 4, 2, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 5, 6, 4, 4,
	4, 4, 3, 4, 5, 4, 4, 5, 6, 5,
	5, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 6, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 2, 3, 2, 2, 3, 2, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 7, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 12, 15, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 1,
	1, 1, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 0, 1, 0, 1, 1, 0, 1,
	4, 1, 0, 3, 7, 7, 1, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 3, 6, 4,
	2, 3, 5, 5, 5, 2, 5, 5, 2, 2,
	2, 0, 1, 1, 3, 4, 10, 11, 12, 9,
	10, 5, 3, 1, 5, 9, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 6, 1, 3, 1,
	2, 0, 1, 2, 3, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 3, 0, 4, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	2, 3, 1, 4, 2, 3, 2, 2, 4, 7,
	3, 4, 6, 5, 7, 5, 5, 3, 3, 0,
	2, 2, 2, 2, 1, 1, 1, 8, 10, 11,
	8, 11, 5, 4, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 2, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 6,
	8, 8, 4, 7, 3, 0, 7, 10, 1, 1,
	1, 1, 1, 2, 3, 0, 3, 0, 3, 0,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	2, 1, 2, 3, 2, 2, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 15, 17,
	3, 1, 0, 4, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 7, 10, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 3, 0, 1,
	3, 0, 3, 1, 3, 1, 2, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	2, 2, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 670, -3, -225, -128, -125, -87, -85,
	-132, -133, -111, -134, -127, -156, -161, -142, -143, -144,
	-157, -163, -224, -233, -234, -235, -236, -245, -229, -177,
	-226, -227, -4, -72, -74, -88, -110, -112, -126, -136,
	-135, -137, -145, -153, -148, -131, -79, -158, -162, -174,
	-228, -230, -231, 33, 32, 108, 86, 167, 139, 149,
	221, 424, 476, 488, 441, 154, 464, 446, -168, -169,
	510, -73, -86, -160, -159, 79, 140, 185, 327, 456,
	594, 516, 54, 159, -7, -15, -33, -19, 30, 50,
	-75, -76, -77, -78, 68, -95, -90, -105, -96, -89,
	-92, -93, -101, -728, 111, -642, -113, -117, -152, -115,
	-124, -732, 175, 242, -138, -139, -140, 406, -146, -147,
	467, -149, -150, -151, 470, 176, -81, -80, 169, -269,
	-271, -165, -164, -166, -232, -175, -176, -178, -179, -180,
	-181, -183, -184, -186, -215, -187, -188, -189, -190, -191,
	-192, -193, -197, -218, -194, -195, -196, -199, -198, -200,
	-205, -201, -202, -203, -204, -206, -207, -209, -210, -211,
	-212, -213, -214, -216, -217, -208, -219, -185, -220, 584,
	533, 88, 480, 21, -8, -9, -10, -11, -12, -13,
	-14, -18, -17, -66, -5, -6, -20, -97, -91, -94,
	-98, -99, -100, -109, -102, -103, -104, -641, -114, -116,
	-119, -121, -122, -118, -120, -123, 465, 641, -272, -270,
	667, 646, 601, -182, -23, -28, -24, -25, -27, -29,
	-26, -30, -31, -32, -51, -56, -53, -54, -52, -55,
	-57, -58, -59, -60, -61, -62, -63, -64, -65, -35,
	-41, -42, -36, -37, -38, -39, -40, -43, -44, -45,
	-46, -47, -48, -49, -50, -21, -22, -34, -67, -68,
	-70, -69, -71, 628, 637, -275, -273, -274, -282, 502,
	609, 556, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, -378, 2, -354, -360, -361, -362, -353, -323, -609,
	-614, 4, -606, -612, 184, 258, 257, 259, 366, 21,
	22, 24, 23, 25, 26, 27, 28, 30, 31, 42,
	44, 45, 46, 48, 49, 50, 51, 52, 53, 54,
	58, 60, 64, 65, 66, 67, 68, 69, 70, 74,
	79, 80, 85, 86, 87, 88, 89, 90, 91, 92,
	98, 95, 96, 97, 99, 100, 102, 104, 105, 106,
	107, 108, 109, 110, 112, 113, 114, 116, 117, 118,
	126, 127, 128, 129, 130, 132, 139, 133, 140, 143,
	137, 142, 138, 144, 145, 147, 148, 149, 152, 153,
	154, 156, 157, 158, 160, 161, 162, 164, 165, 167,
	168, 169, 172, 170, 173, 171, 174, 175, 176, 177,
	178, 181, 182, 190, 191, 192, 197, 199, 200, 201,
	203, 204, 207, 208, 209, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 222, 226, 228, 229, 230, 231,
	232, 233, 234, 240, 241, 242, 244, 245, 246, 247,
	248, 252, 253, 254, 255, 262, 264, 270, 271, 276,
	272, 277, 278, 280, 284, 285, 286, 287, 288, 289,
	290, 292, 294, 293, 298, 296, 300, 301, 304, 305,
	306, 307, 308, 309, 313, 314, 310, 315, 316, 318,
	319, 322, 320, 323, 324, 321, 325, 328, 329, 330,
	331, 332, 333, 334, 335, 336, 337, 338, 339, 326,
	327, 342, 340, 344, 345, 346, 347, 348, 363, 365,
	358, 359, 360, 352, 353, 349, 354, 350, 351, 355,
	356, 362, 357, 368, 369, 370, 371, 374, 238, 263,
	376, 377, 380, 382, 399, 385, 386, 387, 390, 391,
	394, 397, 398, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 411, 412, 414, 415, 416, 418, 419,
	420, 422, 424, 425, 427, 428, 429, 431, 432, 433,
	434, 435, 436, 437, 438, 440, 441, 443, 442, 444,
	446, 448, 449, 450, 456, 457, 464, 458, 460, 461,
	462, 463, 465, 466, 467, 468, 469, 470, 474, 472,
	473, 475, 476, 478, 479, 480, 481, 482, 484, 486,
	487, 491, 492, 495, 493, 513, 514, 536, 488, 489,
	490, 494, 496, 497, 498, 499, 501, 500, 505, 503,
	504, 506, 507, 508, 510, 512, 515, 516, 518, 519,
	520, 521, 522, 523, 524, 527, 529, 530, 531, 532,
	533, 534, 555, 535, 537, 541, 542, 543, 544, 538,
	539, 554, 546, 547, 548, 549, 551, 552, 557, 558,
	559, 560, 561, 562, 564, 565, 567, 575, 588, 576,
	577, 578, 579, 581, 584, 585, 586, 587, 573, 589,
	590, 593, 594, 595, 599, 596, 600, 597, 598, 601,
	603, 606, 607, 608, 615, 613, 614, 616, 617, 619,
	620, 618, 622, 623, 624, 629, 630, 632, 633, 634,
	37, 55, 56, 59, 61, 63, 75, 76, 77, 81,
	134, 135, 166, 179, 180, 193, 210, 211, 223, 225,
	235, 236, 237, 261, 265, 266, 268, 274, 297, 373,
	375, 392, 396, 413, 417, 421, 423, 439, 483, 511,
	525, 540, 545, 568, 569, 570, 571, 580, 582, 609,
	610, 611, 621, 631, -378, 2, -354, 383, -347, 2,
	-323, -323, 424, 29, 2, 29, 412, 504, 559, 561,
	2, -671, -423, 552, 2, 29, -326, -323, 111, 221,
	502, -347, 2, -671, 221, -423, 26, 552, 2, -323,
	2, 397, 178, 207, 23, 28, 72, 83, 106, 152,
	177, 202, -731, 399, 432, 486, 506, 554, 565, 581,
	2, 614, 319, 503, 556, 252, 129, 586, 562, 494,
	-682, 491, 492, 397, 430, 478, 224, 602, -327, 2,
	488, -323, 319, 2, 670, 102, 80, 483, 507, -171,
	2, 309, 576, -172, -173, -170, 568, -593, 494, 478,
	342, -323, 670, 670, 670, 29, -336, 2, -323, -336,
	2, -237, 2, -336, -734, -244, -243, -242, 22, 457,
	192, 290, 205, 243, 347, 427, 203, 52, -237, 2,
	556, 252, 494, 129, 552, -358, 659, -360, 562, 2,
	-222, 507, 535, 231, 51, 50, 80, 29, 431, 85,
	404, 130, 136, 161, 587, 222, 552, 252, 253, 285,
	88, 101, 102, -478, 48, 278, 74, 277, 492, -687,
	491, -539, 557, 208, 496, 504, 551, 92, 290, 488,
	576, 578, 111, 603, 479, 634, 436, 437, 549, 450,
	546, 310, 170, 206, 4, 129, 342, 478, 509, 294,
	293, 588, 568, 309, 487, 407, 90, -745, 2, 576,
	-745, 2, 670, 670, 2, 556, 403, 614, 503, 207,
	129, 436, 252, 586, 50, 152, 28, 74, 562, 645,
	494, -682, 642, 643, 319, 136, -664, 2, -663, 4,
	-612, -606, -372, -371, 556, 562, 129, -362, -353, 659,
	-361, 670, 670, 670, 670, 2, 277, 278, 434, 433,
	507, 508, 29, 670, 670, 670, 670, 670, 670, 491,
	178, 2, 562, 177, -696, 23, 28, 72, 101, 106,
	136, 202, 399, 432, 506, 554, 558, 565, 581, -681,
	535, 74, 494, -680, -682, 388, 319, 586, 152, -476,
	129, 309, 219, 595, 561, 559, 592, 143, 264, 598,
	597, 670, 670, 670, 670, -129, 2, 667, 33, 32,
	-128, -132, 154, 516, 510, -262, 556, 269, 2, -323,
	670, 670, 670, 2, 277, 278, 491, 492, 29, 670,
	670, 205, -663, 552, 2, 670, 670, 670, 2, 29,
	277, 278, 491, 492, 269, 2, 74, 497, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, -743,
	2, 556, 576, 2, -745, 2, -745, 2, -746, 576,
	631, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, -270, -272, -271, 670, 670, 670,
	670, 670, 670, 670, 670, -222, 507, 2, 80, 29,
	29, -416, -418, 591, 267, 163, 389, -269, -271, 2,
	-641, 588, 507, -591, 2, -511, -615, -513, 657, 658,
	650, 553, 73, -382, 364, 635, -525, 136, 592, 383,
	-614, -514, -527, 166, 399, 483, -440, 257, 8, 9,
	5, 6, 7, -332, -515, -521, 583, 183, 372, -375,
	671, 10, 667, -638, -271, -526, 38, 225, 71, -595,
	-374, -333, -567, 268, -373, -353, -635, -636, 4, -606,
	-607, -596, -570, -578, -577, -574, -573, -575, -581, -323,
	-609, 83, 120, 121, 119, 124, 123, 312, 311, 125,
	122, 509, 602, 72, 37, 235, 236, 274, 373, 237,
	81, -637, 153, -608, 265, 266, 525, 56, 439, 193,
	135, 134, 375, 61, 59, 610, -579, 131, 568, 569,
	570, 571, 210, 211, 63, 179, 180, 396, 421, 545,
	580, 582, 223, 297, 47, 115, 206, 260, 239, 273,
	275, 279, 299, 302, 343, 361, 367, 393, 395, 477,
	517, -749, 611, 540, 75, 76, 198, -643, 442, -644,
	-347, -643, 670, 670, 672, 670, -407, -409, -411, 2,
	29, 150, 667, 2, -544, 2, -545, -549, -271, 291,
	-548, 667, -546, 665, -354, 384, -639, 484, -635, -636,
	-332, -353, -374, 4, -606, -608, 669, -412, 667, 129,
	494, 556, 84, 252, 101, 177, 207, -471, 667, -323,
	29, 383, 572, 672, -671, -423, -408, 429, -523, 667,
	383, 386, 205, 386, -671, 65, 99, -721, 235, 2,
	-720, -360, 323, 2, 2, 2, 2, 2, 235, -323,
	556, 128, 289, 2, 2, 2, 2, 2, 2, 2,
	-432, 235, 2, -430, -360, 614, -433, 235, 2, -430,
	-431, 235, 2, -430, -477, 2, 94, -337, 235, 2,
	-323, -363, 235, 2, -358, -323, 235, 2, -369, 235,
	2, -366, -323, -601, 235, 2, -599, 4, -606, 125,
	509, -511, 2, -158, 2, 65, -323, 614, 2, 513,
	2, 667, -171, 2, 77, 576, 47, 507, -172, 2,
	-497, 2, -498, -319, -320, -321, -556, -322, 276, 428,
	438, 638, 141, 364, 634, -723, 205, 649, 572, -591,
	-591, -591, -441, 669, -239, 58, -336, -735, -734, -735,
	-589, 29, -584, 8, -585, 657, 658, -589, -589, -735,
	-735, 2, 2, 2, 2, 2, -514, 2, -525, -222,
	2, 198, 604, 2, 8, 2, 243, -258, -603, 496,
	190, 437, 607, 2, -598, 10, -597, 5, 4, -606,
	-612, -607, -609, 83, 513, 2, 514, 80, -478, 634,
	80, 205, 2, 205, 2, -461, 2, 628, 429, 205,
	2, 2, -669, 2, 383, 222, 205, 2, 205, 2,
	205, 2, 570, 205, 2, 205, 2, -221, 508, 577,
	555, 433, 278, 2, -158, 625, -141, 198, 278, 277,
	-511, 625, 2, -688, 198, 492, -511, 2, 575, 287,
	171, 205, -461, 2, 205, 2, 205, 2, 205, 2,
	5, 2, 44, 434, 536, 2, 276, 428, 536, 2,
	534, 2, -354, 556, 614, 503, 129, 253, 500, 207,
	29, 2, 491, 178, 2, 2, 95, 96, 205, 2,
	205, 2, 220, 205, 2, 450, 205, 556, -442, 669,
	-442, 634, 2, -496, -497, 2, -549, 235, -354, 2,
	-351, -594, 4, -606, -612, -607, -613, 29, 32, 33,
	34, 36, 38, 39, 40, 43, 62, 71, 72, 78,
	82, 84, 94, 101, 111, 119, 120, 122, 121, 123,
	124, 125, 136, 141, 146, 150, 151, 155, 159, 163,
	183, 185, 198, 202, 205, 221, 224, 227, 243, 256,
	267, 269, 291, 295, 303, 311, 312, 364, 372, 378,
	383, 384, 388, 389, 410, 426, 445, 471, 502, 509,
	528, 550, 556, 566, 572, 574, 583, 591, 592, 602,
	604, 612, 625, 626, 627, 628, -614, 2, -549, 235,
	2, -357, 235, -549, -360, 2, -720, 2, -337, 2,
	-511, -675, 564, 173, 458, 2, -379, 235, -354, -356,
	-360, -358, 2, 491, -603, 2, 2, 2, -511, 2,
	-514, 2, 29, -366, 2, -599, 235, 2, 29, 29,
	614, 429, 269, 572, 672, -429, -371, -372, -590, 4,
	8, -422, -323, 669, -511, 2, -158, -141, 2, -511,
	235, 2, -158, 235, 2, -511, 235, 2, -158, 235,
	2, -323, 2, -683, 2, -722, -603, 235, 99, -323,
	2, 235, -323, 2, 207, -730, 486, 585, 323, 2,
	2, 581, 2, 106, 556, 128, 2, 2, 2, 2,
	2, 2, 2, 556, -342, 2, -323, 198, -558, 269,
	-366, 235, -367, 2, 503, -744, 442, -599, 235, 2,
	462, 614, -358, 235, 2, -358, 252, 271, -337, 235,
	2, 561, 559, 561, 559, 205, 2, 269, 2, 269,
	2, -550, 2, -551, -545, -552, 665, 384, -561, 2,
	-560, -597, 609, -129, 667, -129, 667, 507, 667, -603,
	-354, -354, -511, 2, -158, -141, 2, -511, 2, -158,
	2, -323, 2, -155, -603, -154, 667, 205, 603, -323,
	2, -511, 2, -158, -141, 2, -511, 2, -158, 2,
	-262, 198, 2, 129, 556, -453, -549, -496, 572, -416,
	-418, -222, 513, 2, -276, -451, -278, 198, -483, -484,
	-279, 303, 185, 378, -280, -460, 29, 150, -460, -460,
	65, 668, 668, -723, 588, 11, 12, 82, 44, 657,
	658, 659, 660, 196, 661, 662, 655, 656, 654, 647,
	648, 652, 282, 283, 103, 651, 649, 93, 317, 485,
	186, 187, 188, 189, 459, 250, 35, 41, 251, 14,
	15, 16, -382, 34, 388, 302, 635, 239, 517, 650,
	17, 18, 19, 273, 275, 367, 55, 243, -331, 399,
	-381, 553, 73, -511, -511, -511, -511, -511, -511, -511,
	-511, 395, 667, -447, -506, 665, -271, 667, 667, 667,
	667, -590, -271, -511, -525, 668, -438, 667, -271, -525,
	-520, 667, 483, 665, 667, -528, -511, 5, 5, 5,
	667, 669, -646, 629, 198, 667, 667, 667, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 423, -572, 667, -571, 667, -571, -571, -583, 615,
	667, 667, -569, 667, 637, 630, 667, -569, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 615, 562, 672, -643, -492, 667, 667, -443, -554,
	-511, 659, -443, -443, 383, -435, -511, 115, -464, 279,
	343, 206, 299, 477, 260, -508, 671, -508, -538, 637,
	-271, -546, -353, -271, -548, 667, -544, -538, -130, -590,
	-110, -126, -135, -158, -174, -230, -231, 659, -354, 667,
	205, 667, 669, -594, 205, -422, -337, -366, -354, -373,
	-374, -379, -348, -323, 2, 2, 149, -435, -665, 586,
	494, 29, 4, -612, -606, -372, 503, -371, 556, 129,
	178, 207, -601, -326, 572, 39, -522, -564, -565, -617,
	671, -616, -567, -576, 413, 417, -596, 268, 4, -606,
	-608, 265, 266, 525, 56, 439, 193, 135, 134, 375,
	61, 59, 610, 568, 569, 570, 571, 210, 211, 63,
	611, 540, 75, 76, -665, 586, 494, 29, 503, 198,
	-601, 198, 205, -601, 2, -603, 2, -299, 672, 70,
	468, 166, -703, 667, 2, 166, 2, 2, 2, -323,
	-299, 166, 672, -432, 235, -299, 166, -299, 166, -380,
	235, -379, -299, 166, -299, 672, 166, 166, -299, 672,
	166, 669, 672, 166, -601, 2, -477, -593, -435, 39,
	-497, 2, 136, 4, 5, -747, 672, 301, -385, 316,
	363, 230, 384, 632, 376, 141, -602, 5, 4, -521,
	-533, 136, 309, 268, -584, -586, 9, -587, 657, 658,
	-592, -591, 118, 669, -594, -240, 263, 42, -336, -336,
	-735, -735, 8, 8, -735, -735, -336, -336, 628, 556,
	280, -154, -603, 205, 243, -249, 628, -603, -603, -603,
	-603, -593, 29, 514, 2, -221, 508, 577, 96, 514,
	2, -354, 556, 129, 252, 86, -692, 198, 2, -323,
	-670, 198, -666, 478, 494, 586, -665, -670, -354, 129,
	-354, 129, -354, 129, -354, -354, 2, 2, 2, 2,
	2, 91, 492, 491, 2, -158, -511, 2, 91, 2,
	50, 530, -688, 198, 2, 575, 2, 575, 2, -323,
	-323, -323, -323, 378, 535, 301, 628, -354, -354, -357,
	-360, -355, -360, 205, 253, -360, 496, 557, 587, 492,
	178, -511, 2, 99, -736, 2, 205, 198, 2, 556,
	252, 556, 252, 129, 205, 80, 129, 29, 205, 556,
	489, 669, 4, -296, 460, 510, 398, -295, 25, 30,
	154, 254, 348, 607, 172, -397, 255, 465, -394, 403,
	166, 529, 596, -675, -678, 490, 564, 173, 458, 97,
	376, 510, 398, 460, 166, -457, -459, 39, 127, 348,
	397, 66, 246, 321, 322, 533, 466, 621, 166, 510,
	398, 460, -711, 460, 510, 398, -698, -713, 348, 67,
	473, 539, 241, 532, 623, 178, 501, 298, 364, 109,
	484, 547, 400, 398, -16, -312, 25, 154, -314, -307,
	510, 30, -678, 107, 460, 646, 641, 465, 409, 548,
	426, -678, -675, 296, -677, 624, 362, -298, 529, 596,
	-675, -482, -678, 490, 460, -297, 364, 622, -399, -394,
	403, 166, 671, 25, 154, 460, 510, 398, -726, -727,
	30, -590, 2, -294, 243, -293, 25, -289, -288, 25,
	154, 510, 599, -167, -147, -166, 465, 510, -167, 2,
	460, 398, -672, -344, -640, 243, 628, 166, -344, -344,
	-549, 235, -692, 198, 2, -685, -154, 292, 5, 10,
	-154, -429, 672, 672, -594, 659, 166, 166, 166, 166,
	278, 198, 364, -722, 2, 205, 364, 628, -715, 2,
	-360, -731, 2, 2, 2, 2, 2, 2, 2, -354,
	235, -414, 383, -661, -662, -733, 556, -249, -603, 364,
	47, -357, 235, 2, 614, -672, 364, -680, -359, 235,
	-354, 39, 667, 364, 2, -477, 2, 252, -640, 364,
	-550, -376, -354, -545, -376, 510, -347, 39, -508, -354,
	668, 672, -561, -561, -603, -249, 205, 667, -262, 628,
	628, 278, -557, 672, -556, 243, -604, -603, -155, -603,
	205, 278, -603, -661, -337, 2, -354, 2, -299, 672,
	-327, -276, -451, -593, -452, -451, -277, -276, -279, 198,
	438, 597, 348, 515, 284, -484, -483, 29, -511, -488,
	192, 347, -511, -486, -513, 657, 658, -585, -587, -434,
	376, -270, -270, -270, -419, -540, -511, 426, 259, -592,
	-723, -566, -564, -564, -352, -594, 568, -511, -511, -511,
	-511, -511, -511, -511, -511, -511, -511, -511, -511, -511,
	-511, -511, -511, -511, -511, -511, -511, -511, -511, -511,
	-511, -511, -511, -511, -511, -511, -511, -511, -511, -511,
	-511, -511, -511, -511, 302, 239, 517, 55, 243, -511,
	572, -511, -511, -511, -511, 340, 364, 372, 583, 183,
	593, 150, 376, -750, 550, 43, -518, -271, -439, 667,
	-532, 36, 528, 29, -525, 667, 2, -506, -511, -507,
	-383, -381, -323, 657, 658, 659, 660, 661, 662, 647,
	648, 649, 14, 15, 16, 652, 656, 654, 655, 196,
	103, 651, 317, 485, 93, 186, 187, 188, 189, 282,
	283, 17, 18, 19, 35, 41, 650, -436, -435, -435,
	668, 612, 29, 150, 659, 2, 668, 672, 39, 668,
	-511, -436, -524, -520, -435, -531, -530, 625, -472, -473,
	633, 326, 132, 233, 324, -474, 499, -588, 8, -594,
	659, -647, 191, 224, 667, 668, 2, 668, 2, 668,
	-511, 2, 668, -511, 2, 668, -511, 2, 668, -511,
	2, 668, 2, 668, 2, -511, -511, -511, -511, -511,
	-511, -511, -435, 8, -588, 667, -588, -588, -588, 568,
	568, -588, -588, -588, -580, 413, 414, 415, 416, 304,
	305, 306, 307, 417, 418, 419, 420, 332, 333, 334,
	335, 328, 329, 330, 331, 336, 337, 338, 339, 215,
	216, 217, 218, 211, 212, 213, 214, -580, -466, 2,
	-582, -435, 4, 633, 326, 132, 233, 324, 499, 5,
	-466, 2, -467, 2, -511, -435, -468, -512, -513, 657,
	658, 650, -382, -469, 2, -511, -436, -511, 62, 295,
	574, -470, -511, 205, -435, -435, 2, -435, 2, -514,
	2, -644, 39, -493, -323, -435, -425, 672, 205, 39,
	-611, 4, -610, 45, 67, 109, 138, 145, 178, 241,
	262, 272, 298, 400, 472, 473, 501, 532, 547, 579,
	623, 511, -425, -425, 667, 668, 672, -465, 228, 320,
	315, 271, -465, -544, -464, 279, -462, 393, -462, -462,
	-538, -338, 665, 674, -594, -538, -535, -534, 39, -347,
	390, -538, -538, 669, 668, -537, -536, 39, -347, 666,
	-659, 667, 670, 670, 670, 670, 670, -354, 667, -435,
	-594, 669, 537, 2, 668, 273, 273, 273, 273, 273,
	383, 484, 668, 572, -667, -363, -369, 504, 557, 208,
	-429, 672, -429, -422, 99, -721, 628, -601, -128, 385,
	668, 672, -424, 38, 665, 669, -588, 2, 2, -473,
	667, 205, -667, -369, 557, 504, 208, 2, -671, 552,
	-423, -601, 572, -720, -721, -704, 668, -706, -714, -699,
	-708, 243, 392, 261, 612, -595, -564, 4, -606, -323,
	2, -432, -360, -299, 166, -433, -431, -299, 672, 166,
	-337, -358, -363, -323, -366, -369, -323, -599, -601, -299,
	-359, -723, 668, 576, -498, -384, 438, 527, 461, 505,
	552, 9, 9, 672, -594, -241, 493, 348, -336, -336,
	-336, -336, 463, -354, 198, -603, -154, -248, 387, -247,
	-323, 5, -249, -249, -249, -249, 2, 2, 2, 2,
	-461, -354, -337, -379, -354, -365, 243, 29, -682, 669,
	-601, -601, -369, -370, -368, -323, -363, -461, -337, -461,
	-337, -461, -337, -461, -461, -158, -158, -511, -511, 535,
	2, 507, 198, 198, 669, -461, 669, 8, -415, 471,
	5, -354, 205, 2, 100, -603, 2, 436, 129, 556,
	403, 252, -354, -379, -354, -379, -337, 129, -337, 130,
	129, -354, 4, 672, -724, 101, 572, 84, 667, 494,
	-316, 310, 572, -502, 235, 84, -618, 101, -340, -619,
	-323, 78, 592, 426, 202, 164, -724, 101, 426, -724,
	101, 2, 254, 101, 510, 535, 667, 29, 65, -549,
	44, 44, 29, -676, -677, 296, 205, 634, 556, 252,
	494, 572, 572, -549, -459, -564, 127, 321, 322, 65,
	-589, -589, 65, -589, -589, -589, 628, -589, 628, -357,
	-549, 494, 572, 572, -729, -713, 468, 510, 572, 494,
	572, 145, 383, 372, 501, 138, 272, 298, -533, -533,
	-323, 572, 448, 546, 448, 546, 500, -307, -309, -172,
	500, 546, 310, 572, 572, -172, 29, -222, 469, 136,
	-748, 649, 448, 296, -677, 572, 205, 672, 44, 44,
	29, -676, 205, 572, 622, -379, -338, 608, 46, 608,
	46, 608, 572, 46, 494, 572, 672, 46, -291, -290,
	510, -293, -603, -292, 346, -288, -661, -661, -248, -422,
	80, 572, 572, -16, 510, -673, -328, 114, 354, 314,
	355, 105, 351, 104, 350, 112, 352, 113, 353, 616,
	368, 617, 369, 69, 349, 325, 356, 531, 357, 620,
	370, -329, -330, 157, 405, 606, 129, -599, -16, -16,
	510, 398, 460, 166, -693, 243, 29, 243, -557, 243,
	-557, -371, -323, 669, -511, -158, -511, -158, 50, 166,
	39, 463, 166, 2, 667, 289, 667, -388, 364, 205,
	-422, -558, 672, -354, 39, 166, -599, -458, -457, 364,
	-359, 235, 2, 166, -744, -412, 364, 160, 667, 436,
	2, 166, -339, 235, -324, -323, -477, -301, 560, 166,
	-455, 604, -489, -158, 667, 136, 39, -489, -444, -445,
	-555, -446, -340, 667, -347, -508, -129, -560, 668, 668,
	668, -262, -413, -341, -340, 128, 440, 440, -255, 628,
	-154, -155, 668, 672, -557, 243, -155, -603, -249, -249,
	-557, -557, -549, -452, -277, 384, 284, 515, -486, -487,
	-513, 483, 484, -487, 483, 484, 8, 9, 8, 9,
	-281, 519, 371, -431, 672, -286, 40, 146, 284, -354,
	-592, 634, 162, -511, -511, 572, -750, 550, -518, 162,
	-511, 340, 372, 583, 183, 593, 150, 376, 205, 667,
	-512, -512, 668, -437, -511, -511, 666, 676, 668, 669,
	668, -418, 672, -416, -511, -435, -435, 668, 669, -435,
	-422, 666, 666, 672, 668, -529, -530, 155, -511, 572,
	572, 572, 572, 667, 668, 669, -652, 394, 667, 667,
	-511, 668, 668, 668, 668, 39, 672, 672, 672, 668,
	672, 672, 672, 668, 668, 668, 672, -588, 668, 668,
	668, 634, 634, 668, 668, 668, 668, 672, 668, 672,
	668, 205, 668, 668, -475, 410, 668, 11, 12, 657,
	658, 659, 660, 196, 661, 662, 655, 656, 654, 647,
	648, 649, 93, 317, 485, 14, 15, 16, -382, 273,
	243, -512, -512, -512, -512, 668, -516, -517, 205, 198,
	39, -470, -470, -470, 668, 205, -435, 668, 668, 667,
	-645, 319, 364, 668, 672, 668, -505, -504, 626, -554,
	-426, 2, -544, -349, -594, -505, -505, -435, -511, 279,
	279, -463, 604, 383, -465, -544, -535, -590, -510, -509,
	200, 40, 146, 358, 359, 360, 238, 201, -535, -347,
	-492, -535, -535, -594, -538, -347, -490, 667, -538, -534,
	668, -660, -590, 668, -427, -547, -639, -418, 669, -594,
	-259, -640, -223, 5, 372, -223, -223, -223, -223, -354,
	-601, 572, 572, 243, 243, 243, -429, -422, 26, -691,
	628, 411, -564, 665, 666, 8, -594, -588, -601, 205,
	205, 243, 243, 243, 383, -671, 205, -599, -299, 668,
	672, -699, -708, -714, -708, 392, 2, -299, -432, -299,
	-299, -379, -380, -299, -299, -299, -456, 628, -591, -497,
	590, 89, 438, 568, -591, 126, 493, 536, -249, 556,
	243, -249, 672, 667, 649, 649, 671, 494, 479, -601,
	-323, 669, -461, -461, -461, 507, 507, -323, -323, 198,
	-422, -354, 2, -350, -594, -337, -354, -351, -379, 198,
	198, -337, -337, -295, 460, 510, -340, -340, -354, -266,
	-265, -263, -323, 5, -364, -323, 219, 449, -599, 364,
	-502, 235, -300, 364, 235, -348, -564, 667, -479, 630,
	284, 284, 604, -340, -348, 284, 235, -340, 235, -348,
	2, -348, -674, 438, 377, -511, -264, -263, 65, -395,
	308, 436, 365, -296, 460, 510, 398, -158, -158, -158,
	667, -723, 604, 149, -354, -379, -354, -364, -599, -359,
	510, 398, 460, 361, -373, -589, -589, -589, -457, 510,
	398, 460, -364, -599, -357, -323, -364, -599, 383, 372,
	383, 138, 272, -599, -306, 235, -323, 448, -306, 235,
	448, 448, 448, 448, 219, 449, 494, -337, 448, 634,
	49, -748, 572, 205, -511, -511, -297, -158, -158, -158,
	667, -338, -298, -482, 460, 5, 235, -340, 5, -340,
	235, 5, -323, -340, -364, -599, -727, 25, 154, -340,
	672, 288, 269, 628, -684, 206, 491, 443, -294, 649,
	-249, -364, -599, -328, 405, -685, 372, 5, 10, 600,
	-337, -672, -344, 494, 572, 572, -549, -689, -690, 221,
	476, 494, 479, -154, -252, 628, -154, -246, 247, 659,
	-664, -603, -603, 376, -323, -701, -702, -705, -706, -323,
	-386, -389, -387, -340, -503, -502, -622, -623, -618, 302,
	257, 258, 592, 271, 184, 101, -267, -268, 630, 628,
	166, -377, -354, 665, -249, -662, -559, 184, 502, -366,
	-367, 166, -412, 364, -599, 614, 39, 166, 667, 2,
	2, -358, 383, 364, -339, 235, -302, 156, -748, -337,
	-505, -426, -454, -495, 471, 383, -413, 609, -347, -454,
	-428, 672, 205, 649, 669, -413, -553, 659, -129, -129,
	-249, 667, -603, 668, 672, 669, 667, 649, 649, -257,
	387, -256, 158, 286, 270, 521, 522, 523, 524, 148,
	520, 133, 345, 248, 562, 495, 613, -557, -603, -255,
	-155, -557, 243, 205, -82, 628, 597, -487, 384, 313,
	-540, -287, 636, -354, 671, -511, -511, 162, 162, -511,
	-512, -512, -511, 162, 205, 667, -511, -522, 34, 34,
	668, 672, -507, -511, -381, 668, 612, -418, -418, 668,
	659, -594, 671, 668, -520, 159, -511, 566, 326, 233,
	324, -474, 324, -474, -474, -588, 5, -594, 659, -653,
	-343, 667, -323, 626, -417, 389, 668, -566, -564, -511,
	-511, -511, -511, -511, -588, 668, -569, -569, -584, -584,
	-511, -516, -511, -566, -564, -512, -512, -512, -512, -512,
	-512, -512, -512, -512, -512, -512, -512, -512, -512, -512,
	-512, -512, -512, -512, -512, 150, 364, 376, -512, -517,
	-516, -511, -511, -564, 668, 668, 668, -435, -128, 667,
	319, -323, -448, 224, -511, -557, 672, -448, -448, 668,
	-544, -544, 667, -511, 279, 666, 672, 675, 649, 649,
	-492, 669, -534, -490, -491, -494, -323, -535, 666, 668,
	672, 668, 672, -537, 668, -594, -505, -261, -260, 147,
	58, 116, 144, 372, 380, 204, 229, 435, 162, 199,
	156, 273, -691, -601, -601, 494, 494, 494, 386, 221,
	5, 8, 665, 666, 669, 668, -601, -601, 494, 494,
	494, -665, 586, 494, 29, 205, -601, -706, -708, -708,
	-299, -299, 128, 348, -511, -238, 628, 630, -354, -154,
	-247, -248, -603, -603, 659, -364, -365, 659, -461, 5,
	-401, -400, 403, 376, -401, 483, 483, 572, 572, 668,
	672, 649, 65, 243, 166, 364, 606, 364, -619, 164,
	-624, -511, 667, 252, 667, 667, 2, -283, -284, -285,
	154, 510, 25, -725, 2, 604, 166, -299, 166, -299,
	632, 668, 672, -395, 667, 667, 572, 494, -316, 572,
	628, -435, -511, -250, 136, -593, -678, 671, -678, 671,
	494, 572, 572, 494, 572, 572, 177, 262, 372, 364,
	-323, 166, -323, 235, -748, -323, -678, -678, 243, 628,
	182, 182, 634, -306, -511, -511, 198, 572, 628, -435,
	572, -568, 53, 27, 364, -358, -299, 166, 572, 572,
	586, 510, -290, -603, -154, -253, 158, 475, 148, 286,
	248, 50, 386, -685, -154, -685, -603, 372, -16, -364,
	-599, -359, 510, 398, 460, -671, -671, 221, -369, -693,
	-557, -254, 387, -253, -557, -252, 205, 269, -323, 628,
	668, 672, 136, 649, 2, 668, 668, 672, 672, -625,
	-300, -354, 667, -323, 252, 257, 258, -346, -324, 39,
	380, 380, 667, -354, -106, -107, 628, -108, 573, -556,
	604, -504, -590, -345, -323, -443, 47, -357, 39, 166,
	-672, -359, -158, -359, -562, -563, 5, 39, -354, 166,
	383, 364, -303, 294, -748, -598, -640, -418, -454, -443,
	366, 98, 668, -505, -445, -426, -511, 2, 668, -603,
	-249, -262, -341, 2, -604, -603, -603, 672, 667, 649,
	649, 649, 649, 649, 649, 649, -255, -557, -255, -155,
	-158, 387, 384, 192, 290, -286, -338, -511, -511, 162,
	34, 34, -511, -511, -522, 668, -511, -511, -435, 666,
	5, -511, 668, 668, 8, -511, 668, 669, -654, -323,
	-511, 668, 65, 668, 668, 672, 672, 668, 668, 668,
	668, 668, 668, 668, -517, 205, 150, 376, 667, 668,
	668, -128, -519, 227, 65, -544, -519, -519, -463, -422,
	-544, -509, -338, 665, -338, 665, -594, 668, 672, -564,
	-590, -547, 669, -260, 649, -603, -603, 2, 2, 5,
	5, 435, 364, 372, 5, -223, -691, -691, 628, -369,
	-369, -369, 386, 666, 2, 665, -594, -369, -369, -369,
	205, -667, -369, 557, 208, -601, 128, 198, 232, 232,
	-249, -249, 668, -351, 556, 252, 667, 667, -340, -340,
	-265, -591, 556, 483, -306, 426, -502, 166, 166, -626,
	101, -628, 82, 184, 111, 364, 372, 592, 426, 78,
	136, 383, 445, -738, -739, -740, 39, 639, 640, 668,
	-420, -541, -639, 667, -323, -420, -422, 364, 543, 136,
	383, 364, 136, 383, 622, 128, 2, 586, 85, -340,
	-348, -263, -422, -422, -354, -364, -599, 174, 668, 672,
	649, 2, 659, 659, -364, -599, -359, -364, -599, -357,
	-323, 262, 166, 609, -306, 166, -306, 609, -306, 401,
	182, 572, -158, -511, 174, 668, -338, 5, 5, 166,
	-335, 82, -340, 5, -340, -358, 128, 649, 649, 649,
	649, 649, 31, -685, -247, 628, 494, 572, 572, 383,
	383, 386, -689, -690, -252, 672, 667, -252, -604, -154,
	383, 2, 473, -705, -511, -511, -402, 254, -340, -623,
	-620, -621, 426, -503, -627, -629, 184, 426, -390, -420,
	667, -339, 667, -323, 667, -158, 2, -266, 667, -388,
	-108, 387, 9, 181, 666, 205, -599, -458, -158, -359,
	-412, -410, 628, -412, 668, 672, 160, -480, 604, -338,
	-354, 166, -304, 293, -748, -598, -301, -485, -483, 151,
	667, 383, -158, -418, 649, 668, 128, 668, -256, -257,
	-603, -154, -603, -603, -603, -154, -603, -255, -557, -83,
	-84, 252, 257, 101, 408, -286, -511, -511, -511, 668,
	-418, -594, 659, -648, 403, 668, -540, -511, -511, -512,
	205, 667, -522, 668, -649, 627, -511, -449, -450, -511,
	481, 117, 225, -649, -649, 668, -590, -590, -494, -603,
	2, 2, 372, 2, 2, 2, 572, 572, 572, 665,
	2, 205, 205, 205, -601, 205, 205, 243, 243, -158,
	-354, -379, -435, -435, 243, 39, 448, -502, -348, -348,
	-352, -345, 184, 235, 372, 622, -479, 284, 667, -512,
	597, -354, 667, 2, 234, 234, 31, 65, -741, 141,
	256, 668, 672, -542, -334, -323, -511, -542, 668, 668,
	372, 597, 372, 622, -511, 597, -564, 667, -299, -299,
	668, 668, -511, 572, -593, 108, -591, 2, -678, -306,
	-422, -422, -678, -337, -511, 198, -511, 572, 5, -299,
	-352, -299, -299, -335, 586, -603, -511, 583, 183, -154,
	-154, 382, -364, -599, -359, -694, 557, 504, 587, 496,
	208, 482, -694, 198, -253, -254, -252, -603, -697, 511,
	-396, -397, 2, -625, 284, -345, 284, 245, 165, 668,
	-420, 667, -420, 667, -422, -737, 628, 668, -386, -267,
	-107, -668, -376, -412, 39, 348, 128, 39, 5, 667,
	667, -323, 383, 667, -338, -318, 99, -748, -598, -302,
	-454, 365, -422, 101, -485, -518, -249, 667, -249, 668,
	-255, 672, 29, 667, 29, 667, 668, -418, 65, 672,
	668, 668, -512, -522, 668, -650, -651, -343, 672, 667,
	667, 512, 666, 666, 2, -601, -601, -601, 2, -601,
	-601, -601, -601, -601, 494, 494, 668, 668, -306, 426,
	-323, -619, -628, -345, 364, -268, 604, 628, -511, -512,
	-325, 667, -511, 667, 667, 39, 136, 256, 142, 240,
	-501, -742, 110, 544, 244, -541, -286, 668, -500, 604,
	445, -512, -335, -420, 667, 667, 667, 649, 205, -158,
	667, -568, -299, -358, 649, 572, 2, 205, -671, 668,
	-684, -707, -708, -267, 667, -268, -391, 87, 102, 137,
	234, 209, 253, 535, 541, 29, -391, -500, 668, -420,
	668, -420, 668, -392, 383, 128, 348, 668, 39, -505,
	39, -158, 128, -158, -562, -420, -354, -420, 383, -308,
	-307, 303, -598, -303, 668, -348, -454, -604, -84, -422,
	-422, -655, 436, 484, 226, -435, -419, 668, 672, 39,
	-450, 2, 2, 2, -691, -691, -691, -369, -369, 448,
	-300, 166, 228, 668, -630, 318, -323, 668, -458, -458,
	39, 142, 240, -398, -394, 667, -287, -542, -268, 228,
	-354, -679, 604, 668, -404, -403, -400, -406, -405, -400,
	-435, -591, 108, 401, -435, -335, -154, -601, -601, 383,
	-686, 206, -709, -710, -712, 39, 289, 579, 627, -713,
	-392, -421, -543, -340, -501, -500, 668, -398, 668, 88,
	128, -402, -158, -158, 2, -410, 668, 668, -480, 668,
	-354, -305, -605, 448, 450, -748, -304, -505, 151, 668,
	668, 668, 668, -656, -657, 55, 589, 118, -511, -656,
	-656, -651, -653, 205, 205, 184, -499, 637, -631, -634,
	-633, 644, 518, 206, 402, 668, 543, 621, 668, 668,
	-741, -422, -499, -412, -511, -500, 668, 672, 609, 668,
	672, 609, 668, 205, 668, -299, -691, -299, -694, -251,
	628, 50, -719, -716, 54, 472, -712, -700, 5, -598,
	-317, -316, 668, 672, -398, -501, -500, -268, -398, 425,
	143, 154, -396, -737, -500, 667, -501, 667, -315, -314,
	-748, -584, -318, 151, 365, 597, -249, -658, 164, -657,
	422, 197, 483, 422, 197, -658, -658, -601, -601, -345,
	-268, 60, -633, 644, -634, 644, 597, 143, -505, 668,
	-630, -268, -403, 243, -405, 205, 401, 205, 491, -685,
	31, 45, -511, -268, -543, -268, -398, -501, -505, -268,
	484, 484, 2, -267, -392, -501, -420, -398, -420, -311,
	-312, -313, -422, -308, 365, 597, 510, 118, 224, 567,
	348, 34, 649, -632, 348, 468, 70, 510, -632, -631,
	667, 667, -601, 387, -718, -505, -268, -398, -481, 364,
	622, -505, 2, -392, -398, 668, -268, 668, -600, 398,
	-305, 510, -444, 483, 391, -657, -511, 24, 372, 136,
	-741, -435, -435, -299, -248, 667, -717, 159, -3, -716,
	-481, -505, -268, 622, -481, -317, -268, -500, -505, -501,
	-310, -309, 500, -748, -315, -444, -505, 668, 668, -248,
	673, -481, -505, -505, -501, -481, -398, -599, -311, -505,
	-393, -394, 572, 668, -481, -481, -398, -268, -310, 667,
	-268, -505, -435, -505, -481, 668, -481, -393,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 45,
	1779, 1781, 743, 744, 746, 747, 748, 750, 751, 753,
	755, 757, 758, 759, 761, 762, 764, 765, 766, 767,
	768, 770, 772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 869, 871,
	0, 1761, 1763, 1765, 1767, 0, 0, -2, -2, 0,
	0, -2, -2, -2, 47, 48, 50, 52, 0, -2,
	423, 425, 427, 429, 0, 461, 463, 464, 466, 468,
	469, 471, 473, 475, -2, 0, 664, 665, 667, 669,
	671, 673, -2, 0, 1335, 1337, 1339, 0, 857, 859,
	0, 1342, 1344, 1346, 0, 0, 881, 882, 0, 1882,
	-2, 873, 875, 877, 879, 958, 960, 962, 964, 966,
	968, 970, 972, 974, 976, 978, 979, 981, 983, 985,
	987, 989, 991, 992, 994, 996, 998, 999, 1001, 1002,
	1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022,
	1024, 1026, 1028, 1030, 1032, 1035, 1036, 1037, 1039, -2,
	0, -2, -2, 1775, 54, 56, 58, 60, 62, 64,
	66, 68, 70, 72, 74, 76, 78, 80, 607, 609,
	611, 613, 615, 618, 620, 622, 624, 1940, 675, 677,
	679, 681, 683, 685, 687, 689, 0, 0, -2, 1954,
	0, 0, 0, 1130, 82, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 151, 152, 153, 154, 155, 156,
	157, 158, 95, 96, 97, 99, 100, 101, 102, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 148, 149, 93, 122, 123,
	124, 125, 126, 0, 0, 1913, 1915, 1917, 1919, -2,
	0, 0, 8, 12, 14, 16, 18, 20, 22, 24,
	26, 28, 30, 32, 36, 38, 40, 42, 46, 1780,
	1782, 745, 749, 752, 754, 756, 760, 763, 769, 771,
	773, 728, 729, 732, 2672, 2691, 2692, 2693, 2696, 2697,
	2698, 2699, 2700, 2701, 3238, 3319, 3320, 3321, 3322, 2724,
	2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734,
	2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744,
	2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754,
	2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764,
	2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774,
	2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784,
	2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794,
	2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824,
	2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834,
	2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844,
	2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854,
	2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864,
	2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874,
	2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884,
	2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894,
	2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904,
	2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914,
	2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924,
	2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934,
	2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944,
	2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954,
	2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964,
	2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974,
	2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984,
	2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994,
	2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004,
	3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014,
	3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024,
	3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034,
	3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044,
	3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054,
	3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064,
	3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074,
	3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084,
	3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094,
	3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104,
	3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114,
	3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124,
	3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134,
	3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144,
	3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173,
	3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183,
	3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193,
	3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203,
	3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213,
	3214, 3215, 3216, 3217, 730, 731, 1531, 0, 815, 813,
	2655, 816, 2987, 818, 820, 658, 659, 660, 661, 662,
	663, 0, 850, 3092, 831, 1952, 851, 853, 854, 855,
	856, 810, 808, 0, 855, 850, 2729, 3092, 848, 1759,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 587, 1594, 1595, 1596, 1744, 1745,
	3043, 1790, 0, 288, 870, -2, -2, 3202, -2, 912,
	913, -2, -2, 927, 931, 922, 3207, 0, 3046, 3028,
	-2, 934, 1762, 1764, 1766, 1040, 1041, 1042, 2676, 1046,
	1044, 1056, 1057, 1060, 0, 1077, -2, 0, 2725, 3010,
	-2, -2, 1078, 1079, -2, -2, -2, -2, 1058, 1059,
	0, 0, 0, 0, 0, 2090, 2091, 2659, 0, 1034,
	1085, 0, 0, 0, 0, -2, -2, -2, 0, 0,
	0, -2, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 1201, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	0, 1304, 0, 0, 1088, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 0, 1174, 1199, 1200, 1210, 1792, 1784, 1787,
	1785, 1786, 49, 51, 53, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 298, -2,
	-2, -2, -2, 0, 0, 3098, 2788, 2623, 2693, 2626,
	2621, 424, 426, 428, 430, 431, 0, 0, 0, 0,
	0, 0, 0, 462, 465, 467, 470, 472, 474, -2,
	0, 476, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 653, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 1401, 1402, 1661, 0, 0, 0,
	-2, 666, 668, 670, 672, 733, 734, 0, 1941, 1941,
	741, 742, -2, -2, 0, 0, 0, 0, 385, 376,
	1336, 1338, 1340, 1341, 0, 0, 0, 0, 0, 858,
	860, 0, 0, 3092, 348, 1343, 1345, 1347, 1348, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 874, 876,
	878, 880, 959, 961, 963, 965, 967, 969, 971, 973,
	975, 977, 980, 982, 984, 986, 988, 990, 993, 995,
	997, 1000, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017,
	1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1038, 0,
	1574, 1942, 1792, 1769, 1770, 1771, 1776, 1778, 1772, 1773,
	1774, 55, 57, 59, 61, 63, 65, 67, 69, 71,
	73, 75, 77, 79, 81, 608, 610, 612, 614, 616,
	619, 621, 623, 625, -2, 1911, 1912, 676, 678, 680,
	682, 684, 686, 688, 690, 861, 0, 864, 0, 1090,
	863, -2, 0, 1946, 1946, 1946, 0, 0, 1912, 1910,
	0, 0, 0, 867, 868, 938, 939, 2233, 0, 0,
	0, 0, 0, 0, 0, 0, 2494, 2322, 0, 940,
	-2, 2355, 2357, 3176, 2959, 3202, 2493, -2, 2359, 2360,
	2361, 2362, 2363, 0, 2365, 2366, 2367, 2368, 2369, 2370,
	0, 2372, 0, 2377, 2378, 2379, 0, 3183, 2598, 2686,
	-2, 0, 0, 3190, 2682, 0, 2460, 2395, -2, -2,
	2710, 2689, 2163, 2164, 2165, 2166, 2167, 2168, 2169, -2,
	-2, 3221, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 0, 3164, 3184, 3185, 3191, 3193, 3186,
	3173, 2420, 2804, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2192, 2201, -2, -2,
	-2, -2, -2, -2, -2, 3177, 3178, 3196, 3199, 3206,
	3211, 3212, 3182, 3192, 3220, 3222, 3223, 3224, 3225, 3226,
	3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236,
	3237, 2193, -2, -2, -2, -2, 0, 1929, 3003, 1932,
	2038, 1930, 1914, 1916, 0, 1918, 0, 0, 0, 1923,
	1949, 1947, 0, 1998, 1927, 1928, 2021, 2021, 2053, 0,
	2026, 0, 2053, 1941, 2084, 0, 2032, 3033, 2396, 2397,
	0, 2693, 2687, -2, -2, 3218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 811, 0, 817,
	819, 0, 0, 0, 0, 850, 849, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 3184, 548,
	549, 552, 0, 590, 591, 592, 593, 594, 3184, 0,
	0, 0, 0, 600, 601, 602, 603, 604, 605, 606,
	258, 3184, 695, 727, 723, 0, 258, 3184, 698, 726,
	258, 3184, 701, 725, 0, 704, 1659, 258, 3184, 707,
	2651, 258, 3184, 710, 715, 711, 3184, 713, 258, 3184,
	719, 2666, 2664, 720, 0, 722, 278, 274, 275, 276,
	277, 1755, 1756, 1757, 1758, 0, 1789, 1660, 872, 0,
	898, 0, 910, 911, 3172, -2, 0, 3057, 915, 916,
	-2, 918, 1793, 1797, 1798, 1799, 1800, 1801, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 905, 906, 925,
	926, 932, 935, 0, 1049, 1045, 1061, 0, 1076, 0,
	1077, 1077, 2640, 2631, 2632, 0, 0, 1077, 1077, 0,
	0, 1080, 1081, 1082, 1083, 1084, 803, 805, 2494, 1086,
	1087, 0, 0, 1105, 1106, 1107, 0, 0, 402, -2,
	-2, -2, -2, 1116, 388, 389, 2706, 2707, 2715, 2716,
	2717, 2718, 3219, 3221, 0, 1124, 1127, -2, 0, 0,
	0, 0, 1134, 0, 1139, 1140, 1141, 0, -2, 0,
	1148, 1150, 1334, 1153, 0, 1334, 0, 1155, 0, 1159,
	0, 1162, 1163, 0, 1165, 0, 1167, -2, -2, -2,
	1175, 1176, -2, 1181, -2, 0, 1185, 0, -2, 0,
	1188, 0, 1191, -2, 0, 1201, 1197, 1198, 0, 0,
	0, 0, 1218, 1219, 0, 1223, 0, 1232, 0, 1235,
	1236, 1237, 0, 0, 1242, 1243, 0, 1245, 1246, 1247,
	1249, 1250, 1251, 0, 3131, 3054, 2788, 2867, 3052, 2837,
	0, 1262, -2, 2825, 1272, 1274, 0, -2, 0, 1290,
	0, 1294, 0, 0, 1303, 0, 0, 0, 1089, 0,
	1098, 1099, 1100, 1783, -2, 92, 0, 3184, 2084, 94,
	0, 2645, 2719, 2720, 2721, 2722, 2723, 3239, 3240, 3241,
	3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251,
	3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261,
	3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271,
	3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281,
	3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291,
	3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301,
	3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311,
	3312, 3313, 3314, 3315, 3316, 3317, 3318, 98, 0, 3184,
	103, 0, 3184, 0, -2, 127, 567, 128, 0, 150,
	0, 178, -2, -2, -2, 159, 0, 3184, 0, 2620,
	-2, 0, 270, -2, 0, 798, 377, 378, 0, 789,
	0, 901, 0, 0, 1373, -2, 0, 1587, 1589, 1589,
	0, -2, 0, 0, 0, 1324, 2617, 2622, 1325, 1326,
	2641, 1327, 2627, 0, 432, 433, 434, 435, 436, 437,
	3184, 439, 440, 0, 442, 443, 3184, 445, 446, 0,
	448, 0, 450, 0, 313, 330, 328, 3184, 0, 477,
	479, 3184, 481, 484, 0, 588, 0, 585, 0, 569,
	570, 0, 572, 0, 0, 0, 577, 578, 580, 581,
	582, 583, 584, 0, 629, 627, 2656, 649, 402, 0,
	-2, 3184, 0, 1370, 0, 0, 1639, -2, 0, 1580,
	-2, 0, 1646, 3184, 1642, 0, -2, 0, 1939, 3184,
	1810, 1405, 1406, 1407, 1408, 2098, 655, 0, 1846, 0,
	1848, 0, 1868, 2092, 2021, 0, 0, 2097, 0, -2,
	786, 2675, -2, 736, 0, 737, 0, -2, 0, 402,
	0, 0, 1351, 1353, 1354, 1356, 1357, 1360, 1361, 1362,
	1363, 0, 1365, 2070, 349, 351, 0, 0, 0, 0,
	1350, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	0, 649, 883, 0, 0, 258, 2088, 1768, 0, -2,
	0, 862, 0, 866, 1971, 1897, 1894, 0, 1968, 1969,
	1898, 0, 0, 0, 1905, 0, 1944, 1945, 0, 0,
	0, 1884, 1885, 0, 0, 0, 0, 0, 0, 2499,
	2500, 2501, 2502, 2515, 2503, 2504, 2514, 2512, 2513, 2505,
	2506, 2511, 2525, 2526, 2516, 2517, 2507, 2520, 2518, 2519,
	2521, 2522, 2523, 2524, 0, 0, 2530, 2531, 0, 2508,
	2509, 2510, 2539, 0, 0, 2540, 0, 2542, 0, 2532,
	2527, 2528, 2529, 0, 2301, 2303, 2606, 0, 0, 0,
	2538, 2533, 2534, 2238, 2239, 2240, 2241, 2242, 2276, 2280,
	2281, 0, 0, 2356, 2603, 2602, 2358, 0, 0, 2554,
	0, 2371, -2, 0, 2494, 2549, 0, 0, 2380, 2381,
	2382, 0, 0, 2554, 0, 0, 2597, 2392, 2393, 2230,
	0, 0, 2462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2179, 2178, 0, 2180, 0, 2181, 2182, 0, -2,
	0, 0, 2202, 0, 0, 0, 0, 2206, 0, 0,
	0, 0, 0, 0, 0, 2578, -2, 0, 0, 0,
	0, 2194, 0, 0, 1931, 0, 0, 0, 2002, 2607,
	2611, 2612, 2002, 2002, 0, 0, 2555, 2081, 2081, 0,
	0, 2076, 2076, 2076, 2074, 2053, 0, 2053, 2063, 0,
	2053, 2053, 0, -2, 2026, 0, 0, 2067, 0, 2047,
	774, 776, 778, 780, 781, 782, 784, 2085, 2086, 0,
	0, 0, 0, 2694, 0, 0, 0, 0, 0, 0,
	2678, 0, 0, 2650, 457, 458, 0, 0, 0, 3111,
	3046, 0, -2, -2, -2, -2, 3054, 0, 0, 2788,
	2825, 2837, 822, 852, 0, 1941, 0, 2557, 2113, 2117,
	0, 2119, 2120, 2121, 0, 0, 2114, 2213, 2711, 2712,
	2713, 2173, 2174, 2175, 2176, 2177, 2185, 2172, 2172, 2172,
	2183, -2, 2190, 2212, 2204, 2212, 2208, 2156, 2157, 2158,
	2195, 2196, 2197, 2198, 0, 3111, 3046, 0, -2, 0,
	834, 0, 0, 0, 1879, 340, 341, 546, 0, 256,
	257, 0, 551, 0, 589, 0, 596, 597, 598, 0,
	691, 0, 0, 258, 3184, 696, 0, 699, 0, 258,
	3184, 2615, 705, 0, 708, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 258, 1881, 0, 0, 0, 0,
	-2, 920, 928, 929, 930, 0, 1795, 0, 1802, 949,
	950, 951, 1804, 1805, 0, 1807, 923, 952, 953, 954,
	955, 956, 957, 0, 2629, 2630, 2635, 2636, 0, 0,
	921, 942, 924, 0, 936, 1052, 1047, 1048, 1062, 1063,
	0, 0, 2633, 2634, 0, 0, 1068, 1069, 0, 0,
	0, 1108, 349, 0, 0, 1111, 0, 402, 402, 402,
	402, 1122, 1123, 1125, 1126, -2, -2, -2, -2, 1128,
	1129, 1229, 0, 0, 0, 1228, 1737, 0, 1144, 1147,
	1151, 0, 1307, 3028, 3046, 3111, 1332, 1152, 1229, 2788,
	1229, 2788, 1229, 2788, 1229, 1229, 1169, 1213, 1225, 1180,
	1187, 0, 0, 0, 1182, 1186, 1189, 1192, 0, 1194,
	1202, 0, -2, 0, 1205, 0, 1207, 0, 1209, 1229,
	1221, 1230, 1233, 0, 1241, 1244, 0, 1252, 1253, 1254,
	2660, 1255, 2673, 0, 0, 1258, 1259, 1260, 1261, -2,
	0, 1265, 1266, 0, 0, 1281, 1286, 1287, 1283, 0,
	0, 0, 0, 0, 0, 1297, 1298, 0, 0, 0,
	1306, 0, 1101, 160, 1741, 0, 0, 211, 0, 1741,
	1741, 0, 0, 0, 0, 239, 0, 0, 1439, 0,
	0, 0, 0, 178, 196, 207, 172, 173, 174, 0,
	0, 0, 0, 0, 0, 104, 1553, 0, 1556, 0,
	0, 0, 0, 0, 0, 0, 1569, 1572, 0, 0,
	0, 0, 561, 0, 535, 0, 0, 558, 566, 0,
	0, 522, 523, 524, 525, 0, 0, 530, 0, 0,
	0, 0, 536, 0, 130, 131, 0, 0, 136, 137,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 1843,
	0, 186, 178, 0, 0, 177, 179, 162, 0, 0,
	178, 182, 197, 209, 0, 245, 0, 185, 247, 1436,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 280,
	0, 0, 315, 796, 0, 799, 0, 788, 790, 649,
	649, 0, 0, 899, 903, 904, 0, 0, 900, 902,
	0, 0, 1581, 0, 0, 0, 1938, 0, 0, 0,
	0, 3184, 1739, 0, 1722, 0, 2070, 2886, -2, -2,
	2070, 1323, 0, 0, 2694, 2625, 0, 0, 0, 0,
	449, 0, 0, 0, 339, 0, 0, 0, 0, 486,
	491, 0, 579, 568, 571, 573, 574, 575, 617, 1500,
	3184, 0, 0, 653, 644, 0, 648, 0, 652, 0,
	0, 1552, 3184, 1550, 0, 1578, 0, 1638, 1531, 3184,
	2658, 0, 0, 0, 1647, 2703, 1656, 1660, 1831, 0,
	657, 0, 1849, 1851, 0, 0, 2093, 0, 2095, 2021,
	1941, 0, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 1364, 358, 0, 2069, 0, 0, 390, 2070, 349,
	0, 1349, 402, 402, 2070, 885, 2070, 887, 1573, 0,
	1777, 1971, 1897, 865, 1888, 1970, 1889, 1896, 1899, 0,
	0, 1901, 0, 1903, 0, 1966, 1967, 1974, 1975, 0,
	1985, 1986, 1978, 0, -2, 0, 0, 1981, 1982, 1907,
	0, 1924, 1925, 1926, 1955, 1958, 1675, 0, 3321, 908,
	0, 2234, 2108, 2235, 2236, 2644, 0, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, -2, -2, -2,
	-2, -2, -2, -2, -2, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, -2, -2, -2,
	2277, 2278, 2279, -2, 2541, 2543, 0, 2606, 0, -2,
	0, -2, -2, -2, -2, 2298, 0, 2300, 2305, 2307,
	2309, 0, 0, 0, 0, 2605, 2319, 2589, 2590, 0,
	0, 2496, 2497, 2498, 2304, 0, 2323, 2604, 2601, 0,
	0, 2535, 0, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 0, 2553, 1954,
	2384, 0, 0, 0, 0, 2391, 2376, 2551, 0, 2550,
	0, 0, 0, 2561, 0, 2596, 2592, 0, 2642, 2229,
	2216, 2217, 2218, 2219, 2220, 2221, 2231, 0, 2639, 2679,
	2685, 2470, 0, 0, 0, 2421, 2422, 2423, 2424, 2425,
	0, 2427, 2428, 0, 2430, 2431, 0, 2433, 2434, 0,
	2436, 2437, 2438, 2439, 2440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 0, 0, 2442,
	0, 2564, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2444, 0, 2446, 2555, 2575, 0, 0, 2324, 0,
	0, 0, 0, 0, 2449, 2555, 2583, 0, 0, 0,
	0, 0, 2555, 0, 2588, 0, 2456, 0, 2458, 1131,
	1132, 1933, 0, 0, 2039, 0, 2103, 0, 0, 0,
	2610, 2613, 2614, 3145, 3146, 3147, 3148, 3149, 3150, 3151,
	3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161,
	3162, 3163, 2103, 2103, 0, 1997, 0, 0, 2077, 2078,
	2079, 2080, 0, 0, 2081, 0, 2071, 2075, 2072, 2073,
	2063, 2018, 0, 0, 2646, 2063, 2024, 2062, 0, 2038,
	2052, 2063, 2063, 0, -2, 2028, 2066, 0, 2041, 2053,
	0, 0, 775, 777, 779, 783, 785, 0, 0, 1954,
	-2, 0, -2, 404, 1530, 0, 0, 0, 0, 0,
	0, 812, 814, 0, 0, 714, 0, 0, 0, 0,
	1313, 0, 1315, 1316, 0, 1318, 0, 1725, 806, 0,
	809, 0, 2104, 2107, 0, 0, 2118, 2122, 2123, 2214,
	0, 0, 0, 0, 0, 0, 0, 847, 0, 3092,
	0, 845, 0, 550, 258, 0, 554, 555, 0, 0,
	503, 504, 505, 506, 508, 2714, 509, -2, -2, 0,
	599, 258, 724, 693, 0, 258, 258, 702, 0, 0,
	258, 716, 258, 712, 2667, 258, 2665, 279, 721, 1880,
	291, 0, 907, 0, 1794, 1803, 0, 946, 0, 948,
	0, 2637, 2638, 0, 937, 0, 1050, 0, 1064, 1065,
	1066, 1067, 0, 402, 0, 0, 402, 400, 2962, 398,
	395, 397, 1112, 1113, 1114, 1115, 1171, 1215, 1227, 1285,
	1133, 1135, 1136, 1137, 0, 1142, 0, 0, 0, 0,
	1333, 1328, 1329, 1330, 2668, 2664, 1331, 1154, 1229, 1157,
	1229, 1160, 1229, 1164, 1166, 1184, 1358, 1359, 1190, 1203,
	1196, 1204, 0, 0, 0, 1217, 0, 0, 1239, 0,
	1248, 1256, 0, 1264, -2, 1269, 1270, 0, 0, 0,
	0, 0, 0, 0, 1291, 1292, 1293, 1295, 1300, 1299,
	0, 1305, 1102, 0, 0, 0, 0, 1740, 0, 0,
	1685, 0, 0, 215, 3184, 0, 260, 0, 0, 1493,
	2652, 0, 1481, 0, 0, 2812, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 1555, 1557, 1564, 1566, 0,
	1560, 1561, 0, 1563, 1565, 1567, 0, 1570, 0, 0,
	0, 0, 0, 0, 557, 559, 560, 535, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 138, 142, 1590,
	3052, 0, 0, 0, 0, 1591, 1592, 1593, 1819, 1820,
	0, 1842, 1843, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 184, 0, 2619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 316,
	0, 800, 0, 801, 0, 791, 402, 793, 794, 795,
	0, 0, 0, 1583, 0, 1634, 1632, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 0, 0, 0, 0, -2, 1585, 1586,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	393, 2618, 2628, 0, 438, 441, 444, 447, 297, 0,
	0, 0, 0, 483, 493, 0, 1411, 1383, 0, 0,
	628, 402, 649, 651, 0, 2671, 1368, 1548, 1551, 0,
	1531, 3184, 1602, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 3184, 2647, 2702, 2703, 1833, 1843, 0,
	2103, 0, 1866, 1852, 0, 0, 0, 1866, 1870, 1871,
	1873, 1874, 0, 0, 2094, 2100, 735, 787, 1941, 1941,
	402, 0, 0, 1855, 1857, 0, 0, 0, 342, 0,
	352, 2070, 350, 0, 358, 0, 2070, 349, 0, 643,
	884, 889, 2089, 1892, 1893, 1895, 0, 1904, 0, 0,
	1980, -2, -2, 1979, 1983, 1984, -2, -2, -2, -2,
	1900, 0, 1909, 1906, 0, 1965, 1673, 1674, 0, 0,
	909, 0, 0, -2, -2, 0, 0, 0, 2320, 0,
	-2, 2299, 2302, 2306, 2308, 2310, 0, 0, 0, 0,
	0, 0, 2544, 0, 2546, 2321, 2599, 2602, 2537, 0,
	2492, 0, 0, 1953, 1954, 1954, 0, 2390, 0, 2552,
	0, 2559, 2560, 0, 2383, 0, 2593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2394, 0, 0, 0,
	0, 2426, 2429, 2432, 2435, 0, 0, 0, 0, 2415,
	0, 0, 0, 2419, 2184, 2170, 0, 0, 2187, 2191,
	2212, 2210, 2211, 2205, 2212, 2209, 2160, 0, 2159, 0,
	2441, 0, 2443, 2445, 0, 0, 2447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2327, 2328, 2329, 2349, 2448, 2581, 2582, 0, 0,
	0, 0, 0, 0, 2454, 0, 2587, 2455, 2457, 1941,
	0, 1934, 0, 2037, 0, 1999, 1988, 2102, 0, 2608,
	2070, 2001, 2003, 2609, 2649, 1988, 1988, 0, 2556, 0,
	0, 2057, 0, 0, 0, 2059, 2022, 0, 0, 2016,
	0, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2023, 2038,
	2061, 2025, 2029, 2679, 0, 2041, 2065, 0, 2063, 0,
	2048, 0, 2050, 2087, 0, 2034, 2067, 0, 0, 2695,
	2103, 0, 451, 459, 460, 452, 453, 454, 455, 0,
	1725, 0, 0, 0, 0, 0, 1314, 1317, 0, 830,
	0, 0, 2558, 0, 2109, 0, 2115, 0, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 547, 553,
	0, 0, 502, 0, 501, 507, 595, 692, 258, 697,
	700, 2616, 258, 706, 709, 718, 287, 0, 897, -2,
	944, 945, 947, 0, 943, 1055, 1051, 804, 1103, 0,
	0, 1110, 0, 0, 0, 0, 0, 0, 1737, 1734,
	1146, 0, 1156, 1158, 1161, 1206, 1208, 1229, 1220, 0,
	1240, 1257, 1268, 1275, 2648, 1276, 1433, 0, 1433, 0,
	0, 1296, 1302, 212, 1741, 0, 0, 0, 1681, 0,
	1394, 0, 1389, 1390, 1683, 2663, 1687, 1693, 1696, 0,
	217, 3184, 229, 0, 3184, 0, 1455, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 3184, 258, 3184, 258,
	233, 235, 238, 0, 244, 240, 0, 1391, 0, 1443,
	0, 0, 1446, 161, 1741, 0, 0, 164, 168, 180,
	0, 0, 0, 194, 0, 0, 0, 1698, 1702, 1710,
	0, 0, 0, 1558, 1559, 1562, 1568, 1571, 105, 0,
	0, 0, 1706, 1708, 1714, 562, 563, 564, 0, 0,
	0, 526, 527, 129, 132, 3184, 2661, 0, 134, 3184,
	0, 143, 1843, 0, 0, 0, 0, 1680, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 166, 170, 181,
	0, 1716, 163, 183, 0, 273, 0, 0, 263, 258,
	3184, 0, 265, 0, 266, 267, 281, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 797, 0,
	792, 1371, 1372, 1633, 0, 1576, 1577, 325, 326, 0,
	1588, 1582, 0, 0, 0, 0, 0, 1718, 1719, 0,
	0, 0, 1739, 2070, 293, 0, 2070, 301, 0, 2624,
	0, 329, 338, 0, 480, 0, 492, 494, 496, 0,
	0, 0, 1410, 1511, 1412, 1414, 1415, 1416, 260, 0,
	0, 0, 1481, 2873, 2703, 0, 0, 1378, 0, 0,
	0, 634, 630, 0, 641, 645, 646, 0, 0, -2,
	0, 0, 0, 0, -2, 0, 0, 0, 1649, 1643,
	1644, 0, 0, 0, 0, 3184, 1835, 1843, 0, 1939,
	1954, 656, 1844, 1866, 0, 0, 0, 1854, 1850, 1847,
	2103, 0, 0, 0, 0, 0, 2096, 2099, 738, 739,
	379, 0, 402, 0, 0, 0, 0, 0, 0, 356,
	0, 359, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 0, 0, 0, 374, 375, 358, 391, 344,
	2070, 358, 0, 0, 886, 0, 1902, 0, 1977, 1908,
	1959, 1960, 0, 1675, 0, 2237, 2283, 0, 0, -2,
	0, 0, 2287, 0, 0, 0, -2, 0, 0, 0,
	2545, 2547, 0, 2601, 2536, 2385, 0, 0, 0, 2389,
	2373, 2374, 0, 2495, 2562, 2591, 2595, 0, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 0, 2643, 2680, 2684, 2468,
	2469, 2473, 2657, 0, 0, 0, 2398, 0, 0, 0,
	0, 0, 0, 0, 0, 2186, 2203, 2207, 0, 0,
	2563, 2574, 2576, 2325, 2326, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, -2, -2, -2, 2343, 2344,
	2345, -2, -2, -2, 2350, 0, 0, 0, 2577, 2579,
	2580, 2584, 2585, 0, 2451, 2452, 2453, 2586, 0, 1941,
	1935, 2040, 1996, 0, 2101, 2000, 0, 1996, 1996, 1948,
	2055, 0, 0, 2083, 0, 2019, 0, 2020, 0, 0,
	2060, 0, 2027, 2064, 0, 2043, 2045, 2030, 2031, 2049,
	0, 2033, 0, 2036, 2385, -2, 403, 405, 407, 0,
	410, 411, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 821, 1725, 1725, 0, 0, 0, 823, 0,
	807, 0, 0, 2111, 0, 2215, 836, 838, 0, 0,
	0, 0, 3111, 3046, 0, 0, 835, 556, 499, 500,
	694, 703, 289, 0, 2068, 0, 0, 0, 402, 402,
	399, 0, 394, 396, 1138, 1736, 1143, 2669, 1216, 1238,
	1277, 1432, 0, 0, 1279, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 259, 0, 1492, 0,
	1453, 0, 0, 1480, 0, 0, 1498, 219, 220, 221,
	0, 0, 0, 0, 231, 0, 0, 227, 0, 237,
	243, 242, 0, 1440, 0, 0, 0, 0, 1686, 0,
	0, 0, 191, 192, 193, 0, 198, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 520, 0, 0,
	0, 0, 140, 0, 0, 0, 145, 146, 0, 0,
	1825, 1826, 0, 1813, 188, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 1672, 283, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 305, 307, 0,
	0, 0, 0, 327, 0, 1575, 1636, 1637, 1584, 1699,
	1703, 1711, 0, 0, 0, 0, 0, 855, 1738, 0,
	301, 299, 0, 302, 301, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 576, 1381, 1499, 0, 0, 1501,
	1417, 1421, 0, 0, 2703, 0, 0, 0, 2654, 0,
	1379, 0, 0, 1500, 626, 632, 0, 635, 0, 638,
	0, 640, 0, 650, 2653, 0, 0, 1552, 0, 0,
	1579, 1531, 1605, 1531, 0, 1648, 1650, 0, 1658, 0,
	0, 0, 1837, 1843, 0, 1830, 1831, 1973, 1845, 1864,
	-2, 0, 0, 1954, 1872, 1869, 1875, 1876, 0, 0,
	382, 0, 1856, 1858, 0, 1352, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 358, 346, 2070,
	386, 0, 1976, 1963, 1964, 1961, 1675, 2285, 2289, 0,
	0, 0, 2291, -2, 0, 2313, -2, -2, 2548, 2600,
	2364, 1954, 2386, 2388, 2375, 2594, 2232, 0, 2475, 2472,
	0, 2459, 0, 2410, 2411, 0, 0, 2414, 2416, 2417,
	2418, 2171, 2162, 2161, 2573, 0, 0, 0, 0, 2450,
	1936, 0, 2464, 0, 0, 2004, 2464, 2464, 2056, 0,
	2058, 2017, 2005, 0, 2014, 0, 2680, 2042, 0, 2046,
	2051, 2035, 0, 408, 0, 412, 413, 414, 415, 417,
	0, 0, 0, 0, 0, 456, 824, 825, 0, 0,
	0, 0, 1724, 2105, 2110, 0, 2116, 0, 0, 0,
	0, 0, 0, 0, 0, 846, 290, 0, 1053, 1054,
	1104, 1109, 401, 1431, 0, 0, 0, 0, 213, 214,
	1395, 1393, 1690, 1694, 1691, 0, 216, 0, 0, 1454,
	0, 1457, 0, 0, 0, 0, 1464, 1481, 0, 0,
	0, 0, 0, 0, 1483, 0, 1482, 0, 0, 1515,
	0, 1663, 1670, 0, -2, 0, 0, 0, 223, 249,
	0, 0, 0, 0, 252, 1742, 225, 0, 0, 258,
	258, 1392, 0, 0, 1682, 1684, 1697, 0, 0, 0,
	0, 201, 0, 0, 1700, 1704, 1712, 1707, 1709, 1715,
	565, 521, 0, 0, 135, 144, 1816, 0, 0, 0,
	1827, 0, 187, 0, 0, 0, 1717, 271, 272, 0,
	258, 0, 258, 264, 258, 1672, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 1720, 1721, 292, 0, 0, 294, 392, 301,
	0, 482, 490, 495, 497, 498, 1442, 0, 1511, 1503,
	1504, 1505, 0, 1413, 1510, 1512, 0, 0, 1418, 0,
	0, 0, 0, 0, 0, 1398, 1380, 0, 1411, 1383,
	636, 0, 637, 639, 631, 0, 1369, 1549, 1597, 1531,
	0, 1600, 0, 0, 1640, 0, 0, 0, 0, 0,
	0, 0, 1839, 1843, 0, 1832, 1833, 1866, 1972, 0,
	0, 0, 1853, 1973, 0, 402, 0, 402, 360, 0,
	361, 362, 363, 370, 371, 372, 373, 345, 358, 888,
	890, 0, 0, 0, 896, 1962, 2293, -2, -2, 2314,
	0, 2681, 2683, 1954, 0, 2461, 1956, 0, 0, -2,
	0, 0, 0, 1937, 1920, 0, 1995, 1987, 1989, 1991,
	3031, 2783, 3183, 1921, 1922, 2082, 0, 0, 2044, 409,
	418, 419, 0, 421, 422, 826, 0, 0, 0, 0,
	2112, 0, 0, 0, 833, 0, 0, 0, 0, 1043,
	1278, 1280, 0, 0, 0, 0, 1692, 218, 0, 0,
	1458, 1459, 1461, 0, 1463, 1465, 1466, 1383, 0, 1470,
	0, 2705, 0, 1475, 1478, 1479, 0, 0, 1494, 1516,
	0, 1525, 0, 1665, 1675, 1669, 0, 1667, 1527, 0,
	222, 251, 224, 253, 248, 0, 1672, 0, 226, 236,
	0, 0, 165, 0, 0, 2776, 204, 202, 200, 133,
	139, 141, 147, 1679, 190, 0, 167, 0, 273, 282,
	1671, 284, 268, 258, 0, 304, 306, 308, 309, 310,
	311, 0, 1701, 1705, 1713, 0, 1728, 1729, 1730, 1731,
	1732, 0, 0, 0, 303, 0, 0, 478, 0, 489,
	1383, 1441, 1382, 1502, 0, 1513, 1383, 0, 0, 1527,
	0, 0, 0, 0, 0, 1385, 0, 1384, 0, 0,
	633, 2103, 647, 0, 0, 0, 1604, 0, 1651, 1649,
	0, 1657, 0, 0, 0, 1812, 0, 0, 1834, 1835,
	654, 1859, 0, 0, 1866, 1877, 381, 0, 384, 357,
	347, 0, 892, 0, 894, 0, 2387, 2479, 0, 0,
	2412, 2413, -2, 0, 2353, 2463, 2465, 0, 0, 0,
	0, 0, 2006, 2015, 420, 1725, 1725, 1725, 2106, 840,
	841, 843, 837, 839, 0, 0, 1288, 1289, 1688, 0,
	1695, 260, 1456, 1460, 0, 1467, 0, 0, 0, 1471,
	1535, 0, 0, 1552, 1552, 1484, 0, 0, 1519, 1520,
	1438, 0, 1521, 1522, 1523, 1664, 1965, 1670, 1383, 0,
	0, 250, 255, 0, 0, 0, 0, 0, 0, 189,
	0, 262, 285, 1672, 0, 0, 1733, 0, 0, 300,
	334, 512, 510, 1385, 0, 1514, 1419, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1420, 1525, 1527, 0,
	1438, 0, 1491, 1396, 0, 1399, 0, 1381, 0, 642,
	0, 1598, 0, 1605, 0, 0, 1658, 0, 0, 1822,
	1811, 1843, 1836, 1837, 2103, 0, 1867, 0, 891, 0,
	0, 0, 0, 0, 0, 2474, 1957, 2354, 0, 0,
	1990, 1992, 1993, 1994, 827, 828, 829, 0, 0, 1689,
	230, 0, 1529, 1469, 1540, 0, 0, 0, 0, 0,
	1485, 1517, 1518, 1515, 1437, 0, 1668, 1666, 1496, 1529,
	1531, 228, 0, 1527, 0, 1447, 0, 0, 1450, 0,
	0, 205, 2776, 203, 0, 258, 802, 1725, 258, 0,
	337, 0, 545, 511, 513, 0, 0, 517, 518, 519,
	1377, 0, 1507, 1509, 1438, 1525, 1527, 1383, 1438, 0,
	1400, 1442, 1398, 1599, 1603, 1601, 1641, 1527, 0, 1525,
	0, 1829, 1843, 1823, 1824, 0, 1839, 0, 0, 402,
	893, 895, 2471, 2491, 2480, -2, 3114, 2784, 0, 2491,
	2491, 2466, 2467, 0, 0, 0, 1383, 0, 1472, 1536,
	1537, 0, 1532, 1533, 1534, 2704, 1473, 1474, 1476, 1477,
	2103, 0, 1526, 1535, 254, 1383, 1444, 0, 0, 1445,
	0, 0, 208, 0, 210, 286, 1723, 1726, 0, 312,
	0, 0, 485, 543, 0, 0, 514, 515, 537, 516,
	1374, 1376, 1383, 0, 1383, 1438, 1525, 2103, 1383, 0,
	0, 0, 1383, 1385, 1525, 0, 1438, 0, 1818, 1828,
	0, 1838, 1812, 0, 1862, 0, 383, 2476, 0, 0,
	2482, 2483, 2484, 2485, 2486, 2477, 2478, 842, 844, 1462,
	1468, 0, 1538, 0, 1539, 0, 0, 0, 1495, 1524,
	1540, 234, 1448, 0, 1451, 0, 206, 0, 0, 332,
	333, 542, 538, 1506, 1508, 2103, 1383, 1438, 1678, 2103,
	1386, 0, 1388, 1385, 1397, 1438, 0, 1383, 0, 1841,
	1817, 1821, 2662, 1822, 1860, 0, 0, 0, 2488, 2489,
	0, 0, 0, 1541, 0, 1544, 1545, 0, 1542, 1515,
	0, 0, 258, 0, 1941, 1678, 2103, 1383, 1489, 0,
	1677, 1678, 1387, 1377, 1383, 1527, 2103, 1525, 1815, 1843,
	1829, 0, 2103, 2487, 2490, 2481, 1528, 1543, 1546, 1547,
	1497, 0, 0, 1727, 335, 0, 0, 544, 539, 540,
	1486, 1678, 2103, 1676, 1490, 1375, 2103, 1525, 1678, 1438,
	1808, 1814, 0, 0, 1818, 2103, 1863, 1435, 0, 0,
	541, 1487, 1678, 1678, 1438, 1654, 1383, 1840, 1815, 1861,
	1449, 1434, 0, 336, 1488, 1652, 1383, 2103, 1809, 0,
	2103, 1678, 0, 1678, 1655, 1435, 1653, 1452,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 655, 3, 661, 656, 3,
	667, 668, 659, 657, 672, 658, 669, 660, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 676, 673,
	647, 649, 648, 652, 671, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 665, 3, 666, 662, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 674, 654, 675, 650,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 643, 57986, 644, 57987, 645, 57988, 646, 57989, 651,
	57990, 653, 57991, 663, 57992, 664, 57993, 670, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1696
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1699
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1700
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1701
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1702
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "SHOW COMMIT TIMESTAMP")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1724
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1725
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1726
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1727
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1728
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1729
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1730
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1731
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1792
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1818
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1852
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1923
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1927
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1950
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2074
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2087
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2100
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2136
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2170
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2203
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2224
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2232
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2268
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2279
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2291
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = true
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = false
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2332
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2394
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2411
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2430
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2438
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2449
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2459
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2469
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 200:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2478
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2489
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2495
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2521
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2617
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2661
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2671
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = nil
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = true
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = false
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = nil
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3018
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3123
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3305
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3370
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = nil
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3734
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3743
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3749
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3754
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3759
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3791
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = nil
		}
	case 403:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3867
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3881
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3953
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4099
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4120
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4130
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "CREATE TENANT")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4150
		{
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "CREATE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.CreateTenant{Name: tree.Name(sqlDollar[3].str)}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.CreateTenantFromReplication{
				Name:                        tree.Name(sqlDollar[3].str),
				ReplicationSourceTenantName: tree.Name(sqlDollar[7].str),
				ReplicationSourceAddress:    sqlDollar[9].union.expr(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "CREATE TENANT")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4183
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4186
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4207
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Params:      sqlDollar[6].union.functionParams(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = true
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = false
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = true
		}
	case 490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = false
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = sqlDollar[1].union.functionParams()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = tree.FuncParams{}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = tree.FuncParams{sqlDollar[1].union.functionParam()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionParams(), sqlDollar[3].union.functionParam())
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{
			arg := sqlDollar[1].union.functionParam()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			arg := sqlDollar[1].union.functionParam()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = tree.FuncParam{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionParamClass(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = tree.FuncParam{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionParamClass(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = tree.FuncParam{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionParamIn,
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = tree.FuncParam{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionParamClass(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = tree.FuncParam{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionParamIn,
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = tree.FunctionParamIn
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4303
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4306
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4338
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			return unimplemented(sqllex, "create window function")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4371
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4410
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4411
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Params:   sqlDollar[2].union.functionParams(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = sqlDollar[2].union.functionParams()
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = tree.FuncParams{}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = tree.FuncParams{sqlDollar[1].union.functionParam()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionParams(), sqlDollar[3].union.functionParam())
		}
	case 557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4545
		{
		}
	case 561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4546
		{
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = true
		}
	case 567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = false
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4596
		{
			return unimplemented(sqllex, "create access method")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			return unimplemented(sqllex, "create cast")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4599
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4601
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4602
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4603
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplemented(sqllex, "create publication")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "create rule")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplemented(sqllex, "create server")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4615
		{
		}
	case 586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4616
		{
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4619
		{
		}
	case 588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4620
		{
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4623
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4629
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4630
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4633
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			return unimplemented(sqllex, "drop server")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4689
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4716
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4727
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				UsingExtremes: true,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Where: tree.NewWhere(tree.AstWhere, sqlDollar[1].union.expr()),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4775
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4793
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4824
		{
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4826
		{
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.str = ""
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4844
		{

			sqlVAL.union.val = nil
		}
	case 654:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Using:     sqlDollar[5].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "DELETE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "DROP TENANT")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4917
		{
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "DROP")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.DropTenant{
				Name:     tree.Name(sqlDollar[3].str),
				IfExists: false,
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = &tree.DropTenant{
				Name:     tree.Name(sqlDollar[5].str),
				IfExists: true,
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "DROP TENANT")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5138
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5213
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5229
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5237
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5245
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "DELETE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5270
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "INSERT")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "DELETE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "INSERT")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowTenant{
				Name:            sqlDollar[3].union.expr(),
				WithReplication: false,
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.ShowTenant{
				Name:            sqlDollar[3].union.expr(),
				WithReplication: true,
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5439
		{
			return helpWith(sqllex, "SHOW TENANT")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5455
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5463
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5488
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5496
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5529
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5580
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5630
		{
			return helpWith(sqllex, "GRANT")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5781
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5784
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5794
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "RESET")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5842
		{
			return helpWith(sqllex, "RESET")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5853
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5867
		{
			return helpWith(sqllex, "USE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5871
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5872
		{
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5873
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5877
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5878
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5879
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5880
		{
			return helpWith(sqllex, "USE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5896
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5914
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5940
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5994
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6004
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6012
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6020
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6050
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6056
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6065
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6087
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6092
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6117
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6133
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			return unimplemented(sqllex, "set from current")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6146
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6164
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6176
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = tree.Low
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = tree.Normal
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = tree.High
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6315
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6316
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6317
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6318
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6319
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6326
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6328
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6329
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6331
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6340
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6343
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6345
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6346
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6347
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			return helpWith(sqllex, "SHOW TENANT")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6349
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6353
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6355
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6358
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6378
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6398
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = true
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = false
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = true
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = false
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = false
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6463
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6476
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6515
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = int64(1)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = int64(1)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = int64(1)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6571
		{
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6574
		{
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6575
		{
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6579
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6599
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6611
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.str = "client_encoding"
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6631
		{
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6633
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.str = "timezone"
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6639
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6674
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6682
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6695
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6703
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6775
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6814
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6819
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6828
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6834
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6848
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6859
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6882
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6893
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6911
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6951
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6964
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6979
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6990
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7003
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7012
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = &tree.ShowCommitTimestamp{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7039
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7044
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7055
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7060
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = true
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = false
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7096
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7098
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7115
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7142
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7158
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7166
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7174
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7210
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7215
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7217
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7221
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = true
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = false
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7236
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7241
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7272
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7300
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7310
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7315
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = true
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = false
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7347
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7358
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7362
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7372
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7383
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7397
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7405
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7415
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7433
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7450
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7455
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7460
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7465
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7470
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeIndexes, Name: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7475
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSecondaryIndexes, Name: sqlDollar[6].union.unresolvedObjectName()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7480
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7500
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7513
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7518
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7530
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7535
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7546
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7557
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7575
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7583
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7604
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7609
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7614
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7618
		{
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7627
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7641
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7650
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7662
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7728
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7738
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7751
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7933
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7978
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7989
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7997
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8051
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8057
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8058
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8059
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8060
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8071
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8099
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8112
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8144
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8152
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8163
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8199
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8227
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8263
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8278
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8306
		{

			sqlVAL.union.val = nil
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8312
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.str = ""
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8322
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = nil
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8345
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8349
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8385
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8398
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8412
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8413
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8414
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8469
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8495
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8506
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8509
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8512
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8513
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.str = ""
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8651
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8758
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8803
		{

			sqlVAL.union.val = true
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = false
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8813
		{
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8817
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8820
		{
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[3].union.idxElems(),
				Sharded:          sqlDollar[5].union.shardedIndexDef(),
				Storing:          sqlDollar[6].union.nameList(),
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[4].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[6].union.partitionByIndex(),
				StorageParams:    sqlDollar[7].union.storageParams(),
				Predicate:        sqlDollar[8].union.expr(),
				NotVisible:       sqlDollar[9].union.bool(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8945
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8956
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8973
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8983
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9066
		{
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9068
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9069
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9071
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9153
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9238
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9247
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9255
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9266
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9284
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9294
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9298
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9300
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9303
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9306
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9308
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9331
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9358
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9392
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.str = ""
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = true
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9435
		{

			sqlVAL.union.val = true
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = false
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9452
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9466
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9478
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9490
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9501
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9512
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = false
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = true
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = true
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = nil
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9659
		{
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9660
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9685
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9687
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9689
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9691
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9695
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9730
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9748
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9767
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9784
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9801
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9805
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = false
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = true
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = false
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = true
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = false
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9859
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9865
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9871
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9879
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.str = ""
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.str = ""
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = true
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = false
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = false
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9946
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9952
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10177
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10183
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10195
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10201
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10215
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10221
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10280
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = true
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = false
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10344
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.str = ""
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10380
		{
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10383
		{
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10384
		{
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10413
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10443
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10451
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10480
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10491
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10495
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10496
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10497
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10516
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10529
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10538
		{
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10540
		{
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10557
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10563
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10564
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10571
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10578
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10583
		{
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10611
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10624
		{
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10626
		{
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10722
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.str = ""
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.str = ""
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10757
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10762
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{

		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10794
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.str = ""
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.str = ""
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.str = ""
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.str = ""
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10849
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10874
		{
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10875
		{
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10904
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10922
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10926
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10935
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11029
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11120
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11135
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11279
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11314
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11315
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11316
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11377
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11421
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11437
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = true
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = false
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11491
		{
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = nil
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11504
		{
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11505
		{
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = true
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = false
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = false
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = true
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11534
		{
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11535
		{
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11538
		{
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11539
		{
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11580
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11592
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11597
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11623
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11656
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11711
		{
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11712
		{
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11715
		{
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11752
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11782
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11784
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11799
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = tree.From{}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11821
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11826
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11831
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11852
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11868
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11880
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11899
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11941
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11951
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11986
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11997
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12027
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = nil
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = true
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = false
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.str = tree.AstFull
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.str = tree.AstRight
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.str = tree.AstInner
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12241
		{
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12242
		{
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.str = tree.AstHash
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.str = ""
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12311
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12316
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12346
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12352
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12358
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12368
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = true
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = false
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = true
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = false
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12398
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12417
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12430
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12438
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12439
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12457
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12459
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12467
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12480
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12487
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12496
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12536
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12546
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12547
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = types.Geography
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12596
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12604
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12632
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12640
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12648
		{
			sqlVAL.union.val = nil
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = types.Int2
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = types.Int
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = types.Float4
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12675
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12679
		{
			sqlVAL.union.val = types.Float
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12683
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12691
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12699
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = types.Bool
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12713
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = types.Float
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12732
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12738
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12760
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = types.String
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = true
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = false
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12805
		{
			sqlVAL.union.val = types.Date
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12809
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12817
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12831
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12840
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12848
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12865
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = true
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = false
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12877
		{
			sqlVAL.union.val = false
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12881
		{
			sqlVAL.union.val = types.Interval
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12885
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12889
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12916
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12955
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12973
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12988
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = nil
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13018
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13078
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13095
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13191
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13203
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.TSMatches), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13231
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13239
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13257
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13261
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13269
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13277
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13301
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13325
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13345
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13353
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13357
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13361
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13406
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13410
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13414
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13418
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13426
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13430
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13438
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13455
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13460
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13472
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13476
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13480
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13484
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13488
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13492
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13496
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13500
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13504
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13508
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13512
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13516
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13520
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13524
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13528
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13532
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13540
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13544
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13548
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13552
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13556
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13568
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13576
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13586
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13594
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13612
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13620
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13656
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13660
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13664
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13668
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13672
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13677
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13679
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13683
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13687
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13691
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13695
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13699
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13703
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13712
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13719
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13723
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13727
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13737
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13742
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13746
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13750
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13754
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13758
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13761
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13772
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13773
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13785
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13788
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13797
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13850
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13863
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13875
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13884
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13885
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13930
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13938
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13942
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13946
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13950
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13954
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13958
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13962
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13966
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13970
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13974
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13978
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13988
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13993
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14002
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14011
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14013
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14017
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14020
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14029
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14034
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14039
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14044
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14049
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14054
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14060
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14063
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14064
		{
			return unimplemented(sqllex, "treat")
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14066
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14070
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14085
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14090
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14096
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14100
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14106
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14110
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14117
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14121
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14127
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14131
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14137
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14145
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14149
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14153
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14160
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14180
		{
			sqlVAL.str = ""
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14186
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14190
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14196
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14204
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14212
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14220
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14226
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14239
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14267
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14271
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14275
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14279
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14286
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14295
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14299
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14303
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14307
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14312
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14325
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14329
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14336
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14348
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14352
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14356
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14372
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14373
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14374
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14375
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14376
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14377
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14378
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14379
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14380
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14381
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14382
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14383
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14385
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14386
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14387
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14388
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14389
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14390
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14391
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14392
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14393
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14394
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14395
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14396
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14397
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14398
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14399
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14400
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14401
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14402
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14403
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14404
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14405
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.TSMatches)
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14406
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14407
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14408
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14413
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14429
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14436
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14437
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14438
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14439
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14462
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14466
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14472
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14476
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14480
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14491
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14495
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14501
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14505
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14512
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14518
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14522
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14528
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14532
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14538
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14542
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14548
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14552
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14558
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14562
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14585
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14589
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14593
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14599
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14606
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14610
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14627
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14631
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14635
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14639
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14643
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14649
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14655
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14661
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14665
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14669
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14675
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14687
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14694
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14704
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14710
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14714
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14721
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14727
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14731
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14738
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14744
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14753
		{
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14754
		{
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14758
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14768
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14777
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14781
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14785
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14797
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14807
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14811
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14830
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14838
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14861
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14870
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14874
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14878
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14882
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14888
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14907
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14911
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14923
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14927
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14936
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14947
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14956
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14964
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14981
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15066
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15074
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15078
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15084
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15088
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15094
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15100
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15107
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15134
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15141
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15145
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2681:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15149
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2683:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15163
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15167
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15171
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15184
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15189
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15197
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15215
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15228
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15235
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15260
		{
			sqlVAL.str = ""
		}
	case 2704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15266
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15270
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
