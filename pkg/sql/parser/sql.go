// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:66

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:621
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10180

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1101,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	184, 925,
	201, 925,
	216, 252,
	300, 252,
	309, 744,
	336, 252,
	345, 744,
	384, 744,
	408, 252,
	432, 744,
	-2, 0,
	-1, 75,
	216, 256,
	-2, 0,
	-1, 76,
	111, 1101,
	190, 1101,
	418, 1101,
	419, 1101,
	-2, 0,
	-1, 88,
	124, 1075,
	140, 1075,
	153, 1075,
	198, 1075,
	228, 1075,
	264, 1075,
	274, 1075,
	413, 1075,
	-2, 1046,
	-1, 119,
	130, 662,
	215, 662,
	303, 642,
	354, 642,
	401, 662,
	-2, 0,
	-1, 120,
	4, 1103,
	21, 1103,
	22, 1103,
	23, 1103,
	24, 1103,
	25, 1103,
	27, 1103,
	33, 1103,
	38, 1103,
	39, 1103,
	40, 1103,
	41, 1103,
	42, 1103,
	43, 1103,
	44, 1103,
	45, 1103,
	46, 1103,
	47, 1103,
	48, 1103,
	49, 1103,
	50, 1103,
	52, 1103,
	53, 1103,
	54, 1103,
	55, 1103,
	56, 1103,
	57, 1103,
	60, 1103,
	61, 1103,
	62, 1103,
	63, 1103,
	65, 1103,
	66, 1103,
	70, 1103,
	71, 1103,
	72, 1103,
	73, 1103,
	74, 1103,
	75, 1103,
	77, 1103,
	78, 1103,
	79, 1103,
	80, 1103,
	82, 1103,
	84, 1103,
	85, 1103,
	86, 1103,
	88, 1103,
	90, 1103,
	91, 1103,
	99, 1103,
	100, 1103,
	101, 1103,
	102, 1103,
	103, 1103,
	104, 1103,
	105, 1103,
	106, 1103,
	108, 1103,
	110, 1103,
	111, 1103,
	113, 1103,
	116, 1103,
	117, 1103,
	118, 1103,
	120, 1103,
	122, 1103,
	123, 1103,
	125, 1103,
	126, 1103,
	127, 1103,
	128, 1103,
	129, 1103,
	130, 1103,
	131, 1103,
	132, 1103,
	133, 1103,
	134, 1103,
	135, 1103,
	136, 1103,
	137, 1103,
	139, 1103,
	145, 1103,
	146, 1103,
	147, 1103,
	148, 1103,
	149, 1103,
	150, 1103,
	152, 1103,
	154, 1103,
	158, 1103,
	159, 1103,
	161, 1103,
	162, 1103,
	164, 1103,
	165, 1103,
	167, 1103,
	168, 1103,
	169, 1103,
	170, 1103,
	171, 1103,
	172, 1103,
	173, 1103,
	174, 1103,
	176, 1103,
	177, 1103,
	179, 1103,
	180, 1103,
	181, 1103,
	184, 1103,
	185, 1103,
	186, 1103,
	187, 1103,
	190, 1103,
	191, 1103,
	192, 1103,
	193, 1103,
	194, 1103,
	195, 1103,
	196, 1103,
	197, 1103,
	199, 1103,
	201, 1103,
	203, 1103,
	205, 1103,
	206, 1103,
	207, 1103,
	209, 1103,
	210, 1103,
	213, 1103,
	214, 1103,
	215, 1103,
	216, 1103,
	217, 1103,
	219, 1103,
	220, 1103,
	222, 1103,
	223, 1103,
	225, 1103,
	226, 1103,
	229, 1103,
	230, 1103,
	233, 1103,
	234, 1103,
	235, 1103,
	237, 1103,
	238, 1103,
	239, 1103,
	240, 1103,
	241, 1103,
	242, 1103,
	243, 1103,
	244, 1103,
	245, 1103,
	246, 1103,
	248, 1103,
	249, 1103,
	250, 1103,
	251, 1103,
	253, 1103,
	255, 1103,
	257, 1103,
	259, 1103,
	260, 1103,
	261, 1103,
	262, 1103,
	263, 1103,
	265, 1103,
	266, 1103,
	267, 1103,
	269, 1103,
	270, 1103,
	271, 1103,
	272, 1103,
	275, 1103,
	276, 1103,
	277, 1103,
	279, 1103,
	281, 1103,
	282, 1103,
	283, 1103,
	284, 1103,
	285, 1103,
	286, 1103,
	287, 1103,
	288, 1103,
	289, 1103,
	290, 1103,
	292, 1103,
	293, 1103,
	294, 1103,
	295, 1103,
	296, 1103,
	297, 1103,
	299, 1103,
	301, 1103,
	302, 1103,
	303, 1103,
	304, 1103,
	305, 1103,
	306, 1103,
	307, 1103,
	308, 1103,
	309, 1103,
	310, 1103,
	312, 1103,
	313, 1103,
	314, 1103,
	315, 1103,
	316, 1103,
	318, 1103,
	319, 1103,
	320, 1103,
	321, 1103,
	322, 1103,
	323, 1103,
	324, 1103,
	325, 1103,
	327, 1103,
	329, 1103,
	330, 1103,
	331, 1103,
	332, 1103,
	333, 1103,
	334, 1103,
	336, 1103,
	337, 1103,
	338, 1103,
	339, 1103,
	340, 1103,
	341, 1103,
	342, 1103,
	343, 1103,
	345, 1103,
	346, 1103,
	347, 1103,
	348, 1103,
	349, 1103,
	350, 1103,
	351, 1103,
	352, 1103,
	353, 1103,
	354, 1103,
	356, 1103,
	357, 1103,
	358, 1103,
	359, 1103,
	360, 1103,
	362, 1103,
	363, 1103,
	364, 1103,
	365, 1103,
	366, 1103,
	368, 1103,
	369, 1103,
	370, 1103,
	371, 1103,
	372, 1103,
	373, 1103,
	374, 1103,
	375, 1103,
	376, 1103,
	377, 1103,
	378, 1103,
	379, 1103,
	381, 1103,
	382, 1103,
	383, 1103,
	385, 1103,
	386, 1103,
	387, 1103,
	388, 1103,
	389, 1103,
	390, 1103,
	391, 1103,
	393, 1103,
	394, 1103,
	395, 1103,
	396, 1103,
	397, 1103,
	399, 1103,
	401, 1103,
	402, 1103,
	403, 1103,
	404, 1103,
	405, 1103,
	407, 1103,
	408, 1103,
	409, 1103,
	411, 1103,
	412, 1103,
	415, 1103,
	416, 1103,
	417, 1103,
	418, 1103,
	419, 1103,
	420, 1103,
	422, 1103,
	424, 1103,
	425, 1103,
	426, 1103,
	427, 1103,
	428, 1103,
	429, 1103,
	430, 1103,
	432, 1103,
	433, 1103,
	434, 1103,
	439, 1103,
	440, 1103,
	441, 1103,
	442, 1103,
	443, 1103,
	444, 1103,
	-2, 0,
	-1, 121,
	1, 976,
	205, 976,
	299, 976,
	307, 976,
	447, 976,
	470, 976,
	-2, 0,
	-1, 123,
	1, 976,
	470, 976,
	-2, 0,
	-1, 124,
	1, 976,
	470, 976,
	-2, 0,
	-1, 125,
	1, 980,
	470, 980,
	-2, 0,
	-1, 149,
	124, 1074,
	140, 1074,
	153, 1074,
	198, 1074,
	228, 1074,
	264, 1074,
	274, 1074,
	413, 1074,
	-2, 1049,
	-1, 182,
	4, 1110,
	5, 1110,
	6, 1110,
	7, 1110,
	8, 1110,
	9, 1110,
	10, 1110,
	21, 1110,
	22, 1110,
	23, 1110,
	24, 1110,
	25, 1110,
	27, 1110,
	33, 1110,
	34, 1110,
	38, 1110,
	39, 1110,
	40, 1110,
	41, 1110,
	42, 1110,
	43, 1110,
	44, 1110,
	45, 1110,
	46, 1110,
	47, 1110,
	48, 1110,
	49, 1110,
	50, 1110,
	52, 1110,
	53, 1110,
	54, 1110,
	55, 1110,
	56, 1110,
	57, 1110,
	58, 1110,
	59, 1110,
	60, 1110,
	61, 1110,
	62, 1110,
	63, 1110,
	65, 1110,
	66, 1110,
	68, 1110,
	70, 1110,
	71, 1110,
	72, 1110,
	73, 1110,
	74, 1110,
	75, 1110,
	77, 1110,
	78, 1110,
	79, 1110,
	80, 1110,
	82, 1110,
	84, 1110,
	85, 1110,
	86, 1110,
	88, 1110,
	89, 1110,
	90, 1110,
	91, 1110,
	92, 1110,
	93, 1110,
	94, 1110,
	95, 1110,
	96, 1110,
	97, 1110,
	98, 1110,
	99, 1110,
	100, 1110,
	101, 1110,
	102, 1110,
	103, 1110,
	104, 1110,
	105, 1110,
	106, 1110,
	107, 1110,
	108, 1110,
	110, 1110,
	111, 1110,
	113, 1110,
	116, 1110,
	117, 1110,
	118, 1110,
	120, 1110,
	122, 1110,
	123, 1110,
	125, 1110,
	126, 1110,
	127, 1110,
	128, 1110,
	129, 1110,
	130, 1110,
	131, 1110,
	132, 1110,
	133, 1110,
	134, 1110,
	135, 1110,
	136, 1110,
	137, 1110,
	138, 1110,
	139, 1110,
	145, 1110,
	146, 1110,
	147, 1110,
	148, 1110,
	149, 1110,
	150, 1110,
	152, 1110,
	154, 1110,
	157, 1110,
	158, 1110,
	159, 1110,
	161, 1110,
	162, 1110,
	164, 1110,
	165, 1110,
	167, 1110,
	168, 1110,
	169, 1110,
	170, 1110,
	171, 1110,
	172, 1110,
	173, 1110,
	174, 1110,
	175, 1110,
	176, 1110,
	177, 1110,
	179, 1110,
	180, 1110,
	181, 1110,
	184, 1110,
	185, 1110,
	186, 1110,
	187, 1110,
	189, 1110,
	190, 1110,
	191, 1110,
	192, 1110,
	193, 1110,
	194, 1110,
	195, 1110,
	196, 1110,
	197, 1110,
	199, 1110,
	201, 1110,
	202, 1110,
	203, 1110,
	204, 1110,
	205, 1110,
	206, 1110,
	207, 1110,
	208, 1110,
	209, 1110,
	210, 1110,
	213, 1110,
	214, 1110,
	215, 1110,
	216, 1110,
	217, 1110,
	219, 1110,
	220, 1110,
	222, 1110,
	223, 1110,
	224, 1110,
	225, 1110,
	226, 1110,
	227, 1110,
	229, 1110,
	230, 1110,
	231, 1110,
	232, 1110,
	233, 1110,
	234, 1110,
	235, 1110,
	237, 1110,
	238, 1110,
	239, 1110,
	240, 1110,
	241, 1110,
	242, 1110,
	243, 1110,
	244, 1110,
	245, 1110,
	246, 1110,
	247, 1110,
	248, 1110,
	249, 1110,
	250, 1110,
	251, 1110,
	252, 1110,
	253, 1110,
	254, 1110,
	255, 1110,
	256, 1110,
	257, 1110,
	258, 1110,
	259, 1110,
	260, 1110,
	261, 1110,
	262, 1110,
	263, 1110,
	265, 1110,
	266, 1110,
	267, 1110,
	270, 1110,
	271, 1110,
	272, 1110,
	275, 1110,
	276, 1110,
	277, 1110,
	278, 1110,
	279, 1110,
	280, 1110,
	281, 1110,
	282, 1110,
	283, 1110,
	284, 1110,
	285, 1110,
	286, 1110,
	287, 1110,
	288, 1110,
	289, 1110,
	290, 1110,
	292, 1110,
	293, 1110,
	294, 1110,
	295, 1110,
	296, 1110,
	297, 1110,
	299, 1110,
	301, 1110,
	302, 1110,
	303, 1110,
	304, 1110,
	305, 1110,
	306, 1110,
	307, 1110,
	308, 1110,
	309, 1110,
	310, 1110,
	312, 1110,
	313, 1110,
	314, 1110,
	315, 1110,
	316, 1110,
	318, 1110,
	319, 1110,
	320, 1110,
	321, 1110,
	322, 1110,
	323, 1110,
	324, 1110,
	325, 1110,
	327, 1110,
	328, 1110,
	329, 1110,
	330, 1110,
	331, 1110,
	332, 1110,
	333, 1110,
	334, 1110,
	336, 1110,
	337, 1110,
	338, 1110,
	339, 1110,
	340, 1110,
	341, 1110,
	342, 1110,
	343, 1110,
	345, 1110,
	346, 1110,
	347, 1110,
	348, 1110,
	349, 1110,
	350, 1110,
	351, 1110,
	352, 1110,
	353, 1110,
	354, 1110,
	355, 1110,
	356, 1110,
	357, 1110,
	358, 1110,
	359, 1110,
	360, 1110,
	361, 1110,
	362, 1110,
	363, 1110,
	364, 1110,
	365, 1110,
	366, 1110,
	368, 1110,
	369, 1110,
	370, 1110,
	371, 1110,
	372, 1110,
	373, 1110,
	374, 1110,
	375, 1110,
	376, 1110,
	377, 1110,
	378, 1110,
	379, 1110,
	381, 1110,
	382, 1110,
	383, 1110,
	385, 1110,
	386, 1110,
	387, 1110,
	388, 1110,
	389, 1110,
	390, 1110,
	391, 1110,
	393, 1110,
	394, 1110,
	395, 1110,
	396, 1110,
	397, 1110,
	399, 1110,
	401, 1110,
	402, 1110,
	403, 1110,
	404, 1110,
	405, 1110,
	406, 1110,
	407, 1110,
	408, 1110,
	409, 1110,
	411, 1110,
	412, 1110,
	414, 1110,
	415, 1110,
	416, 1110,
	417, 1110,
	418, 1110,
	419, 1110,
	420, 1110,
	421, 1110,
	422, 1110,
	424, 1110,
	425, 1110,
	426, 1110,
	427, 1110,
	428, 1110,
	429, 1110,
	430, 1110,
	432, 1110,
	433, 1110,
	434, 1110,
	439, 1110,
	440, 1110,
	441, 1110,
	442, 1110,
	443, 1110,
	444, 1110,
	445, 1110,
	451, 1110,
	458, 1110,
	459, 1110,
	460, 1110,
	467, 1110,
	471, 1110,
	-2, 0,
	-1, 564,
	156, 1811,
	398, 1811,
	450, 1811,
	469, 1811,
	-2, 0,
	-1, 565,
	156, 1891,
	398, 1891,
	450, 1891,
	469, 1891,
	-2, 0,
	-1, 566,
	156, 1800,
	398, 1800,
	450, 1800,
	469, 1800,
	-2, 0,
	-1, 568,
	156, 1985,
	398, 1985,
	450, 1985,
	469, 1985,
	-2, 0,
	-1, 570,
	156, 2015,
	398, 2015,
	450, 2015,
	469, 2015,
	-2, 0,
	-1, 577,
	156, 1902,
	398, 1902,
	450, 1902,
	469, 1902,
	-2, 509,
	-1, 599,
	469, 1757,
	472, 1757,
	-2, 713,
	-1, 600,
	469, 1759,
	472, 1759,
	-2, 714,
	-1, 601,
	469, 1758,
	472, 1758,
	-2, 715,
	-1, 602,
	472, 1696,
	-2, 716,
	-1, 645,
	432, 907,
	-2, 745,
	-1, 750,
	303, 643,
	354, 643,
	-2, 0,
	-1, 751,
	303, 642,
	354, 642,
	-2, 590,
	-1, 755,
	1, 672,
	466, 672,
	468, 672,
	470, 672,
	-2, 0,
	-1, 756,
	1, 712,
	153, 712,
	466, 712,
	468, 712,
	470, 712,
	-2, 0,
	-1, 764,
	1, 646,
	466, 646,
	468, 646,
	470, 646,
	-2, 0,
	-1, 767,
	1, 672,
	466, 672,
	468, 672,
	470, 672,
	-2, 0,
	-1, 768,
	1, 674,
	466, 674,
	468, 674,
	470, 674,
	-2, 0,
	-1, 769,
	1, 677,
	466, 677,
	468, 677,
	470, 677,
	-2, 0,
	-1, 773,
	1, 691,
	466, 691,
	468, 691,
	470, 691,
	-2, 0,
	-1, 774,
	1, 693,
	466, 693,
	468, 693,
	470, 693,
	-2, 0,
	-1, 818,
	140, 1112,
	153, 1112,
	228, 1112,
	264, 1112,
	-2, 1053,
	-1, 831,
	140, 1111,
	153, 1111,
	228, 1111,
	264, 1111,
	-2, 1050,
	-1, 855,
	469, 1756,
	-2, 517,
	-1, 883,
	467, 1748,
	-2, 1739,
	-1, 889,
	5, 1252,
	-2, 1790,
	-1, 890,
	5, 1253,
	-2, 1795,
	-1, 891,
	5, 1254,
	-2, 1794,
	-1, 892,
	5, 1255,
	-2, 2012,
	-1, 893,
	5, 1256,
	-2, 1904,
	-1, 894,
	5, 1257,
	-2, 1977,
	-1, 895,
	5, 1258,
	-2, 1979,
	-1, 896,
	5, 1259,
	-2, 1992,
	-1, 897,
	5, 1260,
	-2, 1980,
	-1, 898,
	5, 1261,
	-2, 1981,
	-1, 899,
	5, 1262,
	-2, 1789,
	-1, 900,
	5, 1263,
	-2, 2028,
	-1, 901,
	5, 1264,
	-2, 1865,
	-1, 902,
	5, 1265,
	-2, 1915,
	-1, 903,
	5, 1266,
	-2, 1917,
	-1, 904,
	5, 1267,
	-2, 1869,
	-1, 905,
	5, 1268,
	467, 1766,
	-2, 1757,
	-1, 911,
	467, 1767,
	-2, 1758,
	-1, 913,
	5, 1272,
	-2, 2061,
	-1, 914,
	5, 1273,
	-2, 2062,
	-1, 915,
	5, 1274,
	-2, 1868,
	-1, 916,
	5, 1275,
	-2, 2074,
	-1, 917,
	5, 1276,
	-2, 1870,
	-1, 918,
	5, 1277,
	-2, 1871,
	-1, 919,
	5, 1278,
	-2, 1872,
	-1, 920,
	5, 1279,
	-2, 2043,
	-1, 921,
	5, 1280,
	-2, 2072,
	-1, 922,
	5, 1281,
	-2, 1848,
	-1, 923,
	5, 1282,
	-2, 1849,
	-1, 924,
	5, 1296,
	-2, 2055,
	-1, 926,
	5, 1271,
	-2, 2051,
	-1, 927,
	5, 1271,
	-2, 2050,
	-1, 928,
	5, 1271,
	-2, 2067,
	-1, 929,
	5, 1288,
	-2, 2045,
	-1, 930,
	5, 1289,
	-2, 1791,
	-1, 931,
	5, 1299,
	-2, 2044,
	-1, 932,
	5, 1301,
	-2, 2083,
	-1, 934,
	5, 1312,
	-2, 1822,
	-1, 935,
	5, 1323,
	-2, 2076,
	-1, 936,
	5, 1315,
	-2, 2077,
	-1, 937,
	5, 1323,
	-2, 2078,
	-1, 938,
	5, 1319,
	-2, 2079,
	-1, 939,
	5, 1240,
	-2, 1878,
	-1, 940,
	5, 1241,
	-2, 1879,
	-1, 941,
	469, 1754,
	-2, 1738,
	-1, 942,
	467, 2104,
	-2, 1755,
	-1, 964,
	5, 1307,
	-2, 2003,
	-1, 982,
	5, 1306,
	-2, 2084,
	-1, 992,
	5, 1308,
	433, 1308,
	-2, 2046,
	-1, 993,
	5, 1309,
	433, 1309,
	-2, 2047,
	-1, 1030,
	467, 1766,
	-2, 1757,
	-1, 1058,
	156, 2015,
	398, 2015,
	450, 2015,
	469, 2015,
	-2, 0,
	-1, 1061,
	1, 495,
	470, 495,
	-2, 988,
	-1, 1181,
	318, 1735,
	460, 1735,
	-2, 1734,
	-1, 1193,
	471, 1735,
	-2, 1736,
	-1, 1194,
	88, 1099,
	250, 1099,
	288, 1099,
	-2, 906,
	-1, 1205,
	88, 1099,
	250, 1099,
	288, 1099,
	-2, 906,
	-1, 1245,
	309, 744,
	432, 744,
	-2, 251,
	-1, 1265,
	88, 1099,
	250, 1099,
	288, 1099,
	-2, 906,
	-1, 1268,
	88, 1099,
	250, 1099,
	288, 1099,
	-2, 906,
	-1, 1274,
	268, 1761,
	-2, 0,
	-1, 1340,
	1, 370,
	466, 370,
	468, 370,
	470, 370,
	-2, 1073,
	-1, 1343,
	4, 2082,
	11, 2082,
	12, 2082,
	14, 2082,
	15, 2082,
	16, 2082,
	17, 2082,
	18, 2082,
	19, 2082,
	21, 2082,
	22, 2082,
	23, 2082,
	24, 2082,
	25, 2082,
	27, 2082,
	30, 2082,
	31, 2082,
	33, 2082,
	35, 2082,
	38, 2082,
	39, 2082,
	40, 2082,
	41, 2082,
	42, 2082,
	43, 2082,
	44, 2082,
	45, 2082,
	46, 2082,
	47, 2082,
	48, 2082,
	49, 2082,
	50, 2082,
	52, 2082,
	53, 2082,
	54, 2082,
	55, 2082,
	56, 2082,
	57, 2082,
	60, 2082,
	61, 2082,
	62, 2082,
	63, 2082,
	65, 2082,
	66, 2082,
	67, 2082,
	70, 2082,
	71, 2082,
	72, 2082,
	73, 2082,
	74, 2082,
	75, 2082,
	76, 2082,
	77, 2082,
	78, 2082,
	79, 2082,
	80, 2082,
	82, 2082,
	83, 2082,
	84, 2082,
	85, 2082,
	86, 2082,
	88, 2082,
	89, 2082,
	90, 2082,
	91, 2082,
	99, 2082,
	100, 2082,
	101, 2082,
	102, 2082,
	103, 2082,
	104, 2082,
	105, 2082,
	106, 2082,
	108, 2082,
	110, 2082,
	111, 2082,
	113, 2082,
	116, 2082,
	117, 2082,
	118, 2082,
	120, 2082,
	122, 2082,
	123, 2082,
	125, 2082,
	126, 2082,
	127, 2082,
	128, 2082,
	129, 2082,
	130, 2082,
	131, 2082,
	132, 2082,
	133, 2082,
	134, 2082,
	135, 2082,
	136, 2082,
	137, 2082,
	141, 2082,
	142, 2082,
	143, 2082,
	144, 2082,
	145, 2082,
	146, 2082,
	147, 2082,
	148, 2082,
	149, 2082,
	150, 2082,
	151, 2082,
	152, 2082,
	154, 2082,
	157, 2082,
	158, 2082,
	159, 2082,
	161, 2082,
	162, 2082,
	164, 2082,
	165, 2082,
	167, 2082,
	168, 2082,
	169, 2082,
	170, 2082,
	171, 2082,
	172, 2082,
	173, 2082,
	174, 2082,
	175, 2082,
	176, 2082,
	177, 2082,
	178, 2082,
	179, 2082,
	180, 2082,
	181, 2082,
	182, 2082,
	183, 2082,
	185, 2082,
	186, 2082,
	187, 2082,
	189, 2082,
	190, 2082,
	191, 2082,
	192, 2082,
	193, 2082,
	194, 2082,
	195, 2082,
	196, 2082,
	197, 2082,
	199, 2082,
	201, 2082,
	202, 2082,
	203, 2082,
	204, 2082,
	205, 2082,
	206, 2082,
	207, 2082,
	208, 2082,
	209, 2082,
	210, 2082,
	211, 2082,
	212, 2082,
	213, 2082,
	214, 2082,
	215, 2082,
	216, 2082,
	217, 2082,
	219, 2082,
	220, 2082,
	222, 2082,
	223, 2082,
	224, 2082,
	225, 2082,
	226, 2082,
	227, 2082,
	229, 2082,
	230, 2082,
	233, 2082,
	234, 2082,
	235, 2082,
	236, 2082,
	237, 2082,
	238, 2082,
	239, 2082,
	240, 2082,
	241, 2082,
	242, 2082,
	243, 2082,
	244, 2082,
	245, 2082,
	246, 2082,
	247, 2082,
	248, 2082,
	249, 2082,
	250, 2082,
	251, 2082,
	253, 2082,
	256, 2082,
	257, 2082,
	259, 2082,
	260, 2082,
	261, 2082,
	262, 2082,
	263, 2082,
	265, 2082,
	266, 2082,
	267, 2082,
	270, 2082,
	271, 2082,
	272, 2082,
	273, 2082,
	275, 2082,
	276, 2082,
	277, 2082,
	279, 2082,
	281, 2082,
	282, 2082,
	283, 2082,
	284, 2082,
	285, 2082,
	286, 2082,
	287, 2082,
	288, 2082,
	289, 2082,
	290, 2082,
	292, 2082,
	293, 2082,
	294, 2082,
	295, 2082,
	296, 2082,
	297, 2082,
	299, 2082,
	301, 2082,
	302, 2082,
	303, 2082,
	304, 2082,
	305, 2082,
	306, 2082,
	307, 2082,
	308, 2082,
	309, 2082,
	310, 2082,
	312, 2082,
	313, 2082,
	314, 2082,
	315, 2082,
	316, 2082,
	317, 2082,
	318, 2082,
	319, 2082,
	320, 2082,
	321, 2082,
	322, 2082,
	323, 2082,
	324, 2082,
	325, 2082,
	327, 2082,
	328, 2082,
	329, 2082,
	330, 2082,
	331, 2082,
	332, 2082,
	333, 2082,
	334, 2082,
	335, 2082,
	336, 2082,
	337, 2082,
	338, 2082,
	339, 2082,
	340, 2082,
	341, 2082,
	342, 2082,
	343, 2082,
	345, 2082,
	346, 2082,
	347, 2082,
	348, 2082,
	349, 2082,
	350, 2082,
	351, 2082,
	352, 2082,
	353, 2082,
	354, 2082,
	356, 2082,
	357, 2082,
	358, 2082,
	359, 2082,
	360, 2082,
	361, 2082,
	362, 2082,
	363, 2082,
	364, 2082,
	365, 2082,
	366, 2082,
	368, 2082,
	369, 2082,
	370, 2082,
	371, 2082,
	372, 2082,
	373, 2082,
	374, 2082,
	375, 2082,
	376, 2082,
	377, 2082,
	378, 2082,
	379, 2082,
	381, 2082,
	382, 2082,
	383, 2082,
	385, 2082,
	386, 2082,
	387, 2082,
	388, 2082,
	389, 2082,
	390, 2082,
	391, 2082,
	393, 2082,
	394, 2082,
	395, 2082,
	396, 2082,
	397, 2082,
	399, 2082,
	401, 2082,
	402, 2082,
	403, 2082,
	404, 2082,
	405, 2082,
	407, 2082,
	408, 2082,
	409, 2082,
	411, 2082,
	412, 2082,
	415, 2082,
	416, 2082,
	417, 2082,
	418, 2082,
	419, 2082,
	420, 2082,
	422, 2082,
	424, 2082,
	425, 2082,
	426, 2082,
	427, 2082,
	428, 2082,
	429, 2082,
	430, 2082,
	432, 2082,
	433, 2082,
	434, 2082,
	439, 2082,
	440, 2082,
	441, 2082,
	442, 2082,
	443, 2082,
	444, 2082,
	445, 2082,
	446, 2082,
	448, 2082,
	449, 2082,
	450, 2082,
	451, 2082,
	452, 2082,
	453, 2082,
	455, 2082,
	456, 2082,
	457, 2082,
	458, 2082,
	459, 2082,
	460, 2082,
	461, 2082,
	462, 2082,
	463, 2082,
	465, 2082,
	468, 2082,
	469, 2082,
	471, 2082,
	472, 2082,
	-2, 0,
	-1, 1348,
	156, 1985,
	398, 1985,
	450, 1985,
	469, 1985,
	-2, 0,
	-1, 1380,
	303, 643,
	354, 643,
	-2, 0,
	-1, 1404,
	1, 638,
	466, 638,
	468, 638,
	470, 638,
	-2, 0,
	-1, 1405,
	1, 663,
	466, 663,
	468, 663,
	470, 663,
	-2, 0,
	-1, 1406,
	1, 645,
	466, 645,
	468, 645,
	470, 645,
	-2, 0,
	-1, 1408,
	1, 649,
	466, 649,
	468, 649,
	470, 649,
	-2, 0,
	-1, 1433,
	1, 2035,
	466, 2035,
	468, 2035,
	469, 2035,
	470, 2035,
	-2, 689,
	-1, 1434,
	1, 1982,
	466, 1982,
	468, 1982,
	469, 1982,
	470, 1982,
	-2, 690,
	-1, 1449,
	1, 983,
	470, 983,
	-2, 988,
	-1, 1453,
	140, 1111,
	153, 1111,
	228, 1111,
	264, 1111,
	-2, 1054,
	-1, 1547,
	124, 1075,
	140, 1075,
	153, 1075,
	198, 1075,
	228, 1075,
	264, 1075,
	274, 1075,
	413, 1075,
	-2, 1482,
	-1, 1604,
	468, 1630,
	-2, 0,
	-1, 1638,
	124, 1075,
	140, 1075,
	153, 1075,
	198, 1075,
	228, 1075,
	264, 1075,
	274, 1075,
	413, 1075,
	-2, 1190,
	-1, 1697,
	467, 1311,
	-2, 1299,
	-1, 1741,
	1, 497,
	470, 497,
	-2, 988,
	-1, 1950,
	1, 640,
	466, 640,
	468, 640,
	470, 640,
	-2, 0,
	-1, 1951,
	1, 665,
	466, 665,
	468, 665,
	470, 665,
	-2, 0,
	-1, 2023,
	333, 1136,
	334, 1136,
	-2, 1344,
	-1, 2054,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1362,
	-1, 2055,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1363,
	-1, 2056,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1364,
	-1, 2057,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1365,
	-1, 2058,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1366,
	-1, 2059,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1367,
	-1, 2060,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1368,
	-1, 2061,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1369,
	-1, 2073,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1381,
	-1, 2074,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1382,
	-1, 2075,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1383,
	-1, 2078,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1388,
	-1, 2084,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1392,
	-1, 2086,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1400,
	-1, 2087,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1401,
	-1, 2088,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1402,
	-1, 2089,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1403,
	-1, 2191,
	5, 1268,
	156, 1641,
	467, 1766,
	-2, 1757,
	-1, 2192,
	156, 1642,
	-2, 2039,
	-1, 2193,
	156, 1643,
	-2, 1901,
	-1, 2194,
	156, 1644,
	-2, 1823,
	-1, 2195,
	156, 1645,
	-2, 1859,
	-1, 2196,
	156, 1646,
	-2, 1899,
	-1, 2197,
	156, 1647,
	-2, 1976,
	-1, 2198,
	156, 1648,
	-2, 1465,
	-1, 2267,
	1, 1191,
	2, 1191,
	89, 1191,
	124, 1191,
	140, 1191,
	153, 1191,
	157, 1191,
	163, 1191,
	166, 1191,
	189, 1191,
	198, 1191,
	208, 1191,
	224, 1191,
	228, 1191,
	247, 1191,
	264, 1191,
	268, 1191,
	274, 1191,
	326, 1191,
	328, 1191,
	413, 1191,
	423, 1191,
	436, 1191,
	437, 1191,
	438, 1191,
	447, 1191,
	466, 1191,
	468, 1191,
	470, 1191,
	472, 1191,
	-2, 1190,
	-1, 2280,
	467, 1740,
	-2, 1752,
	-1, 2300,
	467, 1310,
	-2, 1300,
	-1, 2397,
	88, 1099,
	250, 1099,
	288, 1099,
	-2, 906,
	-1, 2398,
	88, 1099,
	250, 1099,
	288, 1099,
	-2, 906,
	-1, 2551,
	269, 1139,
	-2, 2073,
	-1, 2552,
	269, 1140,
	-2, 1965,
	-1, 2556,
	333, 1707,
	334, 1707,
	-2, 1463,
	-1, 2557,
	333, 1711,
	334, 1711,
	-2, 1464,
	-1, 2558,
	333, 1708,
	334, 1708,
	-2, 1463,
	-1, 2559,
	333, 1712,
	334, 1712,
	-2, 1464,
	-1, 2572,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1390,
	-1, 2573,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1394,
	-1, 2579,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1396,
	-1, 2768,
	205, 988,
	299, 988,
	307, 988,
	447, 988,
	-2, 494,
	-1, 2865,
	88, 1099,
	250, 1099,
	288, 1099,
	-2, 906,
	-1, 2866,
	88, 1099,
	250, 1099,
	288, 1099,
	-2, 906,
	-1, 2955,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1398,
	-1, 2962,
	202, 0,
	204, 0,
	256, 0,
	-2, 1417,
	-1, 3026,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1446,
	-1, 3027,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1447,
	-1, 3028,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1448,
	-1, 3032,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1452,
	-1, 3033,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1453,
	-1, 3034,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1454,
	-1, 3078,
	467, 1741,
	-2, 1753,
	-1, 3169,
	469, 2186,
	-2, 1032,
	-1, 3219,
	202, 0,
	204, 0,
	256, 0,
	-2, 1418,
	-1, 3222,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1421,
	-1, 3223,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1423,
	-1, 3388,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1422,
	-1, 3389,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1424,
	-1, 3399,
	202, 0,
	-2, 1455,
	-1, 3513,
	202, 0,
	-2, 1456,
	-1, 3643,
	43, 0,
	175, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 2042,
}

const sqlPrivate = 57344

const sqlLast = 85203

var sqlAct = [...]int{

	911, 3748, 3431, 3457, 3428, 3534, 3642, 3653, 3735, 2852,
	2699, 3620, 3202, 3611, 3608, 3324, 2223, 3654, 1216, 3693,
	3417, 3592, 3655, 2451, 2994, 3641, 3517, 2700, 3464, 3353,
	841, 2332, 1332, 1031, 2041, 3377, 3156, 1197, 3473, 214,
	3337, 214, 214, 856, 214, 214, 214, 214, 214, 3161,
	2785, 214, 2881, 3281, 1462, 3140, 2101, 2874, 3358, 1086,
	601, 2876, 2848, 2947, 1672, 3098, 1924, 1792, 3099, 3403,
	2484, 2440, 933, 575, 1835, 2423, 206, 1644, 214, 2415,
	2565, 2722, 601, 2486, 1023, 2426, 2257, 2714, 2685, 3201,
	2742, 832, 2334, 1178, 883, 2475, 2452, 2703, 1613, 4,
	2494, 1828, 2038, 2684, 3518, 2600, 1829, 2390, 1388, 1555,
	1882, 1328, 697, 2034, 1575, 1879, 2705, 2260, 2399, 3254,
	2477, 1801, 2483, 2143, 3049, 2114, 2549, 1186, 2493, 1673,
	2392, 1824, 2424, 1817, 3458, 907, 87, 1777, 1834, 1779,
	2134, 1074, 2262, 2241, 2259, 910, 2098, 1902, 2005, 1449,
	1614, 2022, 2748, 2003, 1315, 1767, 1356, 2850, 2220, 1199,
	1633, 1341, 2445, 1864, 840, 142, 1014, 1325, 1263, 2137,
	2324, 1017, 543, 208, 602, 207, 691, 214, 214, 2487,
	603, 867, 1623, 529, 1063, 2231, 2249, 551, 996, 2115,
	2187, 1538, 2145, 1463, 2004, 2006, 1464, 1355, 2367, 597,
	1183, 149, 559, 569, 1013, 1630, 150, 1888, 1863, 1289,
	1339, 672, 1213, 32, 1570, 645, 1791, 2027, 554, 546,
	2368, 868, 1019, 37, 36, 34, 994, 25, 23, 21,
	1469, 1448, 762, 606, 1271, 609, 745, 3063, 2596, 3064,
	1904, 142, 1904, 3781, 3771, 1904, 3770, 2240, 2240, 3745,
	2240, 2701, 1071, 1840, 3725, 606, 831, 609, 3295, 3723,
	3679, 3677, 3675, 3295, 3680, 2240, 2240, 3672, 3669, 3664,
	3639, 3673, 3670, 1840, 1840, 836, 3638, 3053, 3637, 1029,
	1840, 708, 1916, 2891, 2766, 3634, 836, 2890, 837, 1916,
	1477, 1478, 2291, 1510, 1511, 1512, 1520, 1521, 1522, 3633,
	3606, 1011, 3586, 1916, 3295, 2233, 2295, 3580, 3579, 1513,
	1508, 2240, 2240, 1048, 3574, 1071, 2240, 1480, 3295, 997,
	997, 3573, 1526, 3567, 3561, 3295, 1840, 1840, 3295, 3587,
	1026, 3559, 3515, 1234, 3496, 3295, 2295, 3493, 1840, 3466,
	1932, 3295, 845, 3467, 819, 3499, 1479, 3447, 3446, 818,
	3438, 1840, 1840, 3437, 1840, 1499, 3409, 3295, 2386, 3390,
	1840, 3375, 1496, 2295, 3366, 1916, 3322, 3313, 2904, 3294,
	2240, 2240, 3221, 3295, 3177, 3171, 2295, 3138, 2920, 2920,
	3073, 3139, 3071, 3056, 3074, 826, 3072, 2240, 2978, 2974,
	2919, 2911, 1840, 2240, 2920, 2912, 1043, 2698, 2696, 1477,
	1478, 2240, 2240, 2695, 998, 2649, 2628, 2240, 2611, 2240,
	2629, 2609, 2240, 1000, 2473, 1001, 3053, 2610, 1920, 1508,
	1502, 1503, 1504, 1505, 2472, 2401, 1480, 2308, 1920, 1916,
	1485, 2240, 2294, 2232, 2289, 2282, 2295, 2140, 2240, 1840,
	1916, 3314, 2239, 1919, 2657, 2658, 2240, 1920, 1840, 2912,
	2354, 2381, 2323, 1747, 1517, 1479, 1903, 1527, 2904, 2421,
	2564, 1507, 1509, 1796, 1499, 1839, 2321, 1609, 1212, 2892,
	1044, 1477, 1478, 2240, 3126, 2950, 2928, 1631, 1827, 1390,
	182, 1523, 3270, 1524, 2599, 2276, 2275, 2274, 2893, 3233,
	1494, 1495, 2657, 2658, 2273, 2675, 2676, 2677, 1480, 2272,
	1002, 999, 1233, 2141, 825, 824, 1515, 1905, 823, 1905,
	2529, 3217, 1905, 822, 182, 1500, 821, 817, 2657, 2658,
	184, 2675, 2676, 2677, 2657, 2658, 816, 1479, 815, 1502,
	1503, 1504, 1505, 814, 214, 1525, 813, 3216, 812, 1485,
	811, 2657, 2658, 810, 809, 808, 807, 806, 805, 743,
	742, 741, 1514, 740, 184, 739, 738, 2672, 737, 736,
	735, 734, 214, 733, 183, 732, 731, 730, 729, 214,
	1507, 1509, 182, 728, 176, 2142, 2139, 727, 726, 725,
	724, 723, 177, 2672, 2663, 722, 214, 1089, 214, 214,
	214, 1089, 214, 1202, 1202, 721, 1506, 1202, 183, 2890,
	1044, 720, 719, 151, 1073, 214, 214, 718, 1078, 717,
	706, 1485, 184, 705, 1501, 663, 662, 622, 621, 2178,
	620, 2232, 612, 611, 1500, 610, 583, 3660, 582, 1044,
	214, 581, 2663, 580, 579, 1407, 563, 151, 204, 203,
	1518, 202, 201, 200, 214, 1067, 199, 1202, 1202, 214,
	214, 198, 214, 2433, 197, 1912, 183, 1903, 2663, 196,
	1998, 195, 214, 1546, 2663, 1181, 176, 194, 1193, 2673,
	214, 193, 192, 1087, 177, 182, 2144, 1187, 191, 190,
	189, 2663, 188, 2678, 214, 214, 214, 214, 214, 1202,
	1202, 187, 186, 185, 1202, 151, 3067, 214, 1202, 214,
	214, 2921, 2745, 1189, 2622, 1506, 2605, 2405, 1202, 2678,
	1546, 2283, 2266, 2164, 214, 184, 2162, 2673, 1775, 1657,
	1061, 1564, 1336, 1501, 1516, 1272, 1272, 1491, 1492, 1498,
	1519, 1497, 1493, 1228, 1490, 1488, 1489, 1481, 1482, 1483,
	1484, 1486, 1487, 2673, 1927, 1634, 1557, 3243, 3640, 909,
	1202, 3242, 1082, 1208, 1175, 1180, 1578, 1218, 1080, 183,
	1033, 3554, 1577, 1193, 1578, 3508, 2673, 1476, 2674, 176,
	1577, 3427, 1056, 214, 3502, 3367, 2138, 177, 606, 1215,
	609, 3274, 3362, 1581, 3500, 1214, 3253, 214, 76, 3252,
	3240, 1576, 1557, 3239, 1344, 1346, 3238, 3237, 151, 2915,
	2304, 3144, 214, 3232, 3229, 3228, 3137, 3087, 3086, 3085,
	3077, 3046, 3045, 1926, 3044, 2970, 2674, 2966, 2740, 2692,
	2683, 2657, 2658, 2656, 2653, 2652, 1360, 2650, 2635, 1221,
	837, 1226, 2448, 1232, 2634, 2633, 2434, 2630, 2627, 1319,
	1322, 2621, 2674, 1490, 1488, 1489, 1481, 1482, 1483, 1484,
	1486, 1487, 1276, 1342, 2604, 3124, 1562, 2597, 2474, 142,
	142, 2267, 2127, 1476, 1067, 2674, 1292, 1067, 1876, 1475,
	1010, 3778, 3744, 1845, 3743, 3678, 1417, 1032, 1558, 2996,
	1556, 3629, 2657, 2658, 1273, 2675, 2676, 2677, 1329, 2666,
	2667, 2659, 2660, 2661, 2662, 2664, 2665, 1843, 3627, 3548,
	3519, 2965, 1227, 3545, 3542, 3541, 3540, 3533, 3527, 3497,
	1454, 3492, 3491, 2104, 3443, 3423, 3401, 1354, 1481, 1482,
	1483, 1484, 1486, 1487, 1453, 1359, 2110, 3412, 3385, 2669,
	2670, 2671, 3384, 3372, 1025, 3371, 2668, 2666, 2667, 2659,
	2660, 2661, 2662, 2664, 2665, 3351, 3348, 2672, 2297, 3341,
	3269, 1545, 3251, 1447, 1222, 2669, 2670, 2671, 3191, 3188,
	3115, 2663, 2668, 2666, 2667, 2659, 2660, 2661, 2662, 2664,
	2665, 2659, 2660, 2661, 2662, 2664, 2665, 182, 1408, 3114,
	2760, 3361, 3102, 1365, 1381, 2668, 2666, 2667, 2659, 2660,
	2661, 2662, 2664, 2665, 3101, 3059, 214, 3273, 2432, 182,
	182, 2961, 3143, 1542, 1452, 2922, 2905, 2868, 2832, 2811,
	839, 2788, 837, 2787, 2761, 119, 2697, 184, 2626, 2625,
	2620, 2588, 2663, 214, 1450, 866, 1620, 1459, 1458, 2414,
	1582, 1611, 1579, 214, 1089, 214, 214, 214, 214, 184,
	184, 1571, 819, 601, 214, 214, 2673, 818, 601, 214,
	1568, 1659, 1580, 2302, 214, 2301, 1667, 2278, 2271, 2238,
	1202, 183, 1669, 2160, 1455, 1472, 1473, 1736, 1409, 182,
	1656, 176, 1739, 2678, 1612, 182, 1608, 1607, 1606, 177,
	1605, 1089, 2788, 183, 183, 2177, 1604, 2657, 2658, 1603,
	2675, 2676, 2677, 176, 176, 1602, 1601, 1744, 1600, 1598,
	151, 177, 177, 1617, 1618, 1773, 2964, 2673, 1597, 184,
	1596, 1029, 1595, 1029, 1193, 184, 1594, 1593, 1592, 1699,
	1660, 1591, 151, 151, 1928, 1590, 1589, 1738, 1588, 1587,
	1586, 1664, 1585, 1067, 1584, 1641, 1559, 1543, 997, 1477,
	1478, 1541, 1572, 1573, 1536, 2674, 1055, 2657, 2658, 1665,
	1046, 1039, 2672, 183, 3344, 837, 3271, 3225, 3083, 183,
	3070, 3062, 1026, 176, 1026, 2608, 1480, 1776, 3082, 176,
	2737, 177, 1663, 2269, 1477, 1478, 3741, 177, 1558, 2163,
	1642, 2758, 2161, 2657, 2658, 142, 2206, 1539, 1766, 1652,
	1639, 3734, 2447, 3543, 3316, 1479, 2877, 1766, 151, 3469,
	1077, 1480, 1075, 3468, 2814, 3365, 2674, 3315, 1741, 3065,
	1027, 1202, 1202, 214, 1593, 3503, 606, 1785, 609, 1089,
	1632, 606, 1610, 609, 1742, 3501, 2907, 2663, 1675, 2906,
	1479, 1766, 2372, 3474, 1648, 1661, 3426, 1071, 1593, 1636,
	1634, 1445, 1668, 1836, 1651, 1650, 1649, 1735, 1647, 1646,
	1645, 1814, 1076, 1578, 1816, 2632, 3147, 1821, 214, 1577,
	2657, 2658, 214, 214, 1670, 1071, 2631, 2667, 2659, 2660,
	2661, 2662, 2664, 2665, 2570, 214, 2657, 2658, 2678, 1485,
	2356, 1071, 1380, 1072, 214, 3113, 214, 2663, 214, 1753,
	1769, 1566, 214, 1764, 1759, 2854, 182, 2853, 803, 1925,
	1877, 1418, 1068, 1796, 1389, 1841, 214, 1832, 3465, 3749,
	3665, 1800, 2673, 3652, 1390, 1830, 3129, 3117, 1563, 2669,
	2670, 2671, 2926, 3404, 1825, 2672, 2668, 2666, 2667, 2659,
	2660, 2661, 2662, 2664, 2665, 1009, 184, 804, 2701, 1870,
	1062, 2998, 2135, 2300, 1599, 3661, 1202, 2614, 1202, 214,
	1202, 1574, 182, 214, 2846, 1871, 1867, 1249, 1202, 3674,
	3671, 1202, 214, 2886, 214, 214, 3094, 1872, 1837, 1369,
	1874, 3535, 3604, 3157, 1202, 1202, 1202, 2140, 214, 2298,
	183, 3524, 3108, 1885, 2481, 214, 606, 1215, 609, 2444,
	176, 3709, 184, 1214, 601, 214, 1069, 214, 177, 214,
	2663, 214, 3662, 214, 1070, 3566, 1820, 2942, 1477, 1478,
	3305, 2674, 2336, 835, 3710, 1237, 2663, 214, 797, 151,
	214, 1415, 214, 799, 2770, 1838, 2309, 1068, 1508, 2327,
	1247, 214, 3775, 795, 1893, 1480, 183, 793, 2759, 1942,
	1984, 2325, 3456, 2141, 1077, 1982, 176, 784, 658, 790,
	3449, 1946, 214, 3131, 177, 1416, 3128, 214, 1855, 3127,
	3091, 1854, 1754, 3090, 1479, 1930, 2619, 1907, 2618, 2617,
	1909, 2616, 2574, 1911, 2441, 151, 2388, 1914, 2380, 2379,
	1089, 2359, 837, 2290, 837, 2673, 2085, 834, 1292, 1077,
	1890, 1796, 1890, 1887, 1931, 1891, 1076, 1451, 1895, 1896,
	1211, 2673, 1248, 2339, 584, 1342, 1414, 1342, 2772, 3729,
	2156, 2155, 2043, 2927, 2813, 2142, 2139, 1282, 2015, 1281,
	1367, 1069, 1996, 1853, 2669, 2670, 2671, 659, 1940, 1070,
	2002, 2668, 2666, 2667, 2659, 2660, 2661, 2662, 2664, 2665,
	1303, 1076, 2013, 1068, 1071, 2327, 1243, 851, 1485, 2013,
	1699, 1699, 1056, 1257, 2100, 1933, 1921, 2325, 1922, 2116,
	2117, 212, 1793, 836, 1936, 1089, 2042, 606, 3565, 609,
	1935, 1280, 787, 1279, 2281, 2116, 2132, 2316, 2011, 1507,
	1509, 3730, 1780, 2347, 2674, 2011, 1781, 3433, 1483, 1484,
	1486, 1487, 1789, 1964, 1997, 3383, 2661, 2662, 2664, 2665,
	2674, 1362, 1428, 589, 2100, 2547, 2358, 2039, 2040, 1992,
	214, 2562, 3104, 1794, 1795, 2186, 2144, 2190, 2190, 2204,
	3631, 2116, 2346, 2026, 2224, 2226, 1487, 2376, 2312, 2230,
	1892, 3301, 1089, 1500, 214, 2665, 2009, 1069, 2369, 2370,
	2314, 1790, 2987, 214, 2144, 1070, 2338, 2369, 2370, 2001,
	2000, 2147, 3317, 2933, 1999, 214, 2014, 2007, 1089, 1675,
	1675, 1382, 1950, 2135, 2932, 595, 1995, 3732, 2131, 1071,
	2526, 819, 2315, 2279, 819, 819, 2030, 1782, 837, 2031,
	2032, 2369, 2370, 1444, 1652, 2108, 591, 2313, 2012, 837,
	1784, 2106, 1413, 837, 1378, 2012, 1954, 2288, 1787, 1949,
	1363, 1036, 833, 3752, 2668, 2666, 2667, 2659, 2660, 2661,
	2662, 2664, 2665, 1951, 855, 3658, 2138, 2561, 3698, 1029,
	3207, 3709, 1404, 2659, 2660, 2661, 2662, 2664, 2665, 2112,
	1823, 3584, 1501, 1034, 3206, 1029, 1457, 1390, 214, 2254,
	1390, 2246, 1957, 2144, 2280, 1786, 1202, 2010, 2129, 1994,
	1822, 656, 997, 655, 2010, 661, 660, 1641, 3116, 2554,
	2555, 3764, 2337, 2769, 2153, 2883, 1025, 2245, 1025, 2154,
	1026, 2292, 2157, 1405, 2158, 2159, 1089, 837, 3299, 1054,
	1818, 214, 1245, 1744, 1264, 1071, 1026, 2268, 586, 214,
	1368, 2253, 2199, 2258, 2215, 3382, 2264, 2265, 2228, 1904,
	214, 1794, 1795, 2236, 2237, 1425, 2357, 590, 2247, 1991,
	2023, 3731, 1639, 214, 2251, 2252, 1037, 2825, 791, 801,
	1262, 1067, 2819, 800, 1302, 1958, 1802, 214, 1089, 1819,
	1242, 594, 1202, 791, 1202, 1787, 142, 792, 715, 1983,
	214, 214, 1580, 3659, 1981, 1787, 1806, 588, 1813, 791,
	3105, 2328, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486,
	1487, 3738, 2322, 214, 1798, 3536, 214, 2835, 2801, 1796,
	2303, 3582, 214, 1264, 2326, 1699, 2771, 2807, 1780, 3434,
	2307, 2418, 1781, 1780, 2984, 214, 585, 1781, 690, 1181,
	1803, 1569, 3333, 214, 2532, 214, 2756, 2576, 214, 1426,
	3583, 3300, 3697, 1193, 214, 2884, 2377, 214, 1787, 214,
	2306, 214, 2800, 214, 214, 3203, 214, 1202, 1202, 1202,
	3657, 1202, 2361, 592, 2455, 3395, 214, 214, 2327, 214,
	214, 2310, 2362, 1202, 587, 1572, 1573, 3718, 2389, 3616,
	2341, 214, 3547, 2126, 1535, 2624, 2207, 2099, 2250, 1993,
	2468, 2469, 2340, 2343, 788, 2349, 2985, 214, 214, 214,
	2331, 2495, 214, 2883, 214, 3753, 2360, 214, 1622, 214,
	1807, 214, 1427, 1782, 2263, 3292, 2402, 2535, 1782, 2378,
	2516, 836, 2517, 1364, 1675, 1783, 1784, 3343, 613, 1193,
	1193, 1784, 214, 214, 214, 214, 214, 214, 2497, 214,
	2438, 2500, 2501, 3197, 3289, 2353, 2371, 2373, 2374, 2375,
	2506, 2507, 2508, 606, 1215, 609, 1035, 1758, 1757, 2470,
	2403, 1766, 1768, 2412, 2464, 1956, 2107, 3079, 3765, 2422,
	214, 1808, 1809, 3379, 2385, 1193, 1626, 2457, 214, 2480,
	1804, 1786, 1027, 1049, 1027, 3696, 1786, 3290, 2082, 1377,
	1379, 3334, 1953, 3736, 2450, 1948, 1626, 2144, 2407, 1467,
	2409, 2461, 3656, 2462, 2511, 2463, 1905, 2803, 1629, 1193,
	2514, 1193, 2499, 1805, 2518, 2502, 2520, 2503, 2522, 2534,
	1342, 2465, 2471, 3208, 142, 2944, 2482, 1624, 1629, 2498,
	2545, 1456, 3708, 2805, 2530, 2393, 1392, 3706, 2531, 3480,
	3350, 2585, 2446, 1627, 2537, 2446, 2539, 2248, 1815, 2872,
	2657, 2658, 2436, 2675, 2676, 2677, 2466, 1862, 1619, 716,
	1761, 1047, 1042, 1627, 528, 2583, 1625, 214, 3737, 3142,
	3204, 3249, 2029, 1797, 1053, 855, 3378, 2602, 2603, 855,
	2577, 1787, 2606, 2804, 1755, 2607, 1787, 2716, 1173, 2553,
	2544, 2948, 1173, 3440, 2543, 2749, 1466, 2342, 2513, 3758,
	3739, 1810, 3439, 2096, 3035, 2542, 3523, 2519, 1466, 2521,
	2548, 2523, 3421, 2775, 2026, 2672, 3093, 2533, 1778, 1752,
	2080, 1461, 3304, 2083, 2563, 2873, 2864, 2094, 1535, 3303,
	2783, 2524, 614, 615, 3285, 2779, 2540, 2437, 3286, 2425,
	2416, 1886, 1875, 1873, 1849, 2983, 3549, 1628, 3593, 2598,
	2945, 2242, 1763, 2019, 1988, 1748, 3162, 1466, 3354, 2413,
	1305, 3463, 3461, 3422, 1941, 1811, 3061, 1628, 3209, 2575,
	2713, 2580, 2079, 2793, 2790, 1089, 541, 2789, 3288, 2694,
	2568, 837, 3380, 1762, 1465, 2581, 1750, 2708, 2709, 2586,
	2663, 3291, 2546, 2712, 214, 2710, 1465, 2394, 1406, 214,
	536, 2287, 214, 712, 1751, 214, 214, 1089, 1274, 2286,
	704, 214, 2285, 2284, 2613, 2363, 2420, 2679, 2244, 3250,
	1467, 1783, 1288, 2243, 1089, 1275, 1783, 834, 3529, 617,
	616, 214, 1467, 2090, 3325, 2396, 2730, 2916, 3210, 1884,
	2400, 2678, 2715, 2091, 3036, 1465, 214, 2092, 1286, 2754,
	3757, 2097, 3037, 714, 2020, 3715, 3459, 3255, 3419, 3601,
	3429, 2707, 3590, 3050, 2765, 214, 214, 214, 1029, 2151,
	3717, 214, 2150, 2720, 214, 2673, 3302, 1442, 2767, 618,
	619, 214, 214, 1029, 214, 214, 214, 779, 2746, 2739,
	3420, 1440, 2773, 2733, 3287, 3550, 2776, 2777, 214, 214,
	214, 2550, 1393, 2743, 3676, 2718, 2081, 214, 1699, 830,
	2747, 2744, 2791, 1029, 1025, 2795, 2689, 2690, 2691, 1026,
	214, 214, 3544, 2702, 1067, 1622, 3596, 3400, 2736, 1089,
	1025, 2717, 2792, 2582, 1026, 2797, 2798, 1202, 2719, 3430,
	2724, 2780, 2584, 2728, 2729, 1699, 1089, 3248, 2750, 2731,
	2732, 214, 3530, 1422, 214, 214, 2364, 2365, 214, 2686,
	1420, 1202, 214, 1549, 1026, 2757, 2960, 1554, 2734, 1403,
	2735, 1202, 1202, 1401, 2674, 1193, 2687, 214, 2751, 2752,
	2753, 2207, 2207, 214, 780, 2818, 2851, 2924, 214, 2842,
	214, 2651, 3597, 1626, 2879, 2093, 1870, 214, 1785, 2768,
	2863, 1664, 2784, 2774, 2095, 1399, 2841, 710, 711, 2587,
	2816, 1770, 1771, 2826, 702, 703, 2725, 1675, 3531, 2495,
	1287, 1202, 1202, 2417, 1785, 1629, 2859, 2806, 2495, 214,
	214, 1441, 2747, 214, 2762, 2763, 2833, 2764, 2812, 2839,
	2840, 1397, 2821, 2888, 1624, 1439, 1285, 2387, 1395, 1387,
	2824, 713, 2355, 2828, 1675, 1385, 1825, 2305, 2723, 1658,
	1627, 2843, 2836, 2834, 1825, 1284, 1655, 537, 1443, 1357,
	214, 1980, 1089, 214, 214, 1089, 214, 2941, 2727, 1029,
	2940, 2903, 2880, 1625, 1461, 2528, 2361, 2669, 2670, 2671,
	2527, 2207, 2207, 2207, 2668, 2666, 2667, 2659, 2660, 2661,
	2662, 2664, 2665, 2505, 2808, 2809, 2923, 1421, 2810, 214,
	2008, 2822, 2901, 2902, 1419, 2823, 2885, 1366, 1990, 779,
	538, 2827, 1961, 1402, 837, 2894, 1737, 1400, 1583, 781,
	1026, 1361, 2887, 1261, 2938, 1173, 2829, 2830, 3651, 3321,
	2831, 830, 3312, 2918, 3589, 2914, 1089, 3278, 3160, 2896,
	2897, 2898, 1193, 2899, 2900, 2726, 3152, 3111, 1187, 1398,
	539, 1087, 540, 1089, 1628, 214, 941, 3109, 2929, 3092,
	2930, 2871, 2931, 2980, 2862, 2855, 855, 142, 142, 3622,
	2442, 2431, 1173, 2878, 2430, 2410, 1918, 2939, 1917, 3694,
	1027, 1915, 1913, 2963, 1910, 1396, 1908, 1906, 1897, 2935,
	1846, 1699, 1394, 1386, 1844, 210, 1027, 531, 532, 1384,
	547, 531, 547, 557, 562, 2943, 780, 578, 2946, 1283,
	1833, 1831, 1979, 1826, 1812, 1799, 210, 1788, 2875, 1006,
	1470, 789, 2976, 2972, 2973, 3485, 1666, 3710, 782, 2566,
	3374, 3369, 3368, 828, 701, 779, 2496, 1774, 210, 2992,
	3047, 1239, 2327, 1007, 1699, 1699, 2327, 3487, 2345, 3170,
	2979, 1796, 2968, 1952, 2325, 1437, 1438, 830, 2344, 2995,
	1699, 1699, 2999, 2936, 1978, 214, 214, 783, 1959, 3306,
	1977, 2986, 2988, 2989, 3004, 3001, 1089, 3538, 1383, 3002,
	593, 3510, 3256, 3711, 1477, 1478, 1477, 1478, 3012, 2366,
	3014, 1699, 2348, 3066, 1474, 3704, 829, 214, 1745, 2382,
	1675, 2039, 3005, 3039, 2384, 2567, 2350, 3588, 1471, 542,
	1173, 1480, 2352, 3733, 3558, 3088, 2383, 2039, 3015, 3040,
	3555, 2755, 3151, 3141, 2351, 3076, 2449, 3048, 2229, 1740,
	1671, 1008, 780, 531, 531, 3756, 3557, 1029, 1029, 1546,
	1479, 210, 1479, 2990, 214, 794, 796, 3230, 3043, 2146,
	647, 781, 3000, 1675, 1675, 553, 689, 3081, 3118, 3057,
	3058, 2319, 3078, 3054, 3055, 2657, 2658, 1477, 1478, 1675,
	1675, 2317, 3052, 1202, 2319, 2320, 2317, 2318, 1371, 3130,
	2152, 3768, 3068, 3226, 1370, 3080, 214, 1424, 1026, 1026,
	1423, 2991, 142, 214, 1544, 3520, 3453, 3413, 3411, 3340,
	1675, 3272, 1089, 214, 3194, 3132, 3187, 1202, 3096, 3176,
	3069, 3155, 3136, 3123, 3125, 3135, 3134, 3122, 3107, 2895,
	2869, 214, 2867, 2510, 2509, 2459, 2435, 2411, 2111, 1976,
	3172, 1975, 1974, 1973, 1900, 214, 214, 1202, 1202, 1202,
	3133, 214, 214, 214, 3164, 1899, 214, 214, 2207, 2207,
	214, 214, 2455, 1202, 1699, 1898, 1878, 1857, 214, 1089,
	782, 3148, 1856, 1852, 1851, 3167, 3149, 3163, 1850, 1870,
	1848, 1847, 1436, 3110, 1435, 3112, 2361, 781, 1314, 1313,
	1312, 1089, 2495, 1311, 3084, 3195, 3150, 1310, 1309, 1308,
	1307, 1306, 1304, 1299, 1298, 1297, 1296, 3153, 3154, 783,
	1295, 3166, 1256, 1255, 1254, 1253, 3183, 1252, 1251, 3158,
	1250, 2784, 3168, 1025, 3224, 3165, 1029, 3173, 1244, 3174,
	1238, 1236, 1235, 1052, 1051, 981, 888, 214, 1025, 1746,
	802, 3179, 2207, 2207, 2207, 2207, 2207, 2207, 2207, 2207,
	2207, 2207, 2207, 2207, 2207, 2207, 2207, 2207, 2207, 2207,
	2207, 3193, 2207, 3184, 3185, 3178, 3220, 3190, 1025, 3205,
	3211, 3189, 3192, 1675, 1699, 3186, 786, 1026, 3432, 1430,
	74, 1173, 1246, 3200, 633, 68, 3106, 642, 3603, 2799,
	2391, 1960, 1391, 1962, 827, 2738, 782, 2270, 3212, 3581,
	214, 3234, 2623, 3516, 3394, 2149, 1089, 1565, 1089, 70,
	876, 963, 3332, 3331, 3279, 3095, 2485, 3329, 3261, 3328,
	844, 1092, 1756, 2109, 882, 1772, 1765, 2299, 2189, 1679,
	885, 214, 214, 214, 1676, 783, 1678, 887, 886, 1677,
	1549, 3247, 1567, 214, 884, 1674, 2419, 2453, 1291, 766,
	214, 1760, 214, 2105, 2133, 214, 214, 214, 2612, 1560,
	857, 3298, 3275, 3276, 878, 2130, 1173, 1089, 214, 214,
	1045, 2721, 1089, 3309, 3310, 2882, 3075, 3360, 3196, 2018,
	214, 3307, 650, 1675, 214, 3263, 3260, 2654, 1029, 2136,
	3267, 2211, 1038, 214, 3266, 2212, 1029, 2205, 214, 2743,
	1040, 1089, 3308, 3277, 1202, 3268, 2201, 3297, 2443, 1029,
	3257, 3326, 1446, 3264, 3258, 3259, 1537, 2454, 3262, 1079,
	860, 3296, 2103, 1551, 2592, 2028, 2889, 2741, 1050, 2296,
	3619, 2033, 214, 1173, 1025, 578, 1861, 1005, 1004, 1026,
	1003, 3356, 3610, 3607, 1089, 1870, 2849, 1026, 1749, 2311,
	3373, 1529, 210, 3319, 210, 210, 1184, 2856, 210, 1173,
	1026, 3359, 3320, 3327, 3355, 3342, 3345, 872, 1335, 1192,
	2706, 210, 1217, 2917, 1089, 1258, 3537, 3357, 3347, 3323,
	1528, 2395, 798, 3526, 1066, 1065, 1064, 2782, 3763, 3103,
	181, 2560, 1468, 1460, 3370, 178, 1241, 180, 179, 1027,
	3336, 3120, 91, 3381, 3364, 35, 16, 118, 3352, 117,
	1260, 1089, 116, 3406, 1027, 210, 210, 115, 1184, 214,
	114, 214, 113, 1089, 214, 2589, 2590, 112, 210, 111,
	1087, 110, 214, 3386, 109, 108, 1301, 107, 106, 105,
	104, 103, 102, 101, 1027, 100, 99, 98, 97, 96,
	210, 210, 210, 210, 1184, 214, 3402, 3416, 95, 3391,
	3392, 94, 93, 578, 1699, 210, 210, 92, 3407, 3408,
	574, 3415, 571, 49, 214, 48, 90, 1173, 89, 15,
	701, 33, 214, 3410, 13, 53, 3452, 54, 12, 3414,
	28, 214, 3471, 29, 3462, 3335, 1202, 3392, 80, 79,
	3436, 27, 214, 14, 3435, 3346, 26, 24, 10, 2042,
	8, 7, 30, 2851, 1643, 11, 147, 146, 1699, 73,
	3486, 3476, 3460, 214, 214, 3363, 3454, 145, 3450, 1173,
	72, 144, 143, 3482, 71, 2680, 2681, 2682, 22, 210,
	9, 3506, 3507, 139, 3470, 214, 3472, 3146, 67, 141,
	140, 3484, 65, 210, 3477, 3483, 3481, 3479, 3475, 3359,
	214, 138, 3489, 3488, 137, 64, 136, 135, 562, 66,
	134, 20, 5, 1675, 3490, 3442, 52, 3494, 3495, 6,
	3522, 3376, 3498, 2925, 84, 85, 31, 3532, 62, 61,
	60, 19, 51, 18, 171, 3444, 3445, 170, 169, 168,
	1193, 163, 1025, 1025, 162, 167, 3514, 3546, 214, 3521,
	1027, 165, 164, 166, 1699, 161, 173, 172, 175, 159,
	155, 214, 1202, 154, 158, 160, 3509, 1675, 214, 157,
	156, 153, 1202, 1202, 174, 3505, 56, 133, 1202, 3572,
	132, 57, 214, 131, 214, 130, 129, 128, 3551, 3539,
	127, 3556, 3552, 3553, 55, 3560, 17, 2, 1, 3563,
	3577, 0, 3578, 0, 3570, 3571, 3292, 3585, 214, 0,
	3575, 0, 0, 3564, 214, 3576, 3598, 214, 3568, 1089,
	0, 3569, 0, 0, 0, 0, 0, 3475, 214, 214,
	3600, 0, 3599, 3609, 3612, 3289, 0, 0, 3282, 3613,
	0, 0, 3617, 0, 3628, 3626, 2211, 0, 0, 0,
	3623, 0, 3280, 3605, 3614, 3635, 0, 0, 3284, 3636,
	3621, 0, 0, 1675, 0, 0, 0, 0, 214, 0,
	0, 2207, 0, 0, 3630, 3632, 0, 0, 3290, 0,
	0, 0, 0, 3663, 0, 0, 0, 0, 0, 3647,
	3648, 0, 3668, 3650, 3649, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 0, 2042, 0, 3681, 0, 3683,
	3283, 0, 214, 2207, 0, 0, 3666, 0, 0, 3691,
	0, 1025, 0, 210, 3685, 210, 2211, 2211, 0, 210,
	3695, 3690, 214, 3682, 0, 3687, 0, 0, 0, 1217,
	0, 1184, 210, 2455, 210, 0, 0, 3701, 3702, 210,
	1217, 547, 3703, 3707, 210, 1217, 0, 3705, 0, 214,
	578, 214, 0, 3609, 3713, 3714, 3612, 3716, 3712, 3724,
	0, 3721, 3720, 3684, 3727, 3686, 0, 3719, 3726, 3722,
	3688, 3689, 0, 0, 3692, 0, 0, 3728, 0, 0,
	0, 0, 3621, 0, 0, 0, 0, 0, 0, 3740,
	3742, 0, 0, 0, 0, 1621, 3746, 0, 3750, 3747,
	0, 0, 3751, 0, 0, 0, 0, 0, 1027, 1027,
	3754, 0, 0, 2207, 0, 3285, 0, 3760, 3766, 3286,
	3767, 0, 0, 0, 0, 0, 2211, 2211, 2211, 0,
	3761, 3762, 2956, 2957, 0, 0, 3769, 0, 0, 3624,
	0, 0, 3625, 3773, 3774, 3777, 3776, 0, 3779, 0,
	0, 0, 0, 3772, 0, 3782, 0, 0, 0, 3288,
	0, 0, 0, 0, 0, 3780, 1173, 0, 0, 0,
	0, 0, 3291, 1025, 0, 0, 0, 0, 0, 0,
	0, 1025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1194, 1205, 0, 1025, 1209, 2657, 2658, 1173, 2675,
	2676, 2677, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 1173, 3016, 3017, 3018, 3019,
	3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029,
	3030, 3031, 3032, 3033, 3034, 0, 3038, 0, 0, 855,
	0, 0, 0, 1477, 1478, 1265, 1268, 0, 843, 0,
	0, 0, 0, 855, 210, 0, 0, 0, 210, 210,
	0, 2672, 0, 1508, 0, 0, 0, 0, 0, 0,
	1480, 1883, 0, 0, 0, 3287, 0, 0, 0, 0,
	210, 0, 210, 0, 210, 0, 0, 1027, 531, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 1479,
	0, 0, 1901, 0, 0, 0, 1209, 1477, 1478, 0,
	1510, 1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0,
	1173, 0, 0, 0, 0, 0, 1513, 1508, 0, 0,
	0, 0, 0, 0, 1480, 0, 2663, 1173, 0, 1526,
	0, 0, 0, 0, 0, 578, 0, 0, 1372, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	1184, 210, 0, 1479, 0, 0, 0, 0, 0, 0,
	0, 0, 1499, 0, 578, 0, 0, 0, 0, 1496,
	0, 210, 0, 1485, 0, 0, 0, 2678, 0, 0,
	210, 210, 0, 210, 0, 210, 0, 210, 0, 210,
	0, 0, 0, 0, 2657, 2658, 0, 2675, 2676, 2677,
	0, 0, 0, 1985, 1507, 1509, 1986, 0, 1987, 0,
	0, 2673, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 1503, 1504,
	1505, 0, 0, 0, 0, 0, 0, 1485, 562, 1027,
	0, 0, 0, 578, 0, 0, 0, 1027, 0, 0,
	0, 0, 0, 1173, 0, 0, 1173, 0, 1500, 2672,
	1027, 1517, 0, 0, 1527, 0, 0, 0, 1507, 1509,
	0, 0, 0, 1477, 1478, 0, 0, 0, 0, 0,
	0, 0, 0, 2211, 2211, 0, 0, 0, 1523, 0,
	1524, 0, 0, 1508, 0, 0, 0, 1494, 1495, 0,
	1480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2674, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 1173, 0, 1479,
	0, 0, 0, 0, 2663, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 1173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1501, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 2211, 2211, 2211,
	2211, 2211, 2211, 2211, 2211, 2211, 2211, 2211, 2211, 2211,
	2211, 2211, 2211, 2211, 2211, 2211, 0, 2211, 0, 0,
	1477, 1478, 0, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	1508, 210, 0, 1485, 0, 0, 0, 1480, 0, 2673,
	531, 1501, 0, 2669, 2670, 2671, 0, 210, 0, 531,
	2668, 2666, 2667, 2659, 2660, 2661, 2662, 2664, 2665, 0,
	0, 210, 0, 0, 1507, 1509, 1479, 1518, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 843,
	0, 0, 1496, 843, 0, 0, 0, 1173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1488, 1489,
	1481, 1482, 1483, 1484, 1486, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	1219, 0, 1223, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2674, 0,
	1502, 1503, 1504, 1505, 547, 0, 0, 0, 0, 0,
	1485, 1516, 0, 0, 1491, 1492, 1498, 1519, 1497, 1493,
	0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487,
	0, 0, 0, 0, 2645, 0, 0, 0, 2646, 0,
	0, 1507, 1509, 0, 0, 0, 0, 2335, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 1353, 0,
	1494, 1495, 0, 1173, 0, 3399, 1358, 1501, 0, 210,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 2404, 0, 0,
	0, 2669, 2670, 2671, 0, 0, 0, 3424, 2668, 2666,
	2667, 2659, 2660, 2661, 2662, 2664, 2665, 0, 0, 1217,
	1173, 1410, 210, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 1173, 0, 0, 0, 0, 0, 0, 2335,
	0, 531, 0, 0, 2458, 0, 0, 0, 0, 0,
	210, 0, 0, 210, 0, 210, 1506, 210, 0, 210,
	210, 0, 1184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2478, 701, 1501, 2335, 2335, 0, 0, 1489,
	1481, 1482, 1483, 1484, 1486, 1487, 0, 210, 0, 0,
	0, 0, 1530, 1531, 1532, 1533, 1534, 0, 1923, 0,
	0, 0, 0, 210, 1184, 210, 1209, 3513, 1217, 1934,
	1217, 0, 0, 1184, 0, 1184, 0, 1184, 0, 0,
	0, 1548, 1943, 1944, 1945, 0, 0, 1561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 210,
	210, 210, 1184, 210, 0, 210, 0, 1173, 0, 1173,
	0, 0, 58, 0, 0, 0, 0, 0, 0, 0,
	1477, 1478, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	1508, 63, 0, 0, 210, 0, 0, 1480, 0, 0,
	0, 1497, 1493, 0, 1490, 1488, 1489, 1481, 1482, 1483,
	1484, 1486, 1487, 0, 0, 0, 1477, 1478, 1173, 0,
	0, 0, 69, 1173, 0, 0, 1479, 0, 0, 1477,
	1478, 0, 0, 0, 0, 1499, 1508, 0, 0, 0,
	0, 0, 1496, 1480, 0, 0, 0, 0, 0, 1508,
	0, 0, 1173, 75, 0, 0, 1480, 0, 0, 1615,
	1615, 1615, 0, 86, 0, 0, 0, 0, 76, 83,
	0, 0, 1479, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 3215, 1217, 0, 1479, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 1173, 0, 0, 0, 0,
	1502, 1503, 1504, 1505, 0, 0, 0, 0, 0, 0,
	1485, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1173, 2211, 0, 2959, 0,
	843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 1509, 0, 0, 0, 1502, 1503, 1504, 1505,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 0, 1173, 0, 0, 0, 0, 0, 2211, 1485,
	1494, 1495, 0, 0, 1173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 1509, 0,
	210, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	1507, 1509, 0, 0, 0, 210, 0, 855, 0, 0,
	531, 0, 0, 0, 0, 531, 1494, 1495, 531, 0,
	0, 531, 531, 0, 78, 0, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 148, 81, 0,
	82, 0, 1217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 2211, 182,
	0, 2335, 2335, 210, 0, 0, 0, 2335, 0, 0,
	2786, 696, 0, 0, 1501, 119, 0, 2335, 2786, 0,
	2335, 2786, 2786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 210, 210, 0, 0, 184,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 1184, 0, 0,
	1501, 0, 120, 0, 0, 0, 2211, 2211, 0, 0,
	0, 0, 0, 1501, 0, 152, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 2845, 0, 0,
	2847, 2335, 0, 176, 210, 0, 0, 0, 210, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	2397, 0, 2398, 210, 0, 0, 0, 0, 0, 1184,
	0, 210, 151, 0, 2335, 0, 531, 0, 0, 0,
	0, 1497, 1493, 2335, 1490, 1488, 1489, 1481, 1482, 1483,
	1484, 1486, 1487, 0, 0, 0, 0, 0, 0, 0,
	1173, 0, 0, 0, 0, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 1883, 0, 0, 1883,
	0, 0, 0, 0, 0, 0, 0, 1497, 1493, 0,
	1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 0,
	0, 0, 0, 0, 0, 2467, 1481, 1482, 1483, 1484,
	1486, 1487, 0, 0, 0, 0, 2934, 0, 0, 1184,
	210, 1209, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 0, 2021, 0, 210, 0, 0, 0, 0,
	2035, 0, 0, 942, 0, 0, 0, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 211, 2084, 0, 2086, 2087, 2088, 2089, 0,
	0, 2997, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 2113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 2128, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2166, 2169, 2172, 2175, 664, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 0, 0, 0, 0, 2203, 0,
	2214, 2216, 2221, 0, 0, 0, 0, 0, 0, 210,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 531, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 1217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 1477, 1478,
	0, 0, 0, 0, 1520, 1521, 1522, 0, 0, 0,
	578, 0, 0, 0, 0, 0, 670, 0, 1508, 671,
	0, 0, 0, 0, 595, 1480, 0, 0, 0, 0,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	0, 0, 210, 0, 1479, 0, 0, 0, 0, 210,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 210,
	1496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2335, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2478, 2478, 0, 0, 0, 0, 701, 701, 2335,
	0, 0, 1883, 1883, 0, 0, 701, 2335, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 1502, 1503,
	1504, 1505, 0, 0, 0, 0, 0, 0, 1485, 2406,
	0, 2408, 0, 0, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 690, 1517, 674, 0, 1527, 0, 0, 0, 1507,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	594, 0, 0, 3235, 0, 2837, 0, 675, 1494, 1495,
	676, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	0, 0, 0, 677, 1515, 0, 0, 0, 0, 2860,
	0, 0, 0, 1500, 0, 0, 0, 0, 0, 2865,
	2866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 678, 685, 0, 0, 0, 0,
	210, 0, 679, 0, 0, 0, 1217, 0, 210, 0,
	0, 0, 0, 0, 0, 681, 0, 0, 0, 0,
	680, 210, 0, 0, 2525, 0, 0, 0, 0, 2909,
	2910, 0, 688, 0, 0, 0, 0, 2335, 2335, 2335,
	0, 0, 0, 683, 0, 0, 0, 0, 0, 1217,
	0, 0, 0, 0, 1506, 0, 2335, 0, 2786, 0,
	0, 1217, 1217, 210, 0, 0, 0, 0, 0, 0,
	1530, 1531, 1501, 0, 210, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2335, 0, 0, 0,
	3338, 0, 0, 0, 0, 0, 0, 0, 1518, 210,
	0, 0, 0, 0, 3349, 0, 0, 0, 0, 211,
	1094, 211, 211, 0, 1094, 211, 1094, 1094, 0, 0,
	1094, 0, 0, 0, 0, 2572, 2573, 0, 211, 0,
	0, 2579, 0, 0, 0, 0, 0, 0, 1217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2593, 2594, 0, 0, 0, 0, 2128, 0, 0, 0,
	0, 0, 0, 0, 0, 2601, 0, 0, 0, 0,
	1094, 1094, 211, 211, 0, 0, 0, 0, 0, 0,
	0, 2615, 1516, 0, 0, 211, 0, 0, 1519, 1497,
	1493, 0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486,
	1487, 0, 0, 0, 0, 0, 2636, 211, 211, 211,
	211, 0, 1094, 1094, 0, 0, 0, 1094, 0, 0,
	0, 1094, 211, 211, 0, 2335, 0, 2786, 0, 0,
	3418, 1094, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 0, 2221, 2221, 2221, 0, 0, 0, 0,
	0, 0, 0, 1094, 0, 0, 0, 0, 1615, 0,
	3418, 0, 0, 0, 0, 0, 2711, 0, 2335, 0,
	0, 0, 0, 0, 0, 0, 211, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1217, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2997, 0, 843, 0, 0, 877, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 3418, 843, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 58, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2802, 0, 59, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	63, 0, 0, 0, 3338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 39, 123, 210, 0, 0,
	0, 0, 0, 88, 2786, 0, 0, 0, 0, 38,
	0, 69, 0, 0, 0, 0, 0, 0, 1217, 0,
	1217, 0, 0, 0, 0, 3180, 3181, 3182, 0, 0,
	0, 0, 41, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 75, 0, 3594, 124, 0, 0, 0, 0,
	1217, 40, 86, 210, 0, 0, 0, 76, 83, 0,
	0, 0, 0, 0, 210, 2335, 0, 0, 0, 820,
	0, 0, 0, 0, 0, 0, 0, 0, 838, 0,
	0, 0, 0, 0, 43, 0, 1477, 1478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 2997, 0, 1508, 0, 0, 0,
	0, 1015, 0, 1480, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1094, 0, 211,
	211, 211, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 211, 1479, 0, 0, 0, 0, 0, 2335, 0,
	0, 1499, 0, 1094, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3418, 0,
	0, 0, 0, 0, 1094, 0, 0, 0, 0, 0,
	2035, 0, 0, 0, 0, 0, 2951, 2952, 0, 0,
	2955, 0, 0, 0, 2958, 1217, 0, 2335, 2954, 0,
	0, 0, 0, 2962, 0, 0, 0, 0, 0, 0,
	0, 0, 2969, 78, 0, 2711, 1502, 1503, 1504, 1505,
	0, 44, 0, 0, 0, 0, 1485, 0, 0, 0,
	2981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 47, 148, 81, 0, 82,
	0, 45, 0, 0, 0, 125, 0, 1507, 1509, 3006,
	3007, 46, 3008, 3009, 3010, 0, 0, 3011, 182, 0,
	0, 3013, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 119, 0, 1494, 1495, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 0, 0, 0,
	0, 0, 3041, 3042, 1094, 1094, 211, 0, 184, 0,
	0, 1500, 1094, 0, 0, 0, 0, 3051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 3060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 211, 183, 0, 0, 211, 211, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 211, 0, 211,
	0, 211, 0, 0, 0, 0, 0, 0, 3089, 0,
	0, 151, 1506, 0, 3, 0, 0, 0, 0, 0,
	0, 0, 0, 3097, 3100, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1094,
	0, 1094, 0, 1094, 0, 0, 0, 0, 0, 0,
	0, 1094, 0, 0, 1094, 211, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 1094, 1094, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 211, 0,
	211, 0, 211, 0, 211, 0, 211, 0, 0, 1615,
	0, 0, 0, 0, 0, 0, 0, 0, 3175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 908, 0, 211, 0, 0, 1497, 1493, 0,
	1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 0,
	0, 0, 88, 0, 88, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 3213,
	3214, 0, 0, 1094, 0, 3218, 3219, 0, 0, 0,
	3222, 3223, 607, 0, 0, 0, 0, 3227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3231, 0,
	0, 0, 0, 0, 607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3236, 0, 0, 0, 0, 0,
	838, 88, 88, 0, 0, 0, 0, 0, 1477, 1478,
	88, 1510, 1511, 1512, 1520, 1521, 1522, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 1508, 0,
	0, 0, 0, 0, 0, 1480, 0, 0, 1094, 0,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1479, 0, 0, 0, 0, 0,
	0, 88, 0, 1499, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3100, 0, 0,
	0, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 1094, 0, 0, 0, 0, 623, 0, 1502, 1503,
	1504, 1505, 0, 0, 0, 0, 0, 820, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 1540, 0, 0, 0, 0,
	0, 0, 1517, 0, 0, 1527, 0, 0, 0, 1507,
	1509, 0, 1547, 0, 3100, 0, 1553, 0, 0, 0,
	0, 0, 0, 625, 644, 0, 0, 0, 0, 1523,
	0, 1524, 0, 0, 0, 0, 0, 0, 1494, 1495,
	0, 3387, 3388, 3389, 0, 626, 0, 0, 627, 1094,
	0, 0, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 1500, 0, 651, 0, 3397, 3398, 0,
	0, 628, 0, 0, 0, 0, 0, 0, 0, 1094,
	649, 3405, 0, 1525, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 629,
	1514, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 630,
	0, 3100, 631, 653, 0, 0, 0, 595, 0, 3441,
	211, 1094, 0, 0, 0, 1094, 0, 1094, 3448, 0,
	0, 843, 0, 211, 1506, 0, 0, 3455, 0, 0,
	0, 0, 0, 1635, 0, 1638, 0, 88, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 3100, 211, 0, 3100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 652, 0, 0, 3100, 3100, 0,
	0, 0, 634, 0, 0, 0, 0, 211, 0, 0,
	211, 0, 211, 0, 211, 0, 211, 211, 0, 0,
	1094, 1094, 1094, 0, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1094, 632, 0, 0,
	0, 0, 0, 0, 211, 0, 0, 635, 0, 3525,
	0, 0, 3528, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 211, 0, 0, 0, 636, 0, 0, 3100,
	0, 0, 1516, 0, 0, 1491, 1492, 1498, 1519, 1497,
	1493, 0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486,
	1487, 0, 0, 594, 0, 211, 211, 211, 211, 3241,
	211, 0, 211, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 638, 0, 209, 215,
	209, 209, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 643, 0, 607, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 639, 0, 0,
	656, 0, 655, 0, 0, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 843,
	0, 0, 0, 648, 0, 0, 0, 0, 657, 600,
	654, 209, 209, 0, 0, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 3646, 3646,
	3646, 0, 0, 0, 0, 0, 209, 209, 209, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3667, 209, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 1477, 1478, 0, 1510, 1511, 1512, 1520, 1521, 1522,
	0, 0, 0, 3100, 0, 3100, 0, 0, 0, 0,
	1513, 1508, 0, 0, 0, 0, 0, 0, 1480, 3646,
	0, 0, 0, 1526, 0, 0, 0, 0, 0, 0,
	0, 0, 838, 0, 838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 0, 0,
	0, 0, 0, 0, 0, 209, 1499, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3646,
	3755, 0, 0, 0, 0, 0, 0, 3759, 0, 0,
	1094, 1502, 1503, 1504, 1505, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 0, 1094, 0, 0,
	0, 0, 0, 0, 0, 912, 0, 692, 0, 0,
	0, 0, 0, 0, 0, 1517, 820, 0, 1527, 820,
	820, 0, 1507, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 58, 695, 694, 0, 0, 0, 0, 0,
	211, 0, 1523, 0, 1524, 0, 59, 0, 0, 0,
	0, 1494, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 63, 1021, 0, 0, 0, 0, 1515, 0, 0,
	0, 211, 211, 211, 2102, 0, 1500, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 838, 0,
	0, 0, 69, 211, 0, 0, 1525, 0, 0, 1547,
	0, 205, 1094, 1547, 0, 0, 0, 0, 0, 0,
	1094, 0, 0, 1514, 0, 0, 0, 0, 0, 1094,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 86, 1094, 211, 0, 0, 76, 83,
	0, 0, 0, 0, 1094, 1094, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 1506, 0, 1637,
	58, 1028, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 1015, 0, 0, 59, 1501, 0, 0, 209, 1637,
	209, 0, 77, 0, 0, 607, 0, 1638, 0, 63,
	607, 0, 0, 0, 1094, 1094, 0, 0, 0, 0,
	0, 1518, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 0, 211, 1094, 211,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 0, 76, 83, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 1516, 0, 0, 1491, 1492,
	1498, 1519, 1497, 1493, 78, 1490, 1488, 1489, 1481, 1482,
	1483, 1484, 1486, 1487, 0, 0, 0, 0, 2124, 0,
	77, 0, 2125, 0, 0, 0, 1090, 0, 0, 1094,
	1090, 0, 1203, 1203, 0, 0, 1203, 148, 81, 0,
	82, 0, 0, 0, 0, 0, 1094, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 607, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 119, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 1203, 0, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 0, 184,
	0, 88, 0, 88, 0, 0, 0, 0, 0, 59,
	209, 0, 0, 2293, 209, 209, 0, 0, 0, 0,
	0, 0, 120, 0, 63, 0, 0, 0, 1203, 1203,
	0, 0, 78, 1203, 0, 152, 209, 1203, 209, 0,
	209, 0, 0, 183, 0, 88, 0, 1203, 88, 0,
	0, 0, 0, 176, 0, 69, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 148, 81, 0, 82, 1094,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 0,
	0, 0, 693, 0, 0, 0, 75, 182, 0, 1203,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 696,
	0, 76, 83, 119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 88, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 77, 607, 209, 0, 209,
	120, 209, 0, 209, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 1094, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 176, 0, 209, 0, 0, 211, 0, 0, 177,
	0, 0, 0, 0, 0, 1094, 211, 0, 0, 0,
	1094, 0, 1091, 0, 0, 0, 1091, 0, 1204, 1204,
	151, 0, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1094, 1094, 1094, 0, 0, 0, 0, 0, 0, 0,
	2102, 0, 0, 0, 0, 0, 1094, 0, 0, 0,
	0, 211, 1094, 0, 0, 0, 0, 78, 1084, 0,
	0, 1547, 1204, 1204, 1191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 81, 0, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1204, 1204, 0, 0, 0, 1204,
	0, 0, 182, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1204, 696, 0, 0, 0, 119, 0,
	0, 0, 0, 0, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 58, 1318, 1318, 1318, 1191,
	0, 0, 0, 0, 0, 1204, 0, 0, 0, 59,
	0, 1351, 1352, 1090, 0, 120, 0, 1028, 0, 0,
	0, 0, 600, 0, 63, 0, 0, 600, 152, 1094,
	1015, 1094, 0, 1028, 0, 0, 183, 0, 0, 1203,
	0, 0, 0, 0, 0, 1015, 176, 209, 0, 0,
	0, 0, 0, 0, 177, 69, 0, 0, 0, 0,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 1477, 1478, 0,
	211, 0, 0, 0, 0, 1429, 75, 0, 0, 0,
	1094, 211, 211, 0, 0, 1094, 86, 1508, 0, 0,
	0, 76, 83, 0, 1480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 1094, 0, 0, 1094, 0, 0,
	0, 0, 0, 1479, 0, 0, 0, 0, 0, 0,
	0, 0, 1499, 0, 0, 77, 0, 88, 88, 1496,
	0, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	88, 209, 0, 88, 0, 0, 0, 0, 0, 2953,
	1203, 1203, 209, 0, 0, 0, 0, 1094, 1090, 0,
	0, 0, 0, 0, 0, 209, 0, 1502, 1503, 1504,
	1505, 0, 0, 0, 0, 0, 0, 1485, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 1094, 0, 0, 0, 0, 0,
	0, 1015, 0, 0, 838, 0, 1094, 0, 1507, 1509,
	0, 0, 0, 0, 0, 211, 0, 78, 209, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 88,
	88, 0, 0, 0, 0, 0, 0, 1494, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	148, 81, 0, 82, 0, 0, 209, 0, 0, 209,
	0, 209, 1500, 209, 0, 209, 209, 0, 0, 0,
	0, 0, 182, 0, 211, 1204, 0, 0, 0, 1094,
	0, 0, 0, 0, 696, 1203, 0, 1203, 119, 1203,
	0, 0, 0, 209, 0, 1653, 1091, 1203, 0, 0,
	1203, 0, 0, 0, 0, 0, 211, 211, 1662, 209,
	1191, 209, 184, 1203, 1203, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 0, 120, 0, 0, 0, 0,
	0, 0, 0, 1506, 209, 209, 209, 209, 152, 209,
	0, 209, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 1094, 0, 0, 1090,
	0, 1094, 0, 0, 0, 0, 1204, 1204, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 0, 0, 0, 0,
	211, 0, 1094, 0, 0, 0, 0, 0, 0, 1015,
	1015, 211, 0, 0, 0, 0, 0, 0, 1497, 1493,
	0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487,
	0, 0, 1477, 1478, 0, 1510, 1511, 1512, 1520, 1521,
	1522, 0, 0, 0, 1090, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 1480,
	0, 0, 0, 0, 1526, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1479, 0,
	0, 0, 0, 0, 0, 0, 1293, 1499, 1889, 0,
	1889, 1204, 0, 1204, 1496, 1204, 0, 0, 0, 0,
	0, 1090, 0, 1204, 0, 0, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1028, 0, 0, 1204,
	1204, 1204, 0, 0, 0, 0, 0, 1090, 0, 0,
	0, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1502, 1503, 1504, 1505, 0, 0, 0, 0,
	0, 1637, 1485, 0, 1866, 0, 0, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1015, 0,
	0, 0, 0, 0, 0, 0, 1517, 1955, 0, 1527,
	0, 0, 0, 1507, 1509, 0, 0, 1965, 0, 1967,
	0, 1969, 0, 1971, 0, 1972, 0, 0, 0, 209,
	0, 88, 0, 0, 0, 1203, 0, 0, 0, 0,
	0, 0, 1494, 1495, 0, 1091, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 1515, 0,
	209, 209, 209, 0, 0, 1090, 0, 1500, 0, 1637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1090, 0, 0,
	209, 1203, 0, 1203, 209, 0, 0, 0, 0, 0,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 1028, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1015, 0, 0, 0, 0, 0, 1501, 0, 1015, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 1518, 0, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 1203, 1203, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 1516, 2277, 88, 1491,
	1492, 1498, 1519, 1497, 1493, 0, 1490, 1488, 1489, 1481,
	1482, 1483, 1484, 1486, 1487, 0, 1477, 1478, 0, 1510,
	1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0, 0,
	0, 1204, 0, 0, 0, 1513, 1508, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 0, 0, 0, 1477, 1478, 0, 0, 0,
	0, 0, 1479, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 0, 1508, 0, 0, 1496, 0,
	0, 0, 1480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 0, 0, 0, 1204, 0, 1204,
	0, 1479, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 1028, 1028, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 1503, 1504, 1505,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1191,
	0, 0, 0, 0, 0, 0, 0, 2578, 0, 0,
	1517, 0, 0, 1527, 0, 0, 0, 1507, 1509, 0,
	0, 0, 2102, 0, 0, 1502, 1503, 1504, 1505, 0,
	0, 0, 1204, 1204, 1204, 1485, 1204, 1523, 1866, 1524,
	0, 0, 0, 0, 2429, 0, 1494, 1495, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 1507, 1509, 0, 0,
	0, 1500, 0, 0, 1090, 0, 2460, 0, 0, 1318,
	0, 1318, 0, 1318, 0, 1191, 1191, 0, 0, 0,
	0, 1525, 0, 0, 0, 1494, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 209, 0,
	0, 0, 0, 2504, 0, 209, 0, 0, 0, 0,
	1500, 0, 0, 1090, 0, 209, 0, 0, 0, 2512,
	0, 2515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1028, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2536, 1191, 2538, 1191, 0, 2541,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 0,
	0, 1506, 1318, 0, 0, 0, 0, 0, 0, 0,
	2569, 0, 88, 0, 0, 88, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 1090, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 1203, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 1491, 1492, 1498, 1519, 1497, 1493, 0,
	1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 0,
	0, 0, 0, 0, 0, 0, 1028, 0, 0, 0,
	0, 0, 0, 0, 1028, 0, 0, 0, 0, 0,
	1203, 1203, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 0, 0, 1497, 1493, 0, 1490,
	1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 0, 0,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 1090, 0, 0, 1090, 0, 0, 0, 0, 0,
	209, 209, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1477, 1478,
	0, 1510, 1511, 1512, 1520, 1521, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 1090, 0, 1513, 1508, 0,
	0, 1477, 1478, 0, 0, 1480, 0, 0, 0, 0,
	1526, 0, 1090, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 1480, 0,
	0, 0, 0, 0, 1479, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 2778,
	1496, 0, 0, 0, 1091, 0, 0, 1479, 0, 0,
	0, 0, 1204, 0, 0, 0, 1499, 0, 0, 0,
	0, 1091, 0, 1496, 0, 0, 0, 0, 0, 0,
	2815, 2817, 2429, 0, 0, 0, 1204, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 1204, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1502, 1503,
	1504, 1505, 0, 2571, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 1503, 1504, 1505, 1090, 0, 0, 0, 0,
	2857, 1485, 1517, 0, 2861, 1527, 1204, 1204, 0, 1507,
	1509, 0, 0, 209, 0, 0, 0, 0, 0, 2870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1523,
	0, 1524, 1507, 1509, 0, 0, 0, 0, 1494, 1495,
	0, 0, 0, 0, 0, 209, 209, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 1091, 0, 0,
	1091, 1494, 1495, 1500, 0, 0, 0, 0, 0, 0,
	0, 2913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1525, 0, 0, 1500, 0, 0, 0,
	0, 0, 1203, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2937, 0, 1191, 0,
	0, 1090, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 1506, 0, 0, 0, 1091, 0,
	0, 2949, 0, 0, 0, 0, 1203, 1203, 1203, 0,
	0, 0, 1501, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 1203, 0, 0, 0, 0, 0, 1090, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 1516, 0, 0, 1491, 1492, 1498, 1519, 1497,
	1493, 0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486,
	1487, 0, 0, 0, 0, 0, 0, 0, 0, 2967,
	0, 0, 1497, 1493, 0, 1490, 1488, 1489, 1481, 1482,
	1483, 1484, 1486, 1487, 0, 1090, 0, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 1477, 1478, 0, 1510,
	1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1513, 1508, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1204, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 0, 0,
	0, 1090, 1479, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 1091, 1496, 0,
	0, 0, 1204, 0, 0, 0, 0, 0, 0, 0,
	1090, 0, 0, 1203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1204, 1204, 1204, 0, 0, 0, 3145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1204, 0,
	0, 0, 0, 1090, 1091, 3159, 1502, 1503, 1504, 1505,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	1517, 0, 0, 1527, 0, 0, 0, 1507, 1509, 0,
	744, 0, 779, 0, 0, 0, 0, 0, 0, 0,
	3198, 0, 0, 0, 0, 0, 0, 1523, 0, 1524,
	1090, 0, 0, 0, 751, 0, 1494, 1495, 0, 0,
	0, 0, 1090, 0, 0, 0, 0, 0, 763, 749,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 753, 0,
	0, 1525, 785, 0, 0, 0, 0, 0, 0, 760,
	761, 0, 0, 0, 0, 772, 0, 0, 1514, 0,
	0, 1091, 0, 1091, 0, 0, 0, 0, 0, 780,
	755, 0, 0, 0, 0, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 1091, 0, 0, 0, 0, 1091, 0, 756,
	0, 0, 0, 0, 0, 0, 0, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 0,
	0, 0, 757, 758, 0, 0, 1091, 0, 0, 1204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3311,
	0, 0, 0, 0, 765, 764, 0, 0, 0, 0,
	2429, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 1091,
	0, 1203, 0, 0, 0, 2429, 0, 0, 0, 0,
	0, 1203, 1203, 0, 781, 0, 0, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	1516, 0, 0, 1491, 1492, 1498, 1519, 1497, 1493, 0,
	1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 0,
	0, 0, 0, 0, 0, 754, 0, 2648, 1090, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 752,
	0, 0, 0, 776, 777, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 0,
	0, 0, 0, 0, 769, 0, 0, 0, 0, 0,
	0, 746, 0, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 0, 0, 0, 3425, 0, 0, 0, 0, 770,
	0, 1204, 0, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 783, 0, 0, 0, 0, 0, 0, 0,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3478, 0, 0, 0, 0, 0, 0,
	0, 0, 775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3504, 1191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1204, 1204, 0,
	0, 0, 0, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3562, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3602,
	219, 220, 221, 222, 223, 1095, 224, 1096, 1097, 1098,
	3618, 1099, 482, 1100, 1101, 1102, 1103, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	1104, 234, 235, 236, 237, 238, 239, 1105, 1106, 240,
	487, 488, 489, 1107, 241, 490, 1108, 1093, 1109, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	1110, 252, 0, 253, 254, 255, 1111, 256, 965, 257,
	258, 1112, 1113, 1115, 1114, 1116, 1117, 1118, 259, 260,
	261, 262, 263, 264, 491, 492, 1119, 265, 1120, 267,
	266, 1121, 268, 1122, 1123, 269, 270, 271, 1124, 272,
	1125, 273, 274, 1126, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 1127, 216, 1128,
	0, 0, 0, 0, 286, 287, 288, 496, 289, 290,
	0, 291, 1129, 292, 1130, 1131, 966, 293, 294, 1132,
	295, 497, 1133, 498, 296, 1134, 297, 298, 299, 300,
	499, 500, 501, 353, 968, 301, 302, 1135, 303, 304,
	306, 0, 0, 217, 305, 307, 314, 1136, 967, 308,
	502, 310, 309, 311, 312, 313, 503, 1137, 504, 1138,
	315, 969, 505, 970, 316, 317, 318, 971, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 1139, 327, 326,
	1140, 328, 506, 972, 329, 330, 973, 1141, 331, 332,
	1142, 1143, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 974, 346, 347, 350,
	349, 975, 348, 1144, 218, 976, 351, 1145, 507, 352,
	508, 354, 355, 1146, 356, 357, 358, 1147, 1148, 360,
	361, 362, 1149, 1150, 363, 364, 509, 977, 365, 978,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	1151, 374, 375, 511, 376, 512, 377, 1152, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 513, 386, 387,
	1153, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 1154, 401, 979, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 414,
	415, 416, 417, 1155, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 1156, 428, 408, 409, 429, 430,
	980, 431, 432, 515, 433, 434, 1157, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 1158,
	446, 447, 445, 1159, 448, 449, 450, 451, 452, 280,
	453, 1160, 454, 517, 518, 519, 520, 1161, 461, 1162,
	455, 456, 521, 457, 522, 1163, 458, 459, 460, 0,
	462, 463, 1164, 1165, 464, 465, 466, 467, 468, 470,
	1166, 471, 1167, 469, 472, 473, 474, 523, 524, 525,
	1168, 476, 475, 526, 1169, 1170, 1171, 1172, 477, 478,
	527, 479, 480, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 0, 0,
	0, 0, 0, 0, 2255, 0, 0, 0, 0, 0,
	0, 0, 2256, 219, 220, 221, 222, 223, 1095, 224,
	1096, 1097, 1098, 0, 1099, 482, 1100, 1101, 1102, 1103,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 1104, 234, 235, 236, 237, 238, 239,
	1105, 1106, 240, 487, 488, 489, 1107, 241, 490, 1108,
	1093, 1109, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 1110, 252, 0, 253, 254, 255, 1111,
	256, 965, 257, 258, 1112, 1113, 1115, 1114, 1116, 1117,
	1118, 259, 260, 261, 262, 263, 264, 491, 492, 1119,
	265, 1120, 267, 266, 1121, 268, 1122, 1123, 269, 270,
	271, 1124, 272, 1125, 273, 274, 1126, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	1127, 216, 1128, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 1129, 292, 1130, 1131, 966,
	293, 294, 1132, 295, 497, 1133, 498, 296, 1134, 297,
	298, 299, 300, 499, 500, 501, 353, 968, 301, 302,
	1135, 303, 304, 306, 0, 0, 217, 305, 307, 314,
	1136, 967, 308, 502, 310, 309, 311, 312, 313, 503,
	1137, 504, 1138, 315, 969, 505, 970, 316, 317, 318,
	971, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	1139, 327, 326, 1140, 328, 506, 972, 329, 330, 973,
	1141, 331, 332, 1142, 1143, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 974,
	346, 347, 350, 349, 975, 348, 1144, 218, 976, 351,
	1145, 507, 352, 508, 354, 355, 1146, 356, 357, 358,
	1147, 1148, 360, 361, 362, 1149, 1150, 363, 364, 509,
	977, 365, 978, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 1151, 374, 375, 511, 376, 512, 377,
	1152, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 1153, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 1154, 401,
	979, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 1155, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 1156, 428, 408,
	409, 429, 430, 980, 431, 432, 515, 433, 434, 1157,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 1158, 446, 447, 445, 1159, 448, 449, 450,
	451, 452, 280, 453, 1160, 454, 517, 518, 519, 520,
	1161, 461, 1162, 455, 456, 521, 457, 522, 1163, 458,
	459, 460, 0, 462, 463, 1164, 1165, 464, 465, 466,
	467, 468, 470, 1166, 471, 1167, 469, 472, 473, 474,
	523, 524, 525, 1168, 476, 475, 526, 1169, 1170, 1171,
	1172, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1088, 0, 0,
	0, 0, 2975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2977, 219, 220, 221, 222, 223, 1095,
	224, 1096, 1097, 1098, 0, 1099, 482, 1100, 1101, 1102,
	1103, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 1104, 234, 235, 236, 237, 238,
	239, 1105, 1106, 240, 487, 488, 489, 1107, 241, 490,
	1108, 1093, 1109, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 1110, 252, 0, 253, 254, 255,
	1111, 256, 965, 257, 258, 1112, 1113, 1115, 1114, 1116,
	1117, 1118, 259, 260, 261, 262, 263, 264, 491, 492,
	1119, 265, 1120, 267, 266, 1121, 268, 1122, 1123, 269,
	270, 271, 1124, 272, 1125, 273, 274, 1126, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 1127, 216, 1128, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 1129, 292, 1130, 1131,
	966, 293, 294, 1132, 295, 497, 1133, 498, 296, 1134,
	297, 298, 299, 300, 499, 500, 501, 353, 968, 301,
	302, 1135, 303, 304, 306, 0, 0, 217, 305, 307,
	314, 1136, 967, 308, 502, 310, 309, 311, 312, 313,
	503, 1137, 504, 1138, 315, 969, 505, 970, 316, 317,
	318, 971, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 1139, 327, 326, 1140, 328, 506, 972, 329, 330,
	973, 1141, 331, 332, 1142, 1143, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 343,
	974, 346, 347, 350, 349, 975, 348, 1144, 218, 976,
	351, 1145, 507, 352, 508, 354, 355, 1146, 356, 357,
	358, 1147, 1148, 360, 361, 362, 1149, 1150, 363, 364,
	509, 977, 365, 978, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 1151, 374, 375, 511, 376, 512,
	377, 1152, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 1153, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 1154,
	401, 979, 402, 403, 404, 405, 514, 406, 0, 407,
	411, 412, 413, 414, 415, 416, 417, 1155, 423, 424,
	418, 420, 421, 422, 419, 425, 426, 427, 1156, 428,
	408, 409, 429, 430, 980, 431, 432, 515, 433, 434,
	1157, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 1158, 446, 447, 445, 1159, 448, 449,
	450, 451, 452, 280, 453, 1160, 454, 517, 518, 519,
	520, 1161, 461, 1162, 455, 456, 521, 457, 522, 1163,
	458, 459, 460, 0, 462, 463, 1164, 1165, 464, 465,
	466, 467, 468, 470, 1166, 471, 1167, 469, 472, 473,
	474, 523, 524, 525, 1168, 476, 475, 526, 1169, 1170,
	1171, 1172, 477, 478, 527, 479, 480, 481, 0, 0,
	0, 0, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3265, 219,
	220, 221, 222, 223, 1095, 224, 1096, 1097, 1098, 0,
	1099, 482, 1100, 1101, 1102, 1103, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 1104,
	234, 235, 236, 237, 238, 239, 1105, 1106, 240, 487,
	488, 489, 1107, 241, 490, 1108, 1093, 1109, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 1110,
	252, 0, 253, 254, 255, 1111, 256, 965, 257, 258,
	1112, 1113, 1115, 1114, 1116, 1117, 1118, 259, 260, 261,
	262, 263, 264, 491, 492, 1119, 265, 1120, 267, 266,
	1121, 268, 1122, 1123, 269, 270, 271, 1124, 272, 1125,
	273, 274, 1126, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 1127, 216, 1128, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 1129, 292, 1130, 1131, 966, 293, 294, 1132, 295,
	497, 1133, 498, 296, 1134, 297, 298, 299, 300, 499,
	500, 501, 353, 968, 301, 302, 1135, 303, 304, 306,
	0, 0, 217, 305, 307, 314, 1136, 967, 308, 502,
	310, 309, 311, 312, 313, 503, 1137, 504, 1138, 315,
	969, 505, 970, 316, 317, 318, 971, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 1139, 327, 326, 1140,
	328, 506, 972, 329, 330, 973, 1141, 331, 332, 1142,
	1143, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 974, 346, 347, 350, 349,
	975, 348, 1144, 218, 976, 351, 1145, 507, 352, 508,
	354, 355, 1146, 356, 357, 358, 1147, 1148, 360, 361,
	362, 1149, 1150, 363, 364, 509, 977, 365, 978, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 1151,
	374, 375, 511, 376, 512, 377, 1152, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 1153,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 1154, 401, 979, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 1155, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 1156, 428, 408, 409, 429, 430, 980,
	431, 432, 515, 433, 434, 1157, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 1158, 446,
	447, 445, 1159, 448, 449, 450, 451, 452, 280, 453,
	1160, 454, 517, 518, 519, 520, 1161, 461, 1162, 455,
	456, 521, 457, 522, 1163, 458, 459, 460, 0, 462,
	463, 1164, 1165, 464, 465, 466, 467, 468, 470, 1166,
	471, 1167, 469, 472, 473, 474, 523, 524, 525, 1168,
	476, 475, 526, 1169, 1170, 1171, 1172, 477, 478, 527,
	479, 480, 481, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3393, 0,
	219, 220, 221, 222, 223, 1095, 224, 1096, 1097, 1098,
	0, 1099, 482, 1100, 1101, 1102, 1103, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	1104, 234, 235, 236, 237, 238, 239, 1105, 1106, 240,
	487, 488, 489, 1107, 241, 490, 1108, 1093, 1109, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	1110, 252, 0, 253, 254, 255, 1111, 256, 965, 257,
	258, 1112, 1113, 1115, 1114, 1116, 1117, 1118, 259, 260,
	261, 262, 263, 264, 491, 492, 1119, 265, 1120, 267,
	266, 1121, 268, 1122, 1123, 269, 270, 271, 1124, 272,
	1125, 273, 274, 1126, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 1127, 216, 1128,
	0, 0, 0, 0, 286, 287, 288, 496, 289, 290,
	0, 291, 1129, 292, 1130, 1131, 966, 293, 294, 1132,
	295, 497, 1133, 498, 296, 1134, 297, 298, 299, 300,
	499, 500, 501, 353, 968, 301, 302, 1135, 303, 304,
	306, 0, 0, 217, 305, 307, 314, 1136, 967, 308,
	502, 310, 309, 311, 312, 313, 503, 1137, 504, 1138,
	315, 969, 505, 970, 316, 317, 318, 971, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 1139, 327, 326,
	1140, 328, 506, 972, 329, 330, 973, 1141, 331, 332,
	1142, 1143, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 974, 346, 347, 350,
	349, 975, 348, 1144, 218, 976, 351, 1145, 507, 352,
	508, 354, 355, 1146, 356, 357, 358, 1147, 1148, 360,
	361, 362, 1149, 1150, 363, 364, 509, 977, 365, 978,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	1151, 374, 375, 511, 376, 512, 377, 1152, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 513, 386, 387,
	1153, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 1154, 401, 979, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 414,
	415, 416, 417, 1155, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 1156, 428, 408, 409, 429, 430,
	980, 431, 432, 515, 433, 434, 1157, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 1158,
	446, 447, 445, 1159, 448, 449, 450, 451, 452, 280,
	453, 1160, 454, 517, 518, 519, 520, 1161, 461, 1162,
	455, 456, 521, 457, 522, 1163, 458, 459, 460, 0,
	462, 463, 1164, 1165, 464, 465, 466, 467, 468, 470,
	1166, 471, 1167, 469, 472, 473, 474, 523, 524, 525,
	1168, 476, 475, 526, 1169, 1170, 1171, 1172, 477, 478,
	527, 479, 480, 481, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3318,
	0, 219, 220, 221, 222, 223, 1095, 224, 1096, 1097,
	1098, 0, 1099, 482, 1100, 1101, 1102, 1103, 225, 227,
	226, 228, 229, 483, 484, 230, 485, 233, 231, 232,
	486, 1104, 234, 235, 236, 237, 238, 239, 1105, 1106,
	240, 487, 488, 489, 1107, 241, 490, 1108, 1093, 1109,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 1110, 252, 0, 253, 254, 255, 1111, 256, 965,
	257, 258, 1112, 1113, 1115, 1114, 1116, 1117, 1118, 259,
	260, 261, 262, 263, 264, 491, 492, 1119, 265, 1120,
	267, 266, 1121, 268, 1122, 1123, 269, 270, 271, 1124,
	272, 1125, 273, 274, 1126, 275, 493, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 494, 495, 1127, 216,
	1128, 0, 0, 0, 0, 286, 287, 288, 496, 289,
	290, 0, 291, 1129, 292, 1130, 1131, 966, 293, 294,
	1132, 295, 497, 1133, 498, 296, 1134, 297, 298, 299,
	300, 499, 500, 501, 353, 968, 301, 302, 1135, 303,
	304, 306, 0, 0, 217, 305, 307, 314, 1136, 967,
	308, 502, 310, 309, 311, 312, 313, 503, 1137, 504,
	1138, 315, 969, 505, 970, 316, 317, 318, 971, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 1139, 327,
	326, 1140, 328, 506, 972, 329, 330, 973, 1141, 331,
	332, 1142, 1143, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 345, 343, 974, 346, 347,
	350, 349, 975, 348, 1144, 218, 976, 351, 1145, 507,
	352, 508, 354, 355, 1146, 356, 357, 358, 1147, 1148,
	360, 361, 362, 1149, 1150, 363, 364, 509, 977, 365,
	978, 510, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 1151, 374, 375, 511, 376, 512, 377, 1152, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 513, 386,
	387, 1153, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 1154, 401, 979, 402,
	403, 404, 405, 514, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 1155, 423, 424, 418, 420, 421,
	422, 419, 425, 426, 427, 1156, 428, 408, 409, 429,
	430, 980, 431, 432, 515, 433, 434, 1157, 435, 436,
	437, 438, 410, 439, 443, 444, 440, 441, 442, 516,
	1158, 446, 447, 445, 1159, 448, 449, 450, 451, 452,
	280, 453, 1160, 454, 517, 518, 519, 520, 1161, 461,
	1162, 455, 456, 521, 457, 522, 1163, 458, 459, 460,
	0, 462, 463, 1164, 1165, 464, 465, 466, 467, 468,
	470, 1166, 471, 1167, 469, 472, 473, 474, 523, 524,
	525, 1168, 476, 475, 526, 1169, 1170, 1171, 1172, 477,
	478, 527, 479, 480, 481, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3199, 0, 219, 220, 221, 222, 223, 1095, 224, 1096,
	1097, 1098, 0, 1099, 482, 1100, 1101, 1102, 1103, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 1104, 234, 235, 236, 237, 238, 239, 1105,
	1106, 240, 487, 488, 489, 1107, 241, 490, 1108, 1093,
	1109, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 1110, 252, 0, 253, 254, 255, 1111, 256,
	965, 257, 258, 1112, 1113, 1115, 1114, 1116, 1117, 1118,
	259, 260, 261, 262, 263, 264, 491, 492, 1119, 265,
	1120, 267, 266, 1121, 268, 1122, 1123, 269, 270, 271,
	1124, 272, 1125, 273, 274, 1126, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 1127,
	216, 1128, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 1129, 292, 1130, 1131, 966, 293,
	294, 1132, 295, 497, 1133, 498, 296, 1134, 297, 298,
	299, 300, 499, 500, 501, 353, 968, 301, 302, 1135,
	303, 304, 306, 0, 0, 217, 305, 307, 314, 1136,
	967, 308, 502, 310, 309, 311, 312, 313, 503, 1137,
	504, 1138, 315, 969, 505, 970, 316, 317, 318, 971,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 1139,
	327, 326, 1140, 328, 506, 972, 329, 330, 973, 1141,
	331, 332, 1142, 1143, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 974, 346,
	347, 350, 349, 975, 348, 1144, 218, 976, 351, 1145,
	507, 352, 508, 354, 355, 1146, 356, 357, 358, 1147,
	1148, 360, 361, 362, 1149, 1150, 363, 364, 509, 977,
	365, 978, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 1151, 374, 375, 511, 376, 512, 377, 1152,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 1153, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 1154, 401, 979,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 1155, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 1156, 428, 408, 409,
	429, 430, 980, 431, 432, 515, 433, 434, 1157, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 1158, 446, 447, 445, 1159, 448, 449, 450, 451,
	452, 280, 453, 1160, 454, 517, 518, 519, 520, 1161,
	461, 1162, 455, 456, 521, 457, 522, 1163, 458, 459,
	460, 0, 462, 463, 1164, 1165, 464, 465, 466, 467,
	468, 470, 1166, 471, 1167, 469, 472, 473, 474, 523,
	524, 525, 1168, 476, 475, 526, 1169, 1170, 1171, 1172,
	477, 478, 527, 479, 480, 481, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2993, 0, 219, 220, 221, 222, 223, 1095, 224,
	1096, 1097, 1098, 0, 1099, 482, 1100, 1101, 1102, 1103,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 1104, 234, 235, 236, 237, 238, 239,
	1105, 1106, 240, 487, 488, 489, 1107, 241, 490, 1108,
	1093, 1109, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 1110, 252, 0, 253, 254, 255, 1111,
	256, 965, 257, 258, 1112, 1113, 1115, 1114, 1116, 1117,
	1118, 259, 260, 261, 262, 263, 264, 491, 492, 1119,
	265, 1120, 267, 266, 1121, 268, 1122, 1123, 269, 270,
	271, 1124, 272, 1125, 273, 274, 1126, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	1127, 216, 1128, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 1129, 292, 1130, 1131, 966,
	293, 294, 1132, 295, 497, 1133, 498, 296, 1134, 297,
	298, 299, 300, 499, 500, 501, 353, 968, 301, 302,
	1135, 303, 304, 306, 0, 0, 217, 305, 307, 314,
	1136, 967, 308, 502, 310, 309, 311, 312, 313, 503,
	1137, 504, 1138, 315, 969, 505, 970, 316, 317, 318,
	971, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	1139, 327, 326, 1140, 328, 506, 972, 329, 330, 973,
	1141, 331, 332, 1142, 1143, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 974,
	346, 347, 350, 349, 975, 348, 1144, 218, 976, 351,
	1145, 507, 352, 508, 354, 355, 1146, 356, 357, 358,
	1147, 1148, 360, 361, 362, 1149, 1150, 363, 364, 509,
	977, 365, 978, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 1151, 374, 375, 511, 376, 512, 377,
	1152, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 1153, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 1154, 401,
	979, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 1155, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 1156, 428, 408,
	409, 429, 430, 980, 431, 432, 515, 433, 434, 1157,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 1158, 446, 447, 445, 1159, 448, 449, 450,
	451, 452, 280, 453, 1160, 454, 517, 518, 519, 520,
	1161, 461, 1162, 455, 456, 521, 457, 522, 1163, 458,
	459, 460, 0, 462, 463, 1164, 1165, 464, 465, 466,
	467, 468, 470, 1166, 471, 1167, 469, 472, 473, 474,
	523, 524, 525, 1168, 476, 475, 526, 1169, 1170, 1171,
	1172, 477, 478, 527, 479, 480, 481, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2844, 0, 219, 220, 221, 222, 223, 1095,
	224, 1096, 1097, 1098, 0, 1099, 482, 1100, 1101, 1102,
	1103, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 1104, 234, 235, 236, 237, 238,
	239, 1105, 1106, 240, 487, 488, 489, 1107, 241, 490,
	1108, 1093, 1109, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 1110, 252, 0, 253, 254, 255,
	1111, 256, 965, 257, 258, 1112, 1113, 1115, 1114, 1116,
	1117, 1118, 259, 260, 261, 262, 263, 264, 491, 492,
	1119, 265, 1120, 267, 266, 1121, 268, 1122, 1123, 269,
	270, 271, 1124, 272, 1125, 273, 274, 1126, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 1127, 216, 1128, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 1129, 292, 1130, 1131,
	966, 293, 294, 1132, 295, 497, 1133, 498, 296, 1134,
	297, 298, 299, 300, 499, 500, 501, 353, 968, 301,
	302, 1135, 303, 304, 306, 0, 0, 217, 305, 307,
	314, 1136, 967, 308, 502, 310, 309, 311, 312, 313,
	503, 1137, 504, 1138, 315, 969, 505, 970, 316, 317,
	318, 971, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 1139, 327, 326, 1140, 328, 506, 972, 329, 330,
	973, 1141, 331, 332, 1142, 1143, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 343,
	974, 346, 347, 350, 349, 975, 348, 1144, 218, 976,
	351, 1145, 507, 352, 508, 354, 355, 1146, 356, 357,
	358, 1147, 1148, 360, 361, 362, 1149, 1150, 363, 364,
	509, 977, 365, 978, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 1151, 374, 375, 511, 376, 512,
	377, 1152, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 1153, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 1154,
	401, 979, 402, 403, 404, 405, 514, 406, 0, 407,
	411, 412, 413, 414, 415, 416, 417, 1155, 423, 424,
	418, 420, 421, 422, 419, 425, 426, 427, 1156, 428,
	408, 409, 429, 430, 980, 431, 432, 515, 433, 434,
	1157, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 1158, 446, 447, 445, 1159, 448, 449,
	450, 451, 452, 280, 453, 1160, 454, 517, 518, 519,
	520, 1161, 461, 1162, 455, 456, 521, 457, 522, 1163,
	458, 459, 460, 0, 462, 463, 1164, 1165, 464, 465,
	466, 467, 468, 470, 1166, 471, 1167, 469, 472, 473,
	474, 523, 524, 525, 1168, 476, 475, 526, 1169, 1170,
	1171, 1172, 477, 478, 527, 479, 480, 481, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2148, 0, 219, 220, 221, 222, 223,
	1095, 224, 1096, 1097, 1098, 0, 1099, 482, 1100, 1101,
	1102, 1103, 225, 227, 226, 228, 229, 483, 484, 230,
	485, 233, 231, 232, 486, 1104, 234, 235, 236, 237,
	238, 239, 1105, 1106, 240, 487, 488, 489, 1107, 241,
	490, 1108, 1093, 1109, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 1110, 252, 0, 253, 254,
	255, 1111, 256, 965, 257, 258, 1112, 1113, 1115, 1114,
	1116, 1117, 1118, 259, 260, 261, 262, 263, 264, 491,
	492, 1119, 265, 1120, 267, 266, 1121, 268, 1122, 1123,
	269, 270, 271, 1124, 272, 1125, 273, 274, 1126, 275,
	493, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	494, 495, 1127, 216, 1128, 0, 0, 0, 0, 286,
	287, 288, 496, 289, 290, 0, 291, 1129, 292, 1130,
	1131, 966, 293, 294, 1132, 295, 497, 1133, 498, 296,
	1134, 297, 298, 299, 300, 499, 500, 501, 353, 968,
	301, 302, 1135, 303, 304, 306, 0, 0, 217, 305,
	307, 314, 1136, 967, 308, 502, 310, 309, 311, 312,
	313, 503, 1137, 504, 1138, 315, 969, 505, 970, 316,
	317, 318, 971, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 1139, 327, 326, 1140, 328, 506, 972, 329,
	330, 973, 1141, 331, 332, 1142, 1143, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 345,
	343, 974, 346, 347, 350, 349, 975, 348, 1144, 218,
	976, 351, 1145, 507, 352, 508, 354, 355, 1146, 356,
	357, 358, 1147, 1148, 360, 361, 362, 1149, 1150, 363,
	364, 509, 977, 365, 978, 510, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 1151, 374, 375, 511, 376,
	512, 377, 1152, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 513, 386, 387, 1153, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	1154, 401, 979, 402, 403, 404, 405, 514, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 1155, 423,
	424, 418, 420, 421, 422, 419, 425, 426, 427, 1156,
	428, 408, 409, 429, 430, 980, 431, 432, 515, 433,
	434, 1157, 435, 436, 437, 438, 410, 439, 443, 444,
	440, 441, 442, 516, 1158, 446, 447, 445, 1159, 448,
	449, 450, 451, 452, 280, 453, 1160, 454, 517, 518,
	519, 520, 1161, 461, 1162, 455, 456, 521, 457, 522,
	1163, 458, 459, 460, 0, 462, 463, 1164, 1165, 464,
	465, 466, 467, 468, 470, 1166, 471, 1167, 469, 472,
	473, 474, 523, 524, 525, 1168, 476, 475, 526, 1169,
	1170, 1171, 1172, 477, 478, 527, 479, 480, 481, 1185,
	0, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 219, 220,
	221, 222, 223, 1095, 224, 1096, 1097, 1098, 0, 1099,
	482, 1100, 1101, 1102, 1103, 225, 227, 226, 228, 229,
	483, 484, 230, 485, 233, 231, 232, 486, 1104, 234,
	235, 236, 237, 238, 239, 1105, 1106, 240, 487, 488,
	489, 1107, 241, 490, 1108, 1093, 1109, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 1110, 252,
	0, 253, 254, 255, 1111, 256, 965, 257, 258, 1112,
	1113, 1115, 1114, 1116, 1117, 1118, 259, 260, 261, 262,
	263, 264, 491, 492, 1119, 265, 1120, 267, 266, 1121,
	268, 1122, 1123, 269, 270, 271, 1124, 272, 1125, 273,
	274, 1126, 275, 493, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 494, 495, 1127, 216, 1128, 0, 0,
	0, 0, 286, 287, 288, 496, 289, 290, 0, 291,
	1129, 292, 1130, 1131, 966, 293, 294, 1132, 295, 497,
	1133, 498, 296, 1134, 297, 298, 299, 300, 499, 500,
	501, 353, 968, 301, 302, 1135, 303, 304, 306, 0,
	0, 217, 305, 307, 314, 1136, 967, 308, 502, 310,
	309, 311, 312, 313, 503, 1137, 504, 1138, 315, 969,
	505, 970, 316, 317, 318, 971, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 1139, 327, 326, 1140, 328,
	506, 972, 329, 330, 973, 1141, 331, 332, 1142, 1143,
	333, 334, 335, 0, 336, 337, 339, 341, 338, 340,
	342, 344, 345, 343, 974, 346, 347, 350, 349, 975,
	348, 1144, 218, 976, 351, 1145, 507, 352, 508, 354,
	355, 1146, 356, 357, 358, 1147, 1148, 360, 361, 362,
	1149, 1150, 363, 364, 509, 977, 365, 978, 510, 366,
	359, 367, 368, 369, 370, 371, 372, 373, 1151, 374,
	375, 511, 376, 512, 377, 1152, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 513, 386, 387, 1153, 388,
	389, 390, 391, 392, 0, 394, 395, 396, 393, 397,
	398, 399, 400, 1154, 401, 979, 402, 403, 404, 405,
	514, 406, 0, 407, 411, 412, 413, 414, 415, 416,
	417, 1155, 423, 424, 418, 420, 421, 422, 419, 425,
	426, 427, 1156, 428, 408, 409, 429, 430, 980, 431,
	432, 515, 433, 434, 1157, 435, 436, 437, 438, 410,
	439, 443, 444, 440, 441, 442, 516, 1158, 446, 447,
	445, 1159, 448, 449, 450, 451, 452, 280, 453, 1160,
	454, 517, 518, 519, 520, 1161, 461, 1162, 455, 456,
	521, 457, 522, 1163, 458, 459, 460, 0, 462, 463,
	1164, 1165, 464, 465, 466, 467, 468, 470, 1166, 471,
	1167, 469, 472, 473, 474, 523, 524, 525, 1168, 476,
	475, 526, 1169, 1170, 1171, 1172, 477, 478, 527, 479,
	480, 481, 1085, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 1095, 224, 1096, 1097,
	1098, 0, 1099, 482, 1100, 1101, 1102, 1103, 225, 227,
	226, 228, 229, 483, 484, 230, 485, 233, 231, 232,
	486, 1104, 234, 235, 236, 237, 238, 239, 1105, 1106,
	240, 487, 488, 489, 1107, 241, 490, 1108, 1093, 1109,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 1110, 252, 0, 253, 254, 255, 1111, 256, 965,
	257, 258, 1112, 1113, 1115, 1114, 1116, 1117, 1118, 259,
	260, 261, 262, 263, 264, 491, 492, 1119, 265, 1120,
	267, 266, 1121, 268, 1122, 1123, 269, 270, 271, 1124,
	272, 1125, 273, 274, 1126, 275, 493, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 494, 495, 1127, 216,
	1128, 0, 0, 0, 0, 286, 287, 288, 496, 289,
	290, 0, 291, 1129, 292, 1130, 1131, 966, 293, 294,
	1132, 295, 497, 1133, 498, 296, 1134, 297, 298, 299,
	300, 499, 500, 501, 353, 968, 301, 302, 1135, 303,
	304, 306, 0, 0, 217, 305, 307, 314, 1136, 967,
	308, 502, 310, 309, 311, 312, 313, 503, 1137, 504,
	1138, 315, 969, 505, 970, 316, 317, 318, 971, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 1139, 327,
	326, 1140, 328, 506, 972, 329, 330, 973, 1141, 331,
	332, 1142, 1143, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 345, 343, 974, 346, 347,
	350, 349, 975, 348, 1144, 218, 976, 351, 1145, 507,
	352, 508, 354, 355, 1146, 356, 357, 358, 1147, 1148,
	360, 361, 362, 1149, 1150, 363, 364, 509, 977, 365,
	978, 510, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 1151, 374, 375, 511, 376, 512, 377, 1152, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 513, 386,
	387, 1153, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 1154, 401, 979, 402,
	403, 404, 405, 514, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 1155, 423, 424, 418, 420, 421,
	422, 419, 425, 426, 427, 1156, 428, 408, 409, 429,
	430, 980, 431, 432, 515, 433, 434, 1157, 435, 436,
	437, 438, 410, 439, 443, 444, 440, 441, 442, 516,
	1158, 446, 447, 445, 1159, 448, 449, 450, 451, 452,
	280, 453, 1160, 454, 517, 518, 519, 520, 1161, 461,
	1162, 455, 456, 521, 457, 522, 1163, 458, 459, 460,
	0, 462, 463, 1164, 1165, 464, 465, 466, 467, 468,
	470, 1166, 471, 1167, 469, 472, 473, 474, 523, 524,
	525, 1168, 476, 475, 526, 1169, 1170, 1171, 1172, 477,
	478, 527, 479, 480, 481, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 1095, 224, 1096,
	1097, 1098, 0, 1099, 482, 1100, 1101, 1102, 1103, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 1104, 234, 235, 236, 237, 238, 239, 1105,
	1106, 240, 487, 488, 489, 1107, 241, 490, 1108, 1093,
	1109, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 1110, 252, 0, 253, 254, 255, 1111, 256,
	965, 257, 258, 1112, 1113, 1115, 1114, 1116, 1117, 1118,
	259, 260, 261, 262, 263, 264, 491, 492, 1119, 265,
	1120, 267, 266, 1121, 268, 1122, 1123, 269, 270, 271,
	1124, 272, 1125, 273, 274, 1126, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 1127,
	216, 1128, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 1129, 292, 1130, 1131, 966, 293,
	294, 1132, 295, 497, 1133, 498, 296, 1134, 297, 298,
	299, 300, 499, 500, 501, 353, 968, 301, 302, 1135,
	303, 304, 306, 0, 0, 217, 305, 307, 314, 1136,
	967, 308, 502, 310, 309, 311, 312, 313, 503, 1137,
	504, 1138, 315, 969, 505, 970, 316, 317, 318, 971,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 1139,
	327, 326, 1140, 328, 506, 972, 329, 330, 973, 1141,
	331, 332, 1142, 1143, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 974, 346,
	347, 350, 349, 975, 348, 1144, 218, 976, 351, 1145,
	507, 352, 508, 354, 355, 1146, 356, 357, 358, 1147,
	1148, 360, 361, 362, 1149, 1150, 363, 364, 509, 977,
	365, 978, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 1151, 374, 375, 511, 376, 512, 377, 1152,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 1153, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 1154, 401, 979,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 1155, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 1156, 428, 408, 409,
	429, 430, 980, 431, 432, 515, 433, 434, 1157, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 1158, 446, 447, 445, 1159, 448, 449, 450, 451,
	452, 280, 453, 1160, 454, 517, 518, 519, 520, 1161,
	461, 1162, 455, 456, 521, 457, 522, 1163, 458, 459,
	460, 0, 462, 463, 1164, 1165, 464, 465, 466, 467,
	468, 470, 1166, 471, 1167, 469, 472, 473, 474, 523,
	524, 525, 1168, 476, 475, 526, 1169, 1170, 1171, 1172,
	477, 478, 527, 479, 480, 481, 2123, 0, 905, 863,
	864, 865, 861, 862, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	2120, 224, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 920, 899,
	931, 233, 889, 930, 929, 0, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 2121, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 893,
	343, 974, 346, 347, 350, 349, 975, 348, 849, 218,
	976, 351, 871, 960, 352, 928, 354, 355, 0, 902,
	357, 903, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 921, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 859, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 894, 895, 897, 898, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 916, 896,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 964,
	440, 441, 442, 987, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 892, 0, 454, 935, 936,
	937, 938, 0, 461, 0, 455, 456, 988, 457, 989,
	869, 458, 459, 460, 0, 462, 463, 0, 853, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 900, 472,
	473, 474, 523, 932, 982, 2119, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 2122, 0, 0, 0, 0, 0,
	0, 875, 2118, 0, 839, 873, 905, 863, 864, 865,
	861, 862, 874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 920, 899, 931, 233,
	889, 930, 929, 0, 234, 891, 890, 237, 238, 239,
	881, 955, 240, 992, 993, 489, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 934, 264, 927, 926, 852,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 925,
	271, 0, 272, 0, 273, 274, 0, 275, 858, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	870, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	924, 922, 923, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 880, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 353, 968, 301, 302,
	0, 303, 304, 901, 0, 0, 217, 305, 307, 314,
	0, 967, 308, 913, 904, 915, 917, 918, 919, 914,
	0, 906, 0, 315, 969, 959, 970, 316, 317, 318,
	971, 939, 940, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 973,
	0, 331, 332, 950, 949, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 893, 343, 974,
	346, 347, 350, 349, 975, 348, 849, 218, 976, 351,
	871, 960, 352, 928, 354, 355, 0, 902, 357, 903,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	977, 365, 978, 985, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 986, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	921, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	979, 402, 403, 404, 405, 859, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 182, 423, 424, 894,
	895, 897, 898, 419, 425, 426, 427, 953, 428, 408,
	409, 429, 430, 980, 431, 432, 916, 896, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 964, 440, 441,
	442, 987, 0, 446, 447, 445, 184, 448, 449, 450,
	451, 452, 280, 892, 0, 454, 935, 936, 937, 938,
	0, 461, 0, 455, 456, 988, 457, 989, 869, 458,
	459, 460, 0, 462, 463, 0, 853, 464, 465, 466,
	467, 468, 470, 954, 471, 0, 900, 472, 473, 474,
	1343, 932, 982, 0, 476, 475, 526, 0, 0, 0,
	176, 477, 478, 527, 479, 480, 481, 850, 177, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	846, 847, 905, 863, 864, 865, 861, 862, 874, 1552,
	1550, 0, 0, 873, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 956, 879, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 920, 899, 931, 233, 889, 930, 929, 0,
	234, 891, 890, 237, 238, 239, 881, 955, 240, 992,
	993, 489, 0, 241, 962, 0, 943, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	946, 944, 945, 952, 948, 947, 951, 259, 260, 261,
	262, 934, 264, 927, 926, 852, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 925, 271, 0, 272, 0,
	273, 274, 0, 275, 858, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 983, 984, 870, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 924, 922, 923, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	990, 0, 880, 296, 0, 297, 298, 299, 300, 957,
	958, 961, 353, 968, 301, 302, 0, 303, 304, 901,
	0, 0, 217, 305, 307, 314, 0, 967, 308, 913,
	904, 915, 917, 918, 919, 914, 0, 906, 0, 315,
	969, 959, 970, 316, 317, 318, 971, 939, 940, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 991, 972, 329, 330, 973, 0, 331, 332, 950,
	949, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 893, 343, 974, 346, 347, 350, 349,
	975, 348, 849, 218, 976, 351, 871, 960, 352, 928,
	354, 355, 0, 902, 357, 903, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 985,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 986, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 921, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 859, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 182, 423, 424, 894, 895, 897, 898, 419,
	425, 426, 427, 953, 428, 408, 409, 429, 430, 980,
	431, 432, 916, 896, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 964, 440, 441, 442, 987, 0, 446,
	447, 445, 184, 448, 449, 450, 451, 452, 280, 892,
	0, 454, 935, 936, 937, 938, 0, 461, 0, 455,
	456, 988, 457, 989, 869, 458, 459, 460, 0, 462,
	463, 0, 853, 464, 465, 466, 467, 468, 470, 954,
	471, 0, 900, 472, 473, 474, 1343, 932, 982, 0,
	476, 475, 526, 0, 0, 0, 176, 477, 478, 527,
	479, 480, 481, 850, 177, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 846, 847, 905, 863,
	864, 865, 861, 862, 874, 1552, 2591, 0, 0, 873,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 920, 899,
	931, 233, 889, 930, 929, 0, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 893,
	343, 974, 346, 347, 350, 349, 975, 348, 849, 218,
	976, 351, 871, 960, 352, 928, 354, 355, 0, 902,
	357, 903, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 921, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 859, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 182, 423,
	424, 894, 895, 897, 898, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 916, 896,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 964,
	440, 441, 442, 987, 0, 446, 447, 445, 184, 448,
	449, 450, 451, 452, 280, 892, 0, 454, 935, 936,
	937, 938, 0, 461, 0, 455, 456, 988, 457, 989,
	869, 458, 459, 460, 0, 462, 463, 0, 853, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 900, 472,
	473, 474, 1343, 932, 982, 0, 476, 475, 526, 0,
	0, 0, 176, 477, 478, 527, 479, 480, 481, 850,
	177, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 905, 863, 864, 865, 861, 862,
	874, 1552, 1550, 0, 0, 873, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 920, 899, 931, 233, 889, 930,
	929, 2217, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 489, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 2222, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 353, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 217, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 2218, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 893, 343, 974, 346, 347,
	350, 349, 975, 348, 849, 218, 976, 351, 871, 960,
	352, 928, 354, 355, 0, 902, 357, 903, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 977, 365,
	978, 985, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 986, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 921, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 979, 402,
	403, 404, 405, 859, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 894, 895, 897,
	898, 419, 425, 426, 427, 953, 428, 408, 409, 429,
	430, 980, 431, 432, 916, 896, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 964, 440, 441, 442, 987,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 892, 0, 454, 935, 936, 937, 938, 0, 461,
	2219, 455, 456, 988, 457, 989, 869, 458, 459, 460,
	0, 462, 463, 0, 853, 464, 465, 466, 467, 468,
	470, 954, 471, 0, 900, 472, 473, 474, 523, 932,
	982, 0, 476, 475, 526, 0, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	0, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	2176, 873, 905, 863, 864, 865, 861, 862, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 956, 879, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 920, 899, 931, 233, 889, 930, 929, 0,
	234, 891, 890, 237, 238, 239, 881, 955, 240, 992,
	993, 489, 0, 241, 962, 0, 943, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	946, 944, 945, 952, 948, 947, 951, 259, 260, 261,
	262, 934, 264, 927, 926, 852, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 925, 271, 0, 272, 0,
	273, 274, 0, 275, 858, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 983, 984, 870, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 924, 922, 923, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	990, 0, 880, 296, 0, 297, 298, 299, 300, 957,
	958, 961, 353, 968, 301, 302, 0, 303, 304, 901,
	0, 0, 217, 305, 307, 314, 0, 967, 308, 913,
	904, 915, 917, 918, 919, 914, 0, 906, 0, 315,
	969, 959, 970, 316, 317, 318, 971, 939, 940, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 991, 972, 329, 330, 973, 0, 331, 332, 950,
	949, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 893, 343, 974, 346, 347, 350, 349,
	975, 348, 849, 218, 976, 351, 871, 960, 352, 928,
	354, 355, 0, 902, 357, 903, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 985,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 986, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 921, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 859, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 894, 895, 897, 898, 419,
	425, 426, 427, 953, 428, 408, 409, 429, 430, 980,
	431, 432, 916, 896, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 964, 440, 441, 442, 987, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 892,
	0, 454, 935, 936, 937, 938, 0, 461, 0, 455,
	456, 988, 457, 989, 869, 458, 459, 460, 0, 462,
	463, 0, 853, 464, 465, 466, 467, 468, 470, 954,
	471, 0, 900, 472, 473, 474, 523, 932, 982, 0,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 850, 0, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 846, 847, 0, 0,
	0, 0, 0, 0, 0, 875, 2174, 0, 2173, 873,
	905, 863, 864, 865, 861, 862, 874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	920, 899, 931, 233, 889, 930, 929, 0, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 489,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 957, 958, 961,
	353, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	217, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 893, 343, 974, 346, 347, 350, 349, 975, 348,
	849, 218, 976, 351, 871, 960, 352, 928, 354, 355,
	0, 902, 357, 903, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 977, 365, 978, 985, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	986, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 921, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 979, 402, 403, 404, 405, 859,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 894, 895, 897, 898, 419, 425, 426,
	427, 953, 428, 408, 409, 429, 430, 980, 431, 432,
	916, 896, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 964, 440, 441, 442, 987, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 892, 0, 454,
	935, 936, 937, 938, 0, 461, 0, 455, 456, 988,
	457, 989, 869, 458, 459, 460, 0, 462, 463, 0,
	853, 464, 465, 466, 467, 468, 470, 954, 471, 0,
	900, 472, 473, 474, 523, 932, 982, 0, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 850, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 846, 847, 0, 0, 0, 0,
	0, 0, 0, 875, 2171, 0, 2170, 873, 905, 863,
	864, 865, 861, 862, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 920, 899,
	931, 233, 889, 930, 929, 0, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 893,
	343, 974, 346, 347, 350, 349, 975, 348, 849, 218,
	976, 351, 871, 960, 352, 928, 354, 355, 0, 902,
	357, 903, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 921, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 859, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 894, 895, 897, 898, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 916, 896,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 964,
	440, 441, 442, 987, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 892, 0, 454, 935, 936,
	937, 938, 0, 461, 0, 455, 456, 988, 457, 989,
	869, 458, 459, 460, 0, 462, 463, 0, 853, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 900, 472,
	473, 474, 523, 932, 982, 0, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 0, 0, 0, 0, 0, 0,
	0, 875, 2168, 0, 2167, 873, 905, 863, 864, 865,
	861, 862, 874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 920, 899, 931, 233,
	889, 930, 929, 0, 234, 891, 890, 237, 238, 239,
	881, 955, 240, 992, 993, 489, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 934, 264, 927, 926, 852,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 925,
	271, 0, 272, 0, 273, 274, 0, 275, 858, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	870, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	924, 922, 923, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 880, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 353, 968, 301, 302,
	0, 303, 304, 901, 0, 0, 217, 305, 307, 314,
	0, 967, 308, 913, 904, 915, 917, 918, 919, 914,
	0, 906, 0, 315, 969, 959, 970, 316, 317, 318,
	971, 939, 940, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 973,
	0, 331, 332, 950, 949, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 893, 343, 974,
	346, 347, 350, 349, 975, 348, 849, 218, 976, 351,
	871, 960, 352, 928, 354, 355, 0, 902, 357, 903,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	977, 365, 978, 985, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 986, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	921, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	979, 402, 403, 404, 405, 859, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 894,
	895, 897, 898, 419, 425, 426, 427, 953, 428, 408,
	409, 429, 430, 980, 431, 432, 916, 896, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 964, 440, 441,
	442, 987, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 892, 0, 454, 935, 936, 937, 938,
	0, 461, 0, 455, 456, 988, 457, 989, 869, 458,
	459, 460, 0, 462, 463, 0, 853, 464, 465, 466,
	467, 468, 470, 954, 471, 0, 900, 472, 473, 474,
	523, 932, 982, 0, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 850, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	846, 847, 0, 0, 0, 0, 0, 0, 0, 875,
	2165, 0, 1412, 873, 905, 863, 864, 865, 861, 862,
	874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 920, 899, 931, 233, 889, 930,
	929, 0, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 489, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 353, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 217, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 893, 343, 974, 346, 347,
	350, 349, 975, 348, 849, 218, 976, 351, 871, 960,
	352, 928, 354, 355, 0, 902, 357, 903, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 977, 365,
	978, 985, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 986, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 921, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 979, 402,
	403, 404, 405, 859, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 894, 895, 897,
	898, 419, 425, 426, 427, 953, 428, 408, 409, 429,
	430, 980, 431, 432, 916, 896, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 964, 440, 441, 442, 987,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 892, 0, 454, 935, 936, 937, 938, 0, 461,
	0, 455, 456, 988, 457, 989, 869, 458, 459, 460,
	0, 462, 463, 0, 853, 464, 465, 466, 467, 468,
	470, 954, 471, 0, 900, 472, 473, 474, 523, 932,
	982, 0, 476, 475, 526, 1411, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	0, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	842, 873, 905, 863, 864, 865, 861, 862, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 956, 879, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 920, 899, 931, 233, 889, 930, 929, 0,
	234, 891, 890, 237, 238, 239, 881, 955, 240, 992,
	993, 489, 0, 241, 962, 0, 943, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	946, 944, 945, 952, 948, 947, 951, 259, 260, 261,
	262, 934, 264, 927, 926, 852, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 925, 271, 0, 272, 0,
	273, 274, 0, 275, 858, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 983, 984, 870, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 924, 922, 923, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	990, 0, 880, 296, 0, 297, 298, 299, 300, 957,
	958, 961, 353, 968, 301, 302, 0, 303, 304, 901,
	0, 0, 217, 305, 307, 314, 0, 967, 308, 913,
	904, 915, 917, 918, 919, 914, 0, 906, 0, 315,
	969, 959, 970, 316, 317, 318, 971, 939, 940, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 991, 972, 329, 330, 973, 0, 331, 332, 950,
	949, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 893, 343, 974, 346, 347, 350, 349,
	975, 348, 849, 218, 976, 351, 871, 960, 352, 928,
	354, 355, 0, 902, 357, 903, 854, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 985,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 986, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 921, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 859, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 894, 895, 897, 898, 419,
	425, 426, 427, 953, 428, 408, 409, 429, 430, 980,
	431, 432, 916, 896, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 964, 440, 441, 442, 987, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 892,
	0, 454, 935, 936, 937, 938, 0, 461, 0, 455,
	456, 988, 457, 989, 869, 458, 459, 460, 0, 462,
	463, 0, 853, 464, 465, 466, 467, 468, 470, 954,
	471, 0, 900, 472, 473, 474, 523, 932, 982, 0,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 850, 0, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 846, 847, 905, 863,
	864, 865, 861, 862, 874, 875, 0, 0, 0, 873,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 920, 899,
	931, 233, 889, 930, 929, 0, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 3615,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 893,
	343, 974, 346, 347, 350, 349, 975, 348, 849, 218,
	976, 351, 871, 960, 352, 928, 354, 355, 0, 902,
	357, 903, 854, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 921, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 859, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 894, 895, 897, 898, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 916, 896,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 964,
	440, 441, 442, 987, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 892, 0, 454, 935, 936,
	937, 938, 0, 461, 0, 455, 456, 988, 457, 989,
	869, 458, 459, 460, 0, 462, 463, 0, 853, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 900, 472,
	473, 474, 523, 932, 982, 0, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 905, 863, 864, 865, 861, 862,
	874, 875, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 920, 899, 931, 233, 889, 930,
	929, 0, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 489, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 3451, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 353, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 217, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 893, 343, 974, 346, 347,
	350, 349, 975, 348, 849, 218, 976, 351, 871, 960,
	352, 928, 354, 355, 0, 902, 357, 903, 854, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 977, 365,
	978, 985, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 986, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 921, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 979, 402,
	403, 404, 405, 859, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 894, 895, 897,
	898, 419, 425, 426, 427, 953, 428, 408, 409, 429,
	430, 980, 431, 432, 916, 896, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 964, 440, 441, 442, 987,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 892, 0, 454, 935, 936, 937, 938, 0, 461,
	0, 455, 456, 988, 457, 989, 869, 458, 459, 460,
	0, 462, 463, 0, 853, 464, 465, 466, 467, 468,
	470, 954, 471, 0, 900, 472, 473, 474, 523, 932,
	982, 0, 476, 475, 526, 0, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	905, 863, 864, 865, 861, 862, 874, 875, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	920, 899, 931, 233, 889, 930, 929, 0, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 489,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 957, 958, 961,
	353, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	217, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 893, 343, 974, 346, 347, 350, 349, 975, 348,
	849, 3169, 976, 351, 871, 960, 352, 928, 354, 355,
	0, 902, 357, 903, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 977, 365, 978, 985, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	986, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 921, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 979, 402, 403, 404, 405, 859,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 894, 895, 897, 898, 419, 425, 426,
	427, 953, 428, 408, 409, 429, 430, 980, 431, 432,
	916, 896, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 964, 440, 441, 442, 987, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 892, 0, 454,
	935, 936, 937, 938, 0, 461, 0, 455, 456, 988,
	457, 989, 869, 458, 459, 460, 0, 462, 463, 0,
	853, 464, 465, 466, 467, 468, 470, 954, 471, 0,
	900, 472, 473, 474, 523, 932, 982, 0, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 850, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 846, 847, 1616, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 0, 873, 905, 863,
	864, 865, 861, 862, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 920, 899,
	931, 233, 889, 930, 929, 0, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 893,
	343, 974, 346, 347, 350, 349, 975, 348, 849, 218,
	976, 351, 871, 960, 352, 928, 354, 355, 0, 902,
	357, 903, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 921, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 859, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 894, 895, 897, 898, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 916, 896,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 964,
	440, 441, 442, 987, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 892, 0, 454, 935, 936,
	937, 938, 0, 461, 0, 455, 456, 988, 457, 989,
	869, 458, 459, 460, 0, 462, 463, 0, 853, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 900, 472,
	473, 474, 523, 932, 982, 2971, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 905, 863, 864, 865, 861, 862,
	874, 875, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 920, 899, 931, 233, 889, 930,
	929, 0, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 489, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 353, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 2037, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 893, 343, 974, 346, 347,
	350, 349, 975, 348, 849, 218, 976, 351, 871, 960,
	352, 928, 354, 355, 0, 902, 357, 903, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 977, 365,
	978, 985, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 986, 376, 512, 377, 2036, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 921, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 979, 402,
	403, 404, 405, 859, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 894, 895, 897,
	898, 419, 425, 426, 427, 953, 428, 408, 409, 429,
	430, 980, 431, 432, 916, 896, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 964, 440, 441, 442, 987,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 892, 0, 454, 935, 936, 937, 938, 0, 461,
	0, 455, 456, 988, 457, 989, 869, 458, 459, 460,
	0, 462, 463, 0, 853, 464, 465, 466, 467, 468,
	470, 954, 471, 0, 900, 472, 473, 474, 523, 932,
	982, 0, 476, 475, 526, 0, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	905, 863, 864, 865, 861, 862, 874, 875, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	920, 899, 931, 233, 889, 930, 929, 0, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 489,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 957, 958, 961,
	353, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	217, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 893, 343, 974, 346, 347, 350, 349, 975, 348,
	849, 218, 976, 351, 871, 960, 352, 928, 354, 355,
	0, 902, 357, 903, 854, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 977, 365, 978, 985, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	986, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 921, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 979, 402, 403, 404, 405, 859,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 894, 895, 897, 898, 419, 425, 426,
	427, 953, 428, 408, 409, 429, 430, 980, 431, 432,
	916, 896, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 964, 440, 441, 442, 987, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 892, 0, 454,
	935, 936, 937, 938, 0, 461, 0, 455, 456, 988,
	457, 989, 869, 458, 459, 460, 0, 462, 463, 0,
	853, 464, 465, 466, 467, 468, 470, 954, 471, 0,
	900, 472, 473, 474, 523, 932, 982, 0, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 850, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 846, 847, 905, 863, 864, 865,
	861, 862, 874, 875, 0, 0, 0, 873, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 920, 899, 931, 233,
	889, 930, 929, 0, 234, 891, 890, 237, 238, 239,
	881, 955, 240, 992, 993, 489, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 934, 264, 927, 926, 852,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 925,
	271, 0, 272, 0, 273, 274, 0, 275, 858, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	870, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	924, 922, 923, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 880, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 353, 968, 301, 302,
	0, 303, 304, 901, 0, 0, 217, 305, 307, 314,
	0, 967, 308, 913, 904, 915, 917, 918, 919, 914,
	0, 906, 0, 315, 969, 959, 970, 316, 317, 318,
	971, 939, 940, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 973,
	0, 331, 332, 950, 949, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 893, 343, 974,
	346, 347, 350, 349, 975, 348, 849, 218, 976, 351,
	871, 960, 352, 928, 354, 355, 0, 902, 357, 903,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	977, 365, 978, 985, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 986, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	921, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	979, 402, 403, 404, 405, 859, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 894,
	895, 897, 898, 419, 425, 426, 427, 953, 428, 408,
	409, 429, 430, 980, 431, 432, 916, 896, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 964, 440, 441,
	442, 987, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 892, 0, 454, 935, 936, 937, 938,
	0, 461, 0, 455, 456, 988, 457, 989, 869, 458,
	459, 460, 0, 462, 463, 0, 853, 464, 465, 466,
	467, 468, 470, 954, 471, 0, 900, 472, 473, 474,
	523, 932, 982, 0, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 850, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	846, 847, 1616, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 873, 905, 863, 864, 865, 861, 862,
	874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 920, 899, 931, 233, 889, 930,
	929, 0, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 489, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 2222, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 353, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 217, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 893, 343, 974, 346, 347,
	350, 349, 975, 348, 849, 218, 976, 351, 871, 960,
	352, 928, 354, 355, 0, 902, 357, 903, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 977, 365,
	978, 985, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 986, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 921, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 979, 402,
	403, 404, 405, 859, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 894, 895, 897,
	898, 419, 425, 426, 427, 953, 428, 408, 409, 429,
	430, 980, 431, 432, 916, 896, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 964, 440, 441, 442, 987,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 892, 0, 454, 935, 936, 937, 938, 0, 461,
	0, 455, 456, 988, 457, 989, 869, 458, 459, 460,
	0, 462, 463, 0, 853, 464, 465, 466, 467, 468,
	470, 954, 471, 0, 900, 472, 473, 474, 523, 932,
	982, 0, 476, 475, 526, 0, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	905, 863, 864, 865, 861, 862, 874, 875, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	920, 899, 931, 233, 889, 930, 929, 0, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 489,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 957, 958, 961,
	353, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	217, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 893, 343, 974, 346, 347, 350, 349, 975, 348,
	849, 218, 976, 351, 871, 960, 352, 928, 354, 355,
	0, 902, 357, 903, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 977, 365, 978, 985, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	986, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 921, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 979, 402, 403, 404, 405, 859,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 894, 895, 897, 898, 419, 425, 426,
	427, 953, 428, 408, 409, 429, 430, 980, 431, 432,
	916, 896, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 964, 440, 441, 442, 987, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 892, 0, 454,
	935, 936, 937, 938, 0, 461, 0, 455, 456, 988,
	457, 989, 869, 458, 459, 460, 0, 462, 463, 0,
	853, 464, 465, 466, 467, 468, 470, 954, 471, 0,
	900, 472, 473, 474, 523, 932, 982, 0, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 850, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 846, 847, 0, 0, 0, 0,
	0, 0, 0, 875, 1550, 0, 2227, 873, 905, 863,
	864, 865, 861, 862, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 920, 899,
	931, 233, 889, 930, 929, 0, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 893,
	343, 974, 346, 347, 350, 349, 975, 348, 849, 218,
	976, 351, 871, 960, 352, 928, 354, 355, 0, 902,
	357, 903, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 921, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 859, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 894, 895, 897, 898, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 916, 896,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 964,
	440, 441, 442, 987, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 892, 0, 454, 935, 936,
	937, 938, 0, 461, 0, 455, 456, 988, 457, 989,
	869, 458, 459, 460, 0, 462, 463, 0, 853, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 900, 472,
	473, 474, 523, 932, 982, 0, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 0, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 2225, 873, 905, 863, 864, 865,
	861, 862, 874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 920, 899, 931, 233,
	889, 930, 929, 0, 234, 891, 890, 237, 238, 239,
	881, 955, 240, 992, 993, 489, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 934, 264, 927, 926, 852,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 925,
	271, 0, 272, 0, 273, 274, 0, 275, 858, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	870, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	924, 922, 923, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 880, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 353, 968, 301, 302,
	0, 303, 304, 901, 0, 0, 217, 305, 307, 314,
	0, 967, 308, 913, 904, 915, 917, 918, 919, 914,
	0, 906, 0, 315, 969, 959, 970, 316, 317, 318,
	971, 939, 940, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 973,
	0, 331, 332, 950, 949, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 893, 343, 974,
	346, 347, 350, 349, 975, 348, 849, 218, 976, 351,
	871, 960, 352, 928, 354, 355, 0, 902, 357, 903,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	977, 365, 978, 985, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 986, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	921, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	979, 402, 403, 404, 405, 859, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 894,
	895, 897, 898, 419, 425, 426, 427, 953, 428, 408,
	409, 429, 430, 980, 431, 432, 916, 896, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 964, 440, 441,
	442, 987, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 892, 0, 454, 935, 936, 937, 938,
	0, 461, 0, 455, 456, 988, 457, 989, 869, 458,
	459, 460, 0, 462, 463, 0, 853, 464, 465, 466,
	467, 468, 470, 954, 471, 0, 900, 472, 473, 474,
	523, 932, 982, 0, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 850, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	846, 847, 0, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 2213, 873, 905, 863, 864, 865, 861, 862,
	874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 920, 899, 931, 233, 889, 930,
	929, 0, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 489, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 353, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 217, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 893, 343, 974, 346, 347,
	350, 349, 975, 348, 849, 218, 976, 351, 871, 960,
	352, 928, 354, 355, 0, 902, 357, 903, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 977, 365,
	978, 985, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 986, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 921, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 979, 402,
	403, 404, 405, 859, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 894, 895, 897,
	898, 419, 425, 426, 427, 953, 428, 408, 409, 429,
	430, 980, 431, 432, 916, 896, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 964, 440, 441, 442, 987,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 892, 0, 454, 935, 936, 937, 938, 0, 461,
	0, 455, 456, 988, 457, 989, 869, 458, 459, 460,
	0, 462, 463, 0, 853, 464, 465, 466, 467, 468,
	470, 954, 471, 0, 900, 472, 473, 474, 523, 932,
	982, 0, 476, 475, 526, 0, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	0, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	2202, 873, 905, 863, 864, 865, 861, 862, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 956, 879, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 920, 899, 931, 233, 889, 930, 929, 0,
	234, 891, 890, 237, 238, 239, 881, 955, 240, 992,
	993, 489, 0, 241, 962, 0, 943, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	946, 944, 945, 952, 948, 947, 951, 259, 260, 261,
	262, 934, 264, 927, 926, 852, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 925, 271, 0, 272, 0,
	273, 274, 0, 275, 858, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 983, 984, 870, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 924, 922, 923, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	990, 0, 880, 296, 0, 297, 298, 299, 300, 957,
	958, 961, 353, 968, 301, 302, 0, 303, 304, 901,
	0, 0, 217, 305, 307, 314, 0, 967, 308, 913,
	904, 915, 917, 918, 919, 914, 0, 906, 0, 315,
	969, 959, 970, 316, 317, 318, 971, 939, 940, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 991, 972, 329, 330, 973, 0, 331, 332, 950,
	949, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 893, 343, 974, 346, 347, 350, 349,
	975, 348, 849, 218, 976, 351, 871, 960, 352, 928,
	354, 355, 0, 902, 357, 903, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 985,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 986, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 921, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 859, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 894, 895, 897, 898, 419,
	425, 426, 427, 953, 428, 408, 409, 429, 430, 980,
	431, 432, 916, 896, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 964, 440, 441, 442, 987, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 892,
	0, 454, 935, 936, 937, 938, 0, 461, 0, 455,
	456, 988, 457, 989, 869, 458, 459, 460, 0, 462,
	463, 0, 853, 464, 465, 466, 467, 468, 470, 954,
	471, 0, 900, 472, 473, 474, 523, 932, 982, 0,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 850, 0, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 846, 847, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 2200, 873,
	2191, 2198, 864, 865, 861, 862, 874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	920, 899, 931, 233, 889, 930, 929, 0, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 489,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	2194, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 2195, 957, 958, 961,
	353, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	217, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 2196, 2193,
	344, 893, 343, 974, 346, 347, 350, 349, 975, 348,
	849, 218, 976, 351, 871, 960, 352, 928, 354, 355,
	0, 902, 357, 903, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 977, 365, 978, 985, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	986, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 921, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 979, 402, 403, 404, 405, 859,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 2197,
	0, 423, 424, 894, 895, 897, 898, 419, 425, 426,
	427, 953, 428, 408, 409, 429, 430, 980, 431, 432,
	916, 896, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 964, 440, 441, 442, 987, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 892, 0, 454,
	935, 936, 937, 938, 0, 461, 0, 455, 456, 988,
	457, 989, 869, 458, 459, 460, 0, 462, 463, 0,
	853, 464, 465, 466, 467, 468, 470, 954, 471, 0,
	900, 472, 473, 474, 523, 932, 982, 0, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 2192,
	481, 850, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 846, 847, 0, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 2188, 873, 2191, 2198,
	864, 865, 861, 862, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 920, 899,
	931, 233, 889, 930, 929, 0, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 2194, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 2195, 957, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 2196, 2193, 344, 893,
	343, 974, 346, 347, 350, 349, 975, 348, 849, 218,
	976, 351, 871, 960, 352, 928, 354, 355, 0, 902,
	357, 903, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 921, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 859, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 2197, 0, 423,
	424, 894, 895, 897, 898, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 916, 896,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 964,
	440, 441, 442, 987, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 892, 0, 454, 935, 936,
	937, 938, 0, 461, 0, 455, 456, 988, 457, 989,
	869, 458, 459, 460, 0, 462, 463, 0, 853, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 900, 472,
	473, 474, 523, 932, 982, 0, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 2192, 481, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 905, 863, 864, 865, 861, 862,
	874, 875, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 920, 899, 931, 233, 889, 930,
	929, 0, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 489, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 353, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 217, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 893, 343, 974, 346, 347,
	350, 349, 975, 348, 849, 218, 976, 351, 871, 960,
	352, 928, 354, 355, 0, 902, 357, 903, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 977, 365,
	978, 985, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 986, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 921, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 979, 402,
	403, 404, 405, 859, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 894, 895, 897,
	898, 419, 425, 426, 427, 953, 428, 408, 409, 429,
	430, 980, 431, 432, 916, 896, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 964, 440, 441, 442, 987,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 892, 0, 454, 935, 936, 937, 938, 0, 461,
	0, 455, 456, 988, 457, 989, 869, 458, 459, 460,
	0, 462, 463, 0, 853, 464, 465, 466, 467, 468,
	470, 954, 471, 0, 900, 472, 473, 474, 523, 932,
	982, 0, 476, 475, 526, 0, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	0, 0, 0, 0, 0, 1558, 0, 875, 0, 0,
	0, 873, 905, 863, 864, 865, 861, 862, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 2016, 224, 0, 0, 0, 0,
	0, 956, 879, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 920, 899, 931, 233, 889, 930, 929, 0,
	234, 891, 890, 237, 238, 239, 881, 955, 240, 992,
	993, 489, 0, 241, 962, 0, 943, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	946, 944, 945, 952, 948, 947, 951, 259, 260, 261,
	262, 934, 264, 927, 926, 852, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 925, 271, 0, 272, 0,
	273, 274, 0, 275, 858, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 983, 984, 870, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 924, 922, 923, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	990, 0, 880, 296, 0, 297, 298, 299, 300, 957,
	958, 961, 353, 968, 301, 302, 0, 303, 304, 901,
	0, 0, 217, 305, 307, 314, 0, 967, 308, 913,
	904, 915, 917, 918, 919, 914, 0, 906, 0, 315,
	969, 959, 970, 316, 317, 318, 971, 939, 940, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 991, 972, 329, 330, 973, 0, 331, 332, 950,
	949, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 893, 343, 974, 346, 347, 350, 349,
	975, 348, 849, 218, 976, 351, 871, 960, 352, 928,
	354, 355, 0, 902, 357, 903, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 985,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 986, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 921, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 859, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 894, 895, 897, 898, 419,
	425, 426, 427, 953, 428, 408, 409, 429, 430, 980,
	431, 432, 916, 896, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 964, 440, 441, 442, 987, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 892,
	0, 454, 935, 936, 937, 938, 0, 461, 0, 455,
	456, 988, 457, 989, 869, 458, 459, 460, 0, 462,
	463, 0, 853, 464, 465, 466, 467, 468, 470, 954,
	471, 0, 900, 472, 473, 474, 523, 932, 982, 0,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 850, 0, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 846, 847, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 1231, 873,
	905, 863, 864, 865, 861, 862, 874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	920, 899, 931, 233, 889, 930, 929, 0, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 489,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 1230, 958, 961,
	353, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	217, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 893, 343, 974, 346, 347, 350, 349, 975, 348,
	849, 218, 976, 351, 871, 960, 352, 928, 354, 355,
	0, 902, 357, 903, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 977, 365, 978, 985, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	986, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 921, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 979, 402, 403, 404, 405, 859,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 894, 895, 897, 898, 419, 425, 426,
	427, 953, 428, 408, 409, 429, 430, 980, 431, 432,
	916, 896, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 964, 440, 441, 442, 987, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 892, 0, 454,
	935, 936, 937, 938, 0, 461, 0, 455, 456, 988,
	457, 989, 869, 458, 459, 460, 0, 462, 463, 0,
	853, 464, 465, 466, 467, 468, 470, 954, 471, 0,
	900, 472, 473, 474, 523, 932, 982, 0, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 850, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 846, 847, 0, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 1225, 873, 905, 863,
	864, 865, 861, 862, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 920, 899,
	931, 233, 889, 930, 929, 0, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 1224, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 893,
	343, 974, 346, 347, 350, 349, 975, 348, 849, 218,
	976, 351, 871, 960, 352, 928, 354, 355, 0, 902,
	357, 903, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 921, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 859, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 894, 895, 897, 898, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 916, 896,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 964,
	440, 441, 442, 987, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 892, 0, 454, 935, 936,
	937, 938, 0, 461, 0, 455, 456, 988, 457, 989,
	869, 458, 459, 460, 0, 462, 463, 0, 853, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 900, 472,
	473, 474, 523, 932, 982, 0, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 0, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 1220, 873, 905, 863, 864, 865,
	861, 862, 874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 920, 899, 931, 233,
	889, 930, 929, 0, 234, 891, 890, 237, 238, 239,
	881, 955, 240, 992, 993, 489, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 934, 264, 927, 926, 852,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 925,
	271, 0, 272, 0, 273, 274, 0, 275, 858, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	870, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	924, 922, 923, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 880, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 353, 968, 301, 302,
	0, 303, 304, 901, 0, 0, 217, 305, 307, 314,
	0, 967, 308, 913, 904, 915, 917, 918, 919, 914,
	0, 906, 0, 315, 969, 959, 970, 316, 317, 318,
	971, 939, 940, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 973,
	0, 331, 332, 950, 949, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 893, 343, 974,
	346, 347, 350, 349, 975, 348, 849, 218, 976, 351,
	871, 960, 352, 928, 354, 355, 0, 902, 357, 903,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	977, 365, 978, 985, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 986, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	921, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	979, 402, 403, 404, 405, 859, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 894,
	895, 897, 898, 419, 425, 426, 427, 953, 428, 408,
	409, 429, 430, 980, 431, 432, 916, 896, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 964, 440, 441,
	442, 987, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 892, 0, 454, 935, 936, 937, 938,
	0, 461, 0, 455, 456, 988, 457, 989, 869, 458,
	459, 460, 0, 462, 463, 0, 853, 464, 465, 466,
	467, 468, 470, 954, 471, 0, 900, 472, 473, 474,
	523, 932, 982, 0, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 850, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	846, 847, 905, 863, 864, 865, 861, 862, 874, 875,
	0, 0, 0, 873, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 956, 879, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 920, 899, 931, 233, 889, 930, 929, 0,
	234, 891, 890, 237, 238, 239, 881, 955, 240, 992,
	993, 489, 0, 241, 962, 0, 943, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	946, 944, 945, 952, 948, 947, 951, 259, 260, 261,
	262, 934, 264, 927, 926, 852, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 925, 271, 0, 272, 0,
	273, 274, 0, 275, 858, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 983, 984, 870, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 924, 922, 923, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	990, 0, 880, 296, 0, 297, 298, 299, 300, 957,
	958, 961, 353, 968, 301, 302, 0, 303, 304, 901,
	0, 0, 217, 305, 307, 314, 0, 967, 308, 913,
	904, 915, 917, 918, 919, 914, 0, 906, 0, 315,
	969, 959, 970, 316, 317, 318, 971, 939, 940, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 991, 972, 329, 330, 973, 0, 331, 332, 950,
	949, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 893, 343, 974, 346, 347, 350, 349,
	975, 348, 849, 218, 976, 351, 871, 960, 352, 928,
	354, 355, 0, 902, 357, 903, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 985,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 986, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 921, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 859, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 894, 895, 897, 898, 419,
	425, 426, 427, 953, 428, 408, 409, 429, 430, 980,
	431, 432, 916, 896, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 964, 440, 441, 442, 987, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 892,
	0, 454, 935, 936, 937, 938, 0, 461, 0, 455,
	456, 988, 457, 989, 869, 458, 459, 460, 0, 462,
	463, 0, 853, 464, 465, 466, 467, 468, 470, 954,
	471, 0, 900, 472, 473, 474, 523, 932, 982, 0,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 850, 0, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 846, 847, 905, 863,
	864, 865, 861, 862, 874, 875, 0, 0, 0, 873,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 920, 899,
	931, 233, 889, 930, 929, 0, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 3645, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 852, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 893,
	343, 974, 346, 347, 350, 349, 975, 348, 849, 218,
	976, 351, 871, 960, 352, 928, 354, 355, 0, 902,
	357, 903, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 921, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 859, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 894, 895, 897, 898, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 916, 896,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 964,
	440, 441, 442, 987, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 892, 0, 454, 935, 936,
	937, 938, 0, 461, 0, 455, 456, 988, 457, 989,
	869, 458, 459, 460, 0, 3644, 463, 0, 853, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 900, 472,
	473, 474, 523, 932, 982, 0, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 850,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 846, 847, 905, 863, 864, 865, 861, 862,
	874, 875, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 225, 227,
	226, 228, 229, 3643, 920, 899, 931, 233, 889, 930,
	929, 0, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 489, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 3645, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 852, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 353, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 217, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 893, 343, 974, 346, 347,
	350, 349, 975, 348, 849, 218, 976, 351, 871, 960,
	352, 928, 354, 355, 0, 902, 357, 903, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 977, 365,
	978, 985, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 986, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 921, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 979, 402,
	403, 404, 405, 859, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 894, 895, 897,
	898, 419, 425, 426, 427, 953, 428, 408, 409, 429,
	430, 980, 431, 432, 916, 896, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 964, 440, 441, 442, 987,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 892, 0, 454, 935, 936, 937, 938, 0, 461,
	0, 455, 456, 988, 457, 989, 869, 458, 459, 460,
	0, 3644, 463, 0, 853, 464, 465, 466, 467, 468,
	470, 954, 471, 0, 900, 472, 473, 474, 523, 932,
	982, 0, 476, 475, 526, 0, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 850, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 846, 847,
	905, 863, 864, 865, 2558, 2559, 874, 875, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 956,
	879, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	920, 899, 931, 233, 889, 930, 929, 0, 234, 891,
	890, 237, 238, 239, 881, 955, 240, 992, 993, 489,
	0, 241, 962, 0, 943, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 946, 944,
	945, 952, 948, 947, 951, 259, 260, 261, 262, 934,
	264, 927, 926, 852, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 925, 271, 0, 272, 0, 273, 274,
	0, 275, 858, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 983, 984, 870, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 924, 922, 923, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 990, 0,
	880, 296, 0, 297, 298, 299, 300, 957, 958, 961,
	353, 968, 301, 302, 0, 303, 304, 901, 0, 0,
	217, 305, 307, 314, 0, 967, 308, 913, 904, 915,
	917, 918, 919, 914, 0, 906, 0, 315, 969, 959,
	970, 316, 317, 318, 971, 939, 940, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 991,
	972, 329, 330, 973, 0, 331, 332, 950, 949, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 893, 343, 974, 346, 347, 350, 349, 975, 348,
	849, 218, 976, 351, 871, 960, 352, 928, 354, 355,
	0, 902, 357, 903, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 977, 365, 978, 985, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	986, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 921, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 979, 402, 403, 404, 405, 859,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 894, 895, 897, 898, 419, 425, 426,
	427, 953, 428, 408, 409, 429, 430, 980, 431, 432,
	916, 896, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 964, 440, 441, 442, 987, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 892, 0, 454,
	935, 936, 937, 938, 0, 461, 0, 455, 456, 988,
	457, 989, 869, 458, 459, 460, 0, 462, 463, 0,
	853, 464, 465, 466, 467, 468, 470, 954, 471, 0,
	900, 472, 473, 474, 523, 932, 982, 0, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 850, 0, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 846, 847, 905, 863, 864, 865,
	2556, 2557, 874, 875, 0, 0, 0, 873, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 956, 879, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 920, 899, 931, 233,
	889, 930, 929, 0, 234, 891, 890, 237, 238, 239,
	881, 955, 240, 992, 993, 489, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 934, 264, 927, 926, 852,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 925,
	271, 0, 272, 0, 273, 274, 0, 275, 858, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	870, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	924, 922, 923, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 880, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 353, 968, 301, 302,
	0, 303, 304, 901, 0, 0, 217, 305, 307, 314,
	0, 967, 308, 913, 904, 915, 917, 918, 919, 914,
	0, 906, 0, 315, 969, 959, 970, 316, 317, 318,
	971, 939, 940, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 973,
	0, 331, 332, 950, 949, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 893, 343, 974,
	346, 347, 350, 349, 975, 348, 849, 218, 976, 351,
	871, 960, 352, 928, 354, 355, 0, 902, 357, 903,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	977, 365, 978, 985, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 986, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	921, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	979, 402, 403, 404, 405, 859, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 894,
	895, 897, 898, 419, 425, 426, 427, 953, 428, 408,
	409, 429, 430, 980, 431, 432, 916, 896, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 964, 440, 441,
	442, 987, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 892, 0, 454, 935, 936, 937, 938,
	0, 461, 0, 455, 456, 988, 457, 989, 869, 458,
	459, 460, 0, 462, 463, 0, 853, 464, 465, 466,
	467, 468, 470, 954, 471, 0, 900, 472, 473, 474,
	523, 932, 982, 0, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 850, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	846, 847, 905, 863, 864, 865, 861, 862, 874, 875,
	0, 0, 0, 873, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 956, 879, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 920, 899, 931, 233, 889, 930, 929, 0,
	234, 891, 890, 237, 238, 239, 881, 955, 240, 992,
	993, 489, 0, 241, 962, 0, 943, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	946, 944, 945, 952, 948, 947, 951, 259, 260, 261,
	262, 934, 264, 927, 926, 852, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 925, 271, 0, 272, 0,
	273, 274, 0, 275, 858, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 983, 984, 870, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 924, 922, 923, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	990, 0, 880, 296, 0, 297, 298, 299, 300, 957,
	958, 961, 353, 968, 301, 302, 0, 303, 304, 901,
	0, 0, 217, 305, 307, 314, 0, 967, 308, 913,
	904, 915, 917, 918, 919, 914, 0, 906, 0, 315,
	969, 959, 970, 316, 317, 318, 971, 939, 940, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 991, 972, 329, 330, 973, 0, 331, 332, 950,
	949, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 893, 343, 974, 346, 347, 350, 349,
	975, 348, 849, 218, 976, 351, 871, 960, 352, 928,
	354, 355, 0, 902, 357, 903, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 985,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 986, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 921, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 859, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 894, 895, 897, 898, 419,
	425, 426, 427, 953, 428, 408, 409, 429, 430, 980,
	431, 432, 916, 896, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 964, 440, 441, 442, 987, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 892,
	0, 454, 935, 936, 937, 938, 0, 461, 0, 455,
	456, 988, 457, 989, 869, 458, 459, 460, 0, 462,
	463, 0, 853, 464, 465, 466, 467, 468, 470, 954,
	471, 0, 900, 472, 473, 474, 523, 932, 982, 0,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 850, 0, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 2024, 2025, 905, 863,
	864, 865, 861, 862, 874, 875, 0, 0, 0, 873,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 956, 879, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 920, 899,
	931, 233, 889, 930, 929, 0, 234, 891, 890, 237,
	238, 239, 881, 955, 240, 992, 993, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 934, 264, 927,
	926, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 925, 271, 0, 272, 0, 273, 274, 0, 275,
	858, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 870, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 924, 922, 923, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 880, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 901, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 913, 904, 915, 917, 918,
	919, 914, 0, 906, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 939, 940, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 893,
	343, 974, 346, 347, 350, 349, 975, 348, 0, 218,
	976, 351, 871, 960, 352, 928, 354, 355, 0, 902,
	357, 903, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 921, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 859, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 894, 895, 897, 898, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 916, 896,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 964,
	440, 441, 442, 987, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 892, 0, 454, 935, 936,
	937, 938, 0, 461, 0, 455, 456, 988, 457, 989,
	869, 458, 459, 460, 0, 462, 463, 0, 0, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 900, 472,
	473, 474, 523, 932, 982, 0, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 0,
	0, 0, 0, 0, 0, 2210, 0, 0, 0, 0,
	0, 0, 2208, 2209, 905, 863, 864, 865, 861, 862,
	874, 875, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 956, 879, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 920, 899, 931, 233, 889, 930,
	929, 0, 234, 891, 890, 237, 238, 239, 881, 955,
	240, 992, 993, 489, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 934, 264, 927, 926, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 925, 271, 0,
	272, 0, 273, 274, 0, 275, 858, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 870, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 924, 922,
	923, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 880, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 353, 968, 301, 302, 0, 303,
	304, 901, 0, 0, 217, 305, 307, 314, 0, 967,
	308, 913, 904, 915, 917, 918, 919, 914, 0, 906,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 939,
	940, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 893, 343, 974, 346, 347,
	350, 349, 975, 348, 0, 218, 976, 351, 871, 960,
	352, 928, 354, 355, 0, 902, 357, 903, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 977, 365,
	978, 985, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 986, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 921, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 979, 402,
	403, 404, 405, 2551, 2552, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 894, 895, 897,
	898, 419, 425, 426, 427, 953, 428, 408, 409, 429,
	430, 980, 431, 432, 916, 896, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 964, 440, 441, 442, 987,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 892, 0, 454, 935, 936, 937, 938, 0, 461,
	0, 455, 456, 988, 457, 989, 869, 458, 459, 460,
	0, 462, 463, 0, 0, 464, 465, 466, 467, 468,
	470, 954, 471, 0, 900, 472, 473, 474, 523, 932,
	982, 0, 476, 475, 526, 0, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 905, 863, 864, 865, 861,
	862, 874, 0, 0, 0, 0, 0, 0, 1770, 1771,
	0, 0, 219, 220, 221, 222, 223, 875, 224, 0,
	0, 873, 0, 0, 956, 879, 0, 0, 0, 225,
	227, 226, 228, 229, 483, 920, 899, 931, 233, 889,
	930, 929, 0, 234, 891, 890, 237, 238, 239, 0,
	955, 240, 992, 993, 489, 0, 241, 962, 0, 943,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	965, 257, 258, 946, 944, 945, 952, 948, 947, 951,
	259, 260, 261, 262, 934, 264, 927, 926, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 925, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 983, 984, 870,
	216, 0, 0, 0, 0, 0, 286, 287, 288, 924,
	922, 923, 0, 291, 0, 292, 0, 0, 966, 293,
	294, 0, 295, 990, 0, 880, 296, 0, 297, 298,
	299, 300, 957, 958, 961, 353, 968, 301, 302, 0,
	303, 304, 901, 0, 0, 217, 305, 307, 314, 0,
	967, 308, 913, 904, 915, 917, 918, 919, 914, 0,
	906, 0, 315, 969, 959, 970, 316, 317, 318, 971,
	939, 940, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 991, 972, 329, 330, 973, 0,
	331, 332, 950, 949, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 893, 343, 974, 346,
	347, 350, 349, 975, 348, 0, 218, 976, 351, 871,
	960, 352, 928, 354, 355, 0, 902, 357, 903, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 509, 977,
	365, 978, 985, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 986, 376, 512, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 921,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 979,
	402, 403, 404, 405, 859, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 0, 423, 424, 894, 895,
	897, 898, 419, 425, 426, 427, 953, 428, 408, 409,
	429, 430, 980, 431, 432, 916, 896, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 964, 440, 441, 442,
	987, 0, 446, 447, 445, 0, 448, 449, 450, 451,
	452, 280, 892, 0, 454, 935, 936, 937, 938, 0,
	461, 0, 455, 456, 988, 457, 989, 869, 458, 459,
	460, 0, 462, 463, 0, 0, 464, 465, 466, 467,
	468, 470, 954, 471, 0, 900, 472, 473, 474, 523,
	932, 982, 0, 476, 475, 526, 0, 0, 0, 0,
	477, 478, 527, 479, 480, 481, 905, 863, 864, 865,
	861, 862, 874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 875, 224,
	0, 0, 873, 0, 0, 956, 879, 0, 0, 0,
	225, 227, 226, 228, 229, 0, 920, 899, 931, 233,
	889, 930, 929, 0, 234, 891, 890, 237, 238, 239,
	881, 955, 240, 992, 993, 489, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 3645, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 934, 264, 927, 926, 852,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 925,
	271, 0, 272, 0, 273, 274, 0, 275, 858, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	870, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	924, 922, 923, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 880, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 353, 0, 301, 302,
	0, 303, 304, 901, 0, 0, 217, 305, 307, 314,
	0, 967, 308, 913, 904, 915, 917, 918, 919, 914,
	0, 906, 0, 315, 0, 959, 0, 316, 317, 318,
	971, 939, 940, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 0,
	0, 331, 332, 950, 949, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 893, 343, 974,
	346, 347, 350, 349, 975, 348, 849, 218, 0, 351,
	871, 960, 352, 928, 354, 355, 0, 902, 357, 903,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	977, 365, 978, 985, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 986, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	921, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	979, 402, 403, 404, 405, 859, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 894,
	895, 897, 898, 419, 425, 426, 427, 953, 428, 408,
	409, 429, 430, 0, 431, 432, 916, 896, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 964, 440, 441,
	442, 987, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 892, 0, 454, 935, 936, 937, 938,
	0, 461, 0, 455, 456, 988, 457, 989, 869, 458,
	459, 460, 0, 3644, 463, 0, 853, 464, 465, 466,
	467, 468, 470, 954, 471, 0, 900, 472, 473, 474,
	523, 932, 982, 0, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 839, 0, 1030, 0, 0,
	846, 847, 0, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 873, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 956, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 0, 234, 235, 236, 237, 238,
	239, 0, 955, 240, 487, 488, 489, 0, 241, 962,
	0, 943, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 965, 257, 258, 946, 944, 945, 952, 948,
	947, 951, 259, 260, 261, 262, 263, 264, 491, 492,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 983,
	984, 0, 216, 0, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 0, 292, 0, 0,
	966, 293, 294, 0, 295, 990, 0, 498, 296, 0,
	297, 298, 299, 300, 957, 958, 961, 353, 968, 301,
	302, 0, 303, 304, 306, 0, 0, 217, 305, 307,
	314, 0, 967, 308, 502, 310, 309, 311, 312, 313,
	503, 0, 504, 0, 315, 969, 959, 970, 316, 317,
	318, 971, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 1016, 327, 326, 0, 328, 991, 972, 329, 330,
	973, 0, 331, 332, 950, 949, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 343,
	974, 346, 347, 350, 349, 975, 348, 0, 218, 976,
	351, 0, 960, 352, 508, 354, 355, 0, 356, 357,
	358, 0, 1022, 360, 361, 362, 0, 0, 363, 364,
	509, 977, 365, 978, 985, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 986, 376, 512,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 0, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 0,
	401, 979, 402, 403, 404, 405, 514, 1024, 0, 407,
	411, 412, 413, 414, 415, 416, 417, 182, 423, 424,
	418, 420, 421, 422, 419, 425, 426, 427, 953, 428,
	408, 409, 429, 430, 980, 431, 432, 515, 433, 434,
	0, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 987, 0, 446, 447, 445, 184, 448, 449,
	450, 451, 452, 280, 453, 0, 454, 517, 518, 519,
	520, 0, 461, 0, 455, 456, 988, 457, 989, 0,
	458, 459, 460, 0, 462, 463, 0, 0, 464, 465,
	466, 467, 468, 470, 954, 471, 0, 469, 472, 473,
	474, 1343, 524, 525, 0, 476, 475, 526, 1030, 0,
	0, 176, 477, 478, 527, 479, 480, 481, 0, 177,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 956, 1020, 0,
	1640, 0, 225, 227, 226, 228, 229, 483, 484, 230,
	485, 233, 231, 232, 486, 0, 234, 235, 236, 237,
	238, 239, 0, 955, 240, 487, 488, 489, 0, 241,
	962, 0, 943, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 946, 944, 945, 952,
	948, 947, 951, 259, 260, 261, 262, 263, 264, 491,
	492, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	493, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	983, 984, 0, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 496, 289, 290, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 990, 0, 498, 296,
	0, 297, 298, 299, 300, 957, 958, 961, 353, 968,
	301, 302, 0, 303, 304, 306, 0, 0, 217, 305,
	307, 314, 0, 967, 308, 502, 310, 309, 311, 312,
	313, 503, 0, 504, 0, 315, 969, 959, 970, 316,
	317, 318, 971, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 1016, 327, 326, 0, 328, 991, 972, 329,
	330, 973, 0, 331, 332, 950, 949, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 345,
	343, 974, 346, 347, 350, 349, 975, 348, 0, 218,
	976, 351, 0, 960, 352, 508, 354, 355, 0, 356,
	357, 358, 0, 1022, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 985, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 986, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 513, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 514, 1024, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 182, 423,
	424, 418, 420, 421, 422, 419, 425, 426, 427, 953,
	428, 408, 409, 429, 430, 980, 431, 432, 515, 433,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 444,
	440, 441, 442, 987, 0, 446, 447, 445, 184, 448,
	449, 450, 451, 452, 280, 453, 0, 454, 517, 518,
	519, 520, 0, 461, 0, 455, 456, 988, 457, 989,
	0, 458, 459, 460, 0, 462, 463, 0, 0, 464,
	465, 466, 467, 468, 470, 954, 471, 0, 469, 472,
	473, 474, 1343, 524, 525, 0, 476, 475, 526, 2704,
	0, 1030, 176, 477, 478, 527, 479, 480, 481, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 1020,
	956, 1640, 0, 0, 0, 225, 227, 226, 228, 229,
	483, 484, 230, 485, 233, 231, 232, 486, 0, 234,
	235, 236, 237, 238, 239, 0, 955, 240, 487, 488,
	489, 0, 241, 962, 0, 943, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 946,
	944, 945, 952, 948, 947, 951, 259, 260, 261, 262,
	263, 264, 491, 492, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 493, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 983, 984, 0, 216, 0, 0, 0,
	0, 0, 286, 287, 288, 496, 289, 290, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 990,
	0, 498, 296, 0, 297, 298, 299, 300, 957, 958,
	961, 353, 968, 301, 302, 0, 303, 304, 306, 0,
	0, 217, 305, 307, 314, 0, 967, 308, 502, 310,
	309, 311, 312, 313, 503, 0, 504, 0, 315, 969,
	959, 970, 316, 317, 318, 971, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 1016, 327, 326, 0, 328,
	991, 972, 329, 330, 973, 0, 331, 332, 950, 949,
	333, 334, 335, 0, 336, 337, 339, 341, 338, 340,
	342, 344, 345, 343, 974, 346, 347, 350, 349, 975,
	348, 0, 218, 976, 351, 0, 960, 352, 508, 354,
	355, 0, 356, 357, 358, 0, 1022, 360, 361, 362,
	0, 0, 363, 364, 509, 977, 365, 978, 985, 366,
	359, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 986, 376, 512, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 513, 386, 387, 0, 388,
	389, 390, 391, 392, 0, 394, 395, 396, 393, 397,
	398, 399, 400, 0, 401, 979, 402, 403, 404, 405,
	514, 1024, 0, 407, 411, 412, 413, 414, 415, 416,
	417, 0, 423, 424, 418, 420, 421, 422, 419, 425,
	426, 427, 953, 428, 408, 409, 429, 430, 980, 431,
	432, 515, 433, 434, 0, 435, 436, 437, 438, 410,
	439, 443, 444, 440, 441, 442, 987, 0, 446, 447,
	445, 0, 448, 449, 450, 451, 452, 280, 453, 0,
	454, 517, 518, 519, 520, 0, 461, 0, 455, 456,
	988, 457, 989, 0, 458, 459, 460, 0, 462, 463,
	0, 0, 464, 465, 466, 467, 468, 470, 954, 471,
	0, 469, 472, 473, 474, 523, 524, 525, 0, 476,
	475, 526, 1012, 0, 1030, 0, 477, 478, 527, 479,
	480, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 1020, 956, 1018, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 484, 230, 485, 233, 231, 232,
	486, 0, 234, 235, 236, 237, 238, 239, 0, 955,
	240, 487, 488, 489, 0, 241, 962, 0, 943, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 965,
	257, 258, 946, 944, 945, 952, 948, 947, 951, 259,
	260, 261, 262, 263, 264, 491, 492, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 493, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 983, 984, 0, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 496, 289,
	290, 0, 291, 0, 292, 0, 0, 966, 293, 294,
	0, 295, 990, 0, 498, 296, 0, 297, 298, 299,
	300, 957, 958, 961, 353, 968, 301, 302, 0, 303,
	304, 306, 0, 0, 217, 305, 307, 314, 0, 967,
	308, 502, 310, 309, 311, 312, 313, 503, 0, 504,
	0, 315, 969, 959, 970, 316, 317, 318, 971, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 1016, 327,
	326, 0, 328, 991, 972, 329, 330, 973, 0, 331,
	332, 950, 949, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 345, 343, 974, 346, 347,
	350, 349, 975, 348, 0, 218, 976, 351, 0, 960,
	352, 508, 354, 355, 0, 356, 357, 358, 0, 1022,
	360, 361, 362, 0, 0, 363, 364, 509, 977, 365,
	978, 985, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 986, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 513, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 979, 402,
	403, 404, 405, 514, 1024, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 418, 420, 421,
	422, 419, 425, 426, 427, 953, 428, 408, 409, 429,
	430, 980, 431, 432, 515, 433, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 444, 440, 441, 442, 987,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 453, 0, 454, 517, 518, 519, 520, 0, 461,
	0, 455, 456, 988, 457, 989, 0, 458, 459, 460,
	0, 462, 463, 0, 0, 464, 465, 466, 467, 468,
	470, 954, 471, 0, 469, 472, 473, 474, 523, 524,
	525, 0, 476, 475, 526, 1030, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 956, 1020, 0, 1018, 0, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 0, 234, 235, 236, 237, 238, 239, 0,
	955, 240, 487, 488, 489, 0, 241, 962, 0, 943,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	965, 257, 258, 946, 944, 945, 952, 948, 947, 951,
	259, 260, 261, 262, 263, 264, 491, 492, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 983, 984, 0,
	216, 0, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 0, 292, 0, 0, 966, 293,
	294, 0, 295, 990, 0, 498, 296, 0, 297, 298,
	299, 300, 957, 958, 961, 353, 968, 301, 302, 0,
	303, 304, 306, 0, 0, 217, 305, 307, 314, 0,
	967, 308, 502, 310, 309, 311, 312, 313, 503, 0,
	504, 0, 315, 969, 959, 970, 316, 317, 318, 971,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 1016,
	327, 326, 0, 328, 991, 972, 329, 330, 973, 0,
	331, 332, 950, 949, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 974, 346,
	347, 350, 349, 975, 348, 0, 218, 976, 351, 0,
	960, 352, 508, 354, 355, 0, 356, 357, 358, 0,
	1022, 360, 361, 362, 0, 0, 363, 364, 509, 977,
	365, 978, 985, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 986, 376, 512, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 979,
	402, 403, 404, 405, 514, 1024, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 0, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 953, 428, 408, 409,
	429, 430, 980, 431, 432, 515, 433, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	987, 0, 446, 447, 445, 0, 448, 449, 450, 451,
	452, 280, 453, 0, 454, 517, 518, 519, 520, 0,
	461, 0, 455, 456, 988, 457, 989, 0, 458, 459,
	460, 0, 462, 463, 0, 0, 464, 465, 466, 467,
	468, 470, 954, 471, 0, 469, 472, 473, 474, 523,
	524, 525, 0, 476, 475, 526, 1030, 0, 0, 0,
	477, 478, 527, 479, 480, 481, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 956, 1020, 0, 1018, 0,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 955, 240, 487, 488, 489, 0, 241, 962, 0,
	943, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 946, 944, 945, 952, 948, 947,
	951, 259, 260, 261, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 983, 984,
	0, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 990, 0, 498, 296, 0, 297,
	298, 299, 300, 957, 958, 961, 353, 968, 301, 302,
	0, 303, 304, 306, 0, 0, 217, 305, 307, 314,
	0, 967, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 0, 315, 969, 959, 970, 316, 317, 318,
	971, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 991, 972, 329, 330, 973,
	0, 331, 332, 950, 949, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 974,
	346, 347, 350, 349, 975, 348, 0, 218, 976, 351,
	0, 960, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	977, 365, 978, 985, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 986, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	979, 402, 403, 404, 405, 514, 1024, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 953, 428, 408,
	409, 429, 430, 980, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 987, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 517, 518, 519, 520,
	0, 461, 0, 455, 456, 988, 457, 989, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 954, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 0, 476, 475, 526, 839, 0, 1201,
	0, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 1541,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 1093, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 965, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 216, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 966, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 499, 500, 501, 353,
	968, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 967, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 969, 505, 970,
	316, 317, 318, 971, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 972,
	329, 330, 973, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 974, 346, 347, 350, 349, 975, 348, 0,
	0, 976, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 977, 365, 978, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 386, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 979, 402, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 182,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 980, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 184,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 1343, 524, 525, 0, 476, 475, 526,
	1340, 0, 1201, 176, 477, 478, 527, 479, 480, 481,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 151, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 0, 241, 490, 0, 1093, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 499,
	500, 501, 353, 968, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 967, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	969, 505, 970, 316, 317, 318, 971, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 972, 329, 330, 973, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 974, 346, 347, 350, 349,
	975, 348, 0, 0, 976, 351, 0, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 182, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 0, 428, 408, 409, 429, 430, 980,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 184, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 1343, 524, 525, 0,
	476, 475, 526, 0, 0, 0, 176, 477, 478, 527,
	479, 480, 481, 0, 177, 0, 0, 0, 0, 1201,
	1200, 0, 0, 0, 0, 1198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 1093, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 965, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 216, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 966, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 499, 500, 501, 353,
	968, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 967, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 969, 505, 970,
	316, 317, 318, 971, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 972,
	329, 330, 973, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 974, 346, 347, 350, 349, 975, 348, 0,
	0, 976, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 977, 365, 978, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 386, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 979, 402, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 0,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 980, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 0,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 523, 524, 525, 0, 476, 475, 526,
	0, 0, 0, 0, 477, 478, 527, 479, 480, 481,
	1201, 1200, 0, 0, 0, 0, 1198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 2908, 224, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	484, 230, 485, 233, 231, 232, 486, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 487, 488, 489,
	0, 241, 490, 0, 1093, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 491, 492, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 493, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 494, 495, 0, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 496, 289, 290, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 497, 0,
	498, 296, 0, 297, 298, 299, 300, 499, 500, 501,
	353, 968, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 967, 308, 502, 310, 309,
	311, 312, 313, 503, 0, 504, 0, 315, 969, 505,
	970, 316, 317, 318, 971, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 506,
	972, 329, 330, 973, 0, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 345, 343, 974, 346, 347, 350, 349, 975, 348,
	0, 0, 976, 351, 0, 507, 352, 508, 354, 355,
	0, 356, 357, 358, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 977, 365, 978, 510, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	511, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 513, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 979, 402, 403, 404, 405, 514,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 418, 420, 421, 422, 419, 425, 426,
	427, 0, 428, 408, 409, 429, 430, 980, 431, 432,
	515, 433, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 444, 440, 441, 442, 516, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 453, 0, 454,
	517, 518, 519, 520, 0, 461, 0, 455, 456, 521,
	457, 522, 0, 458, 459, 460, 0, 462, 463, 0,
	0, 464, 465, 466, 467, 468, 470, 0, 471, 0,
	469, 472, 473, 474, 523, 524, 525, 0, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 1201, 1200, 0, 0, 0, 0, 1198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 1210, 224, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	483, 484, 230, 485, 233, 231, 232, 486, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 487, 488,
	489, 0, 241, 490, 0, 1093, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 491, 492, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 493, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 494, 495, 0, 216, 0, 0, 0,
	0, 0, 286, 287, 288, 496, 289, 290, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 497,
	0, 498, 296, 0, 297, 298, 299, 300, 499, 500,
	501, 353, 968, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 967, 308, 502, 310,
	309, 311, 312, 313, 503, 0, 504, 0, 315, 969,
	505, 970, 316, 317, 318, 971, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	506, 972, 329, 330, 973, 0, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 339, 341, 338, 340,
	342, 344, 345, 343, 974, 346, 347, 350, 349, 975,
	348, 0, 0, 976, 351, 0, 507, 352, 508, 354,
	355, 0, 356, 357, 358, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 509, 977, 365, 978, 510, 366,
	359, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 511, 376, 512, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 513, 386, 387, 0, 388,
	389, 390, 391, 392, 0, 394, 395, 396, 393, 397,
	398, 399, 400, 0, 401, 979, 402, 403, 404, 405,
	514, 406, 0, 407, 411, 412, 413, 414, 415, 416,
	417, 0, 423, 424, 418, 420, 421, 422, 419, 425,
	426, 427, 0, 428, 408, 409, 429, 430, 980, 431,
	432, 515, 433, 434, 0, 435, 436, 437, 438, 410,
	439, 443, 444, 440, 441, 442, 516, 0, 446, 447,
	445, 0, 448, 449, 450, 451, 452, 280, 453, 0,
	454, 517, 518, 519, 520, 0, 461, 0, 455, 456,
	521, 457, 522, 0, 458, 459, 460, 0, 462, 463,
	0, 0, 464, 465, 466, 467, 468, 470, 0, 471,
	0, 469, 472, 473, 474, 523, 524, 525, 0, 476,
	475, 526, 1030, 0, 0, 0, 477, 478, 527, 479,
	480, 481, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 956, 0, 0, 1349, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 955, 240, 487,
	488, 489, 0, 241, 962, 0, 943, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	946, 944, 945, 952, 948, 947, 951, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 983, 984, 0, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	990, 0, 498, 296, 0, 297, 298, 299, 300, 957,
	958, 961, 353, 968, 301, 302, 0, 303, 304, 306,
	0, 0, 217, 305, 307, 314, 0, 967, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	969, 959, 970, 316, 317, 318, 971, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 991, 972, 329, 330, 973, 0, 331, 332, 950,
	949, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 974, 346, 347, 350, 349,
	975, 348, 0, 218, 976, 351, 0, 960, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 985,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 986, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 953, 428, 408, 409, 429, 430, 980,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 987, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 988, 457, 989, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 954,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 0,
	476, 475, 526, 839, 0, 213, 0, 477, 478, 527,
	479, 480, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 487, 488, 489, 0, 241, 490, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 491, 492, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 497, 0, 498, 296, 0, 297, 298,
	299, 300, 499, 500, 501, 353, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 502, 310, 309, 311, 312, 313, 503, 0,
	504, 0, 315, 0, 505, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 506, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 0, 346,
	347, 350, 349, 0, 348, 0, 0, 0, 351, 0,
	507, 352, 508, 354, 355, 0, 356, 357, 358, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 509, 0,
	365, 0, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 511, 376, 512, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 182, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 0, 428, 408, 409,
	429, 430, 0, 431, 432, 515, 433, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 0, 446, 447, 445, 184, 448, 449, 450, 451,
	452, 280, 453, 0, 454, 517, 518, 519, 520, 0,
	461, 0, 455, 456, 521, 457, 522, 0, 458, 459,
	460, 0, 462, 463, 0, 0, 464, 465, 466, 467,
	468, 470, 0, 471, 0, 469, 472, 473, 474, 1343,
	524, 525, 0, 476, 475, 526, 213, 0, 0, 176,
	477, 478, 527, 479, 480, 481, 0, 177, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 482, 0, 0, 151, 0,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 487, 488, 489, 0, 241, 490, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	0, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 497, 0, 498, 296, 0, 297,
	298, 299, 300, 499, 500, 501, 353, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 217, 305, 307, 314,
	0, 0, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 0, 315, 0, 505, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 506, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 0,
	346, 347, 350, 349, 0, 348, 0, 218, 0, 351,
	0, 507, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	0, 365, 0, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 511, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 0, 428, 408,
	409, 429, 430, 0, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 517, 518, 519, 520,
	0, 461, 0, 455, 456, 521, 457, 522, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 0, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 0, 476, 475, 526, 1290, 0, 213,
	0, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 1654,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 216, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 499, 500, 501, 353,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 217,
	305, 307, 314, 0, 0, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 0, 505, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 0, 346, 347, 350, 349, 0, 348, 0,
	218, 0, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 0, 365, 0, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 386, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 0,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 0, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 0,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 523, 524, 525, 0, 476, 475, 526,
	213, 0, 0, 0, 477, 478, 527, 479, 480, 481,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 482,
	1294, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	484, 230, 485, 233, 231, 232, 486, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 487, 488, 489,
	0, 241, 490, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 491, 492, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 493, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 494, 495, 0, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 496, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 497, 0,
	498, 296, 0, 297, 298, 299, 300, 499, 500, 501,
	353, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	217, 305, 307, 314, 0, 0, 308, 502, 310, 309,
	311, 312, 313, 503, 0, 504, 0, 315, 0, 505,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 506,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 345, 343, 0, 346, 347, 350, 349, 0, 348,
	0, 218, 0, 351, 0, 507, 352, 508, 354, 355,
	0, 356, 357, 358, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 0, 365, 0, 510, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	511, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 513, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 514,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 418, 420, 421, 422, 419, 425, 426,
	427, 0, 428, 408, 409, 429, 430, 0, 431, 432,
	515, 433, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 444, 440, 441, 442, 516, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 453, 0, 454,
	517, 518, 519, 520, 0, 461, 0, 455, 456, 521,
	457, 522, 0, 458, 459, 460, 0, 462, 463, 0,
	0, 464, 465, 466, 467, 468, 470, 0, 471, 0,
	469, 472, 473, 474, 523, 524, 525, 0, 476, 475,
	526, 213, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	482, 2858, 0, 0, 0, 225, 227, 226, 228, 229,
	483, 484, 230, 485, 233, 231, 232, 486, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 487, 488,
	489, 0, 241, 490, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 491, 492, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 493, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 494, 495, 0, 216, 0, 0, 0,
	0, 0, 286, 287, 288, 496, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 497,
	0, 498, 296, 0, 297, 298, 299, 300, 499, 500,
	501, 353, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 217, 305, 307, 314, 0, 0, 308, 502, 310,
	309, 311, 312, 313, 503, 0, 504, 0, 315, 0,
	505, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	506, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 339, 341, 338, 340,
	342, 344, 345, 343, 0, 346, 347, 350, 349, 0,
	348, 0, 218, 0, 351, 0, 507, 352, 508, 354,
	355, 0, 356, 357, 358, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 509, 0, 365, 0, 510, 366,
	359, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 511, 376, 512, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 513, 386, 387, 0, 388,
	389, 390, 391, 392, 0, 394, 395, 396, 393, 397,
	398, 399, 400, 0, 401, 0, 402, 403, 404, 405,
	514, 406, 0, 407, 411, 412, 413, 414, 415, 416,
	417, 0, 423, 424, 418, 420, 421, 422, 419, 425,
	426, 427, 0, 428, 408, 409, 429, 430, 0, 431,
	432, 515, 433, 434, 0, 435, 436, 437, 438, 410,
	439, 443, 444, 440, 441, 442, 516, 0, 446, 447,
	445, 0, 448, 449, 450, 451, 452, 280, 453, 0,
	454, 517, 518, 519, 520, 0, 461, 0, 455, 456,
	521, 457, 522, 0, 458, 459, 460, 0, 462, 463,
	0, 0, 464, 465, 466, 467, 468, 470, 0, 471,
	0, 469, 472, 473, 474, 523, 524, 525, 0, 476,
	475, 526, 213, 0, 0, 0, 477, 478, 527, 479,
	480, 481, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 1294, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 0, 241, 490, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 499,
	500, 501, 353, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	0, 505, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 0, 346, 347, 350, 349,
	0, 348, 0, 0, 0, 351, 0, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 0, 365, 0, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 0, 428, 408, 409, 429, 430, 0,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 0,
	476, 475, 526, 213, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 482, 0, 0, 2456, 0, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	487, 488, 489, 0, 241, 490, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 491, 492, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 496, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 497, 0, 498, 296, 0, 297, 298, 299, 300,
	499, 500, 501, 353, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	502, 310, 309, 311, 312, 313, 503, 0, 504, 0,
	315, 0, 505, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 506, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 0, 346, 347, 350,
	349, 0, 348, 0, 0, 0, 351, 0, 507, 352,
	508, 354, 355, 0, 356, 357, 358, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 509, 0, 365, 0,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 511, 376, 512, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 513, 386, 387,
	0, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 0, 401, 0, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 414,
	415, 416, 417, 0, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 0, 428, 408, 409, 429, 430,
	0, 431, 432, 515, 433, 434, 0, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 0,
	446, 447, 445, 0, 448, 449, 450, 451, 452, 280,
	453, 0, 454, 517, 518, 519, 520, 0, 461, 0,
	455, 456, 521, 457, 522, 0, 458, 459, 460, 0,
	462, 463, 0, 0, 464, 465, 466, 467, 468, 470,
	0, 471, 0, 469, 472, 473, 474, 523, 524, 525,
	0, 476, 475, 526, 213, 0, 0, 0, 477, 478,
	527, 479, 480, 481, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 482, 0, 0, 2996, 0, 225, 227,
	226, 228, 229, 483, 484, 230, 485, 233, 231, 232,
	486, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 487, 488, 489, 0, 241, 490, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 491, 492, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 493, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 494, 495, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 496, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 497, 0, 498, 296, 0, 297, 298, 299,
	300, 499, 500, 501, 353, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 502, 310, 309, 311, 312, 313, 503, 0, 504,
	0, 315, 0, 505, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 506, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 345, 343, 0, 346, 347,
	350, 349, 0, 348, 0, 0, 0, 351, 0, 507,
	352, 508, 354, 355, 0, 356, 357, 358, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 0, 365,
	0, 510, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 511, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 513, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 514, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 418, 420, 421,
	422, 419, 425, 426, 427, 0, 428, 408, 409, 429,
	430, 0, 431, 432, 515, 433, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 444, 440, 441, 442, 516,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 453, 0, 454, 517, 518, 519, 520, 0, 461,
	0, 455, 456, 521, 457, 522, 0, 458, 459, 460,
	0, 462, 463, 0, 0, 464, 465, 466, 467, 468,
	470, 0, 471, 0, 469, 472, 473, 474, 523, 524,
	525, 0, 476, 475, 526, 709, 0, 599, 0, 477,
	478, 527, 479, 480, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 482, 1929, 0, 0,
	0, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 487, 488, 489, 0, 241, 490,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 605, 262, 263, 264, 491, 492,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 0, 216, 0, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 0, 292, 0, 707,
	0, 293, 294, 0, 295, 497, 0, 498, 296, 0,
	297, 298, 299, 300, 499, 500, 501, 353, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 217, 305, 307,
	314, 0, 0, 308, 502, 310, 309, 311, 312, 313,
	503, 0, 504, 0, 315, 0, 505, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 506, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 343,
	0, 346, 347, 350, 349, 0, 348, 0, 218, 0,
	351, 0, 507, 352, 508, 354, 355, 0, 356, 357,
	358, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	509, 0, 365, 0, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 511, 376, 512,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 0, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 514, 406, 0, 407,
	411, 412, 413, 414, 415, 416, 417, 0, 423, 424,
	418, 420, 421, 422, 419, 425, 426, 427, 0, 428,
	408, 409, 429, 430, 0, 431, 432, 515, 433, 434,
	0, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 0, 446, 447, 445, 604, 448, 449,
	450, 451, 452, 280, 453, 0, 454, 517, 518, 519,
	520, 0, 461, 0, 455, 456, 521, 457, 522, 0,
	458, 459, 460, 0, 462, 463, 0, 0, 464, 465,
	466, 467, 468, 470, 0, 471, 0, 469, 472, 473,
	474, 523, 524, 525, 0, 476, 475, 526, 0, 598,
	0, 599, 477, 478, 527, 479, 480, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 608, 224, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	483, 484, 230, 485, 233, 231, 232, 486, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 487, 488,
	489, 0, 241, 490, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 605, 262,
	263, 264, 491, 492, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 493, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 494, 495, 0, 216, 0, 0, 0,
	0, 0, 286, 287, 288, 496, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 497,
	0, 498, 296, 0, 297, 298, 299, 300, 499, 500,
	501, 353, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 217, 305, 307, 314, 0, 0, 308, 502, 310,
	309, 311, 312, 313, 503, 0, 504, 0, 315, 0,
	505, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	506, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 339, 341, 338, 340,
	342, 344, 345, 343, 0, 346, 347, 350, 349, 0,
	348, 0, 218, 0, 351, 0, 507, 352, 508, 354,
	355, 0, 356, 357, 358, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 509, 0, 365, 0, 510, 366,
	359, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 511, 376, 512, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 513, 386, 387, 0, 388,
	389, 390, 391, 392, 0, 394, 395, 396, 393, 397,
	398, 399, 400, 0, 401, 0, 402, 403, 404, 405,
	514, 406, 0, 407, 411, 412, 413, 414, 415, 416,
	417, 0, 423, 424, 418, 420, 421, 422, 419, 425,
	426, 427, 0, 428, 408, 409, 429, 430, 0, 431,
	432, 515, 433, 434, 0, 435, 436, 437, 438, 410,
	439, 443, 444, 440, 441, 442, 516, 0, 446, 447,
	445, 604, 448, 449, 450, 451, 452, 280, 453, 0,
	454, 517, 518, 519, 520, 596, 461, 0, 455, 456,
	521, 457, 522, 0, 458, 459, 460, 0, 462, 463,
	0, 0, 464, 465, 466, 467, 468, 470, 0, 471,
	0, 469, 472, 473, 474, 523, 524, 525, 0, 476,
	475, 526, 0, 0, 0, 0, 477, 478, 527, 479,
	480, 481, 1201, 1200, 0, 0, 0, 0, 1198, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 0, 241, 490, 0, 1093, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 499,
	500, 501, 353, 968, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 967, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	969, 505, 970, 316, 317, 318, 971, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 972, 329, 330, 973, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 974, 346, 347, 350, 349,
	975, 348, 0, 0, 976, 351, 2838, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 0, 428, 408, 409, 429, 430, 980,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 599,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 605, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 216, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 499, 500, 501, 353,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 217,
	305, 307, 314, 0, 0, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 0, 505, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 0, 346, 347, 350, 349, 0, 348, 0,
	218, 0, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 0, 365, 0, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 386, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 0, 1963, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 0,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 0, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 604,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 523, 524, 525, 0, 476, 475, 526,
	599, 0, 0, 0, 477, 478, 527, 479, 480, 481,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 608, 0, 0, 0, 482,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	484, 230, 485, 233, 231, 232, 486, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 487, 488, 489,
	0, 241, 490, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 605, 262, 263,
	264, 491, 492, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 493, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 494, 495, 0, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 496, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 497, 0,
	498, 296, 0, 297, 298, 299, 300, 499, 500, 501,
	353, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	217, 305, 307, 314, 0, 0, 308, 502, 310, 309,
	311, 312, 313, 503, 0, 504, 0, 315, 0, 505,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 506,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 345, 343, 0, 346, 347, 350, 349, 0, 348,
	0, 218, 0, 351, 0, 507, 352, 508, 354, 355,
	0, 356, 357, 358, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 0, 365, 0, 510, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	511, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 513, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 514,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 418, 420, 421, 422, 419, 425, 426,
	427, 0, 428, 408, 409, 429, 430, 0, 431, 432,
	515, 433, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 444, 440, 441, 442, 516, 0, 446, 447, 445,
	604, 448, 449, 450, 451, 452, 280, 453, 0, 454,
	517, 518, 519, 520, 0, 461, 0, 455, 456, 521,
	457, 522, 0, 458, 459, 460, 0, 462, 463, 0,
	0, 464, 465, 466, 467, 468, 470, 0, 471, 0,
	469, 472, 473, 474, 523, 524, 525, 0, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 1376, 0, 1201, 1200, 0, 0, 0, 0, 1198,
	0, 0, 0, 0, 0, 0, 608, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	487, 488, 489, 0, 241, 490, 0, 1093, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 965, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 491, 492, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 0, 216, 0,
	0, 0, 0, 0, 1375, 287, 288, 496, 289, 290,
	0, 291, 0, 292, 0, 0, 966, 293, 294, 0,
	295, 497, 0, 498, 296, 0, 297, 298, 299, 300,
	499, 500, 501, 353, 968, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 967, 308,
	502, 310, 309, 311, 312, 313, 503, 0, 504, 0,
	315, 969, 505, 970, 316, 317, 318, 971, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 506, 972, 329, 330, 973, 0, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 974, 346, 347, 350,
	349, 975, 348, 0, 0, 976, 351, 0, 507, 352,
	508, 354, 355, 0, 356, 357, 358, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 509, 977, 365, 978,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 511, 376, 512, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 1374, 385, 513, 386, 387,
	0, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 0, 401, 979, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 1373,
	415, 416, 417, 0, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 0, 428, 408, 409, 429, 430,
	980, 431, 432, 515, 433, 434, 0, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 0,
	446, 447, 445, 0, 448, 449, 450, 451, 452, 280,
	453, 0, 454, 517, 518, 519, 520, 0, 461, 0,
	455, 456, 521, 457, 522, 0, 458, 459, 460, 0,
	462, 463, 0, 0, 464, 465, 466, 467, 468, 470,
	0, 471, 0, 469, 472, 473, 474, 523, 524, 525,
	0, 476, 475, 526, 0, 0, 0, 0, 477, 478,
	527, 479, 480, 481, 1338, 0, 1201, 1200, 0, 0,
	0, 0, 1198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 487, 488, 489, 0, 241, 490, 0,
	1093, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 965, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	0, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 966,
	293, 294, 0, 295, 497, 0, 498, 296, 0, 297,
	298, 299, 300, 1337, 500, 501, 353, 968, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 967, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 0, 315, 969, 505, 970, 316, 317, 318,
	971, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 506, 972, 329, 330, 973,
	0, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 974,
	346, 347, 350, 349, 975, 348, 0, 0, 976, 351,
	0, 507, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	977, 365, 978, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 511, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	979, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 0, 428, 408,
	409, 429, 430, 980, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 517, 518, 519, 520,
	0, 461, 0, 455, 456, 521, 457, 522, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 0, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 0, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 1334, 0, 1201,
	1200, 0, 0, 0, 0, 1198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 1093, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 965, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 216, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 966, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 1333, 500, 501, 353,
	968, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 967, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 969, 505, 970,
	316, 317, 318, 971, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 972,
	329, 330, 973, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 974, 346, 347, 350, 349, 975, 348, 0,
	0, 976, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 977, 365, 978, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 386, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 979, 402, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 0,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 980, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 0,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 523, 524, 525, 0, 476, 475, 526,
	0, 0, 0, 0, 477, 478, 527, 479, 480, 481,
	1270, 0, 1201, 1200, 0, 0, 0, 0, 1198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 0, 241, 490, 0, 1093, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 1269,
	500, 501, 353, 968, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 967, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	969, 505, 970, 316, 317, 318, 971, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 972, 329, 330, 973, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 974, 346, 347, 350, 349,
	975, 348, 0, 0, 976, 351, 0, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 0, 428, 408, 409, 429, 430, 980,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 0,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 1267, 0, 1201, 1200, 0, 0, 0,
	0, 1198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 487, 488, 489, 0, 241, 490, 0, 1093,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	965, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 491, 492, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 0,
	216, 0, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 0, 292, 0, 0, 966, 293,
	294, 0, 295, 497, 0, 498, 296, 0, 297, 298,
	299, 300, 1266, 500, 501, 353, 968, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	967, 308, 502, 310, 309, 311, 312, 313, 503, 0,
	504, 0, 315, 969, 505, 970, 316, 317, 318, 971,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 506, 972, 329, 330, 973, 0,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 974, 346,
	347, 350, 349, 975, 348, 0, 0, 976, 351, 0,
	507, 352, 508, 354, 355, 0, 356, 357, 358, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 509, 977,
	365, 978, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 511, 376, 512, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 979,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 0, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 0, 428, 408, 409,
	429, 430, 980, 431, 432, 515, 433, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 0, 446, 447, 445, 0, 448, 449, 450, 451,
	452, 280, 453, 0, 454, 517, 518, 519, 520, 0,
	461, 0, 455, 456, 521, 457, 522, 0, 458, 459,
	460, 0, 462, 463, 0, 0, 464, 465, 466, 467,
	468, 470, 0, 471, 0, 469, 472, 473, 474, 523,
	524, 525, 0, 476, 475, 526, 0, 0, 0, 0,
	477, 478, 527, 479, 480, 481, 1207, 0, 1201, 1200,
	0, 0, 0, 0, 1198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 484, 230,
	485, 233, 231, 232, 486, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 487, 488, 489, 0, 241,
	490, 0, 1093, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 491,
	492, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	493, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	494, 495, 0, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 496, 289, 290, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 497, 0, 498, 296,
	0, 297, 298, 299, 300, 1206, 500, 501, 353, 968,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 967, 308, 502, 310, 309, 311, 312,
	313, 503, 0, 504, 0, 315, 969, 505, 970, 316,
	317, 318, 971, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 506, 972, 329,
	330, 973, 0, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 345,
	343, 974, 346, 347, 350, 349, 975, 348, 0, 0,
	976, 351, 0, 507, 352, 508, 354, 355, 0, 356,
	357, 358, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 510, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 511, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 513, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 514, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 418, 420, 421, 422, 419, 425, 426, 427, 0,
	428, 408, 409, 429, 430, 980, 431, 432, 515, 433,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 444,
	440, 441, 442, 516, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 453, 0, 454, 517, 518,
	519, 520, 0, 461, 0, 455, 456, 521, 457, 522,
	0, 458, 459, 460, 0, 462, 463, 0, 0, 464,
	465, 466, 467, 468, 470, 0, 471, 0, 469, 472,
	473, 474, 523, 524, 525, 0, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 1196,
	0, 1201, 1200, 0, 0, 0, 0, 1198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	483, 484, 230, 485, 233, 231, 232, 486, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 487, 488,
	489, 0, 241, 490, 0, 1093, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 491, 492, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 493, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 494, 495, 0, 216, 0, 0, 0,
	0, 0, 286, 287, 288, 496, 289, 290, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 497,
	0, 498, 296, 0, 297, 298, 299, 300, 1195, 500,
	501, 353, 968, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 967, 308, 502, 310,
	309, 311, 312, 313, 503, 0, 504, 0, 315, 969,
	505, 970, 316, 317, 318, 971, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	506, 972, 329, 330, 973, 0, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 339, 341, 338, 340,
	342, 344, 345, 343, 974, 346, 347, 350, 349, 975,
	348, 0, 0, 976, 351, 0, 507, 352, 508, 354,
	355, 0, 356, 357, 358, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 509, 977, 365, 978, 510, 366,
	359, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 511, 376, 512, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 513, 386, 387, 0, 388,
	389, 390, 391, 392, 0, 394, 395, 396, 393, 397,
	398, 399, 400, 0, 401, 979, 402, 403, 404, 405,
	514, 406, 0, 407, 411, 412, 413, 414, 415, 416,
	417, 0, 423, 424, 418, 420, 421, 422, 419, 425,
	426, 427, 0, 428, 408, 409, 429, 430, 980, 431,
	432, 515, 433, 434, 0, 435, 436, 437, 438, 410,
	439, 443, 444, 440, 441, 442, 516, 0, 446, 447,
	445, 0, 448, 449, 450, 451, 452, 280, 453, 0,
	454, 517, 518, 519, 520, 0, 461, 0, 455, 456,
	521, 457, 522, 0, 458, 459, 460, 0, 462, 463,
	0, 0, 464, 465, 466, 467, 468, 470, 0, 471,
	0, 469, 472, 473, 474, 523, 524, 525, 0, 476,
	475, 526, 0, 0, 0, 0, 477, 478, 527, 479,
	480, 481, 1201, 1200, 0, 0, 0, 0, 1198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 0, 241, 490, 0, 1093, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 965, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 966, 293, 294, 0, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 499,
	500, 501, 353, 968, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 967, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	969, 505, 970, 316, 317, 318, 971, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 972, 329, 330, 973, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 974, 346, 347, 350, 349,
	975, 348, 0, 0, 976, 351, 0, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 977, 365, 978, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 979, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 0, 428, 408, 409, 429, 430, 980,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 213,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 216, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 499, 500, 501, 353,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 217,
	305, 307, 314, 0, 0, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 0, 505, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 0, 346, 347, 350, 349, 0, 348, 0,
	218, 0, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 0, 365, 0, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 386, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 0,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 0, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 0,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 523, 524, 525, 0, 476, 475, 526,
	1201, 1200, 0, 0, 477, 478, 527, 479, 480, 481,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 608, 0, 0, 0, 482,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	484, 230, 485, 233, 231, 232, 486, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 487, 488, 489,
	0, 241, 490, 0, 1093, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 965, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 491, 492, 1743, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 493, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 494, 495, 0, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 496, 289, 290, 0, 291, 0,
	292, 0, 0, 966, 293, 294, 0, 295, 497, 0,
	498, 296, 0, 297, 298, 299, 300, 499, 500, 501,
	353, 968, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 967, 308, 502, 310, 309,
	311, 312, 313, 503, 0, 504, 0, 315, 969, 505,
	970, 316, 317, 318, 971, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 506,
	972, 329, 330, 973, 0, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 345, 343, 974, 346, 347, 350, 349, 975, 348,
	0, 0, 976, 351, 0, 507, 352, 508, 354, 355,
	0, 356, 357, 358, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 977, 365, 978, 510, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	511, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 513, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 979, 402, 403, 404, 405, 514,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 418, 420, 421, 422, 419, 425, 426,
	427, 0, 428, 408, 409, 429, 430, 980, 431, 432,
	515, 433, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 444, 440, 441, 442, 516, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 453, 0, 454,
	517, 518, 519, 520, 0, 461, 0, 455, 456, 521,
	457, 522, 0, 458, 459, 460, 0, 462, 463, 0,
	0, 464, 465, 466, 467, 468, 470, 0, 471, 0,
	469, 472, 473, 474, 523, 524, 525, 0, 476, 475,
	526, 1201, 1200, 0, 0, 477, 478, 527, 479, 480,
	481, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	483, 484, 230, 485, 233, 231, 232, 486, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 487, 488,
	489, 0, 241, 490, 0, 1093, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 965, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 491, 492, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 493, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 494, 495, 0, 216, 0, 0, 0,
	0, 0, 286, 287, 288, 496, 289, 290, 0, 291,
	0, 292, 0, 0, 966, 293, 294, 0, 295, 497,
	0, 498, 296, 0, 297, 298, 299, 300, 499, 500,
	501, 353, 968, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 967, 308, 502, 310,
	309, 311, 312, 313, 503, 0, 504, 0, 315, 969,
	505, 970, 316, 317, 318, 971, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	506, 972, 329, 330, 973, 0, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 339, 341, 338, 340,
	342, 344, 345, 343, 974, 346, 347, 350, 349, 975,
	348, 0, 0, 976, 351, 0, 507, 352, 508, 354,
	355, 0, 356, 357, 358, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 509, 977, 365, 978, 510, 366,
	359, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 511, 376, 512, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 513, 386, 387, 0, 388,
	389, 390, 391, 392, 0, 394, 395, 396, 393, 397,
	398, 399, 400, 0, 401, 979, 402, 403, 404, 405,
	514, 406, 0, 407, 411, 412, 413, 414, 415, 416,
	417, 0, 423, 424, 418, 420, 421, 422, 419, 425,
	426, 427, 0, 428, 408, 409, 429, 430, 980, 431,
	432, 515, 433, 434, 0, 435, 436, 437, 438, 410,
	439, 443, 444, 440, 441, 442, 516, 0, 446, 447,
	445, 0, 448, 449, 450, 451, 452, 280, 453, 0,
	454, 517, 518, 519, 520, 0, 461, 0, 455, 456,
	521, 457, 522, 0, 458, 459, 460, 0, 462, 463,
	0, 0, 464, 465, 466, 467, 468, 470, 0, 471,
	0, 469, 472, 473, 474, 523, 524, 525, 1201, 476,
	475, 526, 0, 0, 0, 0, 477, 478, 527, 479,
	480, 481, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 484, 230,
	485, 233, 231, 232, 486, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 487, 488, 489, 0, 241,
	490, 0, 1093, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 965, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 491,
	492, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	493, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	494, 495, 0, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 496, 289, 290, 0, 291, 0, 292, 0,
	0, 966, 293, 294, 0, 295, 497, 0, 498, 296,
	0, 297, 298, 299, 300, 499, 500, 501, 353, 968,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 967, 308, 502, 310, 309, 311, 312,
	313, 503, 0, 504, 0, 315, 969, 505, 970, 316,
	317, 318, 971, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 506, 972, 329,
	330, 973, 0, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 345,
	343, 974, 346, 347, 350, 349, 975, 348, 0, 0,
	976, 351, 0, 507, 352, 508, 354, 355, 0, 356,
	357, 358, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 977, 365, 978, 510, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 511, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 513, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 979, 402, 403, 404, 405, 514, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 418, 420, 421, 422, 419, 425, 426, 427, 0,
	428, 408, 409, 429, 430, 980, 431, 432, 515, 433,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 444,
	440, 441, 442, 516, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 453, 0, 454, 517, 518,
	519, 520, 0, 461, 0, 455, 456, 521, 457, 522,
	0, 458, 459, 460, 0, 462, 463, 0, 0, 464,
	465, 466, 467, 468, 470, 0, 471, 0, 469, 472,
	473, 474, 523, 524, 525, 213, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 487, 488, 489, 2336, 241, 490, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 2333, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 491, 492, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 0,
	2492, 0, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 0, 292, 2339, 0, 0, 293,
	294, 0, 295, 497, 0, 498, 296, 0, 297, 298,
	299, 300, 499, 500, 501, 353, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 2489, 305, 307, 314, 0,
	0, 308, 502, 310, 309, 311, 312, 313, 503, 0,
	504, 0, 2491, 0, 505, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 506, 0, 329, 330, 2488, 0,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 0, 346,
	347, 350, 349, 0, 348, 0, 0, 0, 351, 0,
	507, 352, 508, 354, 355, 0, 356, 357, 358, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 509, 0,
	365, 0, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 511, 376, 512, 377, 2338,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 0, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 0, 428, 408, 409,
	429, 430, 0, 431, 432, 515, 433, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 0, 446, 447, 445, 0, 448, 449, 450, 451,
	452, 280, 453, 0, 454, 517, 518, 519, 520, 0,
	461, 0, 455, 456, 521, 457, 522, 0, 458, 459,
	460, 0, 462, 463, 0, 2490, 464, 465, 466, 467,
	468, 470, 0, 471, 0, 469, 472, 473, 474, 523,
	524, 525, 213, 476, 475, 526, 0, 0, 0, 0,
	477, 478, 527, 479, 480, 481, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 2336, 241, 490, 0, 0, 2330, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 2333,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 2339, 0, 0, 293, 294, 0, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 2329,
	500, 501, 353, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	0, 505, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 0, 346, 347, 350, 349,
	0, 348, 0, 0, 0, 351, 0, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 0, 365, 0, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 2338, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 0, 428, 408, 409, 429, 430, 0,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 2337, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 0,
	476, 475, 526, 1431, 0, 213, 0, 477, 478, 527,
	479, 480, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 487, 488, 489, 0, 241, 490, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 491, 492, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 0,
	216, 0, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 497, 0, 498, 296, 0, 297, 298,
	299, 300, 499, 500, 501, 353, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 217, 305, 307, 314, 0,
	0, 308, 502, 310, 309, 311, 312, 313, 503, 0,
	504, 0, 315, 0, 505, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 506, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 0, 346,
	347, 350, 349, 0, 348, 0, 218, 0, 351, 0,
	507, 352, 508, 354, 355, 0, 356, 357, 358, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 509, 0,
	365, 0, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 511, 376, 512, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 0, 1434, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 0, 428, 408, 409,
	429, 430, 0, 431, 432, 515, 433, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 0, 446, 447, 445, 1432, 448, 449, 450, 451,
	452, 280, 453, 0, 454, 517, 518, 519, 520, 0,
	461, 0, 455, 456, 521, 457, 522, 0, 458, 459,
	460, 0, 462, 463, 0, 0, 464, 465, 466, 467,
	468, 470, 0, 471, 0, 469, 472, 473, 474, 523,
	524, 525, 0, 1433, 475, 526, 1177, 0, 213, 0,
	477, 478, 527, 479, 480, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 484, 230,
	485, 233, 231, 232, 486, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 487, 488, 489, 0, 241,
	490, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 491,
	492, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	493, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	494, 495, 0, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 496, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 497, 0, 498, 296,
	0, 297, 298, 299, 300, 1179, 500, 501, 353, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 217, 305,
	307, 314, 0, 0, 308, 502, 310, 309, 311, 312,
	313, 503, 0, 504, 0, 315, 0, 505, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 506, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 345,
	343, 0, 346, 347, 350, 349, 0, 348, 0, 218,
	0, 351, 0, 507, 352, 508, 354, 355, 0, 356,
	357, 358, 0, 1022, 360, 361, 362, 0, 0, 363,
	364, 509, 0, 365, 0, 510, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 511, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 513, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 514, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 418, 420, 421, 422, 419, 425, 426, 427, 0,
	428, 408, 409, 429, 430, 0, 431, 432, 515, 433,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 444,
	440, 441, 442, 516, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 453, 0, 454, 517, 518,
	519, 520, 0, 461, 0, 455, 456, 521, 457, 522,
	0, 458, 459, 460, 0, 462, 463, 0, 0, 464,
	465, 466, 467, 468, 470, 0, 471, 0, 469, 472,
	473, 474, 523, 524, 525, 0, 476, 475, 526, 1174,
	0, 213, 0, 477, 478, 527, 479, 480, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	483, 484, 230, 485, 233, 231, 232, 486, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 487, 488,
	489, 0, 241, 490, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 491, 492, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 493, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 494, 495, 0, 216, 0, 0, 0,
	0, 0, 286, 287, 288, 496, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 497,
	0, 498, 296, 0, 297, 298, 299, 300, 1176, 500,
	501, 353, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 217, 305, 307, 314, 0, 0, 308, 502, 310,
	309, 311, 312, 313, 503, 0, 504, 0, 315, 0,
	505, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	506, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 339, 341, 338, 340,
	342, 344, 345, 343, 0, 346, 347, 350, 349, 0,
	348, 0, 218, 0, 351, 0, 507, 352, 508, 354,
	355, 0, 356, 357, 358, 0, 1022, 360, 361, 362,
	0, 0, 363, 364, 509, 0, 365, 0, 510, 366,
	359, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 511, 376, 512, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 513, 386, 387, 0, 388,
	389, 390, 391, 392, 0, 394, 395, 396, 393, 397,
	398, 399, 400, 0, 401, 0, 402, 403, 404, 405,
	514, 406, 0, 407, 411, 412, 413, 414, 415, 416,
	417, 0, 423, 424, 418, 420, 421, 422, 419, 425,
	426, 427, 0, 428, 408, 409, 429, 430, 0, 431,
	432, 515, 433, 434, 0, 435, 436, 437, 438, 410,
	439, 443, 444, 440, 441, 442, 516, 0, 446, 447,
	445, 0, 448, 449, 450, 451, 452, 280, 453, 0,
	454, 517, 518, 519, 520, 0, 461, 0, 455, 456,
	521, 457, 522, 0, 458, 459, 460, 0, 462, 463,
	0, 0, 464, 465, 466, 467, 468, 470, 0, 471,
	0, 469, 472, 473, 474, 523, 524, 525, 0, 476,
	475, 526, 1081, 0, 213, 0, 477, 478, 527, 479,
	480, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 484, 230, 485, 233, 231, 232,
	486, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 487, 488, 489, 0, 241, 490, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 491, 492, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 493, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 494, 495, 0, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 496, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 497, 0, 498, 296, 0, 297, 298, 299,
	300, 1083, 500, 501, 353, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 217, 305, 307, 314, 0, 0,
	308, 502, 310, 309, 311, 312, 313, 503, 0, 504,
	0, 315, 0, 505, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 506, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 345, 343, 0, 346, 347,
	350, 349, 0, 348, 0, 218, 0, 351, 0, 507,
	352, 508, 354, 355, 0, 356, 357, 358, 0, 1022,
	360, 361, 362, 0, 0, 363, 364, 509, 0, 365,
	0, 510, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 511, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 513, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 514, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 418, 420, 421,
	422, 419, 425, 426, 427, 0, 428, 408, 409, 429,
	430, 0, 431, 432, 515, 433, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 444, 440, 441, 442, 516,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 453, 0, 454, 517, 518, 519, 520, 0, 461,
	0, 455, 456, 521, 457, 522, 0, 458, 459, 460,
	0, 462, 463, 0, 0, 464, 465, 466, 467, 468,
	470, 0, 471, 0, 469, 472, 473, 474, 523, 524,
	525, 0, 476, 475, 526, 556, 0, 213, 0, 477,
	478, 527, 479, 480, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 555, 223, 545,
	224, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 487, 488, 489, 0, 241, 490,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	548, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 491, 492,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 549, 295, 497, 0, 498, 296, 0,
	297, 298, 299, 300, 499, 500, 501, 353, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 502, 310, 309, 311, 312, 313,
	503, 0, 504, 0, 315, 0, 505, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 506, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 343,
	0, 346, 347, 350, 349, 0, 348, 0, 0, 0,
	351, 0, 507, 352, 508, 354, 355, 0, 356, 357,
	358, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	509, 0, 365, 0, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 511, 376, 512,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 0, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 514, 406, 0, 407,
	411, 412, 413, 414, 415, 416, 417, 550, 423, 424,
	418, 420, 421, 422, 419, 425, 426, 427, 0, 428,
	408, 409, 429, 430, 0, 431, 432, 515, 433, 434,
	0, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 0, 446, 447, 445, 0, 448, 449,
	450, 451, 452, 280, 453, 0, 454, 517, 518, 519,
	520, 0, 461, 0, 455, 456, 521, 457, 522, 0,
	458, 459, 460, 0, 462, 463, 0, 0, 464, 465,
	466, 467, 468, 470, 0, 471, 0, 469, 472, 473,
	474, 523, 524, 525, 0, 476, 475, 526, 544, 0,
	213, 0, 477, 478, 527, 479, 480, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 545, 224, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	484, 230, 485, 233, 231, 232, 486, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 487, 488, 489,
	0, 241, 490, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 548, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 491, 492, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 493, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 494, 495, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 496, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 549, 295, 497, 0,
	498, 296, 0, 297, 298, 299, 300, 499, 500, 501,
	353, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 502, 310, 309,
	311, 312, 313, 503, 0, 504, 0, 315, 0, 505,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 506,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 345, 343, 0, 346, 347, 350, 349, 0, 348,
	0, 0, 0, 351, 0, 507, 352, 508, 354, 355,
	0, 356, 357, 358, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 0, 365, 0, 510, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	511, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 513, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 514,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	550, 423, 424, 418, 420, 421, 422, 419, 425, 426,
	427, 0, 428, 408, 409, 429, 430, 0, 431, 432,
	515, 433, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 444, 440, 441, 442, 516, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 453, 0, 454,
	517, 518, 519, 520, 0, 461, 0, 455, 456, 521,
	457, 522, 0, 458, 459, 460, 0, 462, 463, 0,
	0, 464, 465, 466, 467, 468, 470, 0, 471, 0,
	469, 472, 473, 474, 523, 524, 525, 213, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 487, 488, 489, 0, 241, 490,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 491, 492,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 0, 216, 0, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 497, 0, 498, 296, 0,
	297, 298, 299, 300, 499, 500, 501, 353, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 217, 305, 307,
	314, 0, 0, 308, 502, 310, 309, 311, 312, 313,
	503, 0, 504, 0, 315, 0, 505, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 506, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 343,
	0, 346, 347, 350, 349, 2820, 348, 0, 218, 0,
	351, 0, 507, 352, 508, 354, 355, 0, 356, 357,
	358, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	509, 0, 365, 0, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 511, 376, 512,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 0, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 514, 406, 0, 407,
	411, 412, 413, 414, 415, 416, 417, 0, 423, 424,
	418, 420, 421, 422, 419, 425, 426, 427, 0, 428,
	408, 409, 429, 430, 0, 431, 432, 515, 433, 434,
	0, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 0, 446, 447, 445, 0, 448, 449,
	450, 451, 452, 280, 453, 0, 454, 517, 518, 519,
	520, 0, 461, 0, 455, 456, 521, 457, 522, 0,
	458, 459, 460, 0, 462, 463, 0, 0, 464, 465,
	466, 467, 468, 470, 0, 471, 0, 469, 472, 473,
	474, 523, 524, 525, 213, 476, 475, 526, 0, 0,
	0, 0, 477, 478, 527, 479, 480, 481, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 484, 230, 485, 233, 231, 232,
	486, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 487, 488, 489, 0, 241, 490, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 491, 492, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 493, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 494, 495, 0, 216,
	0, 0, 0, 0, 0, 286, 287, 288, 496, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 497, 0, 498, 296, 0, 297, 298, 299,
	300, 499, 500, 501, 353, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 217, 305, 307, 314, 0, 0,
	308, 502, 310, 309, 311, 312, 313, 503, 0, 504,
	0, 315, 0, 505, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 506, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 345, 343, 0, 346, 347,
	350, 349, 0, 348, 0, 218, 0, 351, 0, 507,
	352, 508, 354, 355, 0, 356, 357, 358, 0, 1022,
	360, 361, 362, 0, 0, 363, 364, 509, 0, 365,
	0, 510, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 511, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 513, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 514, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 418, 420, 421,
	422, 419, 425, 426, 427, 0, 428, 408, 409, 429,
	430, 0, 431, 432, 515, 433, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 444, 440, 441, 442, 516,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 453, 0, 454, 517, 518, 519, 520, 0, 461,
	0, 455, 456, 521, 457, 522, 0, 458, 459, 460,
	0, 462, 463, 0, 0, 464, 465, 466, 467, 468,
	470, 0, 471, 0, 469, 472, 473, 474, 523, 524,
	525, 0, 476, 475, 526, 2428, 0, 213, 0, 477,
	478, 527, 479, 480, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 487, 488, 489, 0, 241, 490,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 491, 492,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 0, 216, 0, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 497, 0, 498, 296, 0,
	297, 298, 299, 300, 2427, 500, 501, 353, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 217, 305, 307,
	314, 0, 0, 308, 502, 310, 309, 311, 312, 313,
	503, 0, 504, 0, 315, 0, 505, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 506, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 343,
	0, 346, 347, 350, 349, 0, 348, 0, 218, 0,
	351, 0, 507, 352, 508, 354, 355, 0, 356, 357,
	358, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	509, 0, 365, 0, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 511, 376, 512,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 0, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 514, 406, 0, 407,
	411, 412, 413, 414, 415, 416, 417, 0, 423, 424,
	418, 420, 421, 422, 419, 425, 426, 427, 0, 428,
	408, 409, 429, 430, 0, 431, 432, 515, 433, 434,
	0, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 0, 446, 447, 445, 0, 448, 449,
	450, 451, 452, 280, 453, 0, 454, 517, 518, 519,
	520, 0, 461, 0, 455, 456, 521, 457, 522, 0,
	458, 459, 460, 0, 462, 463, 0, 0, 464, 465,
	466, 467, 468, 470, 0, 471, 0, 469, 472, 473,
	474, 523, 524, 525, 0, 476, 475, 526, 1939, 0,
	213, 0, 477, 478, 527, 479, 480, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	484, 230, 485, 233, 231, 232, 486, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 487, 488, 489,
	0, 241, 490, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 491, 492, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 493, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 494, 495, 0, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 496, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 497, 0,
	498, 296, 0, 297, 298, 299, 300, 499, 500, 501,
	353, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	217, 305, 307, 314, 0, 0, 308, 502, 310, 309,
	311, 312, 313, 503, 0, 504, 0, 315, 0, 505,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 506,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 345, 343, 0, 346, 347, 350, 349, 0, 348,
	0, 218, 0, 351, 0, 507, 352, 508, 354, 355,
	0, 356, 357, 358, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 0, 365, 0, 510, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	511, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 513, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 514,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 418, 420, 421, 422, 419, 425, 426,
	427, 0, 428, 408, 409, 429, 430, 0, 431, 432,
	515, 433, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 444, 440, 441, 442, 516, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 453, 0, 454,
	517, 518, 519, 520, 0, 461, 0, 455, 456, 521,
	457, 522, 0, 458, 459, 460, 0, 462, 463, 0,
	0, 464, 465, 466, 467, 468, 470, 0, 471, 0,
	469, 472, 473, 474, 523, 524, 525, 213, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 487, 488, 489, 0, 241, 490,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 491, 492,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 0, 216, 0, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 497, 0, 498, 296, 0,
	297, 298, 299, 300, 499, 500, 501, 353, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 217, 305, 307,
	314, 0, 0, 308, 502, 310, 309, 311, 312, 313,
	503, 0, 504, 0, 315, 0, 505, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 506, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 343,
	0, 346, 347, 350, 349, 0, 348, 0, 218, 0,
	351, 0, 507, 352, 508, 354, 355, 0, 356, 357,
	358, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	509, 0, 365, 0, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 511, 376, 512,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 0, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 514, 406, 0, 407,
	411, 412, 413, 414, 415, 416, 417, 0, 423, 424,
	418, 420, 421, 422, 419, 425, 426, 427, 0, 428,
	408, 409, 429, 430, 0, 431, 432, 515, 433, 434,
	0, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 0, 446, 447, 445, 1865, 448, 449,
	450, 451, 452, 280, 453, 0, 454, 517, 518, 519,
	520, 0, 461, 0, 455, 456, 521, 457, 522, 0,
	458, 459, 460, 0, 462, 463, 0, 0, 464, 465,
	466, 467, 468, 470, 0, 471, 0, 469, 472, 473,
	474, 523, 524, 525, 0, 476, 475, 526, 1869, 0,
	213, 0, 477, 478, 527, 479, 480, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	484, 230, 485, 233, 231, 232, 486, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 487, 488, 489,
	0, 241, 490, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 491, 492, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 493, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 494, 495, 0, 216, 0, 0, 0, 0,
	0, 286, 287, 288, 496, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 497, 0,
	498, 296, 0, 297, 298, 299, 300, 1868, 500, 501,
	353, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	217, 305, 307, 314, 0, 0, 308, 502, 310, 309,
	311, 312, 313, 503, 0, 504, 0, 315, 0, 505,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 506,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 345, 343, 0, 346, 347, 350, 349, 0, 348,
	0, 218, 0, 351, 0, 507, 352, 508, 354, 355,
	0, 356, 357, 358, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 0, 365, 0, 510, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	511, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 513, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 514,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 418, 420, 421, 422, 419, 425, 426,
	427, 0, 428, 408, 409, 429, 430, 0, 431, 432,
	515, 433, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 444, 440, 441, 442, 516, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 453, 0, 454,
	517, 518, 519, 520, 0, 461, 0, 455, 456, 521,
	457, 522, 0, 458, 459, 460, 0, 462, 463, 0,
	0, 464, 465, 466, 467, 468, 470, 0, 471, 0,
	469, 472, 473, 474, 523, 524, 525, 0, 476, 475,
	526, 1858, 0, 213, 0, 477, 478, 527, 479, 480,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	487, 488, 489, 0, 241, 490, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 491, 492, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 0, 216, 0,
	0, 0, 0, 0, 286, 287, 288, 496, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 497, 0, 498, 296, 0, 297, 298, 299, 300,
	1860, 500, 501, 353, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 217, 305, 307, 314, 0, 0, 308,
	502, 310, 309, 311, 312, 313, 503, 0, 504, 0,
	315, 0, 505, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 506, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 0, 346, 347, 350,
	349, 0, 348, 0, 218, 0, 351, 0, 507, 352,
	508, 354, 355, 0, 356, 357, 358, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 509, 0, 365, 0,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 511, 376, 512, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 513, 386, 387,
	0, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 0, 401, 0, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 414,
	415, 416, 417, 0, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 0, 428, 408, 409, 429, 430,
	0, 431, 432, 515, 433, 434, 0, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 0,
	446, 447, 445, 0, 448, 449, 450, 451, 452, 280,
	453, 0, 454, 517, 518, 519, 520, 0, 461, 0,
	455, 456, 521, 457, 522, 0, 458, 459, 460, 0,
	462, 463, 0, 0, 464, 465, 466, 467, 468, 470,
	0, 471, 0, 469, 472, 473, 474, 523, 524, 525,
	0, 476, 475, 526, 1327, 0, 213, 0, 477, 478,
	527, 479, 480, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 487, 488, 489, 0, 241, 490, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	0, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 497, 0, 498, 296, 0, 297,
	298, 299, 300, 1326, 500, 501, 353, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 217, 305, 307, 314,
	0, 0, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 0, 315, 0, 505, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 506, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 0,
	346, 347, 350, 349, 0, 348, 0, 218, 0, 351,
	0, 507, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	0, 365, 0, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 511, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 0, 428, 408,
	409, 429, 430, 0, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 517, 518, 519, 520,
	0, 461, 0, 455, 456, 521, 457, 522, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 0, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 0, 476, 475, 526, 1324, 0, 213,
	0, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 216, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 1323, 500, 501, 353,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 217,
	305, 307, 314, 0, 0, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 0, 505, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 0, 346, 347, 350, 349, 0, 348, 0,
	218, 0, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 0, 365, 0, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 386, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 0,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 0, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 0,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 523, 524, 525, 0, 476, 475, 526,
	1321, 0, 213, 0, 477, 478, 527, 479, 480, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 0, 241, 490, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 216, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 1320,
	500, 501, 353, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 217, 305, 307, 314, 0, 0, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	0, 505, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 0, 346, 347, 350, 349,
	0, 348, 0, 218, 0, 351, 0, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 0, 365, 0, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 0, 428, 408, 409, 429, 430, 0,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 0,
	476, 475, 526, 1317, 0, 213, 0, 477, 478, 527,
	479, 480, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 487, 488, 489, 0, 241, 490, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 491, 492, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 0,
	216, 0, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 497, 0, 498, 296, 0, 297, 298,
	299, 300, 1316, 500, 501, 353, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 217, 305, 307, 314, 0,
	0, 308, 502, 310, 309, 311, 312, 313, 503, 0,
	504, 0, 315, 0, 505, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 506, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 0, 346,
	347, 350, 349, 0, 348, 0, 218, 0, 351, 0,
	507, 352, 508, 354, 355, 0, 356, 357, 358, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 509, 0,
	365, 0, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 511, 376, 512, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 0, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 0, 428, 408, 409,
	429, 430, 0, 431, 432, 515, 433, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 0, 446, 447, 445, 0, 448, 449, 450, 451,
	452, 280, 453, 0, 454, 517, 518, 519, 520, 0,
	461, 0, 455, 456, 521, 457, 522, 0, 458, 459,
	460, 0, 462, 463, 0, 0, 464, 465, 466, 467,
	468, 470, 0, 471, 0, 469, 472, 473, 474, 523,
	524, 525, 0, 476, 475, 526, 1188, 0, 213, 0,
	477, 478, 527, 479, 480, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 484, 230,
	485, 233, 231, 232, 486, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 487, 488, 489, 0, 241,
	490, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 491,
	492, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	493, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	494, 495, 0, 216, 0, 0, 0, 0, 0, 286,
	287, 288, 496, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 497, 0, 498, 296,
	0, 297, 298, 299, 300, 1190, 500, 501, 353, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 217, 305,
	307, 314, 0, 0, 308, 502, 310, 309, 311, 312,
	313, 503, 0, 504, 0, 315, 0, 505, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 506, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 345,
	343, 0, 346, 347, 350, 349, 0, 348, 0, 218,
	0, 351, 0, 507, 352, 508, 354, 355, 0, 356,
	357, 358, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 0, 365, 0, 510, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 511, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 513, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 514, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 418, 420, 421, 422, 419, 425, 426, 427, 0,
	428, 408, 409, 429, 430, 0, 431, 432, 515, 433,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 444,
	440, 441, 442, 516, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 453, 0, 454, 517, 518,
	519, 520, 0, 461, 0, 455, 456, 521, 457, 522,
	0, 458, 459, 460, 0, 462, 463, 0, 0, 464,
	465, 466, 467, 468, 470, 0, 471, 0, 469, 472,
	473, 474, 523, 524, 525, 213, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 487, 488, 489, 0, 241, 490, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 491, 492, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 0,
	216, 0, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 497, 0, 498, 296, 0, 297, 298,
	299, 300, 499, 500, 501, 353, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 217, 305, 307, 314, 0,
	0, 308, 502, 310, 309, 311, 312, 313, 503, 0,
	504, 0, 315, 0, 505, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 506, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 0, 346,
	347, 350, 349, 0, 348, 0, 218, 0, 351, 0,
	507, 352, 508, 354, 355, 0, 356, 357, 358, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 509, 0,
	365, 0, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 511, 376, 512, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 0, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 0, 428, 408, 409,
	429, 430, 0, 431, 432, 515, 433, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 0, 446, 447, 445, 0, 448, 449, 450, 451,
	452, 280, 453, 0, 454, 517, 518, 519, 520, 0,
	461, 0, 455, 456, 521, 457, 522, 0, 458, 459,
	460, 0, 462, 463, 0, 0, 464, 465, 466, 467,
	468, 470, 0, 471, 0, 469, 472, 473, 474, 523,
	524, 525, 213, 476, 475, 526, 0, 0, 0, 0,
	477, 478, 527, 479, 480, 481, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 0, 241, 490, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 548, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 549, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 499,
	500, 501, 353, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	0, 505, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 0, 346, 347, 350, 349,
	0, 348, 0, 0, 0, 351, 0, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 0, 365, 0, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 550, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 0, 428, 408, 409, 429, 430, 0,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 213,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 1970, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 216, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 499, 500, 501, 353,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 217,
	305, 307, 314, 0, 0, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 0, 505, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 0, 346, 347, 350, 349, 0, 348, 0,
	218, 0, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 0, 365, 0, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 386, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 0,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 0, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 0,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 523, 524, 525, 213, 476, 475, 526,
	0, 0, 0, 0, 477, 478, 527, 479, 480, 481,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 487, 488, 489, 0, 241, 490, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 1968, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	0, 216, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 497, 0, 498, 296, 0, 297,
	298, 299, 300, 499, 500, 501, 353, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 217, 305, 307, 314,
	0, 0, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 0, 315, 0, 505, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 506, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 0,
	346, 347, 350, 349, 0, 348, 0, 218, 0, 351,
	0, 507, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	0, 365, 0, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 511, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 0, 428, 408,
	409, 429, 430, 0, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 517, 518, 519, 520,
	0, 461, 0, 455, 456, 521, 457, 522, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 0, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 213, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	487, 488, 489, 0, 241, 490, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	1966, 262, 263, 264, 491, 492, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 0, 216, 0,
	0, 0, 0, 0, 286, 287, 288, 496, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 497, 0, 498, 296, 0, 297, 298, 299, 300,
	499, 500, 501, 353, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 217, 305, 307, 314, 0, 0, 308,
	502, 310, 309, 311, 312, 313, 503, 0, 504, 0,
	315, 0, 505, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 506, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 0, 346, 347, 350,
	349, 0, 348, 0, 218, 0, 351, 0, 507, 352,
	508, 354, 355, 0, 356, 357, 358, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 509, 0, 365, 0,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 511, 376, 512, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 513, 386, 387,
	0, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 0, 401, 0, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 414,
	415, 416, 417, 0, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 0, 428, 408, 409, 429, 430,
	0, 431, 432, 515, 433, 434, 0, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 0,
	446, 447, 445, 0, 448, 449, 450, 451, 452, 280,
	453, 0, 454, 517, 518, 519, 520, 0, 461, 0,
	455, 456, 521, 457, 522, 0, 458, 459, 460, 0,
	462, 463, 0, 0, 464, 465, 466, 467, 468, 470,
	0, 471, 0, 469, 472, 473, 474, 523, 524, 525,
	0, 476, 475, 526, 700, 0, 213, 0, 477, 478,
	527, 479, 480, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 487, 488, 489, 0, 241, 490, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 497, 0, 498, 296, 0, 297,
	298, 299, 300, 499, 500, 501, 353, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 699, 315, 0, 505, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 506, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 0,
	346, 347, 350, 349, 0, 348, 0, 0, 0, 351,
	0, 507, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	0, 365, 0, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 511, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 0, 428, 408,
	409, 429, 430, 0, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 0, 446, 447, 445, 698, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 517, 518, 519, 520,
	0, 461, 0, 455, 456, 521, 457, 522, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 0, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 213, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	487, 488, 489, 0, 241, 490, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 491, 492, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 0, 2492, 0,
	0, 0, 0, 0, 286, 287, 288, 496, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 497, 0, 498, 296, 0, 297, 298, 299, 300,
	499, 500, 501, 353, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	502, 310, 309, 311, 312, 313, 503, 0, 504, 0,
	315, 0, 505, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 506, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 0, 346, 347, 350,
	349, 0, 348, 0, 0, 0, 351, 0, 507, 352,
	508, 354, 355, 0, 356, 357, 358, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 509, 0, 365, 0,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 511, 376, 512, 377, 3330, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 513, 386, 387,
	0, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 0, 401, 0, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 414,
	415, 416, 417, 0, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 0, 428, 408, 409, 429, 430,
	0, 431, 432, 515, 433, 434, 0, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 0,
	446, 447, 445, 0, 448, 449, 450, 451, 452, 280,
	453, 0, 454, 517, 518, 519, 520, 0, 461, 0,
	455, 456, 521, 457, 522, 0, 458, 459, 460, 0,
	462, 463, 0, 0, 464, 465, 466, 467, 468, 470,
	0, 471, 0, 469, 472, 473, 474, 523, 524, 525,
	0, 476, 475, 526, 535, 0, 213, 0, 477, 478,
	527, 479, 480, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 534, 224,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 487, 488, 489, 0, 241, 490, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 497, 0, 498, 296, 0, 297,
	298, 299, 300, 499, 500, 501, 353, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 0, 315, 0, 505, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 506, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 0,
	346, 347, 350, 349, 0, 348, 0, 0, 0, 351,
	0, 507, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	0, 365, 0, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 511, 376, 512, 533,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 0, 428, 408,
	409, 429, 430, 0, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 517, 518, 519, 520,
	0, 461, 0, 455, 456, 521, 457, 522, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 0, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 0, 476, 475, 526, 213, 3339, 0,
	0, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 487, 488, 489, 0, 241, 490,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 491, 492,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 497, 0, 498, 296, 0,
	297, 298, 299, 300, 499, 500, 501, 353, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 502, 310, 309, 311, 312, 313,
	503, 0, 504, 0, 315, 0, 505, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 506, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 343,
	0, 346, 347, 350, 349, 0, 348, 0, 0, 0,
	351, 0, 507, 352, 508, 354, 355, 0, 356, 357,
	358, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	509, 0, 365, 0, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 511, 376, 512,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 0, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 514, 406, 0, 407,
	411, 412, 413, 414, 415, 416, 417, 0, 423, 424,
	418, 420, 421, 422, 419, 425, 426, 427, 0, 428,
	408, 409, 429, 430, 0, 431, 432, 515, 433, 434,
	0, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 0, 446, 447, 445, 0, 448, 449,
	450, 451, 452, 280, 453, 0, 454, 517, 518, 519,
	520, 0, 461, 0, 455, 456, 521, 457, 522, 0,
	458, 459, 460, 0, 462, 463, 0, 0, 464, 465,
	466, 467, 468, 470, 0, 471, 0, 469, 472, 473,
	474, 523, 524, 525, 0, 476, 475, 526, 213, 2479,
	0, 0, 477, 478, 527, 479, 480, 481, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 484, 230,
	485, 233, 231, 232, 486, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 487, 488, 489, 0, 241,
	490, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 491,
	492, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	493, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	494, 495, 0, 0, 0, 0, 0, 0, 0, 286,
	287, 288, 496, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 497, 0, 498, 296,
	0, 297, 298, 299, 300, 499, 500, 501, 353, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 0, 308, 502, 310, 309, 311, 312,
	313, 503, 0, 504, 0, 315, 0, 505, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 506, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 345,
	343, 0, 346, 347, 350, 349, 0, 348, 0, 0,
	0, 351, 0, 507, 352, 508, 354, 355, 0, 356,
	357, 358, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 0, 365, 0, 510, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 511, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 513, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 514, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 418, 420, 421, 422, 419, 425, 426, 427, 0,
	428, 408, 409, 429, 430, 0, 431, 432, 515, 433,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 444,
	440, 441, 442, 516, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 453, 0, 454, 517, 518,
	519, 520, 0, 461, 0, 455, 456, 521, 457, 522,
	0, 458, 459, 460, 0, 462, 463, 0, 0, 464,
	465, 466, 467, 468, 470, 0, 471, 0, 469, 472,
	473, 474, 523, 524, 525, 213, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 487, 488, 489, 0, 241, 490, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 491, 492, 3121, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 497, 0, 498, 296, 0, 297, 298,
	299, 300, 499, 500, 501, 353, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 502, 310, 309, 311, 312, 313, 503, 0,
	504, 0, 315, 0, 505, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 506, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 0, 346,
	347, 350, 349, 0, 348, 0, 0, 0, 351, 0,
	507, 352, 508, 354, 355, 0, 356, 357, 358, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 509, 0,
	365, 0, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 511, 376, 512, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 0, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 0, 428, 408, 409,
	429, 430, 0, 431, 432, 515, 433, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 0, 446, 447, 445, 0, 448, 449, 450, 451,
	452, 280, 453, 0, 454, 517, 518, 519, 520, 0,
	461, 0, 455, 456, 521, 457, 522, 0, 458, 459,
	460, 0, 462, 463, 0, 0, 464, 465, 466, 467,
	468, 470, 0, 471, 0, 469, 472, 473, 474, 523,
	524, 525, 213, 476, 475, 526, 0, 0, 0, 0,
	477, 478, 527, 479, 480, 481, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 0, 2261, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 0, 241, 490, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 499,
	500, 501, 353, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	0, 505, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 0, 346, 347, 350, 349,
	0, 348, 0, 0, 0, 351, 0, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 0, 365, 0, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 0, 428, 408, 409, 429, 430, 0,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 0,
	476, 475, 526, 213, 2479, 0, 0, 477, 478, 527,
	479, 480, 481, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	487, 488, 489, 0, 241, 490, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 491, 492, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 496, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 497, 0, 498, 296, 0, 297, 298, 299, 300,
	499, 500, 501, 353, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	502, 310, 309, 311, 312, 313, 503, 0, 504, 0,
	315, 0, 505, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 506, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 0, 346, 347, 350,
	349, 0, 348, 0, 0, 0, 351, 0, 507, 352,
	508, 354, 355, 0, 356, 357, 358, 0, 0, 360,
	361, 2476, 0, 0, 363, 364, 509, 0, 365, 0,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 511, 376, 512, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 513, 386, 387,
	0, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 0, 401, 0, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 414,
	415, 416, 417, 0, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 0, 428, 408, 409, 429, 430,
	0, 431, 432, 515, 433, 434, 0, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 0,
	446, 447, 445, 0, 448, 449, 450, 451, 452, 280,
	453, 0, 454, 517, 518, 519, 520, 0, 461, 0,
	455, 456, 521, 457, 522, 0, 458, 459, 460, 0,
	462, 463, 0, 0, 464, 465, 466, 467, 468, 470,
	0, 471, 0, 469, 472, 473, 474, 523, 524, 525,
	213, 476, 475, 526, 0, 0, 0, 0, 477, 478,
	527, 479, 480, 481, 0, 0, 0, 219, 220, 221,
	222, 223, 1947, 224, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	484, 230, 485, 233, 231, 232, 486, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 487, 488, 489,
	0, 241, 490, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 491, 492, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 493, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 494, 495, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 496, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 497, 0,
	498, 296, 0, 297, 298, 299, 300, 499, 500, 501,
	353, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 502, 310, 309,
	311, 312, 313, 503, 0, 504, 0, 315, 0, 505,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 506,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 345, 343, 0, 346, 347, 350, 349, 0, 348,
	0, 0, 0, 351, 0, 507, 352, 508, 354, 355,
	0, 356, 357, 358, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 0, 365, 0, 510, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	511, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 513, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 514,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 418, 420, 421, 422, 419, 425, 426,
	427, 0, 428, 408, 409, 429, 430, 0, 431, 432,
	515, 433, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 444, 440, 441, 442, 516, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 453, 0, 454,
	517, 518, 519, 520, 0, 461, 0, 455, 456, 521,
	457, 522, 0, 458, 459, 460, 0, 462, 463, 0,
	0, 464, 465, 466, 467, 468, 470, 0, 471, 0,
	469, 472, 473, 474, 523, 524, 525, 0, 476, 475,
	526, 1937, 0, 213, 0, 477, 478, 527, 479, 480,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	487, 488, 489, 0, 241, 490, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 491, 492, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 496, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 497, 0, 498, 296, 0, 297, 298, 299, 300,
	499, 500, 501, 353, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	502, 310, 309, 311, 312, 313, 503, 0, 504, 0,
	315, 0, 505, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 506, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 0, 346, 347, 350,
	349, 0, 348, 0, 0, 0, 351, 0, 507, 352,
	508, 354, 355, 0, 356, 357, 358, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 509, 0, 365, 0,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 511, 376, 512, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 513, 386, 387,
	0, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 0, 401, 0, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 414,
	415, 416, 417, 0, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 0, 428, 408, 409, 429, 430,
	0, 431, 432, 515, 433, 434, 0, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 0,
	446, 447, 445, 0, 448, 449, 450, 451, 452, 280,
	453, 0, 454, 517, 518, 519, 520, 0, 461, 0,
	455, 456, 521, 457, 522, 0, 458, 459, 460, 0,
	462, 463, 0, 0, 464, 465, 466, 467, 468, 470,
	0, 471, 0, 469, 472, 473, 474, 523, 524, 525,
	0, 476, 475, 526, 576, 0, 213, 0, 477, 478,
	527, 479, 480, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	225, 1059, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 487, 488, 1057, 0, 241, 490, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 497, 0, 498, 296, 0, 297,
	298, 299, 300, 499, 500, 501, 353, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 0, 315, 0, 505, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 506, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 577, 0,
	346, 347, 350, 349, 0, 348, 0, 0, 0, 351,
	0, 507, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	0, 365, 0, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 511, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 573, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 1060, 427, 0, 428, 408,
	409, 429, 430, 0, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 572, 518, 519, 520,
	0, 461, 0, 455, 456, 521, 457, 522, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 0, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 0, 476, 475, 526, 1881, 0, 213,
	0, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 1880, 500, 501, 353,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 0, 505, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 0, 346, 347, 350, 349, 0, 348, 0,
	0, 0, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 0, 365, 0, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 386, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 0,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 0, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 0,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 523, 524, 525, 0, 476, 475, 526,
	576, 0, 213, 0, 477, 478, 527, 479, 480, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 0, 566, 490, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 499,
	500, 501, 353, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	0, 505, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 577, 0, 346, 347, 350, 349,
	0, 348, 0, 0, 0, 351, 0, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 0, 365, 0, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 573, 414, 415,
	416, 417, 0, 423, 424, 418, 420, 421, 422, 419,
	425, 1348, 427, 0, 428, 408, 409, 429, 430, 0,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 572, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 0,
	476, 475, 526, 1331, 0, 213, 0, 477, 478, 527,
	479, 480, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 487, 488, 489, 0, 241, 490, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 491, 492, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 497, 0, 498, 296, 0, 297, 298,
	299, 300, 1330, 500, 501, 353, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 502, 310, 309, 311, 312, 313, 503, 0,
	504, 0, 315, 0, 505, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 506, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 0, 346,
	347, 350, 349, 0, 348, 0, 0, 0, 351, 0,
	507, 352, 508, 354, 355, 0, 356, 357, 358, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 509, 0,
	365, 0, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 511, 376, 512, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 0, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 0, 428, 408, 409,
	429, 430, 0, 431, 432, 515, 433, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 0, 446, 447, 445, 0, 448, 449, 450, 451,
	452, 280, 453, 0, 454, 517, 518, 519, 520, 0,
	461, 0, 455, 456, 521, 457, 522, 0, 458, 459,
	460, 0, 462, 463, 0, 0, 464, 465, 466, 467,
	468, 470, 0, 471, 0, 469, 472, 473, 474, 523,
	524, 525, 0, 476, 475, 526, 1278, 0, 213, 0,
	477, 478, 527, 479, 480, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 483, 484, 230,
	485, 233, 231, 232, 486, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 487, 488, 489, 0, 241,
	490, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 491,
	492, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	493, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	494, 495, 0, 0, 0, 0, 0, 0, 0, 286,
	287, 288, 496, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 497, 0, 498, 296,
	0, 297, 298, 299, 300, 1277, 500, 501, 353, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 0, 308, 502, 310, 309, 311, 312,
	313, 503, 0, 504, 0, 315, 0, 505, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 506, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 345,
	343, 0, 346, 347, 350, 349, 0, 348, 0, 0,
	0, 351, 0, 507, 352, 508, 354, 355, 0, 356,
	357, 358, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 0, 365, 0, 510, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 511, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 513, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 514, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 418, 420, 421, 422, 419, 425, 426, 427, 0,
	428, 408, 409, 429, 430, 0, 431, 432, 515, 433,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 444,
	440, 441, 442, 516, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 453, 0, 454, 517, 518,
	519, 520, 0, 461, 0, 455, 456, 521, 457, 522,
	0, 458, 459, 460, 0, 462, 463, 0, 0, 464,
	465, 466, 467, 468, 470, 0, 471, 0, 469, 472,
	473, 474, 523, 524, 525, 0, 476, 475, 526, 1259,
	0, 213, 0, 477, 478, 527, 479, 480, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	483, 484, 230, 485, 233, 231, 232, 486, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 487, 488,
	489, 0, 241, 490, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 491, 492, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 493, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 494, 495, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 496, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 497,
	0, 498, 296, 0, 297, 298, 299, 300, 499, 500,
	501, 353, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 502, 310,
	309, 311, 312, 313, 503, 0, 504, 0, 315, 0,
	505, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	506, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 339, 341, 338, 340,
	342, 344, 345, 343, 0, 346, 347, 350, 349, 0,
	348, 0, 0, 0, 351, 0, 507, 352, 508, 354,
	355, 0, 356, 357, 358, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 509, 0, 365, 0, 510, 366,
	359, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 511, 376, 512, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 513, 386, 387, 0, 388,
	389, 390, 391, 392, 0, 394, 395, 396, 393, 397,
	398, 399, 400, 0, 401, 0, 402, 403, 404, 405,
	514, 406, 0, 407, 411, 412, 413, 414, 415, 416,
	417, 0, 423, 424, 418, 420, 421, 422, 419, 425,
	426, 427, 0, 428, 408, 409, 429, 430, 0, 431,
	432, 515, 433, 434, 0, 435, 436, 437, 438, 410,
	439, 443, 444, 440, 441, 442, 516, 0, 446, 447,
	445, 0, 448, 449, 450, 451, 452, 280, 453, 0,
	454, 517, 518, 519, 520, 0, 461, 0, 455, 456,
	521, 457, 522, 0, 458, 459, 460, 0, 462, 463,
	0, 0, 464, 465, 466, 467, 468, 470, 0, 471,
	0, 469, 472, 473, 474, 523, 524, 525, 0, 476,
	475, 526, 1182, 0, 213, 0, 477, 478, 527, 479,
	480, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 484, 230, 485, 233, 231, 232,
	486, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 487, 488, 489, 0, 241, 490, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 491, 492, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 493, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 494, 495, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 496, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 497, 0, 498, 296, 0, 297, 298, 299,
	300, 499, 500, 501, 353, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 502, 310, 309, 311, 312, 313, 503, 0, 504,
	0, 315, 0, 505, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 506, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 345, 343, 0, 346, 347,
	350, 349, 0, 348, 0, 0, 0, 351, 0, 507,
	352, 508, 354, 355, 0, 356, 357, 358, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 0, 365,
	0, 510, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 511, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 513, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 514, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 418, 420, 421,
	422, 419, 425, 426, 427, 0, 428, 408, 409, 429,
	430, 0, 431, 432, 515, 433, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 444, 440, 441, 442, 516,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 453, 0, 454, 517, 518, 519, 520, 0, 461,
	0, 455, 456, 521, 457, 522, 0, 458, 459, 460,
	0, 462, 463, 0, 0, 464, 465, 466, 467, 468,
	470, 0, 471, 0, 469, 472, 473, 474, 523, 524,
	525, 0, 476, 475, 526, 576, 0, 213, 0, 477,
	478, 527, 479, 480, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 225, 1059, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 487, 488, 1057, 0, 241, 490,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 491, 492,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 497, 0, 498, 296, 0,
	297, 298, 299, 300, 499, 500, 501, 353, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 502, 310, 309, 311, 312, 313,
	503, 0, 504, 0, 315, 0, 505, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 506, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 577,
	0, 346, 347, 350, 349, 0, 348, 0, 0, 0,
	351, 0, 507, 352, 508, 354, 355, 0, 356, 357,
	358, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	509, 0, 365, 0, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 511, 376, 512,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 0, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 514, 406, 0, 407,
	411, 412, 573, 414, 415, 416, 417, 0, 423, 424,
	418, 420, 421, 422, 419, 425, 1060, 427, 0, 428,
	408, 409, 429, 430, 0, 431, 432, 515, 433, 434,
	0, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 0, 446, 447, 445, 0, 448, 449,
	450, 451, 452, 280, 453, 0, 454, 572, 518, 519,
	520, 0, 461, 0, 455, 1058, 521, 457, 522, 0,
	458, 459, 460, 0, 462, 463, 0, 0, 464, 465,
	466, 467, 468, 470, 0, 471, 0, 469, 472, 473,
	474, 523, 524, 525, 213, 476, 475, 526, 0, 0,
	0, 0, 477, 478, 527, 479, 480, 481, 0, 0,
	0, 219, 220, 221, 222, 223, 1041, 224, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 484, 230, 485, 233, 231, 232,
	486, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 487, 488, 489, 0, 241, 490, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 491, 492, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 493, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 494, 495, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 496, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 497, 0, 498, 296, 0, 297, 298, 299,
	300, 499, 500, 501, 353, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 502, 310, 309, 311, 312, 313, 503, 0, 504,
	0, 315, 0, 505, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 506, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 345, 343, 0, 346, 347,
	350, 349, 0, 348, 0, 0, 0, 351, 0, 507,
	352, 508, 354, 355, 0, 356, 357, 358, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 0, 365,
	0, 510, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 511, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 513, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 514, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 418, 420, 421,
	422, 419, 425, 426, 427, 0, 428, 408, 409, 429,
	430, 0, 431, 432, 515, 433, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 444, 440, 441, 442, 516,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 453, 0, 454, 517, 518, 519, 520, 0, 461,
	0, 455, 456, 521, 457, 522, 0, 458, 459, 460,
	0, 462, 463, 0, 0, 464, 465, 466, 467, 468,
	470, 0, 471, 0, 469, 472, 473, 474, 523, 524,
	525, 0, 476, 475, 526, 576, 0, 213, 0, 477,
	478, 527, 479, 480, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 487, 488, 489, 0, 566, 490,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 564, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 491, 492,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 497, 0, 498, 296, 0,
	297, 298, 299, 300, 499, 500, 501, 353, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 502, 310, 309, 311, 312, 313,
	503, 0, 504, 0, 315, 0, 505, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 506, 0, 329, 330,
	0, 0, 331, 565, 0, 0, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 577,
	0, 346, 347, 350, 349, 0, 348, 0, 0, 0,
	351, 0, 507, 352, 508, 354, 355, 0, 356, 357,
	358, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	509, 0, 365, 0, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 511, 376, 512,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 0, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 567, 406, 0, 407,
	411, 412, 573, 414, 415, 416, 417, 0, 423, 424,
	418, 420, 421, 422, 419, 425, 568, 427, 0, 428,
	408, 409, 429, 430, 0, 431, 432, 515, 433, 434,
	0, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 0, 446, 447, 445, 0, 448, 449,
	450, 451, 452, 280, 453, 0, 454, 572, 518, 519,
	520, 0, 461, 0, 455, 570, 521, 457, 522, 0,
	458, 459, 460, 0, 462, 463, 0, 0, 464, 465,
	466, 467, 468, 470, 0, 471, 0, 469, 472, 473,
	474, 523, 524, 525, 0, 476, 475, 526, 560, 0,
	213, 0, 477, 478, 527, 479, 480, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	484, 230, 485, 233, 231, 232, 486, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 487, 488, 489,
	0, 241, 490, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 491, 492, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 493, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 494, 495, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 496, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 497, 0,
	498, 296, 0, 297, 298, 299, 300, 499, 500, 501,
	353, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 502, 310, 309,
	311, 312, 313, 503, 0, 504, 0, 315, 0, 505,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 506,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 345, 343, 0, 346, 347, 350, 349, 0, 348,
	0, 0, 0, 351, 0, 507, 352, 508, 354, 355,
	0, 356, 357, 358, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 0, 365, 0, 510, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	511, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 513, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 514,
	406, 0, 407, 561, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 418, 420, 421, 422, 419, 425, 426,
	427, 0, 428, 408, 409, 429, 430, 0, 431, 432,
	515, 433, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 444, 440, 441, 442, 516, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 453, 0, 454,
	517, 518, 519, 520, 0, 461, 0, 455, 456, 521,
	457, 522, 0, 458, 459, 460, 0, 462, 463, 0,
	0, 464, 465, 466, 467, 468, 470, 0, 471, 0,
	469, 472, 473, 474, 523, 524, 525, 0, 476, 475,
	526, 558, 0, 213, 0, 477, 478, 527, 479, 480,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	487, 488, 489, 0, 241, 490, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 491, 492, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 496, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 497, 0, 498, 296, 0, 297, 298, 299, 300,
	499, 500, 501, 353, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	502, 310, 309, 311, 312, 313, 503, 0, 504, 0,
	315, 0, 505, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 506, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 0, 346, 347, 350,
	349, 0, 348, 0, 0, 0, 351, 0, 507, 352,
	508, 354, 355, 0, 356, 357, 358, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 509, 0, 365, 0,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 511, 376, 512, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 513, 386, 387,
	0, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 0, 401, 0, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 414,
	415, 416, 417, 0, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 0, 428, 408, 409, 429, 430,
	0, 431, 432, 515, 433, 434, 0, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 0,
	446, 447, 445, 0, 448, 449, 450, 451, 452, 280,
	453, 0, 454, 517, 518, 519, 520, 0, 461, 0,
	455, 456, 521, 457, 522, 0, 458, 459, 460, 0,
	462, 463, 0, 0, 464, 465, 466, 467, 468, 470,
	0, 471, 0, 469, 472, 473, 474, 523, 524, 525,
	0, 476, 475, 526, 552, 0, 213, 0, 477, 478,
	527, 479, 480, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 487, 488, 489, 0, 241, 490, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 497, 0, 498, 296, 0, 297,
	298, 299, 300, 499, 500, 501, 353, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 0, 315, 0, 505, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 506, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 0,
	346, 347, 350, 349, 0, 348, 0, 0, 0, 351,
	0, 507, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	0, 365, 0, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 511, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 0, 428, 408,
	409, 429, 430, 0, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 517, 518, 519, 520,
	0, 461, 0, 455, 456, 521, 457, 522, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 0, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 0, 476, 475, 526, 530, 0, 213,
	0, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 499, 500, 501, 353,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 0, 505, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 0, 346, 347, 350, 349, 0, 348, 0,
	0, 0, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 0, 365, 0, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 386, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 0,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 0, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 0,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 523, 524, 525, 213, 476, 475, 526,
	0, 0, 0, 0, 477, 478, 527, 479, 480, 481,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 487, 488, 489, 0, 241, 490, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 497, 0, 498, 296, 0, 297,
	298, 299, 300, 499, 500, 501, 353, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 0, 315, 0, 505, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 506, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 0,
	346, 347, 350, 349, 0, 348, 0, 0, 0, 351,
	0, 507, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	0, 365, 0, 510, 366, 359, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 511, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 514, 406, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 0, 428, 408,
	409, 429, 430, 0, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 517, 518, 519, 520,
	0, 461, 0, 455, 456, 521, 457, 522, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 0, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 213, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 483, 484, 230, 485, 233, 231, 232, 486,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	487, 488, 489, 0, 241, 490, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 491, 492, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 493, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 494, 495, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 496, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 497, 0, 498, 296, 0, 297, 298, 299, 300,
	2796, 500, 501, 353, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	502, 310, 309, 311, 312, 313, 503, 0, 504, 0,
	315, 0, 505, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 506, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 0, 336, 337, 339, 341,
	338, 340, 342, 344, 345, 343, 0, 346, 347, 350,
	349, 0, 348, 0, 0, 0, 351, 0, 507, 352,
	508, 354, 355, 0, 356, 357, 358, 0, 0, 360,
	361, 362, 0, 0, 363, 364, 509, 0, 365, 0,
	510, 366, 359, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 511, 376, 512, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 513, 386, 387,
	0, 388, 389, 390, 391, 392, 0, 394, 395, 396,
	393, 397, 398, 399, 400, 0, 401, 0, 402, 403,
	404, 405, 514, 406, 0, 407, 411, 412, 413, 414,
	415, 416, 417, 0, 423, 424, 418, 420, 421, 422,
	419, 425, 426, 427, 0, 428, 408, 409, 429, 430,
	0, 431, 432, 515, 433, 434, 0, 435, 436, 437,
	438, 410, 439, 443, 444, 440, 441, 442, 516, 0,
	446, 447, 445, 0, 448, 449, 450, 451, 452, 280,
	453, 0, 454, 517, 518, 519, 520, 0, 461, 0,
	455, 456, 521, 457, 522, 0, 458, 459, 460, 0,
	462, 463, 0, 0, 464, 465, 466, 467, 468, 470,
	0, 471, 0, 469, 472, 473, 474, 523, 524, 525,
	213, 476, 475, 526, 0, 0, 0, 0, 477, 478,
	527, 479, 480, 481, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 483,
	484, 230, 485, 233, 231, 232, 486, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 487, 488, 489,
	0, 241, 490, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 491, 492, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 493, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 494, 495, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 496, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 497, 0,
	498, 296, 0, 297, 298, 299, 300, 2794, 500, 501,
	353, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 502, 310, 309,
	311, 312, 313, 503, 0, 504, 0, 315, 0, 505,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 506,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 0, 336, 337, 339, 341, 338, 340, 342,
	344, 345, 343, 0, 346, 347, 350, 349, 0, 348,
	0, 0, 0, 351, 0, 507, 352, 508, 354, 355,
	0, 356, 357, 358, 0, 0, 360, 361, 362, 0,
	0, 363, 364, 509, 0, 365, 0, 510, 366, 359,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	511, 376, 512, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 513, 386, 387, 0, 388, 389,
	390, 391, 392, 0, 394, 395, 396, 393, 397, 398,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 514,
	406, 0, 407, 411, 412, 413, 414, 415, 416, 417,
	0, 423, 424, 418, 420, 421, 422, 419, 425, 426,
	427, 0, 428, 408, 409, 429, 430, 0, 431, 432,
	515, 433, 434, 0, 435, 436, 437, 438, 410, 439,
	443, 444, 440, 441, 442, 516, 0, 446, 447, 445,
	0, 448, 449, 450, 451, 452, 280, 453, 0, 454,
	517, 518, 519, 520, 0, 461, 0, 455, 456, 521,
	457, 522, 0, 458, 459, 460, 0, 462, 463, 0,
	0, 464, 465, 466, 467, 468, 470, 0, 471, 0,
	469, 472, 473, 474, 523, 524, 525, 213, 476, 475,
	526, 0, 0, 0, 0, 477, 478, 527, 479, 480,
	481, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 483, 484, 230, 485,
	233, 231, 232, 486, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 487, 488, 489, 0, 241, 490,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 491, 492,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 493,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 494,
	495, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 496, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 497, 0, 498, 296, 0,
	297, 298, 299, 300, 2781, 500, 501, 353, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 502, 310, 309, 311, 312, 313,
	503, 0, 504, 0, 315, 0, 505, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 506, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 0,
	336, 337, 339, 341, 338, 340, 342, 344, 345, 343,
	0, 346, 347, 350, 349, 0, 348, 0, 0, 0,
	351, 0, 507, 352, 508, 354, 355, 0, 356, 357,
	358, 0, 0, 360, 361, 362, 0, 0, 363, 364,
	509, 0, 365, 0, 510, 366, 359, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 511, 376, 512,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 513, 386, 387, 0, 388, 389, 390, 391, 392,
	0, 394, 395, 396, 393, 397, 398, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 514, 406, 0, 407,
	411, 412, 413, 414, 415, 416, 417, 0, 423, 424,
	418, 420, 421, 422, 419, 425, 426, 427, 0, 428,
	408, 409, 429, 430, 0, 431, 432, 515, 433, 434,
	0, 435, 436, 437, 438, 410, 439, 443, 444, 440,
	441, 442, 516, 0, 446, 447, 445, 0, 448, 449,
	450, 451, 452, 280, 453, 0, 454, 517, 518, 519,
	520, 0, 461, 0, 455, 456, 521, 457, 522, 0,
	458, 459, 460, 0, 462, 463, 0, 0, 464, 465,
	466, 467, 468, 470, 0, 471, 0, 469, 472, 473,
	474, 523, 524, 525, 213, 476, 475, 526, 0, 0,
	0, 0, 477, 478, 527, 479, 480, 481, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 483, 484, 230, 485, 233, 231, 232,
	486, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 487, 488, 489, 0, 241, 490, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 491, 492, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 493, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 494, 495, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 496, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 497, 0, 498, 296, 0, 297, 298, 299,
	300, 2439, 500, 501, 353, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 502, 310, 309, 311, 312, 313, 503, 0, 504,
	0, 315, 0, 505, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 506, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 0, 336, 337, 339,
	341, 338, 340, 342, 344, 345, 343, 0, 346, 347,
	350, 349, 0, 348, 0, 0, 0, 351, 0, 507,
	352, 508, 354, 355, 0, 356, 357, 358, 0, 0,
	360, 361, 362, 0, 0, 363, 364, 509, 0, 365,
	0, 510, 366, 359, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 511, 376, 512, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 513, 386,
	387, 0, 388, 389, 390, 391, 392, 0, 394, 395,
	396, 393, 397, 398, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 514, 406, 0, 407, 411, 412, 413,
	414, 415, 416, 417, 0, 423, 424, 418, 420, 421,
	422, 419, 425, 426, 427, 0, 428, 408, 409, 429,
	430, 0, 431, 432, 515, 433, 434, 0, 435, 436,
	437, 438, 410, 439, 443, 444, 440, 441, 442, 516,
	0, 446, 447, 445, 0, 448, 449, 450, 451, 452,
	280, 453, 0, 454, 517, 518, 519, 520, 0, 461,
	0, 455, 456, 521, 457, 522, 0, 458, 459, 460,
	0, 462, 463, 0, 0, 464, 465, 466, 467, 468,
	470, 0, 471, 0, 469, 472, 473, 474, 523, 524,
	525, 213, 476, 475, 526, 0, 0, 0, 0, 477,
	478, 527, 479, 480, 481, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	483, 484, 230, 485, 233, 231, 232, 486, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 487, 488,
	489, 0, 241, 490, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 491, 492, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 493, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 494, 495, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 496, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 497,
	0, 498, 296, 0, 297, 298, 299, 300, 499, 500,
	501, 353, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 502, 310,
	309, 311, 312, 313, 503, 0, 504, 0, 315, 0,
	505, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	506, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 0, 336, 337, 339, 341, 338, 340,
	342, 344, 345, 343, 0, 346, 347, 350, 349, 0,
	348, 0, 0, 0, 351, 0, 507, 352, 508, 354,
	355, 0, 356, 357, 358, 0, 0, 360, 361, 362,
	0, 0, 363, 364, 509, 0, 365, 0, 510, 366,
	359, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 511, 376, 512, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 513, 386, 387, 0, 388,
	389, 390, 391, 392, 0, 394, 395, 396, 393, 397,
	398, 399, 400, 0, 401, 0, 402, 403, 404, 405,
	514, 406, 0, 407, 561, 412, 413, 414, 415, 416,
	417, 0, 423, 424, 418, 420, 421, 422, 419, 425,
	426, 427, 0, 428, 408, 409, 429, 430, 0, 431,
	432, 515, 433, 434, 0, 435, 436, 437, 438, 410,
	439, 443, 444, 440, 441, 442, 516, 0, 446, 447,
	445, 0, 448, 449, 450, 451, 452, 280, 453, 0,
	454, 517, 518, 519, 520, 0, 461, 0, 455, 456,
	521, 457, 522, 0, 458, 459, 460, 0, 462, 463,
	0, 0, 464, 465, 466, 467, 468, 470, 0, 471,
	0, 469, 472, 473, 474, 523, 524, 525, 213, 476,
	475, 526, 0, 0, 0, 0, 477, 478, 527, 479,
	480, 481, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 482, 0, 1894,
	0, 0, 225, 227, 226, 228, 229, 483, 484, 230,
	485, 233, 231, 232, 486, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 487, 488, 489, 0, 241,
	490, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 491,
	492, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	493, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	494, 495, 0, 0, 0, 0, 0, 0, 0, 286,
	287, 288, 496, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 497, 0, 498, 296,
	0, 297, 298, 299, 300, 499, 500, 501, 353, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 0, 308, 502, 310, 309, 311, 312,
	313, 503, 0, 504, 0, 315, 0, 505, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 506, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	0, 336, 337, 339, 341, 338, 340, 342, 344, 345,
	343, 0, 346, 347, 350, 349, 0, 348, 0, 0,
	0, 351, 0, 507, 352, 508, 354, 355, 0, 356,
	357, 358, 0, 0, 360, 361, 362, 0, 0, 363,
	364, 509, 0, 365, 0, 510, 366, 359, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 511, 376,
	512, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 513, 386, 387, 0, 388, 389, 390, 391,
	392, 0, 394, 395, 396, 393, 397, 398, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 514, 406, 0,
	407, 411, 412, 413, 414, 415, 416, 417, 0, 423,
	424, 418, 420, 421, 422, 419, 425, 426, 427, 0,
	0, 408, 409, 429, 430, 0, 431, 432, 515, 433,
	434, 0, 435, 436, 437, 438, 410, 439, 443, 444,
	440, 441, 442, 516, 0, 446, 447, 445, 0, 448,
	449, 450, 451, 452, 280, 453, 0, 454, 517, 518,
	519, 520, 0, 461, 0, 455, 456, 521, 457, 522,
	0, 458, 459, 460, 0, 462, 463, 0, 0, 464,
	465, 466, 467, 468, 470, 0, 471, 0, 469, 472,
	473, 474, 523, 524, 525, 213, 476, 475, 526, 0,
	0, 0, 0, 477, 478, 527, 479, 480, 481, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 483, 484, 230, 485, 233, 231,
	232, 486, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 487, 488, 489, 0, 241, 490, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 491, 492, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 493, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 496,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 497, 0, 498, 296, 0, 297, 298,
	299, 300, 1300, 500, 501, 353, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 502, 310, 309, 311, 312, 313, 503, 0,
	504, 0, 315, 0, 505, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 506, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 0, 336, 337,
	339, 341, 338, 340, 342, 344, 345, 343, 0, 346,
	347, 350, 349, 0, 348, 0, 0, 0, 351, 0,
	507, 352, 508, 354, 355, 0, 356, 357, 358, 0,
	0, 360, 361, 362, 0, 0, 363, 364, 509, 0,
	365, 0, 510, 366, 359, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 511, 376, 512, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 513,
	386, 387, 0, 388, 389, 390, 391, 392, 0, 394,
	395, 396, 393, 397, 398, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 514, 406, 0, 407, 411, 412,
	413, 414, 415, 416, 417, 0, 423, 424, 418, 420,
	421, 422, 419, 425, 426, 427, 0, 428, 408, 409,
	429, 430, 0, 431, 432, 515, 433, 434, 0, 435,
	436, 437, 438, 410, 439, 443, 444, 440, 441, 442,
	516, 0, 446, 447, 445, 0, 448, 449, 450, 451,
	452, 280, 453, 0, 454, 517, 518, 519, 520, 0,
	461, 0, 455, 456, 521, 457, 522, 0, 458, 459,
	460, 0, 462, 463, 0, 0, 464, 465, 466, 467,
	468, 470, 0, 471, 0, 469, 472, 473, 474, 523,
	524, 525, 213, 476, 475, 526, 0, 0, 0, 0,
	477, 478, 527, 479, 480, 481, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 483, 484, 230, 485, 233, 231, 232, 486, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 487,
	488, 489, 0, 241, 490, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 491, 492, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 493, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 496, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	497, 0, 498, 296, 0, 297, 298, 299, 300, 1240,
	500, 501, 353, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 502,
	310, 309, 311, 312, 313, 503, 0, 504, 0, 315,
	0, 505, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 506, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 0, 336, 337, 339, 341, 338,
	340, 342, 344, 345, 343, 0, 346, 347, 350, 349,
	0, 348, 0, 0, 0, 351, 0, 507, 352, 508,
	354, 355, 0, 356, 357, 358, 0, 0, 360, 361,
	362, 0, 0, 363, 364, 509, 0, 365, 0, 510,
	366, 359, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 511, 376, 512, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 513, 386, 387, 0,
	388, 389, 390, 391, 392, 0, 394, 395, 396, 393,
	397, 398, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 514, 406, 0, 407, 411, 412, 413, 414, 415,
	416, 417, 0, 423, 424, 418, 420, 421, 422, 419,
	425, 426, 427, 0, 428, 408, 409, 429, 430, 0,
	431, 432, 515, 433, 434, 0, 435, 436, 437, 438,
	410, 439, 443, 444, 440, 441, 442, 516, 0, 446,
	447, 445, 0, 448, 449, 450, 451, 452, 280, 453,
	0, 454, 517, 518, 519, 520, 0, 461, 0, 455,
	456, 521, 457, 522, 0, 458, 459, 460, 0, 462,
	463, 0, 0, 464, 465, 466, 467, 468, 470, 0,
	471, 0, 469, 472, 473, 474, 523, 524, 525, 213,
	476, 475, 526, 0, 0, 0, 0, 477, 478, 527,
	479, 480, 481, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 483, 484,
	230, 485, 233, 231, 232, 486, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 487, 488, 489, 0,
	241, 490, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	491, 492, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 493, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 496, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 497, 0, 498,
	296, 0, 297, 298, 299, 300, 499, 500, 501, 353,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 502, 310, 309, 311,
	312, 313, 503, 0, 504, 0, 315, 0, 505, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 506, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 0, 336, 337, 339, 341, 338, 340, 342, 344,
	345, 343, 0, 346, 347, 350, 349, 0, 348, 0,
	0, 0, 351, 0, 507, 352, 508, 354, 355, 0,
	356, 357, 358, 0, 0, 360, 361, 362, 0, 0,
	363, 364, 509, 0, 365, 0, 510, 366, 359, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 511,
	376, 512, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 513, 995, 387, 0, 388, 389, 390,
	391, 392, 0, 394, 395, 396, 393, 397, 398, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 514, 406,
	0, 407, 411, 412, 413, 414, 415, 416, 417, 0,
	423, 424, 418, 420, 421, 422, 419, 425, 426, 427,
	0, 428, 408, 409, 429, 430, 0, 431, 432, 515,
	433, 434, 0, 435, 436, 437, 438, 410, 439, 443,
	444, 440, 441, 442, 516, 0, 446, 447, 445, 0,
	448, 449, 450, 451, 452, 280, 453, 0, 454, 517,
	518, 519, 520, 0, 461, 0, 455, 456, 521, 457,
	522, 0, 458, 459, 460, 0, 462, 463, 0, 0,
	464, 465, 466, 467, 468, 470, 0, 471, 0, 469,
	472, 473, 474, 523, 524, 525, 213, 476, 475, 526,
	0, 0, 0, 0, 477, 478, 527, 479, 480, 481,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 483, 484, 230, 485, 233,
	231, 232, 486, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 487, 488, 489, 0, 241, 490, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 491, 492, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 493, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	496, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 497, 0, 498, 0, 0, 297,
	298, 299, 300, 499, 500, 501, 353, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 502, 310, 309, 311, 312, 313, 503,
	0, 504, 0, 315, 0, 505, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 506, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 0, 336,
	337, 339, 341, 338, 340, 342, 344, 345, 343, 0,
	346, 347, 350, 349, 0, 348, 0, 0, 0, 351,
	0, 507, 352, 508, 354, 355, 0, 356, 357, 358,
	0, 0, 360, 361, 362, 0, 0, 363, 364, 509,
	0, 365, 0, 510, 366, 359, 367, 368, 0, 370,
	371, 372, 373, 0, 374, 375, 511, 376, 512, 377,
	0, 378, 0, 379, 380, 381, 382, 0, 384, 385,
	513, 386, 387, 0, 388, 389, 390, 391, 392, 0,
	394, 395, 396, 393, 397, 398, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 514, 0, 0, 407, 411,
	412, 413, 414, 415, 416, 417, 0, 423, 424, 418,
	420, 421, 422, 419, 425, 426, 427, 0, 428, 408,
	409, 429, 430, 0, 431, 432, 515, 433, 434, 0,
	435, 436, 437, 438, 410, 439, 443, 444, 440, 441,
	442, 516, 0, 446, 447, 445, 0, 448, 449, 450,
	451, 452, 280, 453, 0, 454, 517, 518, 519, 520,
	0, 461, 0, 455, 456, 521, 457, 522, 0, 458,
	459, 460, 0, 462, 463, 0, 0, 464, 465, 466,
	467, 468, 470, 0, 471, 0, 469, 472, 473, 474,
	523, 524, 525, 0, 476, 475, 526, 0, 0, 0,
	0, 477, 478, 527, 479, 480, 481, 1477, 1478, 0,
	1510, 1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 1508, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1477, 1478, 0, 1510, 1511, 1512, 1520, 1521, 1522, 0,
	0, 0, 0, 1479, 0, 0, 0, 0, 0, 1513,
	1508, 0, 1499, 0, 0, 0, 0, 1480, 0, 1496,
	0, 0, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1479, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 1503, 1504,
	1505, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 1527, 0, 0, 0, 1507, 1509,
	1502, 1503, 1504, 1505, 0, 0, 0, 0, 0, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	1524, 0, 0, 0, 0, 0, 0, 1494, 1495, 0,
	0, 0, 0, 0, 1517, 0, 0, 1527, 0, 0,
	0, 1507, 1509, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 1523, 0, 1524, 0, 0, 0, 0, 0, 0,
	1494, 1495, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 0, 0, 1514,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1477, 1478, 0, 1510, 1511, 1512, 1520, 1521, 1522,
	0, 0, 0, 0, 0, 0, 1506, 1518, 0, 0,
	1513, 1508, 0, 0, 0, 0, 0, 0, 1480, 0,
	0, 0, 0, 1526, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 0, 0,
	1518, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 1491, 1492, 1498, 1519, 1497, 1493,
	0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 2647, 0,
	0, 1502, 1503, 1504, 1505, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 1516, 0, 0, 1491, 1492, 1498,
	1519, 1497, 1493, 0, 1490, 1488, 1489, 1481, 1482, 1483,
	1484, 1486, 1487, 0, 0, 1517, 0, 0, 1527, 0,
	0, 2644, 1507, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 1524, 0, 0, 0, 0, 0,
	0, 1494, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 1477, 1478, 0, 1510, 1511,
	1512, 1520, 1521, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1513, 1508, 0, 0, 0, 0,
	0, 0, 1480, 0, 0, 0, 0, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 0, 0, 0, 1501, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1502, 1503, 1504, 1505, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 0, 1527, 0, 0, 1516, 1507, 1509, 1491, 1492,
	1498, 1519, 1497, 1493, 0, 1490, 1488, 1489, 1481, 1482,
	1483, 1484, 1486, 1487, 0, 0, 1523, 0, 1524, 0,
	0, 0, 2643, 0, 0, 1494, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 1477,
	1478, 0, 1510, 1511, 1512, 1520, 1521, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 1508,
	0, 0, 0, 0, 0, 0, 1480, 0, 0, 0,
	0, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1479, 0, 0, 0, 1501,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1502,
	1503, 1504, 1505, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 0, 0, 1527, 0, 0, 1516,
	1507, 1509, 1491, 1492, 1498, 1519, 1497, 1493, 0, 1490,
	1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 0, 0,
	1523, 0, 1524, 0, 0, 0, 2642, 0, 0, 1494,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 0, 1477, 1478, 0, 1510, 1511, 1512, 1520,
	1521, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 1508, 0, 0, 0, 0, 0, 0,
	1480, 0, 0, 0, 0, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1479,
	0, 0, 0, 1501, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 1503, 1504, 1505, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 0,
	1527, 0, 0, 1516, 1507, 1509, 1491, 1492, 1498, 1519,
	1497, 1493, 0, 1490, 1488, 1489, 1481, 1482, 1483, 1484,
	1486, 1487, 0, 0, 1523, 0, 1524, 0, 0, 0,
	2125, 0, 0, 1494, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1477, 1478, 0, 1510, 1511, 1512, 1520, 1521,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 1513, 1508, 0, 0, 0, 0, 0, 0, 1480,
	0, 0, 0, 0, 1526, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 1477, 1478, 0, 1510, 1511,
	1512, 1520, 1521, 1522, 0, 0, 0, 0, 1479, 0,
	0, 0, 0, 1518, 1513, 1508, 0, 1499, 0, 0,
	0, 0, 1480, 0, 1496, 0, 0, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1502, 1503, 1504, 1505, 0, 0, 0, 0,
	0, 0, 1485, 0, 0, 0, 0, 1516, 0, 0,
	1491, 1492, 1498, 1519, 1497, 1493, 0, 1490, 1488, 1489,
	1481, 1482, 1483, 1484, 1486, 1487, 1517, 0, 0, 1527,
	3595, 0, 0, 1507, 1509, 1502, 1503, 1504, 1505, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 1523, 0, 1524, 0, 0, 0, 0,
	0, 0, 1494, 1495, 0, 0, 0, 0, 0, 1517,
	0, 0, 1527, 0, 0, 0, 1507, 1509, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 1524, 0,
	0, 0, 0, 0, 0, 1494, 1495, 1525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 1514, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 1477, 1478, 0, 1510, 1511, 1512,
	1520, 1521, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 1518, 1513, 1508, 0, 0, 0, 0, 0,
	0, 1480, 0, 0, 0, 0, 1526, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1479, 0, 0, 0, 0, 1518, 0, 0, 0, 1499,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 1491,
	1492, 1498, 1519, 1497, 1493, 0, 1490, 1488, 1489, 1481,
	1482, 1483, 1484, 1486, 1487, 0, 0, 0, 0, 3591,
	0, 0, 0, 0, 1502, 1503, 1504, 1505, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 1516,
	0, 0, 1491, 1492, 1498, 1519, 1497, 1493, 0, 1490,
	1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 1517, 0,
	0, 1527, 3512, 0, 0, 1507, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1523, 0, 1524, 0, 0,
	0, 0, 0, 0, 1494, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1477, 1478, 0, 1510, 1511, 1512, 1520,
	1521, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 1513, 1508, 0, 0, 0, 0, 0, 0,
	1480, 0, 0, 0, 0, 1526, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 1477, 1478, 0, 1510,
	1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0, 1479,
	0, 0, 0, 0, 1518, 1513, 1508, 0, 1499, 0,
	0, 0, 0, 1480, 0, 1496, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1479, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 1503, 1504, 1505, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 1516, 0,
	0, 1491, 1492, 1498, 1519, 1497, 1493, 0, 1490, 1488,
	1489, 1481, 1482, 1483, 1484, 1486, 1487, 1517, 0, 0,
	1527, 3511, 0, 0, 1507, 1509, 1502, 1503, 1504, 1505,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 1524, 0, 0, 0,
	0, 0, 0, 1494, 1495, 0, 0, 0, 0, 0,
	1517, 0, 0, 1527, 0, 0, 0, 1507, 1509, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 1523, 0, 1524,
	0, 0, 0, 0, 0, 0, 1494, 1495, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 1514, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 1477, 1478, 0, 1510, 1511,
	1512, 1520, 1521, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 1518, 1513, 1508, 0, 0, 0, 0,
	0, 0, 1480, 0, 0, 0, 0, 1526, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 0, 0, 0, 0, 1518, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	1491, 1492, 1498, 1519, 1497, 1493, 0, 1490, 1488, 1489,
	1481, 1482, 1483, 1484, 1486, 1487, 0, 0, 0, 0,
	3396, 0, 0, 0, 0, 1502, 1503, 1504, 1505, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	1516, 0, 0, 1491, 1492, 1498, 1519, 1497, 1493, 0,
	1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 1517,
	0, 0, 1527, 3293, 0, 0, 1507, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 1524, 0,
	0, 0, 0, 0, 0, 1494, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1477, 1478, 0, 1510, 1511, 1512,
	1520, 1521, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 1513, 1508, 0, 0, 0, 0, 0,
	0, 1480, 0, 0, 0, 0, 1526, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 1477, 1478, 0,
	1510, 1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0,
	1479, 0, 0, 0, 0, 1518, 1513, 1508, 0, 1499,
	0, 0, 0, 0, 1480, 0, 1496, 0, 0, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1479, 0, 0, 0, 0, 0, 0,
	0, 0, 1499, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1502, 1503, 1504, 1505, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 1516,
	0, 0, 1491, 1492, 1498, 1519, 1497, 1493, 0, 1490,
	1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 1517, 0,
	0, 1527, 3246, 0, 0, 1507, 1509, 1502, 1503, 1504,
	1505, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 1523, 0, 1524, 0, 0,
	0, 0, 0, 0, 1494, 1495, 0, 0, 0, 0,
	0, 1517, 0, 0, 1527, 0, 0, 0, 1507, 1509,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	1524, 0, 0, 0, 0, 0, 0, 1494, 1495, 1525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 1514, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 1477, 1478, 0, 1510,
	1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 1518, 1513, 1508, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 0, 0, 1526, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1479, 0, 0, 0, 0, 1518, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 1491, 1492, 1498, 1519, 1497, 1493, 0, 1490, 1488,
	1489, 1481, 1482, 1483, 1484, 1486, 1487, 0, 0, 0,
	0, 3245, 0, 0, 0, 0, 1502, 1503, 1504, 1505,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 1516, 0, 0, 1491, 1492, 1498, 1519, 1497, 1493,
	0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487,
	1517, 0, 0, 1527, 3244, 0, 0, 1507, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1523, 0, 1524,
	0, 0, 0, 0, 0, 0, 1494, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1477, 1478, 0, 1510, 1511,
	1512, 1520, 1521, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 1513, 1508, 0, 0, 0, 0,
	0, 0, 1480, 0, 0, 0, 0, 1526, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 1477, 1478,
	0, 1510, 1511, 1512, 1520, 1521, 1522, 0, 0, 0,
	0, 1479, 0, 0, 0, 0, 1518, 1513, 1508, 0,
	1499, 0, 0, 0, 0, 1480, 0, 1496, 0, 0,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1479, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1502, 1503, 1504, 1505, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	1516, 0, 0, 1491, 1492, 1498, 1519, 1497, 1493, 0,
	1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 1517,
	0, 0, 1527, 3003, 0, 0, 1507, 1509, 1502, 1503,
	1504, 1505, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 1524, 0,
	0, 0, 0, 0, 0, 1494, 1495, 0, 0, 0,
	0, 0, 1517, 0, 0, 1527, 0, 0, 0, 1507,
	1509, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 1523,
	0, 1524, 0, 0, 0, 0, 0, 0, 1494, 1495,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 1514, 0, 0,
	0, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 1477, 1478, 0,
	1510, 1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 1518, 1513, 1508, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 1526,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1479, 0, 0, 0, 0, 1518, 0,
	0, 0, 1499, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 1491, 1492, 1498, 1519, 1497, 1493, 0, 1490,
	1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 0, 0,
	0, 0, 2640, 0, 0, 0, 0, 1502, 1503, 1504,
	1505, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 1516, 0, 0, 1491, 1492, 1498, 1519, 1497,
	1493, 0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486,
	1487, 1517, 0, 0, 1527, 2639, 0, 0, 1507, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	1524, 0, 0, 0, 0, 0, 0, 1494, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1477, 1478, 0, 1510,
	1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 1513, 1508, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 0, 0, 1526, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 1477,
	1478, 0, 1510, 1511, 1512, 1520, 1521, 1522, 0, 0,
	0, 0, 1479, 0, 0, 0, 0, 1518, 1513, 1508,
	0, 1499, 0, 0, 0, 0, 1480, 0, 1496, 0,
	0, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1479, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 1503, 1504, 1505,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 1516, 0, 0, 1491, 1492, 1498, 1519, 1497, 1493,
	0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487,
	1517, 0, 0, 1527, 2638, 0, 0, 1507, 1509, 1502,
	1503, 1504, 1505, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 0, 0, 0, 1523, 0, 1524,
	0, 0, 0, 0, 0, 0, 1494, 1495, 0, 0,
	0, 0, 0, 1517, 0, 0, 1527, 0, 0, 0,
	1507, 1509, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	1523, 0, 1524, 0, 0, 0, 0, 0, 0, 1494,
	1495, 1525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 1514, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 1477, 1478,
	0, 1510, 1511, 1512, 1520, 1521, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 1518, 1513, 1508, 0,
	0, 0, 0, 0, 0, 1480, 0, 0, 0, 0,
	1526, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1479, 0, 0, 0, 0, 1518,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 1491, 1492, 1498, 1519, 1497, 1493, 0,
	1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 0,
	0, 0, 0, 2637, 0, 0, 0, 0, 1502, 1503,
	1504, 1505, 0, 0, 0, 0, 0, 0, 1485, 3700,
	0, 0, 0, 1516, 0, 0, 1491, 1492, 1498, 1519,
	1497, 1493, 0, 1490, 1488, 1489, 1481, 1482, 1483, 1484,
	1486, 1487, 1517, 0, 2595, 1527, 0, 0, 0, 1507,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1523,
	0, 1524, 0, 0, 0, 0, 0, 0, 1494, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3699, 0, 0, 0, 0, 1477, 1478, 0,
	1510, 1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 1513, 1508, 0, 0,
	0, 0, 2566, 0, 1480, 0, 0, 0, 0, 1526,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	1477, 1478, 0, 1510, 1511, 1512, 1520, 1521, 1522, 0,
	0, 0, 0, 1479, 0, 0, 0, 0, 1518, 1513,
	1508, 0, 1499, 0, 0, 0, 0, 1480, 0, 1496,
	0, 0, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1479, 0, 2567, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 1503, 1504,
	1505, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 1516, 0, 0, 1491, 1492, 1498, 1519, 1497,
	1493, 0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486,
	1487, 1517, 0, 0, 1527, 0, 0, 0, 1507, 1509,
	1502, 1503, 1504, 1505, 0, 0, 0, 0, 0, 0,
	1485, 0, 2687, 0, 0, 2686, 0, 0, 1523, 0,
	1524, 0, 0, 0, 0, 0, 0, 1494, 1495, 0,
	0, 0, 0, 0, 1517, 0, 0, 1527, 0, 0,
	0, 1507, 1509, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 1523, 0, 1524, 0, 0, 0, 0, 0, 0,
	1494, 1495, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 0, 0, 1514,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1501, 2235, 0, 0, 0, 0, 0, 0, 1477,
	1478, 0, 1510, 1511, 1512, 1520, 1521, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 1518, 1513, 1508,
	0, 0, 0, 2234, 0, 0, 1480, 0, 0, 0,
	0, 1526, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1479, 0, 0, 0, 0,
	1518, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 1491, 1492, 1498, 1519, 1497, 1493,
	0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1502,
	1503, 1504, 1505, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 1516, 0, 0, 1491, 1492, 1498,
	1519, 1497, 1493, 0, 1490, 1488, 1489, 1481, 1482, 1483,
	1484, 1486, 1487, 1517, 0, 0, 1527, 0, 0, 0,
	1507, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1523, 0, 1524, 0, 0, 0, 0, 0, 0, 1494,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 0, 1477, 1478, 0, 1510, 1511, 1512, 1520,
	1521, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 1508, 0, 0, 0, 0, 0, 0,
	1480, 0, 0, 0, 0, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1479,
	0, 0, 0, 1501, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 1503, 1504, 1505, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 0,
	1527, 0, 0, 1516, 1507, 1509, 1491, 1492, 1498, 1519,
	1497, 1493, 0, 1490, 1488, 1489, 1481, 1482, 1483, 1484,
	1486, 1487, 0, 0, 1523, 0, 1524, 0, 0, 0,
	0, 0, 0, 1494, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 836, 1477, 1478, 0,
	1510, 1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 1508, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1479, 0, 0, 0, 1501, 0, 0,
	0, 0, 1499, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 1503, 1504,
	1505, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 1527, 0, 0, 1516, 1507, 1509,
	1491, 1492, 1498, 1519, 1497, 1493, 0, 1490, 1488, 1489,
	1481, 1482, 1483, 1484, 1486, 1487, 0, 0, 1523, 0,
	1524, 0, 0, 0, 0, 0, 0, 1494, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 1477, 1478, 0, 1510, 1511, 1512, 1520, 1521, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1513, 1508, 0, 0, 0, 0, 0, 0, 1480, 0,
	0, 0, 0, 1526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 0, 0,
	0, 1501, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 1503, 1504, 1505, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 2693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 0, 0, 1527, 0,
	0, 1516, 1507, 1509, 1491, 1492, 1498, 1519, 1497, 1493,
	0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487,
	0, 0, 1523, 0, 1524, 0, 0, 0, 0, 0,
	0, 1494, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 1477, 1478, 0, 1510, 1511,
	1512, 1520, 1521, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1513, 1508, 0, 0, 0, 2688,
	0, 0, 1480, 0, 0, 0, 0, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 0, 0, 0, 1501, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1502, 1503, 1504, 1505, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 0, 1527, 0, 0, 1516, 1507, 1509, 1491, 1492,
	1498, 1519, 1497, 1493, 0, 1490, 1488, 1489, 1481, 1482,
	1483, 1484, 1486, 1487, 0, 0, 1523, 0, 1524, 0,
	0, 0, 0, 0, 0, 1494, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 1477,
	1478, 0, 1510, 1511, 1512, 1520, 1521, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 1508,
	0, 0, 0, 0, 0, 0, 1480, 0, 0, 0,
	0, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1479, 0, 0, 0, 1501,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1502,
	1503, 1504, 1505, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 0, 0, 1527, 0, 0, 1516,
	1507, 1509, 1491, 1492, 1498, 1519, 1497, 1493, 0, 1490,
	1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487, 0, 0,
	1523, 0, 1524, 0, 0, 0, 0, 0, 0, 1494,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 0, 1477, 1478, 0, 1510, 1511, 1512, 1520,
	1521, 1522, 0, 0, 0, 0, 0, 0, 0, 2655,
	0, 0, 1513, 1508, 0, 0, 0, 2641, 0, 0,
	1480, 0, 0, 0, 0, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1479,
	0, 0, 0, 1501, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 1503, 1504, 1505, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 0,
	1527, 0, 0, 1516, 1507, 1509, 1491, 1492, 1498, 1519,
	1497, 1493, 0, 1490, 1488, 1489, 1481, 1482, 1483, 1484,
	1486, 1487, 0, 0, 1523, 0, 1524, 0, 0, 0,
	0, 0, 0, 1494, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 1477, 1478, 0,
	1510, 1511, 1512, 1520, 1521, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 1508, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1479, 0, 0, 0, 1501, 0, 0,
	0, 0, 1499, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 1503, 1504,
	1505, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 1527, 0, 0, 1516, 1507, 1509,
	1491, 1492, 1498, 1519, 1497, 1493, 0, 1490, 1488, 1489,
	1481, 1482, 1483, 1484, 1486, 1487, 0, 0, 1523, 0,
	1524, 0, 0, 0, 0, 0, 0, 1494, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 1477, 1478, 0, 1510, 1511, 1512, 1520, 1521, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 1480, 0,
	0, 0, 0, 1526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 0, 0,
	0, 1501, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 1503, 1504, 1505, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 1696, 0, 1527, 0,
	0, 1516, 1507, 1509, 1491, 1492, 1498, 1519, 1497, 1493,
	0, 1490, 1488, 1489, 1481, 1482, 1483, 1484, 1486, 1487,
	0, 0, 1523, 0, 1524, 0, 0, 0, 0, 0,
	0, 1494, 1495, 0, 0, 0, 1713, 1690, 1697, 0,
	1680, 1723, 1722, 0, 0, 1682, 1681, 1515, 0, 0,
	0, 0, 0, 1733, 1734, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 0, 1720, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	1717, 1715, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1692, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 1706, 1695, 1708, 1710, 1711, 1712, 1707,
	0, 1700, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 1730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 1693, 0, 1694,
	0, 0, 0, 0, 0, 1516, 0, 0, 1491, 1492,
	1498, 1519, 1497, 1493, 0, 1490, 1488, 1489, 1481, 1482,
	1483, 1484, 1486, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 1703, 1701, 1702, 1705, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	1686, 1688, 1689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 1687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 0, 0, 1725, 1726, 1727, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1691, 0, 0, 0,
	0, 1698, 1731,
}
var sqlPact = [...]int{

	6034, -1000, -1000, -1000, -1000, -1000, -1000, 223, 222, 221,
	212, 210, 209, 208, 202, -1000, -1000, -1000, 201, -1000,
	-1000, 197, -1000, 191, 189, 184, 181, -1000, 176, 173,
	172, -1000, -1000, -1000, -1000, 171, 169, 168, 60441, 1856,
	72505, 63442, 2234, 54836, 72072, 54403, 71639, 71206, 166, -1000,
	70773, 164, 163, 161, -1000, -1000, 158, 156, 1502, 44827,
	155, 153, 152, 1986, 150, 148, -1000, 147, -1000, 6864,
	1337, -1000, 146, 145, -1000, 5291, 7495, 62582, 2268, 143,
	140, 44393, 2261, 2311, -1000, -1000, 1778, -1000, -1000, 139,
	137, 132, 131, 125, 115, 111, 110, 109, -1000, 108,
	107, 103, 98, 97, 96, 95, -1000, 93, 91, 90,
	89, 88, 86, 85, 83, 81, 80, 79, -1000, 10468,
	1570, 1447, 1435, 1431, 1416, 1421, 896, 78, 77, 76,
	75, 74, 73, 70, -1000, 68, 66, 63, 58, -1000,
	56, 47, 170, 46, 43, 38, 35, 34, 2701, -1000,
	1289, 1008, 21478, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 76775, 72932, 31, -57,
	30, -1000, 2687, 868, 37020, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 410, -1000, -1000, -1000, 291,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1632, 684,
	-1000, -1000, -1000, 70340, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1854, -2, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 683, -1000, 1853, 157, 1772, -1000, -1000, -1000, -1000,
	-1000, 72932, -1000, -1000, 2992, 2991, 1777, 679, 69913, -1000,
	1338, -1000, 839, 24226, -1000, 1046, -1000, 24226, 289, -1000,
	-1000, -1000, -1000, -1000, -1000, 53970, 15950, 53537, 53104, 69480,
	15507, 60014, 49227, 48784, -1000, -1000, 39636, 1102, -1000, -1000,
	-1000, -1000, -1000, -4, 50095, 72932, -1000, 288, -1000, -1000,
	-1000, -1000, -1000, -1000, 30742, 952, 30274, 731, 29806, 331,
	-1000, -1000, -1000, -1000, 2990, 2989, 1011, 2988, 2627, 76348,
	1446, 2986, 1462, 1094, 925, 2978, 2976, 2975, 2973, 2972,
	2971, 2970, 1169, 69047, 2440, 1475, 48341, 47898, 60441, 60441,
	2084, 68614, 1185, 1131, -1000, -1000, -1000, -1000, 2523, 2306,
	2280, 41805, -1000, -1000, 2968, 2964, 2963, 2962, 2961, 75921,
	1440, 2960, 2004, 2959, 2958, 2957, 2956, 2955, 2951, 2948,
	2947, 2946, -1000, 59581, 59148, 58715, 58282, 68181, 47455, 47012,
	-1000, -1000, -1000, 38748, 8208, 7848, 67748, 40077, 60441, 60441,
	-1000, -1000, 31198, 656, -1000, -1000, -1000, 39636, 2373, -1000,
	31198, 656, -1000, 72932, -1000, 2438, 1599, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2575, 1367, 2846, 46569,
	1692, 1217, 2683, 2513, 2507, 1302, 2094, 2506, 2499, 2463,
	2431, 2427, 1419, 2051, 633, 21010, 1291, 1299, 2418, 2411,
	2855, 1600, 52671, 2942, 2940, 2648, 2349, 2335, 2372, -1000,
	-1000, -1000, -1000, 1239, -1000, -1000, 55690, -1000, -1000, 1097,
	-1000, -1000, 1097, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1099, 75067, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1289, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2343, -1000, 1734,
	-1000, -1000, 2028, 2664, 2664, 2664, 2712, 401, 395, -1000,
	170, -1000, -1000, 84336, -1000, -1000, 31198, 31198, 31198, 31198,
	31198, 1664, -1000, 677, -1000, -1000, 722, -1000, 674, 536,
	-1000, -1000, -1000, -1000, -1000, -1000, 670, 2859, -1000, -1000,
	-1000, -1000, -1000, 2801, -1000, 18214, -1000, -1000, -1000, 413,
	669, 31198, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 851, -1000, 252, 852,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 583, 1595, 574, 574, 574, -1000,
	-1000, 918, -1000, -1000, -1000, 324, 565, 316, 563, -1000,
	-1000, -1000, -1000, 2435, 667, 665, -1000, 663, 662, 661,
	659, 658, -1000, -1000, -1000, 654, 651, 650, 649, 645,
	643, 641, 632, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 911, -1000, 631, 629, 628, 622, 619, 613, 611,
	610, 609, -1000, -1000, -5, 72932, -1000, 410, -5, -1000,
	-1000, 607, -1000, 24682, 24682, 24682, -1000, -1000, 1850, 31198,
	-1000, 2296, -1000, 6, 6, 794, 37882, -1000, 36154, 794,
	655, 729, 41372, -1000, 2370, -1000, -1000, 603, 250, -1000,
	-1000, 2363, 72932, 16391, 72932, 60441, 60441, 60441, 2583, 31198,
	-1000, -1000, 46126, 72932, 60868, 2765, 84772, 46126, 72932, 2433,
	-1000, -1000, -1000, 72932, -1000, 31198, -1000, 2764, 1222, 50526,
	2729, -19, -1000, -1000, -1000, -1000, -1000, -1000, 1989, 2011,
	1020, 1882, 2013, -1000, 24226, 2616, -1000, -1000, -1000, 249,
	16391, -1000, 1860, 2561, 1224, -1000, 1871, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1546, 2559, -1000, 1791, 2558,
	1530, -1000, -1000, 1790, -1000, -1000, 2642, -1000, -1000, 1412,
	2557, 7, -1000, -1000, 877, 2555, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 877, 2554, -1000, 790, -1000,
	49668, 39636, 50095, -7, -1000, -1000, -24, -1000, 15064, 84336,
	-1000, -1000, -1000, 84336, 771, -1000, -1000, 2538, -1000, 84336,
	747, -1000, -1000, 2534, -1000, -1000, -1000, 2939, -1000, 2938,
	1950, 2936, 2932, 2931, -1000, 1365, 1588, 2930, -1000, 2925,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 57849, 1849, -1000,
	-1000, 56983, 57416, 923, -1000, 877, 1949, -1000, 877, 1948,
	-1000, 833, -1000, 2924, 67315, 2115, 877, 1947, -1000, -1000,
	-1000, -1000, -1000, 42667, -1000, 42667, -1000, 42667, -1000, 1274,
	-1000, 75494, 6, 6, 2801, -1000, -1000, -1000, -1000, -1000,
	2532, 2923, 2913, 2902, -1000, 72932, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 185, 2531, -1000, -1000, 185,
	2530, -1000, 185, 2528, -1000, 183, 2526, -1000, -1000, 1742,
	2525, -1000, -32, 2522, -1000, -1000, -32, 2520, -1000, -25,
	-1000, -1000, -1000, 868, -1000, 38315, -1000, 38315, 66882, 49668,
	861, 657, 43960, 84336, -1000, -132, -1000, 39636, 84336, -1000,
	49668, 56983, -1000, 66449, 56556, -1000, -1000, 1144, 2015, -1000,
	-1000, -1000, 861, 49668, 49668, 49668, -1000, 66016, -1000, -1000,
	1697, 1359, 2645, 1694, 60441, -1000, 1641, -1000, -1000, -1000,
	2667, 2429, -1000, 45695, 62149, -1000, 61722, -1000, 61295, -1000,
	60441, -1000, 60441, -1000, 2901, 2900, 2899, -1000, 2897, 2665,
	84336, 2659, -1000, 2529, 1443, 1438, 72932, -1000, -1000, 72932,
	-1000, 72932, -1000, -1000, -1000, 1988, -1000, -1000, -1000, -1000,
	60441, -1000, -1000, -1000, -1000, -1000, -1000, 2425, -1000, 1425,
	-1000, 1565, -1000, 1138, -1000, -1000, 188, -1000, -1000, -19,
	-1000, 75067, -1000, -1000, 2028, -1000, 72932, -1000, 2016, 2391,
	2417, 1329, 1795, 2077, -1000, 29338, 2066, 33478, 1870, 170,
	-1000, -1000, 170, 170, 23770, -1000, -1000, 84772, 84772, 16391,
	1118, 31198, 31198, 31198, 31198, 31198, 31198, 31198, 31198, 31198,
	31198, 31198, 31198, 31198, 31198, 31198, 31198, 31198, 31198, 31198,
	31198, 31198, 31198, 31198, 31198, 31198, 31198, 31198, 31198, 31198,
	31198, 31198, 31198, 31198, 31198, 31198, 2005, 31198, 1088, 31198,
	31198, 31198, 31198, 2049, -1000, -1000, 1567, 446, 1659, -1000,
	2826, 2826, 2826, 84600, 84600, 459, 2896, 722, -1000, 31198,
	-1000, 656, 31198, 16834, -1000, -1000, -1000, 395, 7330, 1908,
	-1000, 394, 17302, -1000, -1000, -1000, 18214, 536, 28870, 31198,
	907, 84336, 1273, 2811, 14623, 2186, 2166, -1000, 2842, -1000,
	-1000, 2811, -1000, -1000, -1000, -1000, 2811, 1117, 1116, 2811,
	-1000, 2811, 2811, 596, 714, 711, 20542, 20074, 19606, 19138,
	617, 31198, 31198, 31198, 31198, 31198, 31198, 31198, 31198, -1000,
	28414, 27946, 27478, 33934, 27010, 31198, 18670, 26542, 26074, 72932,
	-5, 2763, 31198, 149, -1000, 82488, -1000, 149, 149, 592,
	-26, 84336, 2044, 2044, 37451, 1899, 1670, 1670, 1670, -1000,
	794, 11069, 794, 65158, 1699, 794, 794, 243, 299, 393,
	35723, 2296, 65158, 707, 591, 29, 24, 17, -1000, -1000,
	16, 15, -1000, -1000, 60441, 590, 16834, 16391, 1201, -33,
	242, 2071, 2070, 2067, -1000, 2059, 1363, -34, 1085, -146,
	-1000, 7623, -36, -1000, 914, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 910, 588, 586,
	333, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 583, 1595, 574,
	574, 574, -1000, -1000, -1000, 324, 565, 316, 563, -1000,
	-1000, -1000, -1000, -1000, -1000, 2361, -24, 60868, 802, -41,
	1024, -19, -1000, -1000, -1000, 50526, 1097, -1000, 1321, -1000,
	-1000, -1000, -1000, -1000, -1000, 1195, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 851, -1000, -1000, -1000, -1000, -1000, -1000,
	2838, 2836, -6, -1000, -1000, 16391, -1000, -20, 1476, -1000,
	52238, 1859, 2647, 2637, 1266, -1000, 1212, 2710, 55690, 2738,
	2756, 228, -1000, 2356, -1000, -1000, 836, 1422, 1083, 55690,
	1791, -1000, 84772, -1000, 2176, 2707, 1223, 1180, 1223, 1223,
	1189, -1000, 55690, 1081, -1000, 1080, -1000, -21, 2731, 2748,
	136, -1000, 2351, 1078, -1000, -1000, 60441, 16391, -1000, 2007,
	-1000, 49668, -1000, 49668, 2120, -1000, -43, 790, -7, 50095,
	72932, 238, -1000, 31198, 656, 31198, 656, -1000, -1000, 2519,
	-1000, -1000, -1000, 2895, 1564, 2003, -1000, -1000, -1000, 562,
	1946, 2327, 72932, 2076, -13, 60441, -1000, 1791, 1945, -1000,
	-1000, 56123, -1000, 2518, -1000, 2515, 531, 2894, -1000, 1844,
	1943, -1000, -1000, -1000, 74640, 1087, 2514, 966, 725, 2761,
	-1000, 725, 43098, -1000, 72932, -1000, -1000, 72932, -1000, -1000,
	-1000, 2893, -1000, 60441, -1000, -1000, 60441, -1000, 60441, -1000,
	60441, -1000, 60441, 60441, -1000, 72932, 49668, 49668, 49668, 4605,
	51384, -44, -54, 390, -1000, 65589, 72932, 961, 51811, 72932,
	2606, 861, 39636, -132, 861, 861, 790, -1000, 790, -1000,
	60441, 2410, -1000, 861, 861, 861, -1000, -1000, -1000, -1000,
	2892, 2891, -1000, -1000, -1000, 876, 60441, 72932, 60441, -1000,
	-1000, 72932, -1000, 72932, -1000, 876, 72932, 876, 72932, 876,
	72932, -1000, -1000, -1000, -1000, -1000, -1000, 656, 31198, 1317,
	-1000, 2397, -1000, 2392, -1000, 41, -1000, -1000, -1000, -1000,
	1793, 60441, 60441, 60441, 60441, 72932, 60441, -1000, 55690, -1000,
	2016, 2391, -1000, -1000, -1000, -1000, -1000, -1000, 1336, 1821,
	-1000, 2039, -1000, 1246, -1000, -1000, -1000, 84336, 34390, -1000,
	-1000, 84336, 1426, -1000, 33022, 32566, -1000, -1000, 1354, 60441,
	2089, -1000, 2089, -12, -1000, 82156, 2027, 60441, -1000, -1000,
	-1000, -1000, -1000, 830, 1128, 1128, 1163, 1163, 1163, 1163,
	2743, 4102, 4688, 3862, 5417, 5417, 388, 388, 388, 388,
	388, 5417, 1397, 460, 460, 1397, 1397, 1397, 1397, 1397,
	460, 460, 460, 5417, 5417, 5417, 84600, 9215, 9820, 31198,
	31198, 1074, 1517, 446, 9264, 31198, 4219, 4219, 4219, 4219,
	-1000, 1987, -1000, -1000, -1000, -1000, 2313, 554, 33934, 33934,
	-1000, -1000, -1000, -1000, 17758, 31198, -1000, -1000, -1000, -1000,
	25606, -1000, -1000, 81578, -237, 389, -156, 12, -1000, 31198,
	31198, 31198, 386, -1000, 237, 31198, 72932, -1000, 78498, 699,
	-55, -1000, -60, 1228, -1000, 31198, -1000, -1000, 1073, -1000,
	1071, 1070, 1068, -1000, 553, 373, -1000, 235, -1000, 1666,
	552, 551, 370, -62, 369, 822, 811, 367, 366, 360,
	31198, -1000, -1000, -1000, -1000, -1000, 81535, -1000, -1000, 81246,
	-1000, -1000, 80957, -1000, -1000, 80914, -1000, -1000, -1000, 84072,
	78234, 77970, 77679, 3926, 77636, 10285, -63, 359, -1000, 2295,
	-156, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 357,
	-1000, 356, -1000, 83808, -156, 355, 2099, -1000, 33934, 33934,
	33934, -1000, 352, -1000, 82199, -1000, 83544, 25150, 25150, 25150,
	351, 83280, 31198, -156, -65, -1000, -70, -1000, -1000, 549,
	-71, 902, 24682, 36587, 16391, -1000, 902, 902, 31198, -1000,
	31198, 2045, -1000, -1000, -1000, 2022, 1879, 2044, 37451, -1000,
	-1000, -1000, -1000, 65158, -1000, 2801, 2364, -1000, 65158, -1000,
	-1000, 72932, 410, -1000, 65158, 65158, 16391, 794, -1000, 794,
	65158, 702, -1000, -1000, -1000, -1000, -1000, 350, 40508, 12,
	233, 861, -1000, 16391, 2150, 2150, 2150, 2150, -1000, -1000,
	72932, 2767, -1000, 1604, -1000, 84772, -1000, 716, 972, 547,
	-1000, 2811, 2811, -1000, 2811, 72932, 128, 24226, -1000, 1097,
	-1000, -1000, 1351, -1000, 1569, -1000, 1114, -1000, -1000, -1000,
	-1000, 24226, -1000, 1855, 72932, 72932, 60441, -1000, -1000, 1941,
	74213, 1936, 84772, 72932, -1000, -1000, 546, 544, 2024, 2021,
	72932, 72932, 2020, 73786, 73359, 72932, 1605, 31198, 1838, 1559,
	656, 656, -1000, -1000, 656, 542, 1091, 60441, 60441, 60441,
	1504, -1000, -1000, -1000, -1000, -1000, 55263, -1000, -1000, 2833,
	2823, -1000, 1223, -1000, -1000, -1000, 1223, 1791, 1499, 60441,
	72932, 1622, 656, 656, -1000, -1000, 656, 541, 16391, 1549,
	-1000, 2007, -1000, -1000, -1000, -1000, 45268, 877, 877, 861,
	2293, -1000, 2120, -1000, -1000, 14182, 84336, -1000, 84336, -1000,
	72932, -1000, 922, 72932, 51811, 857, 2509, 42236, -24, 861,
	49668, 60441, -13, -1000, 1791, 2508, 410, 1932, -1000, -1000,
	49668, 49668, 2890, 540, 2888, -1000, 60441, 2505, 1841, 1931,
	2568, 746, 72932, 902, 37451, 1637, -1000, 40941, 935, 72932,
	1439, 127, -1000, -1000, -1000, 19, 72932, -1000, 2887, -1000,
	-1000, 185, 185, 185, -1000, 183, 1742, -1000, -32, -32,
	-1000, -1000, 4605, 4605, 861, -14, 539, -1000, 779, 776,
	39195, 49668, -77, -1000, -1000, -1000, -1000, -1000, 60441, 72932,
	615, 2113, 72932, -78, -1000, 232, 538, -1000, -1000, 861,
	2291, -1000, -1000, 884, -1000, 1129, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 5, -24, -24, -1000, 876,
	-1000, 876, -1000, 876, -1000, 84336, -1000, 1311, 1300, 72932,
	-1000, 16391, 72932, 60441, 16391, 60441, 2387, 2384, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 989, -1000, 1426, 1816,
	-1000, 536, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1977, -1000, -16, 23770, 1891, -1000, -1000, 60441, 4,
	31198, 31198, 8306, 6185, 31198, 33934, 33934, -1000, 31198, 4675,
	-1000, -1000, -1000, -1000, -1000, 2270, 534, 31198, 84772, 1076,
	871, -1000, 349, 9797, 1397, -1000, 31198, -1000, 347, 23314,
	-1000, 82752, 1, -79, -1000, 11522, -156, -80, -1000, -1000,
	713, -1000, 2512, -1000, 31198, 83016, 1962, 1714, 1400, 1301,
	2811, 2856, 13741, -1000, 43529, 905, 1707, -1000, -1000, 2811,
	813, -1000, -1000, -1000, 813, -1000, 80625, -1000, -1000, -1000,
	-1000, 84772, 84772, 31198, 31198, -1000, 31198, 31198, 31198, -1000,
	-1000, 31198, -1000, -1000, 2263, 31198, -1000, 84772, 84772, 33934,
	33934, 33934, 33934, 33934, 33934, 33934, 33934, 33934, 33934, 33934,
	33934, 33934, 33934, 33934, 33934, 33934, 33934, 33934, 2050, 33934,
	2824, 2824, 2824, -1000, 2283, 2263, 31198, 31198, 84772, 346,
	344, 343, -1000, 31198, -156, -1000, -1000, 4605, -1000, 2160,
	-1000, 31198, -1000, -195, -1000, 2296, -1000, -1000, 2160, 2160,
	-85, 84336, 37451, 37451, -1000, 528, 31198, 2018, -1000, -1000,
	695, -235, -1000, 759, -1000, -1000, -1000, -1000, -1000, 410,
	-1000, -1000, -1000, 227, 65158, 65158, 694, -1000, -86, -1000,
	-1000, -88, -1000, 2760, 342, 16391, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -24, 1756, 2850, -1000, 2819, 703,
	692, 2811, 341, 340, 339, -24, 72932, -1000, -19, -1000,
	-1000, -1000, 31198, -1000, -1000, 2643, 1065, 1062, -1000, 2503,
	-1000, 1922, -1000, 941, -1000, 1348, -1000, 31198, 31198, 527,
	515, 1494, 2886, 959, 2501, 1742, 2491, 1742, -1000, -1000,
	843, -1000, 84336, 512, 493, -1000, -20, 1360, 879, -1000,
	-1000, 31198, 31198, 64731, -1000, 384, 2642, 3, -1000, 1061,
	-1000, -1000, -1000, -1000, 1791, 1058, -1000, -1000, -1000, 878,
	-1000, -1000, 31198, -1000, -21, 1055, -1000, -1000, -1000, -1000,
	-1000, -1000, 49668, 861, -1000, 2884, 2883, 2880, 338, -91,
	-23, 84772, 2758, 1863, 535, 60441, 818, -1000, 2801, -1000,
	-1000, -1000, 60441, 2757, 2490, 877, 877, -1000, 2879, -1000,
	950, 16391, 60441, 2482, 1996, 746, 50957, -1000, 877, 1707,
	-56, -1000, 1439, 22846, 2639, -93, -1000, -1000, -1000, 902,
	43098, 37451, 31198, 2877, -94, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 64304, 64304, 49668, 49668, 49668, 861,
	72932, 72932, 51811, 2874, 492, 72932, 72932, 491, -1000, 72932,
	72932, 2872, 49668, -1000, 656, -1000, 1731, 60441, 13300, -1000,
	-1000, -1000, -1000, -1000, 876, -1000, -1000, 1629, 1868, 1629,
	1401, 1387, -1000, 1814, -1000, -1000, -1000, -1000, 2081, 2663,
	16391, 2745, 4219, 31198, 31198, 4629, 507, 481, 4219, 31198,
	31198, 84772, 8761, -96, 31198, 31198, -1000, 31198, 691, 84336,
	2848, 31198, 337, 336, -1000, -1000, -1000, 2809, -1000, -1000,
	-1000, 84336, 31198, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	335, -1000, 20, -1000, -1000, -1000, 77202, -1000, 31198, 329,
	328, -1000, -1000, -1000, 325, 322, 6727, 279, 80336, 80293,
	80004, 84336, 2283, 84336, -1000, -1000, 1136, 1136, 1172, 1172,
	1172, 1172, 2824, 810, 1265, 433, 1249, 1249, 1249, 530,
	513, 513, 1249, 1249, 1249, 2251, 2017, 485, 3815, -1000,
	-1000, 84336, 84336, 321, -1000, -1000, -1000, -156, 318, 2151,
	2700, 84336, -1000, 37451, 2151, 2151, -1000, -1000, 1879, 72932,
	84336, 37451, -1000, 2364, -1000, 11973, -1000, 16391, -1000, -1000,
	-1000, -1000, 2801, -1000, 40508, -1000, 483, -1000, 13, -1000,
	-1000, 690, 2869, 532, 313, -1000, -1000, -1000, -24, 84336,
	72932, 72932, 72932, 2481, -1000, 3491, -1000, 79715, -99, -1000,
	82156, 31198, 72932, -1000, 1524, 2082, 1001, -1000, 2669, 72932,
	-1000, 72932, -1000, -1000, 72932, 72932, 60441, 2470, -101, 84336,
	-31, -1000, 757, -1000, 1192, -1000, 12859, 60441, 60441, 2467,
	-102, 16391, -32, -1000, -1000, -1000, -1000, 2107, -1000, 63009,
	1753, 656, -1000, 63873, 2867, 482, -1000, 1715, -1000, 688,
	1791, 656, 60441, -1000, -1000, -1000, 479, 72932, 1832, 478,
	16391, 1999, 746, 50957, -1000, 1087, 2077, -1000, -39, -1000,
	514, 656, 1707, -1000, -56, 84336, -1000, 755, -1000, -104,
	-1000, -1000, 307, -1000, 2602, 2601, -1000, -1000, 31198, 468,
	466, 72932, 2600, -1000, -1000, -107, -1000, 1952, -1000, -1000,
	-1000, -1000, -1000, 16391, 1411, -1000, 465, 461, -1000, -1000,
	-1000, -1000, 2663, 4219, 4219, 31198, 31198, 31198, 4219, 8761,
	-109, -1000, 4219, 4219, -156, -1000, -1000, 82752, -1000, -1000,
	-1000, 84336, -1000, 12418, 1639, -1000, 79672, -1000, -1000, -1000,
	-1000, 31198, 31198, -1000, -1000, -1000, -1000, -1000, 33934, 2231,
	449, 84772, -1000, -1000, 886, 31198, 31198, 2296, 886, 886,
	-1000, -112, -1000, -1000, -1000, 2801, 13, -1000, -1000, 2866,
	16391, 462, -1000, 2865, -1000, -1000, -1000, -1000, 72932, -1000,
	72932, -1000, 16391, 72932, 2179, 1914, -1000, -1000, 2010, 448,
	33934, 60441, 769, 2211, 1501, 31198, 1891, -115, -118, 1904,
	-1000, -1000, 1895, 31198, -1000, 84772, 447, 1742, 1742, -120,
	-121, -1000, 31198, 1052, 72932, 22390, -1000, 2864, 2642, -1000,
	-1000, 31198, 1044, -1000, 1622, 2138, -1000, -1000, -1000, -1000,
	2009, -1000, -1000, 72932, 2008, 870, -129, -1000, 753, 749,
	-1000, 51811, 857, 834, -1000, -1000, -1000, 410, 31198, -1000,
	60441, 31198, 1831, -1000, 746, 50957, -1000, 2568, 1439, -1000,
	2580, 72932, 2636, -1000, 2077, 446, -1000, 861, 445, 444,
	-131, 31198, 31198, -134, 442, 861, -127, -1000, 758, 748,
	-1000, -1000, 60441, 60441, 31198, 31198, -1000, 4219, 4219, 4219,
	-1000, 297, -1000, -1000, 1707, 2699, -1000, 79383, 79094, 4023,
	33934, 84772, -136, -1000, 72932, 84336, -156, -1000, -1000, -1000,
	434, -1000, 2863, -1000, -1000, 1940, -1000, -1000, -1000, 72932,
	1912, -1000, 958, 31198, 3815, 441, 31198, -1000, -1000, 2100,
	2302, 2107, 440, -1000, -1000, -1000, -1000, 948, 1554, -1000,
	-1000, 84336, 2680, 31198, -1000, -1000, 439, 438, 84336, 437,
	743, 2226, -1000, -1000, -1000, 84336, 436, 857, -1000, 1658,
	1753, 432, -1000, -1000, -1000, 2106, -1000, 63873, 34831, 34831,
	293, 2755, 834, -1000, 2797, -1000, 2749, -137, 950, -144,
	60441, 50957, -1000, 1996, -1000, 1150, -145, 72932, 1439, -1000,
	-1000, 49668, 49668, 948, -147, -154, -1000, 49668, -1000, 1952,
	-1000, 72932, -1000, 72932, -1000, -1000, -160, -161, -1000, 1566,
	31198, -1000, -1000, 4023, -166, -1000, -143, -1000, 2742, -1000,
	-1000, -1000, -1000, 2478, 2155, 79051, 1971, 72932, 78762, 2276,
	-1000, -1000, 1622, 72932, 2107, 2152, 60441, 949, 16391, -168,
	1629, 1629, 31198, 21934, 1655, 31198, -1000, 60441, 72932, -1000,
	2539, -1000, -1000, -1000, 2107, 656, -1000, -1000, 656, 948,
	431, 1501, 414, -1000, 1999, 1264, -1000, 902, -1000, -1000,
	-169, -183, 1501, 948, -1000, -190, -1000, -192, -198, -1000,
	-1000, 280, 32110, 32110, 32110, -156, -1000, 72932, 412, 2459,
	875, -1000, 1794, 1558, 159, 968, -1000, -1000, 2211, -199,
	-1000, 872, 410, -1000, 31198, -1000, 948, -200, -1000, 932,
	-201, -1000, 931, -206, -1000, 2208, -1000, -207, 408, -208,
	-1000, -1000, -1000, 1622, 870, -1000, 1501, 31198, 2107, 31198,
	-1000, 43098, -1000, 861, 861, 2107, 1501, 861, -1000, -1000,
	-1000, 2524, -1000, 35272, 1750, 1385, 81867, 2524, 2524, -1000,
	-1000, 72932, 2718, -1000, 1829, 1824, 1303, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2706, 1971, 84336, 2107, -1000,
	1629, 2137, -1000, 1629, 2174, -1000, 1653, -1000, 72932, -1000,
	72932, 857, -1000, 2107, -209, 1622, -214, -185, -1000, -1000,
	1622, 2107, -1000, -1000, 1418, 2753, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 741, -1000, 2586, -1000, 973, 1804,
	1804, 726, 1794, -1000, -1000, 407, -1000, 405, -1000, -219,
	-1000, -1000, 1622, 948, 873, 1501, -1000, -1000, 1622, 1370,
	-1000, -1000, 1689, 31654, 31198, -1000, 2783, -1000, -1000, 2052,
	-1000, 31198, 2211, 31198, 31198, 1704, 873, 1501, -1000, 2849,
	2107, -1000, -1000, -1000, -1000, 84336, -1000, -1000, -1000, 84336,
	-1000, -222, -224, -1000, -1000, -1000, -1000, 2107, -1000, 1622,
	1622, 1034, 1622, 873, -1000, 404, 873, -1000, 31198, -1000,
	-225, 1622, -1000,
}
var sqlPgo = [...]int{

	0, 3518, 3517, 3516, 3514, 3510, 3507, 3506, 3505, 3503,
	3501, 3500, 3497, 3496, 3494, 3491, 3490, 3489, 3485, 3484,
	3483, 3480, 3479, 3478, 3477, 3476, 3475, 3473, 3472, 3471,
	3465, 3464, 3461, 3459, 3458, 3457, 3454, 3453, 3452, 3451,
	3450, 3449, 3448, 3446, 3445, 3444, 3443, 3441, 35, 3439,
	3436, 3432, 3431, 3430, 3429, 3427, 3426, 3425, 3424, 3421,
	3412, 3410, 3409, 3408, 3407, 3406, 38, 3403, 229, 3400,
	3398, 3394, 3392, 3391, 3390, 3387, 3379, 3377, 3376, 228,
	3375, 99, 3374, 3372, 3371, 3370, 3368, 227, 3367, 3366,
	3363, 3361, 3359, 3358, 3353, 3350, 156, 197, 3348, 213,
	3347, 3345, 3344, 3341, 3339, 3338, 3336, 3335, 3333, 3332,
	203, 3330, 225, 3327, 3322, 3321, 3318, 3309, 3308, 3307,
	3306, 3305, 3303, 3302, 3301, 3300, 3299, 3298, 3297, 3295,
	3294, 3291, 3289, 3287, 3282, 3280, 3277, 3272, 3269, 3267,
	236, 152, 3266, 3265, 224, 223, 3262, 118, 120, 95,
	66, 3261, 112, 40, 3260, 9, 136, 206, 6036, 201,
	3258, 3257, 3255, 195, 148, 3253, 196, 3252, 3251, 3250,
	3249, 80, 63, 139, 137, 131, 133, 147, 3248, 3247,
	71, 57, 49, 29, 3246, 3245, 3244, 2626, 110, 3243,
	3242, 219, 202, 130, 3241, 3240, 1025, 3236, 200, 107,
	115, 31, 100, 3235, 104, 20, 3233, 142, 50, 3230,
	127, 59, 34, 6632, 7552, 3229, 93, 234, 85, 76,
	175, 173, 180, 174, 135, 94, 3227, 207, 3217, 111,
	167, 3211, 3209, 3208, 62, 157, 79, 3206, 15, 3,
	134, 12, 89, 14, 3203, 13, 3202, 3200, 3198, 3197,
	33, 128, 3196, 105, 91, 3191, 65, 3190, 18, 172,
	3189, 185, 97, 3187, 3186, 212, 163, 154, 3185, 16,
	189, 3184, 3183, 3182, 3180, 3179, 98, 23, 96, 3177,
	3176, 124, 194, 153, 3172, 52, 3168, 132, 75, 121,
	230, 108, 186, 87, 182, 143, 190, 3166, 3157, 3155,
	158, 3152, 3149, 169, 123, 3147, 3142, 232, 36, 54,
	193, 58, 151, 126, 3139, 162, 3137, 3136, 3135, 231,
	149, 184, 5, 2, 70, 122, 27, 10, 191, 125,
	205, 81, 3131, 3725, 1186, 342, 43, 103, 88, 56,
	119, 109, 221, 64, 3130, 3125, 1547, 3124, 3120, 3119,
	3118, 140, 3114, 3113, 3111, 117, 144, 160, 3109, 113,
	68, 11, 116, 204, 222, 90, 171, 166, 209, 3108,
	150, 3107, 74, 138, 3106, 161, 210, 129, 3105, 181,
	114, 3104, 214, 3102, 3099, 3098, 3097, 3096, 3094, 3090,
	72, 3089, 102, 3088, 3087, 220, 155, 3086, 217, 192,
	198, 77, 30, 3085, 73, 86, 3084, 159, 37, 3082,
	3228, 32, 0, 7495, 5203, 7219, 3081, 1561, 3080, 179,
	92, 3079, 3077, 3076, 83, 3075, 55, 3074, 3073, 53,
	3072, 21, 7, 8, 22, 17, 749, 145, 3071, 3070,
	84, 106, 164, 3069, 226, 188, 3067, 3065, 3064, 69,
	3063, 26, 3062, 24, 3061, 3059, 25, 6, 19, 3057,
	3055, 199, 3053, 208, 3052, 3051, 2779, 101, 3050, 3049,
	216, 67, 3048, 215, 3047, 141, 170, 3046, 3045, 3044,
	3042, 211, 3040, 2750, 3039, 28, 4, 3038, 3036, 168,
	1, 2691, 3000, 2999, 61, 2996, 2995, 146,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 12, 12, 7, 7, 8, 8,
	8, 36, 36, 9, 9, 9, 11, 11, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 15, 15, 26,
	26, 16, 16, 28, 28, 17, 17, 29, 29, 470,
	470, 20, 31, 21, 32, 14, 471, 471, 471, 471,
	25, 22, 33, 23, 23, 23, 23, 23, 151, 151,
	151, 151, 19, 19, 27, 27, 174, 174, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	469, 469, 176, 176, 175, 170, 170, 472, 472, 177,
	177, 177, 179, 179, 37, 37, 37, 95, 95, 95,
	96, 96, 97, 97, 152, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 83, 83, 410, 410, 411, 411,
	147, 147, 148, 148, 148, 148, 149, 149, 150, 150,
	150, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 41, 41, 41, 41, 41, 41, 42,
	42, 42, 42, 42, 42, 49, 49, 49, 49, 141,
	141, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 479, 479, 480, 480, 481, 481, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 63, 63, 252, 252, 228, 228, 64, 64,
	64, 65, 65, 66, 66, 53, 53, 463, 463, 266,
	266, 374, 374, 68, 68, 286, 286, 69, 69, 69,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	77, 77, 77, 78, 78, 78, 75, 75, 75, 73,
	73, 73, 72, 72, 72, 76, 76, 76, 74, 74,
	74, 267, 267, 79, 79, 79, 79, 79, 79, 79,
	79, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 376, 376, 80, 80,
	80, 344, 344, 84, 84, 84, 301, 301, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 98, 98, 98,
	98, 466, 466, 259, 259, 191, 191, 191, 191, 91,
	91, 91, 91, 92, 92, 92, 93, 93, 146, 146,
	104, 104, 104, 104, 104, 103, 103, 103, 103, 103,
	103, 43, 43, 43, 44, 44, 45, 45, 46, 46,
	47, 47, 48, 48, 48, 48, 48, 106, 106, 475,
	475, 108, 105, 105, 105, 107, 107, 107, 107, 109,
	110, 110, 110, 110, 110, 110, 110, 110, 111, 111,
	404, 404, 275, 275, 402, 402, 418, 418, 403, 403,
	232, 232, 232, 232, 232, 233, 233, 233, 409, 409,
	409, 409, 409, 409, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 131, 131, 131, 140,
	140, 140, 140, 140, 140, 140, 133, 133, 133, 121,
	121, 113, 113, 113, 113, 113, 117, 117, 117, 117,
	117, 117, 117, 117, 114, 114, 123, 123, 123, 123,
	123, 118, 118, 120, 120, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 115, 115, 115, 115, 125, 125,
	125, 125, 307, 307, 307, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 136, 136, 136, 136, 136,
	136, 358, 358, 132, 132, 132, 132, 135, 135, 135,
	135, 291, 291, 129, 129, 129, 130, 130, 130, 134,
	134, 137, 137, 137, 137, 116, 116, 116, 484, 484,
	484, 138, 138, 128, 128, 139, 139, 139, 139, 139,
	139, 139, 139, 127, 127, 127, 126, 126, 126, 126,
	119, 464, 464, 461, 461, 461, 461, 461, 461, 461,
	462, 462, 465, 465, 89, 89, 89, 58, 58, 155,
	155, 155, 155, 153, 153, 154, 154, 59, 59, 485,
	485, 485, 473, 473, 473, 474, 474, 474, 474, 474,
	474, 234, 234, 235, 235, 325, 325, 325, 325, 325,
	238, 238, 178, 178, 178, 241, 242, 242, 239, 239,
	240, 240, 240, 244, 244, 243, 246, 246, 245, 324,
	425, 425, 427, 427, 427, 427, 427, 427, 427, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	423, 423, 423, 424, 419, 419, 420, 420, 420, 420,
	236, 236, 237, 237, 237, 237, 421, 422, 257, 257,
	361, 426, 426, 428, 428, 430, 486, 486, 486, 486,
	486, 486, 487, 487, 323, 323, 322, 322, 250, 250,
	431, 431, 431, 431, 432, 432, 432, 432, 432, 435,
	434, 433, 433, 433, 433, 433, 62, 62, 62, 288,
	288, 287, 287, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 143, 143,
	194, 194, 60, 60, 60, 57, 57, 57, 10, 10,
	10, 13, 13, 13, 483, 483, 61, 61, 61, 61,
	193, 193, 193, 468, 468, 467, 467, 489, 489, 67,
	67, 67, 67, 67, 67, 56, 56, 56, 56, 56,
	490, 490, 308, 308, 306, 306, 256, 256, 360, 197,
	197, 171, 171, 171, 24, 18, 18, 34, 34, 35,
	35, 30, 30, 476, 476, 477, 477, 90, 90, 94,
	94, 94, 102, 102, 142, 142, 142, 142, 142, 142,
	142, 38, 38, 38, 38, 50, 50, 50, 50, 100,
	492, 492, 492, 101, 101, 491, 491, 190, 190, 190,
	190, 192, 192, 319, 319, 320, 320, 493, 493, 321,
	321, 321, 321, 185, 184, 186, 186, 55, 55, 55,
	180, 180, 181, 181, 182, 182, 183, 183, 494, 494,
	87, 87, 87, 145, 145, 227, 227, 227, 315, 315,
	315, 251, 251, 202, 202, 318, 318, 316, 316, 316,
	316, 285, 285, 285, 144, 144, 264, 264, 277, 277,
	278, 278, 371, 371, 279, 99, 99, 158, 158, 156,
	156, 156, 156, 156, 156, 156, 156, 163, 163, 164,
	164, 165, 165, 166, 167, 167, 167, 167, 268, 268,
	168, 168, 168, 157, 157, 157, 159, 159, 159, 159,
	159, 159, 159, 162, 162, 162, 162, 169, 169, 169,
	161, 161, 442, 442, 442, 444, 444, 445, 441, 441,
	443, 443, 488, 488, 290, 290, 290, 248, 249, 247,
	247, 254, 254, 253, 255, 255, 359, 359, 359, 172,
	172, 172, 282, 282, 282, 282, 283, 283, 311, 311,
	309, 309, 309, 309, 310, 310, 312, 312, 312, 313,
	313, 314, 314, 281, 281, 340, 340, 160, 160, 160,
	261, 261, 261, 262, 262, 331, 331, 331, 331, 331,
	331, 332, 332, 330, 330, 330, 330, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 363, 364, 364, 263,
	263, 365, 317, 317, 459, 459, 459, 460, 460, 357,
	357, 366, 366, 366, 366, 366, 366, 355, 355, 356,
	356, 372, 373, 373, 294, 294, 294, 294, 292, 292,
	295, 295, 295, 295, 293, 293, 367, 367, 367, 367,
	284, 284, 368, 368, 368, 368, 369, 326, 327, 327,
	377, 377, 377, 377, 392, 260, 260, 260, 260, 260,
	495, 495, 378, 378, 378, 378, 378, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 382,
	382, 382, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	391, 391, 391, 391, 391, 383, 383, 388, 388, 389,
	389, 389, 384, 385, 390, 390, 390, 390, 496, 496,
	394, 394, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 380, 380, 380, 387, 387, 387, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	302, 302, 304, 304, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 335,
	335, 335, 335, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 436, 436,
	436, 436, 436, 436, 436, 436, 439, 439, 440, 440,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 446,
	446, 447, 447, 449, 449, 450, 450, 451, 452, 452,
	452, 453, 454, 454, 448, 448, 455, 455, 455, 455,
	456, 456, 457, 457, 457, 457, 457, 458, 458, 458,
	458, 458, 346, 346, 347, 347, 353, 353, 353, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 195, 195, 195, 195, 195,
	273, 273, 271, 271, 271, 274, 274, 272, 272, 270,
	270, 269, 269, 343, 343, 341, 341, 345, 345, 296,
	296, 393, 393, 393, 393, 393, 393, 393, 393, 297,
	297, 297, 305, 298, 298, 299, 299, 299, 299, 299,
	337, 338, 300, 300, 300, 339, 339, 348, 352, 352,
	351, 350, 350, 349, 349, 328, 328, 329, 329, 280,
	280, 497, 497, 276, 276, 370, 370, 370, 370, 230,
	230, 265, 265, 229, 229, 222, 222, 223, 223, 223,
	223, 258, 258, 354, 354, 395, 395, 396, 396, 397,
	397, 398, 398, 399, 400, 401, 342, 342, 212, 211,
	199, 200, 210, 209, 208, 198, 201, 205, 206, 207,
	203, 204, 218, 217, 216, 214, 215, 375, 224, 224,
	225, 225, 225, 226, 226, 226, 226, 196, 196, 219,
	219, 220, 221, 221, 213, 213, 213, 187, 187, 187,
	188, 188, 189, 189, 408, 408, 406, 406, 406, 407,
	407, 407, 407, 405, 405, 405, 405, 405, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 414, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 417, 417,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 3, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 6, 7, 2, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 3, 4, 6, 3, 4, 6, 3, 4,
	6, 3, 4, 6, 3, 3, 5, 3, 3, 5,
	3, 1, 3, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 2, 6, 4, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 3, 2, 4, 3, 3,
	5, 4, 3, 5, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 3, 3, 4, 3, 1, 1,
	1, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 3, 4, 10, 10, 3, 5, 5, 5, 3,
	5, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 1, 2, 0, 3, 3, 2, 10, 13, 0,
	2, 4, 3, 3, 3, 1, 3, 9, 12, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 1, 3,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 1, 2, 8, 4, 2, 5, 5, 5, 2,
	9, 10, 6, 5, 3, 1, 5, 8, 7, 11,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 7, 3, 4, 6,
	3, 4, 6, 3, 1, 1, 8, 11, 7, 5,
	1, 1, 1, 1, 2, 2, 0, 0, 1, 6,
	7, 6, 5, 3, 4, 15, 18, 14, 17, 4,
	0, 2, 2, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 6, 6, 8, 6, 8, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 2, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 2, 1, 0, 1, 3, 2,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 2, 3, 2, 2, 8, 11, 3,
	3, 0, 3, 0, 3, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 8, 5, 3, 4, 3,
	0, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 6, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 2, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 2,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 470, -81, -51, -49, -84, -85, -69,
	-86, -80, -98, -102, -90, -104, -142, -3, -37, -39,
	-52, -68, -70, -79, -88, -87, -89, -91, -95, -94,
	-83, -43, -99, -103, -112, -143, -144, -145, 85, 71,
	127, 108, 113, 160, 297, 327, 337, 321, -107, -108,
	356, -38, -50, -101, -100, -4, -13, -10, 27, 41,
	-40, -41, -42, 56, -57, -60, -54, -63, -478, 87,
	-443, -71, -74, -76, -482, 118, 133, 177, 289, -92,
	-93, 323, 325, 134, -45, -44, 128, -156, -158, -105,
	-106, -146, -113, -114, -115, -116, -117, -118, -119, -120,
	-121, -122, -123, -124, -125, -126, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, 360,
	407, 42, 370, 72, 121, 331, 21, -5, -6, -7,
	-8, -9, -11, -12, -53, -55, -56, -58, -59, -67,
	-61, -62, -442, -72, -73, -75, -77, -78, 322, -159,
	-157, 467, 420, -15, -20, -21, -16, -17, -19, -22,
	-18, -26, -31, -32, -28, -29, -27, -30, -33, -34,
	-35, -36, -24, -25, -14, -23, 438, 446, -162, -160,
	-161, -169, 344, 428, 384, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, -214, -219, -220, -221, -213,
	-187, -414, -417, 4, -412, -415, 139, 184, 255, 21,
	22, 23, 24, 25, 27, 38, 40, 39, 41, 42,
	45, 48, 49, 47, 52, 53, 54, 55, 56, 57,
	60, 65, 70, 71, 72, 73, 74, 75, 80, 77,
	78, 79, 82, 84, 85, 86, 88, 90, 91, 99,
	100, 101, 102, 103, 104, 108, 111, 110, 113, 116,
	117, 118, 120, 122, 123, 125, 127, 128, 131, 129,
	390, 130, 132, 133, 134, 135, 145, 146, 147, 149,
	150, 152, 154, 158, 159, 161, 165, 167, 168, 169,
	170, 176, 177, 179, 180, 185, 181, 186, 190, 193,
	192, 194, 195, 196, 187, 201, 205, 206, 207, 209,
	210, 213, 214, 215, 216, 217, 220, 219, 222, 225,
	226, 229, 230, 233, 234, 235, 237, 238, 241, 239,
	242, 240, 243, 246, 244, 245, 248, 249, 253, 251,
	250, 257, 260, 174, 262, 263, 265, 266, 267, 283,
	270, 271, 272, 275, 276, 279, 282, 284, 285, 286,
	287, 288, 289, 290, 292, 293, 295, 297, 299, 301,
	302, 303, 304, 305, 306, 307, 309, 310, 312, 313,
	314, 315, 316, 321, 318, 319, 320, 322, 323, 324,
	325, 327, 329, 330, 331, 332, 334, 336, 357, 358,
	372, 337, 338, 339, 340, 341, 342, 343, 347, 351,
	348, 349, 350, 345, 346, 352, 353, 354, 356, 359,
	360, 362, 363, 365, 366, 368, 369, 370, 371, 373,
	376, 377, 378, 374, 375, 383, 381, 382, 385, 386,
	387, 388, 389, 391, 393, 401, 402, 404, 407, 408,
	409, 399, 411, 412, 415, 416, 417, 418, 419, 424,
	420, 422, 425, 426, 427, 433, 432, 439, 440, 442,
	443, 444, 33, 43, 44, 46, 50, 61, 62, 63,
	66, 105, 106, 126, 136, 137, 148, 162, 164, 171,
	172, 173, 191, 197, 199, 203, 223, 259, 261, 277,
	281, 294, 296, 308, 333, 364, 379, 394, 395, 396,
	397, 403, 405, 428, 429, 430, 434, 441, 268, -207,
	2, -187, -187, 297, 26, 2, 26, 293, 346, 386,
	388, 2, -466, -259, 2, 26, -191, -187, 87, 160,
	344, -207, 2, -466, -259, 24, 2, -187, 2, -192,
	2, 337, -187, 470, 82, 230, 65, 333, 353, -110,
	402, -109, 394, 339, -111, -404, 2, 246, -187, 470,
	470, 470, 470, 470, 2, 384, 286, 432, 345, 101,
	305, 184, 421, -483, 329, 163, 398, -461, 2, 4,
	-415, -412, -223, -222, 384, 101, -221, -213, 460, -220,
	470, 470, 470, 2, 206, 207, 304, 303, 353, 354,
	470, 470, 470, 2, 25, 59, 81, 84, 107, 135,
	155, 158, 273, -479, 238, 283, 302, 339, 352, 383,
	391, 404, -474, 371, 60, -473, 421, -483, 409, 116,
	-306, 101, 230, 159, 416, 388, 386, 414, 111, 190,
	419, 418, 470, 470, 25, 59, 68, 84, 116, 135,
	155, 158, -481, 283, 302, 336, 339, 352, 383, 391,
	409, 404, 2, 432, 345, 384, 184, 101, 421, -483,
	300, -81, 2, 467, 29, 28, 356, -152, 384, 200,
	2, -187, 206, 207, 2, 470, 470, 156, -461, 2,
	206, 207, 2, 200, 2, 60, 341, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 2, -140, 353, 371, 169, 41,
	65, 26, 301, 70, 287, 102, 161, 184, 185, 214,
	81, 82, -307, 40, 207, 206, -358, 385, 340, 346,
	381, 402, 87, 422, 330, 444, 305, 306, 129, 4,
	101, 246, 355, 394, 230, 74, -488, 2, 384, -491,
	2, 402, 402, 2, -491, 2, -491, 2, -190, 2,
	402, 398, -492, 402, 441, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, -157, -159,
	-158, 470, 470, 470, 470, 470, -140, 353, 2, 65,
	26, -253, -254, 413, 198, 124, 274, -156, -158, 2,
	-442, -402, 2, -333, -418, -335, 458, 459, 451, 254,
	445, -346, 107, 414, 268, -417, -336, -348, 126, 333,
	-274, 8, 9, 5, 6, 7, -196, -379, -342, 406,
	138, 258, -226, 471, 10, 467, -439, -158, -347, 34,
	164, 58, -406, -225, -381, -389, -385, -386, -495, 48,
	54, 53, 391, 245, 347, 348, 365, 349, 350, 45,
	424, 181, 265, 267, 192, 4, 199, -224, -213, -436,
	-437, -412, -413, 191, 197, 193, 364, 194, 195, 196,
	44, 308, 149, 150, 148, 117, 106, 105, 261, 50,
	49, 46, 429, -390, 103, 394, 395, 396, 397, 209,
	210, -187, -414, 68, 93, 94, 92, 97, 96, 232,
	231, 98, 95, 355, 421, 59, 33, 171, 172, 203,
	259, 173, 66, -438, 375, 89, 157, 189, 175, 202,
	204, 208, 224, 227, 247, 252, 256, 278, 280, 328,
	361, -496, 430, 136, 137, 281, 294, 379, 403, 405,
	162, 223, 61, 62, -444, 309, -445, -207, -444, 470,
	470, 472, 470, -247, -248, -249, 2, 26, 114, 467,
	2, -362, 2, -363, -367, -158, 218, -366, 467, -364,
	465, -214, 269, -440, 334, -436, -437, -196, -213, -225,
	4, -250, 467, 469, 101, 384, 69, 184, -301, 467,
	-187, 26, 268, 398, 472, -344, 467, 268, 156, 271,
	-187, 2, 2, 357, 2, 467, -110, 63, 402, 39,
	353, -320, 2, -321, -184, -185, -186, -372, 205, 299,
	307, 447, 444, -402, -475, 156, 450, 398, -402, -275,
	469, 2, -367, 171, -214, 2, -211, -405, 4, -412,
	-415, -413, -416, 68, -414, 26, 28, 29, 30, 32,
	34, 35, 36, 37, 51, 58, 59, 64, 67, 69,
	81, 87, 92, 93, 95, 94, 96, 97, 98, 107,
	109, 112, 114, 115, 119, 121, 124, 138, 140, 153,
	155, 156, 160, 163, 166, 178, 188, 198, 200, 218,
	221, 228, 231, 232, 254, 258, 264, 268, 269, 273,
	274, 291, 298, 311, 326, 344, 355, 367, 380, 384,
	392, 398, 400, 406, 413, 414, 421, 423, 431, 435,
	436, 437, 438, -417, 2, -367, 171, 2, -216, 171,
	-367, -219, 2, -198, -187, 2, -210, -405, 2, -229,
	171, -214, -215, -219, -410, 171, 2, -408, 10, -407,
	5, 4, -412, -415, -413, -410, 171, 2, -96, -410,
	467, 398, 472, -265, -222, -223, -258, -187, 469, -333,
	2, -99, 2, -333, 171, 2, -99, 171, 2, -333,
	171, 2, -99, 171, 2, 2, 2, 404, 2, 84,
	171, -187, 384, 100, 2, 320, -480, 336, 408, 432,
	2, 2, 2, 2, 2, 2, 2, 384, -203, 2,
	-187, 153, 345, -489, 309, -410, 171, 2, -410, 171,
	2, -217, -219, -217, 184, 201, -198, 171, 2, 388,
	386, 388, 386, 156, 2, 200, 2, 200, 2, -368,
	2, -369, -363, -214, 465, 2, 2, 2, 2, 2,
	171, -187, 384, 100, 2, 216, 2, 2, 2, 2,
	2, 2, 2, 2, 2, -267, 171, 2, -214, -267,
	171, 2, -267, 171, 2, -230, 171, 2, -229, -198,
	171, 2, -411, 171, 2, -410, -411, 171, 2, -376,
	2, -375, -407, 428, -81, 467, -81, 467, 353, 467,
	-410, -214, -214, -333, -99, -97, -96, 156, -333, -99,
	-152, 153, 2, 101, 384, -140, 2, 153, 423, 2,
	8, 2, -410, 340, 306, 145, 2, 357, 2, 358,
	65, -307, 444, 65, 156, 2, 156, 2, -291, 2,
	438, -464, 2, 268, 156, 2, 156, 2, 156, 2,
	156, 2, 156, 2, 303, 354, 207, 2, -99, 435,
	-333, 435, 2, 401, 215, 130, 156, -291, 2, 156,
	2, 156, 2, 5, 2, 205, 299, 372, 2, -214,
	-484, 2, 384, 432, 345, 2, 2, 77, 78, 156,
	2, 156, 2, 156, 444, 2, -284, -367, -319, -320,
	-319, 398, -192, -253, -254, -140, 357, 2, -163, -282,
	-165, 153, -309, -310, -166, 228, 140, 264, -167, -290,
	26, 114, -290, -290, 52, 468, 468, 11, 12, 67,
	38, 458, 459, 460, 461, 151, 462, 463, 456, 457,
	455, 448, 449, 453, 211, 212, 83, 452, 450, 76,
	236, 335, 141, 142, 143, 144, 317, 182, 31, 183,
	14, 15, 16, 30, 273, 227, 445, 175, 361, 451,
	17, 18, 19, 202, 204, 256, 43, 178, -195, -231,
	-333, -333, -333, -333, -333, 280, 467, -280, -328, 465,
	-158, 467, 467, 467, 5, -401, 8, -158, -333, -346,
	468, -272, 467, -158, -346, -341, 467, 333, 465, 467,
	-349, -333, 5, 467, 469, -446, 439, -383, 467, 296,
	-382, 467, -382, -382, 433, -380, 467, 446, 440, 467,
	-380, 467, 467, 153, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 433,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 472,
	-444, -250, 467, -276, -370, -333, 460, -276, -276, 268,
	-269, -333, 89, -294, 208, 247, 157, 224, 328, 189,
	-330, 471, -330, -357, 446, -158, -364, -213, -158, -366,
	467, -362, -357, -82, -401, -68, -79, -87, -99, -112,
	-144, -145, 460, -214, 467, 156, 467, 469, 156, -258,
	-405, -198, -214, -224, -225, -229, 113, -269, -461, -258,
	-191, 35, -343, -377, -378, -379, -388, -384, -387, -391,
	48, 54, 53, 391, 245, 347, 348, 365, 349, 350,
	45, 424, 181, 265, 267, 192, 4, 46, 429, -390,
	199, 313, 314, 312, 316, 315, 191, 197, 193, 364,
	194, 195, 196, 44, 308, 149, 150, 148, 117, 106,
	105, 261, 50, 49, 103, 394, 395, 396, 397, 209,
	210, 430, 375, 61, 62, -461, -258, 153, -404, -269,
	35, -320, 2, 107, -408, 39, -493, 472, 226, -233,
	235, 253, 168, 269, 442, 262, -409, 5, 4, -342,
	-354, 107, 230, 199, -395, -397, 8, -396, 9, -398,
	458, 459, -403, -402, 91, 469, -405, -174, 318, -173,
	23, 27, 118, 426, 131, -240, 186, 286, 126, 368,
	417, -470, -471, 338, 389, 390, 79, 262, 318, 126,
	-287, -289, 35, 99, 249, 282, 55, 179, 240, 241,
	370, 434, 126, 318, -471, 318, -471, -176, 368, 417,
	-470, -471, 338, 318, -175, -240, 126, 471, -467, -441,
	438, 126, -467, 126, -373, -372, -411, -96, -265, 472,
	472, -405, 460, 126, 126, 126, 126, 2, 2, 254,
	2, 2, 2, 158, -473, -481, 2, 2, 2, -214,
	171, -252, 268, -463, -266, 384, -214, -216, 171, 2,
	-219, 432, -467, 254, -467, 254, 35, 467, 2, -200,
	171, 2, -188, -187, 184, -441, 254, -368, -227, -214,
	-363, -227, 356, -207, 35, -330, -330, 126, 2, 2,
	2, -187, -177, 472, 57, 324, 126, -177, 126, -177,
	126, -177, 472, 126, -177, 126, 472, 126, 126, 468,
	472, -376, -376, -410, -150, 438, 156, 87, 467, 467,
	-152, -373, 472, -97, -410, -463, -198, 2, -214, 2,
	384, 209, -150, -410, -410, -410, -404, 26, 358, 2,
	303, 354, 78, 358, 2, -214, 384, 101, 184, 71,
	-465, 153, -462, 329, -461, -214, 101, -214, 101, -214,
	101, -214, -214, 2, 2, 2, 2, 75, 75, 153,
	2, 401, 2, 401, 2, -187, -187, -187, 226, -214,
	153, 384, 184, 384, 184, 101, 384, -177, 472, -192,
	-163, -282, -404, -283, -282, -164, -163, -166, 153, 307,
	418, 249, 359, 213, -310, -309, 26, -333, -314, 147,
	248, -333, -312, -335, 458, 459, -396, -398, -268, 262,
	-157, -157, -157, -255, -359, -333, 298, 184, -392, -377,
	-377, -212, -405, 394, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, 227,
	175, 361, 43, 178, -333, 398, -333, -333, -333, -333,
	244, 254, 258, 406, 138, 415, 114, 262, -497, 380,
	37, -339, -158, -273, 467, -353, 32, 367, 26, -346,
	467, 2, -328, -333, -329, -270, -269, -269, 468, 431,
	26, 114, 460, 2, 468, 472, 35, 468, -333, -270,
	-345, -341, -269, -352, -351, 435, -302, -303, 443, 243,
	104, 170, 242, -304, 343, -399, 8, -405, 460, -447,
	146, 163, 8, -399, -399, 394, 394, -399, -399, -399,
	467, 468, 2, 468, 2, 468, -333, 2, 468, -333,
	2, 468, -333, 2, 468, -333, 2, 468, 2, -333,
	-333, -333, -333, -333, -333, -333, -269, -296, 2, -393,
	-269, 4, 443, 243, 104, 170, 242, 343, 5, -296,
	2, -297, 2, -333, -269, -298, -334, -335, 458, 459,
	451, -346, -299, 2, -333, -270, -333, 51, 221, 400,
	-300, -333, 156, -269, -269, 2, -269, 2, -445, 35,
	-269, -261, 472, 156, 35, 4, -261, -261, 467, 468,
	472, -295, 167, 239, 234, -295, -362, -294, 208, -292,
	278, -292, -292, -357, -199, 465, 473, -405, -357, -356,
	-355, 35, -207, 275, -357, -357, 469, 468, -356, 466,
	-459, 467, 470, 470, 470, 470, 470, -214, 467, -269,
	-405, 373, 468, 469, 202, 202, 202, 202, 334, 468,
	398, 438, -81, 270, 468, 472, -260, 34, 465, -394,
	433, 467, 467, -303, 467, 156, -259, -475, 468, 402,
	-321, -232, 307, 366, 319, 351, 382, 8, 9, 8,
	9, 472, -405, 472, -476, 81, 398, 69, -324, 171,
	69, -419, -201, 81, -420, -187, 64, 414, 298, 155,
	-476, 81, 298, -476, 81, 81, 356, 371, 52, -367,
	38, 38, 26, -99, 222, 156, 444, 384, 184, 398,
	-367, -289, -377, 99, 240, 241, 52, -400, -395, 458,
	459, -400, 52, -400, -400, -400, 438, -216, -367, 398,
	398, 472, 38, 38, 26, -99, 222, 156, 398, -229,
	-199, -468, -193, 88, 250, -194, 288, -410, -410, -147,
	180, 468, -373, -222, -187, 469, -333, -99, -333, -99,
	126, 2, -489, 216, 467, -236, 254, 156, -258, -374,
	200, 472, -266, -288, -287, 254, -218, 171, 2, -214,
	126, 126, 467, 122, 305, 2, 268, 254, -200, 171,
	-180, 387, 126, -286, 423, -315, -99, 467, 107, 35,
	-315, -277, -278, -371, -279, -201, 467, -207, -187, 2,
	-214, -267, -267, -267, -229, -230, -198, -410, -411, -411,
	-81, -375, 468, 468, 468, -149, 272, -148, -187, 5,
	-152, 423, -235, -325, -324, -423, -424, -419, 227, 184,
	414, 201, 139, -251, -202, -201, 100, -150, -96, -373,
	-150, -150, -373, -373, -214, 153, -150, -150, -150, 2,
	2, -291, -214, -198, -229, -214, -258, -258, -291, -198,
	-291, -198, -291, -198, -99, -333, 353, 153, 153, 469,
	-291, 305, 101, 384, 286, 184, -214, -229, -214, -229,
	-198, -214, -367, -283, -164, 269, 213, 359, -312, -313,
	-335, 333, 334, -313, 333, 334, 8, 9, 8, 9,
	-168, 363, 257, -267, 472, -171, 36, 112, 213, -214,
	444, 123, -333, -333, 398, -497, 380, -339, 123, -333,
	244, 258, 406, 138, 415, 114, 262, 156, 467, -334,
	-334, 468, -271, -333, -333, 466, 475, 468, -254, 472,
	-253, -333, -269, -269, 468, 469, -269, -258, 466, 466,
	472, 468, -350, -351, 119, -333, 398, 398, 398, 398,
	467, 468, 469, -452, 279, 467, 467, 468, 468, 472,
	468, 444, 444, 468, 468, 468, -333, 468, 468, 468,
	468, 35, 472, 472, 472, 468, 472, 472, 472, 468,
	468, 156, 468, 468, -305, 291, 468, 11, 12, 458,
	459, 460, 461, 151, 462, 463, 456, 457, 455, 448,
	449, 450, 76, 236, 335, 14, 15, 16, 202, 178,
	-334, -334, -334, 468, -337, -338, 156, 153, 35, -300,
	-300, -300, 468, 156, -269, 468, 468, 467, 468, -327,
	-326, 436, -370, -262, 2, -362, -209, -405, -327, -327,
	-269, -333, 208, 208, -293, 423, 268, -295, -362, -356,
	-401, -332, -331, 154, 36, 112, 251, 174, -356, -207,
	-250, -356, -356, -405, -357, -357, -355, 468, -460, -401,
	468, -263, -365, -440, -254, 469, -150, -405, -141, 5,
	258, -141, -141, -141, -258, 24, 292, -377, 465, 466,
	8, 467, -399, -399, -399, -258, 156, -402, -320, 412,
	73, 307, 394, -402, -173, 318, -201, -201, -214, 254,
	-324, 171, -179, 254, -377, -208, -187, 467, 467, 213,
	213, -201, -208, 213, 171, -201, 171, -208, -208, -469,
	307, 263, -333, 229, 305, 255, -174, 318, -99, -99,
	-99, 467, -475, 423, 113, -214, -229, -214, -218, 318,
	252, -224, -400, -400, -287, 318, -216, -198, -175, -99,
	-99, -99, 467, -199, -176, 318, -193, -410, 258, -467,
	-467, -150, 156, -147, 460, -187, 432, -187, -234, -237,
	-235, -201, -155, 440, 438, 126, -228, -214, 465, -150,
	-410, -214, 126, -250, 254, -410, -410, 2, 467, 2,
	-214, 126, 268, 254, -181, 120, -494, 450, -198, -327,
	-262, -285, -318, 326, 268, -251, 428, -207, -285, -264,
	472, 156, 450, 469, -251, 2, -177, -177, -177, -177,
	-177, -81, -81, -150, 472, 467, 450, 450, 467, -410,
	-410, 468, 472, -214, -200, 184, 184, -206, -188, 468,
	472, 469, 467, -150, 156, -46, 438, 384, 471, -291,
	-291, -291, 353, 353, -187, -210, -198, -214, -211, -229,
	153, 153, 418, -313, 269, 233, -359, -172, 260, -214,
	471, -333, -333, 123, 123, -333, -334, -334, -333, 123,
	156, 467, -333, -343, 30, 30, 468, 472, -329, -333,
	468, 431, -254, -254, 468, 460, -405, 471, 468, -341,
	121, -333, 392, 243, 170, 242, -304, 242, -304, -304,
	-399, 5, -405, 460, -453, -204, 467, -187, 436, -253,
	-399, -380, -380, 468, -392, -377, -333, -333, -333, -333,
	-333, -333, -337, -333, -392, -377, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, 114, 254, 262, -334, -338,
	-337, -333, -333, -377, 468, 468, 468, -269, -81, -281,
	163, -333, -373, 472, -281, -281, 468, -362, -362, 467,
	-333, 208, 466, 472, 474, 450, -250, 469, -355, -356,
	466, 468, 472, 468, 472, -317, 35, 468, -405, 271,
	5, 8, 465, 466, -399, 468, 468, 468, -258, -333,
	398, 398, 126, 254, 425, -425, -420, -333, -256, -360,
	-333, 467, 467, -170, 118, 356, -477, 2, 423, 126,
	-177, 126, -177, 442, 467, 467, 398, 438, -269, -333,
	-151, 107, -404, -471, 471, -471, 471, 398, 398, 438,
	-269, 398, -411, -150, 2, 2, 2, 468, 468, 472,
	-426, 35, 266, 467, 266, -214, -64, 438, -372, -401,
	-216, 35, 126, -467, -467, 2, -308, 423, -199, -214,
	126, -182, 220, -494, -408, -441, -254, -285, -276, 255,
	80, 468, -327, -278, -262, -333, 2, 468, -148, -149,
	-410, -410, -410, -150, -152, -152, -325, 2, 467, -200,
	-188, 467, -152, -202, 2, -411, -99, 272, -214, 460,
	-291, -242, -241, 286, 262, -242, 333, 333, 269, 147,
	217, -171, -199, -333, -333, 123, 30, 30, -333, -333,
	-343, 468, -333, -333, -269, 466, 5, -333, 468, 468,
	8, -333, 468, 469, -454, -187, -333, 468, 468, 468,
	468, 472, 472, 468, 468, 468, 468, -338, 156, 114,
	262, 467, 468, 468, -340, 166, 52, -362, -340, -340,
	-293, -258, -362, -331, -199, 465, -405, -401, -365, 467,
	469, 466, 2, 465, 468, -201, -201, -324, 126, -427,
	81, -429, 67, 139, 87, 254, 258, 414, 298, 64,
	107, 311, 35, 468, 468, 472, -171, -256, -258, 254,
	377, 107, 254, 107, 100, 409, 70, -201, -208, -258,
	-258, -214, 132, 468, 472, 450, 2, 460, 460, -218,
	-216, 132, 468, -199, -238, 187, -201, -424, -421, -422,
	298, -428, -430, 139, 298, -99, -154, -153, -187, 5,
	2, 467, -236, 272, 466, -288, -99, -218, 467, -187,
	268, 467, -199, -183, 219, -494, -408, -180, -311, -309,
	-316, 467, 268, -99, -254, 450, 468, 468, 100, 100,
	-256, 467, 467, -258, 100, 468, -47, -48, 184, 81,
	290, -211, 384, 184, 467, 467, -171, -333, -333, -333,
	468, -254, -405, 460, -448, 286, 468, -333, -333, -334,
	156, 467, -343, -449, 437, -333, -269, -449, -449, 468,
	-401, 2, 465, 2, -324, -208, -212, -205, -187, 139,
	171, 258, 213, 467, -334, -214, 467, 2, -486, 109,
	188, -323, -487, 86, 378, -360, -172, 468, 468, 258,
	258, -333, -377, 467, -177, -177, 468, 468, -333, 398,
	-404, 85, -402, 2, -471, -333, 398, -239, -240, 178,
	-426, 213, -205, 213, -485, 438, 468, 472, 450, 450,
	-234, -155, -65, -66, 399, -372, -250, -256, -214, -256,
	268, -494, -408, -181, -285, 115, -258, 81, -311, -339,
	-150, 467, 467, 468, -256, -256, 468, 467, -150, 472,
	26, 467, 26, 467, -214, -229, -269, -269, 468, -254,
	52, 468, 468, -334, -343, 468, -450, -451, -204, 466,
	2, -429, -205, 254, 423, -333, -189, 467, -333, 188,
	110, 176, -238, 467, -322, 423, 311, -197, 67, -256,
	467, 467, 467, 450, 156, 467, -155, 284, 467, 100,
	249, -153, -336, -336, 468, 35, -66, 9, 35, 468,
	-308, 468, -214, -408, -182, 418, 255, 468, -208, -285,
	-411, -411, -322, 468, 468, -411, -48, -258, -258, 468,
	468, -455, 305, 334, 165, -269, 468, 472, 35, 126,
	167, 468, -431, 237, -187, 468, 110, 176, -239, -258,
	-238, 167, -214, -472, 423, -212, 468, -244, -243, -241,
	-246, -245, -241, -269, -402, 85, 284, -269, -214, -257,
	-361, -201, 100, -238, -99, -99, -322, 467, -323, 467,
	-183, 356, -326, 468, 468, -323, -322, 468, 468, 468,
	468, -456, -457, 43, 411, 91, -333, -456, -456, -451,
	-453, 139, 438, -432, -435, -434, 268, 362, 157, 285,
	468, 377, 434, -486, 468, 438, -250, -333, -322, 468,
	472, 428, 468, 472, 428, 468, 156, 468, 467, 468,
	472, -239, -485, -323, -256, -238, -256, -277, -150, -150,
	-238, -323, -150, -458, 125, -457, 295, 152, 333, 295,
	152, -458, -458, -205, 47, -434, 268, -435, 268, 418,
	111, 47, -431, -238, -243, 178, -245, 156, 284, -258,
	-361, -155, -238, 468, -239, 468, -327, -239, -238, 91,
	163, 393, 249, 30, 450, -433, 249, 324, 57, 356,
	-433, 450, -432, 467, 467, 468, -239, -322, -490, 436,
	-323, -239, 333, 276, -457, -333, 22, 258, 107, -333,
	-486, -269, -269, -178, 57, 324, -490, -323, 2, -238,
	468, 468, -238, -239, -239, 398, -239, -490, 467, -490,
	-269, 468, -239,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 371, 372, 374,
	375, 376, 378, 379, 381, 383, 385, 387, 388, 390,
	392, 394, 395, 396, 397, 398, 400, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 462,
	0, 954, 956, 958, 960, 25, 26, 28, 0, 0,
	192, 194, 196, 0, 221, 223, 225, 226, 228, -2,
	0, 323, 324, 326, 328, -2, -2, 0, 0, 449,
	451, 0, 0, 0, 471, 472, 0, 1045, -2, 465,
	467, 469, 534, 536, 538, 540, 542, 544, 546, 547,
	549, 551, 553, 555, 557, 559, 561, 562, 564, 566,
	568, 570, 572, 574, 576, 578, 580, 582, 584, -2,
	-2, -2, 0, -2, -2, -2, 972, 31, 33, 35,
	37, 39, 41, 43, 277, 278, 280, 282, 284, 287,
	288, 290, 1100, 330, 332, 334, 336, 338, 0, -2,
	1112, 0, 0, 45, 46, 47, 48, 49, 50, 51,
	52, 68, 69, 70, 71, 72, 73, 74, 75, 56,
	58, 59, 63, 64, 66, 54, 0, 0, 1076, 1078,
	1080, 1082, -2, 0, 0, 7, 9, 11, 13, 15,
	17, 19, 21, 373, 377, 380, 382, 384, 386, 389,
	391, 393, 399, 401, 403, 839, 1735, 1749, 1750, 1751,
	1754, 1755, 1756, 1757, 1758, 1759, 2105, 2185, 2186, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 0, 427,
	425, 1729, 428, 1936, 430, 432, 317, 318, 319, 320,
	321, 322, 0, 442, 436, 441, 443, 445, 446, 447,
	448, 422, 420, 0, 442, 1781, 440, 952, 953, 947,
	948, 1970, 982, 461, -2, -2, -2, 2073, -2, 493,
	-2, 500, 2076, 1972, 505, 0, 507, -2, 510, 955,
	957, 959, 27, 29, 30, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 894, 895, 0, 0, 156, -2,
	-2, -2, -2, 0, 0, 1820, 1697, 1751, 1700, 1695,
	193, 195, 197, 198, 0, 0, 0, 0, 0, 0,
	222, 224, 227, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 750, 742, 743, 924, 0, 0,
	0, 0, 325, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	255, 363, 364, 0, 1101, 1101, 0, 0, 0, 0,
	173, 164, 0, 0, 726, 450, 452, 0, 0, 159,
	0, 0, 951, 0, 175, 0, 0, 466, 468, 470,
	535, 537, 539, 541, 543, 545, 548, 550, 552, 554,
	556, 558, 560, 563, 565, 567, 569, 571, 573, 575,
	577, 579, 581, 583, 585, 586, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, -2, -2, -2,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 589,
	591, 592, 593, 0, 644, 661, 0, 879, 1102, 984,
	962, 975, 984, 964, 965, 966, 967, 968, 973, 974,
	977, 0, 969, 970, 971, 32, 34, 36, 38, 40,
	42, 44, 279, 281, 283, 285, 289, 291, -2, 1074,
	1075, 331, 333, 335, 337, 339, 453, 0, 455, 0,
	590, -2, 0, 1106, 1106, 1106, 0, 0, 1075, 1073,
	0, 458, 459, 514, 515, 1344, 0, 0, 0, 0,
	0, 1594, 1428, 0, 516, -2, 1459, 1461, 2052, 2073,
	1593, 1463, 1464, 1465, 1466, 1467, 0, 0, 1470, 1471,
	1472, 1473, 1474, 0, 1476, 0, 1481, 1482, 1483, 0,
	2057, 1674, 1747, -2, 1247, 1248, 1249, 1250, 1251, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2063, 1743, 0, 1560,
	1497, -2, 1768, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1829, -2, -2, -2, -2,
	-2, -2, -2, 1303, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 2087, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 0, 2041, 2058, 2059, 2064,
	2066, 2060, 2049, 1522, -2, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 1304, -2, 2053, 2054, 2069, 2070, 2075, 2080, 2081,
	2056, 2065, -2, -2, 1092, 1945, 1095, 839, 1093, 1077,
	1079, 0, 1081, 0, 0, 0, 1086, 1109, 1107, 0,
	1148, 1090, 1091, 1166, 1166, 1190, 0, 1171, 0, 1190,
	1101, 1216, 0, 1177, 1965, 1498, 1499, 0, 1751, 1748,
	-2, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	429, 431, 0, 0, 0, 0, 0, 0, 0, 0,
	981, 463, 464, 0, 488, 0, 492, 2048, -2, 1786,
	1985, -2, 496, 985, 989, 990, 991, 992, 0, 0,
	0, 0, 0, 502, 0, 0, 489, 490, 508, 511,
	0, 53, 0, 2058, 1216, 55, 0, 1719, 1773, 1774,
	1775, 1776, 1777, 2087, 2104, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 57, 0, 2058, 60, 0, 2058,
	0, -2, 65, 0, 1725, 67, 0, 1722, 76, 0,
	2058, 0, 1694, -2, -2, 2058, 890, 176, 177, 1764,
	1765, 1769, 1770, 1771, 1772, -2, 2058, 893, 1203, 160,
	0, 0, 0, 718, 1691, 1696, 719, 1701, 0, 199,
	200, 201, 202, 203, 2058, 205, 206, 0, 208, 209,
	2058, 211, 212, 0, 214, 230, 231, 0, 233, 0,
	2058, 0, 0, 0, 239, -2, 256, 0, 253, 0,
	243, 244, 246, 247, 248, 249, 250, 0, 295, 293,
	1730, 0, 0, 0, 908, -2, 2058, 884, -2, 2058,
	887, 913, 1733, 0, -2, 0, 1099, 2058, 999, 746,
	747, 748, 749, 0, 314, 0, 1012, 0, 1014, 0,
	1035, 1222, 1166, 1166, 0, 257, 258, 259, 260, 261,
	2058, 0, 0, 0, 266, 0, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 151, 2058, 342, 361, 151,
	2058, 345, 151, 2058, 348, 151, 2058, 351, 1689, 151,
	2058, 354, 355, 2058, 357, 178, 358, 2058, 360, 0,
	-2, 416, 1737, -2, 366, 0, 367, 0, -2, 0,
	190, 0, 0, 724, 725, 1203, 162, 0, 949, 950,
	0, 0, 473, 0, 0, 587, 588, 0, 0, 598,
	599, 600, 190, 1973, 1943, 1845, 605, 0, 608, 611,
	-2, 0, 0, 0, 0, 615, 0, 620, 621, 622,
	0, 723, 624, 0, 0, 626, 0, 630, 0, 633,
	0, 635, 0, 637, -2, -2, -2, 648, -2, 0,
	652, 0, 654, 0, 0, 0, 0, 669, 670, 0,
	675, 0, 678, 679, 680, 0, 682, 683, 684, 685,
	0, 687, 688, -2, -2, 692, 694, 0, 701, 0,
	705, 0, 709, 0, 594, 595, 151, 1220, 961, -2,
	963, 0, 979, -2, 0, 454, 0, 457, 1127, 1060,
	1057, 0, 1124, 1125, 1061, 0, 0, 0, 1068, 0,
	1104, 1105, 0, 0, 0, 1047, 1048, 0, 0, 0,
	0, 1599, 1600, 1601, 1602, 1603, 1604, 1607, 1608, 1605,
	1606, 1609, 1610, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 1613, 1614, 0, 0, 1616, 0, 1618, 0, 0,
	0, 0, 0, 0, 1407, 1409, 1682, 0, 0, 1615,
	1349, 1350, 1351, 1386, 1387, 0, 0, 1460, 1679, 1678,
	1462, 0, 1630, 0, 1469, 1475, 1715, -2, 0, 1594,
	1625, 0, 0, 1484, 1485, 1486, 0, 0, 1630, 0,
	0, 1673, 1341, 0, 0, 1562, 0, 1283, 0, 1284,
	1285, 0, 1286, 1287, 1300, 1313, 0, 0, 0, 0,
	1317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 1654, -2, 0, 0, 0, 0, 0,
	1094, 0, 0, 1152, 1683, 1687, 1688, 1152, 1152, 0,
	0, 1631, 1213, 1213, 0, 0, 1209, 1209, 1209, 1207,
	1190, 0, 1190, 1200, 0, 1190, 1190, 0, -2, 1171,
	0, 0, 1200, 0, 1184, 404, 406, 408, 410, 411,
	412, 414, 1217, 1218, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 1739, 0, 0, 0, 0, 434,
	444, 1101, 0, 1633, 1239, 1242, 1243, 1244, 1245, 1246,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, -2, 1301, 1303,
	1324, 1290, 1291, 1292, 1293, 1294, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1296, 0, 1271,
	1271, 1271, 1288, 1289, 1312, 1323, 1315, 1323, 1319, 1240,
	1241, 1306, 1307, 1308, 1309, 0, 438, 0, 0, 0,
	0, -2, 498, 503, 504, 0, 0, 987, 0, 993,
	525, 526, 527, 995, 996, 0, 501, 528, 529, 530,
	531, 532, 533, 0, 1703, 1704, 1705, 1706, 1709, 1710,
	0, 0, 499, 518, 506, 0, 512, 77, 944, 116,
	0, 944, 944, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 101, 112, 89, 90, 0, 0, 0, 0,
	61, 861, 0, 864, 0, 0, 0, 0, 0, 0,
	0, 877, 0, 0, 100, 0, 95, 79, 0, 0,
	0, 102, 114, 0, 142, 144, 0, 0, 888, 0,
	1098, 0, 891, 0, 181, 1202, 0, 1203, 717, 0,
	0, 1752, 1699, 0, 0, 0, 0, 232, 234, 0,
	236, 237, 238, 0, 907, 0, 245, 242, 286, 811,
	2058, 0, 0, 312, 307, 0, 309, 860, 2058, 858,
	1734, 0, 882, 0, 885, 0, 0, 0, 914, 0,
	2058, 919, 1721, 1760, 1761, 1001, 0, 316, 0, 1015,
	1017, 0, 0, 1223, 0, 1225, 1226, 0, 263, 264,
	265, 0, 340, 0, 149, 150, 0, 343, 0, 346,
	0, 349, 0, 0, 352, 0, 0, 0, 0, 1101,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 190, 0, 1203, 190, 190, 1203, 475, 1203, 477,
	0, 0, 601, 190, 190, 190, 606, 607, 609, 610,
	-2, -2, 702, 612, 613, 672, 0, 0, 0, 671,
	623, 0, 711, 1961, 721, 672, 1820, 672, 1820, 672,
	1820, 634, 636, 639, 664, 647, 651, 0, 0, 0,
	656, 0, 658, 0, 660, 672, 673, 676, 681, 686,
	0, 0, 0, 0, 0, 0, 0, 878, 0, 978,
	1127, 1060, 456, 1051, 1126, 1052, 1059, 1062, 0, 0,
	1064, 0, 1066, 0, 1122, 1123, 1130, 1131, 0, 1141,
	1142, 1134, 0, -2, 0, 0, 1137, 1138, 1070, 0,
	1087, 1088, 1089, 1113, 1114, 933, 0, 2185, 1345, 1234,
	1346, 1347, 1718, 0, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, -2, -2, -2, -2, -2, -2,
	-2, -2, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, -2, -2, -2, 1384, 1385, -2, 1617,
	1619, 0, 1682, 0, -2, 0, -2, -2, -2, -2,
	1404, 0, 1406, 1411, 1413, 1415, 0, 0, 0, 0,
	1681, 1425, 1665, 1666, 0, 0, 1596, 1597, 1598, 1410,
	0, 1429, 1680, 1677, 0, 0, 1629, 1112, 1488, 0,
	0, 0, 0, 1495, 1480, 1627, 0, 1626, 0, 0,
	0, 1637, 0, 1672, 1668, 0, 1716, 1340, 1327, 1328,
	1329, 1330, 1331, 1332, 1342, 0, 1713, 1740, 1746, 1570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1523, 1524, 1525, 1526, 1527, 0, 1529, 1530, 0,
	1532, 1533, 0, 1535, 1536, 0, 1538, 1539, 1540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1542, 0,
	1640, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	1544, 0, 1546, 1631, 1651, 0, 0, 1430, 0, 0,
	0, 1594, 0, 1549, 1631, 1659, 0, 0, 0, 0,
	0, 1631, 0, 1664, 0, 1556, 0, 1558, 1096, 0,
	0, 1229, 0, 0, 0, 1686, 1229, 1229, 0, 1147,
	0, 0, 1210, 1211, 1212, 0, 0, 1213, 0, 1204,
	1208, 1205, 1206, 1200, 1163, 0, 0, 1720, 1200, 1169,
	1199, 0, 839, 1189, 1200, 1200, 0, -2, 1173, 1190,
	0, 0, 405, 407, 409, 413, 415, 0, 0, 1112,
	-2, 190, 838, 0, 0, 0, 0, 0, 424, 426,
	0, 0, 418, 0, 421, 0, 1230, 1233, 0, 0,
	-2, 0, 0, 1325, 0, 0, 0, 0, 491, 0,
	986, 994, 0, 522, 0, 524, 0, 1707, 1711, 1708,
	1712, 0, 513, 0, 0, 0, 0, 943, 120, 2058,
	0, 153, 0, 0, 805, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 91, 0, 0, 0, 0, 0, 0,
	0, 862, 863, 865, 872, 874, 0, 868, 1714, 0,
	0, 869, 0, 871, 873, 875, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 92, 0, 0, 0, 0,
	1693, 905, 903, 900, 901, 902, 0, -2, -2, 190,
	0, 161, 181, 1692, 1702, 0, 204, 207, 210, 213,
	0, 240, 0, 0, 752, 729, 0, 0, 294, 190,
	0, 0, 308, 856, 859, 0, 839, 2058, 899, 1732,
	0, 0, 0, 0, 0, 912, 0, 0, 0, 2058,
	1003, 1009, 0, 1229, 0, 1033, 1018, 0, 0, 0,
	1033, 1037, 1038, 1040, 1041, 0, 0, 1224, 0, 267,
	362, 151, 151, 151, 1690, 151, 151, 179, 356, 359,
	365, 417, 1101, 1101, 190, 188, 1921, 186, 183, 185,
	0, 0, 0, 753, 755, 756, 757, 758, 0, 1761,
	0, 1874, 1761, 0, 1021, 1023, 0, 157, 163, 190,
	0, 306, 474, 479, 596, 0, 602, 603, 604, 641,
	666, 614, 616, 617, 618, 0, 722, 720, 625, 672,
	628, 672, 631, 672, 650, 653, 655, 0, 0, 0,
	668, 0, 0, 0, 0, 0, 0, 0, 706, 707,
	708, 710, 1221, 1055, 1056, 1058, 0, 1067, 0, 0,
	1136, -2, -2, 1135, 1139, 1140, -2, -2, -2, -2,
	1063, 0, 1072, 1069, 0, 1121, 931, 932, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1426, 0, -2,
	1405, 1408, 1412, 1414, 1416, 0, 0, 0, 0, 0,
	0, 1620, 0, 1622, 1427, 1675, 1678, 1592, 0, 0,
	1111, 1112, 1112, 0, 1494, 0, 1628, 0, 1635, 1636,
	0, 1487, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 1295, 1269, 0,
	1323, 1321, 1322, 1316, 1323, 1320, 0, 1528, 1531, 1534,
	1537, 0, 0, 0, 0, 1517, 0, 0, 0, 1521,
	1541, 0, 1543, 1545, 0, 0, 1547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1433, 1434, 1435, 1548, 1657, 1658, 0, 0, 0, 0,
	0, 0, 1554, 0, 1663, 1555, 1557, 1101, 1149, 1144,
	1228, 0, 1684, 1203, 1151, 1153, 1685, 1723, 1144, 1144,
	0, 1632, 0, 0, 1194, 0, 0, 0, 1196, 1167,
	0, 0, 1161, 0, 1157, 1158, 1159, 1160, 1168, 839,
	1198, 1170, 1174, 1740, 0, 1200, 0, 1185, 0, 1187,
	1219, 0, 1179, 1182, 0, 0, 191, 1753, 215, 219,
	220, 216, 217, 218, 433, 0, 0, 1634, 0, 1235,
	0, 0, 0, 0, 0, 437, 0, 487, -2, 520,
	521, 523, 0, 519, 117, 944, 0, 0, 935, 0,
	122, 2058, 131, 0, 781, 0, 1724, 0, 0, 0,
	0, 946, 0, 0, 2058, 151, 2058, 151, 134, 137,
	0, 141, 139, 0, 0, 772, 78, 944, 81, 85,
	93, 0, 0, 0, 99, 0, 0, 0, 937, 0,
	866, 867, 870, 876, 62, 0, 939, 934, 143, 83,
	87, 94, 0, 941, 80, 0, 904, 880, 881, 889,
	892, 154, 0, 190, 1698, 0, 0, 0, 0, 0,
	751, 822, 0, 0, 0, 0, 300, 296, 0, 305,
	311, 310, 0, 0, 0, -2, -2, 909, 0, 911,
	923, 0, 0, 0, 1005, 1009, 0, 1008, 1099, 1112,
	315, 1010, 1033, 0, 0, 0, 1020, 1016, 1013, 1229,
	0, 0, 0, 0, 0, 262, 341, 344, 347, 350,
	353, 368, 369, 165, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 1761, 1761, 0, 1728, 0,
	0, 0, 0, 158, 0, 476, 0, 0, 0, 627,
	629, 632, 657, 659, 672, 695, 696, 767, 0, 767,
	0, 0, 1065, 0, 1133, 1071, 1115, 1116, 0, 933,
	0, 1348, 1389, 0, 0, -2, 0, 0, 1393, 0,
	0, 0, -2, 0, 0, 0, 1621, 1623, 0, 1677,
	1489, 0, 0, 0, 1493, 1477, 1478, 0, 1595, 1638,
	1667, 1671, 0, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	0, 1717, 1741, 1745, 1568, 1569, 1573, 1731, 0, 0,
	0, 1314, 1318, 1500, 0, 0, 0, 0, 0, 0,
	0, 1639, 1650, 1652, 1431, 1432, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, -2, -2, -2, 1449,
	1450, 1451, -2, -2, -2, 0, 0, 0, 1653, 1655,
	1656, 1660, 1661, 0, 1551, 1552, 1553, 1662, 0, 1146,
	0, 1227, 1150, 0, 1146, 1146, 1108, 1192, 0, 0,
	1215, 0, 1164, 0, 1165, 0, 1197, 0, 1172, 1175,
	1176, 1186, 0, 1178, 0, 1181, 0, 1489, -2, 435,
	419, 0, 0, 1237, 0, 1298, 1302, 1326, 439, 1201,
	0, 0, 0, 0, 152, 779, 804, 0, 0, 926,
	933, 0, 0, 124, 0, 0, 0, 132, 0, 0,
	129, 0, 136, 140, 0, 0, 0, 0, 0, 96,
	97, 98, 0, 103, 0, 104, 0, 0, 0, 0,
	0, 0, 180, 155, 235, 898, 241, 761, 810, 0,
	812, 0, 730, 0, 0, 811, 292, 0, 299, 0,
	860, 0, 0, 883, 886, 910, 0, 0, 0, 0,
	0, 1007, 1009, 0, 1000, 1001, 1129, 1011, 1031, -2,
	1030, 0, 1112, 1039, 1036, 1042, 1043, 0, 187, 0,
	182, 184, 0, 168, 0, 0, 754, 759, 0, 0,
	0, 0, 0, 1022, 1024, 0, 174, 0, 597, 619,
	667, 697, 766, 0, 0, 699, 0, 0, 1132, 1119,
	1120, 1117, 933, 1391, 1395, 0, 0, 0, 1397, -2,
	0, 1419, -2, -2, 1624, 1676, 1468, 1112, 1490, 1492,
	1479, 1670, 1343, 0, 1575, 1572, 0, 1559, 1270, 1512,
	1513, 0, 0, 1516, 1518, 1519, 1520, 1649, 0, 0,
	0, 0, 1550, 1097, 1564, 0, 0, 1154, 1564, 1564,
	1193, 0, 1195, 1162, 1155, 0, 1741, 1188, 1180, 0,
	0, 1231, 1236, 0, 1297, 118, 119, 121, 0, 780,
	0, 783, 0, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 0, 826, 835, 0, 1121, 0, 0, 0,
	126, 146, 0, 0, 945, 0, 0, 151, 151, 0,
	0, 936, 0, 0, 0, 0, 106, 0, 0, 938,
	940, 0, 0, 942, 769, 0, 822, 814, 815, 816,
	0, 821, 823, 0, 0, 739, 0, 735, 0, 0,
	732, 752, 729, 0, 297, 857, 896, 839, 0, 922,
	0, 0, 0, 997, 1009, 0, 1002, 1003, 1033, 1128,
	0, 0, 0, 1019, 1129, 0, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 190, 478, 480, 0, 0,
	486, 765, 0, 0, 0, 0, 1118, 1399, -2, -2,
	1420, 0, 1742, 1744, 1112, 0, 1561, 0, 0, -2,
	0, 0, 0, 1083, 0, 1145, 1143, 1084, 1085, 1214,
	0, 1183, 0, 1238, 123, 0, 784, 785, 1727, 787,
	0, 789, 792, 0, 795, 1763, 0, 799, 806, 827,
	0, 761, 0, 832, 833, 927, 928, 837, 0, 125,
	127, 145, 930, 0, 128, 135, 0, 0, 82, 0,
	0, 1813, 109, 107, 105, 84, 0, 729, 768, 0,
	813, 0, 824, 825, 737, 0, 731, 0, 0, 0,
	0, 0, 298, 301, 0, 304, 0, 0, 923, 0,
	0, 0, 1004, 1005, 313, 0, 0, 0, 1033, 1044,
	167, 0, 0, 837, 0, 0, 803, 0, 172, 0,
	482, 0, 484, 0, 698, 700, 0, 0, 1491, 1579,
	0, 1514, 1515, -2, 0, 1457, 1563, 1565, 0, 1156,
	1232, 782, 786, 0, 0, 0, 843, 0, 0, 0,
	830, 831, 769, 0, 761, 0, 0, 148, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 0, 740,
	0, 736, 733, 734, 761, 0, 302, 303, 0, 837,
	0, 835, 0, 1006, 1007, 0, 1026, 1027, 1029, 1034,
	0, 0, 835, 837, 802, 0, 481, 0, 0, 703,
	704, 0, 0, 0, 0, 1574, 1458, 0, 0, 0,
	0, 794, 848, 0, 0, 0, 828, 829, 826, 0,
	808, 0, 839, 130, 0, 929, 837, 0, 773, 0,
	0, 776, 0, 0, 110, 1813, 108, 0, 0, 0,
	818, 820, 741, 769, 739, 897, 835, 0, 761, 0,
	998, 0, 1028, 190, 190, 761, 835, 190, 483, 485,
	1571, 1591, 1580, -2, 2021, 1817, 0, 1591, 1591, 1566,
	1567, 0, 0, 796, 844, 845, 0, 840, 841, 842,
	1762, 797, 798, 807, 834, 0, 843, 147, 761, 770,
	0, 0, 771, 0, 0, 113, 0, 115, 0, 817,
	0, 729, 738, 761, 0, 769, 0, 1229, 169, 170,
	769, 761, 171, 1576, 0, 0, 1582, 1583, 1584, 1585,
	1586, 1577, 1578, 788, 0, 846, 0, 847, 0, 0,
	0, 0, 848, 133, 774, 0, 777, 0, 111, 0,
	819, 728, 769, 837, 920, 835, 1025, 800, 769, 0,
	1588, 1589, 0, 0, 0, 849, 0, 852, 853, 0,
	850, 0, 826, 0, 0, 764, 920, 835, 917, 0,
	761, 801, 1587, 1590, 1581, 793, 851, 854, 855, 836,
	809, 0, 0, 760, 762, 763, 915, 761, 921, 769,
	769, 0, 769, 920, 775, 0, 920, 918, 0, 916,
	0, 769, 778,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 456, 3, 462, 457, 3,
	467, 468, 460, 458, 472, 459, 469, 461, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 475, 3,
	448, 450, 449, 453, 471, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 465, 3, 466, 463, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 473, 455, 474, 451,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 452, 57791, 454, 57792, 464, 57793, 470, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1115
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1120
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1124
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1125
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1126
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1127
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1128
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1135
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1144
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1145
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1146
		{
			return helpWith(sqllex, "ALTER")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1149
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1150
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1151
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1152
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1261
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1265
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1269
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1283
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1302
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1338
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1342
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1348
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1352
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1358
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1367
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1378
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1382
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1388
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1396
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1406
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1410
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1420
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1431
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1438
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1450
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1457
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1465
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1470
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1474
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1485
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1493
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1504
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1514
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1524
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1533
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1544
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1550
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1558
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1566
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1570
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1576
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1581
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1592
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1596
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1602
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1606
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1613
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1628
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1638
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1643
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1648
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1663
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1701
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1750
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1795
		{
			sqlVAL.union.val = nil
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1853
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1883
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1944
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1953
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1959
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1964
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1969
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1974
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1979
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1983
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2002
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2010
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2042
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = nil
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2080
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2094
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2095
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2096
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2115
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2120
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2147
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2156
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2183
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2192
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2204
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2223
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2228
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2240
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2241
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2243
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2244
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2245
		{
			return helpWith(sqllex, "CREATE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2248
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{
			return unimplemented(sqllex, "create cast")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2250
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2251
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2252
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2253
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2254
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2255
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2256
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplemented(sqllex, "create operator")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplemented(sqllex, "create publication")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplemented(sqllex, "create rule")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "create")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplemented(sqllex, "create server")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2271
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2272
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2275
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2276
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2279
		{
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2280
		{
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2283
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2289
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplemented(sqllex, "drop server")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2306
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2307
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2309
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2311
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2312
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2313
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2332
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2350
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2359
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2382
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2393
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2421
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2435
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2456
		{

			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2480
		{
			return helpWith(sqllex, "DELETE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2483
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2484
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2495
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2496
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2497
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2509
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2510
		{
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2511
		{
			return helpWith(sqllex, "DROP")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2514
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2533
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2548
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2563
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2586
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2594
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2609
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2624
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2632
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2639
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2643
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2648
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2699
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2703
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2706
		{
			return helpWith(sqllex, "DELETE")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2708
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2709
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2710
		{
			return helpWith(sqllex, "INSERT")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2711
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2713
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2723
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2725
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2730
		{
			return helpWith(sqllex, "DELETE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2731
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "INSERT")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2738
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2743
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2765
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2798
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2806
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2839
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2870
		{
			return helpWith(sqllex, "GRANT")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2901
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			return helpWith(sqllex, "RESET")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2954
		{
			return helpWith(sqllex, "RESET")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "USE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2984
		{
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2990
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2991
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2992
		{
			return helpWith(sqllex, "USE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3052
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3166
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3196
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3201
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplemented(sqllex, "set from current")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3212
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3225
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = tree.Low
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = tree.Normal
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = tree.High
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.str = "client_encoding"
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.str = "timezone"
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3424
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3472
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3481
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3511
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3578
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3646
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3651
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = true
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = true
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = false
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3721
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3723
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3727
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = true
		}
	case 662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = false
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = true
		}
	case 672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = false
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3829
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3839
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3855
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3886
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3898
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3906
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3943
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3966
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3978
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3982
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4122
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4194
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4254
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4268
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = nil
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{

			sqlVAL.union.val = nil
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4294
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 737:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4325
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4337
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4350
		{
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = true
		}
	case 743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = true
		}
	case 744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = false
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = true
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = true
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = true
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = true
		}
	case 750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4380
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4410
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 760:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4414
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4430
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4435
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.str = ""
		}
	case 769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 770:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 775:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 778:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4624
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4638
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 800:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4735
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4769
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4849
		{
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4851
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4853
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4854
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5009
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5018
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5042
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5055
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5057
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5059
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5062
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5065
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5067
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: true}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5120
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: true}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5155
		{
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5156
		{
		}
	case 896:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5164
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5175
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5185
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5186
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = nil
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5220
		{
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5221
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5227
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5229
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5231
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5233
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5237
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5253
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Sharded:     sqlDollar[11].union.shardedIndexDef(),
				Storing:     sqlDollar[12].union.nameList(),
				Interleave:  sqlDollar[13].union.interleave(),
				PartitionBy: sqlDollar[14].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5268
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Sharded:     sqlDollar[14].union.shardedIndexDef(),
				Storing:     sqlDollar[15].union.nameList(),
				Interleave:  sqlDollar[16].union.interleave(),
				PartitionBy: sqlDollar[17].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5284
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5298
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5315
		{
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5316
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5320
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = false
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = true
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = false
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5364
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.str = ""
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = tree.Descending
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5411
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5417
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5425
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5431
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5439
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5445
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5462
		{
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5463
		{
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5466
		{
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5467
		{
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5500
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5511
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5515
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5517
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5541
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5554
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5559
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5568
		{
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5569
		{
		}
	case 972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5570
		{
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5578
		{
			if sqlDollar[2].str != "" {
				sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
			} else {
				sqlVAL.union.val = &tree.RollbackTransaction{}
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5585
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5588
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5589
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.str = ""
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.str = ""
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5635
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5648
		{
		}
	case 988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5650
		{
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5654
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 997:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5719
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.str = ""
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.str = ""
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.str = ""
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.str = ""
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5762
		{
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5763
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5811
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5820
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5869
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5886
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5895
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5965
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6150
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6152
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6302
		{
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6303
		{
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = nil
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6316
		{
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6317
		{
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = true
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = false
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = false
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = true
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6347
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6377
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6398
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6403
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6432
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6524
		{
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6525
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6578
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6580
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6595
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6617
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6622
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6627
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6650
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6669
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6708
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6718
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6753
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6764
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6794
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6827
		{
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = nil
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = true
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = false
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.str = tree.AstFull
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.str = tree.AstRight
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.str = tree.AstInner
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6946
		{
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6947
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.str = tree.AstHash
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.str = ""
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7014
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7032
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7044
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7054
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7096
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7104
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7105
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7123
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7125
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7133
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = types.String
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = types.Name
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7186
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = types.INet
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = types.Oid
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7266
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7274
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = nil
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = types.Int2
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = types.Int2
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = types.Int4
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = types.Int
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = types.Int
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = types.Int
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = types.Float4
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = types.Float4
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = types.Float
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = types.Float
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7341
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7357
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = types.Bool
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = types.Bool
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = types.RegType
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7398
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = types.Float
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7417
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7423
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7445
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = types.String
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = true
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = false
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = types.Date
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7494
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7502
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7516
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7525
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7533
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7550
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = true
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = false
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = false
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = types.Interval
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7574
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7658
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = nil
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7703
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7752
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7765
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8009
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8075
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8097
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8291
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8296
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8322
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8346
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8376
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8387
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8388
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8403
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8414
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8534
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8539
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8548
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8557
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8566
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8580
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8585
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8595
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8604
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8605
		{
			return unimplemented(sqllex, "treat")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8626
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8636
		{
			return unimplemented(sqllex, "within group")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8637
		{
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.str = ""
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8774
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8842
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8871
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = tree.Any
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = tree.Some
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = tree.All
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = tree.Div
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = tree.LT
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = tree.GT
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = tree.LE
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = tree.GE
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = tree.NE
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.Like
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9232
		{
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9233
		{
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9422
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9431
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9439
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9451
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9616
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9629
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9636
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.str = ""
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
