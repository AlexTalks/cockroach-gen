// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:866
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13453

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1547,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 402,
	-2, 0,
	-1, 74,
	242, 240,
	512, 240,
	-2, 0,
	-1, 87,
	230, 1285,
	244, 1285,
	260, 398,
	388, 398,
	398, 1046,
	436, 398,
	449, 1046,
	496, 1046,
	523, 398,
	549, 1046,
	-2, 0,
	-1, 93,
	132, 1547,
	237, 1547,
	534, 1547,
	535, 1547,
	-2, 0,
	-1, 109,
	150, 1518,
	169, 1518,
	182, 1518,
	240, 1518,
	273, 1518,
	339, 1518,
	349, 1518,
	529, 1518,
	-2, 1489,
	-1, 149,
	158, 897,
	259, 897,
	391, 859,
	454, 859,
	495, 859,
	515, 897,
	517, 859,
	-2, 0,
	-1, 152,
	4, 1549,
	21, 1549,
	22, 1549,
	23, 1549,
	24, 1549,
	25, 1549,
	26, 1549,
	27, 1549,
	29, 1549,
	30, 1549,
	36, 1549,
	41, 1549,
	42, 1549,
	44, 1549,
	45, 1549,
	46, 1549,
	47, 1549,
	48, 1549,
	49, 1549,
	50, 1549,
	51, 1549,
	53, 1549,
	54, 1549,
	55, 1549,
	56, 1549,
	58, 1549,
	59, 1549,
	60, 1549,
	61, 1549,
	62, 1549,
	63, 1549,
	64, 1549,
	68, 1549,
	69, 1549,
	70, 1549,
	71, 1549,
	73, 1549,
	74, 1549,
	75, 1549,
	79, 1549,
	80, 1549,
	81, 1549,
	82, 1549,
	83, 1549,
	84, 1549,
	85, 1549,
	88, 1549,
	89, 1549,
	90, 1549,
	91, 1549,
	92, 1549,
	94, 1549,
	96, 1549,
	97, 1549,
	98, 1549,
	99, 1549,
	100, 1549,
	101, 1549,
	103, 1549,
	104, 1549,
	105, 1549,
	107, 1549,
	108, 1549,
	109, 1549,
	117, 1549,
	118, 1549,
	119, 1549,
	120, 1549,
	121, 1549,
	123, 1549,
	124, 1549,
	125, 1549,
	127, 1549,
	128, 1549,
	129, 1549,
	131, 1549,
	132, 1549,
	133, 1549,
	135, 1549,
	136, 1549,
	137, 1549,
	140, 1549,
	141, 1549,
	142, 1549,
	144, 1549,
	145, 1549,
	147, 1549,
	148, 1549,
	149, 1549,
	151, 1549,
	152, 1549,
	153, 1549,
	154, 1549,
	155, 1549,
	156, 1549,
	157, 1549,
	158, 1549,
	159, 1549,
	160, 1549,
	161, 1549,
	162, 1549,
	163, 1549,
	164, 1549,
	165, 1549,
	166, 1549,
	168, 1549,
	174, 1549,
	175, 1549,
	176, 1549,
	177, 1549,
	181, 1549,
	183, 1549,
	184, 1549,
	188, 1549,
	189, 1549,
	190, 1549,
	191, 1549,
	192, 1549,
	193, 1549,
	194, 1549,
	195, 1549,
	196, 1549,
	197, 1549,
	198, 1549,
	199, 1549,
	200, 1549,
	201, 1549,
	203, 1549,
	204, 1549,
	206, 1549,
	207, 1549,
	209, 1549,
	210, 1549,
	211, 1549,
	212, 1549,
	213, 1549,
	214, 1549,
	215, 1549,
	216, 1549,
	217, 1549,
	219, 1549,
	220, 1549,
	222, 1549,
	223, 1549,
	224, 1549,
	225, 1549,
	226, 1549,
	230, 1549,
	231, 1549,
	232, 1549,
	233, 1549,
	234, 1549,
	237, 1549,
	238, 1549,
	239, 1549,
	241, 1549,
	243, 1549,
	244, 1549,
	246, 1549,
	248, 1549,
	249, 1549,
	250, 1549,
	252, 1549,
	256, 1549,
	257, 1549,
	258, 1549,
	259, 1549,
	260, 1549,
	261, 1549,
	263, 1549,
	264, 1549,
	265, 1549,
	267, 1549,
	268, 1549,
	270, 1549,
	271, 1549,
	274, 1549,
	278, 1549,
	279, 1549,
	280, 1549,
	283, 1549,
	284, 1549,
	285, 1549,
	286, 1549,
	288, 1549,
	289, 1549,
	290, 1549,
	291, 1549,
	292, 1549,
	293, 1549,
	294, 1549,
	295, 1549,
	296, 1549,
	297, 1549,
	298, 1549,
	299, 1549,
	300, 1549,
	301, 1549,
	302, 1549,
	303, 1549,
	304, 1549,
	305, 1549,
	306, 1549,
	307, 1549,
	308, 1549,
	309, 1549,
	311, 1549,
	313, 1549,
	314, 1549,
	315, 1549,
	316, 1549,
	317, 1549,
	318, 1549,
	319, 1549,
	320, 1549,
	321, 1549,
	322, 1549,
	323, 1549,
	324, 1549,
	326, 1549,
	327, 1549,
	329, 1549,
	331, 1549,
	332, 1549,
	334, 1549,
	335, 1549,
	336, 1549,
	337, 1549,
	338, 1549,
	341, 1549,
	344, 1549,
	345, 1549,
	346, 1549,
	347, 1549,
	350, 1549,
	351, 1549,
	352, 1549,
	354, 1549,
	356, 1549,
	357, 1549,
	358, 1549,
	359, 1549,
	360, 1549,
	361, 1549,
	362, 1549,
	363, 1549,
	364, 1549,
	365, 1549,
	366, 1549,
	367, 1549,
	368, 1549,
	370, 1549,
	371, 1549,
	372, 1549,
	373, 1549,
	374, 1549,
	375, 1549,
	376, 1549,
	377, 1549,
	378, 1549,
	379, 1549,
	380, 1549,
	381, 1549,
	382, 1549,
	383, 1549,
	384, 1549,
	386, 1549,
	387, 1549,
	389, 1549,
	390, 1549,
	391, 1549,
	392, 1549,
	393, 1549,
	394, 1549,
	395, 1549,
	396, 1549,
	397, 1549,
	398, 1549,
	399, 1549,
	400, 1549,
	402, 1549,
	404, 1549,
	405, 1549,
	406, 1549,
	411, 1549,
	413, 1549,
	414, 1549,
	415, 1549,
	416, 1549,
	417, 1549,
	418, 1549,
	419, 1549,
	420, 1549,
	421, 1549,
	422, 1549,
	424, 1549,
	425, 1549,
	426, 1549,
	428, 1549,
	429, 1549,
	430, 1549,
	431, 1549,
	432, 1549,
	433, 1549,
	434, 1549,
	436, 1549,
	437, 1549,
	438, 1549,
	439, 1549,
	440, 1549,
	441, 1549,
	442, 1549,
	443, 1549,
	444, 1549,
	445, 1549,
	446, 1549,
	447, 1549,
	449, 1549,
	450, 1549,
	451, 1549,
	452, 1549,
	453, 1549,
	454, 1549,
	456, 1549,
	457, 1549,
	458, 1549,
	459, 1549,
	460, 1549,
	461, 1549,
	463, 1549,
	464, 1549,
	465, 1549,
	466, 1549,
	467, 1549,
	468, 1549,
	469, 1549,
	470, 1549,
	472, 1549,
	474, 1549,
	475, 1549,
	476, 1549,
	477, 1549,
	478, 1549,
	479, 1549,
	480, 1549,
	481, 1549,
	482, 1549,
	483, 1549,
	484, 1549,
	485, 1549,
	486, 1549,
	487, 1549,
	488, 1549,
	489, 1549,
	491, 1549,
	492, 1549,
	494, 1549,
	495, 1549,
	497, 1549,
	498, 1549,
	499, 1549,
	500, 1549,
	501, 1549,
	502, 1549,
	503, 1549,
	504, 1549,
	505, 1549,
	507, 1549,
	508, 1549,
	509, 1549,
	510, 1549,
	511, 1549,
	513, 1549,
	515, 1549,
	516, 1549,
	517, 1549,
	518, 1549,
	519, 1549,
	520, 1549,
	522, 1549,
	523, 1549,
	524, 1549,
	525, 1549,
	527, 1549,
	528, 1549,
	531, 1549,
	532, 1549,
	533, 1549,
	534, 1549,
	535, 1549,
	536, 1549,
	537, 1549,
	539, 1549,
	542, 1549,
	543, 1549,
	544, 1549,
	545, 1549,
	546, 1549,
	547, 1549,
	549, 1549,
	550, 1549,
	551, 1549,
	552, 1549,
	554, 1549,
	559, 1549,
	560, 1549,
	561, 1549,
	562, 1549,
	563, 1549,
	564, 1549,
	-2, 0,
	-1, 153,
	1, 1400,
	130, 1400,
	248, 1400,
	328, 1400,
	386, 1400,
	395, 1400,
	568, 1400,
	595, 1400,
	-2, 0,
	-1, 155,
	1, 1400,
	595, 1400,
	-2, 0,
	-1, 156,
	1, 1400,
	595, 1400,
	-2, 0,
	-1, 157,
	1, 1400,
	512, 1400,
	595, 1400,
	-2, 0,
	-1, 186,
	150, 1517,
	169, 1517,
	182, 1517,
	240, 1517,
	273, 1517,
	339, 1517,
	349, 1517,
	529, 1517,
	-2, 1492,
	-1, 233,
	4, 1556,
	5, 1556,
	6, 1556,
	7, 1556,
	8, 1556,
	9, 1556,
	10, 1556,
	21, 1556,
	22, 1556,
	23, 1556,
	24, 1556,
	25, 1556,
	26, 1556,
	27, 1556,
	29, 1556,
	30, 1556,
	36, 1556,
	37, 1556,
	41, 1556,
	42, 1556,
	43, 1556,
	44, 1556,
	45, 1556,
	46, 1556,
	47, 1556,
	48, 1556,
	49, 1556,
	50, 1556,
	51, 1556,
	53, 1556,
	54, 1556,
	55, 1556,
	56, 1556,
	58, 1556,
	59, 1556,
	60, 1556,
	61, 1556,
	62, 1556,
	63, 1556,
	64, 1556,
	65, 1556,
	66, 1556,
	67, 1556,
	68, 1556,
	69, 1556,
	70, 1556,
	71, 1556,
	73, 1556,
	74, 1556,
	75, 1556,
	77, 1556,
	79, 1556,
	80, 1556,
	81, 1556,
	82, 1556,
	83, 1556,
	84, 1556,
	85, 1556,
	88, 1556,
	89, 1556,
	90, 1556,
	91, 1556,
	92, 1556,
	94, 1556,
	96, 1556,
	97, 1556,
	98, 1556,
	99, 1556,
	100, 1556,
	101, 1556,
	103, 1556,
	104, 1556,
	105, 1556,
	106, 1556,
	107, 1556,
	108, 1556,
	109, 1556,
	110, 1556,
	111, 1556,
	112, 1556,
	113, 1556,
	114, 1556,
	115, 1556,
	116, 1556,
	117, 1556,
	118, 1556,
	119, 1556,
	120, 1556,
	121, 1556,
	122, 1556,
	123, 1556,
	124, 1556,
	125, 1556,
	126, 1556,
	127, 1556,
	128, 1556,
	129, 1556,
	131, 1556,
	132, 1556,
	133, 1556,
	135, 1556,
	136, 1556,
	137, 1556,
	140, 1556,
	141, 1556,
	142, 1556,
	144, 1556,
	145, 1556,
	147, 1556,
	148, 1556,
	149, 1556,
	151, 1556,
	152, 1556,
	153, 1556,
	154, 1556,
	155, 1556,
	156, 1556,
	157, 1556,
	158, 1556,
	159, 1556,
	160, 1556,
	161, 1556,
	162, 1556,
	163, 1556,
	164, 1556,
	165, 1556,
	166, 1556,
	167, 1556,
	168, 1556,
	174, 1556,
	175, 1556,
	176, 1556,
	177, 1556,
	181, 1556,
	183, 1556,
	184, 1556,
	187, 1556,
	188, 1556,
	189, 1556,
	190, 1556,
	191, 1556,
	192, 1556,
	193, 1556,
	194, 1556,
	195, 1556,
	196, 1556,
	197, 1556,
	198, 1556,
	199, 1556,
	200, 1556,
	201, 1556,
	203, 1556,
	204, 1556,
	206, 1556,
	207, 1556,
	209, 1556,
	210, 1556,
	211, 1556,
	212, 1556,
	213, 1556,
	214, 1556,
	215, 1556,
	216, 1556,
	217, 1556,
	218, 1556,
	219, 1556,
	220, 1556,
	222, 1556,
	223, 1556,
	224, 1556,
	225, 1556,
	226, 1556,
	230, 1556,
	231, 1556,
	232, 1556,
	233, 1556,
	234, 1556,
	236, 1556,
	237, 1556,
	238, 1556,
	239, 1556,
	241, 1556,
	243, 1556,
	244, 1556,
	245, 1556,
	246, 1556,
	247, 1556,
	248, 1556,
	249, 1556,
	250, 1556,
	251, 1556,
	252, 1556,
	256, 1556,
	257, 1556,
	258, 1556,
	259, 1556,
	260, 1556,
	261, 1556,
	263, 1556,
	264, 1556,
	265, 1556,
	267, 1556,
	268, 1556,
	269, 1556,
	270, 1556,
	271, 1556,
	272, 1556,
	274, 1556,
	278, 1556,
	279, 1556,
	280, 1556,
	281, 1556,
	282, 1556,
	283, 1556,
	284, 1556,
	285, 1556,
	286, 1556,
	288, 1556,
	289, 1556,
	290, 1556,
	291, 1556,
	292, 1556,
	293, 1556,
	294, 1556,
	295, 1556,
	296, 1556,
	297, 1556,
	298, 1556,
	299, 1556,
	300, 1556,
	301, 1556,
	302, 1556,
	303, 1556,
	304, 1556,
	305, 1556,
	306, 1556,
	307, 1556,
	308, 1556,
	309, 1556,
	311, 1556,
	312, 1556,
	313, 1556,
	314, 1556,
	315, 1556,
	316, 1556,
	317, 1556,
	318, 1556,
	319, 1556,
	320, 1556,
	321, 1556,
	322, 1556,
	323, 1556,
	324, 1556,
	325, 1556,
	326, 1556,
	327, 1556,
	328, 1556,
	329, 1556,
	330, 1556,
	331, 1556,
	332, 1556,
	333, 1556,
	334, 1556,
	335, 1556,
	336, 1556,
	337, 1556,
	338, 1556,
	341, 1556,
	345, 1556,
	346, 1556,
	347, 1556,
	350, 1556,
	351, 1556,
	352, 1556,
	353, 1556,
	354, 1556,
	355, 1556,
	356, 1556,
	357, 1556,
	358, 1556,
	359, 1556,
	360, 1556,
	361, 1556,
	362, 1556,
	363, 1556,
	364, 1556,
	365, 1556,
	366, 1556,
	367, 1556,
	368, 1556,
	370, 1556,
	371, 1556,
	372, 1556,
	373, 1556,
	374, 1556,
	375, 1556,
	376, 1556,
	377, 1556,
	378, 1556,
	379, 1556,
	380, 1556,
	381, 1556,
	382, 1556,
	383, 1556,
	384, 1556,
	386, 1556,
	387, 1556,
	389, 1556,
	390, 1556,
	391, 1556,
	392, 1556,
	393, 1556,
	394, 1556,
	395, 1556,
	396, 1556,
	397, 1556,
	398, 1556,
	399, 1556,
	400, 1556,
	402, 1556,
	404, 1556,
	405, 1556,
	406, 1556,
	411, 1556,
	413, 1556,
	414, 1556,
	415, 1556,
	416, 1556,
	417, 1556,
	418, 1556,
	419, 1556,
	420, 1556,
	421, 1556,
	422, 1556,
	424, 1556,
	425, 1556,
	426, 1556,
	427, 1556,
	428, 1556,
	429, 1556,
	430, 1556,
	431, 1556,
	432, 1556,
	433, 1556,
	434, 1556,
	436, 1556,
	437, 1556,
	438, 1556,
	439, 1556,
	440, 1556,
	441, 1556,
	442, 1556,
	443, 1556,
	444, 1556,
	445, 1556,
	446, 1556,
	447, 1556,
	449, 1556,
	450, 1556,
	451, 1556,
	452, 1556,
	453, 1556,
	454, 1556,
	455, 1556,
	456, 1556,
	457, 1556,
	458, 1556,
	459, 1556,
	460, 1556,
	461, 1556,
	462, 1556,
	463, 1556,
	464, 1556,
	465, 1556,
	466, 1556,
	467, 1556,
	468, 1556,
	469, 1556,
	470, 1556,
	472, 1556,
	474, 1556,
	475, 1556,
	476, 1556,
	477, 1556,
	478, 1556,
	479, 1556,
	480, 1556,
	481, 1556,
	482, 1556,
	483, 1556,
	484, 1556,
	485, 1556,
	486, 1556,
	487, 1556,
	488, 1556,
	489, 1556,
	491, 1556,
	492, 1556,
	493, 1556,
	494, 1556,
	495, 1556,
	497, 1556,
	498, 1556,
	499, 1556,
	500, 1556,
	501, 1556,
	502, 1556,
	503, 1556,
	504, 1556,
	505, 1556,
	507, 1556,
	508, 1556,
	509, 1556,
	510, 1556,
	511, 1556,
	513, 1556,
	515, 1556,
	516, 1556,
	517, 1556,
	518, 1556,
	519, 1556,
	520, 1556,
	521, 1556,
	522, 1556,
	523, 1556,
	524, 1556,
	525, 1556,
	527, 1556,
	528, 1556,
	530, 1556,
	531, 1556,
	532, 1556,
	533, 1556,
	534, 1556,
	535, 1556,
	536, 1556,
	537, 1556,
	538, 1556,
	539, 1556,
	542, 1556,
	543, 1556,
	544, 1556,
	545, 1556,
	546, 1556,
	547, 1556,
	549, 1556,
	550, 1556,
	551, 1556,
	552, 1556,
	554, 1556,
	559, 1556,
	560, 1556,
	561, 1556,
	562, 1556,
	563, 1556,
	564, 1556,
	565, 1556,
	576, 1556,
	583, 1556,
	584, 1556,
	585, 1556,
	592, 1556,
	596, 1556,
	-2, 0,
	-1, 736,
	4, 1283,
	21, 1283,
	22, 1283,
	23, 1283,
	24, 1283,
	25, 1283,
	26, 1283,
	27, 1283,
	29, 1283,
	30, 1283,
	36, 1283,
	41, 1283,
	42, 1283,
	44, 1283,
	45, 1283,
	46, 1283,
	47, 1283,
	48, 1283,
	49, 1283,
	50, 1283,
	51, 1283,
	53, 1283,
	54, 1283,
	55, 1283,
	56, 1283,
	58, 1283,
	59, 1283,
	60, 1283,
	61, 1283,
	62, 1283,
	63, 1283,
	64, 1283,
	68, 1283,
	69, 1283,
	70, 1283,
	71, 1283,
	73, 1283,
	74, 1283,
	75, 1283,
	79, 1283,
	80, 1283,
	81, 1283,
	82, 1283,
	83, 1283,
	84, 1283,
	85, 1283,
	88, 1283,
	89, 1283,
	90, 1283,
	91, 1283,
	92, 1283,
	94, 1283,
	96, 1283,
	97, 1283,
	98, 1283,
	99, 1283,
	100, 1283,
	101, 1283,
	103, 1283,
	104, 1283,
	105, 1283,
	107, 1283,
	108, 1283,
	109, 1283,
	117, 1283,
	118, 1283,
	119, 1283,
	120, 1283,
	121, 1283,
	123, 1283,
	124, 1283,
	125, 1283,
	127, 1283,
	128, 1283,
	129, 1283,
	131, 1283,
	132, 1283,
	133, 1283,
	135, 1283,
	136, 1283,
	137, 1283,
	140, 1283,
	141, 1283,
	142, 1283,
	144, 1283,
	145, 1283,
	147, 1283,
	148, 1283,
	149, 1283,
	151, 1283,
	152, 1283,
	153, 1283,
	154, 1283,
	155, 1283,
	156, 1283,
	157, 1283,
	158, 1283,
	159, 1283,
	160, 1283,
	161, 1283,
	162, 1283,
	163, 1283,
	164, 1283,
	165, 1283,
	166, 1283,
	168, 1283,
	174, 1283,
	175, 1283,
	176, 1283,
	177, 1283,
	181, 1283,
	183, 1283,
	184, 1283,
	188, 1283,
	189, 1283,
	190, 1283,
	191, 1283,
	192, 1283,
	193, 1283,
	194, 1283,
	195, 1283,
	196, 1283,
	197, 1283,
	198, 1283,
	199, 1283,
	200, 1283,
	201, 1283,
	203, 1283,
	204, 1283,
	206, 1283,
	207, 1283,
	209, 1283,
	210, 1283,
	211, 1283,
	212, 1283,
	213, 1283,
	214, 1283,
	215, 1283,
	216, 1283,
	217, 1283,
	219, 1283,
	220, 1283,
	222, 1283,
	223, 1283,
	224, 1283,
	225, 1283,
	226, 1283,
	230, 1283,
	231, 1283,
	232, 1283,
	233, 1283,
	234, 1283,
	237, 1283,
	238, 1283,
	239, 1283,
	241, 1283,
	243, 1283,
	244, 1283,
	246, 1283,
	248, 1283,
	249, 1283,
	250, 1283,
	252, 1283,
	256, 1283,
	257, 1283,
	258, 1283,
	259, 1283,
	260, 1283,
	261, 1283,
	263, 1283,
	264, 1283,
	265, 1283,
	267, 1283,
	268, 1283,
	270, 1283,
	271, 1283,
	274, 1283,
	278, 1283,
	279, 1283,
	280, 1283,
	283, 1283,
	284, 1283,
	285, 1283,
	286, 1283,
	288, 1283,
	289, 1283,
	290, 1283,
	291, 1283,
	292, 1283,
	293, 1283,
	294, 1283,
	295, 1283,
	296, 1283,
	297, 1283,
	298, 1283,
	299, 1283,
	300, 1283,
	301, 1283,
	302, 1283,
	303, 1283,
	304, 1283,
	305, 1283,
	306, 1283,
	307, 1283,
	308, 1283,
	309, 1283,
	311, 1283,
	313, 1283,
	314, 1283,
	315, 1283,
	316, 1283,
	317, 1283,
	318, 1283,
	319, 1283,
	320, 1283,
	321, 1283,
	322, 1283,
	323, 1283,
	324, 1283,
	326, 1283,
	327, 1283,
	329, 1283,
	331, 1283,
	332, 1283,
	334, 1283,
	335, 1283,
	336, 1283,
	337, 1283,
	338, 1283,
	341, 1283,
	345, 1283,
	346, 1283,
	347, 1283,
	350, 1283,
	351, 1283,
	352, 1283,
	354, 1283,
	356, 1283,
	357, 1283,
	358, 1283,
	359, 1283,
	360, 1283,
	361, 1283,
	362, 1283,
	363, 1283,
	364, 1283,
	365, 1283,
	366, 1283,
	367, 1283,
	368, 1283,
	370, 1283,
	371, 1283,
	372, 1283,
	373, 1283,
	374, 1283,
	375, 1283,
	376, 1283,
	377, 1283,
	378, 1283,
	379, 1283,
	380, 1283,
	381, 1283,
	382, 1283,
	383, 1283,
	384, 1283,
	386, 1283,
	387, 1283,
	389, 1283,
	390, 1283,
	391, 1283,
	392, 1283,
	393, 1283,
	394, 1283,
	395, 1283,
	396, 1283,
	397, 1283,
	398, 1283,
	399, 1283,
	400, 1283,
	402, 1283,
	404, 1283,
	405, 1283,
	406, 1283,
	411, 1283,
	413, 1283,
	414, 1283,
	415, 1283,
	416, 1283,
	417, 1283,
	418, 1283,
	419, 1283,
	420, 1283,
	421, 1283,
	422, 1283,
	424, 1283,
	425, 1283,
	426, 1283,
	428, 1283,
	429, 1283,
	430, 1283,
	431, 1283,
	432, 1283,
	433, 1283,
	434, 1283,
	436, 1283,
	437, 1283,
	438, 1283,
	439, 1283,
	440, 1283,
	441, 1283,
	442, 1283,
	443, 1283,
	444, 1283,
	445, 1283,
	446, 1283,
	447, 1283,
	449, 1283,
	450, 1283,
	451, 1283,
	452, 1283,
	453, 1283,
	454, 1283,
	456, 1283,
	457, 1283,
	458, 1283,
	459, 1283,
	460, 1283,
	461, 1283,
	463, 1283,
	464, 1283,
	465, 1283,
	466, 1283,
	467, 1283,
	468, 1283,
	469, 1283,
	470, 1283,
	472, 1283,
	474, 1283,
	475, 1283,
	476, 1283,
	477, 1283,
	478, 1283,
	479, 1283,
	480, 1283,
	481, 1283,
	482, 1283,
	483, 1283,
	484, 1283,
	485, 1283,
	486, 1283,
	487, 1283,
	488, 1283,
	489, 1283,
	491, 1283,
	492, 1283,
	494, 1283,
	495, 1283,
	497, 1283,
	498, 1283,
	499, 1283,
	500, 1283,
	501, 1283,
	502, 1283,
	503, 1283,
	504, 1283,
	505, 1283,
	507, 1283,
	508, 1283,
	509, 1283,
	510, 1283,
	511, 1283,
	513, 1283,
	515, 1283,
	516, 1283,
	517, 1283,
	518, 1283,
	519, 1283,
	520, 1283,
	522, 1283,
	523, 1283,
	524, 1283,
	525, 1283,
	527, 1283,
	528, 1283,
	531, 1283,
	532, 1283,
	533, 1283,
	534, 1283,
	535, 1283,
	536, 1283,
	537, 1283,
	539, 1283,
	542, 1283,
	543, 1283,
	544, 1283,
	545, 1283,
	546, 1283,
	547, 1283,
	549, 1283,
	550, 1283,
	551, 1283,
	552, 1283,
	554, 1283,
	559, 1283,
	560, 1283,
	561, 1283,
	562, 1283,
	563, 1283,
	564, 1283,
	-2, 0,
	-1, 755,
	186, 2341,
	512, 2341,
	575, 2341,
	594, 2341,
	-2, 0,
	-1, 756,
	186, 2448,
	512, 2448,
	575, 2448,
	594, 2448,
	-2, 0,
	-1, 757,
	186, 2328,
	512, 2328,
	575, 2328,
	594, 2328,
	-2, 0,
	-1, 759,
	186, 2583,
	512, 2583,
	575, 2583,
	594, 2583,
	-2, 0,
	-1, 761,
	186, 2624,
	512, 2624,
	575, 2624,
	594, 2624,
	-2, 0,
	-1, 769,
	186, 2475,
	512, 2475,
	575, 2475,
	594, 2475,
	-2, 691,
	-1, 804,
	594, 2277,
	597, 2277,
	-2, 977,
	-1, 805,
	594, 2279,
	597, 2279,
	-2, 978,
	-1, 806,
	594, 2278,
	597, 2278,
	-2, 979,
	-1, 807,
	597, 2203,
	-2, 980,
	-1, 830,
	182, 255,
	-2, 0,
	-1, 854,
	43, 2250,
	-2, 0,
	-1, 855,
	549, 1261,
	-2, 1047,
	-1, 871,
	4, 1685,
	21, 1685,
	22, 1685,
	23, 1685,
	24, 1685,
	25, 1685,
	26, 1685,
	27, 1685,
	29, 1685,
	30, 1685,
	36, 1685,
	41, 1685,
	42, 1685,
	44, 1685,
	45, 1685,
	46, 1685,
	47, 1685,
	48, 1685,
	49, 1685,
	50, 1685,
	51, 1685,
	53, 1685,
	54, 1685,
	55, 1685,
	56, 1685,
	58, 1685,
	59, 1685,
	60, 1685,
	61, 1685,
	62, 1685,
	63, 1685,
	64, 1685,
	68, 1685,
	69, 1685,
	70, 1685,
	71, 1685,
	73, 1685,
	74, 1685,
	75, 1685,
	79, 1685,
	80, 1685,
	81, 1685,
	82, 1685,
	83, 1685,
	84, 1685,
	85, 1685,
	88, 1685,
	89, 1685,
	90, 1685,
	91, 1685,
	92, 1685,
	94, 1685,
	96, 1685,
	97, 1685,
	98, 1685,
	99, 1685,
	100, 1685,
	101, 1685,
	103, 1685,
	104, 1685,
	105, 1685,
	107, 1685,
	108, 1685,
	109, 1685,
	117, 1685,
	118, 1685,
	119, 1685,
	120, 1685,
	121, 1685,
	123, 1685,
	124, 1685,
	125, 1685,
	127, 1685,
	128, 1685,
	129, 1685,
	131, 1685,
	132, 1685,
	133, 1685,
	135, 1685,
	136, 1685,
	137, 1685,
	140, 1685,
	141, 1685,
	142, 1685,
	144, 1685,
	145, 1685,
	147, 1685,
	148, 1685,
	149, 1685,
	151, 1685,
	152, 1685,
	153, 1685,
	154, 1685,
	155, 1685,
	156, 1685,
	157, 1685,
	158, 1685,
	159, 1685,
	160, 1685,
	161, 1685,
	162, 1685,
	163, 1685,
	164, 1685,
	165, 1685,
	166, 1685,
	168, 1685,
	174, 1685,
	175, 1685,
	176, 1685,
	177, 1685,
	181, 1685,
	183, 1685,
	184, 1685,
	188, 1685,
	189, 1685,
	190, 1685,
	191, 1685,
	192, 1685,
	193, 1685,
	194, 1685,
	195, 1685,
	196, 1685,
	197, 1685,
	198, 1685,
	199, 1685,
	200, 1685,
	201, 1685,
	203, 1685,
	204, 1685,
	206, 1685,
	207, 1685,
	209, 1685,
	210, 1685,
	211, 1685,
	212, 1685,
	213, 1685,
	214, 1685,
	215, 1685,
	216, 1685,
	217, 1685,
	219, 1685,
	220, 1685,
	222, 1685,
	223, 1685,
	224, 1685,
	225, 1685,
	226, 1685,
	230, 1685,
	231, 1685,
	232, 1685,
	233, 1685,
	234, 1685,
	237, 1685,
	238, 1685,
	239, 1685,
	241, 1685,
	243, 1685,
	244, 1685,
	246, 1685,
	248, 1685,
	249, 1685,
	250, 1685,
	252, 1685,
	256, 1685,
	257, 1685,
	258, 1685,
	259, 1685,
	260, 1685,
	261, 1685,
	263, 1685,
	264, 1685,
	265, 1685,
	267, 1685,
	268, 1685,
	270, 1685,
	271, 1685,
	274, 1685,
	278, 1685,
	279, 1685,
	280, 1685,
	283, 1685,
	284, 1685,
	285, 1685,
	286, 1685,
	288, 1685,
	289, 1685,
	290, 1685,
	291, 1685,
	292, 1685,
	293, 1685,
	294, 1685,
	295, 1685,
	296, 1685,
	297, 1685,
	298, 1685,
	299, 1685,
	300, 1685,
	301, 1685,
	302, 1685,
	303, 1685,
	304, 1685,
	305, 1685,
	306, 1685,
	307, 1685,
	308, 1685,
	309, 1685,
	311, 1685,
	313, 1685,
	314, 1685,
	315, 1685,
	316, 1685,
	317, 1685,
	318, 1685,
	319, 1685,
	320, 1685,
	321, 1685,
	322, 1685,
	323, 1685,
	324, 1685,
	326, 1685,
	327, 1685,
	329, 1685,
	331, 1685,
	332, 1685,
	334, 1685,
	335, 1685,
	336, 1685,
	337, 1685,
	338, 1685,
	341, 1685,
	345, 1685,
	346, 1685,
	347, 1685,
	350, 1685,
	351, 1685,
	352, 1685,
	354, 1685,
	356, 1685,
	357, 1685,
	358, 1685,
	359, 1685,
	360, 1685,
	361, 1685,
	362, 1685,
	363, 1685,
	364, 1685,
	365, 1685,
	366, 1685,
	367, 1685,
	368, 1685,
	370, 1685,
	371, 1685,
	372, 1685,
	373, 1685,
	374, 1685,
	375, 1685,
	376, 1685,
	377, 1685,
	378, 1685,
	379, 1685,
	380, 1685,
	381, 1685,
	382, 1685,
	383, 1685,
	384, 1685,
	386, 1685,
	387, 1685,
	389, 1685,
	390, 1685,
	391, 1685,
	392, 1685,
	393, 1685,
	394, 1685,
	395, 1685,
	396, 1685,
	397, 1685,
	398, 1685,
	399, 1685,
	400, 1685,
	402, 1685,
	404, 1685,
	405, 1685,
	406, 1685,
	411, 1685,
	413, 1685,
	414, 1685,
	415, 1685,
	416, 1685,
	417, 1685,
	418, 1685,
	419, 1685,
	420, 1685,
	421, 1685,
	422, 1685,
	424, 1685,
	425, 1685,
	426, 1685,
	428, 1685,
	429, 1685,
	430, 1685,
	431, 1685,
	432, 1685,
	433, 1685,
	434, 1685,
	436, 1685,
	437, 1685,
	438, 1685,
	439, 1685,
	440, 1685,
	441, 1685,
	442, 1685,
	443, 1685,
	444, 1685,
	445, 1685,
	446, 1685,
	447, 1685,
	449, 1685,
	450, 1685,
	451, 1685,
	452, 1685,
	453, 1685,
	454, 1685,
	456, 1685,
	457, 1685,
	458, 1685,
	459, 1685,
	460, 1685,
	461, 1685,
	463, 1685,
	464, 1685,
	465, 1685,
	466, 1685,
	467, 1685,
	468, 1685,
	469, 1685,
	470, 1685,
	472, 1685,
	474, 1685,
	475, 1685,
	476, 1685,
	477, 1685,
	478, 1685,
	479, 1685,
	480, 1685,
	481, 1685,
	482, 1685,
	483, 1685,
	484, 1685,
	485, 1685,
	486, 1685,
	487, 1685,
	488, 1685,
	489, 1685,
	491, 1685,
	492, 1685,
	494, 1685,
	495, 1685,
	497, 1685,
	498, 1685,
	499, 1685,
	500, 1685,
	501, 1685,
	502, 1685,
	503, 1685,
	504, 1685,
	505, 1685,
	507, 1685,
	508, 1685,
	509, 1685,
	510, 1685,
	511, 1685,
	513, 1685,
	515, 1685,
	516, 1685,
	517, 1685,
	518, 1685,
	519, 1685,
	520, 1685,
	522, 1685,
	523, 1685,
	524, 1685,
	525, 1685,
	527, 1685,
	528, 1685,
	531, 1685,
	532, 1685,
	533, 1685,
	534, 1685,
	535, 1685,
	536, 1685,
	537, 1685,
	539, 1685,
	542, 1685,
	543, 1685,
	544, 1685,
	545, 1685,
	546, 1685,
	547, 1685,
	549, 1685,
	550, 1685,
	551, 1685,
	552, 1685,
	554, 1685,
	559, 1685,
	560, 1685,
	561, 1685,
	562, 1685,
	563, 1685,
	564, 1685,
	-2, 0,
	-1, 881,
	260, 402,
	-2, 0,
	-1, 953,
	391, 860,
	454, 860,
	495, 860,
	517, 860,
	-2, 0,
	-1, 954,
	391, 859,
	454, 859,
	495, 859,
	517, 859,
	-2, 799,
	-1, 958,
	1, 911,
	591, 911,
	593, 911,
	595, 911,
	-2, 0,
	-1, 959,
	1, 834,
	591, 834,
	593, 834,
	595, 834,
	-2, 0,
	-1, 960,
	1, 838,
	591, 838,
	593, 838,
	595, 838,
	-2, 0,
	-1, 961,
	1, 976,
	182, 976,
	591, 976,
	593, 976,
	595, 976,
	-2, 0,
	-1, 969,
	1, 865,
	591, 865,
	593, 865,
	595, 865,
	-2, 0,
	-1, 976,
	1, 911,
	591, 911,
	593, 911,
	595, 911,
	-2, 0,
	-1, 977,
	1, 913,
	591, 913,
	593, 913,
	595, 913,
	-2, 0,
	-1, 978,
	1, 916,
	591, 916,
	593, 916,
	595, 916,
	-2, 0,
	-1, 984,
	1, 940,
	591, 940,
	593, 940,
	595, 940,
	-2, 0,
	-1, 985,
	1, 942,
	591, 942,
	593, 942,
	595, 942,
	-2, 0,
	-1, 990,
	1, 970,
	591, 970,
	593, 970,
	595, 970,
	-2, 0,
	-1, 1038,
	169, 1560,
	182, 1560,
	273, 1560,
	339, 1560,
	-2, 1496,
	-1, 1053,
	169, 1559,
	182, 1559,
	273, 1559,
	339, 1559,
	-2, 1493,
	-1, 1080,
	594, 2276,
	-2, 699,
	-1, 1109,
	5, 2268,
	592, 2266,
	-2, 2257,
	-1, 1117,
	5, 2289,
	592, 2286,
	-2, 2277,
	-1, 1118,
	5, 2290,
	592, 2287,
	-2, 2278,
	-1, 1126,
	594, 2274,
	-2, 2256,
	-1, 1127,
	592, 2707,
	-2, 2275,
	-1, 1150,
	592, 2706,
	-2, 2291,
	-1, 1151,
	5, 1760,
	-2, 2677,
	-1, 1152,
	5, 1761,
	-2, 2678,
	-1, 1153,
	5, 1762,
	-2, 2692,
	-1, 1154,
	5, 1763,
	-2, 2656,
	-1, 1155,
	5, 1764,
	-2, 2690,
	-1, 1156,
	5, 1772,
	-2, 2669,
	-1, 1157,
	5, 1759,
	-2, 2665,
	-1, 1158,
	5, 1759,
	-2, 2664,
	-1, 1159,
	5, 1759,
	-2, 2683,
	-1, 1160,
	5, 1770,
	-2, 2658,
	-1, 1161,
	5, 1775,
	-2, 2657,
	-1, 1162,
	5, 1777,
	-2, 2702,
	-1, 1165,
	5, 1799,
	-2, 2695,
	-1, 1166,
	5, 1791,
	-2, 2696,
	-1, 1167,
	5, 1799,
	-2, 2697,
	-1, 1168,
	5, 1795,
	-2, 2698,
	-1, 1169,
	5, 1745,
	-2, 2670,
	-1, 1170,
	5, 1746,
	-2, 2671,
	-1, 1171,
	5, 1747,
	-2, 2659,
	-1, 1199,
	5, 1782,
	-2, 2703,
	-1, 1200,
	5, 1783,
	-2, 2693,
	-1, 1201,
	5, 1784,
	550, 1784,
	-2, 2660,
	-1, 1202,
	5, 1785,
	550, 1785,
	-2, 2661,
	-1, 1239,
	592, 2286,
	-2, 2277,
	-1, 1240,
	592, 2287,
	-2, 2278,
	-1, 1340,
	186, 2624,
	512, 2624,
	575, 2624,
	594, 2624,
	-2, 0,
	-1, 1343,
	1, 676,
	595, 676,
	-2, 1408,
	-1, 1471,
	358, 2251,
	413, 2251,
	456, 2251,
	585, 2251,
	-2, 2241,
	-1, 1482,
	596, 2251,
	-2, 2253,
	-1, 1490,
	1, 1258,
	418, 1222,
	456, 1222,
	570, 1222,
	591, 1258,
	593, 1258,
	595, 1258,
	-2, 1545,
	-1, 1496,
	202, 1353,
	221, 1353,
	426, 1353,
	-2, 0,
	-1, 1541,
	398, 1046,
	549, 1046,
	-2, 397,
	-1, 1558,
	43, 2249,
	-2, 1012,
	-1, 1565,
	1, 1258,
	591, 1258,
	593, 1258,
	595, 1258,
	-2, 1545,
	-1, 1573,
	4, 1283,
	21, 1283,
	22, 1283,
	23, 1283,
	24, 1283,
	25, 1283,
	26, 1283,
	27, 1283,
	29, 1283,
	30, 1283,
	36, 1283,
	41, 1283,
	42, 1283,
	44, 1283,
	45, 1283,
	46, 1283,
	47, 1283,
	48, 1283,
	49, 1283,
	50, 1283,
	51, 1283,
	53, 1283,
	54, 1283,
	55, 1283,
	56, 1283,
	58, 1283,
	59, 1283,
	60, 1283,
	61, 1283,
	62, 1283,
	63, 1283,
	64, 1283,
	68, 1283,
	69, 1283,
	70, 1283,
	71, 1283,
	73, 1283,
	74, 1283,
	75, 1283,
	79, 1283,
	80, 1283,
	81, 1283,
	82, 1283,
	83, 1283,
	84, 1283,
	85, 1283,
	88, 1283,
	89, 1283,
	90, 1283,
	91, 1283,
	92, 1283,
	94, 1283,
	96, 1283,
	97, 1283,
	98, 1283,
	99, 1283,
	100, 1283,
	101, 1283,
	103, 1283,
	104, 1283,
	105, 1283,
	107, 1283,
	108, 1283,
	109, 1283,
	117, 1283,
	118, 1283,
	119, 1283,
	120, 1283,
	121, 1283,
	123, 1283,
	124, 1283,
	125, 1283,
	127, 1283,
	128, 1283,
	129, 1283,
	131, 1283,
	132, 1283,
	133, 1283,
	135, 1283,
	136, 1283,
	137, 1283,
	140, 1283,
	141, 1283,
	142, 1283,
	144, 1283,
	145, 1283,
	147, 1283,
	148, 1283,
	149, 1283,
	151, 1283,
	152, 1283,
	153, 1283,
	154, 1283,
	155, 1283,
	156, 1283,
	157, 1283,
	158, 1283,
	159, 1283,
	160, 1283,
	161, 1283,
	162, 1283,
	163, 1283,
	164, 1283,
	165, 1283,
	166, 1283,
	174, 1283,
	175, 1283,
	176, 1283,
	177, 1283,
	181, 1283,
	183, 1283,
	184, 1283,
	188, 1283,
	189, 1283,
	190, 1283,
	191, 1283,
	192, 1283,
	193, 1283,
	194, 1283,
	195, 1283,
	196, 1283,
	197, 1283,
	198, 1283,
	199, 1283,
	200, 1283,
	201, 1283,
	203, 1283,
	204, 1283,
	206, 1283,
	207, 1283,
	209, 1283,
	210, 1283,
	211, 1283,
	212, 1283,
	213, 1283,
	214, 1283,
	215, 1283,
	216, 1283,
	217, 1283,
	219, 1283,
	220, 1283,
	222, 1283,
	223, 1283,
	224, 1283,
	225, 1283,
	226, 1283,
	231, 1283,
	232, 1283,
	233, 1283,
	234, 1283,
	237, 1283,
	238, 1283,
	239, 1283,
	241, 1283,
	243, 1283,
	244, 1283,
	246, 1283,
	248, 1283,
	249, 1283,
	250, 1283,
	252, 1283,
	256, 1283,
	257, 1283,
	258, 1283,
	259, 1283,
	260, 1283,
	261, 1283,
	263, 1283,
	264, 1283,
	265, 1283,
	267, 1283,
	268, 1283,
	270, 1283,
	271, 1283,
	274, 1283,
	278, 1283,
	279, 1283,
	280, 1283,
	283, 1283,
	284, 1283,
	285, 1283,
	286, 1283,
	288, 1283,
	289, 1283,
	290, 1283,
	291, 1283,
	292, 1283,
	293, 1283,
	294, 1283,
	295, 1283,
	296, 1283,
	297, 1283,
	298, 1283,
	299, 1283,
	300, 1283,
	301, 1283,
	302, 1283,
	303, 1283,
	304, 1283,
	305, 1283,
	306, 1283,
	307, 1283,
	308, 1283,
	309, 1283,
	311, 1283,
	313, 1283,
	314, 1283,
	315, 1283,
	316, 1283,
	317, 1283,
	318, 1283,
	319, 1283,
	320, 1283,
	321, 1283,
	322, 1283,
	323, 1283,
	324, 1283,
	326, 1283,
	327, 1283,
	331, 1283,
	332, 1283,
	334, 1283,
	335, 1283,
	336, 1283,
	337, 1283,
	338, 1283,
	341, 1283,
	343, 1283,
	345, 1283,
	346, 1283,
	347, 1283,
	350, 1283,
	351, 1283,
	352, 1283,
	354, 1283,
	356, 1283,
	357, 1283,
	358, 1283,
	359, 1283,
	360, 1283,
	361, 1283,
	362, 1283,
	363, 1283,
	364, 1283,
	365, 1283,
	366, 1283,
	367, 1283,
	368, 1283,
	370, 1283,
	371, 1283,
	372, 1283,
	373, 1283,
	374, 1283,
	375, 1283,
	376, 1283,
	377, 1283,
	378, 1283,
	379, 1283,
	380, 1283,
	381, 1283,
	382, 1283,
	383, 1283,
	384, 1283,
	386, 1283,
	387, 1283,
	389, 1283,
	390, 1283,
	391, 1283,
	392, 1283,
	393, 1283,
	394, 1283,
	395, 1283,
	396, 1283,
	397, 1283,
	398, 1283,
	399, 1283,
	400, 1283,
	402, 1283,
	404, 1283,
	405, 1283,
	406, 1283,
	411, 1283,
	413, 1283,
	414, 1283,
	415, 1283,
	416, 1283,
	417, 1283,
	418, 1283,
	419, 1283,
	420, 1283,
	421, 1283,
	422, 1283,
	424, 1283,
	425, 1283,
	426, 1283,
	428, 1283,
	429, 1283,
	430, 1283,
	431, 1283,
	432, 1283,
	433, 1283,
	434, 1283,
	436, 1283,
	437, 1283,
	438, 1283,
	439, 1283,
	440, 1283,
	441, 1283,
	442, 1283,
	443, 1283,
	444, 1283,
	445, 1283,
	446, 1283,
	447, 1283,
	449, 1283,
	450, 1283,
	451, 1283,
	452, 1283,
	453, 1283,
	454, 1283,
	456, 1283,
	457, 1283,
	458, 1283,
	459, 1283,
	460, 1283,
	461, 1283,
	463, 1283,
	464, 1283,
	465, 1283,
	466, 1283,
	467, 1283,
	468, 1283,
	469, 1283,
	470, 1283,
	472, 1283,
	474, 1283,
	475, 1283,
	476, 1283,
	477, 1283,
	478, 1283,
	479, 1283,
	480, 1283,
	481, 1283,
	482, 1283,
	483, 1283,
	484, 1283,
	485, 1283,
	486, 1283,
	487, 1283,
	488, 1283,
	489, 1283,
	491, 1283,
	492, 1283,
	494, 1283,
	495, 1283,
	497, 1283,
	498, 1283,
	499, 1283,
	500, 1283,
	501, 1283,
	502, 1283,
	503, 1283,
	504, 1283,
	505, 1283,
	507, 1283,
	508, 1283,
	509, 1283,
	510, 1283,
	511, 1283,
	513, 1283,
	515, 1283,
	516, 1283,
	517, 1283,
	518, 1283,
	519, 1283,
	520, 1283,
	522, 1283,
	523, 1283,
	524, 1283,
	525, 1283,
	527, 1283,
	528, 1283,
	531, 1283,
	532, 1283,
	533, 1283,
	534, 1283,
	535, 1283,
	536, 1283,
	537, 1283,
	539, 1283,
	542, 1283,
	543, 1283,
	544, 1283,
	545, 1283,
	546, 1283,
	547, 1283,
	549, 1283,
	550, 1283,
	551, 1283,
	552, 1283,
	554, 1283,
	559, 1283,
	560, 1283,
	561, 1283,
	562, 1283,
	563, 1283,
	564, 1283,
	-2, 0,
	-1, 1596,
	1, 542,
	591, 542,
	593, 542,
	595, 542,
	-2, 1516,
	-1, 1599,
	4, 2701,
	11, 2701,
	12, 2701,
	14, 2701,
	15, 2701,
	16, 2701,
	17, 2701,
	18, 2701,
	19, 2701,
	21, 2701,
	22, 2701,
	23, 2701,
	24, 2701,
	25, 2701,
	26, 2701,
	27, 2701,
	29, 2701,
	30, 2701,
	33, 2701,
	34, 2701,
	36, 2701,
	38, 2701,
	41, 2701,
	42, 2701,
	44, 2701,
	45, 2701,
	46, 2701,
	47, 2701,
	48, 2701,
	49, 2701,
	50, 2701,
	51, 2701,
	53, 2701,
	54, 2701,
	55, 2701,
	56, 2701,
	58, 2701,
	59, 2701,
	60, 2701,
	61, 2701,
	62, 2701,
	63, 2701,
	64, 2701,
	67, 2701,
	68, 2701,
	69, 2701,
	70, 2701,
	71, 2701,
	73, 2701,
	74, 2701,
	75, 2701,
	76, 2701,
	79, 2701,
	80, 2701,
	81, 2701,
	82, 2701,
	83, 2701,
	84, 2701,
	85, 2701,
	86, 2701,
	88, 2701,
	89, 2701,
	90, 2701,
	91, 2701,
	92, 2701,
	94, 2701,
	95, 2701,
	96, 2701,
	97, 2701,
	98, 2701,
	99, 2701,
	100, 2701,
	101, 2701,
	103, 2701,
	104, 2701,
	105, 2701,
	106, 2701,
	107, 2701,
	108, 2701,
	109, 2701,
	117, 2701,
	118, 2701,
	119, 2701,
	120, 2701,
	121, 2701,
	123, 2701,
	124, 2701,
	125, 2701,
	127, 2701,
	128, 2701,
	129, 2701,
	131, 2701,
	132, 2701,
	133, 2701,
	135, 2701,
	136, 2701,
	137, 2701,
	140, 2701,
	141, 2701,
	142, 2701,
	144, 2701,
	145, 2701,
	147, 2701,
	148, 2701,
	149, 2701,
	151, 2701,
	152, 2701,
	153, 2701,
	154, 2701,
	155, 2701,
	156, 2701,
	157, 2701,
	158, 2701,
	159, 2701,
	160, 2701,
	161, 2701,
	162, 2701,
	163, 2701,
	164, 2701,
	165, 2701,
	166, 2701,
	170, 2701,
	171, 2701,
	172, 2701,
	173, 2701,
	174, 2701,
	175, 2701,
	176, 2701,
	177, 2701,
	180, 2701,
	181, 2701,
	183, 2701,
	184, 2701,
	187, 2701,
	188, 2701,
	189, 2701,
	190, 2701,
	191, 2701,
	192, 2701,
	193, 2701,
	194, 2701,
	195, 2701,
	196, 2701,
	197, 2701,
	198, 2701,
	199, 2701,
	200, 2701,
	201, 2701,
	203, 2701,
	204, 2701,
	206, 2701,
	207, 2701,
	209, 2701,
	210, 2701,
	211, 2701,
	212, 2701,
	213, 2701,
	214, 2701,
	215, 2701,
	216, 2701,
	217, 2701,
	218, 2701,
	219, 2701,
	220, 2701,
	221, 2701,
	222, 2701,
	223, 2701,
	224, 2701,
	225, 2701,
	226, 2701,
	228, 2701,
	229, 2701,
	231, 2701,
	232, 2701,
	233, 2701,
	234, 2701,
	236, 2701,
	237, 2701,
	238, 2701,
	239, 2701,
	241, 2701,
	243, 2701,
	244, 2701,
	245, 2701,
	246, 2701,
	247, 2701,
	248, 2701,
	249, 2701,
	250, 2701,
	251, 2701,
	252, 2701,
	254, 2701,
	255, 2701,
	256, 2701,
	257, 2701,
	258, 2701,
	259, 2701,
	260, 2701,
	261, 2701,
	263, 2701,
	264, 2701,
	265, 2701,
	267, 2701,
	268, 2701,
	269, 2701,
	270, 2701,
	271, 2701,
	272, 2701,
	274, 2701,
	278, 2701,
	279, 2701,
	280, 2701,
	283, 2701,
	284, 2701,
	285, 2701,
	286, 2701,
	287, 2701,
	288, 2701,
	289, 2701,
	290, 2701,
	291, 2701,
	292, 2701,
	293, 2701,
	294, 2701,
	295, 2701,
	296, 2701,
	297, 2701,
	298, 2701,
	299, 2701,
	300, 2701,
	301, 2701,
	302, 2701,
	303, 2701,
	304, 2701,
	305, 2701,
	306, 2701,
	307, 2701,
	308, 2701,
	309, 2701,
	311, 2701,
	312, 2701,
	313, 2701,
	314, 2701,
	315, 2701,
	316, 2701,
	317, 2701,
	318, 2701,
	319, 2701,
	320, 2701,
	321, 2701,
	322, 2701,
	323, 2701,
	324, 2701,
	326, 2701,
	327, 2701,
	330, 2701,
	331, 2701,
	332, 2701,
	334, 2701,
	335, 2701,
	336, 2701,
	337, 2701,
	338, 2701,
	341, 2701,
	345, 2701,
	346, 2701,
	347, 2701,
	348, 2701,
	350, 2701,
	351, 2701,
	352, 2701,
	354, 2701,
	356, 2701,
	357, 2701,
	358, 2701,
	359, 2701,
	360, 2701,
	361, 2701,
	362, 2701,
	363, 2701,
	364, 2701,
	365, 2701,
	366, 2701,
	367, 2701,
	368, 2701,
	370, 2701,
	371, 2701,
	372, 2701,
	373, 2701,
	374, 2701,
	375, 2701,
	376, 2701,
	377, 2701,
	378, 2701,
	379, 2701,
	380, 2701,
	381, 2701,
	382, 2701,
	383, 2701,
	384, 2701,
	386, 2701,
	387, 2701,
	389, 2701,
	390, 2701,
	391, 2701,
	392, 2701,
	393, 2701,
	394, 2701,
	395, 2701,
	396, 2701,
	397, 2701,
	398, 2701,
	399, 2701,
	400, 2701,
	402, 2701,
	404, 2701,
	405, 2701,
	406, 2701,
	411, 2701,
	412, 2701,
	413, 2701,
	414, 2701,
	415, 2701,
	416, 2701,
	417, 2701,
	418, 2701,
	419, 2701,
	420, 2701,
	421, 2701,
	422, 2701,
	424, 2701,
	425, 2701,
	426, 2701,
	427, 2701,
	428, 2701,
	429, 2701,
	430, 2701,
	431, 2701,
	432, 2701,
	433, 2701,
	434, 2701,
	435, 2701,
	436, 2701,
	437, 2701,
	438, 2701,
	439, 2701,
	440, 2701,
	441, 2701,
	442, 2701,
	443, 2701,
	444, 2701,
	445, 2701,
	446, 2701,
	447, 2701,
	449, 2701,
	450, 2701,
	451, 2701,
	452, 2701,
	453, 2701,
	454, 2701,
	456, 2701,
	457, 2701,
	458, 2701,
	459, 2701,
	460, 2701,
	461, 2701,
	462, 2701,
	463, 2701,
	464, 2701,
	465, 2701,
	466, 2701,
	467, 2701,
	468, 2701,
	469, 2701,
	470, 2701,
	472, 2701,
	474, 2701,
	475, 2701,
	476, 2701,
	477, 2701,
	478, 2701,
	479, 2701,
	480, 2701,
	481, 2701,
	482, 2701,
	483, 2701,
	484, 2701,
	485, 2701,
	486, 2701,
	487, 2701,
	488, 2701,
	489, 2701,
	491, 2701,
	492, 2701,
	493, 2701,
	494, 2701,
	495, 2701,
	497, 2701,
	498, 2701,
	499, 2701,
	500, 2701,
	501, 2701,
	502, 2701,
	503, 2701,
	504, 2701,
	505, 2701,
	507, 2701,
	508, 2701,
	509, 2701,
	510, 2701,
	511, 2701,
	513, 2701,
	515, 2701,
	516, 2701,
	517, 2701,
	518, 2701,
	519, 2701,
	520, 2701,
	522, 2701,
	523, 2701,
	524, 2701,
	525, 2701,
	527, 2701,
	528, 2701,
	531, 2701,
	532, 2701,
	533, 2701,
	534, 2701,
	535, 2701,
	536, 2701,
	537, 2701,
	539, 2701,
	542, 2701,
	543, 2701,
	544, 2701,
	545, 2701,
	546, 2701,
	547, 2701,
	549, 2701,
	550, 2701,
	551, 2701,
	552, 2701,
	554, 2701,
	559, 2701,
	560, 2701,
	561, 2701,
	562, 2701,
	563, 2701,
	564, 2701,
	565, 2701,
	567, 2701,
	573, 2701,
	574, 2701,
	575, 2701,
	576, 2701,
	577, 2701,
	578, 2701,
	580, 2701,
	581, 2701,
	582, 2701,
	583, 2701,
	584, 2701,
	585, 2701,
	586, 2701,
	587, 2701,
	588, 2701,
	590, 2701,
	593, 2701,
	594, 2701,
	596, 2701,
	597, 2701,
	-2, 0,
	-1, 1604,
	186, 2583,
	512, 2583,
	575, 2583,
	594, 2583,
	-2, 0,
	-1, 1653,
	391, 860,
	454, 860,
	495, 860,
	517, 860,
	-2, 0,
	-1, 1680,
	1, 855,
	591, 855,
	593, 855,
	595, 855,
	-2, 0,
	-1, 1681,
	1, 898,
	591, 898,
	593, 898,
	595, 898,
	-2, 0,
	-1, 1682,
	1, 906,
	591, 906,
	593, 906,
	595, 906,
	-2, 0,
	-1, 1685,
	1, 864,
	591, 864,
	593, 864,
	595, 864,
	-2, 0,
	-1, 1687,
	1, 870,
	591, 870,
	593, 870,
	595, 870,
	-2, 0,
	-1, 1690,
	1, 866,
	591, 866,
	593, 866,
	595, 866,
	-2, 0,
	-1, 1695,
	1, 880,
	591, 880,
	593, 880,
	595, 880,
	-2, 0,
	-1, 1726,
	1, 2566,
	591, 2566,
	593, 2566,
	594, 2566,
	595, 2566,
	-2, 0,
	-1, 1730,
	1, 951,
	591, 951,
	593, 951,
	595, 951,
	-2, 0,
	-1, 1745,
	1, 1403,
	595, 1403,
	-2, 1408,
	-1, 1748,
	169, 1559,
	182, 1559,
	273, 1559,
	339, 1559,
	-2, 1497,
	-1, 1848,
	150, 1518,
	169, 1518,
	182, 1518,
	240, 1518,
	273, 1518,
	339, 1518,
	349, 1518,
	529, 1518,
	-2, 1964,
	-1, 1908,
	593, 2137,
	-2, 0,
	-1, 1943,
	150, 1518,
	169, 1518,
	182, 1518,
	240, 1518,
	273, 1518,
	339, 1518,
	349, 1518,
	529, 1518,
	-2, 1646,
	-1, 1978,
	512, 2580,
	594, 2580,
	597, 2580,
	-2, 0,
	-1, 1995,
	592, 1787,
	-2, 1775,
	-1, 2027,
	186, 2580,
	594, 2580,
	597, 2580,
	-2, 0,
	-1, 2075,
	1, 678,
	595, 678,
	-2, 1408,
	-1, 2208,
	221, 256,
	-2, 2285,
	-1, 2209,
	221, 257,
	-2, 305,
	-1, 2313,
	1, 857,
	591, 857,
	593, 857,
	595, 857,
	-2, 0,
	-1, 2314,
	1, 900,
	591, 900,
	593, 900,
	595, 900,
	-2, 0,
	-1, 2315,
	1, 908,
	591, 908,
	593, 908,
	595, 908,
	-2, 0,
	-1, 2316,
	1, 953,
	591, 953,
	593, 953,
	595, 953,
	-2, 0,
	-1, 2353,
	1, 882,
	591, 882,
	593, 882,
	595, 882,
	-2, 0,
	-1, 2371,
	1, 936,
	591, 936,
	593, 936,
	595, 936,
	-2, 0,
	-1, 2416,
	433, 1586,
	434, 1586,
	-2, 1820,
	-1, 2447,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1840,
	-1, 2448,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1841,
	-1, 2449,
	95, 0,
	254, 0,
	255, 0,
	577, 0,
	578, 0,
	-2, 1842,
	-1, 2450,
	95, 0,
	254, 0,
	255, 0,
	577, 0,
	578, 0,
	-2, 1843,
	-1, 2451,
	95, 0,
	254, 0,
	255, 0,
	577, 0,
	578, 0,
	-2, 1844,
	-1, 2452,
	95, 0,
	254, 0,
	255, 0,
	577, 0,
	578, 0,
	-2, 1845,
	-1, 2453,
	95, 0,
	254, 0,
	255, 0,
	577, 0,
	578, 0,
	-2, 1846,
	-1, 2454,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1847,
	-1, 2466,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1859,
	-1, 2467,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1860,
	-1, 2468,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1861,
	-1, 2472,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1868,
	-1, 2478,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1872,
	-1, 2480,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1880,
	-1, 2481,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1881,
	-1, 2482,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1882,
	-1, 2483,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1883,
	-1, 2655,
	5, 2289,
	186, 2148,
	592, 2286,
	-2, 2277,
	-1, 2656,
	186, 2149,
	-2, 2652,
	-1, 2657,
	186, 2150,
	-2, 2474,
	-1, 2658,
	186, 2151,
	-2, 2359,
	-1, 2659,
	186, 2152,
	-2, 2414,
	-1, 2660,
	186, 2153,
	-2, 2459,
	-1, 2661,
	186, 2154,
	-2, 2578,
	-1, 2662,
	186, 2155,
	-2, 1947,
	-1, 2733,
	1, 1647,
	2, 1647,
	106, 1647,
	150, 1647,
	169, 1647,
	182, 1647,
	187, 1647,
	205, 1647,
	208, 1647,
	236, 1647,
	240, 1647,
	251, 1647,
	269, 1647,
	273, 1647,
	312, 1647,
	339, 1647,
	343, 1647,
	349, 1647,
	423, 1647,
	427, 1647,
	529, 1647,
	540, 1647,
	556, 1647,
	557, 1647,
	558, 1647,
	568, 1647,
	591, 1647,
	593, 1647,
	595, 1647,
	597, 1647,
	-2, 1646,
	-1, 2746,
	592, 2258,
	-2, 2272,
	-1, 2748,
	1, 322,
	556, 322,
	-2, 1545,
	-1, 2776,
	592, 1786,
	-2, 1776,
	-1, 2961,
	1, 1258,
	418, 1222,
	456, 1222,
	570, 1222,
	591, 1258,
	593, 1258,
	595, 1258,
	-2, 1545,
	-1, 3138,
	344, 1589,
	-2, 2691,
	-1, 3139,
	344, 1590,
	-2, 2563,
	-1, 3143,
	433, 2214,
	434, 2214,
	-2, 1945,
	-1, 3144,
	433, 2218,
	434, 2218,
	-2, 1946,
	-1, 3145,
	433, 2215,
	434, 2215,
	-2, 1945,
	-1, 3146,
	433, 2219,
	434, 2219,
	-2, 1946,
	-1, 3159,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1870,
	-1, 3160,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1874,
	-1, 3166,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1876,
	-1, 3388,
	1, 675,
	591, 675,
	593, 675,
	595, 675,
	-2, 1408,
	-1, 3557,
	43, 2249,
	-2, 1013,
	-1, 3562,
	1, 1258,
	591, 1258,
	593, 1258,
	595, 1258,
	-2, 1545,
	-1, 3669,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1878,
	-1, 3676,
	245, 0,
	247, 0,
	330, 0,
	-2, 1897,
	-1, 3744,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1926,
	-1, 3745,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1927,
	-1, 3746,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1928,
	-1, 3750,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1932,
	-1, 3751,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1933,
	-1, 3752,
	14, 0,
	15, 0,
	16, 0,
	573, 0,
	574, 0,
	575, 0,
	-2, 1934,
	-1, 3799,
	592, 2259,
	-2, 2273,
	-1, 3971,
	594, 2809,
	-2, 1471,
	-1, 4029,
	245, 0,
	247, 0,
	330, 0,
	-2, 1898,
	-1, 4032,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1901,
	-1, 4033,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1903,
	-1, 4127,
	594, 2274,
	-2, 1293,
	-1, 4276,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1902,
	-1, 4277,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 1904,
	-1, 4288,
	245, 0,
	-2, 1937,
	-1, 4469,
	245, 0,
	-2, 1938,
	-1, 4661,
	50, 0,
	218, 0,
	272, 0,
	462, 0,
	565, 0,
	576, 0,
	-2, 2655,
}

const sqlPrivate = 57344

const sqlLast = 130121

var sqlAct = [...]int{
	269, 4776, 3546, 4391, 4855, 3297, 3044, 4506, 3031, 4654,
	4653, 4717, 4763, 4498, 4333, 2839, 4660, 4642, 4533, 3545,
	4671, 4792, 2123, 4554, 4123, 4529, 4610, 4629, 2205, 1232,
	4673, 4607, 4422, 4672, 2883, 4730, 4376, 4398, 3709, 4590,
	4319, 1243, 2905, 4473, 4232, 4659, 4227, 1109, 4193, 2280,
	3661, 4265, 4338, 4297, 2426, 4407, 3410, 3579, 4012, 4214,
	1312, 4170, 4207, 1316, 3963, 3892, 4216, 3152, 3955, 696,
	1063, 4124, 2057, 2688, 4436, 806, 1305, 4108, 3472, 2495,
	2434, 3541, 1757, 4237, 3573, 2918, 2044, 1620, 3936, 3413,
	1376, 2289, 3618, 3918, 3531, 3920, 2131, 1982, 2427, 3053,
	3620, 806, 1468, 1054, 3020, 767, 3001, 3055, 2990, 3066,
	2210, 4293, 3340, 3802, 3320, 3312, 4011, 1307, 3280, 3063,
	4068, 879, 4, 3052, 707, 3301, 1120, 2287, 883, 3017,
	1661, 1949, 2253, 3046, 3032, 3015, 3399, 1918, 3432, 2194,
	2192, 4764, 2142, 2932, 3279, 2841, 2431, 2726, 3770, 1894,
	4474, 1826, 1856, 1618, 2508, 2994, 3407, 3136, 2573, 874,
	1475, 801, 1116, 263, 262, 3303, 2193, 1310, 1560, 762,
	3062, 1223, 947, 2176, 2575, 2728, 2937, 2169, 2188, 1163,
	1113, 3002, 2032, 2115, 1358, 1745, 2111, 1284, 2055, 2564,
	1118, 2725, 1298, 2492, 2706, 1919, 2398, 2101, 2882, 2415,
	1983, 2396, 3543, 3347, 2759, 1597, 3025, 2240, 803, 807,
	1563, 2864, 740, 4555, 4777, 3056, 2685, 808, 2827, 3913,
	1345, 1935, 2758, 1226, 1889, 683, 2567, 1928, 2696, 705,
	1205, 2545, 2715, 2617, 1840, 2651, 1240, 186, 812, 815,
	1758, 1295, 187, 1111, 1759, 1695, 748, 2397, 1680, 1062,
	177, 2399, 1222, 1938, 2239, 1588, 2266, 760, 2420, 2130,
	1500, 1595, 4718, 1094, 812, 815, 2033, 2030, 700, 1228,
	44, 43, 697, 41, 708, 32, 30, 723, 1203, 855,
	28, 3189, 1764, 1238, 1744, 967, 796, 1511, 3784, 3183,
	3785, 3299, 4868, 2046, 2046, 2046, 2705, 1504, 4698, 2046,
	856, 4858, 2046, 2046, 3598, 3598, 4312, 4842, 73, 898,
	2046, 2705, 4841, 4831, 4812, 4309, 2705, 2214, 4337, 108,
	4810, 3589, 4749, 4706, 4337, 74, 2214, 4707, 3372, 4695,
	4693, 4690, 3588, 2705, 2705, 4691, 4687, 2214, 261, 1058,
	4688, 78, 4657, 177, 4656, 4655, 2214, 4650, 2214, 2067,
	4649, 2067, 4640, 4638, 2067, 4635, 4337, 4337, 1048, 4410,
	4605, 4579, 4572, 4571, 4337, 2767, 2705, 2705, 4566, 4565,
	4559, 4525, 4337, 4337, 2214, 4184, 4471, 4089, 4453, 4450,
	2767, 87, 3998, 2214, 4447, 4400, 4354, 4353, 4337, 4401,
	2214, 2214, 3355, 4344, 3370, 875, 1686, 2214, 1235, 1058,
	2064, 1220, 4343, 1206, 1206, 4336, 4337, 4304, 4278, 4337,
	4256, 2214, 2767, 4245, 2067, 1039, 2214, 3598, 1354, 2788,
	1038, 881, 73, 1627, 878, 877, 4165, 4148, 4031, 2214,
	2705, 2705, 2767, 49, 3979, 107, 1354, 3198, 3615, 74,
	93, 104, 3973, 3199, 3934, 3794, 3615, 2288, 3935, 3795,
	93, 3151, 3792, 3777, 2698, 78, 3793, 2705, 3250, 3251,
	3693, 2763, 3689, 3614, 2214, 3774, 2705, 3615, 3605, 1053,
	3296, 3291, 3606, 1255, 2705, 2705, 3290, 2064, 3241, 3239,
	2705, 3231, 3242, 3240, 3229, 3232, 3200, 3070, 2705, 3042,
	2705, 2067, 3041, 2276, 2811, 87, 2276, 2766, 2705, 94,
	2214, 2767, 2756, 2705, 2787, 2750, 2705, 1207, 1059, 2214,
	1262, 2704, 2275, 1772, 1773, 2705, 2276, 4580, 233, 1816,
	1817, 1818, 1209, 4475, 1210, 4466, 4454, 4410, 2067, 3774,
	2697, 2570, 4225, 4184, 2064, 881, 1803, 1256, 4149, 3998,
	3606, 2908, 2135, 1775, 2826, 2080, 2045, 49, 2061, 107,
	1525, 2996, 1822, 2213, 93, 104, 2928, 2824, 1256, 1914,
	1499, 3875, 3664, 3639, 1936, 2181, 235, 3590, 1663, 1828,
	2742, 2741, 2740, 2739, 2738, 1211, 1513, 1208, 1774, 1047,
	1046, 233, 1045, 1044, 1043, 4084, 3591, 2705, 1794, 2521,
	2522, 2523, 2540, 2541, 2542, 1042, 1041, 1791, 1037, 1036,
	1035, 1034, 1033, 1513, 3110, 1504, 1032, 1031, 1030, 2543,
	1029, 1613, 1028, 94, 1027, 234, 1026, 1025, 1024, 1023,
	2571, 1022, 1021, 1020, 945, 944, 943, 3256, 227, 235,
	942, 941, 940, 939, 3250, 3251, 938, 228, 937, 936,
	935, 934, 1828, 933, 97, 2600, 932, 3188, 931, 2047,
	2047, 2047, 930, 929, 928, 2047, 927, 926, 2047, 2047,
	925, 2533, 188, 924, 923, 4043, 2047, 922, 921, 920,
	2529, 919, 1797, 1798, 1799, 1800, 1115, 2346, 234, 918,
	917, 3028, 1780, 916, 915, 914, 913, 912, 911, 901,
	900, 896, 895, 889, 888, 873, 872, 185, 100, 829,
	828, 103, 2572, 827, 2569, 826, 818, 3250, 3251, 3265,
	3268, 3269, 3270, 817, 3250, 3251, 816, 2064, 782, 773,
	1813, 772, 771, 1823, 754, 188, 257, 233, 4239, 256,
	1802, 1804, 3588, 255, 3266, 882, 254, 233, 253, 1256,
	149, 1321, 1118, 252, 251, 2534, 2535, 2536, 2537, 250,
	149, 249, 248, 247, 246, 2528, 1789, 1790, 97, 245,
	244, 243, 1524, 242, 241, 240, 239, 238, 237, 1118,
	1118, 3250, 3251, 236, 1811, 235, 3816, 3788, 3616, 1772,
	1773, 3343, 3265, 3211, 3194, 235, 1379, 3185, 3093, 1795,
	1379, 1513, 2977, 3010, 3294, 2771, 2747, 1321, 2732, 2109,
	2586, 152, 4678, 3256, 2584, 2064, 1825, 1512, 2066, 1775,
	1962, 185, 100, 1897, 1867, 103, 189, 2283, 1507, 1365,
	1896, 1118, 1939, 1118, 234, 1118, 2214, 2798, 2045, 2538,
	2539, 1321, 2064, 3295, 234, 2061, 2787, 227, 1242, 1362,
	1363, 233, 233, 2391, 1774, 1900, 228, 227, 1771, 882,
	1858, 1315, 4658, 1349, 149, 2574, 228, 1321, 4637, 4540,
	4463, 1825, 2531, 1478, 4478, 2697, 1631, 1897, 1483, 233,
	4457, 188, 4455, 4292, 1896, 4331, 3256, 1321, 4246, 4224,
	4095, 188, 3267, 3256, 1321, 4066, 4065, 1519, 4059, 235,
	235, 4058, 1118, 4057, 1118, 4050, 1092, 4049, 1321, 1895,
	1865, 2282, 4047, 4042, 1118, 4039, 1118, 1490, 4038, 3933,
	3266, 3820, 1234, 3939, 1801, 152, 3819, 235, 3818, 1617,
	3798, 1256, 1289, 1292, 3765, 3764, 3763, 3685, 3680, 3338,
	189, 3287, 4241, 3278, 3249, 1569, 1572, 1796, 234, 234,
	3256, 1528, 1503, 1302, 3246, 3250, 3251, 1343, 1780, 1688,
	3245, 227, 227, 1321, 3243, 3238, 1372, 3237, 1465, 1470,
	228, 228, 3236, 1488, 1814, 3233, 234, 1565, 3250, 3251,
	3230, 2568, 1118, 812, 815, 1118, 1772, 1773, 3210, 227,
	3193, 1473, 1825, 3266, 3186, 876, 188, 1513, 228, 3184,
	3266, 3043, 2733, 2557, 1606, 1827, 233, 1771, 1505, 1860,
	2780, 2256, 1770, 233, 4862, 4802, 1775, 1859, 1619, 1857,
	2532, 1858, 4801, 188, 2221, 1219, 2219, 1338, 3940, 1502,
	3250, 3251, 1558, 3268, 3269, 3270, 4765, 1501, 3259, 3260,
	3252, 3253, 3254, 3255, 3257, 3258, 1632, 1600, 1602, 3012,
	4716, 1774, 4027, 4714, 235, 1329, 1244, 3266, 3873, 3711,
	4597, 235, 4532, 4516, 1575, 1825, 4513, 233, 3267, 4512,
	4511, 4492, 1825, 1645, 4477, 3250, 3251, 1812, 1827, 1118,
	1118, 1118, 1118, 1118, 1118, 1118, 1118, 1306, 1815, 1792,
	1788, 4476, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781,
	1782, 4451, 4435, 234, 3362, 3265, 4434, 3292, 1349, 1518,
	234, 1349, 1118, 2498, 4420, 235, 227, 1704, 1118, 4417,
	4416, 4411, 4350, 227, 3256, 228, 4327, 4290, 4273, 1825,
	4272, 1637, 228, 233, 1591, 4253, 1471, 177, 177, 1482,
	1306, 3267, 1236, 1061, 4252, 4210, 4185, 3256, 3267, 4083,
	188, 4064, 1749, 3999, 3993, 1780, 3990, 3027, 2518, 2519,
	2520, 2544, 2530, 2524, 234, 2526, 2527, 2525, 2512, 2513,
	2514, 2515, 2516, 2517, 3940, 3861, 3860, 227, 3844, 3843,
	2504, 235, 3841, 3780, 3768, 1743, 228, 3675, 1845, 3617,
	1612, 4240, 3599, 3565, 3489, 3445, 3412, 3364, 3215, 3256,
	3335, 3214, 1626, 3209, 3175, 3267, 1059, 1306, 1306, 2989,
	1903, 188, 1902, 3261, 3259, 3260, 3252, 3253, 3254, 3255,
	3257, 3258, 1901, 1118, 1118, 1118, 1898, 1890, 1888, 1118,
	234, 3266, 1750, 2778, 2777, 2744, 1240, 2737, 1240, 2703,
	2582, 1847, 1844, 227, 3256, 1589, 2599, 1961, 3011, 1917,
	1654, 1912, 228, 1379, 1911, 1910, 1909, 1908, 1916, 1907,
	1906, 1905, 1118, 233, 3272, 806, 1904, 1689, 1885, 1884,
	1883, 2000, 806, 1882, 1881, 1321, 1880, 188, 1879, 3262,
	3263, 3264, 1878, 1238, 1877, 1238, 3261, 3259, 3260, 3252,
	3253, 3254, 3255, 3257, 3258, 3260, 3252, 3253, 3254, 3255,
	3257, 3258, 1925, 1825, 1746, 1969, 3266, 1876, 1875, 1874,
	1039, 235, 1754, 1873, 1872, 1038, 1753, 2284, 1871, 1860,
	1846, 1843, 233, 1838, 1337, 1260, 1825, 1899, 1251, 4479,
	1748, 1970, 4213, 4091, 1825, 1973, 4035, 3815, 3791, 3783,
	3197, 1321, 2735, 233, 2769, 1594, 4310, 4093, 1118, 1767,
	1768, 3814, 1321, 3252, 3253, 3254, 3255, 3257, 3258, 1859,
	234, 1922, 1923, 1778, 1779, 1781, 1782, 3360, 4151, 1118,
	235, 3250, 3251, 227, 1841, 233, 1379, 3594, 1825, 3267,
	1772, 1773, 228, 1957, 2100, 1359, 2051, 1354, 4799, 2053,
	1206, 235, 2125, 1891, 1892, 2058, 1361, 1994, 1235, 2060,
	1235, 2585, 2098, 1946, 2063, 2583, 2100, 188, 4791, 2906,
	1775, 4514, 4412, 4403, 4402, 4244, 4187, 4186, 2100, 234,
	4150, 2073, 4086, 235, 4002, 4001, 4000, 4408, 812, 815,
	3786, 1059, 227, 3601, 3600, 812, 815, 3943, 1968, 2107,
	234, 228, 1349, 1939, 4458, 1774, 4456, 1354, 1966, 1897,
	1997, 2072, 3662, 227, 3267, 1937, 1896, 2935, 2887, 1360,
	3887, 1944, 228, 1880, 1653, 1880, 188, 1741, 3235, 3414,
	3234, 3157, 234, 1974, 2869, 4330, 1357, 2086, 3858, 1869,
	2023, 3481, 1354, 1705, 1662, 227, 2049, 188, 1018, 177,
	4728, 2281, 1947, 1915, 228, 2933, 4399, 1866, 2178, 3448,
	2195, 233, 2092, 2091, 3610, 1941, 2100, 2102, 1321, 1321,
	1956, 1955, 4702, 1954, 1988, 1952, 1951, 2305, 1379, 188,
	1950, 3548, 4683, 3547, 3261, 3259, 3260, 3252, 3253, 3254,
	3255, 3257, 3258, 1019, 4670, 1980, 2075, 3532, 3067, 2570,
	1663, 2196, 3947, 3930, 3889, 3884, 3866, 3636, 3386, 235,
	3252, 3253, 3254, 3255, 3257, 3258, 4294, 1059, 1776, 1777,
	1778, 1779, 1781, 1782, 3299, 2257, 3713, 2565, 2776, 4679,
	1913, 2914, 1893, 3539, 3203, 2866, 2250, 1568, 1495, 1332,
	2163, 1288, 2168, 4692, 2071, 2173, 4689, 1594, 3584, 233,
	2925, 1593, 3262, 3263, 3264, 2206, 2211, 1482, 234, 3261,
	3259, 3260, 3252, 3253, 3254, 3255, 3257, 3258, 2069, 2934,
	2922, 227, 1321, 3836, 1321, 1218, 1321, 2920, 2078, 4507,
	228, 2135, 4346, 4228, 2095, 4604, 2103, 39, 2571, 4489,
	2913, 2093, 1321, 1321, 2865, 4323, 4680, 235, 3417, 3853,
	3050, 3024, 3516, 1321, 1482, 188, 4746, 868, 3656, 3254,
	3255, 3257, 3258, 3902, 4747, 1321, 4136, 1321, 1321, 1321,
	2141, 4781, 3390, 4134, 4372, 1535, 4138, 1703, 2812, 999,
	2198, 2199, 1016, 812, 815, 2246, 746, 2200, 2359, 1641,
	806, 1702, 1057, 1014, 4857, 1497, 234, 3361, 1543, 1012,
	4120, 4520, 2291, 1010, 2830, 2087, 2406, 2162, 1007, 227,
	2406, 4365, 1118, 4356, 2076, 2304, 4381, 2357, 228, 2828,
	2572, 1361, 2569, 4179, 4178, 3900, 2251, 3899, 3891, 1502,
	3881, 3901, 1344, 2830, 4116, 2263, 2279, 1501, 3880, 3878,
	3877, 3865, 3831, 188, 3830, 3522, 3521, 1118, 2828, 2097,
	3354, 3208, 1315, 2293, 3207, 3206, 2161, 2286, 2172, 3205,
	3161, 2931, 869, 2295, 2930, 2404, 2927, 2916, 2904, 2404,
	2903, 2897, 2896, 2895, 3392, 2303, 2309, 2306, 2307, 2308,
	2212, 1118, 1056, 1118, 1360, 1544, 2271, 2096, 4117, 2874,
	1118, 2873, 1701, 2000, 2000, 1379, 2292, 1118, 1118, 1118,
	1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 2273, 1118, 2260, 1118, 1118, 1118, 1118,
	2232, 2231, 1355, 1593, 3414, 2402, 2834, 2196, 2297, 2390,
	3479, 2757, 4347, 812, 815, 1591, 2479, 2268, 2265, 2268,
	1355, 2408, 1118, 2269, 2281, 4324, 1118, 1118, 2867, 1639,
	1747, 2613, 2867, 2574, 1118, 4133, 4782, 2395, 1118, 2612,
	1118, 1118, 1338, 2277, 1361, 2278, 2436, 3021, 1379, 1355,
	2371, 1058, 695, 2784, 1118, 1118, 1118, 1118, 2331, 1118,
	1118, 1118, 1118, 1118, 1118, 1118, 1118, 2770, 2296, 745,
	2405, 1581, 3447, 1580, 2405, 1579, 2761, 1578, 690, 1994,
	1994, 2249, 1234, 2313, 1234, 1118, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 1118, 4271, 1634, 2230, 2819, 1118, 2546,
	2547, 1059, 3073, 1059, 2891, 2370, 4101, 1360, 3637, 2166,
	1240, 2388, 1539, 2546, 2562, 2843, 3172, 1379, 3258, 4382,
	1351, 4152, 2301, 2353, 1655, 1498, 1240, 1782, 1739, 2884,
	2885, 4380, 1997, 1997, 2383, 1684, 4786, 4378, 1351, 2608,
	2419, 2132, 1118, 1379, 2403, 3170, 1004, 2871, 2403, 2568,
	4112, 2884, 2885, 2432, 2433, 4113, 2565, 1238, 2654, 2654,
	2668, 1552, 2546, 2884, 2885, 2689, 2691, 1351, 2321, 4100,
	3480, 2695, 2380, 1238, 2392, 2128, 2510, 2394, 2407, 747,
	2400, 2393, 1039, 1274, 4377, 1039, 1039, 2423, 2494, 2494,
	2424, 2425, 2561, 2749, 3839, 4132, 1988, 1988, 2314, 1740,
	1356, 1557, 2720, 1684, 2133, 2134, 1714, 4115, 1700, 1663,
	1663, 2857, 4379, 1635, 2143, 2745, 4500, 2363, 1356, 871,
	870, 4676, 3134, 4118, 2815, 1927, 4746, 1752, 2846, 2318,
	2924, 1055, 4787, 3149, 2129, 4814, 3850, 2147, 780, 1683,
	3116, 1651, 2369, 2817, 2382, 2610, 2856, 1356, 1321, 1321,
	2611, 2104, 2105, 2614, 2506, 2615, 2616, 2312, 1352, 2270,
	4135, 2315, 2923, 1336, 3645, 1718, 1681, 1353, 2116, 3644,
	1206, 2559, 1235, 2117, 2760, 2712, 1352, 3389, 2322, 3107,
	2818, 2574, 2921, 2764, 1564, 1353, 1957, 3167, 1235, 2919,
	1379, 1946, 2833, 2502, 2144, 3702, 4177, 4795, 3862, 3879,
	2500, 2816, 1236, 2711, 1236, 1352, 1931, 1683, 3876, 2807,
	3699, 3168, 3823, 3810, 1353, 3173, 2793, 2650, 2801, 2734,
	2680, 2663, 2797, 2783, 2000, 2693, 3528, 2829, 3520, 1682,
	4120, 2701, 2702, 2476, 909, 1562, 2808, 4502, 2713, 3477,
	2926, 2772, 4789, 1059, 1899, 2717, 2718, 2894, 778, 1944,
	3119, 1349, 4114, 1059, 3848, 1934, 1008, 1059, 2806, 1315,
	4270, 2358, 1379, 2804, 4116, 3148, 2872, 1008, 4109, 2719,
	1929, 2724, 2833, 1008, 2730, 2731, 1697, 1009, 1321, 2490,
	2218, 2217, 1008, 2389, 2809, 4107, 2118, 1640, 1932, 4760,
	2356, 4121, 3700, 4768, 4111, 4677, 2835, 4130, 3910, 1118,
	1118, 2148, 1118, 2122, 3464, 2779, 4767, 866, 2488, 865,
	3456, 177, 2803, 2870, 1891, 1892, 2792, 2755, 4117, 2135,
	2795, 691, 2796, 1965, 806, 4817, 1321, 2782, 2845, 2786,
	1247, 1930, 2800, 2917, 1979, 2832, 2892, 2810, 2379, 4735,
	1354, 2028, 4017, 2965, 4016, 1059, 3581, 2802, 2574, 3113,
	1994, 3526, 1638, 3911, 994, 3863, 3471, 1321, 1354, 3465,
	4110, 994, 3314, 4845, 2876, 3457, 3035, 2149, 2150, 1321,
	819, 1321, 1245, 1541, 2046, 3008, 2119, 2124, 1052, 2860,
	2813, 3064, 3118, 4586, 4315, 1052, 1321, 1354, 2961, 1538,
	3401, 2145, 2875, 4644, 1306, 4645, 3909, 4675, 2966, 3169,
	692, 2474, 3463, 1997, 2477, 2893, 3582, 902, 3455, 3171,
	2381, 1715, 2838, 3115, 2972, 1249, 2848, 2851, 2907, 2974,
	2179, 4576, 2962, 2963, 2877, 3074, 3075, 2886, 2888, 2889,
	2890, 1118, 2902, 2146, 4788, 2831, 3081, 3082, 3083, 2155,
	1328, 2964, 2901, 1306, 2320, 2574, 1933, 4508, 4793, 693,
	2484, 694, 2899, 2898, 4131, 2473, 3068, 812, 815, 2120,
	1273, 779, 1564, 3004, 2912, 3141, 3142, 1988, 890, 2485,
	995, 3492, 4527, 2844, 2486, 3091, 2191, 995, 2491, 3391,
	1306, 1306, 1248, 744, 3429, 2116, 3581, 812, 815, 1636,
	2117, 3049, 1118, 1712, 2156, 1496, 3080, 2970, 1118, 1118,
	3071, 4501, 3439, 1502, 2182, 3076, 2126, 3077, 3000, 2189,
	781, 2975, 3433, 1258, 777, 3039, 3117, 4202, 4734, 1510,
	4112, 1517, 2987, 1523, 3069, 4113, 3358, 3096, 3037, 2997,
	3088, 2190, 2998, 3121, 1886, 3123, 2167, 2154, 3163, 2493,
	1005, 3428, 4267, 3098, 2900, 3100, 2138, 3102, 4709, 1716,
	713, 2179, 2151, 4794, 1118, 1118, 3030, 3437, 4710, 3313,
	1118, 1076, 3040, 3435, 2116, 2126, 2830, 3051, 3849, 2117,
	2748, 3111, 1471, 1118, 1118, 3527, 3038, 4115, 4013, 1118,
	1118, 2849, 1713, 1751, 3019, 1118, 2317, 4283, 1837, 4796,
	1611, 2179, 1616, 4118, 3090, 3402, 2900, 1650, 1652, 1482,
	3438, 2139, 1625, 2118, 1630, 177, 3099, 4574, 3101, 4757,
	3103, 910, 1318, 2167, 2311, 3097, 1067, 820, 821, 1335,
	2122, 4627, 2183, 4615, 2952, 3923, 4162, 3434, 2152, 2556,
	1118, 1118, 1118, 3213, 3921, 2716, 1118, 3164, 2501, 4818,
	2729, 1717, 2175, 3129, 2137, 2475, 1118, 1931, 4575, 1058,
	3715, 3470, 4805, 3140, 903, 904, 3124, 2944, 2942, 3126,
	4212, 996, 2487, 1118, 2946, 2948, 2938, 1687, 996, 2174,
	4007, 3131, 2489, 4217, 4803, 3130, 4182, 3811, 1263, 4266,
	4018, 1668, 2118, 3658, 3132, 4534, 1234, 2121, 2670, 2419,
	3150, 3135, 4218, 2119, 2124, 4674, 1934, 4745, 4743, 2122,
	3938, 4620, 1234, 2170, 3191, 3192, 4553, 4419, 4181, 3195,
	4180, 2714, 3925, 3961, 3569, 891, 892, 3923, 4733, 4846,
	2238, 1924, 4114, 1261, 1254, 1050, 3921, 994, 682, 1932,
	2047, 3187, 2133, 2134, 4203, 1762, 3754, 4014, 4062, 2422,
	1761, 1482, 3348, 2136, 2088, 4823, 4345, 3924, 1246, 1306,
	3162, 1052, 4428, 1118, 1118, 1118, 1118, 4488, 1761, 823,
	822, 4121, 2171, 1118, 1118, 1118, 3962, 3895, 1118, 3882,
	3835, 1756, 2119, 2124, 3408, 3570, 2120, 2085, 1118, 1240,
	1379, 3561, 3404, 3009, 1118, 3003, 1118, 3306, 3307, 4535,
	2991, 2264, 2258, 2252, 3827, 1240, 2244, 1051, 2224, 1482,
	4708, 1482, 2412, 3698, 3925, 997, 3804, 1532, 1265, 753,
	4445, 3769, 997, 1379, 2707, 4591, 4268, 3659, 2833, 2114,
	2878, 824, 825, 2126, 4556, 1240, 1238, 1761, 1379, 2364,
	2081, 3964, 4233, 3202, 2988, 1276, 3919, 3322, 2186, 3924,
	4397, 3289, 1238, 995, 1760, 2940, 905, 906, 2000, 2710,
	3328, 4395, 1379, 2083, 3341, 2120, 2954, 3308, 998, 4326,
	3805, 2302, 1760, 4437, 3420, 998, 3416, 3415, 1321, 1321,
	4019, 3155, 1238, 2850, 2112, 3782, 4438, 2953, 2945, 2943,
	2947, 2949, 2939, 2941, 2955, 3133, 3806, 1933, 3803, 3311,
	2709, 1118, 2951, 2184, 2084, 2708, 3310, 1685, 1059, 1691,
	1690, 2754, 2126, 4215, 2753, 1118, 1236, 893, 894, 4439,
	1762, 2752, 2751, 3929, 3922, 1321, 2125, 2113, 2995, 1587,
	2000, 1585, 1236, 3396, 3397, 2958, 3755, 1953, 1762, 3342,
	1056, 1760, 3323, 3318, 1573, 3756, 2185, 4063, 1118, 908,
	2413, 1235, 4334, 4495, 3418, 4392, 1837, 3422, 1574, 3337,
	2125, 3380, 4822, 3395, 1321, 4020, 4194, 1235, 2854, 3376,
	3316, 3387, 3378, 3379, 3334, 3842, 3611, 3382, 3346, 3383,
	2262, 3384, 4441, 3300, 1994, 3393, 1321, 3535, 1321, 3284,
	3285, 3286, 3321, 3327, 1349, 4536, 3419, 1235, 3315, 3424,
	3828, 3317, 3426, 2879, 2880, 4440, 3326, 1379, 2178, 4250,
	4754, 4531, 3329, 3330, 2121, 4313, 3922, 2178, 1321, 1969,
	3371, 3832, 1321, 4442, 3356, 3325, 3495, 3405, 3497, 4594,
	3072, 3501, 1669, 2973, 3450, 3507, 2971, 1997, 4496, 2969,
	3482, 2290, 3365, 3366, 996, 3367, 3350, 3351, 3352, 1321,
	2195, 1644, 3493, 4601, 1927, 4588, 1994, 4335, 3359, 4321,
	3373, 3374, 1321, 4069, 1321, 3771, 2581, 4758, 1379, 1735,
	4622, 3475, 3377, 4759, 4756, 806, 4694, 3332, 3381, 3333,
	3349, 4249, 4523, 2375, 1737, 4515, 1321, 4289, 3388, 3468,
	4061, 3928, 3490, 2121, 1734, 3544, 3807, 3454, 1321, 3452,
	3394, 1988, 1732, 3281, 3674, 4322, 752, 3403, 3634, 1997,
	3633, 3369, 1709, 2959, 3244, 1240, 3174, 4595, 2992, 3577,
	1707, 3466, 2950, 1679, 1677, 1675, 4497, 1673, 2915, 2868,
	3409, 2781, 3324, 3064, 3553, 1931, 3560, 3436, 2384, 1671,
	1321, 1321, 3064, 1964, 3446, 1665, 3453, 1660, 1658, 3530,
	1583, 3533, 3459, 3502, 3575, 1960, 1738, 3508, 1622, 3514,
	4384, 3282, 1238, 1321, 3462, 3654, 3653, 1756, 3467, 1586,
	3469, 1584, 3483, 1988, 3109, 3108, 3460, 3079, 3586, 2401,
	3461, 3568, 3833, 3597, 1934, 3491, 1049, 3478, 997, 907,
	2355, 1696, 3518, 3510, 2326, 2243, 3554, 3504, 3512, 1929,
	3503, 2223, 2029, 3513, 3509, 1870, 1379, 2203, 3562, 1379,
	1633, 1556, 2580, 4669, 4163, 3886, 3885, 1932, 3519, 4164,
	3638, 4147, 4587, 4231, 4169, 4160, 4105, 1482, 1482, 3523,
	3960, 3951, 3898, 3883, 4731, 2876, 3537, 1006, 812, 815,
	3578, 998, 1118, 3517, 3556, 3571, 3856, 3854, 1118, 1118,
	3603, 3604, 1118, 1118, 1118, 3834, 1118, 3557, 3558, 3564,
	1930, 3494, 3559, 2377, 3628, 1118, 2000, 2376, 1736, 4443,
	3549, 3631, 3022, 3621, 1118, 4444, 4226, 1235, 1733, 1118,
	3014, 3613, 3652, 3007, 3609, 1379, 1731, 3630, 3583, 3628,
	3695, 3595, 3596, 2999, 1118, 3585, 1708, 3592, 3621, 3651,
	1482, 1972, 1379, 3607, 1706, 3576, 3574, 1678, 1676, 1674,
	2985, 1672, 2000, 2000, 1118, 1118, 3632, 1118, 1118, 1118,
	3641, 2967, 3642, 1670, 3643, 2249, 2799, 2993, 2794, 1664,
	2222, 1659, 1657, 2220, 1582, 1118, 2197, 2180, 2153, 1118,
	3660, 2000, 2000, 1118, 1118, 1118, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 3677, 1118, 3727, 3648, 3728, 2140, 2127,
	2354, 3623, 1118, 1118, 2000, 1933, 2068, 2065, 2062, 1118,
	2059, 177, 177, 3657, 3687, 3688, 3622, 2204, 2054, 2052,
	1118, 2048, 1994, 1011, 1013, 1015, 3623, 2039, 2347, 3649,
	4722, 1240, 1240, 4217, 1215, 1118, 1765, 3505, 3655, 4747,
	3153, 3622, 2189, 2089, 2387, 3094, 3127, 3095, 3125, 2960,
	4632, 4255, 4218, 4248, 4247, 4176, 4097, 3684, 3682, 3065,
	1216, 2108, 1537, 4430, 1379, 2830, 2830, 1059, 1994, 1994,
	2855, 3800, 3694, 1306, 4423, 1997, 3972, 1297, 1238, 1238,
	2828, 2852, 3766, 2135, 3710, 3701, 3703, 3704, 3717, 3787,
	2385, 1729, 1730, 2316, 2261, 1234, 2350, 1994, 1994, 2345,
	4631, 2323, 1296, 3725, 3705, 3619, 1126, 3726, 4139, 4171,
	1656, 1234, 3730, 1118, 4465, 1772, 1773, 3732, 3758, 4070,
	4048, 1997, 1997, 3431, 2859, 2881, 2858, 3724, 1769, 1598,
	1994, 1330, 1264, 1118, 3767, 3154, 2386, 4750, 4741, 1988,
	4703, 1234, 2432, 3718, 258, 3759, 1766, 1772, 1773, 3773,
	1997, 1997, 265, 265, 265, 3506, 685, 686, 2859, 701,
	685, 701, 711, 2984, 2352, 751, 1118, 1118, 3894, 770,
	1217, 2432, 3733, 3948, 776, 3775, 3776, 1775, 1482, 1297,
	1774, 265, 2245, 1997, 3825, 1988, 1988, 1297, 3826, 1341,
	3893, 679, 2922, 1235, 1235, 2920, 3778, 3779, 2929, 2909,
	3789, 887, 2861, 2911, 3762, 2863, 4581, 265, 4547, 4541,
	1118, 4494, 1774, 4790, 1988, 1988, 2910, 4414, 2862, 4390,
	4314, 3958, 3950, 3629, 3624, 3625, 3626, 3627, 3937, 3855,
	3797, 3857, 3563, 3029, 2694, 2074, 1981, 1321, 4624, 3867,
	4332, 3511, 1321, 4625, 1494, 3790, 1493, 1988, 3629, 3624,
	3625, 3626, 3627, 2159, 4821, 3357, 3250, 3251, 1504, 3817,
	1772, 1773, 177, 4762, 4624, 2000, 3872, 3874, 1643, 4625,
	2822, 2823, 4543, 3871, 1642, 3196, 3838, 2820, 2821, 4040,
	2576, 3888, 3813, 3890, 2822, 2820, 2609, 3957, 1711, 4415,
	3859, 1710, 3896, 4366, 4173, 4168, 1321, 4167, 4036, 3812,
	3864, 3706, 1118, 1850, 3897, 3499, 3496, 1855, 1864, 1863,
	1240, 1118, 4807, 3974, 4769, 1236, 3912, 3914, 4585, 2135,
	4584, 1321, 1321, 1321, 3035, 2876, 3981, 4583, 2164, 4522,
	4521, 1236, 4481, 4393, 685, 685, 4360, 3965, 1321, 4311,
	4308, 4306, 265, 4205, 4191, 4137, 4092, 3903, 3996, 3927,
	3978, 3064, 3932, 3852, 1321, 3845, 3567, 1238, 3969, 3966,
	1379, 1236, 3944, 3566, 3425, 3375, 3916, 3114, 3106, 3087,
	3086, 2160, 3085, 3985, 3084, 3908, 3013, 3906, 3917, 2986,
	2853, 3926, 3949, 3905, 2790, 1379, 2785, 2774, 1118, 1118,
	2773, 1994, 3931, 2762, 1118, 1118, 2000, 2505, 3997, 1118,
	1118, 3968, 1118, 2378, 3945, 2351, 2344, 1118, 2343, 2342,
	2341, 2340, 2259, 2233, 2229, 2228, 2227, 3954, 1118, 2226,
	2225, 1234, 2042, 3952, 3907, 2041, 2040, 2038, 1971, 1728,
	1727, 3982, 3983, 3984, 1118, 3976, 3967, 1666, 1551, 3970,
	1550, 4005, 1549, 3975, 1997, 1548, 1547, 1546, 1315, 1545,
	3988, 4021, 3980, 3986, 3987, 3995, 1540, 1536, 1534, 1533,
	4003, 3992, 1487, 3994, 1486, 3409, 3991, 1485, 1370, 1369,
	4022, 1368, 1235, 1367, 1366, 4034, 3353, 1334, 1333, 1283,
	4004, 1282, 1281, 1280, 1279, 1278, 1277, 1275, 1270, 4015,
	1269, 1268, 1267, 4030, 1266, 1240, 1198, 4010, 880, 8,
	3368, 2079, 1017, 1240, 1003, 4499, 4119, 1379, 1988, 1379,
	2374, 92, 1542, 842, 86, 2187, 1240, 2036, 3851, 2968,
	2202, 4697, 1994, 3525, 3524, 973, 4621, 1321, 1321, 1526,
	4526, 2723, 850, 4603, 3946, 3427, 2936, 1379, 2325, 1667,
	2327, 3336, 1238, 2736, 4573, 3341, 4044, 3212, 4472, 4282,
	1238, 2579, 1868, 3293, 1306, 2978, 88, 1102, 2981, 1148,
	2983, 4201, 1240, 1238, 1240, 4200, 4098, 4099, 4106, 4060,
	3837, 3054, 4198, 4197, 1985, 1997, 1987, 1066, 1382, 4643,
	2090, 1108, 2106, 2036, 2099, 2775, 1321, 2157, 4128, 2653,
	4140, 4125, 4078, 4125, 2036, 1125, 1379, 1122, 1321, 1989,
	1991, 1321, 1124, 1123, 3026, 1990, 1887, 3026, 1121, 1238,
	4067, 1238, 1379, 1984, 2167, 4074, 4072, 4073, 2249, 4077,
	3956, 3033, 3593, 1592, 1590, 975, 2094, 2499, 4082, 2563,
	3201, 1861, 4102, 4141, 4172, 4085, 4174, 4087, 4088, 1988,
	1082, 1236, 2165, 1104, 2560, 4081, 1259, 1093, 4090, 1321,
	1321, 1081, 3319, 3298, 4104, 3580, 3796, 1235, 2411, 860,
	4071, 4096, 3247, 2566, 1250, 1235, 2677, 2669, 4076, 1321,
	2665, 4195, 3385, 3023, 1742, 4296, 1839, 3034, 1235, 1364,
	1086, 1379, 4161, 3104, 2497, 2158, 1321, 1852, 3179, 3529,
	2421, 3587, 3339, 4192, 2768, 4628, 3714, 4166, 4175, 3112,
	2237, 1214, 1213, 1257, 4159, 1212, 4609, 1234, 1234, 4189,
	4606, 1240, 2177, 3989, 3542, 2082, 4223, 2166, 2814, 2509,
	4145, 1321, 1321, 1321, 1235, 3550, 1235, 4234, 1098, 1481,
	2368, 4156, 4183, 4154, 1379, 4251, 4157, 4190, 177, 3304,
	4125, 4188, 3612, 1553, 775, 4339, 1118, 1118, 1118, 4235,
	1110, 1824, 2957, 2956, 4491, 1350, 1348, 1347, 1238, 1315,
	1346, 4778, 4844, 4196, 1379, 3847, 4229, 3846, 4146, 1118,
	4211, 4238, 1118, 1118, 232, 3147, 4220, 1763, 1755, 229,
	4155, 231, 1118, 4158, 230, 2000, 4206, 3801, 3345, 4701,
	1118, 1118, 4236, 3869, 1252, 3534, 23, 22, 4243, 21,
	112, 42, 20, 151, 4222, 1379, 129, 1321, 148, 4260,
	4274, 147, 4258, 121, 146, 145, 144, 143, 150, 4257,
	142, 141, 136, 140, 4269, 139, 138, 1272, 137, 135,
	1379, 4259, 3647, 4261, 4262, 133, 134, 128, 1118, 265,
	132, 265, 265, 131, 1301, 265, 1311, 1118, 130, 127,
	126, 4219, 125, 4263, 1598, 1118, 1598, 1331, 124, 2000,
	123, 4279, 122, 120, 119, 118, 770, 4285, 1118, 117,
	116, 1118, 115, 1235, 114, 113, 763, 765, 61, 60,
	111, 110, 4291, 19, 4317, 1118, 40, 14, 65, 66,
	18, 265, 1379, 265, 265, 1301, 13, 265, 265, 1321,
	4342, 35, 1311, 91, 4302, 4303, 102, 1321, 1321, 101,
	4318, 1994, 36, 99, 98, 34, 265, 4307, 1506, 17,
	16, 15, 96, 95, 4325, 4316, 33, 1236, 1236, 31,
	11, 4305, 9, 37, 1948, 12, 5, 182, 4383, 1530,
	2249, 4359, 181, 184, 180, 183, 3544, 4351, 4352, 90,
	179, 4405, 1379, 178, 89, 1321, 29, 4371, 1555, 4362,
	1306, 1311, 10, 4396, 1997, 265, 265, 174, 1301, 4406,
	4361, 3942, 4368, 1240, 1240, 4357, 81, 4367, 176, 4369,
	175, 4370, 173, 172, 4413, 1994, 1234, 171, 82, 770,
	79, 265, 265, 1118, 1118, 4388, 4424, 4448, 4449, 4386,
	4385, 170, 4125, 4125, 4394, 4389, 85, 169, 80, 84,
	1118, 2000, 4404, 83, 887, 4427, 4433, 4387, 4425, 2416,
	1238, 1238, 27, 6, 4409, 64, 4452, 7, 1988, 4264,
	3635, 105, 4375, 106, 4373, 38, 77, 4421, 1997, 2503,
	76, 4426, 75, 26, 4432, 4446, 4238, 4431, 1118, 63,
	25, 1118, 168, 215, 214, 1850, 213, 212, 1240, 4349,
	211, 210, 209, 208, 4460, 267, 4461, 4462, 203, 202,
	207, 1240, 205, 3808, 3809, 4363, 204, 206, 201, 224,
	218, 4374, 4487, 217, 223, 222, 221, 4125, 3821, 3822,
	265, 3824, 220, 219, 216, 4510, 226, 200, 199, 198,
	4125, 196, 1988, 192, 191, 1238, 4464, 195, 4470, 2676,
	265, 197, 4483, 194, 193, 4486, 190, 225, 1238, 72,
	166, 2125, 167, 1118, 1118, 71, 165, 4504, 164, 4503,
	163, 4509, 162, 1118, 4530, 1235, 1235, 1994, 1240, 161,
	160, 1240, 159, 70, 24, 1321, 2, 1, 0, 0,
	0, 0, 4517, 0, 0, 1321, 1321, 0, 0, 0,
	0, 0, 4550, 0, 2671, 4552, 0, 4125, 0, 4519,
	4125, 1234, 1321, 0, 4524, 4564, 0, 0, 4518, 1234,
	0, 0, 4542, 0, 4537, 1238, 1118, 1118, 1238, 0,
	1997, 4545, 1234, 4538, 4539, 0, 1118, 4544, 0, 3440,
	3441, 0, 3442, 3443, 3444, 4549, 1236, 4560, 4557, 4561,
	0, 4558, 0, 0, 0, 4562, 4563, 0, 4409, 0,
	1235, 0, 4596, 0, 0, 0, 4568, 0, 0, 0,
	4600, 0, 4567, 1235, 1118, 1118, 0, 1118, 1234, 0,
	1234, 4578, 0, 0, 0, 0, 0, 3484, 3485, 4582,
	3486, 3487, 3488, 0, 1988, 1080, 0, 0, 0, 4577,
	0, 0, 0, 0, 0, 1315, 1315, 0, 4630, 4626,
	0, 0, 0, 0, 0, 4598, 4623, 0, 4599, 0,
	0, 0, 1315, 0, 0, 4648, 0, 0, 0, 0,
	4608, 4611, 0, 4652, 0, 1118, 1118, 1118, 4651, 0,
	1235, 4617, 0, 1235, 0, 4613, 0, 4612, 0, 4633,
	4616, 685, 0, 0, 0, 0, 0, 1377, 4639, 4646,
	0, 1476, 0, 4647, 0, 1118, 0, 4681, 0, 0,
	1482, 0, 265, 4686, 265, 0, 0, 0, 265, 0,
	4668, 4665, 4666, 0, 4667, 0, 0, 0, 0, 0,
	0, 1506, 1301, 265, 0, 265, 0, 4711, 0, 0,
	0, 265, 1506, 701, 4684, 4704, 4713, 0, 265, 1506,
	0, 0, 0, 0, 4715, 4725, 4727, 4700, 0, 0,
	0, 0, 1118, 2043, 0, 0, 4726, 1234, 0, 0,
	0, 1236, 4712, 0, 0, 265, 0, 0, 4732, 1236,
	4721, 4720, 265, 0, 0, 0, 4719, 0, 0, 0,
	4752, 0, 1236, 0, 0, 0, 4748, 0, 0, 4723,
	4724, 4738, 4739, 4742, 4696, 4729, 4699, 4744, 0, 0,
	4740, 1306, 0, 0, 0, 1240, 0, 1240, 4755, 4774,
	4753, 2125, 770, 4630, 4751, 0, 0, 4772, 0, 0,
	4784, 4771, 4761, 4785, 4530, 4766, 4783, 4770, 1236, 4773,
	1236, 4775, 0, 0, 4125, 4780, 4125, 4608, 0, 0,
	4611, 0, 0, 0, 4798, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 1238, 0, 0, 0, 0, 4797,
	0, 0, 4800, 0, 0, 0, 4809, 0, 2036, 4075,
	0, 0, 0, 0, 0, 4811, 4815, 0, 0, 0,
	4808, 1118, 1118, 0, 0, 4816, 0, 0, 4813, 0,
	1118, 0, 1118, 1118, 0, 0, 0, 4819, 0, 1598,
	0, 0, 4829, 0, 4835, 4825, 0, 0, 4834, 4840,
	4833, 4839, 0, 4838, 0, 4837, 4836, 4832, 0, 0,
	3035, 0, 0, 0, 0, 0, 4848, 4843, 0, 4852,
	4851, 4850, 0, 4129, 4853, 4847, 4854, 0, 4849, 0,
	0, 4856, 0, 4860, 4859, 0, 0, 0, 0, 4142,
	4143, 0, 4861, 1118, 4864, 0, 4866, 0, 0, 0,
	4867, 4863, 4869, 4870, 0, 4826, 4827, 1235, 4856, 1235,
	73, 0, 265, 0, 0, 0, 265, 1236, 0, 0,
	0, 4828, 0, 2676, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 3250, 3251, 0, 3268, 3269, 3270, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4026, 0, 0, 0, 1234,
	1234, 0, 0, 0, 0, 0, 4865, 0, 0, 265,
	0, 0, 0, 265, 0, 0, 0, 0, 3137, 265,
	0, 0, 0, 87, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 265, 2676, 2676, 0, 685, 3265, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 770, 4254, 881, 0, 887, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 93, 104, 1234, 0, 0, 0, 0, 0,
	265, 0, 1301, 265, 0, 0, 0, 1234, 0, 2671,
	2671, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 2324, 0, 0, 1963, 0, 265, 265, 0, 265,
	0, 265, 0, 265, 0, 265, 0, 0, 0, 0,
	0, 94, 3256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2360, 0, 0, 2361, 1234, 2362, 0, 1234, 0, 0,
	0, 3176, 3177, 0, 0, 0, 0, 265, 265, 265,
	265, 73, 0, 0, 1080, 1080, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 74, 0,
	0, 1463, 0, 0, 751, 1463, 0, 3272, 770, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 0, 1236,
	1236, 0, 0, 0, 2676, 2676, 2676, 2676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2110, 0, 3266,
	0, 3953, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2671,
	2671, 2671, 2671, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 2511, 0, 0, 1236, 0, 49, 0, 107, 4429,
	0, 0, 0, 93, 104, 0, 0, 1236, 0, 0,
	0, 1825, 4006, 0, 0, 0, 0, 0, 0, 0,
	3250, 3251, 0, 3268, 3269, 3270, 0, 0, 0, 185,
	100, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 3274, 3275, 3276, 3277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 685, 94, 0, 0, 0, 0, 882, 4480, 0,
	0, 4482, 149, 0, 1236, 0, 265, 1236, 0, 2215,
	2036, 2036, 0, 0, 0, 685, 0, 3267, 0, 0,
	1772, 1773, 265, 0, 685, 3265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 235, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	1775, 0, 265, 1311, 0, 0, 0, 2036, 0, 0,
	0, 0, 0, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 189, 0,
	0, 1234, 0, 1234, 0, 1774, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 2036, 0, 0, 227,
	0, 265, 1311, 0, 1791, 0, 701, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 2789, 0, 2036, 3256,
	2036, 0, 265, 0, 0, 265, 0, 0, 0, 265,
	0, 265, 0, 188, 0, 0, 1301, 97, 265, 265,
	0, 1311, 1311, 2805, 0, 4569, 0, 4570, 265, 0,
	2036, 0, 0, 0, 2036, 3262, 3263, 3264, 4025, 0,
	3273, 0, 3261, 3259, 3260, 3252, 3253, 3254, 3255, 3257,
	3258, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1799, 1800, 0, 3272, 0, 0, 0, 0, 1780,
	185, 100, 0, 2842, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 4618,
	0, 0, 4619, 0, 0, 0, 0, 265, 0, 0,
	233, 0, 0, 0, 0, 0, 3266, 0, 882, 0,
	265, 0, 0, 149, 0, 0, 0, 1802, 1804, 0,
	0, 0, 0, 0, 0, 4204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 4221, 0,
	0, 0, 0, 1789, 1790, 0, 0, 0, 235, 1073,
	0, 0, 0, 0, 0, 0, 2435, 0, 1463, 0,
	0, 4242, 0, 0, 0, 0, 4682, 0, 0, 0,
	265, 2976, 0, 0, 152, 0, 1795, 0, 1825, 0,
	0, 1236, 0, 1236, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 1506, 0, 234, 265, 0,
	265, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	227, 0, 0, 0, 2676, 2676, 0, 3018, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 2842, 0, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 3047, 887,
	0, 2842, 2842, 0, 1603, 0, 0, 0, 1825, 2577,
	0, 0, 0, 0, 3267, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2671,
	2671, 0, 0, 0, 1080, 0, 0, 265, 1301, 265,
	0, 1463, 0, 1506, 0, 1506, 1311, 265, 4779, 0,
	1301, 0, 1301, 0, 1301, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 2676, 2676, 2676, 2676, 2676, 2676,
	2676, 2676, 2676, 2676, 2676, 2676, 2676, 2676, 2676, 2676,
	2676, 2676, 2676, 2676, 1796, 2676, 0, 0, 4804, 0,
	0, 0, 0, 0, 4806, 0, 265, 265, 265, 265,
	1301, 3670, 3671, 1301, 2746, 265, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2671,
	2671, 2671, 2671, 2671, 2671, 2671, 2671, 2671, 2671, 2671,
	2671, 2671, 2671, 2671, 2671, 2671, 2671, 2671, 2671, 265,
	2671, 0, 1827, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 3262, 3263, 3264, 0, 0, 0, 0, 3261,
	3259, 3260, 3252, 3253, 3254, 3255, 3257, 3258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1463, 0, 0, 0, 0, 0, 0,
	0, 3734, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742,
	3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752,
	3753, 0, 3757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 1788, 0, 1785,
	1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 1772, 1773, 0,
	0, 2825, 0, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 1506, 78, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 0, 0, 4528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 4548, 0, 0, 0, 49, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 3673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1798, 1799, 1800,
	0, 0, 0, 0, 0, 265, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 94, 0, 0, 0, 685, 0, 0, 0,
	0, 685, 0, 0, 685, 1772, 1773, 685, 685, 0,
	1463, 0, 0, 685, 0, 0, 0, 1772, 1773, 0,
	0, 265, 0, 0, 1802, 1804, 0, 0, 1803, 0,
	0, 0, 0, 0, 1506, 1775, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 1775, 0, 4634,
	1789, 1790, 0, 0, 0, 4636, 0, 0, 1506, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 265, 0, 1828, 0, 265, 265, 0, 0, 0,
	1794, 0, 1774, 1795, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1463, 2842, 2842, 265, 0, 3400, 0,
	0, 0, 0, 0, 2842, 0, 0, 3411, 0, 73,
	0, 0, 0, 0, 0, 2842, 3411, 0, 2842, 3411,
	0, 0, 3411, 0, 0, 0, 74, 97, 0, 0,
	0, 0, 0, 3668, 0, 0, 0, 265, 265, 3400,
	0, 265, 78, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1799, 1800, 0, 0,
	0, 3400, 1463, 265, 1780, 0, 0, 0, 3474, 3474,
	0, 1301, 0, 0, 0, 0, 1780, 0, 0, 0,
	185, 100, 87, 0, 103, 0, 0, 2842, 1463, 2842,
	0, 3500, 2842, 3400, 0, 0, 2842, 3400, 1801, 0,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 1802, 1804, 0, 0, 0, 0, 882, 0,
	0, 1796, 881, 149, 1802, 1804, 0, 1301, 0, 0,
	0, 0, 0, 0, 265, 0, 107, 1506, 1789, 1790,
	0, 93, 104, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 3538, 0, 0, 3540, 2842, 0, 235, 265,
	0, 0, 0, 265, 0, 0, 1311, 0, 0, 0,
	0, 1795, 0, 0, 0, 1772, 1773, 0, 2036, 1827,
	0, 265, 0, 1795, 152, 0, 3018, 0, 0, 1301,
	2036, 265, 0, 2036, 2842, 0, 685, 0, 1803, 189,
	94, 0, 0, 2842, 0, 1775, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 1772, 1773, 265, 3018, 0, 0, 3018, 228,
	0, 1828, 0, 0, 0, 1463, 0, 0, 0, 0,
	1774, 0, 0, 1825, 0, 1803, 0, 0, 0, 0,
	1794, 0, 1775, 0, 1601, 1825, 0, 0, 0, 1791,
	3640, 2036, 0, 1792, 1788, 0, 1785, 1783, 1784, 1776,
	1777, 1778, 1779, 1781, 1782, 0, 0, 3646, 1828, 0,
	1506, 0, 0, 1301, 265, 0, 265, 1774, 0, 0,
	0, 3305, 1301, 0, 0, 0, 1801, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1463, 0, 0,
	0, 0, 0, 3667, 0, 0, 0, 0, 0, 1796,
	0, 0, 265, 2676, 3331, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 1797, 1798, 1799, 1800, 0, 3344,
	0, 0, 0, 0, 1780, 97, 0, 0, 0, 0,
	0, 3250, 3251, 0, 3268, 3269, 3270, 0, 0, 0,
	0, 0, 0, 3363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3679, 0, 0, 0, 1827, 2671, 2676,
	3712, 1797, 1798, 1799, 1800, 0, 0, 0, 0, 1827,
	0, 1780, 1802, 1804, 0, 0, 0, 0, 185, 100,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	783, 0, 0, 0, 0, 0, 0, 0, 1789, 1790,
	0, 0, 0, 0, 0, 1808, 3265, 0, 233, 0,
	0, 0, 0, 0, 2671, 794, 882, 0, 0, 1802,
	1804, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	4288, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778,
	1779, 1781, 1782, 0, 0, 0, 235, 265, 265, 1776,
	1777, 1778, 1779, 1781, 1782, 0, 0, 0, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 0, 1795, 685,
	685, 0, 152, 0, 0, 0, 4328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	3256, 1506, 1506, 1825, 0, 234, 0, 0, 788, 0,
	0, 0, 0, 0, 800, 0, 1506, 1506, 227, 1506,
	0, 0, 0, 0, 0, 0, 0, 228, 793, 0,
	0, 2676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3344,
	1825, 0, 188, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 3272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 792, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 2671, 3250, 3251, 0,
	3268, 3269, 3270, 746, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 3266, 0, 3678,
	0, 0, 0, 0, 0, 0, 0, 0, 790, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 3474,
	0, 0, 0, 0, 0, 3250, 3251, 1827, 3268, 3269,
	3270, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4469, 0,
	0, 0, 3265, 0, 0, 0, 1808, 3400, 0, 265,
	0, 0, 0, 701, 701, 1311, 0, 799, 0, 1825,
	0, 0, 0, 0, 1827, 0, 265, 1476, 0, 0,
	1377, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	3265, 265, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778,
	1779, 1781, 1782, 0, 0, 2842, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 3047, 3047, 0, 0, 0,
	785, 887, 887, 2842, 0, 3267, 3256, 3018, 3018, 0,
	0, 887, 2842, 0, 0, 0, 3691, 1772, 1773, 0,
	0, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782,
	0, 789, 0, 3707, 265, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 3256, 1463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 3272, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 795, 1774, 0, 0, 0, 0, 787, 1463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 1463, 1808, 0, 0, 0, 4045, 0,
	1808, 0, 0, 3266, 0, 0, 0, 0, 0, 3272,
	0, 0, 0, 0, 0, 0, 0, 1463, 0, 0,
	0, 0, 0, 0, 784, 0, 0, 0, 0, 0,
	0, 0, 0, 3262, 3263, 3264, 0, 0, 0, 0,
	3261, 3259, 3260, 3252, 3253, 3254, 3255, 3257, 3258, 0,
	0, 3266, 791, 0, 0, 3799, 1080, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 747, 1506, 0, 265,
	1080, 0, 0, 0, 0, 1825, 1780, 786, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 1808, 0, 0, 1311, 0, 797,
	798, 0, 0, 1808, 0, 0, 0, 0, 1808, 0,
	1311, 0, 0, 0, 0, 0, 0, 2842, 2842, 0,
	3474, 2842, 0, 1825, 1802, 1804, 0, 0, 4127, 0,
	4127, 1506, 0, 0, 0, 0, 0, 1772, 1773, 0,
	0, 2842, 0, 3411, 0, 0, 0, 1506, 1506, 265,
	3400, 3267, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 1463, 3400, 0, 265, 3400, 1775, 265, 0,
	3474, 0, 1808, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 1795, 0, 2842, 0, 2842, 265, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 3267,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 1773, 0, 1805, 1806, 1807, 1816, 1817, 1818,
	0, 0, 2842, 1463, 0, 0, 0, 4208, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 265, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 265, 0,
	1822, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 4127, 0, 0,
	1506, 0, 0, 0, 0, 0, 1794, 0, 0, 3262,
	3263, 3264, 0, 0, 0, 1791, 3261, 3259, 3260, 3252,
	3253, 3254, 3255, 3257, 3258, 0, 1780, 0, 0, 1808,
	1808, 1808, 1808, 1808, 1808, 1808, 1808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	0, 1796, 0, 0, 0, 0, 0, 3262, 3263, 3264,
	0, 0, 1808, 0, 3261, 3259, 3260, 3252, 3253, 3254,
	3255, 3257, 3258, 0, 1802, 1804, 0, 0, 0, 0,
	0, 1463, 0, 0, 1463, 0, 0, 0, 0, 0,
	1797, 1798, 1799, 1800, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 2675, 0, 1827,
	0, 0, 2842, 0, 3411, 0, 0, 4320, 0, 0,
	1808, 0, 0, 0, 0, 265, 1808, 0, 0, 1772,
	1773, 0, 4340, 1795, 4340, 0, 0, 0, 1813, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 1802, 1804,
	0, 0, 1803, 0, 0, 0, 770, 0, 0, 1775,
	1463, 0, 0, 0, 0, 0, 0, 3474, 0, 1301,
	0, 0, 0, 0, 1789, 1790, 0, 1463, 0, 0,
	0, 0, 0, 0, 3400, 1828, 265, 0, 0, 0,
	0, 0, 1811, 0, 1774, 0, 1785, 1783, 1784, 1776,
	1777, 1778, 1779, 1781, 1782, 1825, 1926, 1795, 0, 4320,
	0, 0, 0, 0, 0, 0, 0, 2842, 0, 0,
	4080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 4094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4127,
	4127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 265, 1825,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 3712, 0, 0, 0, 0, 0, 0, 0, 1463,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 1506,
	3474, 4485, 0, 0, 0, 0, 0, 0, 4320, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 4127, 0, 1802, 1804, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 4127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 0, 0, 0, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 4208, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4127, 0, 265, 4127, 1784, 1776,
	1777, 1778, 1779, 1781, 1782, 0, 0, 3411, 0, 0,
	0, 0, 0, 0, 0, 1377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4280, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 1786, 1787, 1793, 1815, 1792, 1788, 4592,
	1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782, 0,
	0, 0, 4340, 0, 0, 265, 4280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 2842,
	0, 2435, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2435, 1506, 1463, 0, 0, 0, 0,
	1808, 1827, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	1463, 0, 0, 0, 265, 0, 0, 1808, 1808, 1808,
	1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
	1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
	1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
	1808, 1808, 1808, 0, 0, 0, 4320, 0, 1808, 0,
	1808, 1808, 1808, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 2675, 2675, 0, 0, 0, 0, 0, 1783,
	1784, 1776, 1777, 1778, 1779, 1781, 1782, 1808, 0, 0,
	0, 0, 0, 0, 2842, 0, 0, 0, 0, 0,
	0, 4127, 0, 4127, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1463, 0, 1463, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1463, 0, 0, 0, 0, 0, 1808, 0,
	0, 1808, 0, 0, 1808, 0, 0, 1808, 0, 0,
	0, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 0, 0,
	0, 0, 3047, 0, 0, 0, 0, 0, 0, 0,
	0, 2842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3047, 0, 0,
	0, 1463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 0,
	3271, 0, 2675, 2675, 2675, 2675, 0, 0, 0, 1808,
	0, 1808, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 1773, 1463, 1805, 1806, 1807,
	1816, 1817, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 1803, 1326, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1065, 1065, 0, 0, 1463,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 1514,
	0, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1463, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1799, 1800, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 1609, 0,
	1614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 1628, 0, 0, 0, 1080, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 1823, 0, 0, 1463, 0, 0,
	0, 1802, 1804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	1820, 0, 0, 0, 0, 0, 0, 1789, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1692, 1808,
	1808, 1698, 1808, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1463, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	46, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 74, 0, 0, 153, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 67, 0, 0, 0, 0, 0, 0, 48,
	0, 155, 1825, 0, 0, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 0, 0, 0, 0, 0, 0, 47,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 0, 0, 1849, 1150,
	0, 0, 0, 0, 1862, 0, 0, 50, 68, 0,
	0, 0, 0, 0, 0, 1801, 51, 0, 0, 0,
	0, 57, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 49, 0, 107, 0, 0, 1796, 0,
	93, 104, 0, 0, 0, 0, 0, 0, 0, 1808,
	1808, 0, 2675, 2675, 0, 0, 1808, 0, 1080, 1080,
	0, 0, 0, 0, 0, 1814, 3271, 3271, 0, 0,
	1808, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 1827, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 1920,
	1920, 1920, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2675, 2675, 2675, 2675, 2675, 2675, 2675, 2675,
	2675, 2675, 2675, 2675, 2675, 2675, 2675, 2675, 2675, 2675,
	2675, 2675, 0, 2675, 3271, 3271, 3271, 3271, 1812, 0,
	1080, 0, 0, 0, 0, 0, 1786, 1787, 1793, 1815,
	1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778, 1779,
	1781, 1782, 0, 0, 0, 0, 4053, 0, 0, 1808,
	4052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1065, 0, 0, 0, 0,
	0, 0, 53, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 58, 185, 100, 0,
	0, 103, 0, 0, 0, 54, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 55, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 1773, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 152, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 227, 1774, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 3, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 1808, 0, 0, 1808,
	3271, 3271, 1808, 0, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1808, 0, 2348, 0,
	1802, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	1808, 1808, 1808, 1808, 0, 0, 1789, 1790, 0, 1808,
	0, 1808, 0, 2372, 3271, 3271, 3271, 3271, 3271, 3271,
	3271, 3271, 3271, 3271, 3271, 3271, 3271, 3271, 3271, 3271,
	3271, 3271, 3271, 3271, 0, 0, 0, 3271, 0, 1795,
	1808, 1808, 0, 0, 0, 0, 0, 2410, 0, 2414,
	0, 0, 1808, 0, 0, 0, 2428, 0, 0, 0,
	0, 1808, 0, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 0,
	2478, 0, 2480, 2481, 2482, 2483, 0, 0, 0, 1808,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 0, 2507, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 2558, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2588, 2591, 2594, 2597, 1801, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 0, 0, 0, 1241, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 1241, 1796, 0, 0,
	0, 0, 0, 2667, 0, 2679, 2681, 2686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 1808, 0, 0, 0, 1808, 1808,
	0, 0, 1808, 1808, 0, 0, 0, 1808, 0, 0,
	0, 1808, 0, 0, 0, 0, 1808, 0, 0, 1792,
	1788, 0, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781,
	1782, 2675, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1773, 0, 1805, 1806,
	1807, 1816, 1817, 1818, 2646, 2647, 2648, 2649, 2642, 2643,
	2644, 2645, 0, 0, 0, 0, 0, 1809, 1803, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 2675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 0, 2622, 2623, 2624, 2625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2634,
	2635, 2636, 2637, 2630, 2631, 2632, 2633, 2638, 2639, 2640,
	2641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2979, 2980, 0, 2982, 0,
	0, 0, 0, 0, 1797, 1798, 1799, 1800, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2618, 2619, 2620, 2621, 2626, 2627,
	2628, 2629, 0, 0, 0, 1808, 1808, 1808, 0, 0,
	0, 0, 1813, 0, 0, 1823, 1808, 1808, 3271, 2675,
	0, 0, 1802, 1804, 0, 1808, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 1820, 0, 0, 0, 0, 0, 0, 1789, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 3271, 0,
	0, 0, 0, 0, 0, 1241, 1811, 1241, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 1795, 1241, 0, 0, 1808, 0, 3105, 0, 0,
	0, 0, 0, 0, 1808, 0, 0, 0, 0, 0,
	2001, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 1829, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3271,
	0, 0, 0, 0, 0, 1241, 1801, 0, 0, 0,
	3159, 3160, 0, 0, 0, 0, 3166, 0, 0, 0,
	1808, 0, 0, 1808, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 3180, 3181, 0, 0, 0,
	0, 2558, 0, 0, 0, 0, 0, 1772, 1773, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 1808, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 3190, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3204, 1828, 0, 0, 0, 0, 0, 1114,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 3216,
	0, 0, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 0, 1241, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 264, 264, 264, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1793,
	1815, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778,
	1779, 1781, 1782, 0, 813, 3158, 0, 3225, 0, 0,
	0, 3226, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1798, 1799, 1800,
	813, 0, 0, 0, 0, 1808, 1780, 0, 0, 2686,
	2686, 2686, 0, 0, 1772, 1773, 0, 1805, 1806, 1807,
	1816, 1817, 1818, 0, 1920, 0, 0, 0, 0, 0,
	0, 1241, 3309, 1241, 0, 1241, 1809, 1803, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 1241, 1241, 1822, 1802, 1804, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 1241, 0, 1241, 1241, 1241, 1774,
	1789, 1790, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1237, 0, 1065, 0, 0,
	1808, 0, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1799, 1800, 0, 0, 0,
	0, 0, 0, 1780, 3430, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 2001, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 1802, 1804, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	1820, 0, 0, 0, 0, 0, 0, 1789, 1790, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 1773, 1811, 1805, 1806, 1807, 1816,
	1817, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 1809, 1803, 1241, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 1821, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 1810, 0, 0, 0, 0, 0, 1791, 0, 1241,
	0, 0, 1825, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 1788, 0, 1785, 1783, 1784, 1776,
	1777, 1778, 1779, 1781, 1782, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1799, 1800, 0, 0, 1796, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2428, 0,
	1813, 0, 0, 1823, 3665, 3666, 0, 0, 3669, 0,
	1802, 1804, 3672, 0, 0, 0, 1827, 1241, 1241, 0,
	0, 3676, 0, 0, 0, 0, 0, 1819, 0, 1820,
	3683, 0, 0, 0, 0, 3309, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3696, 0, 0, 0, 1811, 0, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	3719, 3720, 0, 3721, 3722, 3723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 3729, 0, 2001, 0, 3731, 1786, 1787, 1793, 1815,
	1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778, 1779,
	1781, 1782, 1821, 0, 0, 0, 2554, 0, 0, 0,
	2555, 0, 0, 0, 731, 0, 0, 0, 3760, 3761,
	1810, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 714, 0, 3772, 1241, 0, 715,
	0, 0, 264, 0, 264, 264, 0, 0, 264, 0,
	0, 3781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 716, 0,
	0, 0, 0, 0, 1801, 1241, 0, 0, 0, 717,
	0, 0, 0, 0, 264, 0, 264, 264, 0, 0,
	264, 264, 0, 0, 0, 0, 0, 1796, 0, 0,
	718, 0, 0, 0, 0, 0, 1241, 0, 0, 813,
	0, 0, 0, 0, 0, 0, 731, 0, 1241, 3829,
	1241, 0, 737, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 714, 0, 0, 3840,
	0, 715, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 264, 264,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 3868, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 264, 264, 0, 721, 0, 0,
	722, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 736, 0, 737, 1786, 1787, 1793, 1815, 1792,
	1788, 0, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781,
	1782, 0, 0, 0, 719, 0, 0, 1772, 1773, 4051,
	1805, 1806, 1807, 1816, 1817, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 0, 1809,
	1803, 0, 0, 264, 0, 0, 0, 1775, 0, 0,
	0, 733, 0, 0, 0, 0, 1822, 0, 0, 721,
	0, 0, 722, 264, 0, 0, 0, 0, 1920, 0,
	0, 0, 0, 1828, 0, 0, 0, 3977, 0, 746,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 743,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 725, 0, 4023, 4024, 0, 0, 0, 0,
	4028, 4029, 0, 733, 0, 4032, 4033, 0, 0, 0,
	0, 0, 0, 4037, 0, 0, 1797, 1798, 1799, 1800,
	0, 0, 0, 0, 4041, 0, 1780, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	4046, 0, 0, 741, 742, 739, 0, 0, 0, 0,
	0, 734, 0, 0, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 1823, 0, 0,
	0, 0, 0, 724, 1802, 1804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 1820, 0, 0, 728, 0, 735, 0,
	1789, 1790, 744, 0, 725, 0, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 730, 0, 0, 0, 1942, 738, 1237, 1241, 1241,
	0, 264, 0, 1795, 0, 0, 0, 0, 0, 0,
	747, 0, 745, 0, 1241, 0, 264, 1942, 264, 0,
	726, 732, 0, 0, 813, 741, 742, 739, 0, 0,
	0, 813, 1241, 734, 0, 0, 727, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 1821, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 1810, 264, 0, 2001, 0, 0,
	0, 1241, 0, 0, 0, 1825, 0, 0, 728, 0,
	735, 0, 0, 0, 0, 0, 0, 1241, 1241, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 747, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 732, 1241, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 4275, 4276, 4277, 0, 0, 1241, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2428, 0, 0, 4286, 4287,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 264, 4295, 4298, 0, 813,
	0, 1241, 0, 1241, 0, 0, 0, 1241, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 1786,
	1787, 1793, 1815, 1792, 1788, 1241, 1785, 1783, 1784, 1776,
	1777, 1778, 1779, 1781, 1782, 0, 0, 1241, 0, 0,
	0, 0, 0, 3681, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 4341, 1241, 0, 264, 0, 0, 0,
	0, 4348, 264, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 4355, 0, 0, 1065, 0, 1241,
	1241, 0, 0, 0, 264, 0, 264, 0, 0, 0,
	0, 4364, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 1772, 1773, 0, 0, 0, 0, 813,
	264, 0, 264, 0, 264, 0, 264, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	1772, 1773, 0, 1805, 1806, 1807, 1816, 1817, 1818, 1828,
	264, 264, 264, 264, 1241, 0, 0, 0, 1774, 0,
	0, 0, 1809, 1803, 0, 0, 0, 0, 1794, 0,
	1775, 1241, 0, 0, 0, 0, 0, 1791, 0, 1822,
	1230, 2001, 2001, 0, 4490, 0, 0, 4493, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	2001, 2001, 0, 0, 0, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 260, 260, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1799, 1800, 0, 0, 0, 1065,
	1065, 0, 1780, 0, 0, 0, 0, 0, 0, 4546,
	1241, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1799, 1800, 1241, 0, 0, 0, 0, 0, 1780,
	1802, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2428, 0, 0, 0, 0, 0, 0,
	0, 0, 4298, 0, 0, 0, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 1802, 1804, 1237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 1065, 0, 0, 1819, 1237, 1820, 0, 0, 0,
	0, 0, 0, 1789, 1790, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4664, 4664, 4664, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 1821,
	0, 4685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 1241, 1810, 264, 0,
	0, 1241, 264, 0, 264, 0, 0, 0, 1825, 0,
	0, 264, 264, 0, 1801, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 4664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 1241, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	1241, 1241, 1241, 0, 1796, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 1827, 0, 1241, 266, 266,
	266, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1241, 0, 0, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 813, 0, 0, 0, 4664, 4820, 0,
	0, 0, 0, 0, 0, 0, 4824, 0, 0, 1792,
	1788, 0, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781,
	1782, 264, 0, 813, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 1786, 1787, 1793, 1815, 1792, 1788, 0, 1785,
	1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782, 0, 0,
	0, 0, 0, 0, 0, 0, 3228, 0, 0, 0,
	0, 264, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 1241, 0, 1241, 0,
	264, 0, 264, 0, 0, 1241, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 1241, 1241, 0, 0,
	0, 0, 0, 0, 1772, 1773, 1241, 1805, 1806, 1807,
	1816, 1817, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 1803, 0, 0,
	0, 1241, 0, 1241, 1775, 0, 0, 0, 0, 264,
	264, 264, 264, 1822, 0, 0, 0, 0, 264, 0,
	0, 264, 0, 0, 0, 1241, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 1241, 0, 1241, 0, 1774,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 1241, 264, 0, 0, 0, 0, 0, 1791, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 1287, 0, 1287, 1287, 0, 0, 0,
	1241, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1799, 1800, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 1241, 1241, 0, 0, 1374, 0, 0, 0, 0,
	0, 1480, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 1802, 1804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 1819, 0,
	1820, 0, 0, 0, 0, 0, 0, 1789, 1790, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 1241, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 1608, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 831, 1821, 0, 0, 0, 0, 2001, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 833, 0, 0, 0, 0, 834, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 1237, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 1237, 0, 1241, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 835, 0, 852, 0,
	0, 0, 0, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1942, 1801, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 0, 837, 0,
	0, 1241, 0, 0, 1241, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	861, 0, 1241, 1241, 0, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 264, 1814, 0, 0, 264, 264,
	859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2001, 0, 0, 832, 0, 0, 1827, 0, 0, 264,
	0, 0, 0, 0, 0, 266, 0, 266, 266, 0,
	0, 266, 0, 1324, 0, 839, 0, 0, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	863, 0, 0, 0, 0, 746, 0, 1241, 0, 0,
	264, 264, 0, 0, 264, 0, 0, 0, 0, 0,
	1241, 1942, 0, 0, 0, 0, 0, 266, 1324, 266,
	266, 0, 1324, 266, 266, 0, 264, 0, 1812, 1324,
	0, 0, 0, 0, 0, 0, 1786, 1787, 1793, 1815,
	1792, 1788, 266, 1785, 1783, 1784, 1776, 1777, 1778, 1779,
	1781, 1782, 0, 0, 0, 0, 0, 0, 0, 0,
	3227, 0, 0, 1324, 0, 0, 0, 0, 0, 862,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 857,
	1241, 0, 0, 0, 1241, 0, 0, 0, 0, 1324,
	0, 266, 266, 0, 1241, 1241, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 1241, 1958, 0, 813, 0, 1324, 266, 266, 0,
	0, 0, 264, 0, 0, 0, 264, 1967, 0, 1480,
	1324, 0, 0, 0, 0, 0, 0, 0, 841, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 843,
	0, 0, 0, 0, 1237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1287,
	0, 0, 0, 0, 0, 0, 1480, 0, 0, 0,
	844, 0, 0, 0, 0, 1324, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 830, 0, 854, 0, 0, 266, 0, 0, 0,
	0, 0, 845, 0, 0, 0, 0, 264, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 846, 264, 0, 0, 847, 866,
	0, 865, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 858, 0, 0, 0, 0, 0,
	867, 0, 864, 0, 0, 0, 0, 0, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2235, 0, 0, 0, 2242, 0, 0,
	1237, 1237, 0, 0, 0, 0, 0, 0, 0, 2255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 2267, 0, 2267, 0, 0,
	0, 0, 0, 2274, 0, 1324, 0, 0, 0, 266,
	266, 266, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2242, 0, 0, 2299, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2332, 0, 2334, 0, 2336, 0, 2338, 0, 2339,
	0, 0, 0, 1324, 0, 0, 0, 0, 0, 0,
	1103, 109, 0, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	0, 2365, 2366, 2367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1237,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	1324, 1324, 266, 0, 0, 0, 0, 0, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 0, 1040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 266,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 1324, 0, 1324, 0,
	2743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1324, 266, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 1324,
	1324, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 266, 1237, 266, 0, 266, 0, 266,
	0, 266, 1237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1942, 2791, 0, 0, 1287,
	0, 0, 0, 1287, 0, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2255, 266, 266, 266, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1942, 0, 1942, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 264, 0,
	0, 264, 0, 0, 0, 1772, 1773, 0, 1805, 1806,
	1807, 1816, 1817, 1818, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 1809, 1803, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 805, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 1480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 805, 0, 0,
	1774, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 264, 0, 0, 0, 0, 0, 0, 0, 1791,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1942, 0, 2242, 0, 0, 0, 0, 0, 0, 0,
	0, 2255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 0, 1797, 1798, 1799, 1800, 0, 0,
	0, 0, 3078, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 1324, 0, 0, 0, 0,
	0, 3089, 0, 3092, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 1802, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 1819,
	0, 1820, 0, 0, 0, 0, 0, 266, 1789, 1790,
	3120, 1480, 3122, 1480, 0, 0, 0, 0, 0, 3128,
	0, 0, 0, 0, 0, 0, 1811, 0, 266, 0,
	0, 266, 0, 0, 0, 266, 0, 266, 0, 0,
	0, 1795, 0, 0, 266, 266, 0, 0, 0, 0,
	1324, 1324, 0, 1287, 266, 0, 0, 0, 0, 264,
	0, 3156, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 1942, 1942, 0, 0, 266, 0, 0, 0,
	0, 0, 109, 0, 109, 0, 109, 0, 0, 0,
	264, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 1324, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 266, 1060, 109, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 109, 1814, 1942, 0, 0,
	0, 0, 0, 0, 266, 109, 266, 109, 1324, 0,
	1942, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 0, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 1324, 0,
	109, 0, 0, 0, 0, 0, 0, 1942, 0, 264,
	1942, 0, 0, 266, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1793,
	1815, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778,
	1779, 1781, 1782, 0, 0, 0, 0, 0, 0, 0,
	0, 3224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 266, 266, 266, 0, 0, 0, 0,
	0, 266, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 1040, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 266, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 1287, 1854, 0, 0, 1480,
	1480, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3398, 0, 0, 0, 0, 0, 1119, 1322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 946, 0,
	994, 3449, 3451, 0, 0, 2255, 0, 264, 0, 0,
	0, 0, 1380, 0, 0, 0, 1380, 0, 0, 0,
	0, 0, 0, 1322, 954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 952, 951, 0, 0, 1940, 0, 1943, 0,
	109, 0, 0, 0, 0, 0, 0, 1322, 0, 0,
	0, 0, 0, 0, 970, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 956, 0, 0, 0, 0,
	1002, 0, 0, 1322, 0, 0, 0, 0, 0, 965,
	966, 0, 0, 0, 1942, 0, 1942, 0, 983, 0,
	0, 0, 0, 1322, 0, 0, 0, 0, 0, 0,
	1322, 0, 0, 0, 0, 0, 995, 958, 0, 0,
	0, 0, 0, 3551, 1322, 0, 0, 3555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 0, 0, 992, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1322,
	0, 0, 1324, 993, 0, 0, 0, 0, 3608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 961,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	0, 0, 0, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 962, 963, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 971, 969, 0, 3650, 0,
	1480, 0, 0, 964, 1324, 0, 0, 980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1324, 1324, 0, 0, 0, 999, 991, 266, 0, 0,
	0, 266, 266, 0, 0, 0, 3663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 996, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 266, 0, 1324, 266, 0, 957,
	0, 0, 1001, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 266,
	1324, 0, 0, 0, 0, 955, 0, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 990, 0, 0, 0, 0, 0, 0, 0,
	1324, 0, 0, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 1060, 0, 1060, 985, 0, 0, 0, 0,
	0, 0, 0, 1000, 981, 0, 0, 974, 972, 0,
	977, 1324, 0, 0, 0, 0, 978, 0, 0, 948,
	266, 997, 0, 0, 1324, 0, 1324, 0, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 266, 0, 1380,
	0, 0, 0, 949, 0, 266, 0, 0, 1324, 266,
	0, 805, 0, 0, 0, 989, 0, 979, 805, 0,
	1324, 1322, 0, 976, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 998, 0, 0, 0, 0, 0,
	0, 109, 982, 0, 0, 0, 0, 0, 0, 0,
	0, 960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1324, 1324, 0, 984, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1324, 0, 1322, 0, 0,
	986, 0, 0, 0, 0, 0, 0, 0, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1040, 0, 0, 1040, 1040,
	0, 0, 1380, 0, 0, 0, 0, 0, 1324, 0,
	266, 1324, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 2496, 0, 0, 0, 0, 0,
	0, 0, 0, 2255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1060, 0, 0, 0, 0, 0,
	2255, 0, 0, 0, 1848, 0, 0, 1324, 1848, 0,
	3941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 2255, 0, 0, 0, 0,
	3959, 0, 0, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 1380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1224, 0, 1381, 0, 0, 0, 1381, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 1943, 0, 4008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 1324, 0, 1322, 0,
	1322, 0, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 1322, 1322,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 1322,
	0, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 1322, 0, 1322, 1322, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4144, 0, 0, 0, 0, 0, 1324,
	0, 1380, 0, 0, 1324, 266, 0, 0, 0, 2255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 109, 0,
	0, 109, 266, 109, 0, 0, 0, 266, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2255, 1324, 1324, 1324, 0, 109, 0, 0,
	109, 0, 4230, 0, 1380, 0, 109, 0, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 0,
	266, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1380, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	1324, 0, 0, 0, 1322, 1322, 0, 1323, 2496, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 0,
	2255, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1381, 0, 0, 0, 1380, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	1324, 266, 0, 1324, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4459, 1480, 0, 0, 0, 0, 0, 1380, 0,
	0, 1324, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 0, 0, 0, 0, 0,
	0, 1324, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 1324, 266, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 1323, 0, 0, 0, 0,
	805, 0, 1322, 0, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 1324, 1324, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 1322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1322, 0, 1322, 0, 1224,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 0,
	0, 0, 1322, 0, 0, 1224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 1323, 1324,
	1323, 0, 1323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 1323,
	0, 0, 1324, 0, 0, 0, 0, 0, 0, 1323,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1323, 0, 1323, 1323, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 0, 0, 0, 0,
	0, 1324, 266, 0, 0, 0, 0, 0, 0, 1324,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 109, 4641, 109, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 0, 1324, 0, 0,
	1772, 1773, 0, 1805, 1806, 1807, 1816, 1817, 1818, 0,
	109, 109, 0, 109, 109, 109, 0, 0, 0, 0,
	0, 1381, 1809, 1803, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 266, 266, 0, 0, 0, 4705, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1224, 0, 0, 1060, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 109, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1799, 1800, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 1381, 0, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 1324, 0,
	0, 0, 0, 0, 0, 0, 1380, 1813, 0, 1381,
	1823, 0, 0, 0, 1324, 0, 0, 1802, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 1820, 0, 0, 1380,
	0, 0, 0, 1789, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1380, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 1795, 0, 1380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 1323, 266, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 1322, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 1381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 1801, 1322, 0, 1322, 0, 0, 0, 0, 0,
	0, 1224, 1224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1380, 1796, 0, 0, 0, 1381, 0,
	0, 0, 0, 0, 1322, 0, 0, 0, 1322, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1322, 0,
	1322, 0, 1827, 0, 1380, 0, 0, 0, 0, 0,
	0, 805, 1323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 0, 1812, 0, 1322, 1322, 0, 0,
	0, 0, 1786, 1787, 1793, 1815, 1792, 1788, 0, 1785,
	1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782, 0, 1322,
	0, 0, 0, 0, 0, 0, 3223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1380, 0, 0, 1380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 1773, 0, 1805, 1806, 1807,
	1816, 1817, 1818, 0, 0, 0, 0, 0, 0, 0,
	1224, 0, 0, 0, 0, 0, 1809, 1803, 0, 0,
	0, 1380, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 1380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 109, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1799, 1800, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	1380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 1224, 0, 0, 0, 0,
	0, 1813, 0, 1224, 1823, 0, 0, 0, 0, 0,
	0, 1802, 1804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	1820, 0, 0, 0, 0, 0, 0, 1789, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1381, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 1381, 0,
	0, 0, 1825, 1322, 0, 0, 0, 0, 1322, 0,
	0, 0, 0, 0, 1323, 1323, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 1801, 0, 0, 0, 0,
	0, 1323, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 1322, 1322, 1322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 0, 0, 0, 1322, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1322, 0, 1323, 0, 1323, 0, 1380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 1381, 0, 0, 0, 0, 0, 0,
	0, 1380, 0, 0, 1323, 0, 0, 0, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 0,
	1323, 0, 0, 0, 1381, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 1786, 1787, 1793, 1815,
	1792, 1788, 1323, 1785, 1783, 1784, 1776, 1777, 1778, 1779,
	1781, 1782, 0, 0, 1323, 0, 0, 0, 0, 0,
	3222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1380, 0, 1380, 1323, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1322, 1322, 0, 0, 0, 0, 1323,
	0, 0, 0, 1380, 0, 0, 0, 1772, 1773, 0,
	1805, 1806, 1807, 1816, 1817, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2496, 0, 0, 0, 1809,
	1803, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1381, 0, 0, 1381, 1822, 0, 0, 0,
	0, 0, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1380, 1828, 1322, 0, 0, 1322, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 1380, 0,
	0, 0, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1322, 1322, 0, 0, 0,
	0, 1381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1322, 0, 0, 1381, 0,
	0, 0, 0, 0, 0, 0, 0, 1380, 0, 0,
	0, 0, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1798, 1799, 1800,
	0, 109, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1322, 1322, 1322,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	1380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 1802, 1804, 0, 0, 0, 0,
	1380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 1820, 0, 0, 0, 0, 0, 0,
	1789, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	1381, 1380, 0, 1322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 1821, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 1380, 0,
	0, 0, 0, 0, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 1322, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	1773, 0, 1805, 1806, 1807, 1816, 1817, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 1809, 1803, 0, 0, 0, 0, 0, 1380, 1775,
	0, 1322, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 1828, 0, 0, 1323, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 1323, 1323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 1797, 1798,
	1799, 1800, 0, 0, 0, 0, 0, 0, 1780, 0,
	1323, 1812, 0, 0, 0, 0, 1381, 0, 0, 1786,
	1787, 1793, 1815, 1792, 1788, 0, 1785, 1783, 1784, 1776,
	1777, 1778, 1779, 1781, 1782, 0, 0, 0, 0, 0,
	0, 1381, 0, 2555, 0, 0, 1813, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 1802, 1804, 0, 0,
	0, 1322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1322, 1322, 1819, 0, 1820, 0, 0, 0, 0,
	0, 0, 1789, 1790, 0, 0, 0, 0, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 1772, 1773, 0, 1805, 1806,
	1807, 1816, 1817, 1818, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 1803, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 0,
	0, 1828, 0, 1381, 0, 1381, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	1794, 0, 0, 1323, 1323, 0, 0, 1825, 0, 1791,
	0, 0, 0, 1381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 1323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1381, 0, 1323, 0, 0, 1323, 0, 0,
	0, 0, 0, 1796, 1797, 1798, 1799, 1800, 1381, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 1323, 0, 0, 0,
	0, 0, 1813, 0, 0, 1823, 0, 0, 0, 0,
	0, 1827, 1802, 1804, 0, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1381, 0, 1819,
	0, 1820, 1323, 0, 0, 0, 0, 0, 1789, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 1323, 1323,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	1381, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 1786, 1787, 1793, 1815, 1792, 1788, 0, 1785, 1783,
	1784, 1776, 1777, 1778, 1779, 1781, 1782, 0, 0, 0,
	1381, 4593, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 1381, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1381, 0,
	0, 0, 0, 0, 0, 1323, 1814, 0, 0, 0,
	0, 0, 0, 1323, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1381, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1793,
	1815, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778,
	1779, 1781, 1782, 0, 0, 0, 0, 4589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1378, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1323, 1323, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 1383, 281, 282, 1384, 1385, 1386, 1323, 1387,
	627, 1388, 1389, 1390, 1391, 283, 284, 1181, 285, 286,
	287, 288, 289, 290, 628, 629, 0, 291, 630, 292,
	631, 1392, 632, 293, 294, 295, 296, 297, 298, 1393,
	1394, 0, 299, 633, 634, 635, 1395, 300, 301, 636,
	1396, 1325, 1397, 302, 303, 304, 305, 306, 307, 308,
	0, 1398, 310, 311, 312, 309, 313, 1399, 314, 0,
	315, 316, 317, 318, 319, 320, 1400, 321, 322, 323,
	1182, 324, 325, 326, 1401, 1402, 1404, 1403, 1405, 1406,
	1407, 327, 328, 329, 330, 331, 0, 332, 637, 638,
	1408, 336, 333, 334, 1409, 337, 335, 338, 1410, 339,
	340, 341, 1411, 1412, 342, 343, 344, 1413, 345, 346,
	1414, 347, 348, 349, 1415, 350, 351, 639, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 640, 641,
	363, 1416, 271, 1417, 0, 0, 0, 0, 364, 365,
	366, 642, 0, 0, 0, 367, 1418, 368, 369, 1419,
	1420, 1183, 370, 371, 372, 643, 644, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1421, 382, 645, 1422,
	646, 383, 1423, 384, 385, 386, 387, 388, 647, 648,
	649, 467, 1185, 389, 390, 1424, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 1425,
	1184, 399, 650, 651, 1426, 652, 1427, 401, 402, 1186,
	653, 1187, 403, 404, 405, 1188, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 1428, 413, 415, 414,
	1429, 416, 654, 1189, 417, 418, 1190, 1430, 419, 0,
	0, 0, 420, 421, 424, 1431, 1432, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1191, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 1192,
	463, 453, 1433, 273, 1193, 464, 465, 1434, 655, 466,
	656, 468, 469, 1435, 0, 470, 0, 1436, 1437, 472,
	473, 474, 1438, 1439, 475, 476, 657, 1194, 477, 1195,
	658, 478, 479, 471, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 1440, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 661, 497, 662, 498, 499, 1441,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	663, 509, 511, 510, 512, 1442, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 1443, 528, 529,
	530, 1196, 531, 532, 533, 534, 535, 664, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 1444, 553, 554, 552, 555, 556, 557, 1445,
	558, 559, 541, 542, 560, 561, 1197, 562, 563, 564,
	565, 566, 567, 568, 665, 0, 569, 1446, 570, 571,
	572, 574, 543, 575, 580, 581, 666, 576, 577, 578,
	579, 667, 583, 584, 1447, 585, 586, 0, 582, 573,
	1448, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	1449, 595, 668, 669, 670, 671, 1450, 604, 1451, 596,
	597, 598, 672, 599, 673, 1452, 600, 601, 602, 603,
	0, 605, 606, 1453, 1454, 607, 608, 609, 611, 612,
	610, 613, 1455, 614, 1456, 0, 615, 616, 617, 674,
	675, 676, 1457, 619, 618, 620, 677, 1458, 621, 1459,
	1460, 1461, 1462, 622, 623, 678, 624, 625, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1378, 0, 0, 0,
	0, 0, 0, 0, 2721, 0, 0, 0, 0, 0,
	0, 0, 2722, 274, 276, 275, 277, 278, 279, 280,
	1383, 281, 282, 1384, 1385, 1386, 0, 1387, 627, 1388,
	1389, 1390, 1391, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 1392,
	632, 293, 294, 295, 296, 297, 298, 1393, 1394, 0,
	299, 633, 634, 635, 1395, 300, 301, 636, 1396, 1325,
	1397, 302, 303, 304, 305, 306, 307, 308, 0, 1398,
	310, 311, 312, 309, 313, 1399, 314, 0, 315, 316,
	317, 318, 319, 320, 1400, 321, 322, 323, 1182, 324,
	325, 326, 1401, 1402, 1404, 1403, 1405, 1406, 1407, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 1408, 336,
	333, 334, 1409, 337, 335, 338, 1410, 339, 340, 341,
	1411, 1412, 342, 343, 344, 1413, 345, 346, 1414, 347,
	348, 349, 1415, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 1416,
	271, 1417, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 1418, 368, 369, 1419, 1420, 1183,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1421, 382, 645, 1422, 646, 383,
	1423, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	1185, 389, 390, 1424, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 1425, 1184, 399,
	650, 651, 1426, 652, 1427, 401, 402, 1186, 653, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 1428, 413, 415, 414, 1429, 416,
	654, 1189, 417, 418, 1190, 1430, 419, 0, 0, 0,
	420, 421, 424, 1431, 1432, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	1433, 273, 1193, 464, 465, 1434, 655, 466, 656, 468,
	469, 1435, 0, 470, 0, 1436, 1437, 472, 473, 474,
	1438, 1439, 475, 476, 657, 1194, 477, 1195, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 1440, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 1441, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 1442, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 1443, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	1444, 553, 554, 552, 555, 556, 557, 1445, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 1446, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 1447, 585, 586, 0, 582, 573, 1448, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 1449, 595,
	668, 669, 670, 671, 1450, 604, 1451, 596, 597, 598,
	672, 599, 673, 1452, 600, 601, 602, 603, 0, 605,
	606, 1453, 1454, 607, 608, 609, 611, 612, 610, 613,
	1455, 614, 1456, 0, 615, 616, 617, 674, 675, 676,
	1457, 619, 618, 620, 677, 1458, 621, 1459, 1460, 1461,
	1462, 622, 623, 678, 624, 625, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1378, 0, 0, 0, 0, 3690, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3692, 274,
	276, 275, 277, 278, 279, 280, 1383, 281, 282, 1384,
	1385, 1386, 0, 1387, 627, 1388, 1389, 1390, 1391, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 1392, 632, 293, 294, 295,
	296, 297, 298, 1393, 1394, 0, 299, 633, 634, 635,
	1395, 300, 301, 636, 1396, 1325, 1397, 302, 303, 304,
	305, 306, 307, 308, 0, 1398, 310, 311, 312, 309,
	313, 1399, 314, 0, 315, 316, 317, 318, 319, 320,
	1400, 321, 322, 323, 1182, 324, 325, 326, 1401, 1402,
	1404, 1403, 1405, 1406, 1407, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 1408, 336, 333, 334, 1409, 337,
	335, 338, 1410, 339, 340, 341, 1411, 1412, 342, 343,
	344, 1413, 345, 346, 1414, 347, 348, 349, 1415, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 1416, 271, 1417, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	1418, 368, 369, 1419, 1420, 1183, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1421, 382, 645, 1422, 646, 383, 1423, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 1185, 389, 390, 1424,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 1425, 1184, 399, 650, 651, 1426, 652,
	1427, 401, 402, 1186, 653, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1428, 413, 415, 414, 1429, 416, 654, 1189, 417, 418,
	1190, 1430, 419, 0, 0, 0, 420, 421, 424, 1431,
	1432, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 1433, 273, 1193, 464,
	465, 1434, 655, 466, 656, 468, 469, 1435, 0, 470,
	0, 1436, 1437, 472, 473, 474, 1438, 1439, 475, 476,
	657, 1194, 477, 1195, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 1440, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 1441, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 1442,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 1443, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 1444, 553, 554, 552,
	555, 556, 557, 1445, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 1446, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 1447, 585,
	586, 0, 582, 573, 1448, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 1449, 595, 668, 669, 670, 671,
	1450, 604, 1451, 596, 597, 598, 672, 599, 673, 1452,
	600, 601, 602, 603, 0, 605, 606, 1453, 1454, 607,
	608, 609, 611, 612, 610, 613, 1455, 614, 1456, 0,
	615, 616, 617, 674, 675, 676, 1457, 619, 618, 620,
	677, 1458, 621, 1459, 1460, 1461, 1462, 622, 623, 678,
	624, 625, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4079, 274,
	276, 275, 277, 278, 279, 280, 1383, 281, 282, 1384,
	1385, 1386, 0, 1387, 627, 1388, 1389, 1390, 1391, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 1392, 632, 293, 294, 295,
	296, 297, 298, 1393, 1394, 0, 299, 633, 634, 635,
	1395, 300, 301, 636, 1396, 1325, 1397, 302, 303, 304,
	305, 306, 307, 308, 0, 1398, 310, 311, 312, 309,
	313, 1399, 314, 0, 315, 316, 317, 318, 319, 320,
	1400, 321, 322, 323, 1182, 324, 325, 326, 1401, 1402,
	1404, 1403, 1405, 1406, 1407, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 1408, 336, 333, 334, 1409, 337,
	335, 338, 1410, 339, 340, 341, 1411, 1412, 342, 343,
	344, 1413, 345, 346, 1414, 347, 348, 349, 1415, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 1416, 271, 1417, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	1418, 368, 369, 1419, 1420, 1183, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1421, 382, 645, 1422, 646, 383, 1423, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 1185, 389, 390, 1424,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 1425, 1184, 399, 650, 651, 1426, 652,
	1427, 401, 402, 1186, 653, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1428, 413, 415, 414, 1429, 416, 654, 1189, 417, 418,
	1190, 1430, 419, 0, 0, 0, 420, 421, 424, 1431,
	1432, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 1433, 273, 1193, 464,
	465, 1434, 655, 466, 656, 468, 469, 1435, 0, 470,
	0, 1436, 1437, 472, 473, 474, 1438, 1439, 475, 476,
	657, 1194, 477, 1195, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 1440, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 1441, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 1442,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 1443, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 1444, 553, 554, 552,
	555, 556, 557, 1445, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 1446, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 1447, 585,
	586, 0, 582, 573, 1448, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 1449, 595, 668, 669, 670, 671,
	1450, 604, 1451, 596, 597, 598, 672, 599, 673, 1452,
	600, 601, 602, 603, 0, 605, 606, 1453, 1454, 607,
	608, 609, 611, 612, 610, 613, 1455, 614, 1456, 0,
	615, 616, 617, 674, 675, 676, 1457, 619, 618, 620,
	677, 1458, 621, 1459, 1460, 1461, 1462, 622, 623, 678,
	624, 625, 626, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4281, 274, 276, 275, 277, 278, 279,
	280, 1383, 281, 282, 1384, 1385, 1386, 0, 1387, 627,
	1388, 1389, 1390, 1391, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	1392, 632, 293, 294, 295, 296, 297, 298, 1393, 1394,
	0, 299, 633, 634, 635, 1395, 300, 301, 636, 1396,
	1325, 1397, 302, 303, 304, 305, 306, 307, 308, 0,
	1398, 310, 311, 312, 309, 313, 1399, 314, 0, 315,
	316, 317, 318, 319, 320, 1400, 321, 322, 323, 1182,
	324, 325, 326, 1401, 1402, 1404, 1403, 1405, 1406, 1407,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 1408,
	336, 333, 334, 1409, 337, 335, 338, 1410, 339, 340,
	341, 1411, 1412, 342, 343, 344, 1413, 345, 346, 1414,
	347, 348, 349, 1415, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	1416, 271, 1417, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 1418, 368, 369, 1419, 1420,
	1183, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 1421, 382, 645, 1422, 646,
	383, 1423, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 1185, 389, 390, 1424, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 1425, 1184,
	399, 650, 651, 1426, 652, 1427, 401, 402, 1186, 653,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 1428, 413, 415, 414, 1429,
	416, 654, 1189, 417, 418, 1190, 1430, 419, 0, 0,
	0, 420, 421, 424, 1431, 1432, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 1433, 273, 1193, 464, 465, 1434, 655, 466, 656,
	468, 469, 1435, 0, 470, 0, 1436, 1437, 472, 473,
	474, 1438, 1439, 475, 476, 657, 1194, 477, 1195, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 1440, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 1441, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 1442, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 1443, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 1444, 553, 554, 552, 555, 556, 557, 1445, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 1446, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 1447, 585, 586, 0, 582, 573, 1448,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 1449,
	595, 668, 669, 670, 671, 1450, 604, 1451, 596, 597,
	598, 672, 599, 673, 1452, 600, 601, 602, 603, 0,
	605, 606, 1453, 1454, 607, 608, 609, 611, 612, 610,
	613, 1455, 614, 1456, 0, 615, 616, 617, 674, 675,
	676, 1457, 619, 618, 620, 677, 1458, 621, 1459, 1460,
	1461, 1462, 622, 623, 678, 624, 625, 626, 0, 0,
	0, 0, 1378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4153, 274,
	276, 275, 277, 278, 279, 280, 1383, 281, 282, 1384,
	1385, 1386, 0, 1387, 627, 1388, 1389, 1390, 1391, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 1392, 632, 293, 294, 295,
	296, 297, 298, 1393, 1394, 0, 299, 633, 634, 635,
	1395, 300, 301, 636, 1396, 1325, 1397, 302, 303, 304,
	305, 306, 307, 308, 0, 1398, 310, 311, 312, 309,
	313, 1399, 314, 0, 315, 316, 317, 318, 319, 320,
	1400, 321, 322, 323, 1182, 324, 325, 326, 1401, 1402,
	1404, 1403, 1405, 1406, 1407, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 1408, 336, 333, 334, 1409, 337,
	335, 338, 1410, 339, 340, 341, 1411, 1412, 342, 343,
	344, 1413, 345, 346, 1414, 347, 348, 349, 1415, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 1416, 271, 1417, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	1418, 368, 369, 1419, 1420, 1183, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1421, 382, 645, 1422, 646, 383, 1423, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 1185, 389, 390, 1424,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 1425, 1184, 399, 650, 651, 1426, 652,
	1427, 401, 402, 1186, 653, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1428, 413, 415, 414, 1429, 416, 654, 1189, 417, 418,
	1190, 1430, 419, 0, 0, 0, 420, 421, 424, 1431,
	1432, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 1433, 273, 1193, 464,
	465, 1434, 655, 466, 656, 468, 469, 1435, 0, 470,
	0, 1436, 1437, 472, 473, 474, 1438, 1439, 475, 476,
	657, 1194, 477, 1195, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 1440, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 1441, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 1442,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 1443, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 1444, 553, 554, 552,
	555, 556, 557, 1445, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 1446, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 1447, 585,
	586, 0, 582, 573, 1448, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 1449, 595, 668, 669, 670, 671,
	1450, 604, 1451, 596, 597, 598, 672, 599, 673, 1452,
	600, 601, 602, 603, 0, 605, 606, 1453, 1454, 607,
	608, 609, 611, 612, 610, 613, 1455, 614, 1456, 0,
	615, 616, 617, 674, 675, 676, 1457, 619, 618, 620,
	677, 1458, 621, 1459, 1460, 1461, 1462, 622, 623, 678,
	624, 625, 626, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4009, 274, 276, 275, 277, 278, 279,
	280, 1383, 281, 282, 1384, 1385, 1386, 0, 1387, 627,
	1388, 1389, 1390, 1391, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	1392, 632, 293, 294, 295, 296, 297, 298, 1393, 1394,
	0, 299, 633, 634, 635, 1395, 300, 301, 636, 1396,
	1325, 1397, 302, 303, 304, 305, 306, 307, 308, 0,
	1398, 310, 311, 312, 309, 313, 1399, 314, 0, 315,
	316, 317, 318, 319, 320, 1400, 321, 322, 323, 1182,
	324, 325, 326, 1401, 1402, 1404, 1403, 1405, 1406, 1407,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 1408,
	336, 333, 334, 1409, 337, 335, 338, 1410, 339, 340,
	341, 1411, 1412, 342, 343, 344, 1413, 345, 346, 1414,
	347, 348, 349, 1415, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	1416, 271, 1417, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 1418, 368, 369, 1419, 1420,
	1183, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 1421, 382, 645, 1422, 646,
	383, 1423, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 1185, 389, 390, 1424, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 1425, 1184,
	399, 650, 651, 1426, 652, 1427, 401, 402, 1186, 653,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 1428, 413, 415, 414, 1429,
	416, 654, 1189, 417, 418, 1190, 1430, 419, 0, 0,
	0, 420, 421, 424, 1431, 1432, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 1433, 273, 1193, 464, 465, 1434, 655, 466, 656,
	468, 469, 1435, 0, 470, 0, 1436, 1437, 472, 473,
	474, 1438, 1439, 475, 476, 657, 1194, 477, 1195, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 1440, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 1441, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 1442, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 1443, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 1444, 553, 554, 552, 555, 556, 557, 1445, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 1446, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 1447, 585, 586, 0, 582, 573, 1448,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 1449,
	595, 668, 669, 670, 671, 1450, 604, 1451, 596, 597,
	598, 672, 599, 673, 1452, 600, 601, 602, 603, 0,
	605, 606, 1453, 1454, 607, 608, 609, 611, 612, 610,
	613, 1455, 614, 1456, 0, 615, 616, 617, 674, 675,
	676, 1457, 619, 618, 620, 677, 1458, 621, 1459, 1460,
	1461, 1462, 622, 623, 678, 624, 625, 626, 0, 0,
	0, 0, 1378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3708, 274,
	276, 275, 277, 278, 279, 280, 1383, 281, 282, 1384,
	1385, 1386, 0, 1387, 627, 1388, 1389, 1390, 1391, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 1392, 632, 293, 294, 295,
	296, 297, 298, 1393, 1394, 0, 299, 633, 634, 635,
	1395, 300, 301, 636, 1396, 1325, 1397, 302, 303, 304,
	305, 306, 307, 308, 0, 1398, 310, 311, 312, 309,
	313, 1399, 314, 0, 315, 316, 317, 318, 319, 320,
	1400, 321, 322, 323, 1182, 324, 325, 326, 1401, 1402,
	1404, 1403, 1405, 1406, 1407, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 1408, 336, 333, 334, 1409, 337,
	335, 338, 1410, 339, 340, 341, 1411, 1412, 342, 343,
	344, 1413, 345, 346, 1414, 347, 348, 349, 1415, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 1416, 271, 1417, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	1418, 368, 369, 1419, 1420, 1183, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1421, 382, 645, 1422, 646, 383, 1423, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 1185, 389, 390, 1424,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 1425, 1184, 399, 650, 651, 1426, 652,
	1427, 401, 402, 1186, 653, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1428, 413, 415, 414, 1429, 416, 654, 1189, 417, 418,
	1190, 1430, 419, 0, 0, 0, 420, 421, 424, 1431,
	1432, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 1433, 273, 1193, 464,
	465, 1434, 655, 466, 656, 468, 469, 1435, 0, 470,
	0, 1436, 1437, 472, 473, 474, 1438, 1439, 475, 476,
	657, 1194, 477, 1195, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 1440, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 1441, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 1442,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 1443, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 1444, 553, 554, 552,
	555, 556, 557, 1445, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 1446, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 1447, 585,
	586, 0, 582, 573, 1448, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 1449, 595, 668, 669, 670, 671,
	1450, 604, 1451, 596, 597, 598, 672, 599, 673, 1452,
	600, 601, 602, 603, 0, 605, 606, 1453, 1454, 607,
	608, 609, 611, 612, 610, 613, 1455, 614, 1456, 0,
	615, 616, 617, 674, 675, 676, 1457, 619, 618, 620,
	677, 1458, 621, 1459, 1460, 1461, 1462, 622, 623, 678,
	624, 625, 626, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3536, 274, 276, 275, 277, 278, 279,
	280, 1383, 281, 282, 1384, 1385, 1386, 0, 1387, 627,
	1388, 1389, 1390, 1391, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	1392, 632, 293, 294, 295, 296, 297, 298, 1393, 1394,
	0, 299, 633, 634, 635, 1395, 300, 301, 636, 1396,
	1325, 1397, 302, 303, 304, 305, 306, 307, 308, 0,
	1398, 310, 311, 312, 309, 313, 1399, 314, 0, 315,
	316, 317, 318, 319, 320, 1400, 321, 322, 323, 1182,
	324, 325, 326, 1401, 1402, 1404, 1403, 1405, 1406, 1407,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 1408,
	336, 333, 334, 1409, 337, 335, 338, 1410, 339, 340,
	341, 1411, 1412, 342, 343, 344, 1413, 345, 346, 1414,
	347, 348, 349, 1415, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	1416, 271, 1417, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 1418, 368, 369, 1419, 1420,
	1183, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 1421, 382, 645, 1422, 646,
	383, 1423, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 1185, 389, 390, 1424, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 1425, 1184,
	399, 650, 651, 1426, 652, 1427, 401, 402, 1186, 653,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 1428, 413, 415, 414, 1429,
	416, 654, 1189, 417, 418, 1190, 1430, 419, 0, 0,
	0, 420, 421, 424, 1431, 1432, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 1433, 273, 1193, 464, 465, 1434, 655, 466, 656,
	468, 469, 1435, 0, 470, 0, 1436, 1437, 472, 473,
	474, 1438, 1439, 475, 476, 657, 1194, 477, 1195, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 1440, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 1441, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 1442, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 1443, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 1444, 553, 554, 552, 555, 556, 557, 1445, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 1446, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 1447, 585, 586, 0, 582, 573, 1448,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 1449,
	595, 668, 669, 670, 671, 1450, 604, 1451, 596, 597,
	598, 672, 599, 673, 1452, 600, 601, 602, 603, 0,
	605, 606, 1453, 1454, 607, 608, 609, 611, 612, 610,
	613, 1455, 614, 1456, 0, 615, 616, 617, 674, 675,
	676, 1457, 619, 618, 620, 677, 1458, 621, 1459, 1460,
	1461, 1462, 622, 623, 678, 624, 625, 626, 0, 0,
	0, 0, 1378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2578, 274,
	276, 275, 277, 278, 279, 280, 1383, 281, 282, 1384,
	1385, 1386, 0, 1387, 627, 1388, 1389, 1390, 1391, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 1392, 632, 293, 294, 295,
	296, 297, 298, 1393, 1394, 0, 299, 633, 634, 635,
	1395, 300, 301, 636, 1396, 1325, 1397, 302, 303, 304,
	305, 306, 307, 308, 0, 1398, 310, 311, 312, 309,
	313, 1399, 314, 0, 315, 316, 317, 318, 319, 320,
	1400, 321, 322, 323, 1182, 324, 325, 326, 1401, 1402,
	1404, 1403, 1405, 1406, 1407, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 1408, 336, 333, 334, 1409, 337,
	335, 338, 1410, 339, 340, 341, 1411, 1412, 342, 343,
	344, 1413, 345, 346, 1414, 347, 348, 349, 1415, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 1416, 271, 1417, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	1418, 368, 369, 1419, 1420, 1183, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1421, 382, 645, 1422, 646, 383, 1423, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 1185, 389, 390, 1424,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 1425, 1184, 399, 650, 651, 1426, 652,
	1427, 401, 402, 1186, 653, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1428, 413, 415, 414, 1429, 416, 654, 1189, 417, 418,
	1190, 1430, 419, 0, 0, 0, 420, 421, 424, 1431,
	1432, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 1433, 273, 1193, 464,
	465, 1434, 655, 466, 656, 468, 469, 1435, 0, 470,
	0, 1436, 1437, 472, 473, 474, 1438, 1439, 475, 476,
	657, 1194, 477, 1195, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 1440, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 1441, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 1442,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 1443, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 1444, 553, 554, 552,
	555, 556, 557, 1445, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 1446, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 1447, 585,
	586, 0, 582, 573, 1448, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 1449, 595, 668, 669, 670, 671,
	1450, 604, 1451, 596, 597, 598, 672, 599, 673, 1452,
	600, 601, 602, 603, 0, 605, 606, 1453, 1454, 607,
	608, 609, 611, 612, 610, 613, 1455, 614, 1456, 0,
	615, 616, 617, 674, 675, 676, 1457, 619, 618, 620,
	677, 1458, 621, 1459, 1460, 1461, 1462, 622, 623, 678,
	624, 625, 626, 0, 0, 1474, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2216, 274, 276, 275, 277, 278, 279,
	280, 1383, 281, 282, 1384, 1385, 1386, 0, 1387, 627,
	1388, 1389, 1390, 1391, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	1392, 632, 293, 294, 295, 296, 297, 298, 1393, 1394,
	0, 299, 633, 634, 635, 1395, 300, 301, 636, 1396,
	1325, 1397, 302, 303, 304, 305, 306, 307, 308, 0,
	1398, 310, 311, 312, 309, 313, 1399, 314, 0, 315,
	316, 317, 318, 319, 320, 1400, 321, 322, 323, 1182,
	324, 325, 326, 1401, 1402, 1404, 1403, 1405, 1406, 1407,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 1408,
	336, 333, 334, 1409, 337, 335, 338, 1410, 339, 340,
	341, 1411, 1412, 342, 343, 344, 1413, 345, 346, 1414,
	347, 348, 349, 1415, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	1416, 271, 1417, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 1418, 368, 369, 1419, 1420,
	1183, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 1421, 382, 645, 1422, 646,
	383, 1423, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 1185, 389, 390, 1424, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 1425, 1184,
	399, 650, 651, 1426, 652, 1427, 401, 402, 1186, 653,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 1428, 413, 415, 414, 1429,
	416, 654, 1189, 417, 418, 1190, 1430, 419, 0, 0,
	0, 420, 421, 424, 1431, 1432, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 1433, 273, 1193, 464, 465, 1434, 655, 466, 656,
	468, 469, 1435, 0, 470, 0, 1436, 1437, 472, 473,
	474, 1438, 1439, 475, 476, 657, 1194, 477, 1195, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 1440, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 1441, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 1442, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 1443, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 1444, 553, 554, 552, 555, 556, 557, 1445, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 1446, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 1447, 585, 586, 0, 582, 573, 1448,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 1449,
	595, 668, 669, 670, 671, 1450, 604, 1451, 596, 597,
	598, 672, 599, 673, 1452, 600, 601, 602, 603, 0,
	605, 606, 1453, 1454, 607, 608, 609, 611, 612, 610,
	613, 1455, 614, 1456, 0, 615, 616, 617, 674, 675,
	676, 1457, 619, 618, 620, 677, 1458, 621, 1459, 1460,
	1461, 1462, 622, 623, 678, 624, 625, 626, 1375, 0,
	1378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 1383, 281, 282, 1384, 1385, 1386,
	0, 1387, 627, 1388, 1389, 1390, 1391, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 1392, 632, 293, 294, 295, 296, 297,
	298, 1393, 1394, 0, 299, 633, 634, 635, 1395, 300,
	301, 636, 1396, 1325, 1397, 302, 303, 304, 305, 306,
	307, 308, 0, 1398, 310, 311, 312, 309, 313, 1399,
	314, 0, 315, 316, 317, 318, 319, 320, 1400, 321,
	322, 323, 1182, 324, 325, 326, 1401, 1402, 1404, 1403,
	1405, 1406, 1407, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 1408, 336, 333, 334, 1409, 337, 335, 338,
	1410, 339, 340, 341, 1411, 1412, 342, 343, 344, 1413,
	345, 346, 1414, 347, 348, 349, 1415, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 1416, 271, 1417, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 1418, 368,
	369, 1419, 1420, 1183, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1421, 382,
	645, 1422, 646, 383, 1423, 384, 385, 386, 387, 388,
	647, 648, 649, 467, 1185, 389, 390, 1424, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 1425, 1184, 399, 650, 651, 1426, 652, 1427, 401,
	402, 1186, 653, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 1428, 413,
	415, 414, 1429, 416, 654, 1189, 417, 418, 1190, 1430,
	419, 0, 0, 0, 420, 421, 424, 1431, 1432, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 1433, 273, 1193, 464, 465, 1434,
	655, 466, 656, 468, 469, 1435, 0, 470, 0, 1436,
	1437, 472, 473, 474, 1438, 1439, 475, 476, 657, 1194,
	477, 1195, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 1440, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 1441, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 1442, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 1443,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 1444, 553, 554, 552, 555, 556,
	557, 1445, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 1446,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 1447, 585, 586, 0,
	582, 573, 1448, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 1449, 595, 668, 669, 670, 671, 1450, 604,
	1451, 596, 597, 598, 672, 599, 673, 1452, 600, 601,
	602, 603, 0, 605, 606, 1453, 1454, 607, 608, 609,
	611, 612, 610, 613, 1455, 614, 1456, 0, 615, 616,
	617, 674, 675, 676, 1457, 619, 618, 620, 677, 1458,
	621, 1459, 1460, 1461, 1462, 622, 623, 678, 624, 625,
	626, 1378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 1383, 281, 282, 1384, 1385,
	1386, 0, 1387, 627, 1388, 1389, 1390, 1391, 283, 284,
	1181, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 1392, 632, 293, 294, 295, 296,
	297, 298, 1393, 1394, 0, 299, 633, 634, 635, 1395,
	300, 301, 636, 1396, 1325, 1397, 302, 303, 304, 305,
	306, 307, 308, 0, 1398, 310, 311, 312, 309, 313,
	1399, 314, 0, 315, 316, 317, 318, 319, 320, 1400,
	321, 322, 323, 1182, 324, 325, 326, 1401, 1402, 1404,
	1403, 1405, 1406, 1407, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 1408, 336, 333, 334, 1409, 337, 335,
	338, 1410, 339, 340, 341, 1411, 1412, 342, 343, 344,
	1413, 345, 346, 1414, 347, 348, 349, 1415, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 1416, 271, 1417, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 1418,
	368, 369, 1419, 1420, 1183, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 1421,
	382, 645, 1422, 646, 383, 1423, 384, 385, 386, 387,
	388, 647, 648, 649, 467, 1185, 389, 390, 1424, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 1425, 1184, 399, 650, 651, 1426, 652, 1427,
	401, 402, 1186, 653, 1187, 403, 404, 405, 1188, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 1428,
	413, 415, 414, 1429, 416, 654, 1189, 417, 418, 1190,
	1430, 419, 0, 0, 0, 420, 421, 424, 1431, 1432,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1191,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 1192, 463, 453, 1433, 273, 1193, 464, 465,
	1434, 655, 466, 656, 468, 469, 1435, 0, 470, 0,
	1436, 1437, 472, 473, 474, 1438, 1439, 475, 476, 657,
	1194, 477, 1195, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 1440, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 1441, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 1442, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	1443, 528, 529, 530, 1196, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 1444, 553, 554, 552, 555,
	556, 557, 1445, 558, 559, 541, 542, 560, 561, 1197,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	1446, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 1447, 585, 586,
	0, 582, 573, 1448, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 1449, 595, 668, 669, 670, 671, 1450,
	604, 1451, 596, 597, 598, 672, 599, 673, 1452, 600,
	601, 602, 603, 0, 605, 606, 1453, 1454, 607, 608,
	609, 611, 612, 610, 613, 1455, 614, 1456, 0, 615,
	616, 617, 674, 675, 676, 1457, 619, 618, 620, 677,
	1458, 621, 1459, 1460, 1461, 1462, 622, 623, 678, 624,
	625, 626, 2553, 0, 1117, 1089, 1090, 1091, 1087, 1088,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 2550, 281,
	282, 0, 0, 0, 0, 0, 1141, 1105, 0, 0,
	0, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 1154, 0, 291, 1161, 292, 1160, 0, 1171, 293,
	294, 295, 296, 297, 298, 1107, 1140, 1072, 299, 1201,
	1202, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 1164, 332, 1158, 1157, 1077, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 2551, 0,
	342, 1149, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1083, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 1096, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1156, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 1169, 1170, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 1106, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 1151, 1152,
	0, 1112, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 1074, 273,
	1193, 464, 465, 1097, 1145, 466, 1159, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 1084,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 1155, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 1085, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	1153, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 1200, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 1071, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 1165, 1166,
	1167, 1168, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 1095, 600, 601, 602, 603, 0, 605, 606, 0,
	1078, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 674, 1162, 1199, 2549, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1070, 0, 0, 0,
	0, 0, 0, 1068, 1069, 2552, 0, 0, 0, 0,
	0, 0, 1101, 2548, 0, 1061, 1099, 1117, 1089, 1090,
	1091, 1087, 1088, 1100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 1141,
	1105, 0, 0, 0, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 1154, 0, 291, 1161, 292, 1160,
	0, 1171, 293, 294, 295, 296, 297, 298, 1107, 1140,
	1072, 299, 1201, 1202, 635, 0, 300, 301, 1147, 0,
	1128, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1182,
	324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136,
	327, 328, 329, 330, 331, 1164, 332, 1158, 1157, 1077,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1149, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1083, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1172, 1173, 363,
	1096, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1156, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1183, 370, 371, 372, 1169, 1170, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1179, 0, 1106,
	383, 0, 384, 385, 386, 387, 388, 1142, 1143, 1146,
	467, 1185, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1184,
	399, 1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1180, 1189, 417, 418, 1190, 0, 419, 0, 0,
	0, 420, 421, 424, 1135, 1134, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 1194, 477, 1195, 1174,
	478, 479, 1084, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 1175, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 1155,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 1085, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 233, 553, 554, 552, 555, 556, 557, 1138, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 1153, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 1200, 576, 577, 578, 579,
	1176, 583, 584, 0, 585, 586, 1071, 582, 573, 235,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 1165, 1166, 1167, 1168, 0, 604, 0, 596, 597,
	598, 1177, 599, 1178, 1095, 600, 601, 602, 603, 0,
	605, 606, 0, 1078, 607, 608, 609, 611, 612, 610,
	613, 1139, 614, 0, 0, 615, 616, 617, 1599, 1162,
	1199, 0, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 227, 622, 623, 678, 624, 625, 626, 1075, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 1070,
	0, 0, 0, 0, 0, 0, 1068, 1069, 1117, 1089,
	1090, 1091, 1087, 1088, 1100, 1853, 1851, 0, 0, 1099,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	1141, 1105, 0, 0, 0, 283, 284, 1181, 285, 286,
	287, 288, 289, 290, 628, 1154, 0, 291, 1161, 292,
	1160, 0, 1171, 293, 294, 295, 296, 297, 298, 1107,
	1140, 1072, 299, 1201, 1202, 635, 0, 300, 301, 1147,
	0, 1128, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1182, 324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132,
	1136, 327, 328, 329, 330, 331, 1164, 332, 1158, 1157,
	1077, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1149, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1083, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1172, 1173,
	363, 1096, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1156, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1183, 370, 371, 372, 1169, 1170, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1179, 0,
	1106, 383, 0, 384, 385, 386, 387, 388, 1142, 1143,
	1146, 467, 1185, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1184, 399, 1151, 1152, 0, 1112, 0, 401, 402, 1186,
	1144, 1187, 403, 404, 405, 1188, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1180, 1189, 417, 418, 1190, 0, 419, 0,
	0, 0, 420, 421, 424, 1135, 1134, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1191, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 1192,
	463, 453, 1074, 273, 1193, 464, 465, 1097, 1145, 466,
	1159, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 1194, 477, 1195,
	1174, 478, 479, 1084, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 1175, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	1155, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 1196, 531, 532, 533, 534, 535, 1085, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 233, 553, 554, 552, 555, 556, 557, 1138,
	558, 559, 541, 542, 560, 561, 1197, 562, 563, 564,
	565, 566, 567, 568, 1153, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 1200, 576, 577, 578,
	579, 1176, 583, 584, 0, 585, 586, 1071, 582, 573,
	235, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 1165, 1166, 1167, 1168, 0, 604, 0, 596,
	597, 598, 1177, 599, 1178, 1095, 600, 601, 602, 603,
	0, 605, 606, 0, 1078, 607, 608, 609, 611, 612,
	610, 613, 1139, 614, 0, 0, 615, 616, 617, 1599,
	1162, 1199, 0, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 227, 622, 623, 678, 624, 625, 626, 1075,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	1070, 0, 0, 0, 0, 0, 0, 1068, 1069, 1117,
	1089, 1090, 1091, 1087, 1088, 1100, 1853, 3178, 0, 0,
	1099, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 1141, 1105, 0, 0, 0, 283, 284, 1181, 285,
	286, 287, 288, 289, 290, 628, 1154, 0, 291, 1161,
	292, 1160, 0, 1171, 293, 294, 295, 296, 297, 298,
	1107, 1140, 1072, 299, 1201, 1202, 635, 0, 300, 301,
	1147, 0, 1128, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137, 1133,
	1132, 1136, 327, 328, 329, 330, 331, 1164, 332, 1158,
	1157, 1077, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 1149, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 1083, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1172,
	1173, 363, 1096, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 1156, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1183, 370, 371, 372, 1169, 1170, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1179,
	0, 1106, 383, 0, 384, 385, 386, 387, 388, 1142,
	1143, 1146, 467, 1185, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1184, 399, 1151, 1152, 0, 1112, 0, 401, 402,
	1186, 1144, 1187, 403, 404, 405, 1188, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 1180, 1189, 417, 418, 1190, 0, 419,
	0, 0, 0, 420, 421, 424, 1135, 1134, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1191, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	1192, 463, 453, 1074, 273, 1193, 464, 465, 1097, 1145,
	466, 1159, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 1194, 477,
	1195, 1174, 478, 479, 1084, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 1175, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 1155, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 1196, 531, 532, 533, 534, 535, 1085, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 233, 553, 554, 552, 555, 556, 557,
	1138, 558, 559, 541, 542, 560, 561, 1197, 562, 563,
	564, 565, 566, 567, 568, 1153, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 1200, 576, 577,
	578, 579, 1176, 583, 584, 0, 585, 586, 1071, 582,
	573, 235, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 1165, 1166, 1167, 1168, 0, 604, 0,
	596, 597, 598, 1177, 599, 1178, 1095, 600, 601, 602,
	603, 0, 605, 606, 0, 1078, 607, 608, 609, 611,
	612, 610, 613, 1139, 614, 0, 0, 615, 616, 617,
	1599, 1162, 1199, 0, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 227, 622, 623, 678, 624, 625, 626,
	1075, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 0, 0, 0, 0, 0, 0, 1068, 1069,
	1117, 1089, 1090, 1091, 1087, 1088, 1100, 1853, 1851, 0,
	0, 1099, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 1141, 1105, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 1154, 0, 291,
	1161, 292, 1160, 2682, 1171, 293, 294, 295, 296, 297,
	298, 1107, 1140, 1072, 299, 1201, 1202, 635, 0, 300,
	301, 1147, 0, 1128, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137,
	1133, 1132, 1136, 327, 328, 329, 330, 331, 1164, 332,
	1158, 1157, 1077, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1149, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1083,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1172, 1173, 363, 1096, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1156, 0, 0, 0, 367, 0, 368,
	369, 0, 2687, 1183, 370, 371, 372, 1169, 1170, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1179, 0, 1106, 383, 0, 384, 385, 386, 387, 388,
	1142, 1143, 1146, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1184, 399, 1151, 1152, 0, 1112, 0, 401,
	402, 1186, 1144, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 2683, 416, 1180, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 1135, 1134, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 1074, 273, 1193, 464, 465, 1097,
	1145, 466, 1159, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 1174, 478, 479, 1084, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 1175, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 1155, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 1085,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 1138, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 1153, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 1200, 576,
	577, 578, 579, 1176, 583, 584, 0, 585, 586, 1071,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 1165, 1166, 1167, 1168, 0, 604,
	2684, 596, 597, 598, 1177, 599, 1178, 1095, 600, 601,
	602, 603, 0, 605, 606, 0, 1078, 607, 608, 609,
	611, 612, 610, 613, 1139, 614, 0, 0, 615, 616,
	617, 674, 1162, 1199, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 1075, 2598, 0, 1117, 1089, 1090, 1091, 1087, 1088,
	1100, 0, 1070, 0, 0, 0, 0, 0, 0, 1068,
	1069, 274, 276, 275, 277, 278, 279, 280, 1101, 281,
	282, 0, 1099, 0, 0, 0, 1141, 1105, 0, 0,
	0, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 1154, 0, 291, 1161, 292, 1160, 0, 1171, 293,
	294, 295, 296, 297, 298, 1107, 1140, 1072, 299, 1201,
	1202, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 1164, 332, 1158, 1157, 1077, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1149, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1083, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 1096, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1156, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 1169, 1170, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 1106, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 1151, 1152,
	0, 1112, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 1074, 273,
	1193, 464, 465, 1097, 1145, 466, 1159, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 1084,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 1155, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 1085, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	1153, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 1200, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 1071, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 1165, 1166,
	1167, 1168, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 1095, 600, 601, 602, 603, 0, 605, 606, 0,
	1078, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 674, 1162, 1199, 0, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1070, 0, 0, 0,
	0, 0, 0, 1068, 1069, 0, 0, 0, 0, 0,
	0, 0, 1101, 2596, 0, 2595, 1099, 1117, 1089, 1090,
	1091, 1087, 1088, 1100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 1141,
	1105, 0, 0, 0, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 1154, 0, 291, 1161, 292, 1160,
	0, 1171, 293, 294, 295, 296, 297, 298, 1107, 1140,
	1072, 299, 1201, 1202, 635, 0, 300, 301, 1147, 0,
	1128, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1182,
	324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136,
	327, 328, 329, 330, 331, 1164, 332, 1158, 1157, 1077,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1149, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1083, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1172, 1173, 363,
	1096, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1156, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1183, 370, 371, 372, 1169, 1170, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1179, 0, 1106,
	383, 0, 384, 385, 386, 387, 388, 1142, 1143, 1146,
	467, 1185, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1184,
	399, 1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1180, 1189, 417, 418, 1190, 0, 419, 0, 0,
	0, 420, 421, 424, 1135, 1134, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 1194, 477, 1195, 1174,
	478, 479, 1084, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 1175, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 1155,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 1085, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 1138, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 1153, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 1200, 576, 577, 578, 579,
	1176, 583, 584, 0, 585, 586, 1071, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 1165, 1166, 1167, 1168, 0, 604, 0, 596, 597,
	598, 1177, 599, 1178, 1095, 600, 601, 602, 603, 0,
	605, 606, 0, 1078, 607, 608, 609, 611, 612, 610,
	613, 1139, 614, 0, 0, 615, 616, 617, 674, 1162,
	1199, 0, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 1075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1070,
	0, 0, 0, 0, 0, 0, 1068, 1069, 0, 0,
	0, 0, 0, 0, 0, 1101, 2593, 0, 2592, 1099,
	1117, 1089, 1090, 1091, 1087, 1088, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 1141, 1105, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 1154, 0, 291,
	1161, 292, 1160, 0, 1171, 293, 294, 295, 296, 297,
	298, 1107, 1140, 1072, 299, 1201, 1202, 635, 0, 300,
	301, 1147, 0, 1128, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137,
	1133, 1132, 1136, 327, 328, 329, 330, 331, 1164, 332,
	1158, 1157, 1077, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1149, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1083,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1172, 1173, 363, 1096, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1156, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1183, 370, 371, 372, 1169, 1170, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1179, 0, 1106, 383, 0, 384, 385, 386, 387, 388,
	1142, 1143, 1146, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1184, 399, 1151, 1152, 0, 1112, 0, 401,
	402, 1186, 1144, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1180, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 1135, 1134, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 1074, 273, 1193, 464, 465, 1097,
	1145, 466, 1159, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 1174, 478, 479, 1084, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 1175, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 1155, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 1085,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 1138, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 1153, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 1200, 576,
	577, 578, 579, 1176, 583, 584, 0, 585, 586, 1071,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 1165, 1166, 1167, 1168, 0, 604,
	0, 596, 597, 598, 1177, 599, 1178, 1095, 600, 601,
	602, 603, 0, 605, 606, 0, 1078, 607, 608, 609,
	611, 612, 610, 613, 1139, 614, 0, 0, 615, 616,
	617, 674, 1162, 1199, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 1075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1070, 0, 0, 0, 0, 0, 0, 1068,
	1069, 0, 0, 0, 0, 0, 0, 0, 1101, 2590,
	0, 2589, 1099, 1117, 1089, 1090, 1091, 1087, 1088, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 1141, 1105, 0, 0, 0,
	283, 284, 1181, 285, 286, 287, 288, 289, 290, 628,
	1154, 0, 291, 1161, 292, 1160, 0, 1171, 293, 294,
	295, 296, 297, 298, 1107, 1140, 1072, 299, 1201, 1202,
	635, 0, 300, 301, 1147, 0, 1128, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1182, 324, 325, 326, 1131,
	1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329, 330,
	331, 1164, 332, 1158, 1157, 1077, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	1149, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 1083, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 1172, 1173, 363, 1096, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 1156, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1183, 370, 371, 372,
	1169, 1170, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 1179, 0, 1106, 383, 0, 384, 385,
	386, 387, 388, 1142, 1143, 1146, 467, 1185, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 1184, 399, 1151, 1152, 0,
	1112, 0, 401, 402, 1186, 1144, 1187, 403, 404, 405,
	1188, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 1180, 1189, 417,
	418, 1190, 0, 419, 0, 0, 0, 420, 421, 424,
	1135, 1134, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1191, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 1192, 463, 453, 1074, 273, 1193,
	464, 465, 1097, 1145, 466, 1159, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 1194, 477, 1195, 1174, 478, 479, 1084, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 1175,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 1155, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 1196, 531, 532, 533,
	534, 535, 1085, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 1138, 558, 559, 541, 542, 560,
	561, 1197, 562, 563, 564, 565, 566, 567, 568, 1153,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 1200, 576, 577, 578, 579, 1176, 583, 584, 0,
	585, 586, 1071, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 1165, 1166, 1167,
	1168, 0, 604, 0, 596, 597, 598, 1177, 599, 1178,
	1095, 600, 601, 602, 603, 0, 605, 606, 0, 1078,
	607, 608, 609, 611, 612, 610, 613, 1139, 614, 0,
	0, 615, 616, 617, 674, 1162, 1199, 0, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 1075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1070, 0, 0, 0, 0,
	0, 0, 1068, 1069, 0, 0, 0, 0, 0, 0,
	0, 1101, 2587, 0, 1694, 1099, 1117, 1089, 1090, 1091,
	1087, 1088, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 1141, 1105,
	0, 0, 0, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 1154, 0, 291, 1161, 292, 1160, 0,
	1171, 293, 294, 295, 296, 297, 298, 1107, 1140, 1072,
	299, 1201, 1202, 635, 0, 300, 301, 1147, 0, 1128,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1182, 324,
	325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136, 327,
	328, 329, 330, 331, 1164, 332, 1158, 1157, 1077, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1149, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1083, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1172, 1173, 363, 1096,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1156,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 1169, 1170, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1179, 0, 1106, 383,
	0, 384, 385, 386, 387, 388, 1142, 1143, 1146, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1184, 399,
	1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1180, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 1135, 1134, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 1174, 478,
	479, 1084, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 1175, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 1155, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 1085, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 1138, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 1153, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 1200, 576, 577, 578, 579, 1176,
	583, 584, 0, 585, 586, 1071, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	1165, 1166, 1167, 1168, 0, 604, 0, 596, 597, 598,
	1177, 599, 1178, 1095, 600, 601, 602, 603, 0, 605,
	606, 0, 1078, 607, 608, 609, 611, 612, 610, 613,
	1139, 614, 0, 0, 615, 616, 617, 674, 1162, 1199,
	0, 619, 618, 620, 677, 0, 621, 1693, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 1075, 1064, 0,
	1117, 1089, 1090, 1091, 1087, 1088, 1100, 0, 1070, 0,
	0, 0, 0, 0, 0, 1068, 1069, 274, 276, 275,
	277, 278, 279, 280, 1101, 281, 282, 0, 1099, 0,
	0, 0, 1141, 1105, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 1154, 0, 291,
	1161, 292, 1160, 0, 1171, 293, 294, 295, 296, 297,
	298, 1107, 1140, 1072, 299, 1201, 1202, 635, 0, 300,
	301, 1147, 0, 1128, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137,
	1133, 1132, 1136, 327, 328, 329, 330, 331, 1164, 332,
	1158, 1157, 1077, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1149, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1083,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1172, 1173, 363, 1096, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1156, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1183, 370, 371, 372, 1169, 1170, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1179, 0, 1106, 383, 0, 384, 385, 386, 387, 388,
	1142, 1143, 1146, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1184, 399, 1151, 1152, 0, 1112, 0, 401,
	402, 1186, 1144, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1180, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 1135, 1134, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 1074, 273, 1193, 464, 465, 1097,
	1145, 466, 1159, 468, 469, 0, 0, 470, 0, 1079,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 1174, 478, 479, 1084, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 1175, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 1155, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 1085,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 1138, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 1153, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 1200, 576,
	577, 578, 579, 1176, 583, 584, 0, 585, 586, 1071,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 1165, 1166, 1167, 1168, 0, 604,
	0, 596, 597, 598, 1177, 599, 1178, 1095, 600, 601,
	602, 603, 0, 605, 606, 0, 1078, 607, 608, 609,
	611, 612, 610, 613, 1139, 614, 0, 0, 615, 616,
	617, 674, 1162, 1199, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 1075, 0, 0, 1117, 1089, 1090, 1091, 1087, 1088,
	1100, 0, 1070, 0, 0, 0, 0, 0, 0, 1068,
	1069, 274, 276, 275, 277, 278, 279, 280, 1101, 281,
	282, 0, 1099, 0, 0, 0, 1141, 1105, 0, 0,
	0, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 1154, 0, 291, 1161, 292, 1160, 0, 1171, 293,
	294, 295, 296, 297, 298, 1107, 1140, 1072, 299, 1201,
	1202, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	4614, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 1164, 332, 1158, 1157, 1077, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1149, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1083, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 1096, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1156, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 1169, 1170, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 1106, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 1151, 1152,
	0, 1112, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 1074, 273,
	1193, 464, 465, 1097, 1145, 466, 1159, 468, 469, 0,
	0, 470, 0, 1079, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 1084,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 1155, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 1085, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	1153, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 1200, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 1071, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 1165, 1166,
	1167, 1168, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 1095, 600, 601, 602, 603, 0, 605, 606, 0,
	1078, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 674, 1162, 1199, 0, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 1075, 0, 0, 1117, 1089,
	1090, 1091, 1087, 1088, 1100, 0, 1070, 0, 0, 0,
	0, 0, 0, 1068, 1069, 274, 276, 275, 277, 278,
	279, 280, 1101, 281, 282, 0, 1099, 0, 0, 0,
	1141, 1105, 0, 0, 0, 283, 284, 1181, 285, 286,
	287, 288, 289, 290, 628, 1154, 0, 291, 1161, 292,
	1160, 0, 1171, 293, 294, 295, 296, 297, 298, 1107,
	1140, 1072, 299, 1201, 1202, 635, 0, 300, 301, 1147,
	0, 1128, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1182, 324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132,
	1136, 327, 328, 329, 330, 331, 1164, 332, 1158, 1157,
	1077, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1149, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1083, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1172, 1173,
	363, 1096, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1156, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1183, 370, 371, 372, 1169, 1170, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1179, 0,
	1106, 383, 0, 384, 385, 386, 387, 388, 1142, 1143,
	1146, 467, 1185, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 2430, 396, 397, 398, 400, 0,
	1184, 399, 1151, 1152, 0, 1112, 0, 401, 402, 1186,
	1144, 1187, 403, 404, 405, 1188, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1180, 1189, 417, 418, 1190, 0, 419, 0,
	0, 0, 420, 421, 424, 1135, 1134, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1191, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 1192,
	463, 453, 1074, 273, 1193, 464, 465, 1097, 1145, 466,
	1159, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 1194, 477, 1195,
	1174, 478, 479, 1084, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 1175, 497, 662, 498, 499, 2429,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	1155, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 1196, 531, 532, 533, 534, 535, 1085, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 1138,
	558, 559, 541, 542, 560, 561, 1197, 562, 563, 564,
	565, 566, 567, 568, 1153, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 1200, 576, 577, 578,
	579, 1176, 583, 584, 0, 585, 586, 1071, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 1165, 1166, 1167, 1168, 0, 604, 0, 596,
	597, 598, 1177, 599, 1178, 1095, 600, 601, 602, 603,
	0, 605, 606, 0, 1078, 607, 608, 609, 611, 612,
	610, 613, 1139, 614, 0, 0, 615, 616, 617, 674,
	1162, 1199, 0, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 1075,
	0, 0, 1117, 1089, 1090, 1091, 1087, 1088, 1100, 0,
	1070, 0, 0, 0, 0, 0, 0, 1068, 1069, 274,
	276, 275, 277, 278, 279, 280, 1101, 281, 282, 0,
	1099, 0, 0, 0, 1141, 1105, 0, 0, 0, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 1154,
	0, 291, 1161, 292, 1160, 0, 1171, 293, 294, 295,
	296, 297, 298, 1107, 1140, 1072, 299, 1201, 1202, 635,
	0, 300, 301, 1147, 0, 1128, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1182, 324, 325, 326, 1131, 1129,
	1130, 1137, 1133, 1132, 1136, 327, 328, 329, 330, 331,
	1164, 332, 1158, 1157, 1077, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1149,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1083, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1172, 1173, 363, 1096, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1156, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1183, 370, 371, 372, 1169,
	1170, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1179, 0, 1106, 383, 0, 384, 385, 386,
	387, 388, 1142, 1143, 1146, 467, 1185, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1184, 399, 1151, 1152, 0, 1112,
	0, 401, 402, 1186, 1144, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1180, 1189, 417, 418,
	1190, 0, 419, 0, 0, 0, 420, 421, 424, 1135,
	1134, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 1074, 273, 1193, 464,
	465, 1097, 1145, 466, 1159, 468, 469, 0, 0, 470,
	0, 1079, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 1194, 477, 1195, 1174, 478, 479, 1084, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 1175, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 1155, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 1085, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 1138, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 1153, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	1200, 576, 577, 578, 579, 1176, 583, 584, 0, 585,
	586, 1071, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 1165, 1166, 1167, 1168,
	0, 604, 0, 596, 597, 598, 1177, 599, 1178, 1095,
	600, 601, 602, 603, 0, 605, 606, 0, 1078, 607,
	608, 609, 611, 612, 610, 613, 1139, 614, 0, 0,
	615, 616, 617, 674, 1162, 1199, 0, 619, 618, 620,
	677, 0, 621, 0, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 1075, 0, 0, 1117, 1089, 1090, 1091,
	1087, 1088, 1100, 0, 1070, 0, 0, 0, 0, 0,
	0, 1068, 1069, 274, 276, 275, 277, 278, 279, 280,
	1101, 281, 282, 0, 1099, 0, 0, 0, 1141, 1105,
	0, 0, 0, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 1154, 0, 291, 1161, 292, 1160, 0,
	1171, 293, 294, 295, 296, 297, 298, 1107, 1140, 1072,
	299, 1201, 1202, 635, 0, 300, 301, 1147, 0, 1128,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 4358, 320, 0, 321, 322, 323, 1182, 324,
	325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136, 327,
	328, 329, 330, 331, 1164, 332, 1158, 1157, 1077, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1149, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1083, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1172, 1173, 363, 1096,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1156,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 1169, 1170, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1179, 0, 1106, 383,
	0, 384, 385, 386, 387, 388, 1142, 1143, 1146, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1184, 399,
	1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1180, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 1135, 1134, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159, 468,
	469, 0, 0, 470, 0, 1079, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 1174, 478,
	479, 1084, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 1175, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 1155, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 1085, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 1138, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 1153, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 1200, 576, 577, 578, 579, 1176,
	583, 584, 0, 585, 586, 1071, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	1165, 1166, 1167, 1168, 0, 604, 0, 596, 597, 598,
	1177, 599, 1178, 1095, 600, 601, 602, 603, 0, 605,
	606, 0, 1078, 607, 608, 609, 611, 612, 610, 613,
	1139, 614, 0, 0, 615, 616, 617, 674, 1162, 1199,
	0, 619, 618, 620, 677, 0, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 1075, 0, 0,
	1117, 1089, 1090, 1091, 1087, 1088, 1100, 0, 1070, 0,
	0, 0, 0, 0, 0, 1068, 1069, 274, 276, 275,
	277, 278, 279, 280, 1101, 281, 282, 0, 1099, 0,
	0, 0, 1141, 1105, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 1154, 0, 291,
	1161, 292, 1160, 0, 1171, 293, 294, 295, 296, 297,
	298, 1107, 1140, 1072, 299, 1201, 1202, 635, 0, 300,
	301, 1147, 0, 1128, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137,
	1133, 1132, 1136, 327, 328, 329, 330, 331, 1164, 332,
	1158, 1157, 1077, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1149, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1083,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1172, 1173, 363, 1096, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1156, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1183, 370, 371, 372, 1169, 1170, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1179, 0, 1106, 383, 0, 384, 385, 386, 387, 388,
	1142, 1143, 1146, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1184, 399, 1151, 1152, 0, 1112, 0, 401,
	402, 1186, 1144, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1180, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 1135, 1134, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 1074, 3971, 1193, 464, 465, 1097,
	1145, 466, 1159, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 1174, 478, 479, 1084, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 1175, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 1155, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 1085,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 1138, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 1153, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 1200, 576,
	577, 578, 579, 1176, 583, 584, 0, 585, 586, 1071,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 1165, 1166, 1167, 1168, 0, 604,
	0, 596, 597, 598, 1177, 599, 1178, 1095, 600, 601,
	602, 603, 0, 605, 606, 0, 1078, 607, 608, 609,
	611, 612, 610, 613, 1139, 614, 0, 0, 615, 616,
	617, 674, 1162, 1199, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 1075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1070, 0, 0, 0, 0, 0, 0, 1068,
	1069, 1921, 0, 0, 0, 0, 0, 0, 1101, 0,
	0, 0, 1099, 1117, 1089, 1090, 1091, 1087, 1088, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 1141, 1105, 0, 0, 0,
	283, 284, 1181, 285, 286, 287, 288, 289, 290, 628,
	1154, 0, 291, 1161, 292, 1160, 0, 1171, 293, 294,
	295, 296, 297, 298, 1107, 1140, 1072, 299, 1201, 1202,
	635, 0, 300, 301, 1147, 0, 1128, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1182, 324, 325, 326, 1131,
	1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329, 330,
	331, 1164, 332, 1158, 1157, 1077, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	1149, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 1083, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 1172, 1173, 363, 1096, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 1156, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1183, 370, 371, 372,
	1169, 1170, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 1179, 0, 1106, 383, 0, 384, 385,
	386, 387, 388, 1142, 1143, 1146, 467, 1185, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 1184, 399, 1151, 1152, 0,
	1112, 0, 401, 402, 1186, 1144, 1187, 403, 404, 405,
	1188, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 1180, 1189, 417,
	418, 1190, 0, 419, 0, 0, 0, 420, 421, 424,
	1135, 1134, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1191, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 1192, 463, 453, 1074, 273, 1193,
	464, 465, 1097, 1145, 466, 1159, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 1194, 477, 1195, 1174, 478, 479, 1084, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 1175,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 1155, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 1196, 531, 532, 533,
	534, 535, 1085, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 1138, 558, 559, 541, 542, 560,
	561, 1197, 562, 563, 564, 565, 566, 567, 568, 1153,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 1200, 576, 577, 578, 579, 1176, 583, 584, 0,
	585, 586, 1071, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 1165, 1166, 1167,
	1168, 0, 604, 0, 596, 597, 598, 1177, 599, 1178,
	1095, 600, 601, 602, 603, 0, 605, 606, 0, 1078,
	607, 608, 609, 611, 612, 610, 613, 1139, 614, 0,
	0, 615, 616, 617, 674, 1162, 1199, 3686, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 1075, 0, 0, 1117, 1089, 1090,
	1091, 1087, 1088, 1100, 0, 1070, 0, 0, 0, 0,
	0, 0, 1068, 1069, 274, 276, 275, 277, 278, 279,
	280, 1101, 281, 282, 0, 1099, 0, 0, 0, 1141,
	1105, 0, 0, 0, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 1154, 0, 291, 1161, 292, 1160,
	0, 1171, 293, 294, 295, 296, 297, 298, 1107, 1140,
	1072, 299, 1201, 1202, 635, 0, 300, 301, 1147, 0,
	1128, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1182,
	324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136,
	327, 328, 329, 330, 331, 1164, 332, 1158, 1157, 1077,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1149, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1083, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1172, 1173, 363,
	1096, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1156, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1183, 370, 371, 372, 1169, 1170, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1179, 0, 1106,
	383, 0, 384, 385, 386, 387, 388, 1142, 1143, 1146,
	467, 1185, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1184,
	399, 1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1180, 1189, 417, 418, 1190, 0, 419, 0, 0,
	0, 420, 421, 424, 1135, 1134, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 1194, 477, 1195, 1174,
	478, 479, 1084, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 1175, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 1155,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 1085, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 1138, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 1153, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 1200, 576, 577, 578, 579,
	1176, 583, 584, 0, 585, 586, 1071, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 1165, 1166, 1167, 1168, 0, 604, 0, 596, 597,
	598, 1177, 599, 1178, 1095, 600, 601, 602, 603, 0,
	605, 606, 0, 1078, 607, 608, 609, 611, 612, 610,
	613, 1139, 614, 0, 0, 615, 616, 617, 674, 1162,
	1199, 0, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 1075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1070,
	0, 0, 0, 0, 0, 0, 1068, 1069, 1921, 0,
	0, 0, 0, 0, 0, 1101, 0, 0, 0, 1099,
	1117, 1089, 1090, 1091, 1087, 1088, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 1141, 1105, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 1154, 0, 291,
	1161, 292, 1160, 0, 1171, 293, 294, 295, 296, 297,
	298, 1107, 1140, 1072, 299, 1201, 1202, 635, 0, 300,
	301, 1147, 0, 1128, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137,
	1133, 1132, 1136, 327, 328, 329, 330, 331, 1164, 332,
	1158, 1157, 1077, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1149, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1083,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1172, 1173, 363, 1096, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1156, 0, 0, 0, 367, 0, 368,
	369, 0, 2687, 1183, 370, 371, 372, 1169, 1170, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1179, 0, 1106, 383, 0, 384, 385, 386, 387, 388,
	1142, 1143, 1146, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1184, 399, 1151, 1152, 0, 1112, 0, 401,
	402, 1186, 1144, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1180, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 1135, 1134, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 1074, 273, 1193, 464, 465, 1097,
	1145, 466, 1159, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 1174, 478, 479, 1084, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 1175, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 1155, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 1085,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 1138, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 1153, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 1200, 576,
	577, 578, 579, 1176, 583, 584, 0, 585, 586, 1071,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 1165, 1166, 1167, 1168, 0, 604,
	0, 596, 597, 598, 1177, 599, 1178, 1095, 600, 601,
	602, 603, 0, 605, 606, 0, 1078, 607, 608, 609,
	611, 612, 610, 613, 1139, 614, 0, 0, 615, 616,
	617, 674, 1162, 1199, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 1075, 0, 0, 1117, 1089, 1090, 1091, 1087, 1088,
	1100, 0, 1070, 0, 0, 0, 0, 0, 0, 1068,
	1069, 274, 276, 275, 277, 278, 279, 280, 1101, 281,
	282, 0, 1099, 0, 0, 0, 1141, 1105, 0, 0,
	0, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 1154, 0, 291, 1161, 292, 1160, 0, 1171, 293,
	294, 295, 296, 297, 298, 1107, 1140, 1072, 299, 1201,
	1202, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 1164, 332, 1158, 1157, 1077, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1149, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1083, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 1096, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1156, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 1169, 1170, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 1106, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 1151, 1152,
	0, 1112, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 1074, 273,
	1193, 464, 465, 1097, 1145, 466, 1159, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 1084,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 1155, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 1085, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	1153, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 1200, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 1071, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 1165, 1166,
	1167, 1168, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 1095, 600, 601, 602, 603, 0, 605, 606, 0,
	1078, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 674, 1162, 1199, 0, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1070, 0, 0, 0,
	0, 0, 0, 1068, 1069, 0, 0, 0, 0, 0,
	0, 0, 1101, 1851, 0, 2692, 1099, 1117, 1089, 1090,
	1091, 1087, 1088, 1100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 1141,
	1105, 0, 0, 0, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 1154, 0, 291, 1161, 292, 1160,
	0, 1171, 293, 294, 295, 296, 297, 298, 1107, 1140,
	1072, 299, 1201, 1202, 635, 0, 300, 301, 1147, 0,
	1128, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1182,
	324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136,
	327, 328, 329, 330, 331, 1164, 332, 1158, 1157, 1077,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1149, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1083, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1172, 1173, 363,
	1096, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1156, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1183, 370, 371, 372, 1169, 1170, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1179, 0, 1106,
	383, 0, 384, 385, 386, 387, 388, 1142, 1143, 1146,
	467, 1185, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1184,
	399, 1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1180, 1189, 417, 418, 1190, 0, 419, 0, 0,
	0, 420, 421, 424, 1135, 1134, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 1194, 477, 1195, 1174,
	478, 479, 1084, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 1175, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 1155,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 1085, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 1138, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 1153, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 1200, 576, 577, 578, 579,
	1176, 583, 584, 0, 585, 586, 1071, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 1165, 1166, 1167, 1168, 0, 604, 0, 596, 597,
	598, 1177, 599, 1178, 1095, 600, 601, 602, 603, 0,
	605, 606, 0, 1078, 607, 608, 609, 611, 612, 610,
	613, 1139, 614, 0, 0, 615, 616, 617, 674, 1162,
	1199, 0, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 1075, 2690,
	0, 1117, 1089, 1090, 1091, 1087, 1088, 1100, 0, 1070,
	0, 0, 0, 0, 0, 0, 1068, 1069, 274, 276,
	275, 277, 278, 279, 280, 1101, 281, 282, 0, 1099,
	0, 0, 0, 1141, 1105, 0, 0, 0, 283, 284,
	1181, 285, 286, 287, 288, 289, 290, 628, 1154, 0,
	291, 1161, 292, 1160, 0, 1171, 293, 294, 295, 296,
	297, 298, 1107, 1140, 1072, 299, 1201, 1202, 635, 0,
	300, 301, 1147, 0, 1128, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1182, 324, 325, 326, 1131, 1129, 1130,
	1137, 1133, 1132, 1136, 327, 328, 329, 330, 331, 1164,
	332, 1158, 1157, 1077, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1149, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1083, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1172, 1173, 363, 1096, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1156, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1183, 370, 371, 372, 1169, 1170,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1179, 0, 1106, 383, 0, 384, 385, 386, 387,
	388, 1142, 1143, 1146, 467, 1185, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 1184, 399, 1151, 1152, 0, 1112, 0,
	401, 402, 1186, 1144, 1187, 403, 404, 405, 1188, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1180, 1189, 417, 418, 1190,
	0, 419, 0, 0, 0, 420, 421, 424, 1135, 1134,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1191,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 1192, 463, 453, 1074, 273, 1193, 464, 465,
	1097, 1145, 466, 1159, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	1194, 477, 1195, 1174, 478, 479, 1084, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 1175, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 1155, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 1196, 531, 532, 533, 534, 535,
	1085, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	556, 557, 1138, 558, 559, 541, 542, 560, 561, 1197,
	562, 563, 564, 565, 566, 567, 568, 1153, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 1200,
	576, 577, 578, 579, 1176, 583, 584, 0, 585, 586,
	1071, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 1165, 1166, 1167, 1168, 0,
	604, 0, 596, 597, 598, 1177, 599, 1178, 1095, 600,
	601, 602, 603, 0, 605, 606, 0, 1078, 607, 608,
	609, 611, 612, 610, 613, 1139, 614, 0, 0, 615,
	616, 617, 674, 1162, 1199, 0, 619, 618, 620, 677,
	0, 621, 0, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 1075, 2678, 0, 1117, 1089, 1090, 1091, 1087,
	1088, 1100, 0, 1070, 0, 0, 0, 0, 0, 0,
	1068, 1069, 274, 276, 275, 277, 278, 279, 280, 1101,
	281, 282, 0, 1099, 0, 0, 0, 1141, 1105, 0,
	0, 0, 283, 284, 1181, 285, 286, 287, 288, 289,
	290, 628, 1154, 0, 291, 1161, 292, 1160, 0, 1171,
	293, 294, 295, 296, 297, 298, 1107, 1140, 1072, 299,
	1201, 1202, 635, 0, 300, 301, 1147, 0, 1128, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1182, 324, 325,
	326, 1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328,
	329, 330, 331, 1164, 332, 1158, 1157, 1077, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1149, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1083, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1172, 1173, 363, 1096, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1156, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1183, 370,
	371, 372, 1169, 1170, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1179, 0, 1106, 383, 0,
	384, 385, 386, 387, 388, 1142, 1143, 1146, 467, 1185,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1184, 399, 1151,
	1152, 0, 1112, 0, 401, 402, 1186, 1144, 1187, 403,
	404, 405, 1188, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1180,
	1189, 417, 418, 1190, 0, 419, 0, 0, 0, 420,
	421, 424, 1135, 1134, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1191, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 1192, 463, 453, 1074,
	273, 1193, 464, 465, 1097, 1145, 466, 1159, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 1194, 477, 1195, 1174, 478, 479,
	1084, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 1175, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 1155, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 1196, 531,
	532, 533, 534, 535, 1085, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 1138, 558, 559, 541,
	542, 560, 561, 1197, 562, 563, 564, 565, 566, 567,
	568, 1153, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 1200, 576, 577, 578, 579, 1176, 583,
	584, 0, 585, 586, 1071, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 1165,
	1166, 1167, 1168, 0, 604, 0, 596, 597, 598, 1177,
	599, 1178, 1095, 600, 601, 602, 603, 0, 605, 606,
	0, 1078, 607, 608, 609, 611, 612, 610, 613, 1139,
	614, 0, 0, 615, 616, 617, 674, 1162, 1199, 0,
	619, 618, 620, 677, 0, 621, 0, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 1075, 2666, 0, 1117,
	1089, 1090, 1091, 1087, 1088, 1100, 0, 1070, 0, 0,
	0, 0, 0, 0, 1068, 1069, 274, 276, 275, 277,
	278, 279, 280, 1101, 281, 282, 0, 1099, 0, 0,
	0, 1141, 1105, 0, 0, 0, 283, 284, 1181, 285,
	286, 287, 288, 289, 290, 628, 1154, 0, 291, 1161,
	292, 1160, 0, 1171, 293, 294, 295, 296, 297, 298,
	1107, 1140, 1072, 299, 1201, 1202, 635, 0, 300, 301,
	1147, 0, 1128, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137, 1133,
	1132, 1136, 327, 328, 329, 330, 331, 1164, 332, 1158,
	1157, 1077, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 1149, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 1083, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1172,
	1173, 363, 1096, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 1156, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1183, 370, 371, 372, 1169, 1170, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1179,
	0, 1106, 383, 0, 384, 385, 386, 387, 388, 1142,
	1143, 1146, 467, 1185, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1184, 399, 1151, 1152, 0, 1112, 0, 401, 402,
	1186, 1144, 1187, 403, 404, 405, 1188, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 1180, 1189, 417, 418, 1190, 0, 419,
	0, 0, 0, 420, 421, 424, 1135, 1134, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1191, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	1192, 463, 453, 1074, 273, 1193, 464, 465, 1097, 1145,
	466, 1159, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 1194, 477,
	1195, 1174, 478, 479, 1084, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 1175, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 1155, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 1196, 531, 532, 533, 534, 535, 1085, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	1138, 558, 559, 541, 542, 560, 561, 1197, 562, 563,
	564, 565, 566, 567, 568, 1153, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 1200, 576, 577,
	578, 579, 1176, 583, 584, 0, 585, 586, 1071, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 1165, 1166, 1167, 1168, 0, 604, 0,
	596, 597, 598, 1177, 599, 1178, 1095, 600, 601, 602,
	603, 0, 605, 606, 0, 1078, 607, 608, 609, 611,
	612, 610, 613, 1139, 614, 0, 0, 615, 616, 617,
	674, 1162, 1199, 0, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	1075, 2664, 0, 2655, 2662, 1090, 1091, 1087, 1088, 1100,
	0, 1070, 0, 0, 0, 0, 0, 0, 1068, 1069,
	274, 276, 275, 277, 278, 279, 280, 1101, 281, 282,
	0, 1099, 0, 0, 0, 1141, 1105, 0, 0, 0,
	283, 284, 1181, 285, 286, 287, 288, 289, 290, 628,
	1154, 0, 291, 1161, 292, 1160, 0, 1171, 293, 294,
	295, 296, 297, 298, 1107, 1140, 1072, 299, 1201, 1202,
	635, 0, 300, 301, 1147, 0, 1128, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1182, 324, 325, 326, 1131,
	1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329, 330,
	331, 1164, 2658, 1158, 1157, 1077, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	1149, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 1083, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 1172, 1173, 363, 1096, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 1156, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1183, 370, 371, 372,
	1169, 1170, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 1179, 0, 1106, 383, 0, 384, 385,
	386, 2659, 388, 1142, 1143, 1146, 467, 1185, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 1184, 399, 1151, 1152, 0,
	1112, 0, 401, 402, 1186, 1144, 1187, 403, 404, 405,
	1188, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 1180, 1189, 417,
	418, 1190, 0, 419, 0, 0, 0, 420, 421, 424,
	1135, 1134, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 2660, 434, 2657, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1191, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 1192, 463, 453, 1074, 273, 1193,
	464, 465, 1097, 1145, 466, 1159, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 1194, 477, 1195, 1174, 478, 479, 1084, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 1175,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 1155, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 1196, 531, 532, 533,
	534, 535, 1085, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 2661, 0, 553, 554,
	552, 555, 556, 557, 1138, 558, 559, 541, 542, 560,
	561, 1197, 562, 563, 564, 565, 566, 567, 568, 1153,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 1200, 576, 577, 578, 579, 1176, 583, 584, 0,
	585, 586, 1071, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 1165, 1166, 1167,
	1168, 0, 604, 0, 596, 597, 598, 1177, 599, 1178,
	1095, 600, 601, 602, 603, 0, 605, 606, 0, 1078,
	607, 608, 609, 611, 612, 610, 613, 1139, 614, 0,
	0, 615, 616, 617, 674, 1162, 1199, 0, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 2656, 626, 1075, 2652, 0, 2655, 2662, 1090,
	1091, 1087, 1088, 1100, 0, 1070, 0, 0, 0, 0,
	0, 0, 1068, 1069, 274, 276, 275, 277, 278, 279,
	280, 1101, 281, 282, 0, 1099, 0, 0, 0, 1141,
	1105, 0, 0, 0, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 1154, 0, 291, 1161, 292, 1160,
	0, 1171, 293, 294, 295, 296, 297, 298, 1107, 1140,
	1072, 299, 1201, 1202, 635, 0, 300, 301, 1147, 0,
	1128, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1182,
	324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136,
	327, 328, 329, 330, 331, 1164, 2658, 1158, 1157, 1077,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1149, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1083, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1172, 1173, 363,
	1096, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1156, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1183, 370, 371, 372, 1169, 1170, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1179, 0, 1106,
	383, 0, 384, 385, 386, 2659, 388, 1142, 1143, 1146,
	467, 1185, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1184,
	399, 1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1180, 1189, 417, 418, 1190, 0, 419, 0, 0,
	0, 420, 421, 424, 1135, 1134, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 2660, 434, 2657,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 1194, 477, 1195, 1174,
	478, 479, 1084, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 1175, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 1155,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 1085, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	2661, 0, 553, 554, 552, 555, 556, 557, 1138, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 1153, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 1200, 576, 577, 578, 579,
	1176, 583, 584, 0, 585, 586, 1071, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 1165, 1166, 1167, 1168, 0, 604, 0, 596, 597,
	598, 1177, 599, 1178, 1095, 600, 601, 602, 603, 0,
	605, 606, 0, 1078, 607, 608, 609, 611, 612, 610,
	613, 1139, 614, 0, 0, 615, 616, 617, 674, 1162,
	1199, 0, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 0, 622, 623, 678, 624, 2656, 626, 1075, 0,
	0, 1117, 1089, 1090, 1091, 1087, 1088, 1100, 0, 1070,
	0, 0, 0, 0, 0, 0, 1068, 1069, 274, 276,
	275, 277, 278, 279, 280, 1101, 281, 282, 0, 1099,
	0, 0, 0, 1141, 1105, 0, 0, 0, 283, 284,
	1181, 285, 286, 287, 288, 289, 290, 628, 1154, 0,
	291, 1161, 292, 1160, 0, 1171, 293, 294, 295, 296,
	297, 298, 1107, 1140, 1072, 299, 1201, 1202, 635, 0,
	300, 301, 1147, 0, 1128, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1182, 324, 325, 326, 1131, 1129, 1130,
	1137, 1133, 1132, 1136, 327, 328, 329, 330, 331, 1164,
	332, 1158, 1157, 1077, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1149, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1083, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1172, 1173, 363, 1096, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1156, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1183, 370, 371, 372, 1169, 1170,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1179, 0, 1106, 383, 0, 384, 385, 386, 387,
	388, 1142, 1143, 1146, 467, 1185, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 1184, 399, 1151, 1152, 0, 1112, 0,
	401, 402, 1186, 1144, 1187, 403, 404, 405, 1188, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1180, 1189, 417, 418, 1190,
	0, 419, 0, 0, 0, 420, 421, 424, 1135, 1134,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1191,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 1192, 463, 453, 1074, 273, 1193, 464, 465,
	1097, 1145, 466, 1159, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	1194, 477, 1195, 1174, 478, 479, 1084, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 1175, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 1155, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 1196, 531, 532, 533, 534, 535,
	1085, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	556, 557, 1138, 558, 559, 541, 542, 560, 561, 1197,
	562, 563, 564, 565, 566, 567, 568, 1153, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 1200,
	576, 577, 578, 579, 1176, 583, 584, 0, 585, 586,
	1071, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 1165, 1166, 1167, 1168, 0,
	604, 0, 596, 597, 598, 1177, 599, 1178, 1095, 600,
	601, 602, 603, 0, 605, 606, 0, 1078, 607, 608,
	609, 611, 612, 610, 613, 1139, 614, 0, 0, 615,
	616, 617, 674, 1162, 1199, 0, 619, 618, 620, 677,
	0, 621, 0, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 1075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1070, 0, 0, 0, 0, 0, 0,
	1068, 1069, 0, 0, 0, 0, 0, 1859, 0, 1101,
	0, 0, 0, 1099, 1117, 1089, 1090, 1091, 1087, 1088,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 2409, 281,
	282, 0, 0, 0, 0, 0, 1141, 1105, 0, 0,
	0, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 1154, 0, 291, 1161, 292, 1160, 0, 1171, 293,
	294, 295, 296, 297, 298, 1107, 1140, 1072, 299, 1201,
	1202, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 1164, 332, 1158, 1157, 1077, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1149, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1083, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 1096, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1156, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 1169, 1170, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 1106, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 1151, 1152,
	0, 1112, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 1074, 273,
	1193, 464, 465, 1097, 1145, 466, 1159, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 1084,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 1155, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 1085, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	1153, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 1200, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 1071, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 1165, 1166,
	1167, 1168, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 1095, 600, 601, 602, 603, 0, 605, 606, 0,
	1078, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 674, 1162, 1199, 0, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 1075, 2373, 0, 1117, 1089,
	1090, 1091, 1087, 1088, 1100, 0, 1070, 0, 0, 0,
	0, 0, 0, 1068, 1069, 274, 276, 275, 277, 278,
	279, 280, 1101, 281, 282, 0, 1099, 0, 0, 0,
	1141, 1105, 0, 0, 0, 283, 284, 1181, 285, 286,
	287, 288, 289, 290, 628, 1154, 0, 291, 1161, 292,
	1160, 0, 1171, 293, 294, 295, 296, 297, 298, 1107,
	1140, 1072, 299, 1201, 1202, 635, 0, 300, 301, 1147,
	0, 1128, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1182, 324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132,
	1136, 327, 328, 329, 330, 331, 1164, 332, 1158, 1157,
	1077, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1149, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1083, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1172, 1173,
	363, 1096, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1156, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1183, 370, 371, 372, 1169, 1170, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1179, 0,
	1106, 383, 0, 384, 385, 386, 387, 388, 1142, 1143,
	1146, 467, 1185, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1184, 399, 1151, 1152, 0, 1112, 0, 401, 402, 1186,
	1144, 1187, 403, 404, 405, 1188, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1180, 1189, 417, 418, 1190, 0, 419, 0,
	0, 0, 420, 421, 424, 1135, 1134, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1191, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 1192,
	463, 453, 1074, 273, 1193, 464, 465, 1097, 1145, 466,
	1159, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 1194, 477, 1195,
	1174, 478, 479, 1084, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 1175, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	1155, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 1196, 531, 532, 533, 534, 535, 1085, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 1138,
	558, 559, 541, 542, 560, 561, 1197, 562, 563, 564,
	565, 566, 567, 568, 1153, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 1200, 576, 577, 578,
	579, 1176, 583, 584, 0, 585, 586, 1071, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 1165, 1166, 1167, 1168, 0, 604, 0, 596,
	597, 598, 1177, 599, 1178, 1095, 600, 601, 602, 603,
	0, 605, 606, 0, 1078, 607, 608, 609, 611, 612,
	610, 613, 1139, 614, 0, 0, 615, 616, 617, 674,
	1162, 1199, 0, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 1075,
	2349, 0, 1117, 1089, 1090, 1091, 1087, 1088, 1100, 0,
	1070, 0, 0, 0, 0, 0, 0, 1068, 1069, 274,
	276, 275, 277, 278, 279, 280, 1101, 281, 282, 0,
	1099, 0, 0, 0, 1141, 1105, 0, 0, 0, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 1154,
	0, 291, 1161, 292, 1160, 0, 1171, 293, 294, 295,
	296, 297, 298, 1107, 1140, 1072, 299, 1201, 1202, 635,
	0, 300, 301, 1147, 0, 1128, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1182, 324, 325, 326, 1131, 1129,
	1130, 1137, 1133, 1132, 1136, 327, 328, 329, 330, 331,
	1164, 332, 1158, 1157, 1077, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1149,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1083, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1172, 1173, 363, 1096, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1156, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1183, 370, 371, 372, 1169,
	1170, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1179, 0, 1106, 383, 0, 384, 385, 386,
	387, 388, 1142, 1143, 1146, 467, 1185, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1184, 399, 1151, 1152, 0, 1112,
	0, 401, 402, 1186, 1144, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1180, 1189, 417, 418,
	1190, 0, 419, 0, 0, 0, 420, 421, 424, 1135,
	1134, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 1074, 273, 1193, 464,
	465, 1097, 1145, 466, 1159, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 1194, 477, 1195, 1174, 478, 479, 1084, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 1175, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 1155, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 1085, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 1138, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 1153, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	1200, 576, 577, 578, 579, 1176, 583, 584, 0, 585,
	586, 1071, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 1165, 1166, 1167, 1168,
	0, 604, 0, 596, 597, 598, 1177, 599, 1178, 1095,
	600, 601, 602, 603, 0, 605, 606, 0, 1078, 607,
	608, 609, 611, 612, 610, 613, 1139, 614, 0, 0,
	615, 616, 617, 674, 1162, 1199, 0, 619, 618, 620,
	677, 0, 621, 0, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 1075, 1699, 0, 1117, 1089, 1090, 1091,
	1087, 1088, 1100, 0, 1070, 0, 0, 0, 0, 0,
	0, 1068, 1069, 274, 276, 275, 277, 278, 279, 280,
	1101, 281, 282, 0, 1099, 0, 0, 0, 1141, 1105,
	0, 0, 0, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 1154, 0, 291, 1161, 292, 1160, 0,
	1171, 293, 294, 295, 296, 297, 298, 1107, 1140, 1072,
	299, 1201, 1202, 635, 0, 300, 301, 1147, 0, 1128,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1182, 324,
	325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136, 327,
	328, 329, 330, 331, 1164, 332, 1158, 1157, 1077, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1149, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1083, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1172, 1173, 363, 1096,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1156,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 1169, 1170, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1179, 0, 1106, 383,
	0, 384, 385, 386, 387, 388, 1142, 1143, 1146, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1184, 399,
	1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1180, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 1135, 1134, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 1174, 478,
	479, 1084, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 1175, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 1155, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 1085, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 1138, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 1153, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 1200, 576, 577, 578, 579, 1176,
	583, 584, 0, 585, 586, 1071, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	1165, 1166, 1167, 1168, 0, 604, 0, 596, 597, 598,
	1177, 599, 1178, 1095, 600, 601, 602, 603, 0, 605,
	606, 0, 1078, 607, 608, 609, 611, 612, 610, 613,
	1139, 614, 0, 0, 615, 616, 617, 674, 1162, 1199,
	0, 619, 618, 620, 677, 0, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 1075, 1629, 0,
	1117, 1089, 1090, 1091, 1087, 1088, 1100, 0, 1070, 0,
	0, 0, 0, 0, 0, 1068, 1069, 274, 276, 275,
	277, 278, 279, 280, 1101, 281, 282, 0, 1099, 0,
	0, 0, 1141, 1105, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 1154, 0, 291,
	1161, 292, 1160, 0, 1171, 293, 294, 295, 296, 297,
	298, 1107, 1140, 1072, 299, 1201, 1202, 635, 0, 300,
	301, 1147, 0, 1128, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137,
	1133, 1132, 1136, 327, 328, 329, 330, 331, 1164, 332,
	1158, 1157, 1077, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1149, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1083,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1172, 1173, 363, 1096, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1156, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1183, 370, 371, 372, 1169, 1170, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1179, 0, 1106, 383, 0, 384, 385, 386, 387, 388,
	1142, 1143, 1146, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1184, 399, 1151, 1152, 0, 1112, 0, 401,
	402, 1186, 1144, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1180, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 1135, 1134, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 1074, 273, 1193, 464, 465, 1097,
	1145, 466, 1159, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 1174, 478, 479, 1084, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 1175, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 1155, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 1085,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 1138, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 1153, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 1200, 576,
	577, 578, 579, 1176, 583, 584, 0, 585, 586, 1071,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 1165, 1166, 1167, 1168, 0, 604,
	0, 596, 597, 598, 1177, 599, 1178, 1095, 600, 601,
	602, 603, 0, 605, 606, 0, 1078, 607, 608, 609,
	611, 612, 610, 613, 1139, 614, 0, 0, 615, 616,
	617, 674, 1162, 1199, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 1075, 1624, 0, 1117, 1089, 1090, 1091, 1087, 1088,
	1100, 0, 1070, 0, 0, 0, 0, 0, 0, 1068,
	1069, 274, 276, 275, 277, 278, 279, 280, 1101, 281,
	282, 0, 1099, 0, 0, 0, 1141, 1105, 0, 0,
	0, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 1154, 0, 291, 1161, 292, 1160, 0, 1171, 293,
	294, 295, 296, 297, 298, 1107, 1140, 1072, 299, 1201,
	1202, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 1164, 332, 1158, 1157, 1077, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1149, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1083, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 1096, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1156, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 1169, 1170, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 1106, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 1151, 1152,
	0, 1112, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 1074, 273,
	1193, 464, 465, 1097, 1145, 466, 1159, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 1084,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 1155, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 1085, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	1153, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 1200, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 1071, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 1165, 1166,
	1167, 1168, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 1095, 600, 601, 602, 603, 0, 605, 606, 0,
	1078, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 674, 1162, 1199, 0, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 1075, 1615, 0, 1117, 1089,
	1090, 1091, 1087, 1088, 1100, 0, 1070, 0, 0, 0,
	0, 0, 0, 1068, 1069, 274, 276, 275, 277, 278,
	279, 280, 1101, 281, 282, 0, 1099, 0, 0, 0,
	1141, 1105, 0, 0, 0, 283, 284, 1181, 285, 286,
	287, 288, 289, 290, 628, 1154, 0, 291, 1161, 292,
	1160, 0, 1171, 293, 294, 295, 296, 297, 298, 1107,
	1140, 1072, 299, 1201, 1202, 635, 0, 300, 301, 1147,
	0, 1128, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1182, 324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132,
	1136, 327, 328, 329, 330, 331, 1164, 332, 1158, 1157,
	1077, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1149, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1083, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1172, 1173,
	363, 1096, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1156, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1183, 370, 371, 372, 1169, 1170, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1179, 0,
	1106, 383, 0, 384, 385, 386, 387, 388, 1142, 1143,
	1146, 467, 1185, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1184, 399, 1151, 1152, 0, 1112, 0, 401, 402, 1186,
	1144, 1187, 403, 404, 405, 1188, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1180, 1189, 417, 418, 1190, 0, 419, 0,
	0, 0, 420, 421, 424, 1135, 1134, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1191, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 1192,
	463, 453, 1074, 273, 1193, 464, 465, 1097, 1145, 466,
	1159, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 1194, 477, 1195,
	1174, 478, 479, 1084, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 1175, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	1155, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 1196, 531, 532, 533, 534, 535, 1085, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 1138,
	558, 559, 541, 542, 560, 561, 1197, 562, 563, 564,
	565, 566, 567, 568, 1153, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 1200, 576, 577, 578,
	579, 1176, 583, 584, 0, 585, 586, 1071, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 1165, 1166, 1167, 1168, 0, 604, 0, 596,
	597, 598, 1177, 599, 1178, 1095, 600, 601, 602, 603,
	0, 605, 606, 0, 1078, 607, 608, 609, 611, 612,
	610, 613, 1139, 614, 0, 0, 615, 616, 617, 674,
	1162, 1199, 0, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 1075,
	1610, 0, 1117, 1089, 1090, 1091, 1087, 1088, 1100, 0,
	1070, 0, 0, 0, 0, 0, 0, 1068, 1069, 274,
	276, 275, 277, 278, 279, 280, 1101, 281, 282, 0,
	1099, 0, 0, 0, 1141, 1105, 0, 0, 0, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 1154,
	0, 291, 1161, 292, 1160, 0, 1171, 293, 294, 295,
	296, 297, 298, 1107, 1140, 1072, 299, 1201, 1202, 635,
	0, 300, 301, 1147, 0, 1128, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1182, 324, 325, 326, 1131, 1129,
	1130, 1137, 1133, 1132, 1136, 327, 328, 329, 330, 331,
	1164, 332, 1158, 1157, 1077, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1149,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1083, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1172, 1173, 363, 1096, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1156, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1183, 370, 371, 372, 1169,
	1170, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1179, 0, 1106, 383, 0, 384, 385, 386,
	387, 388, 1142, 1143, 1146, 467, 1185, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1184, 399, 1151, 1152, 0, 1112,
	0, 401, 402, 1186, 1144, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1180, 1189, 417, 418,
	1190, 0, 419, 0, 0, 0, 420, 421, 424, 1135,
	1134, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 1074, 273, 1193, 464,
	465, 1097, 1145, 466, 1159, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 1194, 477, 1195, 1174, 478, 479, 1084, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 1175, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 1155, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 1085, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 1138, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 1153, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	1200, 576, 577, 578, 579, 1176, 583, 584, 0, 585,
	586, 1071, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 1165, 1166, 1167, 1168,
	0, 604, 0, 596, 597, 598, 1177, 599, 1178, 1095,
	600, 601, 602, 603, 0, 605, 606, 0, 1078, 607,
	608, 609, 611, 612, 610, 613, 1139, 614, 0, 0,
	615, 616, 617, 674, 1162, 1199, 0, 619, 618, 620,
	677, 0, 621, 0, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 1075, 1522, 0, 1117, 1089, 1090, 1091,
	1087, 1088, 1100, 0, 1070, 0, 0, 0, 0, 0,
	0, 1068, 1069, 274, 276, 275, 277, 278, 279, 280,
	1101, 281, 282, 0, 1099, 0, 0, 0, 1141, 1105,
	0, 0, 0, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 1154, 0, 291, 1161, 292, 1160, 0,
	1171, 293, 294, 295, 296, 297, 298, 1107, 1140, 1072,
	299, 1201, 1202, 635, 0, 300, 301, 1147, 0, 1128,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1182, 324,
	325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136, 327,
	328, 329, 330, 331, 1164, 332, 1158, 1157, 1077, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1149, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1083, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1172, 1173, 363, 1096,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1156,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 1169, 1170, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1179, 0, 1106, 383,
	0, 384, 385, 386, 387, 388, 1521, 1143, 1146, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1184, 399,
	1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1180, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 1135, 1134, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 1174, 478,
	479, 1084, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 1175, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 1155, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 1085, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 1138, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 1153, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 1200, 576, 577, 578, 579, 1176,
	583, 584, 0, 585, 586, 1071, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	1165, 1166, 1167, 1168, 0, 604, 0, 596, 597, 598,
	1177, 599, 1178, 1095, 600, 601, 602, 603, 0, 605,
	606, 0, 1078, 607, 608, 609, 611, 612, 610, 613,
	1139, 614, 0, 0, 615, 616, 617, 674, 1162, 1199,
	0, 619, 618, 620, 677, 0, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 1075, 1516, 0,
	1117, 1089, 1090, 1091, 1087, 1088, 1100, 0, 1070, 0,
	0, 0, 0, 0, 0, 1068, 1069, 274, 276, 275,
	277, 278, 279, 280, 1101, 281, 282, 0, 1099, 0,
	0, 0, 1141, 1105, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 1154, 0, 291,
	1161, 292, 1160, 0, 1171, 293, 294, 295, 296, 297,
	298, 1107, 1140, 1072, 299, 1201, 1202, 635, 0, 300,
	301, 1147, 0, 1128, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137,
	1133, 1132, 1136, 327, 328, 329, 330, 331, 1164, 332,
	1158, 1157, 1077, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1149, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1083,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1172, 1173, 363, 1096, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1156, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1183, 370, 371, 372, 1169, 1170, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1179, 0, 1106, 383, 0, 384, 385, 386, 387, 388,
	1515, 1143, 1146, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1184, 399, 1151, 1152, 0, 1112, 0, 401,
	402, 1186, 1144, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1180, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 1135, 1134, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 1074, 273, 1193, 464, 465, 1097,
	1145, 466, 1159, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 1174, 478, 479, 1084, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 1175, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 1155, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 1085,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 1138, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 1153, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 1200, 576,
	577, 578, 579, 1176, 583, 584, 0, 585, 586, 1071,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 1165, 1166, 1167, 1168, 0, 604,
	0, 596, 597, 598, 1177, 599, 1178, 1095, 600, 601,
	602, 603, 0, 605, 606, 0, 1078, 607, 608, 609,
	611, 612, 610, 613, 1139, 614, 0, 0, 615, 616,
	617, 674, 1162, 1199, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 1075, 1509, 0, 1117, 1089, 1090, 1091, 1087, 1088,
	1100, 0, 1070, 0, 0, 0, 0, 0, 0, 1068,
	1069, 274, 276, 275, 277, 278, 279, 280, 1101, 281,
	282, 0, 1099, 0, 0, 0, 1141, 1105, 0, 0,
	0, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 1154, 0, 291, 1161, 292, 1160, 0, 1171, 293,
	294, 295, 296, 297, 298, 1107, 1140, 1072, 299, 1201,
	1202, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 1164, 332, 1158, 1157, 1077, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1149, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1083, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 1096, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1156, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 1169, 1170, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 1106, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 1151, 1152,
	0, 1112, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 1074, 273,
	1193, 464, 465, 1097, 1145, 466, 1159, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 1084,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 1155, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 1085, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	1153, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 1200, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 1071, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 1165, 1166,
	1167, 1168, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 1095, 600, 601, 602, 603, 0, 605, 606, 0,
	1078, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 674, 1162, 1199, 0, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 1075, 1327, 0, 1117, 1089,
	1090, 1091, 1087, 1088, 1100, 0, 1070, 0, 0, 0,
	0, 0, 0, 1068, 1069, 274, 276, 275, 277, 278,
	279, 280, 1101, 281, 282, 0, 1099, 0, 0, 0,
	1141, 1105, 0, 0, 0, 283, 284, 1181, 285, 286,
	287, 288, 289, 290, 628, 1154, 0, 291, 1161, 292,
	1160, 0, 1171, 293, 294, 295, 296, 297, 298, 1107,
	1140, 1072, 299, 1201, 1202, 635, 0, 300, 301, 1147,
	0, 1128, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1182, 324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132,
	1136, 327, 328, 329, 330, 331, 1164, 332, 1158, 1157,
	1077, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1149, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1083, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1172, 1173,
	363, 1096, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1156, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1183, 370, 371, 372, 1169, 1170, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1179, 0,
	1106, 383, 0, 384, 385, 386, 387, 388, 1142, 1143,
	1146, 467, 1185, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1184, 399, 1151, 1152, 0, 1112, 0, 401, 402, 1186,
	1144, 1187, 403, 404, 405, 1188, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1180, 1189, 417, 418, 1190, 0, 419, 0,
	0, 0, 420, 421, 424, 1135, 1134, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1191, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 1192,
	463, 453, 1074, 273, 1193, 464, 465, 1097, 1145, 466,
	1159, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 1194, 477, 1195,
	1174, 478, 479, 1084, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 1175, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	1155, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 1196, 531, 532, 533, 534, 535, 1085, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 1138,
	558, 559, 541, 542, 560, 561, 1197, 562, 563, 564,
	565, 566, 567, 568, 1153, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 1200, 576, 577, 578,
	579, 1176, 583, 584, 0, 585, 586, 1071, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 1165, 1166, 1167, 1168, 0, 604, 0, 596,
	597, 598, 1177, 599, 1178, 1095, 600, 601, 602, 603,
	0, 605, 606, 0, 1078, 607, 608, 609, 611, 612,
	610, 613, 1139, 614, 0, 0, 615, 616, 617, 674,
	1162, 1199, 0, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 1075,
	0, 0, 1117, 1089, 1090, 1091, 1087, 1088, 1100, 0,
	1070, 0, 0, 0, 0, 0, 0, 1068, 1069, 274,
	276, 275, 277, 278, 279, 280, 1101, 281, 282, 0,
	1099, 0, 0, 0, 1141, 1105, 0, 0, 0, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 1154,
	0, 291, 1161, 292, 1160, 0, 1171, 293, 294, 295,
	296, 297, 298, 1107, 1140, 1072, 299, 1201, 1202, 635,
	0, 300, 301, 1147, 0, 1128, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1182, 324, 325, 326, 1131, 1129,
	1130, 1137, 1133, 1132, 1136, 327, 328, 329, 330, 331,
	1164, 332, 1158, 1157, 1077, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1149,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1083, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1172, 1173, 363, 1096, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1156, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1183, 370, 371, 372, 1169,
	1170, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1179, 0, 1106, 383, 0, 384, 385, 386,
	387, 388, 1142, 1143, 1146, 467, 1185, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1184, 399, 1151, 1152, 0, 1112,
	0, 401, 402, 1186, 1144, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1180, 1189, 417, 418,
	1190, 0, 419, 0, 0, 0, 420, 421, 424, 1135,
	1134, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 1074, 273, 1193, 464,
	465, 1097, 1145, 466, 1159, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 1194, 477, 1195, 1174, 478, 479, 1084, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 1175, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 1155, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 1085, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 1138, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 1153, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	1200, 576, 577, 578, 579, 1176, 583, 584, 0, 585,
	586, 1071, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 1165, 1166, 1167, 1168,
	0, 604, 0, 596, 597, 598, 1177, 599, 1178, 1095,
	600, 601, 602, 603, 0, 605, 606, 0, 1078, 607,
	608, 609, 611, 612, 610, 613, 1139, 614, 0, 0,
	615, 616, 617, 674, 1162, 1199, 0, 619, 618, 620,
	677, 0, 621, 0, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 1075, 0, 0, 1117, 1089, 1090, 1091,
	1087, 1088, 1100, 0, 1070, 0, 0, 0, 0, 0,
	0, 1068, 1069, 274, 276, 275, 277, 278, 279, 280,
	1101, 281, 282, 0, 1099, 0, 0, 0, 1141, 1105,
	0, 0, 0, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 1154, 0, 291, 1161, 292, 1160, 0,
	1171, 293, 294, 295, 296, 297, 298, 1107, 1140, 1072,
	299, 1201, 1202, 635, 0, 300, 301, 1147, 0, 1128,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1182, 324,
	325, 4663, 1131, 1129, 1130, 1137, 1133, 1132, 1136, 327,
	328, 329, 330, 331, 1164, 332, 1158, 1157, 1077, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1149, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1083, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1172, 1173, 363, 1096,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1156,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 1169, 1170, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1179, 0, 1106, 383,
	0, 384, 385, 386, 387, 388, 1142, 1143, 1146, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1184, 399,
	1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1180, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 1135, 1134, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 1174, 478,
	479, 1084, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 1175, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 1155, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 1085, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 1138, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 1153, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 1200, 576, 577, 578, 579, 1176,
	583, 584, 0, 585, 586, 1071, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	1165, 1166, 1167, 1168, 0, 604, 0, 596, 597, 598,
	1177, 599, 1178, 1095, 600, 601, 602, 603, 0, 4662,
	606, 0, 1078, 607, 608, 609, 611, 612, 610, 613,
	1139, 614, 0, 0, 615, 616, 617, 674, 1162, 1199,
	0, 619, 618, 620, 677, 0, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 1075, 0, 0,
	1117, 1089, 1090, 1091, 1087, 1088, 1100, 0, 1070, 0,
	0, 0, 0, 0, 0, 1068, 1069, 274, 276, 275,
	277, 278, 279, 280, 1101, 281, 282, 0, 1099, 0,
	0, 0, 1141, 1105, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 4661, 1154, 0, 291,
	1161, 292, 1160, 0, 1171, 293, 294, 295, 296, 297,
	298, 1107, 1140, 1072, 299, 1201, 1202, 635, 0, 300,
	301, 1147, 0, 1128, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 4663, 1131, 1129, 1130, 1137,
	1133, 1132, 1136, 327, 328, 329, 330, 331, 1164, 332,
	1158, 1157, 1077, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1149, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1083,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1172, 1173, 363, 1096, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1156, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1183, 370, 371, 372, 1169, 1170, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1179, 0, 1106, 383, 0, 384, 385, 386, 387, 388,
	1142, 1143, 1146, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1184, 399, 1151, 1152, 0, 1112, 0, 401,
	402, 1186, 1144, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1180, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 1135, 1134, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 1074, 273, 1193, 464, 465, 1097,
	1145, 466, 1159, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 1174, 478, 479, 1084, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 1175, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 1155, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 1085,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 1138, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 1153, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 1200, 576,
	577, 578, 579, 1176, 583, 584, 0, 585, 586, 1071,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 1165, 1166, 1167, 1168, 0, 604,
	0, 596, 597, 598, 1177, 599, 1178, 1095, 600, 601,
	602, 603, 0, 4662, 606, 0, 1078, 607, 608, 609,
	611, 612, 610, 613, 1139, 614, 0, 0, 615, 616,
	617, 674, 1162, 1199, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 1075, 0, 0, 1117, 1089, 1090, 1091, 1087, 1088,
	1100, 0, 1070, 0, 0, 0, 0, 0, 0, 1068,
	1069, 274, 276, 275, 277, 278, 279, 280, 1101, 281,
	282, 0, 1099, 0, 0, 0, 1141, 1105, 0, 0,
	0, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 1154, 0, 291, 1161, 292, 1160, 0, 1171, 293,
	294, 295, 296, 297, 298, 1107, 1140, 1072, 299, 1201,
	1202, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 4300, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 1164, 332, 1158, 1157, 1077, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1149, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1083, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 1096, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1156, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 1169, 1170, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 4301, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 1151, 1152,
	0, 1112, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 1074, 273,
	1193, 464, 465, 1097, 1145, 466, 1159, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 1084,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 1155, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 4299, 535, 1085, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	1153, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 1200, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 1071, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 1165, 1166,
	1167, 1168, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 1095, 600, 601, 602, 603, 0, 605, 606, 0,
	1078, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 674, 1162, 1199, 0, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 1075, 0, 0, 1117, 1089,
	1090, 1091, 3145, 3146, 1100, 0, 1070, 0, 0, 0,
	0, 0, 0, 1068, 1069, 274, 276, 275, 277, 278,
	279, 280, 1101, 281, 282, 0, 1099, 0, 0, 0,
	1141, 1105, 0, 0, 0, 283, 284, 1181, 285, 286,
	287, 288, 289, 290, 628, 1154, 0, 291, 1161, 292,
	1160, 0, 1171, 293, 294, 295, 296, 297, 298, 1107,
	1140, 1072, 299, 1201, 1202, 635, 0, 300, 301, 1147,
	0, 1128, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1182, 324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132,
	1136, 327, 328, 329, 330, 331, 1164, 332, 1158, 1157,
	1077, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1149, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1083, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1172, 1173,
	363, 1096, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1156, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1183, 370, 371, 372, 1169, 1170, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1179, 0,
	1106, 383, 0, 384, 385, 386, 387, 388, 1142, 1143,
	1146, 467, 1185, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1184, 399, 1151, 1152, 0, 1112, 0, 401, 402, 1186,
	1144, 1187, 403, 404, 405, 1188, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1180, 1189, 417, 418, 1190, 0, 419, 0,
	0, 0, 420, 421, 424, 1135, 1134, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1191, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 1192,
	463, 453, 1074, 273, 1193, 464, 465, 1097, 1145, 466,
	1159, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 1194, 477, 1195,
	1174, 478, 479, 1084, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 1175, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	1155, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 1196, 531, 532, 533, 534, 535, 1085, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 1138,
	558, 559, 541, 542, 560, 561, 1197, 562, 563, 564,
	565, 566, 567, 568, 1153, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 1200, 576, 577, 578,
	579, 1176, 583, 584, 0, 585, 586, 1071, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 1165, 1166, 1167, 1168, 0, 604, 0, 596,
	597, 598, 1177, 599, 1178, 1095, 600, 601, 602, 603,
	0, 605, 606, 0, 1078, 607, 608, 609, 611, 612,
	610, 613, 1139, 614, 0, 0, 615, 616, 617, 674,
	1162, 1199, 0, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 1075,
	0, 0, 1117, 1089, 1090, 1091, 3143, 3144, 1100, 0,
	1070, 0, 0, 0, 0, 0, 0, 1068, 1069, 274,
	276, 275, 277, 278, 279, 280, 1101, 281, 282, 0,
	1099, 0, 0, 0, 1141, 1105, 0, 0, 0, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 1154,
	0, 291, 1161, 292, 1160, 0, 1171, 293, 294, 295,
	296, 297, 298, 1107, 1140, 1072, 299, 1201, 1202, 635,
	0, 300, 301, 1147, 0, 1128, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1182, 324, 325, 326, 1131, 1129,
	1130, 1137, 1133, 1132, 1136, 327, 328, 329, 330, 331,
	1164, 332, 1158, 1157, 1077, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1149,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1083, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1172, 1173, 363, 1096, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1156, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1183, 370, 371, 372, 1169,
	1170, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1179, 0, 1106, 383, 0, 384, 385, 386,
	387, 388, 1142, 1143, 1146, 467, 1185, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1184, 399, 1151, 1152, 0, 1112,
	0, 401, 402, 1186, 1144, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1180, 1189, 417, 418,
	1190, 0, 419, 0, 0, 0, 420, 421, 424, 1135,
	1134, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 1074, 273, 1193, 464,
	465, 1097, 1145, 466, 1159, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 1194, 477, 1195, 1174, 478, 479, 1084, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 1175, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 1155, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 1085, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 1138, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 1153, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	1200, 576, 577, 578, 579, 1176, 583, 584, 0, 585,
	586, 1071, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 1165, 1166, 1167, 1168,
	0, 604, 0, 596, 597, 598, 1177, 599, 1178, 1095,
	600, 601, 602, 603, 0, 605, 606, 0, 1078, 607,
	608, 609, 611, 612, 610, 613, 1139, 614, 0, 0,
	615, 616, 617, 674, 1162, 1199, 0, 619, 618, 620,
	677, 0, 621, 0, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 1075, 0, 0, 1117, 1089, 1090, 1091,
	1087, 1088, 1100, 0, 1070, 0, 0, 0, 0, 0,
	0, 1068, 1069, 274, 276, 275, 277, 278, 279, 280,
	1101, 281, 282, 0, 1099, 0, 0, 0, 1141, 1105,
	0, 0, 0, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 1154, 0, 291, 1161, 292, 1160, 0,
	1171, 293, 294, 295, 296, 297, 298, 1107, 1140, 1072,
	299, 1201, 1202, 635, 0, 300, 301, 1147, 0, 1128,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1182, 324,
	325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136, 327,
	328, 329, 330, 331, 1164, 332, 1158, 1157, 1077, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1149, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1083, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1172, 1173, 363, 1096,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1156,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 1169, 1170, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1179, 0, 1106, 383,
	0, 384, 385, 386, 387, 388, 1142, 1143, 1146, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1184, 399,
	1151, 1152, 0, 1112, 0, 401, 402, 1186, 1144, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1180, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 1135, 1134, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	1074, 273, 1193, 464, 465, 1097, 1145, 466, 1159, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 1174, 478,
	479, 1084, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 1175, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 1155, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 1085, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 1138, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 1153, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 1200, 576, 577, 578, 579, 1176,
	583, 584, 0, 585, 586, 1071, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	1165, 1166, 1167, 1168, 0, 604, 0, 596, 597, 598,
	1177, 599, 1178, 1095, 600, 601, 602, 603, 0, 605,
	606, 0, 1078, 607, 608, 609, 611, 612, 610, 613,
	1139, 614, 0, 0, 615, 616, 617, 674, 1162, 1199,
	0, 619, 618, 620, 677, 0, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 1075, 0, 0,
	1117, 1089, 1090, 1091, 1087, 1088, 1100, 0, 1070, 0,
	0, 0, 0, 0, 0, 2417, 2418, 274, 276, 275,
	277, 278, 279, 280, 1101, 281, 282, 0, 1099, 0,
	0, 0, 1141, 1105, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 1154, 0, 291,
	1161, 292, 1160, 0, 1171, 293, 294, 295, 296, 297,
	298, 1107, 1140, 0, 299, 1201, 1202, 635, 0, 300,
	301, 1147, 0, 1128, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137,
	1133, 1132, 1136, 327, 328, 329, 330, 331, 1164, 332,
	1158, 1157, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1149, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1083,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1172, 1173, 363, 1096, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1156, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1183, 370, 371, 372, 1169, 1170, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1179, 0, 1106, 383, 0, 384, 385, 386, 387, 388,
	1142, 1143, 1146, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1184, 399, 1151, 1152, 0, 1112, 0, 401,
	402, 1186, 1144, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1180, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 1135, 1134, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 0, 273, 1193, 464, 465, 1097,
	1145, 466, 1159, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 1174, 478, 479, 1084, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 1175, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 1155, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 1085,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 1138, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 1153, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 1200, 576,
	577, 578, 579, 1176, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 1165, 1166, 1167, 1168, 0, 604,
	0, 596, 597, 598, 1177, 599, 1178, 1095, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 1139, 614, 0, 0, 615, 616,
	617, 674, 1162, 1199, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 0, 0, 0, 1117, 1089, 1090, 1091, 1087, 1088,
	1100, 0, 2674, 0, 0, 0, 0, 0, 0, 2672,
	2673, 274, 276, 275, 277, 278, 279, 280, 1101, 281,
	282, 0, 1099, 0, 0, 0, 1141, 1105, 0, 0,
	0, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 1154, 0, 291, 1161, 292, 1160, 0, 1171, 293,
	294, 295, 296, 297, 298, 1107, 1140, 0, 299, 1201,
	1202, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 1164, 332, 1158, 1157, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1149, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1083, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 1096, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1156, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 1169, 1170, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 1106, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 1151, 1152,
	0, 1112, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 0, 273,
	1193, 464, 465, 1097, 1145, 466, 1159, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 1155, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 3138, 3139, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	1153, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 1200, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 1165, 1166,
	1167, 1168, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 1095, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 674, 1162, 1199, 0, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 1117, 1089,
	1090, 1091, 1087, 1088, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 2105, 274, 276, 275, 277, 278,
	279, 280, 1101, 281, 282, 0, 1099, 0, 0, 0,
	1141, 1105, 0, 0, 0, 283, 284, 1181, 285, 286,
	287, 288, 289, 290, 0, 1154, 0, 291, 1161, 292,
	1160, 0, 1171, 293, 294, 295, 296, 297, 298, 1107,
	1140, 1072, 299, 1201, 1202, 635, 0, 300, 301, 1147,
	0, 1128, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1182, 324, 325, 4663, 1131, 1129, 1130, 1137, 1133, 1132,
	1136, 327, 328, 329, 330, 331, 1164, 332, 1158, 1157,
	1077, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1149, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1083, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1172, 1173,
	363, 1096, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1156, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1183, 370, 371, 372, 1169, 1170, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1179, 0,
	1106, 383, 0, 384, 385, 386, 387, 388, 1142, 1143,
	1146, 467, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1184, 399, 1151, 1152, 0, 1112, 0, 401, 402, 0,
	1144, 0, 403, 404, 405, 1188, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1180, 1189, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 1135, 1134, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1191, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 1192,
	463, 453, 1074, 273, 0, 464, 465, 1097, 1145, 466,
	1159, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 1194, 477, 1195,
	1174, 478, 479, 1084, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 1175, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	1155, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 1196, 531, 532, 533, 534, 535, 1085, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 1138,
	558, 559, 541, 542, 560, 561, 0, 562, 563, 564,
	565, 566, 567, 568, 1153, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 1200, 576, 577, 578,
	579, 1176, 583, 584, 0, 585, 586, 1071, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 1165, 1166, 1167, 1168, 0, 604, 0, 596,
	597, 598, 1177, 599, 1178, 1095, 600, 601, 602, 603,
	0, 4662, 606, 0, 1078, 607, 608, 609, 611, 612,
	610, 613, 1139, 614, 0, 0, 615, 616, 617, 674,
	1162, 1199, 0, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 0,
	1061, 0, 1239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1068, 1069, 274,
	276, 275, 277, 278, 279, 280, 1101, 281, 282, 0,
	1099, 0, 0, 0, 1141, 0, 0, 0, 0, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 1140, 0, 299, 633, 634, 635,
	0, 300, 301, 1147, 0, 1128, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1182, 324, 325, 326, 1131, 1129,
	1130, 1137, 1133, 1132, 1136, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1172, 1173, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1183, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1179, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 1142, 1143, 1146, 467, 1185, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1184, 399, 650, 651, 0, 652,
	0, 401, 402, 1186, 1144, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1225, 413, 415, 414, 0, 416, 1180, 1189, 417, 418,
	1190, 0, 419, 0, 0, 0, 420, 421, 424, 1135,
	1134, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 0, 273, 1193, 464,
	465, 0, 1145, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 1231, 472, 473, 474, 0, 0, 475, 476,
	657, 1194, 477, 1195, 1174, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 1175, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 664, 1233, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 233, 553, 554, 552,
	555, 556, 557, 1138, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 1176, 583, 584, 0, 585,
	586, 0, 582, 573, 235, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 668, 669, 670, 671,
	0, 604, 0, 596, 597, 598, 1177, 599, 1178, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 1139, 614, 0, 0,
	615, 616, 617, 1599, 675, 676, 0, 619, 618, 620,
	677, 0, 621, 0, 1239, 0, 227, 622, 623, 678,
	624, 625, 626, 0, 0, 228, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 1141, 0, 1229, 0,
	1945, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 1140, 0, 299, 633,
	634, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 650, 651,
	0, 652, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 1225, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 0, 273,
	1193, 464, 465, 0, 1145, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 1231, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 664, 1233, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 233, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 0, 582, 573, 235, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 1599, 675, 676, 0, 619,
	618, 620, 677, 0, 621, 3302, 0, 1239, 227, 622,
	623, 678, 624, 625, 626, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 1141,
	1229, 0, 1945, 0, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 1140,
	0, 299, 633, 634, 635, 0, 300, 301, 1147, 0,
	1128, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1182,
	324, 325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1172, 1173, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1183, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1179, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 1142, 1143, 1146,
	467, 1185, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1184,
	399, 650, 651, 0, 652, 0, 401, 402, 1186, 1144,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 1225, 413, 415, 414, 0,
	416, 1180, 1189, 417, 418, 1190, 0, 419, 0, 0,
	0, 420, 421, 424, 1135, 1134, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 0, 273, 1193, 464, 465, 0, 1145, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 1231, 472, 473,
	474, 0, 0, 475, 476, 657, 1194, 477, 1195, 1174,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 1175, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 664, 1233, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 1138, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	1176, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 1177, 599, 1178, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 1139, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 0, 619, 618, 620, 677, 0, 621, 1221, 0,
	1239, 0, 622, 623, 678, 624, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 1141, 1229, 0, 1227, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 1140, 0, 299, 633, 634, 635, 0, 300,
	301, 1147, 0, 1128, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137,
	1133, 1132, 1136, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1172, 1173, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1183, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1179, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	1142, 1143, 1146, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1184, 399, 650, 651, 0, 652, 0, 401,
	402, 1186, 1144, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 1225, 413,
	415, 414, 0, 416, 1180, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 1135, 1134, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 0, 273, 1193, 464, 465, 0,
	1145, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	1231, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 1174, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 1175, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 664,
	1233, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 1138, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 1176, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 1177, 599, 1178, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 1139, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 0, 619, 618, 620, 677, 0,
	621, 0, 1239, 0, 0, 622, 623, 678, 624, 625,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 1141, 0, 1229, 0, 1227, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 1140, 0, 299, 633, 634, 635,
	0, 300, 301, 1147, 0, 1128, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1182, 324, 325, 326, 1131, 1129,
	1130, 1137, 1133, 1132, 1136, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1172, 1173, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1183, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1179, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 1142, 1143, 1146, 467, 1185, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1184, 399, 650, 651, 0, 652,
	0, 401, 402, 1186, 1144, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1225, 413, 415, 414, 0, 416, 1180, 1189, 417, 418,
	1190, 0, 419, 0, 0, 0, 420, 421, 424, 1135,
	1134, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 0, 273, 1193, 464,
	465, 0, 1145, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 1231, 472, 473, 474, 0, 0, 475, 476,
	657, 1194, 477, 1195, 1174, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 1175, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 664, 1233, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 1138, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 1176, 583, 584, 0, 585,
	586, 0, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 668, 669, 670, 671,
	0, 604, 0, 596, 597, 598, 1177, 599, 1178, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 1139, 614, 0, 0,
	615, 616, 617, 674, 675, 676, 0, 619, 618, 620,
	677, 0, 621, 0, 1239, 0, 0, 622, 623, 678,
	624, 625, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 1141, 0, 1229, 0,
	1227, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 1140, 0, 299, 633,
	634, 635, 0, 300, 301, 1147, 0, 1128, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	1131, 1129, 1130, 1137, 1133, 1132, 1136, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1172, 1173, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1179, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 1142, 1143, 1146, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1184, 399, 650, 651,
	0, 652, 0, 401, 402, 1186, 1144, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1180, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 1135, 1134, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 0, 273,
	1193, 464, 465, 0, 1145, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 1174, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	1175, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 1138, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 1176, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 1177, 599,
	1178, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 1139, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 0, 619,
	618, 620, 677, 0, 621, 0, 1239, 0, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 1141, 0,
	0, 0, 4126, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 1140, 0,
	299, 633, 634, 635, 0, 300, 301, 1147, 0, 1128,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1182, 324,
	325, 326, 1131, 1129, 1130, 1137, 1133, 1132, 1136, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1172, 1173, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1179, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 1142, 1143, 1146, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1184, 399,
	650, 651, 0, 652, 0, 401, 402, 1186, 1144, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1180, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 1135, 1134, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	0, 273, 1193, 464, 465, 0, 1145, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 1174, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 1175, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 664, 1233, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 1138, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 1176,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	1177, 599, 1178, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	1139, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	0, 619, 618, 620, 677, 0, 621, 0, 268, 0,
	0, 622, 623, 678, 624, 625, 626, 0, 2521, 2522,
	2523, 2540, 2541, 2542, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 2543, 0,
	627, 0, 0, 0, 1843, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 628, 629, 0, 291, 630, 292,
	631, 0, 632, 293, 294, 295, 296, 297, 298, 0,
	0, 1828, 299, 633, 634, 635, 0, 300, 301, 636,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	2533, 0, 310, 311, 312, 309, 313, 0, 314, 2529,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 637, 638,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 639, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 640, 641,
	363, 0, 0, 0, 2534, 2535, 2536, 2537, 364, 365,
	366, 642, 0, 0, 2528, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 643, 644, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 645, 0,
	646, 383, 0, 384, 385, 386, 387, 388, 647, 648,
	649, 467, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	0, 399, 650, 651, 0, 652, 0, 401, 402, 0,
	653, 0, 403, 404, 405, 0, 406, 0, 2538, 2539,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 654, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 2531, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 0,
	463, 453, 0, 0, 0, 464, 465, 0, 655, 466,
	656, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 0, 477, 0,
	658, 478, 479, 471, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 661, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	663, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 0, 531, 532, 533, 534, 535, 664, 536, 2532,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 0,
	558, 559, 541, 542, 560, 561, 0, 562, 563, 564,
	565, 566, 567, 568, 665, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 666, 576, 577, 578,
	579, 667, 583, 584, 0, 585, 586, 1827, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 668, 669, 670, 671, 0, 604, 0, 596,
	597, 598, 672, 599, 673, 0, 600, 601, 602, 603,
	0, 605, 606, 0, 0, 607, 608, 609, 611, 612,
	610, 613, 0, 614, 0, 0, 615, 616, 617, 674,
	675, 676, 0, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 0,
	0, 0, 0, 0, 1061, 0, 1320, 2518, 2519, 2520,
	2544, 2530, 2524, 0, 2526, 2527, 2525, 2512, 2513, 2514,
	2515, 2516, 2517, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 1325,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1182, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 1184, 399,
	650, 651, 0, 652, 0, 401, 402, 1186, 653, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	0, 0, 1193, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	233, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 235, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 1599, 675, 676,
	0, 619, 618, 620, 677, 0, 621, 1596, 0, 1320,
	227, 622, 623, 678, 624, 625, 626, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 188, 0, 283, 284, 1181, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 1325, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1182, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1183, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 647,
	648, 649, 467, 1185, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 1184, 399, 650, 651, 0, 652, 0, 401, 402,
	1186, 653, 1187, 403, 404, 405, 1188, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 1189, 417, 418, 1190, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1191, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	1192, 463, 453, 0, 0, 1193, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 1194, 477,
	1195, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 1196, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 233, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 1197, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 235, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	1599, 675, 676, 0, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 227, 622, 623, 678, 624, 625, 626,
	1320, 1319, 228, 0, 0, 0, 1317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 188, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 633, 634, 635, 0, 300,
	301, 636, 0, 1325, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1183, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	645, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	647, 648, 649, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 1184, 399, 650, 651, 0, 652, 0, 401,
	402, 1186, 653, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 654, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 0, 0, 1193, 464, 465, 0,
	655, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 0, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 672, 599, 673, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 0, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 1320, 1319, 0, 0, 0, 0, 1317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 1621, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 283, 284,
	1181, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 635, 0,
	300, 301, 636, 0, 1325, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1182, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1183, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 647, 648, 649, 467, 1185, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 1184, 399, 650, 651, 0, 652, 0,
	401, 402, 1186, 653, 1187, 403, 404, 405, 1188, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 1189, 417, 418, 1190,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1191,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 1192, 463, 453, 0, 0, 1193, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	1194, 477, 1195, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 1196, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	556, 557, 0, 558, 559, 541, 542, 560, 561, 1197,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 668, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 0, 619, 618, 620, 677,
	0, 621, 0, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 1320, 1319, 0, 0, 0, 0, 1317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 3602,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 633, 634, 635,
	0, 300, 301, 636, 0, 1325, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1182, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1183, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 645, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 1185, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 1184, 399, 650, 651, 0, 652,
	0, 401, 402, 1186, 653, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 654, 1189, 417, 418,
	1190, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 0, 0, 1193, 464,
	465, 0, 655, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 1194, 477, 1195, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 2294, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 0, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 0, 585,
	586, 0, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 668, 669, 670, 671,
	0, 604, 0, 596, 597, 598, 672, 599, 673, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 0, 614, 0, 0,
	615, 616, 617, 674, 675, 676, 0, 619, 618, 620,
	677, 0, 621, 0, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 1320, 2208, 0, 0, 0, 0, 2209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	1621, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 1181, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 1325, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1182, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1183, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 1185, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 1184, 399, 650, 651, 0,
	652, 0, 401, 402, 1186, 653, 1187, 403, 404, 405,
	1188, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 2207, 415, 414, 0, 416, 654, 1189, 417,
	418, 1190, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1191, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 1192, 463, 453, 0, 0, 1193,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 1194, 477, 1195, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 1196, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 1197, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 0, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 1320, 1319, 0, 0, 0, 0,
	1317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 1621, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 283, 284, 1181, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 1325, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1182, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1183, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 647, 648, 649, 467, 1185, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 1184, 399, 650, 651,
	0, 652, 0, 401, 402, 1186, 653, 1187, 403, 404,
	405, 1188, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 1189,
	417, 418, 1190, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1191, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 1192, 463, 453, 0, 0,
	1193, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 1194, 477, 1195, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 1196, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 1197, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 0, 619,
	618, 620, 677, 0, 621, 1061, 0, 268, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 1605, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 0, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 233, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 235,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 1599, 675,
	676, 0, 619, 618, 620, 677, 0, 621, 0, 1239,
	0, 227, 622, 623, 678, 624, 625, 626, 0, 0,
	228, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 1141, 0, 0, 0, 188, 283, 284, 1181, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 1140, 0, 299, 633, 634, 635, 0, 300, 301,
	1147, 0, 1128, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1182, 324, 325, 326, 1131, 1129, 1130, 1137, 1133,
	1132, 1136, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1172,
	1173, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1183, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1179,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 1142,
	1143, 1146, 467, 1185, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1184, 399, 650, 651, 0, 652, 0, 401, 402,
	1186, 1144, 1187, 403, 404, 405, 1188, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 1180, 1189, 417, 418, 1190, 0, 419,
	0, 0, 0, 420, 421, 424, 1135, 1134, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1191, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	1192, 463, 453, 0, 273, 1193, 464, 465, 0, 1145,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 1194, 477,
	1195, 1174, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 1175, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 1196, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	1138, 558, 559, 541, 542, 560, 561, 1197, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 1176, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 1177, 599, 1178, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 1139, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 268, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 273, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 0, 619, 618,
	620, 677, 0, 621, 0, 268, 3048, 0, 622, 623,
	678, 624, 625, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 1959, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 647, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	0, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 0,
	619, 618, 620, 677, 268, 621, 0, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 283, 284, 4830, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 647, 648, 649, 467, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 650, 651,
	0, 652, 0, 401, 402, 0, 653, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 0, 463, 453, 0, 273,
	0, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 0, 477, 0, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 0, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 0, 619,
	618, 620, 677, 0, 621, 268, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	3552, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 647, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	273, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 0,
	619, 618, 620, 677, 0, 621, 268, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 1593, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	650, 651, 0, 652, 0, 401, 402, 0, 653, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 0, 463, 453,
	0, 0, 0, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 0, 477, 0, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 0, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	0, 619, 618, 620, 677, 268, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 3036, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 647, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	0, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 0,
	619, 618, 620, 677, 268, 621, 0, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 283, 284, 3711, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 647, 648, 649, 467, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 650, 651,
	0, 652, 0, 401, 402, 0, 653, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 0, 463, 453, 0, 0,
	0, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 0, 477, 0, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 0, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 0, 619,
	618, 620, 677, 0, 621, 899, 0, 804, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 2285, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 811, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 897,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 273, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 809,
	587, 588, 589, 590, 591, 810, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 0, 619, 618, 620, 677, 0, 621, 804, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 2026, 281, 282, 0, 0, 0, 814, 0,
	627, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 628, 629, 0, 291, 630, 292,
	631, 0, 632, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 633, 634, 635, 0, 300, 301, 636,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 811, 331, 0, 332, 637, 638,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 639, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 640, 641,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 642, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 643, 644, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 645, 0,
	646, 383, 0, 384, 385, 386, 387, 388, 647, 648,
	649, 467, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 650, 651, 0, 652, 0, 401, 402, 0,
	653, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 654, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 0,
	463, 453, 0, 273, 0, 464, 465, 0, 655, 466,
	656, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 0, 477, 0,
	658, 478, 479, 471, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 661, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	663, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 0, 531, 532, 533, 534, 535, 664, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 2025, 548, 549,
	550, 551, 0, 2027, 554, 552, 555, 556, 557, 0,
	558, 559, 541, 542, 560, 561, 0, 562, 563, 564,
	565, 566, 567, 568, 665, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 666, 576, 577, 578,
	579, 667, 583, 584, 0, 585, 586, 0, 582, 573,
	809, 587, 588, 589, 590, 591, 810, 593, 357, 594,
	0, 595, 668, 669, 670, 671, 0, 604, 0, 596,
	597, 598, 672, 599, 673, 0, 600, 601, 2024, 603,
	0, 605, 606, 0, 0, 607, 608, 609, 611, 612,
	610, 613, 0, 614, 0, 0, 615, 616, 617, 674,
	675, 676, 0, 619, 618, 620, 677, 0, 621, 804,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 1977, 281, 282, 0, 0, 0, 814,
	0, 627, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 811, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 647,
	648, 649, 467, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 0, 399, 650, 651, 0, 652, 0, 401, 402,
	0, 653, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	0, 463, 453, 0, 273, 0, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 0, 477,
	0, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 1976, 548,
	549, 550, 551, 0, 1978, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 0, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 809, 587, 588, 589, 590, 591, 810, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 1975,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 0, 619, 618, 620, 677, 802, 621,
	804, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	814, 0, 627, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 633, 634, 635, 0, 300,
	301, 636, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 811, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	645, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	647, 648, 649, 467, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 650, 651, 0, 652, 0, 401,
	402, 0, 653, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 654, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 0, 463, 453, 0, 273, 0, 464, 465, 0,
	655, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 0,
	477, 0, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 0, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 0, 558, 559, 541, 542, 560, 561, 0, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 0, 585, 586, 0,
	582, 573, 809, 587, 588, 589, 590, 591, 810, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 672, 599, 673, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 0, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 0, 619, 618, 620, 677, 1999,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 0, 283, 284, 1181, 285,
	286, 287, 288, 289, 290, 0, 2005, 0, 291, 1995,
	292, 2011, 0, 2018, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 2021, 2022, 0, 0, 300, 301,
	0, 0, 1325, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1182, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 1164, 332, 2009,
	2008, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 1149, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 0, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 2007, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1183, 370, 371, 372, 2016, 2017, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 0,
	0, 0, 383, 0, 384, 385, 386, 387, 388, 0,
	0, 0, 467, 1185, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 1184, 399, 2002, 2003, 0, 1998, 0, 401, 402,
	1186, 0, 1187, 403, 404, 405, 1188, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 0, 1189, 417, 418, 1190, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1191, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	1192, 463, 453, 0, 0, 1193, 464, 465, 0, 0,
	466, 2010, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 0, 1194, 477,
	1195, 0, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 1992, 491, 492,
	493, 1993, 494, 495, 496, 0, 497, 0, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 2006, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 1196, 531, 532, 533, 534, 535, 0, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 1197, 562, 563,
	564, 565, 566, 567, 568, 2004, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 2020, 576, 577,
	578, 579, 0, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 2012, 2013, 2014, 2015, 0, 604, 0,
	596, 597, 598, 0, 599, 0, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	0, 1996, 2019, 804, 619, 618, 620, 0, 0, 621,
	0, 0, 0, 0, 622, 623, 0, 624, 625, 626,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 1986, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 811,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 273, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 809, 587, 588, 589, 590,
	591, 810, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 0, 619, 618,
	620, 677, 0, 621, 804, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 814, 0, 627, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	811, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 647, 648, 649, 467, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 650, 651,
	0, 652, 0, 401, 402, 0, 653, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 0, 463, 453, 0, 273,
	0, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 0, 477, 0, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 0, 2328, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 2329, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 0, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 809, 587, 588, 589,
	590, 591, 810, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 2330, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 0, 619,
	618, 620, 677, 0, 621, 268, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 814, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 647, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	273, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 0,
	619, 618, 620, 677, 2070, 621, 1320, 2037, 0, 0,
	622, 623, 678, 624, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 814, 0, 627, 0,
	0, 0, 0, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 1325,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1182, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 2034, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 1184, 399,
	650, 651, 0, 652, 0, 401, 402, 1186, 653, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	0, 0, 1193, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 2035, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	0, 619, 618, 620, 677, 2031, 621, 1320, 2037, 0,
	0, 622, 623, 678, 624, 625, 626, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	1325, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1182,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 2034,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1183, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 1185, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 1184,
	399, 650, 651, 0, 652, 0, 401, 402, 1186, 653,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 1189, 417, 418, 1190, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 0, 0, 1193, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 1194, 477, 1195, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 2035, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 0, 619, 618, 620, 677, 0, 621, 1320, 2037,
	0, 0, 622, 623, 678, 624, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 283, 284, 1181, 285, 286,
	287, 288, 289, 290, 628, 629, 0, 291, 630, 292,
	631, 0, 632, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 633, 634, 635, 0, 300, 301, 636,
	0, 1325, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1182, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	2034, 327, 328, 329, 330, 331, 0, 332, 637, 638,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 639, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 640, 641,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 642, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1183, 370, 371, 372, 643, 644, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 645, 0,
	646, 383, 0, 384, 385, 386, 387, 388, 647, 648,
	649, 467, 1185, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	1184, 399, 650, 651, 0, 652, 0, 401, 402, 1186,
	653, 1187, 403, 404, 405, 1188, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 654, 1189, 417, 418, 1190, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1191, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 1192,
	463, 453, 0, 0, 1193, 464, 465, 0, 655, 466,
	656, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 1194, 477, 1195,
	658, 478, 479, 471, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 661, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	663, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 1196, 531, 532, 533, 534, 535, 664, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 2035,
	558, 559, 541, 542, 560, 561, 1197, 562, 563, 564,
	565, 566, 567, 568, 665, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 666, 576, 577, 578,
	579, 667, 583, 584, 0, 585, 586, 0, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 668, 669, 670, 671, 0, 604, 0, 596,
	597, 598, 672, 599, 673, 0, 600, 601, 602, 603,
	0, 605, 606, 0, 0, 607, 608, 609, 611, 612,
	610, 613, 0, 614, 0, 0, 615, 616, 617, 674,
	675, 676, 0, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 1320,
	1319, 0, 0, 0, 0, 1317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 1181, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 1325, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1182, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1183, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 647,
	648, 649, 467, 1185, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 1184, 399, 650, 651, 0, 652, 0, 401, 402,
	1186, 653, 1187, 403, 404, 405, 1188, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 1189, 417, 418, 1190, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1191, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	1192, 463, 453, 0, 0, 1193, 464, 465, 3904, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 1194, 477,
	1195, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 1196, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 1197, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 0, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	1320, 1319, 0, 0, 0, 0, 1317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 283, 284, 1181,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 633, 634, 635, 0, 300,
	301, 636, 0, 1325, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1182, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1183, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	645, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	647, 648, 649, 467, 1185, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 1184, 399, 650, 651, 0, 652, 0, 401,
	402, 1186, 653, 1187, 403, 404, 405, 1188, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 654, 1189, 417, 418, 1190, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1191, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 1192, 463, 453, 0, 0, 1193, 464, 465, 3515,
	655, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 1194,
	477, 1195, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 1196, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 0, 558, 559, 541, 542, 560, 561, 1197, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 672, 599, 673, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 0, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 0, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 1649, 0, 1320, 1319, 0, 0, 0, 0, 1317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 1181, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 1325, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1182, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 271, 0, 0,
	0, 0, 0, 1648, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1183, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 1185, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 1184, 399, 650, 651, 0,
	652, 0, 401, 402, 1186, 653, 1187, 403, 404, 405,
	1188, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 1189, 417,
	418, 1190, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1191, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 1192, 463, 453, 0, 0, 1193,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 1194, 477, 1195, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 1647, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 1196, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 1646, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 1197, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 0, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 1567, 0, 1320, 1319, 0, 0,
	0, 0, 1317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 1325,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1182, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 1566, 648, 649, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 1184, 399,
	650, 651, 0, 652, 0, 401, 402, 1186, 653, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	0, 0, 1193, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	0, 619, 618, 620, 677, 0, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 1527, 0, 1320,
	1319, 0, 0, 0, 0, 1317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 1181, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 1325, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1182, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1183, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 647,
	648, 649, 467, 1185, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 1184, 399, 650, 651, 0, 652, 0, 401, 402,
	1186, 653, 1187, 403, 404, 405, 1188, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 1189, 417, 418, 1190, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1191, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	1192, 463, 453, 0, 0, 1193, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 1194, 477,
	1195, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 1196, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 1197, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 0, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	1492, 0, 1320, 1319, 0, 0, 0, 0, 1317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 633, 634, 635,
	0, 300, 301, 636, 0, 1325, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1182, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1183, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 645, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 1491, 648, 649, 467, 1185, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 1184, 399, 650, 651, 0, 652,
	0, 401, 402, 1186, 653, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 654, 1189, 417, 418,
	1190, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 0, 0, 1193, 464,
	465, 0, 655, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 1194, 477, 1195, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 0, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 0, 585,
	586, 0, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 668, 669, 670, 671,
	0, 604, 0, 596, 597, 598, 672, 599, 673, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 0, 614, 0, 0,
	615, 616, 617, 674, 675, 676, 0, 619, 618, 620,
	677, 0, 621, 0, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 1314, 0, 1320, 1319, 0, 0, 0,
	0, 1317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 1181, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 1325, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1182, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1183, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 1313, 648, 649, 467, 1185,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 1184, 399, 650,
	651, 0, 652, 0, 401, 402, 1186, 653, 1187, 403,
	404, 405, 1188, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	1189, 417, 418, 1190, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1191, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 1192, 463, 453, 0,
	0, 1193, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 1194, 477, 1195, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 1196, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 1197, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 0,
	619, 618, 620, 677, 0, 621, 0, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 1320, 1319, 0, 0,
	0, 0, 1317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 283, 284, 1181, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 1325,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1182, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1183,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	1185, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 1184, 399,
	650, 651, 0, 652, 0, 401, 402, 1186, 653, 1187,
	403, 404, 405, 1188, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 1189, 417, 418, 1190, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1191, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 1192, 463, 453,
	0, 0, 1193, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 1194, 477, 1195, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 1196,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 1197, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	0, 619, 618, 620, 677, 0, 621, 1320, 2037, 0,
	0, 622, 623, 678, 624, 625, 626, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 283, 284, 1181, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	1325, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1182,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 2077,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1183, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 1185, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 1184,
	399, 650, 651, 0, 652, 0, 401, 402, 1186, 653,
	1187, 403, 404, 405, 1188, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 1189, 417, 418, 1190, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1191, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 1192, 463,
	453, 0, 0, 1193, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 1194, 477, 1195, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	1196, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 1197, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 0, 619, 618, 620, 677, 0, 621, 1320, 1319,
	0, 0, 622, 623, 678, 624, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 283, 284, 1181, 285, 286,
	287, 288, 289, 290, 628, 629, 0, 291, 630, 292,
	631, 0, 632, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 633, 634, 635, 0, 300, 301, 636,
	0, 1325, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1182, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 637, 638,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 639, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 640, 641,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 642, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1183, 370, 371, 372, 643, 644, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 645, 0,
	646, 383, 0, 384, 385, 386, 387, 388, 647, 648,
	649, 467, 1185, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	1184, 399, 650, 651, 0, 652, 0, 401, 402, 1186,
	653, 1187, 403, 404, 405, 1188, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 654, 1189, 417, 418, 1190, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1191, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 1192,
	463, 453, 0, 0, 1193, 464, 465, 0, 655, 466,
	656, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 1194, 477, 1195,
	658, 478, 479, 471, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 661, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	663, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 1196, 531, 532, 533, 534, 535, 664, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 0,
	558, 559, 541, 542, 560, 561, 1197, 562, 563, 564,
	565, 566, 567, 568, 665, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 666, 576, 577, 578,
	579, 667, 583, 584, 0, 585, 586, 0, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 668, 669, 670, 671, 0, 604, 0, 596,
	597, 598, 672, 599, 673, 0, 600, 601, 602, 603,
	0, 605, 606, 0, 0, 607, 608, 609, 611, 612,
	610, 613, 0, 614, 0, 0, 615, 616, 617, 674,
	675, 676, 1320, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 283,
	284, 1181, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 633, 634, 635,
	0, 300, 301, 636, 0, 1325, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1182, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1183, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 645, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 1185, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 1184, 399, 650, 651, 0, 652,
	0, 401, 402, 1186, 653, 1187, 403, 404, 405, 1188,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 654, 1189, 417, 418,
	1190, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1191, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 1192, 463, 453, 0, 0, 1193, 464,
	465, 0, 655, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 1194, 477, 1195, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 1196, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 0, 558, 559, 541, 542, 560, 561,
	1197, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 0, 585,
	586, 0, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 668, 669, 670, 671,
	0, 604, 0, 596, 597, 598, 672, 599, 673, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 0, 614, 0, 0,
	615, 616, 617, 674, 675, 676, 268, 619, 618, 620,
	677, 0, 621, 0, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 2843, 300, 301, 636, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 2840, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 2847, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	3061, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 2846, 0, 0,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 3058, 396, 397, 398, 400, 0, 0, 399,
	650, 651, 0, 652, 0, 401, 3060, 0, 653, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 0, 417, 418, 3057, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 0, 463, 453,
	0, 0, 0, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 0, 477, 0, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 2845, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 0, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 3059, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	268, 619, 618, 620, 677, 0, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 633, 634, 635, 2843, 300,
	301, 636, 0, 0, 2837, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 2840,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 2847, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 2846, 0, 0, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	645, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	2836, 648, 649, 467, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 650, 651, 0, 652, 0, 401,
	402, 0, 653, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 654, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 0, 463, 453, 0, 0, 0, 464, 465, 0,
	655, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 0,
	477, 0, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 2845, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 0, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 0, 558, 559, 541, 542, 560, 561, 0, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 672, 599, 673, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 2844, 607, 608, 609,
	611, 612, 610, 613, 0, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 0, 619, 618, 620, 677, 1725,
	621, 268, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 1724, 281, 282, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 635, 0,
	300, 301, 636, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 1723, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 647, 648, 649, 467, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 0, 399, 650, 651, 0, 652, 0,
	401, 402, 0, 653, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 0, 463, 453, 0, 273, 0, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	0, 477, 0, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 0, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 1726, 540,
	547, 548, 549, 550, 551, 0, 1722, 554, 552, 555,
	556, 557, 0, 558, 559, 541, 542, 560, 561, 0,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 1720, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 668, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 0, 1721, 618, 620, 677,
	1467, 621, 268, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 633, 634, 635,
	0, 300, 301, 636, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 645, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 1469, 648, 649, 467, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 0, 399, 650, 651, 0, 652,
	0, 401, 402, 0, 653, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 654, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 0, 463, 453, 0, 273, 0, 464,
	465, 0, 655, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 1231, 472, 473, 474, 0, 0, 475, 476,
	657, 0, 477, 0, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 0, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 0, 558, 559, 541, 542, 560, 561,
	0, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 0, 585,
	586, 0, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 668, 669, 670, 671,
	0, 604, 0, 596, 597, 598, 672, 599, 673, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 0, 614, 0, 0,
	615, 616, 617, 674, 675, 676, 0, 619, 618, 620,
	677, 1464, 621, 268, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 1466, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 273, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 1231, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 0, 619, 618,
	620, 677, 1371, 621, 268, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 1373, 648, 649, 467, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 650, 651,
	0, 652, 0, 401, 402, 0, 653, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 0, 463, 453, 0, 273,
	0, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 1231, 472, 473, 474, 0, 0,
	475, 476, 657, 0, 477, 0, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 0, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 0, 619,
	618, 620, 677, 710, 621, 268, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 709, 279, 280, 699,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 702, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 703, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 647, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	0, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 704,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 0,
	619, 618, 620, 677, 698, 621, 268, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	699, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 702, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 703, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	650, 651, 0, 652, 0, 401, 402, 0, 653, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 0, 463, 453,
	0, 0, 0, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 0, 477, 0, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	704, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 0, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	268, 619, 618, 620, 677, 0, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 274, 276, 275,
	277, 278, 279, 280, 699, 281, 282, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 633, 634, 635, 0, 300,
	301, 636, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 702, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 703, 382,
	645, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	647, 648, 649, 467, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 650, 651, 0, 652, 0, 401,
	402, 0, 653, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 654, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 0, 463, 453, 0, 0, 0, 464, 465, 0,
	655, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 0,
	477, 0, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 0, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 704, 553, 554, 552, 555, 556,
	557, 0, 558, 559, 541, 542, 560, 561, 0, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 672, 599, 673, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 0, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 268, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 274, 276, 275, 277, 278, 279, 280, 699, 281,
	282, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 702, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 3915, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 647, 648, 649, 467, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 650, 651,
	0, 652, 0, 401, 402, 0, 653, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 0, 463, 453, 0, 0,
	0, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 0, 477, 0, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 704, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 0, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 268, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 628, 629, 0, 291, 630, 292,
	631, 0, 632, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 633, 634, 635, 0, 300, 301, 636,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 637, 638,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 639, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 640, 641,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 642, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 643, 644, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 645, 0,
	646, 383, 0, 384, 385, 386, 387, 388, 647, 648,
	649, 467, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 650, 651, 0, 652, 0, 401, 402, 0,
	653, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 654, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 0,
	463, 453, 0, 273, 0, 464, 465, 0, 655, 466,
	656, 468, 469, 0, 0, 470, 0, 0, 1231, 472,
	473, 474, 0, 0, 475, 476, 657, 0, 477, 0,
	658, 478, 479, 471, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 661, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	663, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 0, 531, 532, 533, 534, 535, 664, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 0,
	558, 559, 541, 542, 560, 561, 0, 562, 563, 564,
	565, 566, 567, 568, 665, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 666, 576, 577, 578,
	579, 667, 583, 584, 0, 585, 586, 0, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 668, 669, 670, 671, 0, 604, 0, 596,
	597, 598, 672, 599, 673, 0, 600, 601, 602, 603,
	0, 605, 606, 0, 0, 607, 608, 609, 611, 612,
	610, 613, 0, 614, 0, 0, 615, 616, 617, 674,
	675, 676, 268, 619, 618, 620, 677, 0, 621, 0,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 633, 634, 635,
	0, 300, 301, 636, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 645, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 0, 399, 650, 651, 0, 652,
	0, 401, 402, 0, 653, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 654, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 3458, 463, 453, 0, 273, 0, 464,
	465, 0, 655, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 0, 477, 0, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 0, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 0, 558, 559, 541, 542, 560, 561,
	0, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 0, 585,
	586, 0, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 668, 669, 670, 671,
	0, 604, 0, 596, 597, 598, 672, 599, 673, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 0, 614, 0, 0,
	615, 616, 617, 674, 675, 676, 0, 619, 618, 620,
	677, 3006, 621, 268, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 3005, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 273, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 0, 619, 618,
	620, 677, 2300, 621, 268, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 647, 648, 649, 467, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 650, 651,
	0, 652, 0, 401, 402, 0, 653, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 0, 463, 453, 0, 273,
	0, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 0, 477, 0, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 0, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 268, 619,
	618, 620, 677, 0, 621, 0, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 628, 629, 0, 291, 630, 292,
	631, 0, 632, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 633, 634, 635, 0, 300, 301, 636,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 637, 638,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 639, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 640, 641,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 642, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 643, 644, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 645, 0,
	646, 383, 0, 384, 385, 386, 387, 388, 647, 648,
	649, 467, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 650, 651, 0, 652, 0, 401, 402, 0,
	653, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 654, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 0,
	463, 453, 0, 273, 0, 464, 465, 0, 655, 466,
	656, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 0, 477, 0,
	658, 478, 479, 471, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 661, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	663, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 0, 531, 532, 533, 534, 535, 664, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 0,
	558, 559, 541, 542, 560, 561, 0, 562, 563, 564,
	565, 566, 567, 568, 665, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 666, 576, 577, 578,
	579, 667, 583, 584, 0, 585, 586, 0, 582, 573,
	2241, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 668, 669, 670, 671, 0, 604, 0, 596,
	597, 598, 672, 599, 673, 0, 600, 601, 602, 603,
	0, 605, 606, 0, 0, 607, 608, 609, 611, 612,
	610, 613, 0, 614, 0, 0, 615, 616, 617, 674,
	675, 676, 0, 619, 618, 620, 677, 2248, 621, 268,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 2247,
	648, 649, 467, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 0, 399, 650, 651, 0, 652, 0, 401, 402,
	0, 653, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	0, 463, 453, 0, 273, 0, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 0, 477,
	0, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 0, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 0, 619, 618, 620, 677, 2234, 621,
	268, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 633, 634, 635, 0, 300,
	301, 636, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	645, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	2236, 648, 649, 467, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 650, 651, 0, 652, 0, 401,
	402, 0, 653, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 654, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 0, 463, 453, 0, 273, 0, 464, 465, 0,
	655, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 0,
	477, 0, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 0, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 0, 558, 559, 541, 542, 560, 561, 0, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 672, 599, 673, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 0, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 268, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 2201, 648, 649, 467, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 650, 651,
	0, 652, 0, 401, 402, 0, 653, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 0, 463, 453, 0, 273,
	0, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 1231, 472, 473, 474, 0, 0,
	475, 476, 657, 0, 477, 0, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 0, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 0, 619,
	618, 620, 677, 1571, 621, 268, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 1570, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	273, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 0,
	619, 618, 620, 677, 1484, 621, 268, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 0, 399,
	650, 651, 0, 652, 0, 401, 402, 0, 653, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 0, 463, 453,
	0, 273, 0, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 0, 477, 0, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 0, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	0, 619, 618, 620, 677, 1477, 621, 268, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 1479, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 273, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 0, 619, 618, 620, 677, 1304, 621, 268, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 628, 629, 0, 291, 630, 292,
	631, 0, 632, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 633, 634, 635, 0, 300, 301, 636,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 637, 638,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 639, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 640, 641,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 642, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 643, 644, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 645, 0,
	646, 383, 0, 384, 385, 386, 387, 388, 1303, 648,
	649, 467, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 650, 651, 0, 652, 0, 401, 402, 0,
	653, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 654, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 0,
	463, 453, 0, 273, 0, 464, 465, 0, 655, 466,
	656, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 0, 477, 0,
	658, 478, 479, 471, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 661, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	663, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 0, 531, 532, 533, 534, 535, 664, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 0,
	558, 559, 541, 542, 560, 561, 0, 562, 563, 564,
	565, 566, 567, 568, 665, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 666, 576, 577, 578,
	579, 667, 583, 584, 0, 585, 586, 0, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 668, 669, 670, 671, 0, 604, 0, 596,
	597, 598, 672, 599, 673, 0, 600, 601, 602, 603,
	0, 605, 606, 0, 0, 607, 608, 609, 611, 612,
	610, 613, 0, 614, 0, 0, 615, 616, 617, 674,
	675, 676, 0, 619, 618, 620, 677, 1294, 621, 268,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 1293,
	648, 649, 467, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 0, 399, 650, 651, 0, 652, 0, 401, 402,
	0, 653, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	0, 463, 453, 0, 273, 0, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 0, 477,
	0, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 0, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 0, 619, 618, 620, 677, 1291, 621,
	268, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 633, 634, 635, 0, 300,
	301, 636, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	645, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	1290, 648, 649, 467, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 650, 651, 0, 652, 0, 401,
	402, 0, 653, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 654, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 0, 463, 453, 0, 273, 0, 464, 465, 0,
	655, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 0,
	477, 0, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 0, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 0, 558, 559, 541, 542, 560, 561, 0, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 672, 599, 673, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 0, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 0, 619, 618, 620, 677, 1286,
	621, 268, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 635, 0,
	300, 301, 636, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 1285, 648, 649, 467, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 0, 399, 650, 651, 0, 652, 0,
	401, 402, 0, 653, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 0, 463, 453, 0, 273, 0, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	0, 477, 0, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 0, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	556, 557, 0, 558, 559, 541, 542, 560, 561, 0,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 668, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 0, 619, 618, 620, 677,
	680, 621, 268, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 633, 634, 635,
	0, 300, 301, 636, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 645, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 0, 399, 650, 651, 0, 652,
	0, 401, 402, 0, 653, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 654, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 0, 463, 453, 0, 273, 0, 464,
	465, 0, 655, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 0, 477, 0, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 0, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 0, 558, 559, 541, 542, 560, 561,
	0, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 0, 585,
	586, 0, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 668, 669, 670, 671,
	0, 604, 0, 596, 597, 598, 672, 599, 673, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 0, 614, 0, 0,
	615, 616, 617, 674, 675, 676, 0, 619, 618, 620,
	677, 259, 621, 268, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 273, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 268, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 273, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 268, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 635, 0,
	300, 301, 636, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 702,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 703,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 647, 648, 649, 467, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 650, 651, 0, 652, 0,
	401, 402, 0, 653, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 0, 463, 453, 0, 0, 0, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	0, 477, 0, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 0, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 704, 553, 554, 552, 555,
	556, 557, 0, 558, 559, 541, 542, 560, 561, 0,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 668, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 268, 619, 618, 620, 677,
	0, 621, 0, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 2337, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 647, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	273, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 268,
	619, 618, 620, 677, 0, 621, 0, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 2335, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 647,
	648, 649, 467, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 0, 399, 650, 651, 0, 652, 0, 401, 402,
	0, 653, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	0, 463, 453, 0, 273, 0, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 0, 477,
	0, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 0, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 268, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 2333,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 273, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 268, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 2254, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 273, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 268, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 635, 0,
	300, 301, 636, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 2056, 648, 649, 467, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 0, 399, 650, 651, 0, 652, 0,
	401, 402, 0, 653, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 0, 463, 453, 0, 273, 0, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	0, 477, 0, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 0, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	556, 557, 0, 558, 559, 541, 542, 560, 561, 0,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 668, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 268, 619, 618, 620, 677,
	0, 621, 0, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 2050, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	273, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 0,
	619, 618, 620, 677, 886, 621, 268, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	650, 651, 0, 652, 885, 401, 402, 0, 653, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 0, 463, 453,
	0, 0, 0, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 0, 477, 0, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 0, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 884, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	268, 619, 618, 620, 677, 0, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 633, 634, 635, 0, 300,
	301, 636, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 0, 3061, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	645, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	647, 648, 649, 467, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 650, 651, 0, 652, 0, 401,
	402, 0, 653, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 654, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 0, 463, 453, 0, 0, 0, 464, 465, 0,
	655, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 0,
	477, 0, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 4199, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 0, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 0, 558, 559, 541, 542, 560, 561, 0, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 672, 599, 673, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 0, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 0, 619, 618, 620, 677, 764,
	621, 268, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 283, 284,
	1341, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 1339, 0,
	300, 301, 636, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 647, 648, 649, 467, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 650, 651, 0, 652, 0,
	401, 402, 0, 653, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 769, 0,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 0, 463, 453, 0, 0, 0, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	0, 477, 0, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 0, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	768, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	1342, 557, 0, 558, 559, 541, 542, 560, 561, 0,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 766, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 0, 619, 618, 620, 677,
	764, 621, 268, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 283,
	284, 1341, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 633, 634, 1339,
	0, 300, 301, 636, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 645, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 650, 651, 0, 652,
	0, 401, 402, 0, 653, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 654, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 769,
	0, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 0, 463, 453, 0, 0, 0, 464,
	465, 0, 655, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 0, 477, 0, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 0, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 768, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 1342, 557, 0, 558, 559, 541, 542, 560, 561,
	0, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 0, 585,
	586, 0, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 766, 669, 670, 671,
	0, 604, 0, 596, 1340, 598, 672, 599, 673, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 0, 614, 0, 0,
	615, 616, 617, 674, 675, 676, 0, 619, 618, 620,
	677, 689, 621, 268, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 688, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 0, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 687, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 0, 619, 618,
	620, 677, 0, 621, 268, 3048, 0, 0, 622, 623,
	678, 624, 625, 626, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 647, 648, 649, 467, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 650, 651,
	0, 652, 0, 401, 402, 0, 653, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 0, 463, 453, 0, 0,
	0, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 0, 477, 0, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 0, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 0, 619,
	618, 620, 677, 0, 621, 268, 4209, 0, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 647, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	0, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 268,
	619, 618, 620, 677, 0, 621, 0, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 647,
	648, 649, 467, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 650, 651, 0, 652, 0, 401, 402,
	0, 653, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	0, 463, 453, 0, 0, 0, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 0, 477,
	0, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	4484, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 0, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 268, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 0, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 4103, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 268, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 3870,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 0, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 268, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 627, 0, 2727, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 635, 0,
	300, 301, 636, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 647, 648, 649, 467, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 650, 651, 0, 652, 0,
	401, 402, 0, 653, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 0, 463, 453, 0, 0, 0, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	0, 477, 0, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 0, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	556, 557, 0, 558, 559, 541, 542, 560, 561, 0,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 668, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 0, 619, 618, 620, 677,
	0, 621, 268, 3048, 0, 0, 622, 623, 678, 624,
	625, 626, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 633, 634, 635,
	0, 300, 301, 636, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 645, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 647, 648, 649, 467, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 650, 651, 0, 652,
	0, 401, 402, 0, 653, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 654, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 0, 463, 453, 0, 0, 0, 464,
	465, 0, 655, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 3045, 0, 0, 475, 476,
	657, 0, 477, 0, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 0, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 0, 558, 559, 541, 542, 560, 561,
	0, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 0, 585,
	586, 0, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 668, 669, 670, 671,
	0, 604, 0, 596, 597, 598, 672, 599, 673, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 0, 614, 0, 0,
	615, 616, 617, 674, 675, 676, 268, 619, 618, 620,
	677, 0, 621, 0, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 274, 276, 275, 277, 278, 279, 280,
	2310, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	650, 651, 0, 652, 0, 401, 402, 0, 653, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 0, 463, 453,
	0, 0, 0, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 0, 477, 0, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 0, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	0, 619, 618, 620, 677, 2298, 621, 268, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 0, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 0, 619, 618, 620, 677, 764, 621, 268, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 628, 629, 0, 291, 630, 292,
	631, 0, 632, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 633, 634, 635, 0, 300, 757, 636,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 637, 638,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 639, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 640, 641,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 642, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 643, 644, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 645, 0,
	646, 383, 0, 384, 385, 386, 387, 388, 647, 648,
	649, 467, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	0, 399, 650, 651, 0, 652, 0, 401, 402, 0,
	653, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 654, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 769, 0, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 0,
	463, 453, 0, 0, 0, 464, 465, 0, 655, 466,
	656, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 0, 477, 0,
	658, 478, 479, 471, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 661, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	663, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 0, 531, 532, 533, 534, 535, 664, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 768, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 1604, 557, 0,
	558, 559, 541, 542, 560, 561, 0, 562, 563, 564,
	565, 566, 567, 568, 665, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 666, 576, 577, 578,
	579, 667, 583, 584, 0, 585, 586, 0, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 766, 669, 670, 671, 0, 604, 0, 596,
	597, 598, 672, 599, 673, 0, 600, 601, 602, 603,
	0, 605, 606, 0, 0, 607, 608, 609, 611, 612,
	610, 613, 0, 614, 0, 0, 615, 616, 617, 674,
	675, 676, 0, 619, 618, 620, 677, 1577, 621, 268,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 1576,
	648, 649, 467, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 650, 651, 0, 652, 0, 401, 402,
	0, 653, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	0, 463, 453, 0, 0, 0, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 0, 477,
	0, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 0, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 0, 619, 618, 620, 677, 1561, 621,
	268, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 633, 634, 635, 0, 300,
	301, 636, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	645, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	1559, 648, 649, 467, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 650, 651, 0, 652, 0, 401,
	402, 0, 653, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 654, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 0, 463, 453, 0, 0, 0, 464, 465, 0,
	655, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 0,
	477, 0, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 0, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 0, 558, 559, 541, 542, 560, 561, 0, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 672, 599, 673, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 0, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 0, 619, 618, 620, 677, 1554,
	621, 268, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 635, 0,
	300, 301, 636, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 647, 648, 649, 467, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 650, 651, 0, 652, 0,
	401, 402, 0, 653, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 0, 463, 453, 0, 0, 0, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	0, 477, 0, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 0, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	556, 557, 0, 558, 559, 541, 542, 560, 561, 0,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 668, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 0, 619, 618, 620, 677,
	1531, 621, 268, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 628, 629,
	0, 291, 630, 292, 631, 0, 632, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 633, 634, 635,
	0, 300, 301, 636, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 637, 638, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 639, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 640, 641, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 642, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 643,
	644, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 645, 0, 646, 383, 0, 384, 385, 386,
	387, 388, 1529, 648, 649, 467, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 650, 651, 0, 652,
	0, 401, 402, 0, 653, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 654, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 457, 459, 460, 455, 456, 458,
	461, 462, 454, 0, 463, 453, 0, 0, 0, 464,
	465, 0, 655, 466, 656, 468, 469, 0, 0, 470,
	0, 0, 0, 472, 473, 474, 0, 0, 475, 476,
	657, 0, 477, 0, 658, 478, 479, 471, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 489, 490,
	659, 491, 492, 493, 660, 494, 495, 496, 661, 497,
	662, 498, 499, 0, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 663, 509, 511, 510, 512, 0,
	513, 0, 514, 515, 516, 0, 0, 0, 0, 517,
	0, 519, 520, 521, 522, 518, 523, 524, 525, 526,
	527, 0, 528, 529, 530, 0, 531, 532, 533, 534,
	535, 664, 536, 0, 537, 538, 544, 545, 546, 539,
	540, 547, 548, 549, 550, 551, 0, 553, 554, 552,
	555, 556, 557, 0, 558, 559, 541, 542, 560, 561,
	0, 562, 563, 564, 565, 566, 567, 568, 665, 0,
	569, 0, 570, 571, 572, 574, 543, 575, 580, 581,
	666, 576, 577, 578, 579, 667, 583, 584, 0, 585,
	586, 0, 582, 573, 0, 587, 588, 589, 590, 591,
	592, 593, 357, 594, 0, 595, 668, 669, 670, 671,
	0, 604, 0, 596, 597, 598, 672, 599, 673, 0,
	600, 601, 602, 603, 0, 605, 606, 0, 0, 607,
	608, 609, 611, 612, 610, 613, 0, 614, 0, 0,
	615, 616, 617, 674, 675, 676, 0, 619, 618, 620,
	677, 1489, 621, 268, 0, 0, 0, 622, 623, 678,
	624, 625, 626, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 0, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 0, 619, 618,
	620, 677, 1472, 621, 268, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 647, 648, 649, 467, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 650, 651,
	0, 652, 0, 401, 402, 0, 653, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 0, 463, 453, 0, 0,
	0, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 0, 477, 0, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 0, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 0, 619,
	618, 620, 677, 1309, 621, 268, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 1308, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	0, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 0,
	619, 618, 620, 677, 1300, 621, 268, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 1299, 648, 649, 467,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	650, 651, 0, 652, 0, 401, 402, 0, 653, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 0, 463, 453,
	0, 0, 0, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 0, 477, 0, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	544, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 0, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	268, 619, 618, 620, 677, 0, 621, 0, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 274, 276, 275,
	277, 278, 279, 280, 1253, 281, 282, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 628, 629, 0, 291,
	630, 292, 631, 0, 632, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 633, 634, 635, 0, 300,
	301, 636, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	637, 638, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 639,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	640, 641, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 642, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 643, 644, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	645, 0, 646, 383, 0, 384, 385, 386, 387, 388,
	647, 648, 649, 467, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 650, 651, 0, 652, 0, 401,
	402, 0, 653, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 654, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 457, 459, 460, 455, 456, 458, 461, 462,
	454, 0, 463, 453, 0, 0, 0, 464, 465, 0,
	655, 466, 656, 468, 469, 0, 0, 470, 0, 0,
	0, 472, 473, 474, 0, 0, 475, 476, 657, 0,
	477, 0, 658, 478, 479, 471, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 489, 490, 659, 491,
	492, 493, 660, 494, 495, 496, 661, 497, 662, 498,
	499, 0, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 663, 509, 511, 510, 512, 0, 513, 0,
	514, 515, 516, 0, 0, 0, 0, 517, 0, 519,
	520, 521, 522, 518, 523, 524, 525, 526, 527, 0,
	528, 529, 530, 0, 531, 532, 533, 534, 535, 664,
	536, 0, 537, 538, 544, 545, 546, 539, 540, 547,
	548, 549, 550, 551, 0, 553, 554, 552, 555, 556,
	557, 0, 558, 559, 541, 542, 560, 561, 0, 562,
	563, 564, 565, 566, 567, 568, 665, 0, 569, 0,
	570, 571, 572, 574, 543, 575, 580, 581, 666, 576,
	577, 578, 579, 667, 583, 584, 0, 585, 586, 0,
	582, 573, 0, 587, 588, 589, 590, 591, 592, 593,
	357, 594, 0, 595, 668, 669, 670, 671, 0, 604,
	0, 596, 597, 598, 672, 599, 673, 0, 600, 601,
	602, 603, 0, 605, 606, 0, 0, 607, 608, 609,
	611, 612, 610, 613, 0, 614, 0, 0, 615, 616,
	617, 674, 675, 676, 268, 619, 618, 620, 677, 0,
	621, 0, 0, 0, 0, 622, 623, 678, 624, 625,
	626, 274, 276, 275, 277, 278, 279, 280, 774, 281,
	282, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	628, 629, 0, 291, 630, 292, 631, 0, 632, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 633,
	634, 635, 0, 300, 301, 636, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 637, 638, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 639, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 640, 641, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 642, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 643, 644, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 645, 0, 646, 383, 0, 384,
	385, 386, 387, 388, 647, 648, 649, 467, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 650, 651,
	0, 652, 0, 401, 402, 0, 653, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 654, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 457, 459, 460, 455,
	456, 458, 461, 462, 454, 0, 463, 453, 0, 0,
	0, 464, 465, 0, 655, 466, 656, 468, 469, 0,
	0, 470, 0, 0, 0, 472, 473, 474, 0, 0,
	475, 476, 657, 0, 477, 0, 658, 478, 479, 471,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	489, 490, 659, 491, 492, 493, 660, 494, 495, 496,
	661, 497, 662, 498, 499, 0, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 663, 509, 511, 510,
	512, 0, 513, 0, 514, 515, 516, 0, 0, 0,
	0, 517, 0, 519, 520, 521, 522, 518, 523, 524,
	525, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 534, 535, 664, 536, 0, 537, 538, 544, 545,
	546, 539, 540, 547, 548, 549, 550, 551, 0, 553,
	554, 552, 555, 556, 557, 0, 558, 559, 541, 542,
	560, 561, 0, 562, 563, 564, 565, 566, 567, 568,
	665, 0, 569, 0, 570, 571, 572, 574, 543, 575,
	580, 581, 666, 576, 577, 578, 579, 667, 583, 584,
	0, 585, 586, 0, 582, 573, 0, 587, 588, 589,
	590, 591, 592, 593, 357, 594, 0, 595, 668, 669,
	670, 671, 0, 604, 0, 596, 597, 598, 672, 599,
	673, 0, 600, 601, 602, 603, 0, 605, 606, 0,
	0, 607, 608, 609, 611, 612, 610, 613, 0, 614,
	0, 0, 615, 616, 617, 674, 675, 676, 0, 619,
	618, 620, 677, 764, 621, 268, 0, 0, 0, 622,
	623, 678, 624, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 757, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 755, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 647, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	756, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 769, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	0, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 758, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 768, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 759, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 766,
	669, 670, 671, 0, 604, 0, 596, 761, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 0,
	619, 618, 620, 677, 749, 621, 268, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 628, 629, 0, 291, 630, 292, 631, 0,
	632, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 633, 634, 635, 0, 300, 301, 636, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 637, 638, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 639, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 640, 641, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 642,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 643, 644, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 645, 0, 646, 383,
	0, 384, 385, 386, 387, 388, 647, 648, 649, 467,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	650, 651, 0, 652, 0, 401, 402, 0, 653, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	654, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 457, 459,
	460, 455, 456, 458, 461, 462, 454, 0, 463, 453,
	0, 0, 0, 464, 465, 0, 655, 466, 656, 468,
	469, 0, 0, 470, 0, 0, 0, 472, 473, 474,
	0, 0, 475, 476, 657, 0, 477, 0, 658, 478,
	479, 471, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 489, 490, 659, 491, 492, 493, 660, 494,
	495, 496, 661, 497, 662, 498, 499, 0, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 663, 509,
	511, 510, 512, 0, 513, 0, 514, 515, 516, 0,
	0, 0, 0, 517, 0, 519, 520, 521, 522, 518,
	523, 524, 525, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 534, 535, 664, 536, 0, 537, 538,
	750, 545, 546, 539, 540, 547, 548, 549, 550, 551,
	0, 553, 554, 552, 555, 556, 557, 0, 558, 559,
	541, 542, 560, 561, 0, 562, 563, 564, 565, 566,
	567, 568, 665, 0, 569, 0, 570, 571, 572, 574,
	543, 575, 580, 581, 666, 576, 577, 578, 579, 667,
	583, 584, 0, 585, 586, 0, 582, 573, 0, 587,
	588, 589, 590, 591, 592, 593, 357, 594, 0, 595,
	668, 669, 670, 671, 0, 604, 0, 596, 597, 598,
	672, 599, 673, 0, 600, 601, 602, 603, 0, 605,
	606, 0, 0, 607, 608, 609, 611, 612, 610, 613,
	0, 614, 0, 0, 615, 616, 617, 674, 675, 676,
	0, 619, 618, 620, 677, 712, 621, 268, 0, 0,
	0, 622, 623, 678, 624, 625, 626, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 0, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 0, 619, 618, 620, 677, 706, 621, 268, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 628, 629, 0, 291, 630, 292,
	631, 0, 632, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 633, 634, 635, 0, 300, 301, 636,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 637, 638,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 639, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 640, 641,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 642, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 643, 644, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 645, 0,
	646, 383, 0, 384, 385, 386, 387, 388, 647, 648,
	649, 467, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	0, 399, 650, 651, 0, 652, 0, 401, 402, 0,
	653, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 654, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	457, 459, 460, 455, 456, 458, 461, 462, 454, 0,
	463, 453, 0, 0, 0, 464, 465, 0, 655, 466,
	656, 468, 469, 0, 0, 470, 0, 0, 0, 472,
	473, 474, 0, 0, 475, 476, 657, 0, 477, 0,
	658, 478, 479, 471, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 489, 490, 659, 491, 492, 493,
	660, 494, 495, 496, 661, 497, 662, 498, 499, 0,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	663, 509, 511, 510, 512, 0, 513, 0, 514, 515,
	516, 0, 0, 0, 0, 517, 0, 519, 520, 521,
	522, 518, 523, 524, 525, 526, 527, 0, 528, 529,
	530, 0, 531, 532, 533, 534, 535, 664, 536, 0,
	537, 538, 544, 545, 546, 539, 540, 547, 548, 549,
	550, 551, 0, 553, 554, 552, 555, 556, 557, 0,
	558, 559, 541, 542, 560, 561, 0, 562, 563, 564,
	565, 566, 567, 568, 665, 0, 569, 0, 570, 571,
	572, 574, 543, 575, 580, 581, 666, 576, 577, 578,
	579, 667, 583, 584, 0, 585, 586, 0, 582, 573,
	0, 587, 588, 589, 590, 591, 592, 593, 357, 594,
	0, 595, 668, 669, 670, 671, 0, 604, 0, 596,
	597, 598, 672, 599, 673, 0, 600, 601, 602, 603,
	0, 605, 606, 0, 0, 607, 608, 609, 611, 612,
	610, 613, 0, 614, 0, 0, 615, 616, 617, 674,
	675, 676, 0, 619, 618, 620, 677, 684, 621, 268,
	0, 0, 0, 622, 623, 678, 624, 625, 626, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 647,
	648, 649, 467, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 650, 651, 0, 652, 0, 401, 402,
	0, 653, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	0, 463, 453, 0, 0, 0, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 0, 477,
	0, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 0, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 268, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 0, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 268, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 3572, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 0, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 268, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 635, 0,
	300, 301, 636, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 647, 648, 649, 467, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 650, 651, 0, 652, 0,
	401, 402, 0, 653, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 0, 463, 453, 0, 0, 0, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	0, 477, 0, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 0, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	768, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	556, 557, 0, 558, 559, 541, 542, 560, 561, 0,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 766, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 268, 619, 618, 620, 677,
	0, 621, 0, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 3498, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	0, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 268,
	619, 618, 620, 677, 0, 621, 0, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 3476,
	648, 649, 467, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 650, 651, 0, 652, 0, 401, 402,
	0, 653, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	0, 463, 453, 0, 0, 0, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 0, 477,
	0, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 0, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 268, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 3473, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 0, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 544, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 268, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 3423, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 0, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 558,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 268, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 635, 0,
	300, 301, 636, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 3421, 648, 649, 467, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 650, 651, 0, 652, 0,
	401, 402, 0, 653, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 0, 463, 453, 0, 0, 0, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	0, 477, 0, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 0, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	556, 557, 0, 558, 559, 541, 542, 560, 561, 0,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 668, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 268, 619, 618, 620, 677,
	0, 621, 0, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 3406, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	0, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 511,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 268,
	619, 618, 620, 677, 0, 621, 0, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 383, 0, 384, 385, 386, 387, 388, 3016,
	648, 649, 467, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 650, 651, 0, 652, 0, 401, 402,
	0, 653, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	0, 463, 453, 0, 0, 0, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 0, 477,
	0, 658, 478, 479, 471, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 534, 535, 664, 536,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 0, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 268, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 628,
	629, 0, 291, 630, 292, 631, 0, 632, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 633, 634,
	635, 0, 300, 301, 636, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 637, 638, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 639, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 640, 641, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 642, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	643, 644, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 645, 0, 646, 383, 0, 384, 385,
	386, 387, 388, 647, 648, 649, 467, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 650, 651, 0,
	652, 0, 401, 402, 0, 653, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 654, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 457, 459, 460, 455, 456,
	458, 461, 462, 454, 0, 463, 453, 0, 0, 0,
	464, 465, 0, 655, 466, 656, 468, 469, 0, 0,
	470, 0, 0, 0, 472, 473, 474, 0, 0, 475,
	476, 657, 0, 477, 0, 658, 478, 479, 471, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 0, 489,
	490, 659, 491, 492, 493, 660, 494, 495, 496, 661,
	497, 662, 498, 499, 0, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 663, 509, 511, 510, 512,
	0, 513, 0, 514, 515, 516, 0, 0, 0, 0,
	517, 0, 519, 520, 521, 522, 518, 523, 524, 525,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	534, 535, 664, 536, 0, 537, 538, 750, 545, 546,
	539, 540, 547, 548, 549, 550, 551, 0, 553, 554,
	552, 555, 556, 557, 0, 558, 559, 541, 542, 560,
	561, 0, 562, 563, 564, 565, 566, 567, 568, 665,
	0, 569, 0, 570, 571, 572, 574, 543, 575, 580,
	581, 666, 576, 577, 578, 579, 667, 583, 584, 0,
	585, 586, 0, 582, 573, 0, 587, 588, 589, 590,
	591, 592, 593, 357, 594, 0, 595, 668, 669, 670,
	671, 0, 604, 0, 596, 597, 598, 672, 599, 673,
	0, 600, 601, 602, 603, 0, 605, 606, 0, 0,
	607, 608, 609, 611, 612, 610, 613, 0, 614, 0,
	0, 615, 616, 617, 674, 675, 676, 268, 619, 618,
	620, 677, 0, 621, 0, 0, 0, 0, 622, 623,
	678, 624, 625, 626, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 627,
	0, 2272, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 628, 629, 0, 291, 630, 292, 631,
	0, 632, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 633, 634, 635, 0, 300, 301, 636, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 637, 638, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 639, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 640, 641, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	642, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 643, 644, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 645, 0, 646,
	383, 0, 384, 385, 386, 387, 388, 647, 648, 649,
	467, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 650, 651, 0, 652, 0, 401, 402, 0, 653,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 654, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 457,
	459, 460, 455, 456, 458, 461, 462, 454, 0, 463,
	453, 0, 0, 0, 464, 465, 0, 655, 466, 656,
	468, 469, 0, 0, 470, 0, 0, 0, 472, 473,
	474, 0, 0, 475, 476, 657, 0, 477, 0, 658,
	478, 479, 471, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 489, 490, 659, 491, 492, 493, 660,
	494, 495, 496, 661, 497, 662, 498, 499, 0, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 663,
	509, 511, 510, 512, 0, 513, 0, 514, 515, 516,
	0, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	518, 523, 524, 525, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 534, 535, 664, 536, 0, 537,
	538, 544, 545, 546, 539, 540, 547, 548, 549, 550,
	551, 0, 553, 554, 552, 555, 556, 557, 0, 0,
	559, 541, 542, 560, 561, 0, 562, 563, 564, 565,
	566, 567, 568, 665, 0, 569, 0, 570, 571, 572,
	574, 543, 575, 580, 581, 666, 576, 577, 578, 579,
	667, 583, 584, 0, 585, 586, 0, 582, 573, 0,
	587, 588, 589, 590, 591, 592, 593, 357, 594, 0,
	595, 668, 669, 670, 671, 0, 604, 0, 596, 597,
	598, 672, 599, 673, 0, 600, 601, 602, 603, 0,
	605, 606, 0, 0, 607, 608, 609, 611, 612, 610,
	613, 0, 614, 0, 0, 615, 616, 617, 674, 675,
	676, 268, 619, 618, 620, 677, 0, 621, 0, 0,
	0, 0, 622, 623, 678, 624, 625, 626, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 628, 629, 0,
	291, 630, 292, 631, 0, 632, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 633, 634, 635, 0,
	300, 301, 636, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 637, 638, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	639, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 640, 641, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 642, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 643, 644,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 645, 0, 646, 383, 0, 384, 385, 386, 387,
	388, 1271, 648, 649, 467, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 650, 651, 0, 652, 0,
	401, 402, 0, 653, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 654, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 457, 459, 460, 455, 456, 458, 461,
	462, 454, 0, 463, 453, 0, 0, 0, 464, 465,
	0, 655, 466, 656, 468, 469, 0, 0, 470, 0,
	0, 0, 472, 473, 474, 0, 0, 475, 476, 657,
	0, 477, 0, 658, 478, 479, 471, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 489, 490, 659,
	491, 492, 493, 660, 494, 495, 496, 661, 497, 662,
	498, 499, 0, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 663, 509, 511, 510, 512, 0, 513,
	0, 514, 515, 516, 0, 0, 0, 0, 517, 0,
	519, 520, 521, 522, 518, 523, 524, 525, 526, 527,
	0, 528, 529, 530, 0, 531, 532, 533, 534, 535,
	664, 536, 0, 537, 538, 544, 545, 546, 539, 540,
	547, 548, 549, 550, 551, 0, 553, 554, 552, 555,
	556, 557, 0, 558, 559, 541, 542, 560, 561, 0,
	562, 563, 564, 565, 566, 567, 568, 665, 0, 569,
	0, 570, 571, 572, 574, 543, 575, 580, 581, 666,
	576, 577, 578, 579, 667, 583, 584, 0, 585, 586,
	0, 582, 573, 0, 587, 588, 589, 590, 591, 592,
	593, 357, 594, 0, 595, 668, 669, 670, 671, 0,
	604, 0, 596, 597, 598, 672, 599, 673, 0, 600,
	601, 602, 603, 0, 605, 606, 0, 0, 607, 608,
	609, 611, 612, 610, 613, 0, 614, 0, 0, 615,
	616, 617, 674, 675, 676, 268, 619, 618, 620, 677,
	0, 621, 0, 0, 0, 0, 622, 623, 678, 624,
	625, 626, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 628, 629, 0, 291, 630, 292, 631, 0, 632,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	633, 634, 635, 0, 300, 301, 636, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 637, 638, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 639, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 640, 641, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 642, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 643, 644, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 645, 0, 646, 383, 0,
	384, 385, 386, 387, 388, 647, 648, 649, 467, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 650,
	651, 0, 652, 0, 401, 402, 0, 653, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 654,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 457, 459, 460,
	455, 456, 458, 461, 462, 454, 0, 463, 453, 0,
	0, 0, 464, 465, 0, 655, 466, 656, 468, 469,
	0, 0, 470, 0, 0, 0, 472, 473, 474, 0,
	0, 475, 476, 657, 0, 477, 0, 658, 478, 479,
	471, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 489, 490, 659, 491, 492, 493, 660, 494, 495,
	496, 661, 497, 662, 498, 499, 0, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 663, 509, 1204,
	510, 512, 0, 513, 0, 514, 515, 516, 0, 0,
	0, 0, 517, 0, 519, 520, 521, 522, 518, 523,
	524, 525, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 534, 535, 664, 536, 0, 537, 538, 544,
	545, 546, 539, 540, 547, 548, 549, 550, 551, 0,
	553, 554, 552, 555, 556, 557, 0, 558, 559, 541,
	542, 560, 561, 0, 562, 563, 564, 565, 566, 567,
	568, 665, 0, 569, 0, 570, 571, 572, 574, 543,
	575, 580, 581, 666, 576, 577, 578, 579, 667, 583,
	584, 0, 585, 586, 0, 582, 573, 0, 587, 588,
	589, 590, 591, 592, 593, 357, 594, 0, 595, 668,
	669, 670, 671, 0, 604, 0, 596, 597, 598, 672,
	599, 673, 0, 600, 601, 602, 603, 0, 605, 606,
	0, 0, 607, 608, 609, 611, 612, 610, 613, 0,
	614, 0, 0, 615, 616, 617, 674, 675, 676, 268,
	619, 618, 620, 677, 0, 621, 0, 0, 0, 0,
	622, 623, 678, 624, 625, 626, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 628, 629, 0, 291, 630,
	292, 631, 0, 632, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 633, 634, 635, 0, 300, 301,
	636, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 637,
	638, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 639, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 640,
	641, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 642, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 643, 644, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 645,
	0, 646, 0, 0, 384, 385, 386, 387, 388, 647,
	648, 649, 467, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 650, 651, 0, 652, 0, 401, 402,
	0, 653, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 654, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 457, 459, 460, 455, 456, 458, 461, 462, 454,
	0, 463, 453, 0, 0, 0, 464, 465, 0, 655,
	466, 656, 468, 469, 0, 0, 470, 0, 0, 0,
	472, 473, 474, 0, 0, 475, 476, 657, 0, 477,
	0, 658, 478, 479, 471, 480, 481, 0, 483, 484,
	485, 486, 487, 488, 0, 489, 490, 659, 491, 492,
	493, 660, 494, 495, 496, 661, 497, 662, 498, 499,
	0, 500, 501, 0, 502, 503, 504, 505, 0, 507,
	508, 663, 509, 511, 510, 512, 0, 513, 0, 514,
	515, 516, 0, 0, 0, 0, 517, 0, 519, 520,
	521, 522, 518, 523, 524, 525, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 534, 535, 664, 0,
	0, 537, 538, 544, 545, 546, 539, 540, 547, 548,
	549, 550, 551, 0, 553, 554, 552, 555, 556, 557,
	0, 558, 559, 541, 542, 560, 561, 0, 562, 563,
	564, 565, 566, 567, 568, 665, 0, 569, 0, 570,
	571, 572, 574, 543, 575, 580, 581, 666, 576, 577,
	578, 579, 667, 583, 584, 0, 585, 586, 0, 582,
	573, 0, 587, 588, 589, 590, 591, 592, 593, 357,
	594, 0, 595, 668, 669, 670, 671, 0, 604, 0,
	596, 597, 598, 672, 599, 673, 0, 600, 601, 602,
	603, 0, 605, 606, 0, 0, 607, 608, 609, 611,
	612, 610, 613, 0, 614, 0, 0, 615, 616, 617,
	674, 675, 676, 0, 619, 618, 620, 677, 0, 621,
	0, 0, 0, 0, 622, 623, 678, 624, 625, 626,
	1772, 1773, 0, 1805, 1806, 1807, 1816, 1817, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 1803, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 1772, 1773, 1774, 1805, 1806, 1807, 1816,
	1817, 1818, 0, 0, 0, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1809, 1803, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1799, 1800, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 1802, 1804, 0,
	0, 0, 1797, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 1780, 0, 1819, 0, 1820, 0, 0, 0,
	0, 0, 0, 1789, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 1823, 0, 0, 1795, 0, 0, 0,
	1802, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 1820,
	0, 0, 0, 0, 0, 0, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 1773, 0, 1805,
	1806, 1807, 1816, 1817, 1818, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 0, 0, 1809, 1803,
	0, 0, 0, 0, 1801, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 1814, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 1786, 1787, 1793, 1815, 1792, 1788, 0, 1785,
	1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782, 0, 0,
	0, 0, 4505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 1798, 1799, 1800, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1793, 1815, 1792,
	1788, 0, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781,
	1782, 0, 0, 1813, 0, 4468, 1823, 0, 0, 0,
	0, 0, 0, 1802, 1804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 1820, 0, 0, 0, 0, 0, 0, 1789,
	1790, 0, 0, 0, 0, 1772, 1773, 0, 1805, 1806,
	1807, 1816, 1817, 1818, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 1803, 0,
	0, 0, 1795, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 1773, 0, 1805, 1806, 1807, 1816,
	1817, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 1803, 1801, 0, 0,
	0, 0, 0, 1775, 1797, 1798, 1799, 1800, 0, 0,
	0, 0, 1822, 0, 1780, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 1794, 0,
	0, 0, 1813, 0, 0, 1823, 0, 1791, 0, 0,
	0, 0, 1802, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1819,
	0, 1820, 0, 0, 0, 0, 0, 0, 1789, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 1786, 1787,
	1793, 1815, 1792, 1788, 1821, 1785, 1783, 1784, 1776, 1777,
	1778, 1779, 1781, 1782, 0, 0, 0, 0, 4467, 0,
	1813, 0, 1810, 1823, 0, 0, 0, 0, 0, 0,
	1802, 1804, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 1820,
	0, 0, 0, 0, 0, 0, 1789, 1790, 0, 0,
	0, 0, 1772, 1773, 0, 1805, 1806, 1807, 1816, 1817,
	1818, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 1803, 1801, 0, 0, 1795,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 1821, 0, 0, 0, 1814, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 1797, 1798, 1799, 1800, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 1796, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1793,
	1815, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778,
	1779, 1781, 1782, 0, 1814, 0, 0, 4284, 0, 1813,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 1802,
	1804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1819, 0, 1820, 0,
	0, 0, 0, 0, 0, 1789, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1793, 1815, 1792,
	1788, 1821, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781,
	1782, 0, 0, 0, 0, 4122, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1773, 0, 1805, 1806,
	1807, 1816, 1817, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 1803, 0,
	0, 0, 0, 1801, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 1772, 1773,
	1774, 1805, 1806, 1807, 1816, 1817, 1818, 0, 0, 0,
	1794, 0, 0, 1814, 0, 0, 0, 0, 0, 1791,
	1809, 1803, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1799, 1800, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 1786, 1787, 1793, 1815, 1792, 1788,
	0, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782,
	0, 0, 1813, 0, 4056, 1823, 0, 0, 0, 0,
	0, 0, 1802, 1804, 0, 0, 0, 1797, 1798, 1799,
	1800, 0, 0, 0, 0, 0, 0, 1780, 0, 1819,
	0, 1820, 0, 0, 0, 0, 0, 0, 1789, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 1823, 0,
	0, 1795, 0, 0, 0, 1802, 1804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 1820, 0, 0, 0, 0, 0,
	0, 1789, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 1773, 0, 1805, 1806, 1807, 1816, 1817, 1818,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 1809, 1803, 0, 0, 0, 0, 1801,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 1814,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1793,
	1815, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778,
	1779, 1781, 1782, 0, 0, 0, 0, 4055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1798, 1799, 1800, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	1786, 1787, 1793, 1815, 1792, 1788, 0, 1785, 1783, 1784,
	1776, 1777, 1778, 1779, 1781, 1782, 0, 0, 1813, 0,
	4054, 1823, 0, 0, 0, 0, 0, 0, 1802, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 1820, 0, 0,
	0, 0, 0, 0, 1789, 1790, 0, 0, 0, 0,
	1772, 1773, 0, 1805, 1806, 1807, 1816, 1817, 1818, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 1803, 0, 0, 0, 1795, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 1773,
	0, 1805, 1806, 1807, 1816, 1817, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 1803, 1801, 0, 0, 0, 0, 0, 1775, 1797,
	1798, 1799, 1800, 0, 0, 0, 0, 1822, 0, 1780,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1794, 0, 0, 0, 1813, 0, 0,
	1823, 0, 1791, 0, 0, 0, 0, 1802, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 1819, 0, 1820, 0, 0, 0,
	0, 0, 0, 1789, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1798, 1799,
	1800, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 1786, 1787, 1793, 1815, 1792, 1788, 1821,
	1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782, 0,
	0, 0, 0, 3716, 0, 1813, 0, 1810, 1823, 0,
	0, 0, 0, 0, 0, 1802, 1804, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 1820, 0, 0, 0, 0, 0,
	0, 1789, 1790, 0, 0, 0, 0, 1772, 1773, 0,
	1805, 1806, 1807, 1816, 1817, 1818, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	1803, 1801, 0, 0, 1795, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 1821, 0, 0,
	0, 1814, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 1797, 1798, 1799, 1800,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 1796, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 1786, 1787, 1793, 1815, 1792, 1788, 0, 1785,
	1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782, 0, 1814,
	0, 0, 3220, 0, 1813, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 1802, 1804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1819, 0, 1820, 0, 0, 0, 0, 0, 0,
	1789, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	1786, 1787, 1793, 1815, 1792, 1788, 1821, 1785, 1783, 1784,
	1776, 1777, 1778, 1779, 1781, 1782, 0, 0, 0, 0,
	3219, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 1773, 0, 1805, 1806, 1807, 1816, 1817, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 1803, 0, 0, 0, 0, 1801, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 1772, 1773, 1774, 1805, 1806, 1807, 1816,
	1817, 1818, 0, 0, 0, 1794, 0, 0, 1814, 0,
	0, 0, 0, 0, 1791, 1809, 1803, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1799, 1800, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 1786,
	1787, 1793, 1815, 1792, 1788, 0, 1785, 1783, 1784, 1776,
	1777, 1778, 1779, 1781, 1782, 0, 0, 1813, 0, 3218,
	1823, 0, 0, 0, 0, 0, 0, 1802, 1804, 0,
	0, 0, 1797, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 1780, 0, 1819, 0, 1820, 0, 0, 0,
	0, 0, 0, 1789, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 1823, 0, 0, 1795, 0, 0, 0,
	1802, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 1820,
	0, 0, 0, 0, 0, 0, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1773, 0, 1805, 1806,
	1807, 1816, 1817, 1818, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 0, 1809, 1803, 0,
	0, 0, 0, 0, 1801, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 1796, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 0, 0, 1814, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 1786, 1787, 1793, 1815, 1792, 1788, 0, 1785,
	1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782, 0, 0,
	0, 0, 3217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1799, 1800, 0, 0,
	0, 0, 0, 0, 1780, 4737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1793, 1815, 1792,
	1788, 0, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781,
	1782, 0, 1813, 3182, 0, 1823, 0, 0, 0, 0,
	0, 0, 1802, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 1820, 0, 0, 0, 0, 0, 0, 1789, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 1773, 1811, 1805, 1806, 1807,
	1816, 1817, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 1809, 1803, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 1821, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 1810, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 1773, 0, 1805, 1806, 1807, 1816, 1817,
	1818, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 1809, 1803, 0, 0, 0, 0,
	3153, 0, 1775, 1797, 1798, 1799, 1800, 0, 0, 1796,
	0, 1822, 0, 1780, 0, 3282, 0, 0, 0, 3281,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 1814, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 1813, 0, 0, 1823, 0, 1791, 0, 0, 0,
	0, 1802, 1804, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	1820, 0, 0, 0, 0, 0, 0, 1789, 1790, 0,
	0, 0, 0, 0, 0, 3154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1798, 1799, 1800, 0, 0, 0, 0, 1812,
	0, 1780, 0, 0, 0, 0, 0, 1786, 1787, 1793,
	1815, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778,
	1779, 1781, 1782, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 1810, 1823, 0, 0, 0, 0, 0, 0, 1802,
	1804, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 1820, 0,
	0, 0, 0, 0, 0, 1789, 1790, 0, 0, 0,
	0, 0, 0, 0, 2700, 0, 0, 0, 0, 0,
	0, 1772, 1773, 1811, 1805, 1806, 1807, 1816, 1817, 1818,
	0, 0, 0, 0, 0, 1801, 0, 0, 1795, 0,
	0, 0, 0, 1809, 1803, 0, 0, 0, 2699, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 1796, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 1821, 0, 0, 0, 1814, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 1810,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1798, 1799, 1800, 0, 0, 1796, 0, 1812, 0,
	1780, 0, 0, 0, 0, 0, 1786, 1787, 1793, 1815,
	1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778, 1779,
	1781, 1782, 0, 1814, 0, 0, 0, 0, 0, 1772,
	1773, 0, 1805, 1806, 1807, 1816, 1817, 1818, 1813, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 1802, 1804,
	0, 1809, 1803, 0, 1827, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 1819, 0, 1820, 1822, 0,
	0, 0, 0, 0, 1789, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 1811, 0, 1774, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 0, 0, 1795, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 1786, 1787, 1793, 1815, 1792, 1788,
	0, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1799, 1800, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 1773, 0, 1805, 1806, 1807, 1816, 1817, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 1809, 1803, 0, 1813, 0, 0, 1823,
	0, 1775, 0, 0, 0, 0, 1802, 1804, 0, 0,
	1822, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 1820, 0, 1828, 0, 0,
	0, 0, 1789, 1790, 0, 0, 1774, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 1794, 0, 0, 0,
	1811, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1058, 0, 0,
	1797, 1798, 1799, 1800, 0, 0, 0, 1825, 0, 0,
	1780, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 1786, 1787, 1793, 1815, 1792, 1788, 0,
	1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782, 1772,
	1773, 0, 1805, 1806, 1807, 1816, 1817, 1818, 1813, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 1802, 1804,
	1801, 1809, 1803, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 1819, 0, 1820, 1822, 0,
	0, 0, 0, 1796, 1789, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 1811, 0, 1774, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 1794, 0, 0, 1795, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1799, 1800, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 1812, 3288, 0, 0, 0, 0, 0,
	0, 1786, 1787, 1793, 1815, 1792, 1788, 0, 1785, 1783,
	1784, 1776, 1777, 1778, 1779, 1781, 1782, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 1813, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 1802, 1804, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 1820, 0, 0, 0, 0,
	0, 0, 1789, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 1772, 1773,
	1811, 1805, 1806, 1807, 1816, 1817, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	1809, 1803, 0, 1827, 0, 3283, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 3697, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 1821, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 0, 0, 1810, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 1786, 1787, 1793, 1815, 1792, 1788, 0,
	1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781, 1782, 0,
	0, 0, 0, 0, 0, 0, 1772, 1773, 0, 1805,
	1806, 1807, 1816, 1817, 1818, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 1809, 1803,
	0, 0, 0, 0, 0, 0, 1775, 1797, 1798, 1799,
	1800, 0, 0, 1796, 0, 1822, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	1814, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 1813, 0, 0, 1823, 0,
	1791, 0, 0, 0, 0, 1802, 1804, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 1820, 0, 0, 0, 0, 0,
	0, 1789, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 1798, 1799, 1800, 0,
	0, 0, 0, 1812, 0, 1780, 0, 0, 0, 0,
	0, 1786, 1787, 1793, 1815, 1792, 1788, 0, 1785, 1783,
	1784, 1776, 1777, 1778, 1779, 1781, 1782, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 1810, 1823, 0, 0, 0,
	0, 0, 0, 1802, 1804, 0, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 1820, 0, 0, 0, 0, 0, 0, 1789,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1773, 1811, 1805, 1806,
	1807, 1816, 1817, 1818, 0, 0, 0, 0, 0, 1801,
	0, 0, 1795, 0, 0, 0, 0, 1809, 1803, 0,
	0, 0, 3221, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 1796, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 1821, 0, 0, 0, 1814,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 0, 1810, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 3248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1799, 1800, 0, 0,
	1796, 0, 1812, 0, 1780, 0, 0, 0, 0, 0,
	1786, 1787, 1793, 1815, 1792, 1788, 0, 1785, 1783, 1784,
	1776, 1777, 1778, 1779, 1781, 1782, 0, 1814, 0, 0,
	0, 0, 0, 1772, 1773, 0, 1805, 1806, 1807, 1816,
	1817, 1818, 1813, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 1802, 1804, 0, 1809, 1803, 0, 1827, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 1819,
	0, 1820, 1822, 0, 0, 0, 0, 0, 1789, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 1811, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 1795, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 1786, 1787,
	1793, 1815, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777,
	1778, 1779, 1781, 1782, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1773, 0, 1805, 1806,
	1807, 1816, 1817, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1809, 1803, 0,
	1813, 0, 0, 1823, 0, 1775, 0, 0, 0, 0,
	1802, 1804, 0, 0, 1822, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 1820,
	0, 1828, 0, 0, 0, 0, 1789, 1790, 0, 0,
	1774, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	1794, 0, 0, 0, 1811, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 1797, 1798, 1799, 1800, 0, 0,
	0, 1825, 0, 0, 1780, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1793,
	1815, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778,
	1779, 1781, 1782, 1772, 1773, 0, 1805, 1806, 1807, 1816,
	1817, 1818, 1813, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 1802, 1804, 1801, 0, 1803, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 1819,
	0, 1820, 1822, 0, 0, 0, 0, 1796, 1789, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 1811, 0, 1774, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 1794, 0,
	0, 1795, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1793, 1815, 1792,
	1788, 0, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781,
	1782, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	1813, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	1802, 1804, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 1820,
	0, 0, 0, 0, 0, 0, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1793,
	1815, 1792, 1788, 0, 1785, 1783, 1784, 1776, 1777, 1778,
	1779, 1781, 1782, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1793, 1815, 1792,
	1788, 0, 1785, 1783, 1784, 1776, 1777, 1778, 1779, 1781,
	1782,
}

var sqlPact = [...]int{
	8569, -1000, -1000, -1000, -1000, 178, -1000, -1000, 173, 172,
	171, 170, 169, 168, 166, 165, 164, 159, 158, -1000,
	-1000, -1000, -1000, -1000, -1000, 157, -1000, -1000, 156, -1000,
	154, 149, 148, -1000, -1000, 143, -1000, 141, -1000, -1000,
	-1000, -1000, 138, 134, 131, 94239, 93688, 94783, 2305, 115065,
	101339, 1870, 83812, 114514, 83261, 113963, 2113, 10862, 113412, 2727,
	129, -1000, 112861, 127, 126, 124, -1000, 112310, -1000, 1938,
	-1000, 123, -1000, 6628, 69426, 121, 118, 111, 2288, 110,
	-1000, 108, 105, -1000, -1000, 104, -1000, 12820, 1505, -1000,
	101, 100, -1000, 393, 99142, 99, 98, 2386, 97, 96,
	67773, 95, 94, 2325, 2857, -1000, -1000, 2086, -1000, -1000,
	93, 92, 91, 90, 89, 88, 85, 84, 76, 74,
	73, 72, -1000, 69, 68, 65, 62, 61, -1000, 59,
	58, 57, -1000, 53, -1000, 51, 48, 46, 45, 44,
	43, 41, 38, 37, 36, 35, 31, 30, 29, 14776,
	-1000, -1000, 1964, 1686, 1681, 1677, 1671, 1660, 962, 28,
	27, 26, 24, 23, 22, 21, 19, 17, 15, 13,
	12, 11, 7, 6, 5, 4, 3, 133, 1, 0,
	-11, -12, -13, -15, -16, 2643, -1000, 1522, 1131, 32366,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 122681, 115609, -18,
	-73, -20, -1000, 3312, 1013, 56136, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 244, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 454, 2172, 726, -1000, -1000, -1000, 111766, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2301, -39, -1000, 2046,
	-1000, -1000, -1000, -1000, -1000, 723, -1000, 2300, 324, 2252,
	-1000, -1000, -1000, 3352, 2435, 3772, 3770, 3769, 3768, 3766,
	122137, 1884, 3765, 2495, 3764, 3763, 3762, 3761, 3760, 3759,
	3757, -1000, 93137, 1022, 92586, 92035, 3380, 111222, 91484, 110671,
	77211, 48274, 1043, 3351, -1000, -1000, -1000, -1000, -1000, -1000,
	115609, -1000, 1020, -1000, -1000, 3756, 3755, 2081, 722, 100788,
	-1000, 1710, -1000, -1000, -1000, -1000, 902, 1189, 34058, 34058,
	225, -1000, -1000, -1000, -1000, -1000, -1000, 3752, 3751, 3749,
	3747, 3746, -1000, -1000, 82710, 25406, 82159, 81608, 110120, 24843,
	90933, 90382, 3745, 3742, 3740, 109569, 76648, 3498, 3496, 1019,
	2028, 1433, -1000, -1000, -1000, -1000, -1000, -1000, -37, 71621,
	3530, 115609, -1000, 224, -1000, -1000, -1000, -1000, -1000, -1000,
	47710, 805, 47146, 885, 46582, 548, -1000, -1000, -1000, -1000,
	76085, -1000, 109018, 2434, 3737, 3736, 1136, 3735, 3244, 1813,
	3734, 1878, 1242, 3727, 3725, 3724, 3723, 3720, 3718, 3716,
	1485, 108467, 2939, 1541, 107916, 1706, 75522, 1018, 89831, 94783,
	2624, 107365, 1396, 1392, -1000, -1000, -1000, -1000, 3058, 2839,
	2837, 1233, -1000, -1000, -1000, -1000, 59465, 5882, 5082, -1000,
	-1000, 10974, 106814, 62270, 94783, 94783, -1000, -1000, -1000, -1000,
	-1000, 46018, 609, 45454, 917, -1000, -1000, 60026, 2882, -1000,
	-1000, -1000, -1000, 44890, 421, 44326, 864, 115609, -1000, 2938,
	1913, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2270, 1667,
	3546, 2740, 74959, 2059, 1380, 3316, 3056, 3055, 1472, 3053,
	3715, 2599, 3047, 3035, 3033, 3032, 3031, 1632, 2567, 394,
	2570, 31802, 2919, 1754, 43762, 1513, 1471, 3028, 3020, 3566,
	2021, 2024, 2083, 81057, 3708, 3707, 3283, 3010, 3002, 2778,
	2992, -1000, 2880, 1452, -1000, -1000, -1000, -1000, 1455, -1000,
	-1000, -1000, -1000, 85444, -1000, -1000, 1739, -1000, -1000, 1739,
	-1000, -1000, -1000, -1000, -1000, 1338, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1522, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2277,
	-1000, 2045, -1000, -1000, 2509, 3288, 3288, 3288, 3348, 409,
	404, -1000, 133, -1000, -1000, 129152, -1000, -1000, 48838, 48838,
	48838, 48838, 48838, 48838, 48838, 48838, 2153, -1000, 721, -1000,
	-1000, 774, -1000, 719, 640, 586, -1000, -1000, -1000, -1000,
	-1000, -1000, 718, -1000, -1000, -1000, -1000, -1000, -1000, 3530,
	-1000, 28285, -1000, -1000, -1000, 417, 717, 48838, -1000, -1000,
	3584, 3583, 895, -1000, 220, 910, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2933, 716,
	712, -1000, 711, 707, 706, 705, 682, -1000, -1000, -1000,
	680, 676, 674, 672, 671, 668, 667, 666, -1000, 2072,
	-1000, -1000, -1000, -1000, -1000, -1000, 626, 625, 625, 625,
	-1000, 1012, -1000, -1000, -1000, 307, 624, 253, 620, 610,
	608, -1000, 664, 659, 658, 657, 655, 654, 653, 652,
	649, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1010, -1000,
	-1000, -1000, -1000, -38, 115609, -1000, 454, -38, -1000, -1000,
	647, -1000, 36343, 36343, 36343, -1000, -1000, 2298, 48838, -1000,
	2858, -1000, -32, -32, 866, 57792, -1000, 55030, 866, 289,
	788, 63919, -1000, 2879, -1000, -1000, 645, 216, -1000, -1000,
	-1000, -1000, 25967, 2867, 115609, 115609, 94783, 94783, 94783, 3706,
	3074, 48838, -1000, -1000, 68875, 115609, 95327, -1000, -1000, 3478,
	69975, 68324, 115609, 2930, 72723, 3705, -1000, -1000, -1000, -1000,
	-1000, 3154, 3704, 3703, 3700, -1000, 115609, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 231, 3148, -1000, -1000, 98591, 231,
	3146, -1000, 231, 3145, -1000, 98047, -1000, -1000, 2230, 3137,
	-1000, -1000, 238, 3135, -1000, -1000, -1000, 235, 3134, -1000,
	-1000, 214, -69, 3133, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 129152, -1000, -1000, -1000,
	72172, -1000, 3270, -1000, -1000, 115609, -1000, 48838, -1000, 3477,
	1692, 78323, 3426, -52, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2479, 2487, 1123, 2327, -1000, 3193, 1488, 34058, 3232,
	-1000, -1000, -1000, -1000, 205, 25967, -1000, -1000, -1000, -1000,
	-1000, -1000, 2381, 3126, 1521, -1000, 2326, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2108, 3125, -1000, 1996, 3095,
	2001, -1000, -1000, 3509, -1000, 3273, -1000, -1000, 2149, 3094,
	-31, -1000, -1000, 2400, -1000, -1000, -1000, -1000, 2038, -1000,
	1269, 3093, -1000, 2739, 2739, 89280, 3115, 61709, 60026, 71621,
	-44, -1000, -1000, -1000, -1000, -168, -1000, 24278, 129152, -1000,
	-1000, -1000, -1000, 1759, 129152, 863, -1000, -1000, 3090, -1000,
	129152, 861, -1000, -1000, 3087, -1000, 2929, -1000, -1000, 2390,
	-1000, -1000, 3698, -1000, -1000, 3697, -1000, 3694, 3693, 3692,
	-1000, 1728, 2015, 3691, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 88736, 2297, -1000, -1000, 87634, 2923, -1000, 2388,
	3419, -1000, 88185, 1017, -1000, 973, 2385, -1000, 97503, 963,
	2384, -1000, 3690, 3372, 2660, 973, 2383, -1000, -1000, -1000,
	-1000, -1000, 991, -1000, 65571, -1000, 65571, -1000, 1623, -1000,
	121593, -32, 94783, 3530, -1000, -81, -1000, -1000, -1000, 1013,
	-1000, 58912, -1000, 58912, 100237, 77772, 923, 715, 67220, 129152,
	-1000, -1000, -1000, -1000, 129152, -1000, -1000, -1000, -150, 2730,
	-1000, 77772, 61148, 129152, -1000, -1000, -1000, -1000, 129152, -1000,
	-1000, -1000, 77772, 87634, -1000, 106263, 87090, -1000, -1000, 1446,
	2529, -1000, -1000, -1000, 77772, 1286, 77772, 77772, 77772, -1000,
	105712, -1000, -1000, 2075, 1564, 3284, 2047, 94783, -1000, 1868,
	-1000, -1000, -1000, 3301, 115609, -1000, -1000, 2922, -1000, 71070,
	96959, -1000, 96415, -1000, 95871, -1000, 94783, -1000, 94783, -1000,
	3689, 3688, 3687, -1000, -1000, 3686, -1000, 3684, 3294, -1000,
	675, 43198, 129152, 3291, -1000, 3683, 3398, 2919, 129152, -1000,
	3098, 1695, 1666, 115609, -1000, -1000, 115609, -1000, 115609, -1000,
	-1000, -1000, 1560, -1000, -1000, 2478, -1000, -1000, -1000, -1000,
	94783, 94783, 94783, 94783, 1428, -1000, 42634, -1000, -1000, 2991,
	3681, 1762, -1000, 1834, -1000, 2862, 3296, -1000, 1435, 1764,
	-1000, -1000, 246, -1000, -1000, -52, -1000, 121049, -1000, 2509,
	-1000, 115609, -1000, 2491, 2895, 2907, 1430, 2316, 2578, -1000,
	42070, 2546, 52222, 2322, 133, -1000, -1000, 133, 133, 33494,
	-1000, -1000, 69975, 69975, 25967, 1358, 48838, 48838, 48838, 48838,
	48838, 48838, 48838, 48838, 48838, 48838, 48838, 48838, 48838, 48838,
	48838, 48838, 48838, 48838, 48838, 48838, 48838, 48838, 48838, 48838,
	48838, 48838, 48838, 48838, 48838, 48838, 48838, 48838, 48838, 48838,
	48838, 48838, 2103, 48838, 1324, 48838, 48838, 48838, 48838, 2061,
	-1000, -1000, 1969, 511, 2085, 640, -1000, -1000, -1000, 3529,
	3529, 3529, 965, 965, 965, 129532, 129532, 578, 3675, 774,
	-1000, 48838, -1000, 70, 58344, 48838, 26530, -1000, 404, 10263,
	2511, -1000, 400, 27123, -1000, -1000, -1000, 28285, 586, 41477,
	48838, 1002, 129152, -1000, -1000, 1406, 3552, 23713, 2947, 2771,
	638, 802, 798, 31209, 30616, 30023, 29430, 643, 48838, 48838,
	48838, 48838, 48838, 48838, 48838, 48838, -1000, -1000, 3558, -1000,
	3552, -1000, -1000, -1000, -1000, 3552, 1351, 1343, 3552, -1000,
	3552, 3552, 9472, 9472, 40913, 40349, 39785, 52786, 39221, 48838,
	28866, 38657, 38093, -1000, 115609, -38, 3476, 48838, 268, -1000,
	127730, -1000, 268, 268, 637, -82, 129152, 2525, 2525, 56688,
	2380, 2202, 2202, 2202, -1000, 866, 19164, 866, 104617, 2210,
	866, 866, 204, 255, 399, 54478, 2858, 104617, 741, 635,
	-21, -22, -23, -1000, -1000, -24, -25, -1000, -1000, 94783,
	633, 26530, 25967, 202, 2011, -88, 2587, 2586, 2579, -1000,
	2576, -1000, 1803, -91, 1319, 94783, 115609, 1399, 3671, -97,
	-1000, 4851, -96, -1000, 1297, 201, 3552, -1000, -1000, -1000,
	-1000, -1000, 3668, 3665, -1000, 1008, 632, 631, 408, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 626, 625, 625,
	625, -1000, 307, 624, 253, 620, 610, 608, -1000, -1000,
	-1000, -1000, -1000, 2855, 94783, 115609, 1376, 3664, -168, 95327,
	-93, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 115609,
	-1000, -1000, -1000, 3662, -1000, 94783, -1000, -1000, 94783, 231,
	3085, -1000, 94783, -1000, 94783, 230, 3083, -1000, -1000, 115609,
	-1000, 94783, 94783, -1000, 115609, 115609, 115609, 77772, 77772, 239,
	-1000, 94783, 874, -99, 1142, -52, -1000, -1000, -1000, 1739,
	-1000, 1649, -1000, -1000, -1000, -1000, -1000, -1000, 1425, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 895, -1000, -1000,
	-1000, -1000, -1000, -1000, 3549, 3542, -40, -1000, -1000, 25967,
	-1000, -53, 1635, 1912, 1314, -1000, 80506, 2408, 3268, 3658,
	2646, 3257, 1610, -1000, 1554, -1000, 3378, 85444, 3441, 3457,
	1298, -1000, 2853, -1000, -1000, 900, 1737, 1743, 1259, 1257,
	85444, 1996, -1000, 69975, -1000, 2622, 3345, 1400, 1388, 1400,
	1400, 1366, -1000, 85444, 1724, 1241, 1240, 1239, 2148, 1958,
	1948, -1000, -1000, -1000, 1238, 1236, 824, 1934, -1000, -56,
	3438, 3455, 1294, -1000, 2852, 1235, -1000, -1000, -1000, 3344,
	94783, 25967, 1565, 1558, 1538, 1717, 1234, -41, -1000, 3436,
	1232, 1229, -1000, 1029, 2481, 3209, -1000, 77772, 1029, 1029,
	1905, 3078, 2728, -1000, 1461, 2725, 809, 2722, -1000, -1000,
	-1000, 809, -44, 71621, 115609, 198, -1000, 70, 48838, 48838,
	70, 48838, 70, 3397, 3067, -1000, -1000, -1000, -1000, -1000,
	3657, 1984, 2494, -1000, -1000, 607, 2382, 2842, 115609, 2596,
	-46, 94783, -1000, 70519, 3050, 73274, 1996, 2377, -1000, -1000,
	86539, -1000, 3040, 454, 2375, -1000, 646, 3654, 3037, -1000,
	120505, -1000, 3270, 1367, 3029, 1091, 555, 3475, -1000, 555,
	66122, -1000, 115609, -1000, -32, 279, 79418, -101, -104, 398,
	-1000, 105168, 115609, 1090, 79962, 115609, 3220, 970, 60026, -1000,
	60026, -106, -150, 2719, 1442, 923, 923, 809, -1000, 809,
	-1000, 94783, 2905, -1000, -1000, 77772, 923, 923, 923, -1000,
	-1000, -1000, -1000, 3652, 3650, 3648, 3647, -1000, -1000, 972,
	94783, 115609, 94783, -1000, 194, -1000, 115609, -1000, 115609, 115609,
	94783, -1000, 972, 115609, 972, 115609, 972, 115609, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 70, -1000, -1000, 129152, -1000,
	48838, -1000, -1000, 3646, 1646, -1000, 2903, -1000, 2902, -1000,
	10, -1000, -1000, 1846, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3645, 129152, -1000, 1940, -1000, -1000, -1000, -1000, 94783,
	94783, 94783, 94783, 115609, 3208, -1000, 115609, 3205, 94783, -1000,
	-1000, 85444, -1000, 2491, 2895, -1000, -1000, -1000, -1000, -1000,
	-1000, 1434, 2260, -1000, 2549, -1000, 1582, -1000, -1000, -1000,
	129152, 53350, -1000, -1000, 129152, 1952, -1000, 51658, 51094, -1000,
	-1000, 1721, 94783, 2610, -1000, 2610, -146, -1000, 127471, 2535,
	94783, -1000, -1000, -1000, -1000, -1000, 897, 768, 768, 1359,
	1359, 1359, 1359, 3416, 7226, 6116, 7498, 502, 502, 6431,
	6431, 6431, 6431, 6431, 502, 6996, 965, 965, 6996, 6996,
	6996, 6996, 6996, 965, 965, 965, 502, 502, 502, 965,
	129532, 129334, 10086, 48838, 48838, 1228, 1968, 511, 9052, 48838,
	11812, 11812, 11812, 11812, -1000, 1798, -1000, -1000, -1000, -1000,
	2840, 602, 52786, 52786, -1000, -1000, -1000, -1000, 27704, 48838,
	-1000, -1000, -1000, -1000, 37500, -1000, -1000, 126712, -311, 396,
	-1000, 193, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 391, -94, 50, -1000, 48838,
	48838, 48838, 387, -1000, 190, 48838, 115609, -1000, 17816, 739,
	-154, -1000, -107, 1421, -1000, 48838, -1000, -1000, 1227, -1000,
	1223, 1222, 1219, -1000, 601, 385, -1000, 189, -1000, 2199,
	599, 596, 48838, -1000, -1000, -1000, -1000, -1000, 126649, -1000,
	-1000, 126276, -1000, -1000, 126027, -1000, -1000, 125899, -1000, -1000,
	-1000, 128954, 17163, 16489, 14034, 9644, 12493, 11859, -109, 377,
	-112, 372, 896, 894, 369, 364, 362, -114, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-115, 361, -1000, 2838, -94, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 357, -1000, 351, -1000, 128695, -94, 341,
	5249, -1000, 52786, 52786, 52786, 52786, -1000, 340, -1000, 127343,
	-1000, 128567, 36936, 36936, 36936, 338, 128308, 48838, -94, -117,
	-1000, -122, -1000, -1000, 505, -123, 998, 36343, 55583, 25967,
	-1000, 998, 998, 48838, -1000, 48838, 2565, -1000, -1000, -1000,
	-1000, 2558, 1939, 2525, 56688, -1000, -1000, -1000, -1000, 104617,
	-1000, 3530, 2718, -1000, 104617, -1000, -1000, 115609, 454, -1000,
	104617, 104617, 25967, 866, -1000, 866, 104617, 597, -1000, -1000,
	-1000, -1000, -1000, 336, 63375, 50, 187, 25967, 973, -1000,
	-1000, 2657, 2657, 2657, 2657, -1000, -1000, 115609, 1218, -49,
	-120, 2713, -1000, 3510, -1000, 2076, -1000, 69975, -1000, 767,
	1086, 25967, -1000, -1000, -1000, 595, -1000, 3552, 3552, -1000,
	3552, 115609, 2835, 208, 2709, -1000, 142, 73274, 73274, 3643,
	-1000, -1000, 231, -1000, 94783, 231, 231, -1000, 94783, 94783,
	2230, -1000, 238, -1000, 235, -1000, -1000, -69, -1000, 980,
	34058, -1000, 1739, -1000, -1000, 1569, -1000, 2004, -1000, 1246,
	-1000, -1000, -1000, -1000, 34058, -1000, 2460, 115609, 115609, 94783,
	-1000, 115609, -1000, 2110, 73274, -1000, 2374, 119961, 2366, 69975,
	115609, -1000, -1000, 594, 899, 2531, 2530, 1088, 115609, 115609,
	2528, 119417, 118873, -1000, 3642, 115609, 2066, 48838, 3343, 2154,
	2064, 70, 70, -1000, 70, 70, 70, -1000, 593, 1352,
	94783, 94783, 115609, 73274, 94783, 1872, -1000, -1000, -1000, -1000,
	-1000, 85988, -1000, -1000, 3557, 3556, -1000, 1400, -1000, -1000,
	-1000, 1400, 1996, 1866, 115609, 73274, 94783, 73274, -1000, -1000,
	2150, 118329, 117785, 1716, 115609, 1426, -1000, 824, 2109, 70,
	70, -1000, 70, 70, 70, 592, 25967, 1978, -1000, 2957,
	115609, 3581, 117241, 3580, 115609, 115609, 115609, 73274, 3293, 115609,
	115609, 73274, -1000, 116697, 3493, 2277, 2481, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 74396, 1096,
	115609, 1269, -1000, -1000, 1705, 1214, 1213, 85444, 2069, 1703,
	115609, 60026, 969, 60026, 2671, -1000, -1000, 23148, -1000, 129152,
	129152, -1000, 129152, -1000, 70519, 115609, -1000, 1014, 115609, 79962,
	953, 3027, 65020, -168, 923, 77772, 94783, -46, 2596, 115609,
	-1000, -1000, 1996, 3019, 454, 2373, -1000, 77772, 3474, 3016,
	591, 3641, 3634, -1000, 94783, 2291, 2367, -1000, -1000, 116153,
	3072, 824, 115609, 998, 56688, 1983, -1000, 62823, 1033, 115609,
	1843, 135, -1000, -1000, -1000, -8, 115609, -1000, 782, -1000,
	-1000, 279, 279, 923, -293, 590, -1000, 849, 848, 60587,
	77772, -125, -1000, -1000, -1000, -1000, 2366, 94783, 115609, 1264,
	2656, 115609, -130, -1000, 184, 587, -1000, 3038, -1000, -150,
	-1000, 970, 60026, 2834, 2832, -1000, -1000, 979, -1000, 1432,
	923, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -33, 115609, -168, -168, -63, -49, -1000, 972,
	-1000, 972, -1000, 972, -1000, 129152, -1000, -1000, 1636, 1631,
	115609, -1000, -1000, 115609, -1000, 25967, 115609, 94783, 25967, 94783,
	2894, 2893, -1000, -1000, -1000, 115609, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1104, -1000, 1952, 2259, -1000, 586, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2454, -1000,
	-51, 33494, 876, -1000, -1000, 94783, -34, 48838, 48838, 6384,
	6104, 48838, 52786, 52786, -1000, 48838, 5906, -1000, -1000, -1000,
	-1000, -1000, 2828, 585, 48838, 69975, 6816, 6560, -1000, 335,
	11106, 6996, -1000, 48838, -1000, 575, -1000, 334, 35779, -1000,
	127928, -10, -131, -1000, 19742, -94, -133, -1000, -1000, 759,
	-1000, 3054, -1000, 48838, 128110, 2427, 1918, 1821, 1654, 3552,
	3576, 22583, -1000, 66671, 1000, 2221, 125650, -1000, -1000, -1000,
	-1000, 69975, 69975, 48838, 48838, -1000, 48838, 48838, 48838, -1000,
	-1000, -1000, 3552, 879, -1000, -1000, -1000, 879, -1000, -1000,
	1400, -1000, 1400, -1000, 48838, -1000, -1000, 2827, 48838, -1000,
	69975, 69975, 52786, 52786, 52786, 52786, 52786, 52786, 52786, 52786,
	52786, 52786, 52786, 52786, 52786, 52786, 52786, 52786, 52786, 52786,
	52786, 52786, 2518, 52786, 3525, 3525, 3525, 957, -1000, 2889,
	2827, 48838, 48838, 69975, 333, 332, 331, -1000, 48838, -94,
	-1000, -1000, 6200, 582, -1000, 2442, -1000, 2770, -1000, 48838,
	-1000, -132, -1000, 2858, -1000, -1000, 2770, 2770, -140, 129152,
	56688, 56688, -1000, 581, 48838, 2544, -1000, -1000, 738, -309,
	-1000, 845, -1000, -1000, -1000, -1000, -1000, 454, -1000, -1000,
	-1000, 183, 104617, 104617, 737, -1000, -141, -1000, -1000, -148,
	-1000, 3472, 327, 25967, -1000, 998, 2673, -1000, -1000, -1000,
	-1000, -1000, -1000, -168, 115609, 115609, 1690, 2251, 3574, -1000,
	3554, 751, 736, 182, 3552, 325, 323, 318, -168, 115609,
	115609, 1689, 115609, -1000, -1000, -1000, -1000, 231, -1000, -1000,
	-1000, 230, -1000, -1000, -1000, -1000, 2595, -1000, -52, -1000,
	-1000, -1000, 48838, -1000, -1000, 3267, 1212, 1210, -1000, -1000,
	-1000, -1000, 2871, -1000, 3012, -1000, 2362, -1000, 1061, -1000,
	1863, -1000, 48838, 580, 2655, 577, 576, 3633, 2032, 3631,
	1089, 3004, 2230, 3003, 2230, -1000, -1000, -1000, 906, -1000,
	129152, 2154, -1000, 574, 573, -1000, -53, 1606, 1832, 1209,
	978, -1000, -1000, -1000, -1000, 48838, 48838, 104073, -1000, 452,
	3273, -35, -1000, -1000, -1000, 1685, 1208, 1207, -1000, -1000,
	-1000, -1000, 1996, 1676, 1206, 1198, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2361, -1000, -1000, 2990, 977, -1000, 2960,
	2959, 886, 115609, -1000, 976, -1000, -1000, -1000, -1000, 48838,
	-1000, -56, 1196, 3422, 2359, 94783, -1000, 2230, 2989, 1195,
	-1000, 1193, -1000, -1000, -1000, 3433, 3430, 1187, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 73835, -1000, -1000, 1029,
	115609, 73274, 94783, 1860, -1000, -1000, 84356, 84900, 115609, -168,
	809, -1000, 2409, 809, 969, 2815, -1000, 2591, 975, 94783,
	3630, 316, -149, -57, 69975, 3470, -1000, 2279, 572, 94783,
	869, -1000, 3530, -1000, -1000, -1000, 974, -1000, 3410, 94783,
	3464, 2988, 973, 70, 94783, 3562, -1000, -1000, 3463, 94783,
	2987, 2290, 2358, 2486, 824, 78874, 973, 2220, -68, -1000,
	1843, 35186, 3265, -151, -1000, -1000, -1000, 998, 66122, 56688,
	48838, 3628, -159, -1000, -1000, -1000, -1000, -1000, 101890, 101890,
	77772, 77772, 77772, 923, 115609, 115609, 79962, -1000, -1000, 554,
	115609, 115609, 552, -1000, 115609, 115609, 3626, 77772, -58, 551,
	-1000, 841, 840, 839, -1000, -1000, -1000, -1000, -1000, -1000,
	970, -1000, -150, 60026, 70, -1000, 2243, 94783, -1000, 22018,
	-1000, -1000, -1000, -1000, -1000, -1000, 972, -168, -1000, -1000,
	2136, 2320, 2136, 1831, 1829, -1000, -1000, 2256, -1000, -1000,
	-1000, -1000, 2614, 3281, 25967, 3384, 11812, 48838, 48838, 5319,
	4892, 1009, 11812, 48838, 48838, 69975, 7300, -165, 48838, 48838,
	-1000, 48838, 735, 129152, -1000, 3573, 48838, 315, 312, -1000,
	-1000, -1000, 3551, -1000, -1000, -1000, 129152, 48838, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 310, -1000, 71, -1000, -1000,
	-1000, 123225, -1000, 48838, 309, 3340, -1000, 304, 302, 10522,
	8293, 125277, 125214, 124841, 300, -1000, -1000, 298, 295, 129152,
	2889, 129152, -1000, -1000, 1054, 1054, 1350, 1350, 1350, 1350,
	3525, 703, 760, 447, 623, 623, 623, 934, 957, 957,
	623, 623, 623, 957, 2814, 2520, 549, 6864, -1000, -1000,
	129152, 129152, 293, -1000, -1000, -1000, -94, 292, 6200, -1000,
	2765, 3339, 129152, -1000, 56688, 2765, 2765, -1000, -1000, 1939,
	115609, 129152, 56688, -1000, 2718, -1000, 20318, -1000, 25967, -1000,
	-1000, -1000, -1000, 3530, -1000, 63375, -1000, 547, -1000, -9,
	-1000, 2673, -1000, 837, -1000, -1000, 77772, 77772, -168, -181,
	115609, -1000, -1000, 732, 3624, 747, 25967, 287, -1000, -1000,
	-1000, -168, -168, 115609, -168, -1000, -1000, -1000, 3217, 129152,
	115609, 115609, 1493, 103529, 115609, 2983, -1000, 2112, -1000, 1088,
	124592, 57240, -1000, 57240, 115609, -1000, -1000, -1000, 1889, 1527,
	3623, 1132, -1000, 3309, 115609, -1000, 115609, -1000, -1000, -1000,
	115609, 115609, 94783, 115609, -1000, 73274, 2971, -166, 129152, -59,
	-1000, 835, -1000, 1356, -1000, 21453, 115609, 73274, 94783, 115609,
	73274, 94783, 2982, 115609, 2186, -1000, -1000, 2958, -1000, 2969,
	-167, 25967, -1000, 3572, 3570, 2981, 3313, -1000, 115609, 3569,
	115609, 94783, 3216, -1000, -1000, -1000, -1000, -1000, -1000, 1673,
	1192, 1191, 2287, -60, 2285, 2250, -63, 969, -64, 544,
	-1000, 832, -1000, -1000, 831, -1000, 969, -1000, 77772, 60026,
	3622, 454, -1000, 2644, -1000, 99686, 2269, 70, -1000, 3621,
	102441, 543, -1000, 2233, -1000, 731, -1000, 2476, 73274, 1996,
	70, 94783, -1000, -1000, 454, 286, -65, -1000, 3039, 1073,
	25967, 94783, 2980, 2488, 824, 78874, -1000, 1367, 2578, -1000,
	-67, -1000, 589, 70, 2220, -1000, -68, 129152, -1000, 830,
	-1000, -180, -1000, -1000, 285, -1000, 3215, 3214, -1000, 2767,
	57240, 542, 533, 115609, 3212, -1000, -1000, -183, 3063, 3063,
	77772, 60026, 77772, -1000, 970, 809, -1000, 2369, -1000, -1000,
	-1000, -1000, -1000, 25967, 1684, -1000, 528, 526, -1000, -1000,
	-1000, -1000, 3281, 11812, 11812, 48838, 48838, 48838, 11812, 7300,
	-185, -1000, 11812, 11812, -94, -1000, -1000, 127928, -1000, -1000,
	-1000, 129152, -1000, 20888, 2145, -1000, 124464, -1000, 33494, -1000,
	-1000, 48838, 48838, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 52786, 2811, 525, 69975, -1000, -1000, 280, 989, 48838,
	50530, 2858, 989, 989, -1000, -186, -1000, -1000, -1000, 3530,
	-9, -1000, -1000, 3619, 25967, -1000, 77772, -1000, -1000, 3618,
	-197, 746, -1000, 3617, -1000, -1000, 120, -1000, -1000, -1000,
	2704, 3462, -1000, 1900, -1000, 115609, -1000, 115609, -1000, 25967,
	115609, 2801, 1292, -1000, 899, 2523, 524, 52786, 94783, 873,
	-1000, 3490, 2732, -188, -1000, 115609, 48838, 115609, -191, -200,
	2333, -1000, -1000, 1279, 48838, -1000, -1000, -1000, 69975, 520,
	2230, 2230, -206, -207, -1000, -1000, -1000, 48838, 1181, 115609,
	34622, -1000, 3614, 3273, -1000, -1000, -1000, -1000, -1000, -1000,
	115609, -1000, 115609, -1000, 48838, 1179, -1000, -1000, -1000, 3568,
	2230, 25967, 2230, -1000, 2230, 3313, 1130, 115609, 73274, 94783,
	1507, 1507, 2888, -1000, 2501, 2501, 77772, 60026, -1000, -69,
	969, -1000, 3461, 2631, 3611, -1000, -1000, -1000, -1000, 2515,
	-1000, -1000, 115609, 2504, 928, -1000, -208, -1000, 829, 828,
	79962, 953, 904, -1000, -70, 519, -1000, 827, -1000, -1000,
	-1000, -1000, 454, 3459, -1000, 3564, 518, 517, 115609, 2284,
	512, 25967, 3262, 824, 78874, -1000, 3072, 1843, -1000, 2343,
	115609, 3250, -1000, 2578, 511, -1000, 923, 504, 500, 2702,
	2702, -209, 57240, 57240, -214, 499, 923, -1000, -215, -1000,
	-1000, -1000, -1000, -1000, -71, -1000, 844, 842, -1000, -1000,
	94783, 94783, 48838, 48838, -1000, 11812, 11812, 11812, -1000, 267,
	-1000, -1000, 2220, 3334, -1000, -72, 124215, 123842, 696, 52786,
	69975, -217, -1000, -1000, 115609, 129152, -74, -1000, 129152, 489,
	472, 407, -1000, -1000, -1000, 728, -1000, -1000, -1000, 115609,
	3610, -1000, 115609, 102985, 115609, -1000, -1000, 1642, -1000, -1000,
	-1000, 115609, 2349, -1000, -1000, -1000, 1079, 48838, 6864, 469,
	48838, -1000, 3453, -1000, 2628, 2817, 1935, 57240, -1000, 3281,
	-1000, 123779, -1000, 1069, 1966, -1000, -1000, -1000, 129152, 3313,
	57240, -1000, -1000, 468, 467, 129152, 464, 826, 2809, -1000,
	-1000, -1000, -1000, -1000, 129152, 461, 3422, -1000, -1000, -1000,
	-1000, 2230, 94783, -1000, -1000, -1000, 1169, -1000, -1000, -1000,
	-1000, 3608, 3607, 2806, 84356, -1000, -222, -1000, -1000, 1993,
	70, 2123, 2700, -1000, 2269, 460, -1000, -1000, 2262, 2590,
	-1000, 102441, 34058, 34058, 266, 3451, 904, -1000, 3543, -1000,
	3196, 3196, 48838, 3450, 70, -1000, 3562, 57240, -1000, 94783,
	57240, 2283, 2071, 2471, 78874, -1000, 2486, -1000, -1000, -223,
	115609, 1843, -1000, -1000, 77772, 77772, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1069, -224, -225,
	-1000, 77772, -1000, -1000, 2369, -1000, 115609, -1000, 115609, -1000,
	-1000, -230, -231, -1000, 2134, 48838, 33494, -1000, -1000, 696,
	-232, -1000, -80, -1000, 3448, 50530, 3605, 3598, 3596, -1000,
	-168, -1000, -168, -1000, 1899, -1000, -1000, -1000, 2979, 2756,
	18464, 2447, 115609, 18198, -1000, 2808, -1000, -1000, 2631, 458,
	-1000, -1000, -1000, -1000, 876, 115609, 2631, 2754, 94783, 1075,
	-233, 2136, 2136, 48838, 32930, 2183, 48838, -1000, -1000, 3313,
	115609, -1000, -1000, 115609, 2278, -1000, 2793, 3539, -1000, 953,
	-1000, 2181, 115609, -1000, 3298, -1000, 3211, -1000, -1000, -1000,
	2644, 70, -1000, -1000, -1000, -238, 129152, 70, -1000, 265,
	-240, 1073, -241, 94783, 1909, -1000, 824, -1000, 2488, 998,
	-1000, -1000, -243, -246, 1935, 1069, 2109, -248, -1000, -249,
	-251, -1000, -1000, 259, 49966, 49966, 49966, -94, -146, -1000,
	115609, 457, -1000, -1000, -1000, -1000, -1000, 2955, 966, -1000,
	2272, 1854, 209, 1074, -1000, -1000, 2109, 115609, -1000, -1000,
	-1000, 954, 454, -1000, 48838, 1069, -257, -1000, 1031, -262,
	-1000, 1028, -263, -1000, 2800, -1000, -264, 2230, -260, 229,
	1507, 944, 3374, -1000, -1000, -1000, 2262, 94783, -270, -1000,
	-1000, 2336, -1000, 2631, 928, -1000, -1000, -1000, 1069, 451,
	1935, 448, 1441, 824, -1000, -1000, 1400, 3262, 3171, 923,
	923, 2631, 1935, 922, -1000, 923, -1000, -1000, -1000, 2993,
	-1000, 53914, 2257, 1826, 127084, 2993, 2993, -1000, -1000, 115609,
	3363, -1000, 2275, 2274, 1512, -1000, -1000, -1000, -1000, -1000,
	-1000, 2732, -271, 3362, 2447, 129152, 2631, -1000, 2136, 2699,
	-1000, 2136, 2798, -1000, 2169, -1000, -1000, -1000, 2775, -1000,
	2797, -1000, 1768, 3513, 2458, 434, -1000, 115609, 1792, 1779,
	3592, 2123, 2262, 1935, 57240, 2631, 57240, 2096, -1000, 115609,
	-1000, 2071, 1322, -1000, -1000, 2109, 2631, 998, 426, -1000,
	-1000, 1847, 3460, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 823, -1000, 3187, -1000, 1102, 2053, 2053, 998, -1000,
	803, 2272, -1000, -1000, 420, -1000, 413, -1000, 2248, 115609,
	2225, -1000, -1000, -1000, -1000, 115609, -1000, -1000, 3590, -1000,
	953, -1000, 2631, -273, 2109, -279, -1000, -1000, -1000, -168,
	1909, -1000, 1599, 922, 2109, -1000, 1812, -1000, -1000, 2208,
	49402, 48838, -1000, 3511, -1000, -1000, 2539, -1000, -1000, 48838,
	2732, 48838, 48838, -1000, 229, 64471, -280, -1000, 2262, 2109,
	1069, 922, 1935, 1441, 66122, 998, 922, -1000, -1000, -1000,
	129152, -1000, -1000, -1000, 129152, -1000, -281, -286, -1000, -293,
	101890, 2219, 2458, 922, 1935, 998, 2631, 2096, -265, -1000,
	998, 2109, 1162, -292, -1000, -1000, -1000, -1000, 998, 2631,
	-1000, 2109, -1000, -1000, -1000, -1000, -1000, 412, -1000, -1000,
	2109, 922, 48838, 922, 998, -301, 998, -1000, 2109, -1000,
	-1000,
}

var sqlPgo = [...]int{
	0, 4427, 4426, 4424, 4423, 4422, 4420, 4419, 4412, 4410,
	4408, 4406, 4405, 143, 4402, 4400, 4399, 4397, 4396, 4394,
	4393, 4391, 4387, 4384, 4383, 4381, 4379, 4378, 4377, 4376,
	4374, 4373, 4372, 4366, 4365, 4364, 4363, 4360, 4359, 4358,
	4357, 4356, 4352, 4350, 4349, 4348, 4343, 4342, 4341, 4340,
	4337, 4336, 4334, 4333, 4332, 4330, 4329, 4323, 4322, 4320,
	4316, 4315, 4313, 4311, 4310, 4309, 51, 4307, 4305, 4303,
	4302, 4293, 4289, 4288, 4287, 4286, 4281, 4270, 4268, 4267,
	4263, 4262, 4260, 4258, 4256, 4251, 4249, 55, 4247, 280,
	4242, 4236, 4234, 4233, 4230, 4229, 4225, 4224, 4223, 4222,
	4217, 4216, 276, 4215, 121, 159, 4214, 4213, 3778, 4212,
	4210, 275, 4209, 4206, 4203, 4202, 287, 4201, 4200, 4199,
	4195, 4194, 4193, 4192, 4189, 4186, 4183, 4181, 87, 153,
	4176, 4170, 1617, 4169, 4168, 4167, 4166, 4163, 4161, 4160,
	4159, 4158, 4157, 257, 169, 4156, 273, 4155, 4154, 4152,
	4150, 4149, 4145, 4144, 4143, 4142, 4140, 4138, 4132, 4130,
	4129, 4128, 4123, 4120, 4117, 4116, 4115, 4109, 4108, 4106,
	4105, 4103, 4102, 4101, 4100, 4098, 4097, 4096, 4095, 4094,
	4093, 4091, 4088, 4086, 4083, 248, 172, 203, 4082, 4081,
	271, 270, 4080, 4079, 4077, 4076, 4075, 133, 6, 49,
	4073, 4069, 94, 95, 93, 109, 100, 92, 4068, 113,
	4067, 128, 62, 4066, 19, 2, 319, 242, 13600, 237,
	4064, 4061, 4059, 251, 196, 4058, 244, 4057, 4055, 4054,
	4047, 4045, 67, 50, 183, 186, 173, 177, 86, 4042,
	156, 104, 84, 64, 44, 17, 78, 213, 23, 1,
	214, 4041, 262, 11, 141, 12, 32, 4040, 4037, 4036,
	4035, 3386, 129, 4034, 268, 246, 176, 4033, 4032, 4031,
	896, 4030, 4025, 61, 4024, 192, 85, 135, 15, 119,
	4023, 150, 166, 40, 4022, 175, 56, 4019, 160, 90,
	80, 10159, 11910, 4010, 4009, 102, 76, 132, 338, 164,
	163, 204, 136, 167, 168, 117, 217, 209, 180, 47,
	4008, 256, 4005, 3424, 72, 188, 151, 5579, 3999, 3998,
	3995, 81, 202, 108, 3994, 3993, 74, 18, 3, 4,
	9, 138, 25, 22, 10, 3992, 58, 116, 48, 31,
	3990, 26, 3986, 3985, 3983, 3982, 3981, 41, 170, 3980,
	3979, 281, 3976, 103, 54, 24, 3975, 998, 219, 3974,
	228, 125, 3972, 3971, 260, 207, 187, 3970, 73, 231,
	3968, 3967, 3964, 3960, 3959, 137, 8, 134, 3957, 3956,
	148, 3955, 53, 247, 201, 3954, 57, 3953, 3952, 181,
	106, 142, 282, 130, 232, 115, 227, 194, 235, 3950,
	3947, 3946, 216, 3944, 3943, 226, 158, 3942, 3939, 241,
	285, 89, 46, 82, 240, 83, 199, 157, 3938, 206,
	3936, 3935, 284, 185, 220, 7, 13, 99, 123, 3933,
	5, 234, 154, 221, 114, 3932, 7586, 2608, 2536, 3931,
	3927, 144, 118, 79, 120, 152, 263, 97, 3926, 3924,
	2481, 3923, 3920, 3911, 3910, 189, 3909, 3907, 3906, 147,
	191, 253, 3905, 98, 71, 52, 27, 165, 252, 269,
	112, 223, 171, 255, 3904, 3903, 3902, 195, 3901, 91,
	127, 155, 205, 261, 68, 3900, 200, 3893, 146, 243,
	65, 149, 3888, 224, 3886, 3885, 3883, 3882, 3880, 3879,
	3877, 179, 233, 3875, 3869, 3865, 34, 197, 3864, 258,
	174, 198, 131, 70, 3862, 105, 3811, 3861, 126, 2532,
	63, 266, 182, 267, 3860, 110, 60, 3859, 0, 14746,
	8689, 12262, 14006, 3858, 4345, 3857, 3856, 3854, 215, 145,
	3853, 3852, 3851, 107, 3850, 88, 3848, 3845, 77, 3841,
	39, 20, 21, 30, 33, 676, 162, 3839, 3837, 29,
	139, 249, 3836, 278, 230, 3833, 3832, 3831, 3829, 111,
	3828, 43, 3827, 38, 3826, 3824, 45, 16, 35, 3823,
	3821, 208, 3820, 222, 254, 3819, 161, 3818, 69, 140,
	3816, 3815, 3814, 66, 59, 259, 96, 3813, 279, 3812,
	212, 3810, 3809, 28, 3806, 3805, 245, 3804, 3803, 3801,
	3800, 3799, 36, 211, 184, 218, 3798, 3795, 178, 3794,
	3793, 3792, 277, 3791, 3790, 37, 3786, 14, 3785, 3784,
	210, 3147, 3782, 3781, 42, 3776, 193,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 51, 51, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 38, 32, 32,
	33, 33, 34, 35, 35, 10, 10, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 18, 18, 39, 39,
	19, 19, 41, 41, 20, 20, 42, 42, 595, 595,
	613, 613, 23, 23, 44, 44, 24, 45, 17, 596,
	596, 596, 596, 36, 25, 46, 29, 29, 29, 29,
	29, 200, 200, 200, 200, 22, 22, 40, 40, 235,
	235, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 591, 591, 237,
	237, 236, 230, 230, 231, 231, 597, 597, 238, 238,
	238, 240, 240, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 490, 490, 490, 523, 523, 522, 522,
	522, 521, 521, 617, 617, 618, 618, 618, 618, 618,
	131, 131, 388, 388, 388, 55, 55, 55, 55, 55,
	586, 586, 202, 202, 202, 204, 204, 203, 203, 203,
	203, 203, 78, 78, 602, 602, 603, 603, 601, 604,
	604, 604, 201, 201, 201, 127, 127, 127, 127, 127,
	127, 128, 128, 129, 129, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 211,
	16, 16, 16, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 107, 107, 525, 525, 526, 526, 196, 196,
	197, 197, 197, 197, 198, 198, 199, 199, 199, 69,
	69, 208, 208, 210, 210, 209, 209, 209, 209, 209,
	57, 57, 57, 57, 57, 57, 57, 58, 58, 58,
	58, 58, 59, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 67, 67, 67, 67, 67, 187,
	187, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 75, 75, 75, 75, 619, 619,
	619, 619, 619, 619, 619, 619, 619, 619, 619, 619,
	619, 619, 619, 619, 619, 619, 619, 620, 620, 621,
	621, 622, 622, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 84,
	84, 349, 349, 312, 312, 85, 85, 85, 86, 86,
	87, 87, 71, 71, 584, 584, 365, 365, 481, 481,
	72, 592, 592, 592, 594, 594, 593, 593, 89, 89,
	387, 387, 90, 90, 90, 90, 90, 90, 91, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 99,
	99, 99, 99, 99, 100, 100, 100, 97, 97, 97,
	94, 94, 94, 93, 93, 93, 98, 98, 98, 583,
	301, 301, 96, 96, 96, 95, 95, 95, 366, 366,
	101, 101, 101, 101, 313, 102, 102, 102, 102, 102,
	102, 102, 102, 105, 105, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 483, 483,
	103, 103, 103, 448, 448, 108, 108, 108, 403, 403,
	109, 109, 109, 109, 109, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 130, 130, 130, 130, 130, 130,
	130, 130, 588, 588, 358, 358, 264, 264, 264, 264,
	120, 120, 120, 120, 121, 121, 121, 122, 122, 192,
	192, 137, 137, 137, 137, 137, 136, 136, 136, 136,
	136, 136, 61, 61, 61, 62, 62, 63, 63, 64,
	64, 65, 65, 66, 66, 66, 66, 66, 139, 139,
	614, 614, 141, 138, 138, 138, 140, 140, 140, 140,
	142, 144, 144, 144, 144, 143, 143, 143, 143, 143,
	145, 145, 515, 515, 374, 374, 513, 513, 535, 535,
	514, 514, 319, 319, 319, 319, 319, 320, 320, 320,
	524, 524, 524, 524, 524, 524, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 193, 193, 194,
	195, 195, 195, 195, 195, 170, 170, 170, 186, 186,
	186, 186, 186, 186, 186, 173, 173, 173, 157, 157,
	147, 147, 147, 147, 147, 147, 147, 152, 152, 152,
	152, 152, 152, 152, 152, 148, 148, 159, 159, 159,
	159, 159, 153, 153, 154, 154, 154, 154, 180, 180,
	156, 156, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 149, 149, 149, 149, 161, 161, 161, 161, 410,
	410, 410, 185, 185, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	183, 183, 183, 183, 183, 183, 605, 605, 606, 606,
	177, 177, 177, 177, 177, 177, 462, 462, 171, 171,
	171, 171, 176, 176, 176, 176, 179, 179, 179, 179,
	393, 393, 168, 168, 168, 169, 169, 169, 174, 174,
	175, 350, 350, 172, 172, 178, 178, 178, 178, 150,
	150, 150, 150, 150, 150, 150, 151, 151, 151, 151,
	181, 181, 167, 167, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 624, 624, 163, 163, 163,
	162, 162, 162, 162, 165, 165, 166, 166, 166, 166,
	166, 166, 164, 155, 184, 585, 585, 581, 581, 581,
	581, 581, 581, 581, 581, 582, 582, 582, 582, 587,
	587, 113, 113, 113, 113, 113, 123, 123, 123, 123,
	123, 114, 114, 114, 114, 114, 116, 116, 115, 115,
	115, 115, 79, 79, 79, 79, 79, 15, 15, 15,
	80, 80, 255, 255, 214, 214, 214, 338, 338, 215,
	215, 327, 327, 327, 327, 212, 212, 213, 213, 81,
	81, 625, 625, 625, 598, 598, 598, 599, 599, 599,
	599, 599, 599, 321, 321, 322, 322, 428, 428, 428,
	428, 428, 325, 325, 325, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 328, 328, 239, 239, 239, 336,
	337, 337, 329, 329, 335, 334, 334, 333, 333, 332,
	332, 330, 331, 331, 331, 340, 340, 339, 342, 342,
	341, 427, 544, 544, 546, 546, 546, 546, 546, 546,
	546, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 411, 411, 626, 626, 542, 542, 542,
	543, 538, 538, 539, 539, 539, 539, 539, 323, 323,
	324, 324, 324, 324, 540, 541, 356, 356, 466, 545,
	545, 547, 547, 549, 627, 627, 627, 627, 627, 627,
	628, 628, 628, 426, 426, 425, 425, 347, 347, 550,
	550, 550, 550, 551, 551, 551, 551, 551, 554, 553,
	552, 552, 552, 552, 552, 83, 83, 83, 390, 390,
	389, 389, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 189, 189, 267,
	267, 77, 77, 77, 12, 12, 12, 12, 12, 12,
	12, 282, 282, 13, 13, 13, 600, 600, 600, 82,
	82, 82, 82, 82, 82, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 590, 590, 589, 589, 268,
	268, 630, 630, 88, 88, 88, 88, 88, 88, 88,
	88, 484, 484, 485, 485, 76, 76, 76, 76, 76,
	412, 412, 409, 409, 408, 408, 355, 355, 464, 464,
	464, 465, 272, 272, 273, 273, 232, 232, 232, 31,
	30, 21, 21, 26, 26, 27, 27, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 28, 28, 48, 48,
	48, 48, 49, 49, 49, 49, 52, 52, 53, 53,
	47, 47, 47, 47, 50, 50, 43, 43, 54, 54,
	54, 607, 609, 609, 608, 608, 612, 612, 612, 612,
	612, 612, 610, 610, 611, 611, 615, 615, 616, 616,
	119, 119, 124, 124, 124, 124, 124, 125, 125, 125,
	125, 126, 126, 126, 126, 135, 135, 188, 188, 188,
	188, 188, 188, 188, 56, 56, 56, 56, 68, 68,
	68, 68, 133, 632, 632, 632, 134, 134, 134, 631,
	631, 265, 265, 422, 422, 423, 423, 633, 633, 424,
	424, 424, 424, 424, 258, 257, 259, 259, 260, 260,
	74, 74, 74, 248, 248, 247, 249, 249, 250, 250,
	245, 245, 527, 527, 252, 252, 252, 253, 253, 241,
	241, 242, 242, 243, 243, 244, 244, 256, 256, 634,
	634, 111, 111, 111, 191, 191, 311, 311, 311, 419,
	419, 419, 348, 348, 279, 279, 421, 421, 421, 421,
	386, 386, 386, 190, 190, 363, 363, 376, 376, 377,
	377, 478, 478, 378, 117, 117, 118, 118, 132, 132,
	218, 218, 216, 216, 216, 216, 216, 216, 216, 216,
	223, 223, 224, 224, 225, 225, 226, 227, 227, 227,
	227, 367, 367, 228, 228, 228, 217, 217, 217, 219,
	219, 219, 219, 219, 219, 219, 222, 222, 222, 222,
	229, 229, 229, 221, 221, 561, 561, 561, 563, 563,
	565, 565, 564, 564, 560, 560, 562, 562, 629, 629,
	392, 392, 392, 345, 346, 343, 343, 344, 344, 353,
	353, 351, 352, 352, 354, 354, 463, 463, 463, 233,
	233, 233, 383, 383, 383, 383, 384, 384, 415, 415,
	413, 413, 413, 413, 414, 414, 416, 416, 416, 417,
	417, 418, 418, 380, 380, 381, 381, 382, 382, 382,
	382, 444, 444, 220, 220, 220, 360, 360, 360, 361,
	361, 434, 434, 434, 434, 434, 434, 435, 435, 433,
	433, 433, 433, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 468, 469, 469, 362, 362, 470, 420, 420,
	579, 579, 579, 580, 580, 461, 461, 471, 471, 471,
	471, 471, 471, 459, 459, 460, 460, 479, 480, 480,
	396, 396, 396, 396, 394, 394, 397, 397, 397, 397,
	397, 395, 395, 472, 472, 472, 472, 385, 385, 473,
	473, 473, 473, 474, 475, 475, 476, 476, 429, 430,
	430, 486, 486, 486, 486, 488, 359, 359, 359, 359,
	359, 537, 536, 536, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 503, 503, 503, 503, 503,
	503, 503, 489, 489, 489, 489, 489, 493, 493, 493,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 494, 494, 499, 499, 500, 500, 500, 495, 496,
	501, 501, 501, 501, 635, 635, 505, 505, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 491, 491, 491,
	498, 498, 498, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 404, 404, 406, 406,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 438, 438, 438, 438, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	555, 555, 555, 555, 555, 555, 555, 555, 440, 440,
	558, 558, 559, 559, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 566, 566, 567, 567, 569, 569, 570,
	570, 571, 572, 572, 572, 573, 574, 574, 568, 568,
	575, 575, 575, 575, 576, 576, 577, 577, 577, 577,
	577, 578, 578, 578, 578, 578, 450, 450, 451, 451,
	457, 457, 457, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 318, 318,
	317, 269, 269, 269, 269, 269, 269, 372, 372, 370,
	370, 370, 373, 373, 371, 371, 369, 369, 368, 368,
	447, 447, 445, 445, 449, 449, 398, 398, 504, 504,
	504, 504, 504, 504, 504, 504, 399, 399, 399, 407,
	400, 400, 401, 401, 401, 401, 401, 441, 442, 402,
	402, 402, 443, 443, 452, 456, 456, 455, 454, 454,
	453, 453, 431, 431, 432, 432, 379, 379, 636, 636,
	375, 375, 477, 477, 477, 477, 315, 315, 364, 364,
	314, 314, 306, 306, 307, 307, 307, 307, 357, 357,
	458, 458, 506, 506, 507, 507, 508, 508, 509, 509,
	510, 511, 512, 446, 446, 290, 289, 276, 277, 288,
	287, 286, 275, 278, 283, 284, 285, 280, 281, 297,
	296, 295, 246, 251, 302, 303, 303, 305, 305, 304,
	304, 292, 293, 294, 482, 274, 308, 308, 309, 309,
	309, 310, 310, 310, 310, 270, 270, 271, 271, 298,
	298, 299, 300, 300, 291, 291, 291, 261, 261, 261,
	262, 262, 263, 263, 520, 520, 517, 517, 517, 518,
	518, 518, 519, 519, 519, 519, 516, 516, 516, 516,
	516, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 529, 529, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 531, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 534, 534,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 5, 6, 9,
	6, 8, 4, 4, 5, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 0, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 2, 1, 1,
	3, 1, 3, 2, 2, 3, 2, 0, 1, 1,
	0, 2, 0, 7, 10, 6, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 1, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 8,
	2, 1, 3, 1, 3, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	9, 10, 5, 2, 6, 4, 7, 7, 7, 10,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 1, 3, 3, 1, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 4, 3, 4, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 3, 4, 3, 4,
	3, 5, 3, 4, 4, 3, 4, 5, 3, 4,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	13, 16, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 9,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 5, 7, 5, 5,
	3, 3, 0, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 7, 10, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 6,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	13, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 595, -104, -101, -69, -67, -108, -109,
	-90, -110, -103, -130, -135, -117, -118, -119, -131, -137,
	-188, -193, -194, -195, -3, -55, -57, -70, -89, -91,
	-102, -112, -111, -113, -120, -127, -123, -107, -61, -132,
	-136, -146, -189, -190, -191, 32, 31, 100, 80, 154,
	128, 137, 202, 383, 426, 438, 397, 142, 417, 402,
	-140, -141, 456, -56, -68, -134, -133, 73, 129, 411,
	-4, -12, -16, 29, 46, -58, -59, -60, 62, -77,
	-73, -84, -78, -71, -72, -75, -619, 102, -562, -92,
	-95, -126, -623, 161, 220, -114, -115, 365, -121, -122,
	419, -124, -125, 422, 162, -63, -62, 156, -216, -218,
	-138, -139, -192, -147, -148, -149, -150, -151, -152, -153,
	-154, -180, -155, -156, -157, -158, -159, -160, -164, -183,
	-161, -162, -163, -166, -165, -167, -172, -168, -169, -170,
	-171, -173, -174, -176, -177, -178, -179, -181, -182, 461,
	-175, -184, 522, 49, 476, 82, 146, 430, 21, -5,
	-6, -7, -8, -9, -10, -11, -15, -14, -54, -74,
	-76, -79, -80, -81, -88, -82, -83, -561, -93, -94,
	-97, -99, -100, -96, -98, 418, -219, -217, 592, 537,
	-18, -23, -24, -19, -20, -22, -25, -21, -26, -27,
	-28, -39, -44, -45, -41, -42, -40, -43, -46, -47,
	-48, -49, -50, -51, -52, -53, -30, -36, -37, -31,
	-32, -33, -34, -35, -38, -17, -29, 558, 567, -222,
	-220, -221, -229, 448, 545, 496, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, -313, 2,
	-292, -298, -299, -300, -291, -261, -531, -534, 4, -528,
	-532, 168, 230, 329, 21, 23, 22, 24, 25, 26,
	27, 29, 30, 41, 42, 44, 45, 46, 47, 48,
	49, 53, 55, 59, 60, 61, 62, 63, 64, 68,
	73, 74, 79, 80, 81, 82, 83, 84, 85, 91,
	88, 89, 90, 92, 94, 96, 97, 98, 99, 100,
	101, 103, 104, 105, 107, 108, 109, 117, 118, 119,
	120, 121, 123, 128, 129, 132, 127, 131, 133, 135,
	136, 137, 140, 141, 142, 144, 145, 147, 148, 149,
	151, 152, 154, 155, 156, 159, 157, 504, 158, 160,
	161, 162, 163, 166, 174, 175, 176, 181, 183, 184,
	188, 189, 190, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 203, 207, 209, 210, 211, 212, 213, 219,
	220, 222, 223, 224, 225, 226, 231, 232, 233, 237,
	234, 243, 244, 248, 249, 250, 252, 256, 257, 258,
	259, 260, 261, 263, 265, 264, 267, 270, 271, 274,
	278, 279, 283, 284, 280, 285, 286, 288, 289, 292,
	290, 293, 294, 291, 295, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 296, 311, 309,
	313, 314, 315, 327, 324, 319, 320, 316, 321, 317,
	318, 322, 323, 326, 331, 332, 335, 217, 337, 338,
	341, 359, 345, 346, 347, 350, 351, 354, 357, 358,
	360, 361, 362, 363, 364, 365, 366, 367, 368, 370,
	371, 373, 374, 375, 377, 378, 379, 381, 383, 384,
	386, 387, 389, 390, 391, 392, 393, 394, 395, 397,
	399, 398, 400, 402, 404, 405, 406, 411, 417, 413,
	414, 415, 416, 418, 419, 420, 421, 422, 424, 425,
	426, 428, 429, 430, 431, 432, 434, 436, 437, 441,
	442, 458, 459, 478, 438, 439, 440, 443, 444, 445,
	446, 447, 451, 449, 450, 452, 453, 454, 456, 457,
	460, 461, 463, 464, 465, 466, 467, 468, 469, 472,
	474, 475, 476, 495, 477, 479, 483, 484, 485, 486,
	480, 481, 494, 488, 489, 491, 492, 497, 498, 499,
	500, 501, 502, 503, 505, 507, 515, 516, 517, 519,
	522, 523, 524, 525, 513, 527, 528, 531, 532, 533,
	536, 534, 535, 537, 539, 542, 543, 544, 550, 549,
	551, 554, 559, 560, 562, 563, 564, 36, 50, 51,
	54, 56, 58, 69, 70, 71, 75, 124, 125, 153,
	164, 165, 177, 191, 192, 204, 206, 214, 215, 216,
	238, 239, 241, 246, 268, 334, 336, 352, 356, 372,
	376, 380, 382, 396, 433, 470, 482, 487, 508, 509,
	510, 511, 518, 520, 545, 546, 547, 552, 561, -313,
	2, -292, 343, -285, 2, -261, -261, 383, 28, 2,
	28, 371, 450, 499, 501, 2, -588, -358, 2, 28,
	-264, -261, 102, 202, 448, -285, 2, -588, -358, 25,
	2, -261, 2, 357, 22, 27, 66, 77, 98, 140,
	163, 185, 188, -622, 359, 390, 436, 452, 494, 505,
	519, 2, 549, 289, 449, 496, 230, 120, 524, 443,
	-600, 441, 442, 357, 388, 428, 205, 538, -265, 2,
	438, -261, 289, 2, 595, 94, 279, 74, 433, 453,
	-143, 516, -144, -145, 2, -142, 508, -515, 443, 311,
	-261, 595, 595, 595, 28, -274, -261, 496, 230, 443,
	120, 492, 595, 2, 496, 362, 549, 449, 120, 393,
	230, 524, 188, 140, 27, 443, -600, 571, 572, 289,
	126, -586, 2, -581, 4, -532, -528, -307, -306, 496,
	502, 120, -300, -291, 585, -299, 595, 595, 595, 2,
	249, 250, 392, 391, 453, 454, 595, 595, 595, 595,
	441, 2, 163, 22, 27, 66, 93, 98, 126, 185,
	188, 348, -620, 359, 390, 452, 494, 498, 505, 519,
	-599, 477, 68, 416, 443, -598, -600, 289, 524, 140,
	-408, 120, 279, 200, 532, 501, 499, 530, 132, 237,
	535, 534, 595, 595, -105, 2, 592, 32, 31, -104,
	-108, 142, 456, -211, 496, 242, 2, -261, 595, 595,
	2, 249, 250, 441, 442, 595, 595, 186, -581, 2,
	595, 595, 2, 249, 250, 441, 442, 242, 2, 68,
	445, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 2, -186, 453, 477,
	211, 47, 46, 74, 28, 389, 79, 363, 121, 148,
	525, 203, 230, 231, 257, 93, 94, -410, 44, 250,
	68, 249, 442, -605, 441, -462, 497, 444, 450, 491,
	261, 438, 516, 102, 539, 429, 564, 393, 394, 489,
	406, 280, 157, 187, 4, 120, 311, 455, 508, 279,
	437, 366, 84, -629, 2, 496, -631, 2, 516, 516,
	2, -631, 2, -631, 2, -631, 2, -632, 516, 561,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, -217, -219,
	-218, 595, 595, 595, 595, 595, 595, 595, -186, 453,
	2, 74, 28, -351, -353, 529, 240, 150, 349, -216,
	-218, 2, -561, -513, 2, -436, -535, -438, 583, 584,
	576, 493, 67, -317, 328, 565, -450, 126, 530, 343,
	-534, -439, -452, 153, 359, 433, -373, 8, 9, 5,
	6, 7, -270, -440, -446, 521, 167, 333, -310, 596,
	10, 592, -558, -218, -451, 37, 206, 65, -517, -309,
	-271, -489, 241, -308, -291, -555, -556, 4, -528, -529,
	-518, -492, -500, -496, -497, -503, -261, -531, 77, 111,
	112, 110, 115, 114, 282, 281, 116, 113, 455, 538,
	66, 36, 214, 215, 246, 334, 216, 75, -557, 141,
	-530, 238, 239, 470, 51, 396, 177, 125, 124, 336,
	56, 54, 546, -501, 122, 508, 509, 510, 511, 191,
	192, 58, 164, 165, 356, 380, 487, 518, 520, 204,
	268, 43, 106, 187, 236, 218, 245, 247, 251, 269,
	272, 312, 325, 330, 353, 355, 427, 462, -635, 547,
	482, 69, 70, -563, 398, -564, -285, -563, 595, 595,
	597, 595, -343, -345, -346, 2, 28, 138, 592, 2,
	-467, 2, -468, -472, -218, 262, -471, 592, -469, 590,
	-292, 344, -559, 434, -555, -556, -270, -291, -309, 4,
	-528, -530, 594, -347, 592, 120, 496, 78, 230, 163,
	-403, 592, -261, 28, 343, 512, 597, -344, 387, -448,
	592, 343, 186, 346, 60, 293, 2, 2, 2, 2,
	2, 214, -261, 496, 119, 2, 260, 2, 2, 2,
	2, 2, 2, 2, -366, 214, 2, -292, 549, -366,
	214, 2, -366, 214, 2, -409, 2, 87, -275, 214,
	2, -261, -301, 214, 2, -296, -298, -305, 214, 2,
	-303, -261, -526, 214, 2, -525, -520, 10, -519, 5,
	4, -528, -532, -529, -531, 77, -436, 2, -132, 2,
	60, -261, 549, 2, 2, 458, 2, 592, -143, 71,
	516, 43, 453, -423, 2, -424, -257, -258, -259, -479,
	-260, 248, 386, 395, 568, 130, 328, 564, -614, 186,
	575, 512, -513, -513, -374, 594, 2, 2, 2, 2,
	2, 2, -472, 214, -292, 2, -289, -516, 4, -528,
	-532, -529, -533, 28, 31, 32, 33, 35, 37, 38,
	39, 40, 57, 65, 66, 72, 76, 78, 87, 93,
	102, 110, 111, 113, 112, 114, 115, 116, 126, 130,
	134, 138, 139, 143, 146, 150, 167, 169, 182, 185,
	186, 202, 205, 208, 221, 235, 240, 242, 262, 266,
	273, 281, 282, 328, 333, 339, 343, 344, 348, 349,
	369, 385, 401, 423, 448, 455, 473, 490, 496, 506,
	512, 514, 521, 529, 530, 538, 540, 548, 553, 555,
	556, 557, 558, -534, 2, -472, 214, 2, -295, 214,
	-472, -298, 2, -275, 2, -288, -516, 2, -314, 214,
	-292, -294, -298, -296, 2, 2, 2, 2, -303, 2,
	-525, 214, 2, 28, 28, 549, 387, 242, 512, 597,
	-364, -306, -307, -512, 8, -357, -261, 594, -436, 2,
	-132, -116, 2, 182, -436, 214, 2, -132, 214, 2,
	-436, 214, 2, -132, 214, 2, -602, 2, -525, 214,
	-261, 2, 293, 2, 2, 519, 2, 98, 496, 119,
	2, 415, -621, 436, 523, 2, 2, 2, 2, 2,
	2, 2, 496, -280, 2, -261, 182, 480, -303, 214,
	-304, 2, 449, -630, 398, -525, 214, 2, 549, -296,
	214, 2, -296, 230, 244, -275, 214, 2, 501, 499,
	501, 499, 186, 2, 242, 2, 242, 2, -473, 2,
	-474, -468, -475, 590, 344, -483, 2, -482, -519, 545,
	-105, 592, -105, 592, 453, 592, -525, -292, -292, -436,
	2, -132, -116, 2, -436, 2, -132, 2, -129, -525,
	-128, 592, 186, -436, 2, -132, -116, 2, -436, 2,
	-132, 2, -211, 182, 2, 120, 496, -186, 2, 182,
	540, 2, 8, 2, 221, -525, 444, 394, 174, 2,
	458, 2, 459, 74, -410, 564, 74, 186, 2, 186,
	2, -393, 2, 558, 186, 2, 2, -585, 2, 343,
	186, 2, 186, 2, 186, 2, 186, 2, 186, 2,
	-185, 454, 517, 495, 391, 250, 2, -132, 555, -116,
	250, 249, -436, 555, 2, -606, 182, 442, -436, 2,
	515, 259, 158, 186, -393, 2, 186, 2, 186, 2,
	5, 2, 392, 478, 2, 248, 386, 478, 2, -292,
	496, 549, 449, 120, 28, 2, 441, 2, 2, 88,
	89, 186, 2, 186, 2, 201, 186, 2, 186, 496,
	564, 2, -385, -472, -422, -423, -422, 512, -351, -353,
	-186, 458, 2, -223, -383, -225, 182, -413, -414, -226,
	273, 169, 339, -227, -392, 28, 138, -392, -392, 60,
	593, 593, 11, 12, 76, 41, 583, 584, 585, 586,
	180, 587, 588, 581, 582, 580, 573, 574, 578, 254,
	255, 95, 577, 575, 86, 287, 435, 170, 171, 172,
	173, 412, 228, 34, 229, 14, 15, 16, -317, 33,
	348, 272, 565, 218, 462, 576, 17, 18, 19, 245,
	247, 330, 50, 221, -269, 359, -316, 493, 67, -436,
	-436, -436, -436, -436, -436, -436, -436, 355, 592, -379,
	-431, 590, -218, 592, 592, 592, 592, -512, -218, -436,
	-450, 593, -371, 592, -218, -450, -445, 592, 433, 590,
	592, -453, -436, 5, 5, 5, 592, 594, -566, 559,
	182, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 382, -494, 592, -493,
	592, -493, -493, 550, -491, 592, 567, 560, 592, -491,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 550, 597, -563, -347, 592, -375, -477,
	-436, 585, -375, -375, 343, -368, -436, 106, -396, 251,
	312, 187, 269, 427, 236, -433, 596, -433, -461, 567,
	-218, -469, -291, -218, -471, 592, -467, -461, -106, -512,
	-89, -102, -111, -132, -146, -190, -191, 585, -292, 592,
	186, 592, 594, -516, 186, -357, -275, -292, -308, -309,
	-314, 2, 137, -368, -581, 524, 443, 28, 449, -357,
	-264, 38, -447, -486, -487, -537, 596, -536, -489, -499,
	-495, -498, 372, 376, -518, 54, 546, -501, 241, 4,
	-528, -530, 238, 239, 470, 51, 396, 177, 125, 124,
	336, 56, 508, 509, 510, 511, 191, 192, 58, 547,
	482, 69, 70, -581, 524, 443, 28, 449, -357, 182,
	-523, 2, -522, -521, 116, 455, -519, 5, 2, 153,
	2, 2, 2, -261, -238, 597, 64, 420, 153, -366,
	214, -238, 153, -238, 153, -315, 214, -314, -238, 153,
	-238, 597, 153, -238, 597, 153, 594, 597, 153, -523,
	2, -409, -515, -368, 38, -423, 2, 126, -521, -633,
	597, 271, -320, 286, 327, 210, 344, 562, 337, 130,
	-524, 5, 4, -446, -458, 126, 279, 241, -506, -508,
	8, -507, 9, -509, 583, 584, -514, -513, 109, 594,
	-516, -235, 413, 456, 358, -234, 24, 29, 142, 232,
	315, 543, 159, -333, 233, -330, 362, 153, 474, 533,
	-595, -596, 440, 503, 504, 90, 337, 456, 358, 413,
	153, -389, -391, 38, 118, 315, 357, 61, 225, 291,
	292, 476, 552, 153, 456, 358, 413, 358, 456, 24,
	142, -252, -247, -596, 99, 413, 488, 385, -596, -237,
	474, 533, -595, -596, 440, 413, -236, -335, -330, 362,
	153, 596, 24, 142, 413, 456, 358, -617, -618, 29,
	413, 358, -589, -282, -560, 221, 558, 153, -282, -282,
	-472, 214, -610, 2, 182, -603, -128, 263, 5, 10,
	-525, -128, -364, 597, 597, -516, 585, 442, 441, 153,
	153, 153, 153, 182, 328, 2, 2, 2, 2, 2,
	188, -598, -622, 2, 2, -292, 214, -349, 343, -584,
	-365, 496, -292, 182, 328, 43, -295, 214, 2, -298,
	549, -589, 328, -297, 214, -292, 38, 592, 328, 2,
	-409, 2, 230, -560, 328, -473, -311, -292, -468, -311,
	456, -285, 38, -433, -292, 593, 597, -483, -483, -525,
	-199, 558, 186, 102, 592, 592, -211, -480, 597, -479,
	221, -526, -129, -525, 416, -525, -584, -275, 2, -292,
	2, 496, 252, -525, -199, 221, -525, -525, -525, -515,
	28, 459, 2, -185, 454, 517, 89, 459, 2, -292,
	496, 120, 230, 80, -261, -587, 182, -582, 428, 443,
	524, -581, -292, 120, -292, 120, -292, 120, -292, -292,
	2, 2, 2, 2, 2, 85, 2, -132, -436, 2,
	85, 2, 46, -606, 182, 2, 515, 2, 515, 2,
	-261, -261, -261, 477, 271, -292, -292, -292, -293, -298,
	497, 442, -436, 2, -624, 2, 186, 182, 2, 496,
	230, 496, 230, 120, 186, 74, 120, 28, 496, 439,
	-238, 597, -265, -223, -383, -515, -384, -383, -224, -223,
	-226, 182, 395, 534, 315, 460, 256, -414, -413, 28,
	-436, -418, 176, 314, -436, -416, -438, 583, 584, -507,
	-509, -367, 337, -217, -217, -217, -354, -463, -436, 385,
	230, -488, -486, -486, -290, -516, 508, -436, -436, -436,
	-436, -436, -436, -436, -436, -436, -436, -436, -436, -436,
	-436, -436, -436, -436, -436, -436, -436, -436, -436, -436,
	-436, -436, -436, -436, -436, -436, -436, -436, -436, -436,
	-436, -436, -436, 272, 218, 462, 50, 221, -436, 512,
	-436, -436, -436, -436, 309, 328, 333, 521, 167, 531,
	138, 337, -636, 490, 40, -443, -218, -372, 592, -457,
	35, 473, 28, -450, 592, 2, -431, -436, -432, -318,
	-316, -261, 583, 584, 585, 586, 587, 588, 573, 574,
	575, 14, 15, 16, 578, 582, 580, 581, 180, 95,
	577, 287, 435, 86, 170, 171, 172, 173, 254, 255,
	17, 18, 19, 34, 576, -369, -368, -368, 593, 548,
	28, 138, 585, 2, 593, 597, 38, 593, -436, -369,
	-449, -445, -368, -456, -455, 555, -404, -405, 563, 296,
	123, 212, 294, -406, 447, -510, 8, -516, 585, -567,
	175, 205, 592, 593, 2, 593, 2, 593, -436, 2,
	593, -436, 2, 593, -436, 2, 593, -436, 2, 593,
	2, -436, -436, -436, -436, -436, -436, -436, -368, 8,
	-510, -510, 508, 508, -510, -510, -510, -502, 372, 373,
	374, 375, 274, 275, 276, 277, 376, 377, 378, 379,
	301, 302, 303, 304, 297, 298, 299, 300, 305, 306,
	307, 308, 196, 197, 198, 199, 192, 193, 194, 195,
	-502, -398, 2, -504, -368, 4, 563, 296, 123, 212,
	294, 447, 5, -398, 2, -399, 2, -436, -368, -400,
	-437, -438, 583, 584, 576, -317, -450, -401, 2, -436,
	-369, -436, 57, 266, 514, -402, -436, 186, -368, -368,
	2, -368, 2, -564, 38, -368, -360, 597, 186, 38,
	4, -360, -360, 592, 593, 597, -397, 209, 290, 285,
	244, -397, -467, -396, 251, -394, 353, -394, -394, -461,
	-276, 590, 598, -516, -461, -460, -459, 38, -285, 350,
	-461, -461, 594, 593, -460, 591, -579, 592, 595, 595,
	595, 595, 595, -292, 592, -368, -516, 594, 479, 2,
	593, 245, 245, 245, 245, 434, 593, 512, -583, -301,
	-305, 497, 2, 558, -104, 345, 593, 597, -359, 37,
	590, 594, -510, 2, 2, -505, 550, 592, 592, -405,
	592, 186, -583, -305, 497, 2, -358, 597, 512, -261,
	2, -292, -366, -238, 153, -366, -366, -238, 597, 153,
	-275, -296, -301, -303, -305, -261, -525, -526, -238, -297,
	-614, 593, 516, -424, -319, 395, 472, 414, 451, 492,
	8, 9, 8, 9, 597, -516, 597, -615, 93, 512,
	78, 443, -254, 280, 512, -427, 214, 78, -538, -278,
	93, -539, -261, 72, 530, 385, 185, 151, -615, 93,
	385, -615, 93, 2, 232, 93, 456, 477, 28, 60,
	-472, 41, 41, 28, -613, 326, 267, 554, 186, 564,
	496, 230, 443, 512, 512, -472, -391, -486, 118, 291,
	292, 60, -511, -506, 583, 584, -511, 60, -511, -511,
	-511, 558, -295, -472, 443, 512, 512, 512, -250, -247,
	368, 404, 404, 512, 512, -634, 575, 404, 597, 41,
	41, 28, -613, 326, 267, 186, 512, -314, -276, 544,
	42, 544, 42, 544, 512, 42, 443, 512, 597, 42,
	512, 512, -13, 456, 570, 418, -590, -266, 105, 321,
	284, 322, 97, 318, 96, 317, 103, 319, 104, 320,
	551, 331, 63, 316, 295, 323, -267, -268, 364, 542,
	120, -525, -13, -13, 456, 358, 413, 153, -611, 221,
	-600, 221, -480, 221, -480, -306, -261, 594, -132, -436,
	-436, -132, -436, -132, 46, 153, 2, -630, 260, 592,
	-323, 328, 186, -357, -481, 242, 597, -365, -581, 153,
	-522, -390, -389, 328, -297, 214, 2, 153, -347, 328,
	147, 592, 393, 2, 153, -277, 214, -262, -261, -409,
	-241, 500, 153, -387, 540, -419, -132, 592, 126, 38,
	-419, -376, -377, -478, -378, -278, 592, -285, -433, -105,
	-482, 593, 593, 593, -198, 347, -197, -261, 5, -211,
	540, -322, -428, -427, -542, -543, -538, 272, 230, 530,
	244, 168, -348, -279, -278, 119, -205, 558, -128, -129,
	593, -480, 221, 480, -199, -199, -480, -480, -292, 182,
	-525, -199, -199, -199, 2, 2, 2, 2, -393, -292,
	-275, -314, -292, 594, -357, -357, -305, -301, -393, -275,
	-393, -275, -393, -275, -132, -436, 2, 453, 182, 182,
	594, -393, -350, 423, 2, 393, 120, 496, 362, 230,
	-292, -314, -292, -314, -275, 120, -275, 121, -292, -472,
	-384, -224, 344, 256, 460, -416, -417, -438, 433, 434,
	-417, 433, 434, 8, 9, 8, 9, -228, 464, 332,
	-366, 597, -232, 39, 134, 256, -292, 564, 149, -436,
	-436, 512, -636, 490, -443, 149, -436, 309, 333, 521,
	167, 531, 138, 337, 186, 592, -437, -437, 593, -370,
	-436, -436, 591, 600, 593, 594, 593, -353, 597, -351,
	-436, -368, -368, 593, 594, -368, -357, 591, 591, 597,
	593, -454, -455, 143, -436, 512, 512, 512, 512, 592,
	593, 594, -572, 354, 592, 592, -436, 593, 593, 593,
	593, 38, 597, 597, 597, 593, 597, 597, 597, 593,
	593, 593, 597, 593, 564, 564, 593, 593, 593, 593,
	597, 593, 597, 593, 186, 593, 593, -407, 369, 593,
	11, 12, 583, 584, 585, 586, 180, 587, 588, 581,
	582, 580, 573, 574, 575, 86, 287, 435, 14, 15,
	16, -317, 245, 221, -437, -437, -437, -437, 593, -441,
	-442, 186, 182, 38, -402, -402, -402, 593, 186, -368,
	593, 593, 592, -565, 289, 328, 593, -430, -429, 556,
	-477, -361, 2, -467, -287, -516, -430, -430, -368, -436,
	251, 251, -395, 540, 343, -397, -467, -460, -512, -435,
	-434, 184, 39, 134, 324, 217, -460, -285, -347, -460,
	-460, -516, -461, -461, -459, 593, -580, -512, 593, -362,
	-470, -559, -353, 594, -516, -208, -560, -187, 5, 333,
	-187, -187, -187, -357, 512, 512, 221, 25, 370, -486,
	590, 591, 8, -516, 592, -510, -510, -510, -357, 186,
	186, 221, 186, -522, -522, 2, -238, -366, -238, -238,
	-314, -315, -238, -238, -238, -388, 558, -513, -423, 528,
	83, 395, 508, -513, -234, 413, -278, -278, -292, -302,
	-261, 200, 405, -522, 328, -427, 214, -240, 328, -486,
	-286, -261, 592, -411, 560, 256, 256, 540, -278, -286,
	256, 214, -278, 214, -286, 2, -286, -591, 395, 338,
	-436, 60, -331, 278, 393, 329, -235, 413, 456, 358,
	-132, -132, -132, -132, -132, 592, -614, 540, 137, -292,
	-314, -292, -302, -522, -297, 456, 358, 413, 325, -308,
	-511, -511, -389, 456, 358, 413, -302, -522, -295, -522,
	421, 126, -246, 214, -261, -246, 214, 443, -275, 404,
	564, 45, -634, -236, -132, -132, -132, -132, -132, 592,
	-276, -237, 413, 5, 214, -278, 5, -278, 214, 5,
	-261, -278, -302, -522, -618, 24, 142, -278, -302, -522,
	-144, 28, -186, -266, -525, 333, 536, -275, -589, -282,
	443, 512, 512, -472, -607, -608, 202, 426, 443, -357,
	-128, -202, 558, -128, -196, 226, 585, -586, -261, 549,
	-261, -321, -324, -322, -278, -214, -215, 560, 558, 153,
	-312, -292, 590, -199, -525, -292, -481, -303, -304, 153,
	-347, 328, -525, 38, 153, 592, 2, 2, -296, 343,
	328, -277, 214, -242, 144, -634, -275, -430, -361, -386,
	-421, 423, 343, -348, 545, -285, -386, -363, 597, 186,
	575, 594, -348, -476, 585, -105, -105, -199, 597, 592,
	575, 575, 592, -525, -525, 593, 597, -240, -292, -277,
	230, 230, -284, -262, 593, 597, 594, 592, -207, 347,
	-206, 145, 258, 243, 466, 467, 468, 469, 136, 465,
	-480, -205, -129, 186, 186, -64, 558, 496, -199, 596,
	-261, -393, -393, -393, 453, 453, -261, -357, -288, -275,
	-292, -289, -314, 182, 182, -275, 534, -417, 344, 283,
	-463, -233, 566, -292, 596, -436, -436, 149, 149, -436,
	-437, -437, -436, 149, 186, 592, -436, -447, 33, 33,
	593, 597, -432, -436, -316, 593, 548, -353, -353, 593,
	585, -516, 596, 593, -445, 146, -436, 506, 296, 212,
	294, -406, 294, -406, -406, -510, 5, -516, 585, -573,
	-281, 592, -261, 556, -352, 349, 593, -488, -486, -436,
	-436, -436, -436, -436, -510, -491, -491, -506, -506, -436,
	-441, -436, -488, -486, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, 138, 328, 337, -437, -442, -441,
	-436, -436, -486, 593, 593, 593, -368, -104, 592, 289,
	-380, 205, -436, -480, 597, -380, -380, 593, -467, -467,
	592, -436, 251, 591, 597, 599, 575, -347, 594, -459,
	-460, 591, 593, 597, 593, 597, -420, 38, 593, -516,
	-430, -210, -209, 135, 53, 107, 133, 333, -357, -357,
	443, 346, 5, 8, 590, 591, 594, -510, 593, 593,
	593, -357, -357, 443, -357, -238, -238, 119, 315, -436,
	512, 512, 60, 221, 153, 328, 542, -544, -539, 151,
	-436, 592, 230, 592, 592, 2, -230, -231, 142, 456,
	24, -616, 2, 540, 153, -238, 153, -238, 562, -331,
	592, 592, 512, 443, -254, 512, 558, -368, -436, -200,
	126, -515, -596, 596, -596, 596, 443, 512, 512, 443,
	512, 512, 328, 153, 558, 166, 166, 564, -246, 558,
	-368, 512, -490, 48, 26, 328, -296, -238, 153, 512,
	512, 524, 456, -525, 333, -13, -302, -522, -297, 456,
	358, 413, -588, -358, -588, 202, -305, -480, -204, 347,
	-203, 145, 425, 136, 258, 223, -480, -202, 186, 242,
	558, -297, 2, 593, 593, 597, -545, 38, 341, 341,
	592, -292, -85, 558, -479, -512, -592, 558, 43, -295,
	38, 153, -589, -132, -297, -484, -485, 5, 38, -292,
	153, 343, 328, -243, 265, -634, -520, -560, -353, -386,
	-375, 329, 91, 593, -430, -377, -361, -436, 2, 593,
	-197, -198, -525, -525, -525, -199, -211, -211, -428, -325,
	592, -277, -262, 592, -211, -279, 2, -526, 597, 592,
	575, 575, 575, -205, -480, -128, -132, 347, -292, 585,
	-393, -337, -336, 362, 337, -337, 433, 433, 344, 176,
	261, -232, -276, -436, -436, 149, 33, 33, -436, -436,
	-447, 593, -436, -436, -368, 591, 5, -436, 593, 593,
	8, -436, 593, 594, -574, -261, -436, 593, 60, 593,
	593, 597, 597, 593, 593, 593, 593, 593, 593, 593,
	-442, 186, 138, 337, 592, 593, 593, -104, -444, 208,
	60, -467, -444, -444, -395, -357, -467, -434, -276, 590,
	-516, -512, -470, 592, 594, -209, 575, -525, -525, 558,
	-305, 591, 2, 590, -516, 593, -305, 119, -278, -278,
	496, 433, -246, 385, -427, 153, -546, 93, -548, 76,
	168, 102, 328, 333, 530, 385, 72, 126, 401, -626,
	38, 569, 593, -355, -464, -559, 592, -261, -355, -357,
	328, 485, 126, 328, 126, 553, 119, 2, 524, 79,
	-278, -286, -357, -357, -292, -302, -522, 160, 593, 597,
	575, 2, 585, 585, -302, -522, -297, -302, -522, -295,
	153, -246, 360, 166, 160, 593, -276, 5, 5, 153,
	-273, 76, -278, 5, -278, -296, 119, 443, 512, 512,
	343, 343, 346, -202, 597, 592, 575, 575, -202, -526,
	-128, 2, -347, -338, 232, -278, -543, -540, -541, 385,
	-547, -549, 168, 385, -132, 2, -213, -212, -261, 5,
	592, -323, 347, 591, -594, 347, -593, 117, 136, -522,
	-390, -132, -297, -347, 593, 597, 147, -412, 540, -276,
	-292, 153, -244, 264, -634, -520, -241, -415, -413, 139,
	592, 343, -132, -353, 575, 593, 593, 119, 119, 224,
	152, -355, 592, 592, -357, 119, 593, -206, -207, -525,
	-128, -525, -205, -480, -65, -66, 230, 93, 367, -289,
	496, 230, 592, 592, -232, -436, -436, -436, 593, -353,
	-516, 585, -568, 362, 593, -463, -436, -436, -437, 186,
	592, -447, 593, -569, 557, -436, -381, -382, -436, 431,
	108, 206, -569, -569, 593, -512, 2, -525, 2, 512,
	590, 2, 186, 221, 38, 404, -427, -286, -290, -283,
	-261, 168, 214, 333, 553, -411, 256, 592, -437, -292,
	592, 2, 30, -627, 130, 235, 593, 597, -465, -272,
	-261, -436, -465, 593, 593, 333, 333, 553, -436, -486,
	592, -238, -238, 593, 593, -436, 512, -515, 100, -513,
	2, -596, -246, -275, -436, 512, 5, -238, -290, -238,
	-238, -273, 524, -302, -522, -297, -612, 497, 450, 525,
	444, 189, 432, -612, 182, -203, -204, -525, -128, -202,
	38, -328, 234, 2, -545, 256, -283, 256, -625, 558,
	593, 597, 575, 575, -321, -214, -86, -87, 513, -479,
	597, 592, 575, -347, 38, 5, 592, 592, -261, 343,
	592, -276, -256, 92, -634, -520, -242, -386, 329, -357,
	93, -415, -443, -199, 592, 592, -326, 81, 94, 127,
	213, 190, 231, 477, 483, 28, -326, 593, -355, -355,
	593, 592, -199, 593, 597, 28, 592, 28, 592, -292,
	-314, -368, -368, 593, -353, 60, 597, 593, 593, -437,
	-447, 593, -570, -571, -281, 597, 592, 592, 457, 591,
	-357, 2, -357, -246, 385, -261, -548, -283, 328, 540,
	-436, -263, 592, -436, 38, 235, 131, 219, -426, -628,
	101, 486, 222, -464, -232, 593, -425, 540, 401, -273,
	-355, 592, 592, 592, 575, 186, 592, -490, -238, -296,
	512, 2, 2, 186, -588, 593, -601, 399, -132, -332,
	-333, 221, 592, -327, 343, 119, 315, -212, -513, -513,
	593, 38, -87, 9, -593, -594, -436, 38, -132, -484,
	-355, -292, -355, 343, -248, -247, 273, -520, -243, 593,
	-286, -386, -526, -526, -425, 593, 593, -526, -66, -357,
	-357, 593, 593, -575, 393, 434, 207, -368, -354, 593,
	597, 38, -382, 2, 2, 2, 404, 153, 209, 593,
	-550, 288, -261, 593, 131, 219, -328, 592, -233, -465,
	-328, 209, -292, -597, 540, 593, -340, -339, -336, -342,
	-341, -336, -368, -513, 100, 360, -368, -273, -357, -357,
	343, -604, 187, -603, 5, 10, -214, 360, -356, -466,
	-278, 82, 119, -338, -132, 593, -132, 593, 593, -412,
	593, -292, -245, -527, 404, 406, -634, -244, -430, 593,
	593, -426, -425, -334, -330, 593, 593, 593, 593, -576,
	-577, 50, 527, 109, -436, -576, -576, -571, -573, 168,
	558, -551, -554, -553, 343, 463, 187, 361, 593, 485,
	552, -334, -357, 558, -347, -436, -425, 593, 597, 545,
	593, 597, 545, 593, 186, 593, -238, -609, 558, -238,
	-612, -201, 558, 46, -327, -292, 593, 597, 384, 132,
	142, -328, -625, -425, 592, -426, 592, -253, -252, -634,
	-506, -256, 139, -199, -199, -328, -426, -215, 558, -199,
	-578, 151, -577, 381, 181, 433, 381, 181, -578, -578,
	-283, 55, -553, 343, -554, 343, 534, 132, -627, 593,
	55, -550, -328, -339, 221, -341, 186, 360, 202, 186,
	441, -603, 30, -255, -254, 592, -466, 434, 434, 2,
	-332, -327, -426, -355, -328, -355, -249, -250, -251, -357,
	-248, 329, 534, -334, -328, -430, 109, 205, 507, 315,
	33, 575, -552, 315, 420, 64, 456, -552, -430, 575,
	-551, 592, 592, 346, -357, 347, -357, 2, -214, -328,
	593, -334, 593, -245, 456, -215, -334, 433, 351, -577,
	-436, 23, 333, 126, -436, -627, -368, -368, -238, -198,
	592, 593, -327, -334, -425, -215, -426, -253, -376, -430,
	-215, 593, 593, -198, -239, 64, 420, -255, -215, -426,
	-430, -328, -249, -430, -430, -329, -330, 512, 593, -430,
	-328, -334, 592, -334, -215, -368, -215, -430, 593, -430,
	-329,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 545, 546, 548, 549, 550, 552,
	553, 555, 557, 559, 560, 561, 563, 564, 566, 567,
	568, 569, 570, 572, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	641, 643, 0, 1377, 1379, 1381, 1383, 0, 789, 0,
	36, 37, 39, 0, -2, 330, 332, 334, 0, 361,
	363, 364, 366, 368, 369, 370, 372, -2, 0, 478,
	479, 481, 483, -2, 0, 991, 993, 0, 630, 632,
	0, 996, 998, 0, 0, 652, 653, 0, 1488, -2,
	646, 648, 650, 716, 718, 720, 722, 724, 726, 728,
	730, 732, 734, 735, 737, 739, 741, 743, 745, 746,
	748, 750, 752, 753, 755, 756, 758, 760, 762, 764,
	766, 768, 770, 772, 774, 776, 778, 780, 782, -2,
	785, 786, -2, -2, 0, -2, -2, -2, 1395, 41,
	43, 45, 47, 49, 51, 53, 55, 57, 59, 422,
	424, 426, 428, 430, 433, 435, 437, 1546, 485, 487,
	489, 491, 493, 495, 497, 0, -2, 1560, 0, 0,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 107, 108, 109, 110, 111, 112, 113, 114, 75,
	76, 77, 79, 80, 81, 82, 86, 87, 88, 89,
	90, 91, 92, 93, 94, 105, 73, 0, 0, 1519,
	1521, 1523, 1525, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 25, 27, 29, 547, 551,
	554, 556, 558, 562, 565, 571, 573, 575, 530, 531,
	534, 2251, 2269, 2270, 2271, 2274, 2275, 2276, 2277, 2278,
	2279, 2726, 2808, 2809, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 532,
	533, 1168, 0, 599, 597, 2236, 600, 2525, 602, 604,
	472, 473, 474, 475, 476, 477, 0, 623, 613, 1558,
	624, 626, 627, 628, 629, 594, 592, 0, 623, 2305,
	621, 1375, 1376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 401, 1226, 1227, 1228, 1360, 1361,
	2571, 1402, 0, 231, 642, -2, -2, -2, 2691, -2,
	674, -2, 685, 688, 689, 681, 2695, 0, 2574, -2,
	692, 1378, 1380, 1382, 787, 788, 2255, 0, 0, 0,
	0, 0, 38, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 241, -2, -2, -2, -2, 0, 0,
	2619, 2357, 2204, 2271, 2207, 2202, 331, 333, 335, 336,
	0, 0, 0, 0, 0, 0, 362, 365, 367, 371,
	-2, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1052, 1044, 1045, 1284, 0, 0,
	0, -2, 480, 482, 535, 536, 0, 1547, 1547, 543,
	544, -2, 0, 0, 0, 0, 301, 289, 992, 994,
	995, 0, 0, 0, 0, 631, 633, 0, 0, 270,
	997, 999, 1000, 0, 0, 0, 0, 0, 303, 0,
	0, 647, 649, 651, 717, 719, 721, 723, 725, 727,
	729, 731, 733, 736, 738, 740, 742, 744, 747, 749,
	751, 754, 757, 759, 761, 763, 765, 767, 769, 771,
	773, 775, 777, 779, 781, 783, 784, 795, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 888, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 972, 0, 0, 798, 800, 801, 802, 0, 861,
	886, 887, 896, 0, 1208, 1548, 1404, 1385, 1399, 1404,
	1387, 1388, 1389, 1390, 1391, 1396, 1398, 1392, 1393, 1394,
	42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
	423, 425, 427, 429, 431, 434, 436, 438, -2, 1517,
	1518, 486, 488, 490, 492, 494, 496, 498, 634, 0,
	636, 0, 799, -2, 0, 1552, 1552, 1552, 0, 0,
	1518, 1516, 0, 639, 640, 696, 697, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 2078, 1908, 0, 698,
	-2, 1941, 1943, 2666, 2498, 2691, 2077, 1945, 1946, 1947,
	1948, 1949, 0, 1951, 1952, 1953, 1954, 1955, 1956, 0,
	1958, 0, 1963, 1964, 1965, 0, 2673, 2181, 2265, -2,
	0, 0, 2679, 2261, 0, 2044, 1981, -2, -2, 2288,
	2267, 1752, 1753, 1754, 1755, 1756, -2, -2, 2709, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	0, 2654, 2674, 2675, 2680, 2682, 2676, 2663, 2006, 2370,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1779, 1788, -2, -2, -2, -2, -2,
	-2, -2, 2667, 2668, 2685, 2688, 2694, 2699, 2700, 2672,
	2681, 2708, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 1780, -2,
	-2, -2, -2, 1535, 2538, 1538, 1168, 1536, 1520, 1522,
	0, 1524, 0, 0, 0, 1529, 1555, 1553, 0, 1604,
	1533, 1534, 1622, 1622, 1646, 0, 1627, 0, 1646, 1547,
	1673, 0, 1633, 2563, 1982, 1983, 0, 2271, 2266, -2,
	-2, 2706, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 0, 601, 603, 0, 0, 0, 622, 1557, 0,
	0, 0, 0, 0, 0, 0, 404, 405, 406, 407,
	408, 2674, 0, 0, 0, 413, 0, 415, 416, 417,
	418, 419, 420, 421, 200, 2674, 503, 528, 0, 200,
	2674, 506, 200, 2674, 509, 0, 512, 1282, 200, 2674,
	515, 2232, 200, 2674, 518, 520, 2240, 200, 2674, 524,
	2247, 2245, 525, 2674, 527, 306, 304, 305, 2284, 2285,
	2292, 2293, 2294, 2295, 2707, 2709, 1371, 1372, 1373, 1374,
	0, 1401, 1283, 644, 645, 0, 669, 0, 673, 2662,
	-2, 0, 2583, -2, 677, 1405, 1409, 1410, 1411, 1412,
	1413, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	670, 671, 684, 690, 693, 0, 790, 791, 792, 793,
	794, 72, 0, 2674, 1673, 74, 0, 2226, 2296, 2297,
	2298, 2299, 2300, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 78, 0, 2674, 83, 0, 2674,
	0, -2, 95, 0, 106, 0, 2229, 115, 0, 2674,
	0, 2201, -2, 0, 212, 290, 291, 292, 0, 1019,
	-2, 2674, 1220, 1222, 1222, 0, -2, 0, 0, 0,
	982, 2198, 2203, 983, 2222, 984, 2208, 0, 337, 338,
	339, 340, 341, 0, 342, 2674, 344, 345, 0, 347,
	348, 2674, 350, 351, 0, 353, 0, 253, 254, 2674,
	375, 377, 0, 379, 380, 0, 382, 0, 0, 0,
	386, -2, 402, 0, 399, 389, 390, 392, 393, 394,
	395, 396, 0, 442, 440, 2237, 0, 0, -2, 2674,
	0, 1016, 0, 0, 1262, -2, 2674, 1213, 0, 1269,
	2674, 1265, 0, -2, 0, 1545, 2674, 1422, 1048, 1049,
	1050, 1051, 1685, 469, 0, 1453, 0, 1455, 0, 1474,
	1679, 1622, 0, 0, 1684, 0, -2, 588, 2254, -2,
	538, 0, 539, 0, -2, 0, 318, 0, 0, 1001,
	1002, 1003, 1004, 1005, 1008, 1009, 1010, 1011, 1659, 271,
	273, 0, 0, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 0, 0, 654, 0, 0, 796, 797, 0,
	0, 807, 808, 809, 0, 318, 2575, 2534, 2391, 816,
	0, 819, 822, -2, 0, 0, 0, 0, 826, 0,
	831, 832, 833, 0, 0, 837, 839, 990, 841, 0,
	0, 843, 0, 847, 0, 850, 0, 852, 0, 854,
	-2, -2, -2, 862, 863, -2, 868, -2, 0, 872,
	-2, 0, 875, 0, 878, -2, 0, 888, 884, 885,
	0, 0, 0, 0, 904, 905, 0, 914, 0, 917,
	918, 919, 0, 923, 924, 0, 926, 927, 928, 929,
	0, 2646, 2580, 2357, 0, 935, -2, 941, 943, 0,
	-2, 0, 959, 0, 963, 0, 0, 971, 0, 0,
	803, 804, 200, 1677, 1384, -2, 1386, 0, -2, 0,
	635, 0, 638, 1577, 1503, 1500, 0, 1574, 1575, 1504,
	0, 0, 0, 1511, 0, 1550, 1551, 0, 0, 0,
	1490, 1491, 0, 0, 0, 0, 2083, 2084, 2085, 2086,
	2099, 2087, 2088, 2098, 2096, 2097, 2089, 2090, 2095, 2109,
	2110, 2100, 2101, 2091, 2104, 2102, 2103, 2105, 2106, 2107,
	2108, 0, 0, 2114, 0, 2092, 2093, 2094, 2122, 0,
	0, 2123, 0, 2125, 0, 2115, 2111, 2112, 2113, 0,
	1887, 1889, 2189, 0, 0, 0, 2121, 2116, 2117, 1825,
	1826, 1827, 1828, 1829, 1862, 1866, 1867, 0, 0, 1942,
	2186, 2185, 1944, 0, 0, 2137, 0, 1957, -2, 0,
	2078, 2132, 0, 0, 1966, 1967, 1968, 0, 0, 2137,
	0, 0, 2180, 1978, 1979, 1817, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 1765, 0, 1767,
	0, 1768, 1769, 1776, 1789, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 2161, -2, 0,
	0, 0, 0, 1781, 0, 1537, 0, 0, 1608, 2190,
	2194, 2195, 1608, 1608, 0, 0, 2138, 1670, 1670, 0,
	0, 1665, 1665, 1665, 1663, 1646, 0, 1646, 1656, 0,
	1646, 1646, 0, -2, 1627, 0, 0, 1656, 0, 1640,
	576, 578, 580, 582, 583, 584, 586, 1674, 1675, 0,
	0, 0, 0, 2272, 0, 0, 0, 0, 0, 2257,
	0, 358, 0, 0, 0, 2629, 2574, 0, -2, 606,
	625, 1547, 0, 2140, 1700, 1704, 0, 1706, 1707, 1708,
	1709, 1710, 0, 0, 1701, -2, 1777, 1779, 1800, 2289,
	2290, 2291, 1760, 1761, 1762, 1763, 1764, 1772, 1759, 1759,
	1759, 1770, 1799, 1791, 1799, 1795, 1745, 1746, 1747, 1782,
	1783, 1784, 1785, 0, 2629, 2574, 0, -2, 615, 0,
	0, 1485, 216, 218, 219, 220, 221, 222, 403, 0,
	410, 411, 412, 0, 499, 0, 198, 199, 0, 200,
	2674, 504, 0, 507, 0, 200, 2674, 2196, 513, 0,
	516, 0, 0, 522, 0, 0, 0, 0, 0, 200,
	1487, 0, 0, 0, 0, -2, 679, 686, 687, 0,
	1407, 0, 1414, 707, 708, 709, 1416, 1417, 0, 1419,
	682, 710, 711, 712, 713, 714, 715, 0, 2210, 2211,
	2212, 2213, 2216, 2217, 0, 0, 680, 700, 683, 0,
	694, 116, 1357, 0, 0, 159, 0, 1357, 1357, 0,
	0, 0, 0, 185, 0, 1087, 0, 0, 0, 0,
	131, 144, 155, 128, 129, 0, 0, 0, 0, 0,
	0, 84, 1190, 0, 1193, 0, 0, 0, 0, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 103, 143, 0, 0, 1450, 0, 138, 118,
	0, 0, 131, 145, 157, 0, 189, 191, 1084, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 223, 0,
	0, 0, 1214, 0, 0, 0, 1544, 0, 0, 0,
	0, 2674, 1355, 1340, 0, 0, 1659, 2440, -2, -2,
	271, 1659, 981, 0, 0, 2272, 2206, 0, 0, 0,
	0, 0, 0, 0, 0, 378, 381, 383, 384, 385,
	0, 1261, 0, 391, 432, 1139, 2674, 0, 0, 459,
	454, 0, 456, 0, 0, 0, 1189, 2674, 1187, 2241,
	0, 1211, 0, 1168, 2674, 2239, 0, 0, 0, 1270,
	2281, 1279, 1283, 1440, 0, 471, 0, 1456, 1458, 0,
	0, 1680, 0, 1682, 1622, 1547, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 277, 0, 1658,
	0, 0, 1659, 271, 2549, 318, 318, 1659, 656, 1659,
	658, 0, 0, 810, 811, 0, 318, 318, 318, 817,
	818, 820, 821, -2, -2, -2, -2, 823, 824, 911,
	0, 0, 0, 910, 836, 840, 0, 975, 2558, 2574,
	2629, 988, 911, 2357, 911, 2357, 911, 2357, 851, 853,
	856, 899, 907, 867, 874, 0, 869, 873, 876, 879,
	0, 881, 889, -2, 0, 891, 0, 893, 0, 895,
	911, 912, 915, 922, 925, 930, 931, 932, 933, 2252,
	934, -2, 938, 939, 0, 950, 955, 956, 952, 0,
	0, 0, 0, 0, 0, 966, 967, 0, 0, 974,
	1207, 0, 1397, 1577, 1503, 637, 1494, 1576, 1495, 1502,
	1505, 0, 0, 1507, 0, 1509, 0, 1572, 1573, 1580,
	1581, 0, 1591, 1592, 1584, 0, -2, 0, 0, 1587,
	1588, 1513, 0, 1530, 1531, 1532, 1561, 1564, 1298, 0,
	2808, 1821, 1695, 1822, 1823, 2225, 0, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, -2, -2, -2,
	-2, -2, -2, -2, -2, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, -2, -2, -2, 1863,
	1864, 1865, -2, 2124, 2126, 0, 2189, 0, -2, 0,
	-2, -2, -2, -2, 1884, 0, 1886, 1891, 1893, 1895,
	0, 0, 0, 0, 2188, 1905, 2172, 2173, 0, 0,
	2080, 2081, 2082, 1890, 0, 1909, 2187, 2184, 0, 0,
	2118, 0, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 0, 2136, 1560, 1970, 0,
	0, 0, 0, 1977, 1962, 2134, 0, 2133, 0, 0,
	0, 2144, 0, 2179, 2175, 0, 2223, 1816, 1803, 1804,
	1805, 1806, 1807, 1808, 1818, 0, 2220, 2258, 2264, 2054,
	0, 0, 0, 2007, 2008, 2009, 2010, 2011, 0, 2013,
	2014, 0, 2016, 2017, 0, 2019, 2020, 0, 2022, 2023,
	2024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	0, 0, 2026, 0, 2147, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2028, 0, 2030, 2138, 2158, 0,
	0, 1910, 0, 0, 0, 0, 2078, 0, 2033, 2138,
	2166, 0, 0, 0, 0, 0, 2138, 0, 2171, 0,
	2040, 0, 2042, 1539, 0, 0, 1690, 0, 0, 0,
	2193, 1690, 1690, 0, 1603, 0, 0, 1666, 1667, 1668,
	1669, 0, 0, 1670, 0, 1660, 1664, 1661, 1662, 1656,
	1619, 0, 0, 2227, 1656, 1625, 1655, 0, 1168, 1645,
	1656, 1656, 0, -2, 1629, 1646, 0, 0, 577, 579,
	581, 585, 587, 0, 0, 1560, -2, 0, -2, 320,
	1167, 0, 0, 0, 0, 596, 598, 0, 0, 519,
	0, 0, 612, 0, 590, 0, 593, 0, 1691, 1694,
	0, 0, 1705, 1711, 1712, 0, -2, 0, 0, 1801,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	414, 529, 200, 501, 0, 200, 200, 510, 0, 0,
	200, 521, 200, 2248, 200, 2246, 307, 526, 1486, 234,
	0, 672, 0, 1406, 1415, 0, 704, 0, 706, 0,
	2214, 2218, 2215, 2219, 0, 695, 0, 0, 0, 0,
	1356, 0, 1305, 0, 0, 163, 2674, 0, 202, 0,
	0, 1132, 2233, 0, 1124, 0, 0, 2377, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 130, 0, 0,
	0, 0, 0, 0, 0, 0, 1191, 1192, 1194, 1201,
	1203, 0, 1197, 2221, 0, 0, 1198, 0, 1200, 1202,
	1204, 0, 0, 0, 0, 0, 0, 0, 97, 104,
	0, 0, 0, 0, 0, 0, 1449, 1450, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 2200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 0, 0, 0, 1257, 1255, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 0, 0,
	0, -2, 1218, 1219, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 309, 2199, 2209, 0, 1006, 1007,
	343, 346, 349, 352, 240, 0, 387, 0, 0, 1054,
	1029, 0, 0, 441, 318, 0, 0, 455, 459, 2250,
	1014, 1185, 1188, 0, 1168, 2674, 1234, 0, 0, 0,
	0, 0, 0, 1268, 0, 0, 2674, 2228, 2280, 2281,
	1442, 1450, 0, 1690, 0, 1472, 1459, 0, 0, 0,
	1472, 1476, 1477, 1479, 1480, 0, 0, 1681, 1687, 537,
	589, 1547, 1547, 318, 316, 2501, 314, 311, 313, 0,
	0, 0, 1055, 1057, 1058, 1059, 202, 0, 2281, 1124,
	2429, 2281, 0, 1462, 1464, 0, 265, 0, 274, 1659,
	272, 277, 0, 0, 0, 453, 655, 660, 805, 0,
	318, 813, 814, 815, 858, 901, 909, 954, 825, 827,
	828, 829, 0, 0, 989, 985, 986, 987, 842, 911,
	845, 911, 848, 911, 871, 877, 883, 890, 0, 0,
	0, 903, 920, 0, 937, 0, 0, 0, 0, 0,
	0, 0, 960, 961, 962, 964, 969, 968, 973, 1678,
	1498, 1499, 1501, 0, 1510, 0, 0, 1586, -2, -2,
	1585, 1589, 1590, -2, -2, -2, -2, 1506, 0, 1515,
	1512, 0, 1571, 1296, 1297, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1906, 0, -2, 1885, 1888, 1892,
	1894, 1896, 0, 0, 0, 0, 0, 0, 2127, 0,
	2129, 1907, 2182, 2185, 2120, 0, 2076, 0, 0, 1559,
	1560, 1560, 0, 1976, 0, 2135, 0, 2142, 2143, 0,
	1969, 0, 2176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 2012, 2015, 2018,
	2021, 0, 0, 0, 0, 2001, 0, 0, 0, 2005,
	1771, 1757, 0, 1799, 1797, 1798, 1792, 1799, 1796, 1749,
	0, 1748, 0, 2025, 0, 2027, 2029, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1913, 1914, 1915, 1935, 2032, 2164,
	2165, 0, 0, 0, 0, 0, 0, 2038, 0, 2170,
	2039, 2041, 1547, 0, 1540, 0, 1605, 1594, 1689, 0,
	2191, 1659, 1607, 1609, 2192, 2230, 1594, 1594, 0, 2139,
	0, 0, 1650, 0, 0, 0, 1652, 1623, 0, 0,
	1617, 0, 1613, 1614, 1615, 1616, 1624, 1168, 1654, 1626,
	1630, 2258, 0, 1656, 0, 1641, 0, 1643, 1676, 0,
	1635, 1638, 0, 0, 2273, 1690, 0, 354, 359, 360,
	355, 356, 357, 605, 0, 0, 0, 0, 0, 2141,
	0, 1696, 0, 1702, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 217, 1484, 409, 500, 200, 505, 508,
	2197, 200, 514, 517, 523, 230, 0, 668, -2, 702,
	703, 705, 0, 701, 160, 1357, 0, 0, 1301, 1303,
	2244, 1307, 1313, 1316, 0, 165, 2674, 176, 0, 1103,
	0, 2231, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 2674, 200, 2674, 200, 179, 181, 184, 0, 188,
	186, 0, 1091, 0, 0, 1094, 117, 1357, 0, 0,
	120, 124, 132, 133, 136, 0, 0, 0, 142, 0,
	0, 0, 1318, 1322, 1330, 0, 0, 0, 1195, 1196,
	1199, 1205, 85, 0, 0, 0, 1326, 1328, 1334, 96,
	1428, 1429, 98, 2674, 2242, 100, 2674, 0, 1300, 0,
	0, 0, 0, 190, 122, 126, 134, 135, 137, 0,
	1336, 119, 0, 215, 0, 0, 205, 200, 2674, 0,
	207, 0, 208, 209, 224, 0, 0, 0, 1017, 1018,
	1223, 1224, 1225, 1256, 1209, 1210, 0, 1221, 1215, 0,
	0, 0, 0, 0, 1338, 1339, 0, 0, 0, 1352,
	1659, 236, 0, 1659, 244, 0, 2205, 0, 374, 0,
	0, 0, 0, 1053, 1150, 0, 1024, 0, 0, 0,
	447, 443, 0, 452, 458, 457, 463, -2, 0, 0,
	0, 0, -2, 0, 0, 1272, 1266, 1267, 0, 0,
	0, 0, 2674, 1444, 1450, 0, 1545, 1560, 470, 1451,
	1472, 0, 0, 0, 1461, 1457, 1454, 1690, 0, 0,
	0, 0, 0, 1683, 1686, 540, 541, 293, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 1060, 1064, 0,
	2281, 2281, 0, 2235, 0, 0, 0, 0, 275, 0,
	278, 0, 0, 0, 283, 284, 285, 286, 287, 288,
	277, 267, 1659, 0, 0, 657, 0, 0, 812, 0,
	835, 844, 846, 849, 892, 894, 911, 921, 944, 945,
	1081, 0, 1081, 0, 0, 965, 1508, 0, 1583, 1514,
	1565, 1566, 0, 1298, 0, 1824, 1869, 0, 0, -2,
	0, 0, 1873, 0, 0, 0, -2, 0, 0, 0,
	2128, 2130, 0, 2184, 2119, 1971, 0, 0, 0, 1975,
	1959, 1960, 0, 2079, 2145, 2174, 2178, 0, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 0, 2224, 2259, 2263, 2052,
	2053, 2057, 2238, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 1794, 0, 0, 2146,
	2157, 2159, 1911, 1912, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, -2, -2, -2, 1929, 1930, 1931,
	-2, -2, -2, 1936, 0, 0, 0, 2160, 2162, 2163,
	2167, 2168, 0, 2035, 2036, 2037, 2169, 0, 1547, 1541,
	1602, 0, 1688, 1606, 0, 1602, 1602, 1554, 1648, 0,
	0, 1672, 0, 1620, 0, 1621, 0, 1653, 0, 1628,
	1631, 1632, 1642, 0, 1634, 0, 1637, 0, 1971, -2,
	319, 321, 323, 0, 326, 327, 0, 0, 608, 609,
	0, 607, 591, 0, 0, 1698, 0, 0, 1774, 1778,
	1802, 617, 618, 0, 616, 502, 511, 232, 0, 1657,
	0, 0, 0, 0, 0, 0, 201, 1101, 1131, 0,
	0, 0, 1123, 0, 0, 1137, 167, 168, 0, 0,
	0, 0, 177, 0, 0, 174, 0, 183, 187, 1088,
	0, 0, 0, 0, 1306, 0, 0, 0, 139, 140,
	141, 0, 146, 0, 147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1434, 1435, 0, 1425, 0,
	0, 0, 203, 0, 0, 0, 1295, 226, 0, 0,
	0, 0, 0, 1259, 1260, 1217, 1319, 1323, 1331, 0,
	0, 0, 0, 623, 0, 628, 1354, 244, 242, 0,
	245, 0, 248, 249, 0, 251, 244, 238, 0, 0,
	0, 1168, 388, 1027, 1138, 0, 1140, 0, 1025, 0,
	0, 1139, 439, 0, 446, 0, 460, 0, 0, 1189,
	0, 0, 1212, 1232, 1168, 0, 1271, 1273, 0, 1281,
	0, 0, 0, 1446, 1450, 0, 1439, 1440, 1579, 1452,
	1470, -2, 0, 0, 1560, 1478, 1475, 1481, 1482, 0,
	315, 0, 310, 312, 0, 296, 0, 0, 1056, 1061,
	0, 0, 0, 0, 0, 1463, 1465, 0, 0, 0,
	0, 0, 0, 266, 277, 1659, 302, 0, 806, 830,
	902, 946, 1080, 0, 0, 948, 0, 0, 1582, 1569,
	1570, 1567, 1298, 1871, 1875, 0, 0, 0, 1877, -2,
	0, 1899, -2, -2, 2131, 2183, 1950, 1560, 1972, 1974,
	1961, 2177, 1819, 0, 2059, 2056, 0, 2043, 0, 1996,
	1997, 0, 0, 2000, 2002, 2003, 2004, 1758, 1751, 1750,
	2156, 0, 0, 0, 0, 2034, 1542, 0, 2048, 0,
	0, 1610, 2048, 2048, 1649, 0, 1651, 1618, 1611, 0,
	2259, 1644, 1636, 0, 0, 324, 0, 328, 329, 0,
	0, 1692, 1697, 0, 1703, 1773, 0, 233, 161, 162,
	1310, 1314, 1311, 0, 164, 0, 1102, 0, 1105, 0,
	0, 0, 0, 1112, 1124, 0, 0, 0, 0, 0,
	1125, 0, 1154, 0, 1286, 1293, 0, -2, 0, 0,
	0, 170, 193, 0, 0, 194, 1358, 172, 0, 0,
	200, 200, 0, 0, 1302, 1304, 1317, 0, 0, 0,
	0, 149, 0, 0, 1320, 1324, 1332, 1327, 1329, 1335,
	0, 101, 0, 1436, 0, 0, 1337, 213, 214, 0,
	200, 0, 200, 206, 200, 1295, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 237, 308,
	244, 376, 0, 1075, 0, 1150, 1142, 1143, 1144, 0,
	1149, 1151, 0, 0, 1041, 1026, 0, 1037, 0, 0,
	1054, 1029, 0, 444, 461, 0, 464, 0, 467, 1015,
	1186, 1229, 1168, 0, 1263, 0, 0, 0, 0, 0,
	0, 0, 1448, 1450, 0, 1441, 1442, 1472, 1578, 0,
	0, 0, 1460, 1579, 0, 317, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 279, 0, 280,
	281, 282, 268, 269, 659, 661, 0, 0, 667, 1079,
	0, 0, 0, 0, 1568, 1879, -2, -2, 1900, 0,
	2260, 2262, 1560, 0, 2045, 1562, 0, 0, -2, 0,
	0, 0, 1543, 1526, 0, 1601, 1593, 1595, 1597, 2561,
	2352, 2673, 1527, 1528, 1671, 0, 1639, 325, 610, 0,
	0, 1699, 0, 0, 0, 1312, 166, 0, 1106, 1107,
	2234, 1109, 0, 1111, 1113, 1114, 1115, 0, 1118, 2283,
	0, 1122, 0, 1133, 1155, 0, 1164, 0, 1288, 1298,
	1292, 0, 1290, 1166, 0, 169, 171, 195, 192, 1295,
	0, 173, 182, 0, 0, 121, 0, 0, 2346, 152,
	150, 148, 99, 1299, 123, 0, 215, 225, 1294, 227,
	210, 200, 0, 1321, 1325, 1333, 0, 1346, 1347, 1348,
	1349, 0, 0, 0, 0, 246, 0, 247, 250, 0,
	0, 1090, 0, 1028, 1141, 0, 1152, 1153, 1031, 0,
	1030, 0, 0, 0, 0, 0, 445, 448, 0, 451,
	0, 0, 0, 0, 0, 1274, 1272, 0, 1280, 0,
	0, 0, 1424, 0, 0, 1443, 1444, 468, 1466, 0,
	0, 1472, 1483, 295, 0, 0, 1062, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1063, 1166, 0, 0,
	1130, 0, 300, 276, 0, 663, 0, 665, 0, 947,
	949, 0, 0, 1973, 2063, 0, 0, 1998, 1999, -2,
	0, 1939, 2047, 2049, 0, 0, 0, 0, 0, 1612,
	611, 1693, 619, 1308, 0, 1315, 1104, 1108, 0, 0,
	0, 1172, 0, 0, 1126, 0, 1158, 1159, 1075, 0,
	1160, 1161, 1162, 1287, 1571, 1293, 1075, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 204, 228, 1295,
	0, 1350, 1351, 0, 0, 243, 261, 0, 1230, 1029,
	1089, 0, 0, 1039, 0, 1042, 0, 1038, 1035, 1036,
	1027, 0, 449, 450, 465, 0, 466, 0, 1233, 0,
	0, 1281, 0, 0, 1431, 1423, 1450, 1445, 1446, 1690,
	1469, 1473, 0, 0, 1164, 1166, 1086, 0, 662, 0,
	0, 957, 958, 0, 0, 0, 0, 2058, 1563, 1940,
	0, 0, 1596, 1598, 1599, 1600, 1309, 0, 0, 1117,
	1177, 0, 0, 0, 1156, 1157, 1086, 0, 1291, 1289,
	1135, 0, 1168, 175, 0, 1166, 0, 1095, 0, 0,
	1098, 0, 0, 153, 2346, 151, 0, 200, 1343, 200,
	0, 264, 0, 258, 256, 257, 1031, 0, 0, 1146,
	1148, 0, 1043, 1075, 1041, 462, 1231, 1264, 1166, 0,
	1164, 0, 1438, 1450, 1432, 1433, 0, 1448, 0, 318,
	318, 1075, 1164, 1029, 1085, 318, 664, 666, 2055, 2075,
	2064, -2, 2632, 2353, 0, 2075, 2075, 2050, 2051, 0,
	0, 1119, 1173, 1174, 0, 1169, 1170, 1171, 2282, 1120,
	1121, 1154, 0, 0, 1172, 196, 1075, 1092, 0, 0,
	1093, 0, 0, 156, 0, 158, 229, 1341, 0, 1344,
	0, 252, 0, 0, 1023, 0, 1145, 0, 0, 0,
	0, 1090, 1031, 1164, 0, 1075, 0, 1427, 1437, 0,
	1447, 1424, 0, 297, 298, 1086, 1075, 1690, 0, 299,
	2060, 0, 0, 2066, 2067, 2068, 2069, 2070, 2061, 2062,
	1110, 0, 1175, 0, 1176, 0, 0, 0, 1690, 1163,
	0, 1177, 180, 1096, 0, 1099, 0, 154, 0, 0,
	0, 259, 260, 1020, 1022, 0, 1147, 1032, 0, 1034,
	1029, 1040, 1075, 0, 1086, 0, 1420, 1426, 1430, 2243,
	1431, 1467, 0, 1029, 1086, 1129, 0, 2072, 2073, 0,
	0, 0, 1178, 0, 1181, 1182, 0, 1179, 1134, 0,
	1154, 0, 0, 1342, 200, 0, 0, 1033, 1031, 1086,
	1166, 1029, 1164, 1438, 0, 1690, 1029, 2071, 2074, 2065,
	1116, 1180, 1183, 1184, 1165, 1136, 0, 0, 1345, 262,
	0, 1078, 1023, 1029, 1164, 1690, 1075, 1427, 1690, 1127,
	1690, 1083, 0, 0, 1074, 1076, 1077, 1021, 1690, 1075,
	1277, 1086, 1421, 1468, 1128, 1097, 1082, 0, 263, 1275,
	1086, 1029, 0, 1029, 1690, 0, 1690, 1278, 1083, 1276,
	1100,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 581, 3, 587, 582, 3,
	592, 593, 585, 583, 597, 584, 594, 586, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 600, 3,
	573, 575, 574, 578, 596, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 590, 3, 591, 588, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 598, 580, 599, 576,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 577, 57916, 579, 57917, 589, 57918, 595, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1464
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1469
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1471
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1474
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1476
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1491
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1505
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1507
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1508
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1599
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1631
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1635
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1676
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[5].union.dataPlacement(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1686
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1760
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1792
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1816
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1825
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1854
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1877
		{
		}
	case 131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1878
		{
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1882
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1903
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1908
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1934
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1942
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1951
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1962
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1970
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1991
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2001
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2010
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2021
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2027
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2053
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2058
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2144
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2187
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2190
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2196
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2248
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = nil
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = true
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = false
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = nil
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2421
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2425
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2428
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2468
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2475
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2483
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2514
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2598
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2750
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = nil
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = nil
		}
	case 265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "alter function")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3026
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3035
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3041
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3046
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3051
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3056
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3061
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3065
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3092
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = nil
		}
	case 319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3168
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3348
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3364
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3373
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3392
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "CREATE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3406
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3410
		{
			return unimplemented(sqllex, "create access method")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return unimplemented(sqllex, "create cast")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3413
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3415
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3416
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3417
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3419
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplemented(sqllex, "create publication")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplemented(sqllex, "create rule")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "create server")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3432
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3435
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3436
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3439
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3440
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3443
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3449
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3451
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3452
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3453
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3454
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplemented(sqllex, "drop server")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3587
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3622
		{

			sqlVAL.union.val = nil
		}
	case 460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "DELETE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3709
		{
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3735
		{
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "DROP")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3935
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3958
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4001
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4009
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4025
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4033
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "DELETE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "INSERT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "DELETE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "INSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4114
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4147
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4237
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4252
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "GRANT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4315
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4327
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "RESET")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "RESET")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "USE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4401
		{
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "USE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplemented(sqllex, "set from current")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4616
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4648
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = tree.Low
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = tree.Normal
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = tree.High
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4846
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4851
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.str = "client_encoding"
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.str = "timezone"
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4896
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4959
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4968
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5063
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5105
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5139
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5173
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = true
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = true
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = false
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5331
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = true
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = false
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5350
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = true
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = false
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5433
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5440
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5448
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5459
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5481
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5491
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5495
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5509
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5514
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5519
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5524
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5542
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5548
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5552
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5563
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5574
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5592
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5600
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5631
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
		}
	case 957:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5644
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5667
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5738
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5748
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5755
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5762
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5895
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5938
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5947
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5997
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5998
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6008
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6009
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6179
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6195
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{

			sqlVAL.union.val = nil
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.str = ""
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = nil
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6263
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6267
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6293
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6307
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6322
		{
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6379
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6405
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6416
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6419
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6422
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6429
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6445
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6450
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.str = ""
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6693
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6718
		{

			sqlVAL.union.val = true
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = false
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6831
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6869
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6884
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6949
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6950
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6951
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6954
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7026
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7110
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7119
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7127
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7138
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7153
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7155
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7157
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7159
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7162
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7165
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7167
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7180
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7205
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7239
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.str = ""
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = true
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{

			sqlVAL.union.val = true
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = false
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7288
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7302
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7314
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7326
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7336
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7346
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = nil
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7456
		{
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7457
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7484
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7486
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7488
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7492
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7530
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7548
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7567
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7584
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7601
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = false
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = true
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = false
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = true
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = false
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7659
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7665
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7671
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.str = ""
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.str = ""
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7738
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7744
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7969
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7975
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7987
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7993
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8007
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8013
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8054
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = true
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = false
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = tree.Types
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8115
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8119
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8143
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8144
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8147
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8148
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8159
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8177
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8186
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8215
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8236
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8244
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8255
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8259
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8260
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8261
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8280
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8285
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8298
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8303
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8313
		{
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8314
		{
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8331
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8335
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8376
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8378
		{
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8471
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.str = ""
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{

		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8531
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.str = ""
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.str = ""
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.str = ""
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.str = ""
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8586
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8599
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8600
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8629
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8651
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8660
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8709
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8736
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8740
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8778
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8810
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8831
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8846
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8990
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9025
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9026
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9132
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = true
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = false
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9201
		{
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9202
		{
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = nil
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9215
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9216
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = true
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = false
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = false
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = true
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9245
		{
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9246
		{
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9249
		{
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9250
		{
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9291
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9312
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9317
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9376
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9431
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9435
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9471
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9472
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9502
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9504
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9541
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9546
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9562
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9593
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9632
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9642
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9688
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9718
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9751
		{
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9753
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = nil
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = true
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = false
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.str = tree.AstFull
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.str = tree.AstRight
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.str = tree.AstInner
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9870
		{
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9871
		{
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.str = tree.AstHash
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.str = ""
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9940
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9945
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9963
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9969
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9975
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9985
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = true
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = false
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = true
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = false
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10034
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10047
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10055
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10056
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10074
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10076
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10084
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10097
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10104
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10153
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10165
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10166
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = types.Geography
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10215
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10223
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10257
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = nil
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = types.Int2
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = types.Int
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = types.Float4
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = types.Float
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10300
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10308
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10316
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = types.Bool
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = types.Float
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10349
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10355
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10377
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = types.String
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = true
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = false
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = types.Date
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10426
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10434
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10448
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10457
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10465
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10482
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = true
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = false
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = false
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = types.Interval
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10506
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10605
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = nil
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10635
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10695
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10844
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10852
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11031
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11161
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11265
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11270
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11296
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11305
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11320
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11350
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11361
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11362
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11377
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11452
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11577
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11582
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11600
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11609
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11623
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11628
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11633
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11638
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11647
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11648
		{
			return unimplemented(sqllex, "treat")
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11674
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11721
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.str = ""
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11810
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11823
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11891
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11920
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12337
		{
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12409
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12417
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12490
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12506
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12515
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12526
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12535
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12543
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12560
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12675
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12739
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12752
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12761
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12779
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12792
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12799
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.str = ""
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
