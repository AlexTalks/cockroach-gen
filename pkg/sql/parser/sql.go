// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) fetchCursor() *tree.FetchCursor {
	return u.val.(*tree.FetchCursor)
}

//line sql-gen.y:917
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14363

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 39,
	-2, 1690,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 58,
	269, 433,
	-2, 0,
	-1, 70,
	8, 879,
	29, 879,
	613, 879,
	614, 879,
	-2, 0,
	-1, 76,
	251, 258,
	536, 258,
	-2, 0,
	-1, 90,
	239, 1423,
	253, 1423,
	269, 429,
	406, 429,
	417, 1170,
	458, 429,
	472, 1170,
	521, 1170,
	548, 429,
	575, 1170,
	-2, 0,
	-1, 96,
	136, 1690,
	246, 1690,
	559, 1690,
	560, 1690,
	-2, 0,
	-1, 114,
	155, 1661,
	175, 1661,
	188, 1661,
	249, 1661,
	282, 1661,
	355, 1661,
	366, 1661,
	554, 1661,
	-2, 1632,
	-1, 156,
	163, 1003,
	268, 1003,
	409, 964,
	477, 964,
	520, 964,
	539, 1003,
	541, 964,
	-2, 0,
	-1, 160,
	4, 1692,
	21, 1692,
	22, 1692,
	23, 1692,
	24, 1692,
	25, 1692,
	26, 1692,
	27, 1692,
	28, 1692,
	30, 1692,
	31, 1692,
	37, 1692,
	41, 1692,
	43, 1692,
	44, 1692,
	46, 1692,
	47, 1692,
	48, 1692,
	49, 1692,
	50, 1692,
	51, 1692,
	52, 1692,
	53, 1692,
	54, 1692,
	56, 1692,
	57, 1692,
	58, 1692,
	59, 1692,
	61, 1692,
	62, 1692,
	63, 1692,
	64, 1692,
	65, 1692,
	66, 1692,
	67, 1692,
	71, 1692,
	72, 1692,
	73, 1692,
	74, 1692,
	76, 1692,
	77, 1692,
	78, 1692,
	82, 1692,
	83, 1692,
	84, 1692,
	85, 1692,
	86, 1692,
	87, 1692,
	88, 1692,
	91, 1692,
	92, 1692,
	93, 1692,
	94, 1692,
	95, 1692,
	97, 1692,
	99, 1692,
	100, 1692,
	101, 1692,
	102, 1692,
	103, 1692,
	104, 1692,
	106, 1692,
	107, 1692,
	108, 1692,
	110, 1692,
	111, 1692,
	112, 1692,
	120, 1692,
	121, 1692,
	122, 1692,
	123, 1692,
	124, 1692,
	126, 1692,
	127, 1692,
	128, 1692,
	129, 1692,
	131, 1692,
	132, 1692,
	133, 1692,
	135, 1692,
	136, 1692,
	137, 1692,
	139, 1692,
	140, 1692,
	141, 1692,
	144, 1692,
	145, 1692,
	146, 1692,
	148, 1692,
	149, 1692,
	150, 1692,
	152, 1692,
	153, 1692,
	154, 1692,
	156, 1692,
	157, 1692,
	158, 1692,
	159, 1692,
	160, 1692,
	161, 1692,
	162, 1692,
	163, 1692,
	164, 1692,
	165, 1692,
	166, 1692,
	167, 1692,
	168, 1692,
	169, 1692,
	170, 1692,
	171, 1692,
	172, 1692,
	174, 1692,
	180, 1692,
	181, 1692,
	182, 1692,
	183, 1692,
	187, 1692,
	189, 1692,
	190, 1692,
	191, 1692,
	193, 1692,
	196, 1692,
	197, 1692,
	198, 1692,
	199, 1692,
	200, 1692,
	201, 1692,
	202, 1692,
	203, 1692,
	204, 1692,
	205, 1692,
	206, 1692,
	207, 1692,
	208, 1692,
	209, 1692,
	211, 1692,
	212, 1692,
	214, 1692,
	215, 1692,
	217, 1692,
	218, 1692,
	219, 1692,
	220, 1692,
	221, 1692,
	222, 1692,
	223, 1692,
	224, 1692,
	225, 1692,
	226, 1692,
	228, 1692,
	229, 1692,
	231, 1692,
	232, 1692,
	233, 1692,
	234, 1692,
	235, 1692,
	239, 1692,
	240, 1692,
	241, 1692,
	242, 1692,
	245, 1692,
	246, 1692,
	247, 1692,
	248, 1692,
	250, 1692,
	252, 1692,
	253, 1692,
	255, 1692,
	257, 1692,
	258, 1692,
	259, 1692,
	261, 1692,
	265, 1692,
	266, 1692,
	267, 1692,
	268, 1692,
	269, 1692,
	270, 1692,
	272, 1692,
	273, 1692,
	274, 1692,
	276, 1692,
	277, 1692,
	279, 1692,
	280, 1692,
	283, 1692,
	284, 1692,
	285, 1692,
	286, 1692,
	287, 1692,
	288, 1692,
	289, 1692,
	292, 1692,
	293, 1692,
	294, 1692,
	295, 1692,
	297, 1692,
	298, 1692,
	299, 1692,
	300, 1692,
	301, 1692,
	302, 1692,
	303, 1692,
	304, 1692,
	305, 1692,
	306, 1692,
	307, 1692,
	308, 1692,
	309, 1692,
	310, 1692,
	311, 1692,
	312, 1692,
	313, 1692,
	314, 1692,
	315, 1692,
	316, 1692,
	317, 1692,
	318, 1692,
	320, 1692,
	322, 1692,
	323, 1692,
	324, 1692,
	325, 1692,
	326, 1692,
	327, 1692,
	328, 1692,
	329, 1692,
	330, 1692,
	331, 1692,
	332, 1692,
	333, 1692,
	334, 1692,
	335, 1692,
	336, 1692,
	337, 1692,
	338, 1692,
	340, 1692,
	341, 1692,
	343, 1692,
	345, 1692,
	346, 1692,
	347, 1692,
	348, 1692,
	350, 1692,
	351, 1692,
	352, 1692,
	353, 1692,
	354, 1692,
	357, 1692,
	359, 1692,
	361, 1692,
	362, 1692,
	363, 1692,
	364, 1692,
	367, 1692,
	368, 1692,
	369, 1692,
	371, 1692,
	373, 1692,
	374, 1692,
	375, 1692,
	376, 1692,
	377, 1692,
	378, 1692,
	379, 1692,
	380, 1692,
	381, 1692,
	382, 1692,
	383, 1692,
	384, 1692,
	385, 1692,
	387, 1692,
	388, 1692,
	389, 1692,
	390, 1692,
	391, 1692,
	392, 1692,
	393, 1692,
	394, 1692,
	395, 1692,
	396, 1692,
	397, 1692,
	398, 1692,
	399, 1692,
	400, 1692,
	401, 1692,
	403, 1692,
	404, 1692,
	405, 1692,
	407, 1692,
	408, 1692,
	409, 1692,
	410, 1692,
	411, 1692,
	412, 1692,
	413, 1692,
	414, 1692,
	415, 1692,
	416, 1692,
	417, 1692,
	418, 1692,
	419, 1692,
	421, 1692,
	423, 1692,
	424, 1692,
	425, 1692,
	431, 1692,
	432, 1692,
	433, 1692,
	435, 1692,
	436, 1692,
	437, 1692,
	438, 1692,
	439, 1692,
	440, 1692,
	441, 1692,
	442, 1692,
	443, 1692,
	444, 1692,
	446, 1692,
	447, 1692,
	448, 1692,
	450, 1692,
	451, 1692,
	452, 1692,
	453, 1692,
	454, 1692,
	455, 1692,
	456, 1692,
	458, 1692,
	459, 1692,
	460, 1692,
	461, 1692,
	462, 1692,
	463, 1692,
	464, 1692,
	465, 1692,
	466, 1692,
	467, 1692,
	468, 1692,
	469, 1692,
	470, 1692,
	472, 1692,
	473, 1692,
	474, 1692,
	475, 1692,
	476, 1692,
	477, 1692,
	479, 1692,
	480, 1692,
	481, 1692,
	482, 1692,
	483, 1692,
	484, 1692,
	486, 1692,
	487, 1692,
	488, 1692,
	489, 1692,
	490, 1692,
	491, 1692,
	492, 1692,
	493, 1692,
	495, 1692,
	497, 1692,
	498, 1692,
	499, 1692,
	500, 1692,
	501, 1692,
	502, 1692,
	503, 1692,
	504, 1692,
	505, 1692,
	506, 1692,
	507, 1692,
	508, 1692,
	509, 1692,
	510, 1692,
	511, 1692,
	512, 1692,
	513, 1692,
	514, 1692,
	516, 1692,
	517, 1692,
	519, 1692,
	520, 1692,
	522, 1692,
	523, 1692,
	524, 1692,
	525, 1692,
	526, 1692,
	527, 1692,
	528, 1692,
	529, 1692,
	531, 1692,
	532, 1692,
	533, 1692,
	534, 1692,
	535, 1692,
	537, 1692,
	539, 1692,
	540, 1692,
	541, 1692,
	542, 1692,
	543, 1692,
	544, 1692,
	545, 1692,
	547, 1692,
	548, 1692,
	549, 1692,
	550, 1692,
	552, 1692,
	553, 1692,
	556, 1692,
	557, 1692,
	558, 1692,
	559, 1692,
	560, 1692,
	561, 1692,
	562, 1692,
	563, 1692,
	565, 1692,
	568, 1692,
	569, 1692,
	570, 1692,
	571, 1692,
	572, 1692,
	573, 1692,
	575, 1692,
	576, 1692,
	577, 1692,
	578, 1692,
	579, 1692,
	580, 1692,
	581, 1692,
	582, 1692,
	587, 1692,
	588, 1692,
	589, 1692,
	590, 1692,
	591, 1692,
	592, 1692,
	-2, 0,
	-1, 161,
	1, 1540,
	134, 1540,
	257, 1540,
	342, 1540,
	404, 1540,
	413, 1540,
	596, 1540,
	626, 1540,
	-2, 0,
	-1, 163,
	1, 1540,
	626, 1540,
	-2, 0,
	-1, 164,
	1, 1540,
	626, 1540,
	-2, 0,
	-1, 165,
	1, 1540,
	536, 1540,
	626, 1540,
	-2, 0,
	-1, 197,
	155, 1660,
	175, 1660,
	188, 1660,
	249, 1660,
	282, 1660,
	355, 1660,
	366, 1660,
	554, 1660,
	-2, 1635,
	-1, 244,
	4, 1699,
	5, 1699,
	6, 1699,
	7, 1699,
	8, 1699,
	9, 1699,
	10, 1699,
	21, 1699,
	22, 1699,
	23, 1699,
	24, 1699,
	25, 1699,
	26, 1699,
	27, 1699,
	28, 1699,
	30, 1699,
	31, 1699,
	37, 1699,
	38, 1699,
	41, 1699,
	43, 1699,
	44, 1699,
	45, 1699,
	46, 1699,
	47, 1699,
	48, 1699,
	49, 1699,
	50, 1699,
	51, 1699,
	52, 1699,
	53, 1699,
	54, 1699,
	56, 1699,
	57, 1699,
	58, 1699,
	59, 1699,
	61, 1699,
	62, 1699,
	63, 1699,
	64, 1699,
	65, 1699,
	66, 1699,
	67, 1699,
	68, 1699,
	69, 1699,
	70, 1699,
	71, 1699,
	72, 1699,
	73, 1699,
	74, 1699,
	76, 1699,
	77, 1699,
	78, 1699,
	80, 1699,
	82, 1699,
	83, 1699,
	84, 1699,
	85, 1699,
	86, 1699,
	87, 1699,
	88, 1699,
	91, 1699,
	92, 1699,
	93, 1699,
	94, 1699,
	95, 1699,
	97, 1699,
	99, 1699,
	100, 1699,
	101, 1699,
	102, 1699,
	103, 1699,
	104, 1699,
	106, 1699,
	107, 1699,
	108, 1699,
	109, 1699,
	110, 1699,
	111, 1699,
	112, 1699,
	113, 1699,
	114, 1699,
	115, 1699,
	116, 1699,
	117, 1699,
	118, 1699,
	119, 1699,
	120, 1699,
	121, 1699,
	122, 1699,
	123, 1699,
	124, 1699,
	125, 1699,
	126, 1699,
	127, 1699,
	128, 1699,
	129, 1699,
	130, 1699,
	131, 1699,
	132, 1699,
	133, 1699,
	135, 1699,
	136, 1699,
	137, 1699,
	139, 1699,
	140, 1699,
	141, 1699,
	144, 1699,
	145, 1699,
	146, 1699,
	148, 1699,
	149, 1699,
	150, 1699,
	152, 1699,
	153, 1699,
	154, 1699,
	156, 1699,
	157, 1699,
	158, 1699,
	159, 1699,
	160, 1699,
	161, 1699,
	162, 1699,
	163, 1699,
	164, 1699,
	165, 1699,
	166, 1699,
	167, 1699,
	168, 1699,
	169, 1699,
	170, 1699,
	171, 1699,
	172, 1699,
	173, 1699,
	174, 1699,
	180, 1699,
	181, 1699,
	182, 1699,
	183, 1699,
	187, 1699,
	189, 1699,
	190, 1699,
	191, 1699,
	193, 1699,
	195, 1699,
	196, 1699,
	197, 1699,
	198, 1699,
	199, 1699,
	200, 1699,
	201, 1699,
	202, 1699,
	203, 1699,
	204, 1699,
	205, 1699,
	206, 1699,
	207, 1699,
	208, 1699,
	209, 1699,
	211, 1699,
	212, 1699,
	214, 1699,
	215, 1699,
	217, 1699,
	218, 1699,
	219, 1699,
	220, 1699,
	221, 1699,
	222, 1699,
	223, 1699,
	224, 1699,
	225, 1699,
	226, 1699,
	227, 1699,
	228, 1699,
	229, 1699,
	231, 1699,
	232, 1699,
	233, 1699,
	234, 1699,
	235, 1699,
	239, 1699,
	240, 1699,
	241, 1699,
	242, 1699,
	244, 1699,
	245, 1699,
	246, 1699,
	247, 1699,
	248, 1699,
	250, 1699,
	252, 1699,
	253, 1699,
	254, 1699,
	255, 1699,
	256, 1699,
	257, 1699,
	258, 1699,
	259, 1699,
	260, 1699,
	261, 1699,
	265, 1699,
	266, 1699,
	267, 1699,
	268, 1699,
	269, 1699,
	270, 1699,
	272, 1699,
	273, 1699,
	274, 1699,
	276, 1699,
	277, 1699,
	278, 1699,
	279, 1699,
	280, 1699,
	281, 1699,
	283, 1699,
	284, 1699,
	285, 1699,
	286, 1699,
	287, 1699,
	288, 1699,
	289, 1699,
	290, 1699,
	291, 1699,
	292, 1699,
	293, 1699,
	294, 1699,
	295, 1699,
	297, 1699,
	298, 1699,
	299, 1699,
	300, 1699,
	301, 1699,
	302, 1699,
	303, 1699,
	304, 1699,
	305, 1699,
	306, 1699,
	307, 1699,
	308, 1699,
	309, 1699,
	310, 1699,
	311, 1699,
	312, 1699,
	313, 1699,
	314, 1699,
	315, 1699,
	316, 1699,
	317, 1699,
	318, 1699,
	320, 1699,
	321, 1699,
	322, 1699,
	323, 1699,
	324, 1699,
	325, 1699,
	326, 1699,
	327, 1699,
	328, 1699,
	329, 1699,
	330, 1699,
	331, 1699,
	332, 1699,
	333, 1699,
	334, 1699,
	335, 1699,
	336, 1699,
	337, 1699,
	338, 1699,
	339, 1699,
	340, 1699,
	341, 1699,
	342, 1699,
	343, 1699,
	344, 1699,
	345, 1699,
	346, 1699,
	347, 1699,
	348, 1699,
	349, 1699,
	350, 1699,
	351, 1699,
	352, 1699,
	353, 1699,
	354, 1699,
	357, 1699,
	359, 1699,
	362, 1699,
	363, 1699,
	364, 1699,
	367, 1699,
	368, 1699,
	369, 1699,
	370, 1699,
	371, 1699,
	372, 1699,
	373, 1699,
	374, 1699,
	375, 1699,
	376, 1699,
	377, 1699,
	378, 1699,
	379, 1699,
	380, 1699,
	381, 1699,
	382, 1699,
	383, 1699,
	384, 1699,
	385, 1699,
	387, 1699,
	388, 1699,
	389, 1699,
	390, 1699,
	391, 1699,
	392, 1699,
	393, 1699,
	394, 1699,
	395, 1699,
	396, 1699,
	397, 1699,
	398, 1699,
	399, 1699,
	400, 1699,
	401, 1699,
	403, 1699,
	404, 1699,
	405, 1699,
	407, 1699,
	408, 1699,
	409, 1699,
	410, 1699,
	411, 1699,
	412, 1699,
	413, 1699,
	414, 1699,
	415, 1699,
	416, 1699,
	417, 1699,
	418, 1699,
	419, 1699,
	421, 1699,
	423, 1699,
	424, 1699,
	425, 1699,
	431, 1699,
	432, 1699,
	433, 1699,
	435, 1699,
	436, 1699,
	437, 1699,
	438, 1699,
	439, 1699,
	440, 1699,
	441, 1699,
	442, 1699,
	443, 1699,
	444, 1699,
	446, 1699,
	447, 1699,
	448, 1699,
	449, 1699,
	450, 1699,
	451, 1699,
	452, 1699,
	453, 1699,
	454, 1699,
	455, 1699,
	456, 1699,
	458, 1699,
	459, 1699,
	460, 1699,
	461, 1699,
	462, 1699,
	463, 1699,
	464, 1699,
	465, 1699,
	466, 1699,
	467, 1699,
	468, 1699,
	469, 1699,
	470, 1699,
	472, 1699,
	473, 1699,
	474, 1699,
	475, 1699,
	476, 1699,
	477, 1699,
	478, 1699,
	479, 1699,
	480, 1699,
	481, 1699,
	482, 1699,
	483, 1699,
	484, 1699,
	485, 1699,
	486, 1699,
	487, 1699,
	488, 1699,
	489, 1699,
	490, 1699,
	491, 1699,
	492, 1699,
	493, 1699,
	495, 1699,
	497, 1699,
	498, 1699,
	499, 1699,
	500, 1699,
	501, 1699,
	502, 1699,
	503, 1699,
	504, 1699,
	505, 1699,
	506, 1699,
	507, 1699,
	508, 1699,
	509, 1699,
	510, 1699,
	511, 1699,
	512, 1699,
	513, 1699,
	514, 1699,
	516, 1699,
	517, 1699,
	518, 1699,
	519, 1699,
	520, 1699,
	522, 1699,
	523, 1699,
	524, 1699,
	525, 1699,
	526, 1699,
	527, 1699,
	528, 1699,
	529, 1699,
	531, 1699,
	532, 1699,
	533, 1699,
	534, 1699,
	535, 1699,
	537, 1699,
	539, 1699,
	540, 1699,
	541, 1699,
	542, 1699,
	543, 1699,
	544, 1699,
	545, 1699,
	546, 1699,
	547, 1699,
	548, 1699,
	549, 1699,
	550, 1699,
	552, 1699,
	553, 1699,
	555, 1699,
	556, 1699,
	557, 1699,
	558, 1699,
	559, 1699,
	560, 1699,
	561, 1699,
	562, 1699,
	563, 1699,
	564, 1699,
	565, 1699,
	568, 1699,
	569, 1699,
	570, 1699,
	571, 1699,
	572, 1699,
	573, 1699,
	575, 1699,
	576, 1699,
	577, 1699,
	578, 1699,
	579, 1699,
	580, 1699,
	581, 1699,
	582, 1699,
	587, 1699,
	588, 1699,
	589, 1699,
	590, 1699,
	591, 1699,
	592, 1699,
	593, 1699,
	606, 1699,
	613, 1699,
	614, 1699,
	615, 1699,
	623, 1699,
	627, 1699,
	-2, 0,
	-1, 782,
	4, 1421,
	21, 1421,
	22, 1421,
	23, 1421,
	24, 1421,
	25, 1421,
	26, 1421,
	27, 1421,
	28, 1421,
	30, 1421,
	31, 1421,
	37, 1421,
	41, 1421,
	43, 1421,
	44, 1421,
	46, 1421,
	47, 1421,
	48, 1421,
	49, 1421,
	50, 1421,
	51, 1421,
	52, 1421,
	53, 1421,
	54, 1421,
	56, 1421,
	57, 1421,
	58, 1421,
	59, 1421,
	61, 1421,
	62, 1421,
	63, 1421,
	64, 1421,
	65, 1421,
	66, 1421,
	67, 1421,
	71, 1421,
	72, 1421,
	73, 1421,
	74, 1421,
	76, 1421,
	77, 1421,
	78, 1421,
	82, 1421,
	83, 1421,
	84, 1421,
	85, 1421,
	86, 1421,
	87, 1421,
	88, 1421,
	91, 1421,
	92, 1421,
	93, 1421,
	94, 1421,
	95, 1421,
	97, 1421,
	99, 1421,
	100, 1421,
	101, 1421,
	102, 1421,
	103, 1421,
	104, 1421,
	106, 1421,
	107, 1421,
	108, 1421,
	110, 1421,
	111, 1421,
	112, 1421,
	120, 1421,
	121, 1421,
	122, 1421,
	123, 1421,
	124, 1421,
	126, 1421,
	127, 1421,
	128, 1421,
	129, 1421,
	131, 1421,
	132, 1421,
	133, 1421,
	135, 1421,
	136, 1421,
	137, 1421,
	139, 1421,
	140, 1421,
	141, 1421,
	144, 1421,
	145, 1421,
	146, 1421,
	148, 1421,
	149, 1421,
	150, 1421,
	152, 1421,
	153, 1421,
	154, 1421,
	156, 1421,
	157, 1421,
	158, 1421,
	159, 1421,
	160, 1421,
	161, 1421,
	162, 1421,
	163, 1421,
	164, 1421,
	165, 1421,
	166, 1421,
	167, 1421,
	168, 1421,
	169, 1421,
	170, 1421,
	171, 1421,
	172, 1421,
	174, 1421,
	180, 1421,
	181, 1421,
	182, 1421,
	183, 1421,
	187, 1421,
	189, 1421,
	190, 1421,
	191, 1421,
	193, 1421,
	196, 1421,
	197, 1421,
	198, 1421,
	199, 1421,
	200, 1421,
	201, 1421,
	202, 1421,
	203, 1421,
	204, 1421,
	205, 1421,
	206, 1421,
	207, 1421,
	208, 1421,
	209, 1421,
	211, 1421,
	212, 1421,
	214, 1421,
	215, 1421,
	217, 1421,
	218, 1421,
	219, 1421,
	220, 1421,
	221, 1421,
	222, 1421,
	223, 1421,
	224, 1421,
	225, 1421,
	226, 1421,
	228, 1421,
	229, 1421,
	231, 1421,
	232, 1421,
	233, 1421,
	234, 1421,
	235, 1421,
	239, 1421,
	240, 1421,
	241, 1421,
	242, 1421,
	245, 1421,
	246, 1421,
	247, 1421,
	248, 1421,
	250, 1421,
	252, 1421,
	253, 1421,
	255, 1421,
	257, 1421,
	258, 1421,
	259, 1421,
	261, 1421,
	265, 1421,
	266, 1421,
	267, 1421,
	268, 1421,
	269, 1421,
	270, 1421,
	272, 1421,
	273, 1421,
	274, 1421,
	276, 1421,
	277, 1421,
	279, 1421,
	280, 1421,
	283, 1421,
	284, 1421,
	285, 1421,
	286, 1421,
	287, 1421,
	288, 1421,
	289, 1421,
	292, 1421,
	293, 1421,
	294, 1421,
	295, 1421,
	297, 1421,
	298, 1421,
	299, 1421,
	300, 1421,
	301, 1421,
	302, 1421,
	303, 1421,
	304, 1421,
	305, 1421,
	306, 1421,
	307, 1421,
	308, 1421,
	309, 1421,
	310, 1421,
	311, 1421,
	312, 1421,
	313, 1421,
	314, 1421,
	315, 1421,
	316, 1421,
	317, 1421,
	318, 1421,
	320, 1421,
	322, 1421,
	323, 1421,
	324, 1421,
	325, 1421,
	326, 1421,
	327, 1421,
	328, 1421,
	329, 1421,
	330, 1421,
	331, 1421,
	332, 1421,
	333, 1421,
	334, 1421,
	335, 1421,
	336, 1421,
	337, 1421,
	338, 1421,
	340, 1421,
	341, 1421,
	343, 1421,
	345, 1421,
	346, 1421,
	347, 1421,
	348, 1421,
	350, 1421,
	351, 1421,
	352, 1421,
	353, 1421,
	354, 1421,
	357, 1421,
	359, 1421,
	362, 1421,
	363, 1421,
	364, 1421,
	367, 1421,
	368, 1421,
	369, 1421,
	371, 1421,
	373, 1421,
	374, 1421,
	375, 1421,
	376, 1421,
	377, 1421,
	378, 1421,
	379, 1421,
	380, 1421,
	381, 1421,
	382, 1421,
	383, 1421,
	384, 1421,
	385, 1421,
	387, 1421,
	388, 1421,
	389, 1421,
	390, 1421,
	391, 1421,
	392, 1421,
	393, 1421,
	394, 1421,
	395, 1421,
	396, 1421,
	397, 1421,
	398, 1421,
	399, 1421,
	400, 1421,
	401, 1421,
	403, 1421,
	404, 1421,
	405, 1421,
	407, 1421,
	408, 1421,
	409, 1421,
	410, 1421,
	411, 1421,
	412, 1421,
	413, 1421,
	414, 1421,
	415, 1421,
	416, 1421,
	417, 1421,
	418, 1421,
	419, 1421,
	421, 1421,
	423, 1421,
	424, 1421,
	425, 1421,
	431, 1421,
	432, 1421,
	433, 1421,
	435, 1421,
	436, 1421,
	437, 1421,
	438, 1421,
	439, 1421,
	440, 1421,
	441, 1421,
	442, 1421,
	443, 1421,
	444, 1421,
	446, 1421,
	447, 1421,
	448, 1421,
	450, 1421,
	451, 1421,
	452, 1421,
	453, 1421,
	454, 1421,
	455, 1421,
	456, 1421,
	458, 1421,
	459, 1421,
	460, 1421,
	461, 1421,
	462, 1421,
	463, 1421,
	464, 1421,
	465, 1421,
	466, 1421,
	467, 1421,
	468, 1421,
	469, 1421,
	470, 1421,
	472, 1421,
	473, 1421,
	474, 1421,
	475, 1421,
	476, 1421,
	477, 1421,
	479, 1421,
	480, 1421,
	481, 1421,
	482, 1421,
	483, 1421,
	484, 1421,
	486, 1421,
	487, 1421,
	488, 1421,
	489, 1421,
	490, 1421,
	491, 1421,
	492, 1421,
	493, 1421,
	495, 1421,
	497, 1421,
	498, 1421,
	499, 1421,
	500, 1421,
	501, 1421,
	502, 1421,
	503, 1421,
	504, 1421,
	505, 1421,
	506, 1421,
	507, 1421,
	508, 1421,
	509, 1421,
	510, 1421,
	511, 1421,
	512, 1421,
	513, 1421,
	514, 1421,
	516, 1421,
	517, 1421,
	519, 1421,
	520, 1421,
	522, 1421,
	523, 1421,
	524, 1421,
	525, 1421,
	526, 1421,
	527, 1421,
	528, 1421,
	529, 1421,
	531, 1421,
	532, 1421,
	533, 1421,
	534, 1421,
	535, 1421,
	537, 1421,
	539, 1421,
	540, 1421,
	541, 1421,
	542, 1421,
	543, 1421,
	544, 1421,
	545, 1421,
	547, 1421,
	548, 1421,
	549, 1421,
	550, 1421,
	552, 1421,
	553, 1421,
	556, 1421,
	557, 1421,
	558, 1421,
	559, 1421,
	560, 1421,
	561, 1421,
	562, 1421,
	563, 1421,
	565, 1421,
	568, 1421,
	569, 1421,
	570, 1421,
	571, 1421,
	572, 1421,
	573, 1421,
	575, 1421,
	576, 1421,
	577, 1421,
	578, 1421,
	579, 1421,
	580, 1421,
	581, 1421,
	582, 1421,
	587, 1421,
	588, 1421,
	589, 1421,
	590, 1421,
	591, 1421,
	592, 1421,
	-2, 0,
	-1, 801,
	194, 2494,
	536, 2494,
	605, 2494,
	625, 2494,
	-2, 0,
	-1, 802,
	194, 2481,
	536, 2481,
	605, 2481,
	625, 2481,
	-2, 0,
	-1, 804,
	194, 2757,
	536, 2757,
	605, 2757,
	625, 2757,
	-2, 0,
	-1, 807,
	194, 2608,
	536, 2608,
	605, 2608,
	625, 2608,
	-2, 0,
	-1, 808,
	194, 2800,
	536, 2800,
	605, 2800,
	625, 2800,
	-2, 0,
	-1, 816,
	194, 2635,
	536, 2635,
	605, 2635,
	625, 2635,
	-2, 748,
	-1, 832,
	8, 878,
	29, 878,
	613, 878,
	614, 878,
	-2, 883,
	-1, 836,
	1, 2548,
	626, 2548,
	-2, 883,
	-1, 837,
	1, 2596,
	626, 2596,
	-2, 883,
	-1, 840,
	1, 2640,
	626, 2640,
	-2, 876,
	-1, 841,
	1, 2696,
	626, 2696,
	-2, 877,
	-1, 842,
	1, 2553,
	626, 2553,
	-2, 880,
	-1, 843,
	1, 2468,
	626, 2468,
	-2, 881,
	-1, 873,
	625, 2427,
	628, 2427,
	-2, 1088,
	-1, 874,
	625, 2429,
	628, 2429,
	-2, 1089,
	-1, 875,
	625, 2428,
	628, 2428,
	-2, 1090,
	-1, 876,
	628, 2353,
	-2, 1091,
	-1, 901,
	188, 277,
	-2, 0,
	-1, 925,
	45, 2400,
	-2, 0,
	-1, 926,
	575, 1399,
	-2, 1171,
	-1, 942,
	4, 1833,
	21, 1833,
	22, 1833,
	23, 1833,
	24, 1833,
	25, 1833,
	26, 1833,
	27, 1833,
	28, 1833,
	30, 1833,
	31, 1833,
	37, 1833,
	41, 1833,
	43, 1833,
	44, 1833,
	46, 1833,
	47, 1833,
	48, 1833,
	49, 1833,
	50, 1833,
	51, 1833,
	52, 1833,
	53, 1833,
	54, 1833,
	56, 1833,
	57, 1833,
	58, 1833,
	59, 1833,
	61, 1833,
	62, 1833,
	63, 1833,
	64, 1833,
	65, 1833,
	66, 1833,
	67, 1833,
	71, 1833,
	72, 1833,
	73, 1833,
	74, 1833,
	76, 1833,
	77, 1833,
	78, 1833,
	82, 1833,
	83, 1833,
	84, 1833,
	85, 1833,
	86, 1833,
	87, 1833,
	88, 1833,
	91, 1833,
	92, 1833,
	93, 1833,
	94, 1833,
	95, 1833,
	97, 1833,
	99, 1833,
	100, 1833,
	101, 1833,
	102, 1833,
	103, 1833,
	104, 1833,
	106, 1833,
	107, 1833,
	108, 1833,
	110, 1833,
	111, 1833,
	112, 1833,
	120, 1833,
	121, 1833,
	122, 1833,
	123, 1833,
	124, 1833,
	126, 1833,
	127, 1833,
	128, 1833,
	129, 1833,
	131, 1833,
	132, 1833,
	133, 1833,
	135, 1833,
	136, 1833,
	137, 1833,
	139, 1833,
	140, 1833,
	141, 1833,
	144, 1833,
	145, 1833,
	146, 1833,
	148, 1833,
	149, 1833,
	150, 1833,
	152, 1833,
	153, 1833,
	154, 1833,
	156, 1833,
	157, 1833,
	158, 1833,
	159, 1833,
	160, 1833,
	161, 1833,
	162, 1833,
	163, 1833,
	164, 1833,
	165, 1833,
	166, 1833,
	167, 1833,
	168, 1833,
	169, 1833,
	170, 1833,
	171, 1833,
	172, 1833,
	174, 1833,
	180, 1833,
	181, 1833,
	182, 1833,
	183, 1833,
	187, 1833,
	189, 1833,
	190, 1833,
	191, 1833,
	193, 1833,
	196, 1833,
	197, 1833,
	198, 1833,
	199, 1833,
	200, 1833,
	201, 1833,
	202, 1833,
	203, 1833,
	204, 1833,
	205, 1833,
	206, 1833,
	207, 1833,
	208, 1833,
	209, 1833,
	211, 1833,
	212, 1833,
	214, 1833,
	215, 1833,
	217, 1833,
	218, 1833,
	219, 1833,
	220, 1833,
	221, 1833,
	222, 1833,
	223, 1833,
	224, 1833,
	225, 1833,
	226, 1833,
	228, 1833,
	229, 1833,
	231, 1833,
	232, 1833,
	233, 1833,
	234, 1833,
	235, 1833,
	239, 1833,
	240, 1833,
	241, 1833,
	242, 1833,
	245, 1833,
	246, 1833,
	247, 1833,
	248, 1833,
	250, 1833,
	252, 1833,
	253, 1833,
	255, 1833,
	257, 1833,
	258, 1833,
	259, 1833,
	261, 1833,
	265, 1833,
	266, 1833,
	267, 1833,
	268, 1833,
	269, 1833,
	270, 1833,
	272, 1833,
	273, 1833,
	274, 1833,
	276, 1833,
	277, 1833,
	279, 1833,
	280, 1833,
	283, 1833,
	284, 1833,
	285, 1833,
	286, 1833,
	287, 1833,
	288, 1833,
	289, 1833,
	292, 1833,
	293, 1833,
	294, 1833,
	295, 1833,
	297, 1833,
	298, 1833,
	299, 1833,
	300, 1833,
	301, 1833,
	302, 1833,
	303, 1833,
	304, 1833,
	305, 1833,
	306, 1833,
	307, 1833,
	308, 1833,
	309, 1833,
	310, 1833,
	311, 1833,
	312, 1833,
	313, 1833,
	314, 1833,
	315, 1833,
	316, 1833,
	317, 1833,
	318, 1833,
	320, 1833,
	322, 1833,
	323, 1833,
	324, 1833,
	325, 1833,
	326, 1833,
	327, 1833,
	328, 1833,
	329, 1833,
	330, 1833,
	331, 1833,
	332, 1833,
	333, 1833,
	334, 1833,
	335, 1833,
	336, 1833,
	337, 1833,
	338, 1833,
	340, 1833,
	341, 1833,
	343, 1833,
	345, 1833,
	346, 1833,
	347, 1833,
	348, 1833,
	350, 1833,
	351, 1833,
	352, 1833,
	353, 1833,
	354, 1833,
	357, 1833,
	359, 1833,
	362, 1833,
	363, 1833,
	364, 1833,
	367, 1833,
	368, 1833,
	369, 1833,
	371, 1833,
	373, 1833,
	374, 1833,
	375, 1833,
	376, 1833,
	377, 1833,
	378, 1833,
	379, 1833,
	380, 1833,
	381, 1833,
	382, 1833,
	383, 1833,
	384, 1833,
	385, 1833,
	387, 1833,
	388, 1833,
	389, 1833,
	390, 1833,
	391, 1833,
	392, 1833,
	393, 1833,
	394, 1833,
	395, 1833,
	396, 1833,
	397, 1833,
	398, 1833,
	399, 1833,
	400, 1833,
	401, 1833,
	403, 1833,
	404, 1833,
	405, 1833,
	407, 1833,
	408, 1833,
	409, 1833,
	410, 1833,
	411, 1833,
	412, 1833,
	413, 1833,
	414, 1833,
	415, 1833,
	416, 1833,
	417, 1833,
	418, 1833,
	419, 1833,
	421, 1833,
	423, 1833,
	424, 1833,
	425, 1833,
	431, 1833,
	432, 1833,
	433, 1833,
	435, 1833,
	436, 1833,
	437, 1833,
	438, 1833,
	439, 1833,
	440, 1833,
	441, 1833,
	442, 1833,
	443, 1833,
	444, 1833,
	446, 1833,
	447, 1833,
	448, 1833,
	450, 1833,
	451, 1833,
	452, 1833,
	453, 1833,
	454, 1833,
	455, 1833,
	456, 1833,
	458, 1833,
	459, 1833,
	460, 1833,
	461, 1833,
	462, 1833,
	463, 1833,
	464, 1833,
	465, 1833,
	466, 1833,
	467, 1833,
	468, 1833,
	469, 1833,
	470, 1833,
	472, 1833,
	473, 1833,
	474, 1833,
	475, 1833,
	476, 1833,
	477, 1833,
	479, 1833,
	480, 1833,
	481, 1833,
	482, 1833,
	483, 1833,
	484, 1833,
	486, 1833,
	487, 1833,
	488, 1833,
	489, 1833,
	490, 1833,
	491, 1833,
	492, 1833,
	493, 1833,
	495, 1833,
	497, 1833,
	498, 1833,
	499, 1833,
	500, 1833,
	501, 1833,
	502, 1833,
	503, 1833,
	504, 1833,
	505, 1833,
	506, 1833,
	507, 1833,
	508, 1833,
	509, 1833,
	510, 1833,
	511, 1833,
	512, 1833,
	513, 1833,
	514, 1833,
	516, 1833,
	517, 1833,
	519, 1833,
	520, 1833,
	522, 1833,
	523, 1833,
	524, 1833,
	525, 1833,
	526, 1833,
	527, 1833,
	528, 1833,
	529, 1833,
	531, 1833,
	532, 1833,
	533, 1833,
	534, 1833,
	535, 1833,
	537, 1833,
	539, 1833,
	540, 1833,
	541, 1833,
	542, 1833,
	543, 1833,
	544, 1833,
	545, 1833,
	547, 1833,
	548, 1833,
	549, 1833,
	550, 1833,
	552, 1833,
	553, 1833,
	556, 1833,
	557, 1833,
	558, 1833,
	559, 1833,
	560, 1833,
	561, 1833,
	562, 1833,
	563, 1833,
	565, 1833,
	568, 1833,
	569, 1833,
	570, 1833,
	571, 1833,
	572, 1833,
	573, 1833,
	575, 1833,
	576, 1833,
	577, 1833,
	578, 1833,
	579, 1833,
	580, 1833,
	581, 1833,
	582, 1833,
	587, 1833,
	588, 1833,
	589, 1833,
	590, 1833,
	591, 1833,
	592, 1833,
	-2, 0,
	-1, 952,
	269, 433,
	-2, 0,
	-1, 1031,
	409, 965,
	477, 965,
	520, 965,
	541, 965,
	-2, 0,
	-1, 1032,
	409, 964,
	477, 964,
	520, 964,
	541, 964,
	-2, 896,
	-1, 1036,
	1, 1017,
	622, 1017,
	624, 1017,
	626, 1017,
	-2, 0,
	-1, 1038,
	1, 939,
	622, 939,
	624, 939,
	626, 939,
	-2, 0,
	-1, 1039,
	1, 943,
	622, 943,
	624, 943,
	626, 943,
	-2, 0,
	-1, 1040,
	1, 1087,
	188, 1087,
	622, 1087,
	624, 1087,
	626, 1087,
	-2, 0,
	-1, 1048,
	1, 970,
	622, 970,
	624, 970,
	626, 970,
	-2, 0,
	-1, 1055,
	1, 1017,
	622, 1017,
	624, 1017,
	626, 1017,
	-2, 0,
	-1, 1056,
	1, 1019,
	622, 1019,
	624, 1019,
	626, 1019,
	-2, 0,
	-1, 1057,
	1, 1022,
	622, 1022,
	624, 1022,
	626, 1022,
	-2, 0,
	-1, 1064,
	1, 1051,
	622, 1051,
	624, 1051,
	626, 1051,
	-2, 0,
	-1, 1065,
	1, 1053,
	622, 1053,
	624, 1053,
	626, 1053,
	-2, 0,
	-1, 1070,
	1, 1081,
	622, 1081,
	624, 1081,
	626, 1081,
	-2, 0,
	-1, 1124,
	175, 1703,
	188, 1703,
	282, 1703,
	355, 1703,
	-2, 1639,
	-1, 1140,
	175, 1702,
	188, 1702,
	282, 1702,
	355, 1702,
	-2, 1636,
	-1, 1167,
	625, 2426,
	-2, 756,
	-1, 1196,
	5, 2418,
	623, 2416,
	-2, 2407,
	-1, 1204,
	5, 2439,
	623, 2436,
	-2, 2427,
	-1, 1205,
	5, 2440,
	623, 2437,
	-2, 2428,
	-1, 1213,
	625, 2424,
	-2, 2406,
	-1, 1214,
	623, 2888,
	-2, 2425,
	-1, 1237,
	623, 2887,
	-2, 2441,
	-1, 1238,
	5, 1908,
	-2, 2858,
	-1, 1239,
	5, 1909,
	-2, 2859,
	-1, 1240,
	5, 1910,
	-2, 2873,
	-1, 1241,
	5, 1911,
	-2, 2837,
	-1, 1242,
	5, 1912,
	-2, 2871,
	-1, 1243,
	5, 1920,
	-2, 2850,
	-1, 1244,
	5, 1907,
	-2, 2846,
	-1, 1245,
	5, 1907,
	-2, 2845,
	-1, 1246,
	5, 1907,
	-2, 2864,
	-1, 1247,
	5, 1918,
	-2, 2839,
	-1, 1248,
	5, 1923,
	-2, 2838,
	-1, 1249,
	5, 1925,
	-2, 2883,
	-1, 1252,
	5, 1947,
	-2, 2876,
	-1, 1253,
	5, 1939,
	-2, 2877,
	-1, 1254,
	5, 1947,
	-2, 2878,
	-1, 1255,
	5, 1943,
	-2, 2879,
	-1, 1256,
	5, 1893,
	-2, 2851,
	-1, 1257,
	5, 1894,
	-2, 2852,
	-1, 1258,
	5, 1895,
	-2, 2840,
	-1, 1286,
	5, 1930,
	-2, 2884,
	-1, 1287,
	5, 1931,
	-2, 2874,
	-1, 1288,
	5, 1932,
	576, 1932,
	-2, 2841,
	-1, 1289,
	5, 1933,
	576, 1933,
	-2, 2842,
	-1, 1326,
	623, 2436,
	-2, 2427,
	-1, 1327,
	623, 2437,
	-2, 2428,
	-1, 1425,
	194, 2800,
	536, 2800,
	605, 2800,
	625, 2800,
	-2, 0,
	-1, 1430,
	1, 732,
	626, 732,
	-2, 1548,
	-1, 1577,
	375, 2401,
	435, 2401,
	479, 2401,
	615, 2401,
	-2, 2391,
	-1, 1583,
	194, 137,
	276, 137,
	340, 137,
	582, 137,
	-2, 2796,
	-1, 1584,
	194, 138,
	276, 138,
	340, 138,
	582, 138,
	-2, 2539,
	-1, 1585,
	194, 139,
	276, 139,
	340, 139,
	582, 139,
	-2, 2718,
	-1, 1591,
	627, 2401,
	-2, 2403,
	-1, 1611,
	1, 1396,
	440, 1351,
	479, 1351,
	599, 1351,
	622, 1396,
	624, 1396,
	626, 1396,
	-2, 1688,
	-1, 1617,
	210, 1493,
	230, 1493,
	448, 1493,
	-2, 0,
	-1, 1665,
	417, 1170,
	575, 1170,
	-2, 428,
	-1, 1682,
	45, 2399,
	-2, 1133,
	-1, 1689,
	1, 1396,
	622, 1396,
	624, 1396,
	626, 1396,
	-2, 1688,
	-1, 1697,
	4, 1421,
	21, 1421,
	22, 1421,
	23, 1421,
	24, 1421,
	25, 1421,
	26, 1421,
	27, 1421,
	28, 1421,
	30, 1421,
	31, 1421,
	37, 1421,
	41, 1421,
	43, 1421,
	44, 1421,
	46, 1421,
	47, 1421,
	48, 1421,
	49, 1421,
	50, 1421,
	51, 1421,
	52, 1421,
	53, 1421,
	54, 1421,
	56, 1421,
	57, 1421,
	58, 1421,
	59, 1421,
	61, 1421,
	62, 1421,
	63, 1421,
	64, 1421,
	65, 1421,
	66, 1421,
	67, 1421,
	71, 1421,
	72, 1421,
	73, 1421,
	74, 1421,
	76, 1421,
	77, 1421,
	78, 1421,
	82, 1421,
	83, 1421,
	84, 1421,
	85, 1421,
	86, 1421,
	87, 1421,
	88, 1421,
	91, 1421,
	92, 1421,
	93, 1421,
	94, 1421,
	95, 1421,
	97, 1421,
	99, 1421,
	100, 1421,
	101, 1421,
	102, 1421,
	103, 1421,
	104, 1421,
	106, 1421,
	107, 1421,
	108, 1421,
	110, 1421,
	111, 1421,
	112, 1421,
	120, 1421,
	121, 1421,
	122, 1421,
	123, 1421,
	124, 1421,
	126, 1421,
	127, 1421,
	128, 1421,
	129, 1421,
	131, 1421,
	132, 1421,
	133, 1421,
	135, 1421,
	136, 1421,
	137, 1421,
	139, 1421,
	140, 1421,
	141, 1421,
	144, 1421,
	145, 1421,
	146, 1421,
	148, 1421,
	149, 1421,
	150, 1421,
	152, 1421,
	153, 1421,
	154, 1421,
	156, 1421,
	157, 1421,
	158, 1421,
	159, 1421,
	160, 1421,
	161, 1421,
	162, 1421,
	163, 1421,
	164, 1421,
	165, 1421,
	166, 1421,
	167, 1421,
	168, 1421,
	169, 1421,
	170, 1421,
	171, 1421,
	172, 1421,
	180, 1421,
	181, 1421,
	182, 1421,
	183, 1421,
	187, 1421,
	189, 1421,
	190, 1421,
	191, 1421,
	193, 1421,
	196, 1421,
	197, 1421,
	198, 1421,
	199, 1421,
	200, 1421,
	201, 1421,
	202, 1421,
	203, 1421,
	204, 1421,
	205, 1421,
	206, 1421,
	207, 1421,
	208, 1421,
	209, 1421,
	211, 1421,
	212, 1421,
	214, 1421,
	215, 1421,
	217, 1421,
	218, 1421,
	219, 1421,
	220, 1421,
	221, 1421,
	222, 1421,
	223, 1421,
	224, 1421,
	225, 1421,
	226, 1421,
	228, 1421,
	229, 1421,
	231, 1421,
	232, 1421,
	233, 1421,
	234, 1421,
	235, 1421,
	240, 1421,
	241, 1421,
	242, 1421,
	245, 1421,
	246, 1421,
	247, 1421,
	248, 1421,
	250, 1421,
	252, 1421,
	253, 1421,
	255, 1421,
	257, 1421,
	258, 1421,
	259, 1421,
	261, 1421,
	265, 1421,
	266, 1421,
	267, 1421,
	268, 1421,
	269, 1421,
	270, 1421,
	272, 1421,
	273, 1421,
	274, 1421,
	276, 1421,
	277, 1421,
	279, 1421,
	280, 1421,
	283, 1421,
	284, 1421,
	285, 1421,
	286, 1421,
	287, 1421,
	288, 1421,
	289, 1421,
	292, 1421,
	293, 1421,
	294, 1421,
	295, 1421,
	297, 1421,
	298, 1421,
	299, 1421,
	300, 1421,
	301, 1421,
	302, 1421,
	303, 1421,
	304, 1421,
	305, 1421,
	306, 1421,
	307, 1421,
	308, 1421,
	309, 1421,
	310, 1421,
	311, 1421,
	312, 1421,
	313, 1421,
	314, 1421,
	315, 1421,
	316, 1421,
	317, 1421,
	318, 1421,
	320, 1421,
	322, 1421,
	323, 1421,
	324, 1421,
	325, 1421,
	326, 1421,
	327, 1421,
	328, 1421,
	329, 1421,
	330, 1421,
	331, 1421,
	332, 1421,
	333, 1421,
	334, 1421,
	335, 1421,
	336, 1421,
	337, 1421,
	338, 1421,
	340, 1421,
	341, 1421,
	345, 1421,
	346, 1421,
	347, 1421,
	348, 1421,
	350, 1421,
	351, 1421,
	352, 1421,
	353, 1421,
	354, 1421,
	357, 1421,
	359, 1421,
	360, 1421,
	362, 1421,
	363, 1421,
	364, 1421,
	367, 1421,
	368, 1421,
	369, 1421,
	371, 1421,
	373, 1421,
	374, 1421,
	375, 1421,
	376, 1421,
	377, 1421,
	378, 1421,
	379, 1421,
	380, 1421,
	381, 1421,
	382, 1421,
	383, 1421,
	384, 1421,
	385, 1421,
	387, 1421,
	388, 1421,
	389, 1421,
	390, 1421,
	391, 1421,
	392, 1421,
	393, 1421,
	394, 1421,
	395, 1421,
	396, 1421,
	397, 1421,
	398, 1421,
	399, 1421,
	400, 1421,
	401, 1421,
	403, 1421,
	404, 1421,
	405, 1421,
	407, 1421,
	408, 1421,
	409, 1421,
	410, 1421,
	411, 1421,
	412, 1421,
	413, 1421,
	414, 1421,
	415, 1421,
	416, 1421,
	417, 1421,
	418, 1421,
	419, 1421,
	421, 1421,
	423, 1421,
	424, 1421,
	425, 1421,
	431, 1421,
	432, 1421,
	433, 1421,
	435, 1421,
	436, 1421,
	437, 1421,
	438, 1421,
	439, 1421,
	440, 1421,
	441, 1421,
	442, 1421,
	443, 1421,
	444, 1421,
	446, 1421,
	447, 1421,
	448, 1421,
	450, 1421,
	451, 1421,
	452, 1421,
	453, 1421,
	454, 1421,
	455, 1421,
	456, 1421,
	458, 1421,
	459, 1421,
	460, 1421,
	461, 1421,
	462, 1421,
	463, 1421,
	464, 1421,
	465, 1421,
	466, 1421,
	467, 1421,
	468, 1421,
	469, 1421,
	470, 1421,
	472, 1421,
	473, 1421,
	474, 1421,
	475, 1421,
	476, 1421,
	477, 1421,
	479, 1421,
	480, 1421,
	481, 1421,
	482, 1421,
	483, 1421,
	484, 1421,
	486, 1421,
	487, 1421,
	488, 1421,
	489, 1421,
	490, 1421,
	491, 1421,
	492, 1421,
	493, 1421,
	495, 1421,
	497, 1421,
	498, 1421,
	499, 1421,
	500, 1421,
	501, 1421,
	502, 1421,
	503, 1421,
	504, 1421,
	505, 1421,
	506, 1421,
	507, 1421,
	508, 1421,
	509, 1421,
	510, 1421,
	511, 1421,
	512, 1421,
	513, 1421,
	514, 1421,
	516, 1421,
	517, 1421,
	519, 1421,
	520, 1421,
	522, 1421,
	523, 1421,
	524, 1421,
	525, 1421,
	526, 1421,
	527, 1421,
	528, 1421,
	529, 1421,
	531, 1421,
	532, 1421,
	533, 1421,
	534, 1421,
	535, 1421,
	537, 1421,
	539, 1421,
	540, 1421,
	541, 1421,
	542, 1421,
	543, 1421,
	544, 1421,
	545, 1421,
	547, 1421,
	548, 1421,
	549, 1421,
	550, 1421,
	552, 1421,
	553, 1421,
	556, 1421,
	557, 1421,
	558, 1421,
	559, 1421,
	560, 1421,
	561, 1421,
	562, 1421,
	563, 1421,
	565, 1421,
	568, 1421,
	569, 1421,
	570, 1421,
	571, 1421,
	572, 1421,
	573, 1421,
	575, 1421,
	576, 1421,
	577, 1421,
	578, 1421,
	579, 1421,
	580, 1421,
	581, 1421,
	582, 1421,
	587, 1421,
	588, 1421,
	589, 1421,
	590, 1421,
	591, 1421,
	592, 1421,
	-2, 0,
	-1, 1720,
	1, 573,
	622, 573,
	624, 573,
	626, 573,
	-2, 1659,
	-1, 1723,
	4, 2882,
	11, 2882,
	12, 2882,
	14, 2882,
	15, 2882,
	16, 2882,
	17, 2882,
	18, 2882,
	19, 2882,
	21, 2882,
	22, 2882,
	23, 2882,
	24, 2882,
	25, 2882,
	26, 2882,
	27, 2882,
	28, 2882,
	30, 2882,
	31, 2882,
	34, 2882,
	35, 2882,
	37, 2882,
	39, 2882,
	41, 2882,
	43, 2882,
	44, 2882,
	46, 2882,
	47, 2882,
	48, 2882,
	49, 2882,
	50, 2882,
	51, 2882,
	52, 2882,
	53, 2882,
	54, 2882,
	56, 2882,
	57, 2882,
	58, 2882,
	59, 2882,
	61, 2882,
	62, 2882,
	63, 2882,
	64, 2882,
	65, 2882,
	66, 2882,
	67, 2882,
	70, 2882,
	71, 2882,
	72, 2882,
	73, 2882,
	74, 2882,
	76, 2882,
	77, 2882,
	78, 2882,
	79, 2882,
	82, 2882,
	83, 2882,
	84, 2882,
	85, 2882,
	86, 2882,
	87, 2882,
	88, 2882,
	89, 2882,
	91, 2882,
	92, 2882,
	93, 2882,
	94, 2882,
	95, 2882,
	97, 2882,
	98, 2882,
	99, 2882,
	100, 2882,
	101, 2882,
	102, 2882,
	103, 2882,
	104, 2882,
	106, 2882,
	107, 2882,
	108, 2882,
	109, 2882,
	110, 2882,
	111, 2882,
	112, 2882,
	120, 2882,
	121, 2882,
	122, 2882,
	123, 2882,
	124, 2882,
	126, 2882,
	127, 2882,
	128, 2882,
	129, 2882,
	131, 2882,
	132, 2882,
	133, 2882,
	135, 2882,
	136, 2882,
	137, 2882,
	139, 2882,
	140, 2882,
	141, 2882,
	144, 2882,
	145, 2882,
	146, 2882,
	148, 2882,
	149, 2882,
	150, 2882,
	152, 2882,
	153, 2882,
	154, 2882,
	156, 2882,
	157, 2882,
	158, 2882,
	159, 2882,
	160, 2882,
	161, 2882,
	162, 2882,
	163, 2882,
	164, 2882,
	165, 2882,
	166, 2882,
	167, 2882,
	168, 2882,
	169, 2882,
	170, 2882,
	171, 2882,
	172, 2882,
	176, 2882,
	177, 2882,
	178, 2882,
	179, 2882,
	180, 2882,
	181, 2882,
	182, 2882,
	183, 2882,
	186, 2882,
	187, 2882,
	189, 2882,
	190, 2882,
	191, 2882,
	193, 2882,
	195, 2882,
	196, 2882,
	197, 2882,
	198, 2882,
	199, 2882,
	200, 2882,
	201, 2882,
	202, 2882,
	203, 2882,
	204, 2882,
	205, 2882,
	206, 2882,
	207, 2882,
	208, 2882,
	209, 2882,
	211, 2882,
	212, 2882,
	214, 2882,
	215, 2882,
	217, 2882,
	218, 2882,
	219, 2882,
	220, 2882,
	221, 2882,
	222, 2882,
	223, 2882,
	224, 2882,
	225, 2882,
	226, 2882,
	227, 2882,
	228, 2882,
	229, 2882,
	230, 2882,
	231, 2882,
	232, 2882,
	233, 2882,
	234, 2882,
	235, 2882,
	237, 2882,
	238, 2882,
	240, 2882,
	241, 2882,
	242, 2882,
	244, 2882,
	245, 2882,
	246, 2882,
	247, 2882,
	248, 2882,
	250, 2882,
	252, 2882,
	253, 2882,
	254, 2882,
	255, 2882,
	256, 2882,
	257, 2882,
	258, 2882,
	259, 2882,
	260, 2882,
	261, 2882,
	263, 2882,
	264, 2882,
	265, 2882,
	266, 2882,
	267, 2882,
	268, 2882,
	269, 2882,
	270, 2882,
	272, 2882,
	273, 2882,
	274, 2882,
	276, 2882,
	277, 2882,
	278, 2882,
	279, 2882,
	280, 2882,
	281, 2882,
	283, 2882,
	284, 2882,
	285, 2882,
	286, 2882,
	287, 2882,
	288, 2882,
	289, 2882,
	292, 2882,
	293, 2882,
	294, 2882,
	295, 2882,
	296, 2882,
	297, 2882,
	298, 2882,
	299, 2882,
	300, 2882,
	301, 2882,
	302, 2882,
	303, 2882,
	304, 2882,
	305, 2882,
	306, 2882,
	307, 2882,
	308, 2882,
	309, 2882,
	310, 2882,
	311, 2882,
	312, 2882,
	313, 2882,
	314, 2882,
	315, 2882,
	316, 2882,
	317, 2882,
	318, 2882,
	320, 2882,
	321, 2882,
	322, 2882,
	323, 2882,
	324, 2882,
	325, 2882,
	326, 2882,
	327, 2882,
	328, 2882,
	329, 2882,
	330, 2882,
	331, 2882,
	332, 2882,
	333, 2882,
	334, 2882,
	335, 2882,
	336, 2882,
	337, 2882,
	338, 2882,
	340, 2882,
	341, 2882,
	344, 2882,
	345, 2882,
	346, 2882,
	347, 2882,
	348, 2882,
	350, 2882,
	351, 2882,
	352, 2882,
	353, 2882,
	354, 2882,
	357, 2882,
	359, 2882,
	362, 2882,
	363, 2882,
	364, 2882,
	365, 2882,
	367, 2882,
	368, 2882,
	369, 2882,
	371, 2882,
	373, 2882,
	374, 2882,
	375, 2882,
	376, 2882,
	377, 2882,
	378, 2882,
	379, 2882,
	380, 2882,
	381, 2882,
	382, 2882,
	383, 2882,
	384, 2882,
	385, 2882,
	387, 2882,
	388, 2882,
	389, 2882,
	390, 2882,
	391, 2882,
	392, 2882,
	393, 2882,
	394, 2882,
	395, 2882,
	396, 2882,
	397, 2882,
	398, 2882,
	399, 2882,
	400, 2882,
	401, 2882,
	403, 2882,
	404, 2882,
	405, 2882,
	407, 2882,
	408, 2882,
	409, 2882,
	410, 2882,
	411, 2882,
	412, 2882,
	413, 2882,
	414, 2882,
	415, 2882,
	416, 2882,
	417, 2882,
	418, 2882,
	419, 2882,
	421, 2882,
	423, 2882,
	424, 2882,
	425, 2882,
	431, 2882,
	432, 2882,
	433, 2882,
	434, 2882,
	435, 2882,
	436, 2882,
	437, 2882,
	438, 2882,
	439, 2882,
	440, 2882,
	441, 2882,
	442, 2882,
	443, 2882,
	444, 2882,
	446, 2882,
	447, 2882,
	448, 2882,
	449, 2882,
	450, 2882,
	451, 2882,
	452, 2882,
	453, 2882,
	454, 2882,
	455, 2882,
	456, 2882,
	457, 2882,
	458, 2882,
	459, 2882,
	460, 2882,
	461, 2882,
	462, 2882,
	463, 2882,
	464, 2882,
	465, 2882,
	466, 2882,
	467, 2882,
	468, 2882,
	469, 2882,
	470, 2882,
	472, 2882,
	473, 2882,
	474, 2882,
	475, 2882,
	476, 2882,
	477, 2882,
	479, 2882,
	480, 2882,
	481, 2882,
	482, 2882,
	483, 2882,
	484, 2882,
	485, 2882,
	486, 2882,
	487, 2882,
	488, 2882,
	489, 2882,
	490, 2882,
	491, 2882,
	492, 2882,
	493, 2882,
	495, 2882,
	497, 2882,
	498, 2882,
	499, 2882,
	500, 2882,
	501, 2882,
	502, 2882,
	503, 2882,
	504, 2882,
	505, 2882,
	506, 2882,
	507, 2882,
	508, 2882,
	509, 2882,
	510, 2882,
	511, 2882,
	512, 2882,
	513, 2882,
	514, 2882,
	516, 2882,
	517, 2882,
	518, 2882,
	519, 2882,
	520, 2882,
	522, 2882,
	523, 2882,
	524, 2882,
	525, 2882,
	526, 2882,
	527, 2882,
	528, 2882,
	529, 2882,
	531, 2882,
	532, 2882,
	533, 2882,
	534, 2882,
	535, 2882,
	537, 2882,
	539, 2882,
	540, 2882,
	541, 2882,
	542, 2882,
	543, 2882,
	544, 2882,
	545, 2882,
	547, 2882,
	548, 2882,
	549, 2882,
	550, 2882,
	552, 2882,
	553, 2882,
	556, 2882,
	557, 2882,
	558, 2882,
	559, 2882,
	560, 2882,
	561, 2882,
	562, 2882,
	563, 2882,
	565, 2882,
	568, 2882,
	569, 2882,
	570, 2882,
	571, 2882,
	572, 2882,
	573, 2882,
	575, 2882,
	576, 2882,
	577, 2882,
	578, 2882,
	579, 2882,
	580, 2882,
	581, 2882,
	582, 2882,
	587, 2882,
	588, 2882,
	589, 2882,
	590, 2882,
	591, 2882,
	592, 2882,
	593, 2882,
	595, 2882,
	603, 2882,
	604, 2882,
	605, 2882,
	606, 2882,
	607, 2882,
	608, 2882,
	610, 2882,
	611, 2882,
	612, 2882,
	613, 2882,
	614, 2882,
	615, 2882,
	616, 2882,
	617, 2882,
	618, 2882,
	621, 2882,
	624, 2882,
	625, 2882,
	627, 2882,
	628, 2882,
	-2, 0,
	-1, 1728,
	194, 2757,
	536, 2757,
	605, 2757,
	625, 2757,
	-2, 0,
	-1, 1782,
	409, 965,
	477, 965,
	520, 965,
	541, 965,
	-2, 0,
	-1, 1793,
	1, 1493,
	622, 1493,
	624, 1493,
	626, 1493,
	-2, 0,
	-1, 1810,
	1, 960,
	622, 960,
	624, 960,
	626, 960,
	-2, 0,
	-1, 1811,
	1, 1004,
	622, 1004,
	624, 1004,
	626, 1004,
	-2, 0,
	-1, 1812,
	1, 1012,
	622, 1012,
	624, 1012,
	626, 1012,
	-2, 0,
	-1, 1815,
	1, 969,
	622, 969,
	624, 969,
	626, 969,
	-2, 0,
	-1, 1817,
	1, 975,
	622, 975,
	624, 975,
	626, 975,
	-2, 0,
	-1, 1820,
	1, 971,
	622, 971,
	624, 971,
	626, 971,
	-2, 0,
	-1, 1825,
	1, 985,
	622, 985,
	624, 985,
	626, 985,
	-2, 0,
	-1, 1858,
	1, 2739,
	622, 2739,
	624, 2739,
	625, 2739,
	626, 2739,
	-2, 0,
	-1, 1862,
	1, 1062,
	622, 1062,
	624, 1062,
	626, 1062,
	-2, 0,
	-1, 1879,
	1, 1543,
	626, 1543,
	-2, 1548,
	-1, 1882,
	175, 1702,
	188, 1702,
	282, 1702,
	355, 1702,
	-2, 1640,
	-1, 1982,
	155, 1661,
	175, 1661,
	188, 1661,
	249, 1661,
	282, 1661,
	355, 1661,
	366, 1661,
	554, 1661,
	-2, 2112,
	-1, 2043,
	624, 2287,
	-2, 0,
	-1, 2078,
	155, 1661,
	175, 1661,
	188, 1661,
	249, 1661,
	282, 1661,
	355, 1661,
	366, 1661,
	554, 1661,
	-2, 1794,
	-1, 2118,
	536, 2754,
	625, 2754,
	628, 2754,
	-2, 0,
	-1, 2135,
	623, 1935,
	-2, 1923,
	-1, 2167,
	194, 2754,
	625, 2754,
	628, 2754,
	-2, 0,
	-1, 2210,
	1, 734,
	626, 734,
	-2, 1548,
	-1, 2377,
	230, 272,
	-2, 2435,
	-1, 2378,
	230, 273,
	-2, 328,
	-1, 2489,
	1, 962,
	622, 962,
	624, 962,
	626, 962,
	-2, 0,
	-1, 2490,
	1, 1006,
	622, 1006,
	624, 1006,
	626, 1006,
	-2, 0,
	-1, 2491,
	1, 1014,
	622, 1014,
	624, 1014,
	626, 1014,
	-2, 0,
	-1, 2492,
	1, 1064,
	622, 1064,
	624, 1064,
	626, 1064,
	-2, 0,
	-1, 2533,
	1, 987,
	622, 987,
	624, 987,
	626, 987,
	-2, 0,
	-1, 2554,
	1, 1047,
	622, 1047,
	624, 1047,
	626, 1047,
	-2, 0,
	-1, 2601,
	455, 1729,
	456, 1729,
	-2, 1968,
	-1, 2632,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 1988,
	-1, 2633,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 1989,
	-1, 2634,
	98, 0,
	263, 0,
	264, 0,
	607, 0,
	608, 0,
	-2, 1990,
	-1, 2635,
	98, 0,
	263, 0,
	264, 0,
	607, 0,
	608, 0,
	-2, 1991,
	-1, 2636,
	98, 0,
	263, 0,
	264, 0,
	607, 0,
	608, 0,
	-2, 1992,
	-1, 2637,
	98, 0,
	263, 0,
	264, 0,
	607, 0,
	608, 0,
	-2, 1993,
	-1, 2638,
	98, 0,
	263, 0,
	264, 0,
	607, 0,
	608, 0,
	-2, 1994,
	-1, 2639,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 1995,
	-1, 2651,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 2007,
	-1, 2652,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 2008,
	-1, 2653,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 2009,
	-1, 2657,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2016,
	-1, 2663,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2020,
	-1, 2665,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2028,
	-1, 2666,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2029,
	-1, 2667,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2030,
	-1, 2668,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2031,
	-1, 2842,
	5, 2439,
	194, 2298,
	623, 2436,
	-2, 2427,
	-1, 2843,
	194, 2299,
	-2, 2833,
	-1, 2844,
	194, 2300,
	-2, 2634,
	-1, 2845,
	194, 2301,
	-2, 2512,
	-1, 2846,
	194, 2302,
	-2, 2572,
	-1, 2847,
	194, 2303,
	-2, 2619,
	-1, 2848,
	194, 2304,
	-2, 2752,
	-1, 2849,
	194, 2305,
	-2, 2095,
	-1, 2920,
	1, 1795,
	2, 1795,
	109, 1795,
	155, 1795,
	175, 1795,
	188, 1795,
	195, 1795,
	213, 1795,
	216, 1795,
	244, 1795,
	249, 1795,
	260, 1795,
	278, 1795,
	282, 1795,
	321, 1795,
	355, 1795,
	360, 1795,
	366, 1795,
	445, 1795,
	449, 1795,
	554, 1795,
	566, 1795,
	584, 1795,
	585, 1795,
	586, 1795,
	596, 1795,
	622, 1795,
	624, 1795,
	626, 1795,
	628, 1795,
	-2, 1794,
	-1, 2933,
	623, 2408,
	-2, 2422,
	-1, 2935,
	1, 345,
	584, 345,
	-2, 1688,
	-1, 2965,
	623, 1934,
	-2, 1924,
	-1, 3176,
	1, 1396,
	440, 1351,
	479, 1351,
	599, 1351,
	622, 1396,
	624, 1396,
	626, 1396,
	-2, 1688,
	-1, 3352,
	361, 1732,
	-2, 2872,
	-1, 3353,
	361, 1733,
	-2, 2736,
	-1, 3357,
	455, 2364,
	456, 2364,
	-2, 2093,
	-1, 3358,
	455, 2368,
	456, 2368,
	-2, 2094,
	-1, 3359,
	455, 2365,
	456, 2365,
	-2, 2093,
	-1, 3360,
	455, 2369,
	456, 2369,
	-2, 2094,
	-1, 3373,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2018,
	-1, 3374,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2022,
	-1, 3380,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2024,
	-1, 3607,
	1, 729,
	622, 729,
	624, 729,
	626, 729,
	-2, 1548,
	-1, 3799,
	45, 2399,
	-2, 1134,
	-1, 3804,
	1, 1396,
	622, 1396,
	624, 1396,
	626, 1396,
	-2, 1688,
	-1, 3909,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2026,
	-1, 3916,
	254, 0,
	256, 0,
	344, 0,
	-2, 2045,
	-1, 3984,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 2074,
	-1, 3985,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 2075,
	-1, 3986,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 2076,
	-1, 3990,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 2080,
	-1, 3991,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 2081,
	-1, 3992,
	14, 0,
	15, 0,
	16, 0,
	603, 0,
	604, 0,
	605, 0,
	-2, 2082,
	-1, 4040,
	623, 2409,
	-2, 2423,
	-1, 4246,
	625, 2989,
	-2, 1614,
	-1, 4301,
	254, 0,
	256, 0,
	344, 0,
	-2, 2046,
	-1, 4304,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2049,
	-1, 4305,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2051,
	-1, 4419,
	625, 2424,
	-2, 1431,
	-1, 4580,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2050,
	-1, 4581,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2052,
	-1, 4592,
	254, 0,
	-2, 2085,
	-1, 4780,
	254, 0,
	-2, 2086,
	-1, 5000,
	53, 0,
	227, 0,
	281, 0,
	485, 0,
	593, 0,
	606, 0,
	-2, 2836,
}

const sqlPrivate = 57344

const sqlLast = 143124

var sqlAct = [...]int{
	283, 5191, 4935, 5062, 1406, 3131, 5118, 3249, 3101, 3511,
	4872, 4828, 4649, 4999, 4986, 5012, 5046, 5132, 4891, 4949,
	4925, 4820, 3788, 4284, 4968, 4946, 1319, 5013, 4749, 1403,
	4934, 5071, 2374, 3787, 4726, 5010, 5014, 2270, 4697, 4713,
	3949, 4050, 4998, 4539, 2452, 1626, 1330, 4784, 4534, 4631,
	1462, 4495, 4528, 4468, 4654, 3633, 1150, 3901, 3219, 4569,
	4601, 2611, 1398, 4238, 1601, 2464, 4230, 3821, 4519, 4732,
	4521, 4857, 4154, 3366, 4415, 2875, 4416, 875, 1746, 4396,
	2680, 3037, 1396, 4544, 741, 3636, 1141, 3815, 3696, 2179,
	4187, 3271, 2192, 3772, 4204, 4185, 2462, 2122, 2279, 3036,
	3639, 1481, 2619, 813, 3116, 875, 4597, 3621, 3849, 3238,
	3851, 3777, 3208, 1891, 3623, 3776, 3622, 3233, 2947, 3779,
	3754, 3564, 2425, 2084, 3753, 3235, 4043, 2612, 3534, 3557,
	3526, 1207, 3517, 3761, 1574, 1790, 3494, 950, 4, 4283,
	752, 3266, 1744, 954, 3250, 4340, 2361, 1149, 187, 2363,
	3515, 3183, 2307, 2357, 2053, 3660, 5047, 3132, 277, 2912,
	276, 2291, 872, 2913, 3493, 2029, 4010, 4785, 1990, 3350,
	945, 2693, 2362, 1960, 3265, 2616, 1401, 2758, 1684, 3145,
	3212, 809, 870, 2355, 2347, 2328, 2335, 1445, 3220, 1200,
	2190, 2258, 1879, 2102, 1375, 2262, 2893, 1250, 1310, 1460,
	2123, 1205, 2749, 2677, 1464, 2054, 2600, 2581, 2583, 2948,
	3243, 786, 1721, 2412, 2350, 2073, 1687, 3061, 4892, 876,
	2411, 3022, 877, 3062, 2752, 1025, 1432, 3780, 1292, 2024,
	2872, 1603, 2976, 2902, 1313, 881, 2838, 884, 2063, 2070,
	2730, 2883, 2804, 1974, 187, 1892, 2915, 1327, 1893, 113,
	1825, 2582, 197, 1810, 794, 2584, 2371, 198, 805, 2438,
	1309, 1712, 1582, 881, 1621, 884, 1386, 971, 5063, 2605,
	1719, 5119, 2760, 1196, 1181, 1457, 745, 45, 1315, 44,
	1203, 42, 33, 31, 29, 1290, 742, 865, 754, 1898,
	3403, 1046, 1878, 4024, 1632, 4025, 769, 728, 3397, 926,
	2181, 750, 927, 4051, 2181, 5202, 5194, 2181, 2181, 2892,
	3734, 3513, 1145, 2181, 5008, 1906, 1907, 2181, 1939, 1940,
	1941, 1950, 1951, 1952, 5182, 5181, 4621, 5151, 2892, 2892,
	1389, 4653, 5149, 5092, 822, 4618, 4653, 2383, 1943, 1937,
	5048, 4615, 5038, 1441, 5049, 2202, 2892, 1909, 5036, 5033,
	5030, 3831, 2892, 5034, 5031, 3830, 1145, 1956, 1202, 4996,
	1756, 4995, 1625, 2383, 4994, 2383, 3592, 4984, 3276, 4982,
	1816, 4653, 4977, 4653, 1962, 2461, 4735, 4972, 4971, 1307,
	4944, 4653, 4653, 1908, 4653, 4911, 4904, 4903, 4896, 2956,
	2892, 2892, 2383, 1928, 4871, 4868, 4850, 4782, 2383, 4653,
	4485, 2956, 1925, 4763, 825, 829, 4728, 4264, 4672, 4671,
	4084, 4660, 2383, 2383, 4659, 2383, 4652, 4367, 4653, 4608,
	4653, 1134, 4582, 2383, 4555, 4552, 2956, 4463, 3276, 3734,
	4443, 2892, 4303, 2199, 2892, 4254, 2956, 1737, 3734, 3844,
	1125, 1441, 2460, 4248, 4201, 1124, 4115, 3844, 4202, 1146,
	4116, 4083, 4035, 4033, 4017, 4084, 4036, 4034, 2892, 2202,
	3933, 3929, 3843, 3574, 2383, 2892, 3844, 3464, 3465, 2978,
	3482, 3483, 3484, 4014, 3510, 3505, 2383, 1345, 2892, 2892,
	1931, 1932, 1933, 1934, 3504, 1293, 1293, 2952, 2892, 1140,
	1914, 2706, 2707, 2708, 2725, 2726, 2727, 3455, 3453, 3589,
	3445, 3456, 3454, 3443, 3446, 3414, 3275, 2892, 3412, 2892,
	3276, 3260, 2728, 3259, 3413, 2448, 2202, 2448, 3001, 2955,
	1325, 96, 2892, 2956, 2945, 1294, 2885, 1322, 2892, 2202,
	1646, 1947, 2937, 1198, 1957, 1353, 2383, 3365, 1906, 1907,
	2891, 1936, 1938, 2755, 2892, 3479, 1634, 1962, 2447, 1296,
	2892, 1297, 2448, 4912, 4786, 2199, 1634, 4777, 1953, 4765,
	1954, 2202, 1937, 4735, 3276, 4014, 2718, 1923, 1924, 1346,
	1909, 1906, 1907, 2884, 2892, 2714, 4532, 4485, 244, 2199,
	4444, 4264, 4203, 3108, 2284, 1945, 3021, 2216, 2180, 2196,
	3214, 1346, 2382, 3126, 3012, 1937, 2049, 1962, 1620, 4133,
	1929, 3904, 3877, 1909, 2071, 1321, 1908, 2340, 2929, 3832,
	1792, 2928, 2927, 2926, 2925, 244, 1928, 1298, 3402, 1295,
	1133, 1132, 1131, 1634, 1130, 1925, 1129, 1128, 246, 3833,
	1962, 1127, 1906, 1907, 1179, 1123, 1122, 1121, 2756, 1908,
	1120, 1119, 3470, 1118, 1117, 1116, 1115, 1633, 1955, 3322,
	2390, 1114, 1113, 2719, 2720, 2721, 2722, 1112, 1111, 1110,
	1109, 1640, 1108, 2713, 1909, 246, 1107, 1906, 1907, 1944,
	1106, 1105, 1104, 1086, 1023, 2182, 1022, 1021, 245, 2182,
	1959, 4297, 2182, 2182, 1020, 1019, 3487, 1018, 2182, 1017,
	1016, 1015, 2182, 238, 1014, 1013, 1012, 1011, 1010, 1909,
	1908, 1009, 239, 1931, 1932, 1933, 1934, 1008, 1007, 1006,
	3486, 1005, 1004, 1914, 1003, 245, 1002, 1001, 1000, 999,
	2757, 998, 2754, 997, 996, 995, 994, 2525, 993, 992,
	199, 991, 990, 3228, 989, 1908, 988, 987, 1935, 976,
	2723, 2724, 975, 974, 969, 968, 1914, 961, 2199, 960,
	959, 1645, 3480, 944, 943, 900, 899, 1760, 2787, 898,
	2199, 1930, 897, 888, 1936, 1938, 887, 199, 886, 2199,
	4546, 885, 849, 2716, 820, 1741, 819, 818, 800, 271,
	1414, 270, 269, 2785, 268, 3830, 267, 1408, 1205, 1948,
	1923, 1924, 266, 265, 264, 263, 262, 1936, 1938, 261,
	1346, 260, 259, 258, 257, 256, 255, 1914, 254, 253,
	252, 251, 250, 249, 3246, 1205, 1205, 1205, 248, 1148,
	247, 4358, 1961, 1929, 4315, 244, 4060, 4029, 3845, 244,
	3029, 3560, 1959, 1634, 3425, 3408, 1625, 3399, 156, 244,
	3302, 3193, 1914, 2960, 3508, 2032, 2934, 3029, 2032, 2919,
	2771, 2573, 2031, 1484, 2243, 2031, 1929, 1205, 5023, 2769,
	2201, 2202, 5022, 1205, 1606, 2988, 1408, 2074, 2180, 2199,
	1611, 1449, 1450, 1451, 2196, 246, 2097, 2001, 2576, 246,
	2035, 1323, 1639, 2030, 1873, 4789, 1628, 2759, 3509, 246,
	1453, 1205, 1329, 1205, 5019, 1205, 1905, 1946, 4997, 4981,
	4876, 4774, 1606, 1959, 4768, 1436, 244, 1920, 1921, 1927,
	1949, 1926, 1922, 3481, 1919, 1917, 1918, 1910, 1911, 1912,
	1913, 1915, 1916, 4766, 4644, 245, 3396, 4596, 1408, 245,
	3464, 3465, 1689, 2199, 2717, 4553, 1959, 4531, 1992, 245,
	238, 1592, 4373, 4338, 238, 4337, 4331, 4330, 1606, 239,
	1587, 1818, 4329, 239, 238, 1606, 246, 4322, 4321, 4319,
	2884, 1935, 4314, 239, 1205, 1992, 1205, 4311, 4310, 1346,
	4200, 1606, 4064, 4063, 4062, 1380, 1383, 199, 3464, 3465,
	1205, 199, 1205, 4039, 1930, 4214, 4005, 4548, 4004, 1428,
	4003, 199, 3230, 3925, 1393, 1961, 3920, 1959, 3555, 244,
	3501, 1430, 3492, 1624, 3463, 3460, 245, 4121, 2753, 3464,
	3465, 3459, 1693, 1696, 3457, 3452, 3451, 1930, 3450, 3447,
	3444, 238, 3424, 3407, 3027, 3400, 3398, 3261, 1994, 2388,
	239, 1606, 2920, 1999, 1467, 1468, 2742, 881, 1905, 884,
	2969, 1609, 1904, 3464, 3465, 1961, 3482, 3483, 3484, 246,
	1477, 1205, 1571, 1576, 1205, 1306, 2428, 5197, 199, 3476,
	3477, 3478, 5140, 1422, 5139, 5061, 3475, 3473, 3474, 3466,
	3467, 3468, 3469, 3471, 3472, 5059, 1331, 3951, 1961, 3581,
	2703, 2704, 2705, 2729, 2715, 2709, 4936, 2711, 2712, 2710,
	2697, 2698, 2699, 2700, 2701, 2702, 187, 187, 1623, 245,
	4791, 1622, 1682, 4215, 1993, 3470, 1991, 4855, 1459, 4840,
	4836, 4835, 1469, 1470, 238, 2015, 244, 4834, 4131, 1724,
	1726, 3479, 4814, 239, 4813, 4811, 4788, 1761, 4787, 4761,
	244, 2683, 4747, 2689, 1926, 1922, 4744, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 4743, 4736, 4724, 4723,
	2958, 199, 4668, 3470, 4639, 244, 1205, 1205, 1205, 1205,
	1205, 1205, 1205, 1205, 3026, 1456, 246, 40, 4594, 3506,
	1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915, 1916, 1722,
	246, 3026, 4577, 1713, 3470, 4576, 1579, 1436, 4515, 1205,
	1436, 1834, 4511, 4508, 4486, 1205, 244, 1146, 4357, 4336,
	4265, 4119, 4118, 1715, 3229, 246, 4099, 3464, 3465, 4098,
	4096, 1883, 3026, 4020, 4008, 3480, 245, 3915, 3470, 1979,
	3846, 3840, 3807, 3715, 1906, 1907, 244, 3671, 3638, 3583,
	245, 238, 3429, 3428, 1910, 1911, 1912, 1913, 1915, 1916,
	239, 3423, 3389, 3207, 244, 238, 246, 3054, 1937, 244,
	4547, 4215, 1766, 2038, 239, 245, 1909, 2037, 2036, 1736,
	2033, 3464, 3465, 1699, 3482, 3483, 3484, 2025, 199, 2023,
	238, 1912, 1913, 1915, 1916, 1755, 246, 2967, 2966, 239,
	2931, 2924, 199, 1962, 4299, 2890, 1877, 2767, 244, 1978,
	2096, 2052, 1908, 2047, 246, 1959, 245, 2046, 2045, 246,
	1205, 1205, 1205, 2044, 2043, 2042, 1205, 3245, 2041, 2040,
	1981, 238, 2039, 1327, 2020, 1327, 2019, 2018, 2017, 2016,
	239, 2015, 2014, 2013, 1783, 2012, 245, 2011, 3480, 2010,
	1484, 2009, 2008, 2007, 2006, 2005, 1994, 1980, 246, 3479,
	2051, 238, 1205, 1819, 245, 875, 1408, 1977, 199, 245,
	239, 2140, 875, 1972, 1408, 1421, 1408, 1350, 1341, 238,
	4790, 1884, 4518, 4369, 238, 4307, 4059, 4032, 239, 4023,
	3411, 2922, 1718, 239, 1959, 2119, 3481, 2100, 199, 4616,
	2786, 2060, 3470, 2169, 4371, 2171, 1880, 4058, 245, 1993,
	3579, 1975, 3836, 1888, 1906, 1907, 199, 1887, 1463, 1914,
	4446, 199, 1125, 238, 2092, 2784, 3102, 1124, 1959, 1446,
	5131, 4844, 239, 4837, 4737, 1882, 1408, 2113, 3464, 3465,
	2034, 1463, 1205, 2108, 1463, 4551, 1909, 1448, 4489, 2107,
	4488, 4487, 4445, 1901, 1902, 4360, 3470, 4272, 1146, 4271,
	199, 4270, 4269, 4268, 4267, 2204, 1205, 2081, 4266, 4085,
	1936, 1938, 3552, 3080, 1484, 2057, 2058, 4027, 4026, 3848,
	3847, 3738, 1908, 3736, 187, 3735, 5015, 5088, 5086, 1463,
	2186, 4733, 2770, 2188, 2318, 2026, 2027, 1441, 2032, 2193,
	2273, 2768, 2134, 2195, 5011, 2031, 1875, 2074, 2198, 3481,
	1461, 4218, 3480, 3902, 2015, 2234, 1447, 2208, 4769, 2211,
	4145, 1441, 2241, 881, 3486, 884, 3705, 2114, 3449, 1929,
	881, 2222, 884, 3143, 2163, 2228, 2227, 4767, 3448, 1463,
	2236, 1782, 1436, 2207, 3371, 2105, 2755, 3065, 1444, 4114,
	1441, 2082, 3466, 3467, 3468, 3469, 3471, 3472, 1293, 3790,
	4208, 3789, 1718, 1102, 3640, 4643, 3480, 1835, 2137, 2079,
	2072, 4079, 4807, 4080, 2453, 4806, 2003, 1791, 4727, 3674,
	5044, 4529, 1442, 3272, 1146, 3762, 4475, 1792, 2365, 4222,
	4197, 4151, 1959, 4142, 2184, 4807, 4124, 2050, 3874, 3605,
	2545, 2458, 3468, 3469, 3471, 3472, 1325, 2396, 1325, 1959,
	2337, 2076, 1103, 1322, 2091, 1322, 2090, 4598, 2089, 2087,
	2086, 2085, 3513, 3953, 2750, 4663, 4635, 5020, 3770, 2106,
	2422, 3466, 3467, 3468, 3469, 3471, 3472, 2364, 2210, 1606,
	1606, 2756, 2481, 2120, 3417, 2965, 1959, 2048, 2028, 1484,
	1692, 1442, 1717, 2317, 1616, 3476, 3477, 3478, 1417, 1379,
	2429, 2231, 3475, 3473, 3474, 3466, 3467, 3468, 3469, 3471,
	3472, 2000, 3123, 3481, 4430, 5035, 5032, 3826, 4090, 3120,
	3118, 1770, 4427, 2101, 4829, 4535, 4943, 3643, 4109, 3242,
	1930, 1321, 1749, 1321, 5123, 2351, 1305, 5021, 2314, 939,
	2322, 3745, 5068, 5090, 2206, 1438, 2332, 5089, 4666, 3301,
	4662, 3063, 4641, 3580, 3896, 4692, 4164, 2375, 2380, 3609,
	4432, 3104, 1659, 2757, 3002, 2754, 2539, 3481, 1100, 5193,
	1098, 1832, 3185, 1667, 2237, 2554, 2324, 1096, 2551, 2229,
	1094, 4845, 4685, 1091, 4674, 2537, 1606, 1618, 1606, 4478,
	1606, 1961, 1082, 2959, 4477, 3025, 2250, 2251, 3025, 1833,
	2223, 4162, 2278, 2254, 2255, 2284, 4161, 4153, 1606, 1606,
	3023, 1448, 4139, 3023, 1438, 2327, 4138, 4136, 4135, 4123,
	4082, 2233, 1606, 2290, 4081, 2327, 4163, 1814, 3751, 3750,
	1443, 3707, 2591, 2552, 1606, 1144, 1606, 1606, 1606, 881,
	2327, 884, 3573, 3422, 3421, 3420, 5126, 2367, 2368, 940,
	3419, 1705, 2248, 1704, 2249, 3375, 2352, 3141, 2312, 2232,
	875, 2553, 1717, 1668, 2256, 2257, 2325, 3473, 3474, 3466,
	3467, 3468, 3469, 3471, 3472, 2369, 1831, 2282, 3140, 2480,
	1447, 2418, 1205, 3125, 1917, 1918, 1910, 1911, 1912, 1913,
	1915, 1916, 1439, 2589, 3114, 2490, 2423, 4664, 4636, 1443,
	1623, 1440, 3106, 1622, 2323, 3096, 3095, 1768, 2311, 2435,
	2331, 2308, 3090, 3476, 3477, 3478, 3089, 3088, 3070, 1205,
	3475, 3473, 3474, 3466, 3467, 3468, 3469, 3471, 3472, 1143,
	2759, 3069, 3030, 792, 4426, 3239, 2456, 2946, 1813, 2664,
	1881, 3611, 3703, 2485, 2128, 2381, 2800, 5127, 2799, 3640,
	5124, 2466, 4428, 2621, 4378, 1205, 792, 1205, 5069, 2491,
	1703, 1439, 1702, 2973, 1205, 3009, 2950, 2140, 2140, 1484,
	1440, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205,
	1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205,
	1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205,
	1205, 1205, 1205, 1205, 1205, 1205, 1205, 1323, 1205, 1323,
	1205, 1205, 1205, 1205, 1448, 2445, 1413, 1722, 881, 1722,
	884, 2443, 2510, 2404, 2432, 2403, 2575, 1715, 2437, 2440,
	2441, 2440, 4575, 2365, 3067, 1146, 1205, 1146, 2453, 3875,
	1205, 1205, 2563, 2472, 3673, 1088, 1145, 1422, 1205, 2580,
	2590, 2753, 1205, 2402, 1205, 1205, 2449, 2326, 2450, 3084,
	5129, 1916, 1484, 1465, 1466, 4388, 2593, 2326, 1205, 1205,
	1205, 1205, 1619, 4447, 1205, 1205, 1205, 1205, 1205, 1205,
	1205, 1205, 2326, 1447, 1441, 3472, 1465, 1466, 2320, 1465,
	1466, 1663, 1431, 3464, 3465, 2571, 1784, 2489, 2134, 2134,
	1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1365,
	2500, 3704, 4411, 1205, 2477, 2731, 2732, 2566, 1871, 1631,
	2750, 1638, 1763, 1644, 3279, 1327, 2588, 1676, 2936, 2731,
	2747, 4387, 1484, 1681, 1465, 1466, 1874, 1814, 2533, 2679,
	3329, 1327, 847, 2497, 3317, 2283, 2679, 1830, 4404, 3053,
	2543, 1844, 4397, 1441, 1850, 2473, 2795, 1205, 1484, 3363,
	2531, 2604, 942, 941, 2137, 2137, 5089, 2617, 2618, 4395,
	791, 3479, 4424, 4429, 2280, 2841, 2841, 2855, 4399, 2731,
	3464, 3465, 2876, 2878, 2238, 2239, 3348, 2494, 2882, 2353,
	3005, 1792, 1735, 791, 1740, 2579, 2577, 2592, 2585, 2578,
	2292, 1792, 1780, 4405, 3122, 1811, 4177, 3884, 1754, 2276,
	1759, 1125, 2695, 3007, 1125, 1125, 2608, 5155, 4822, 2609,
	2610, 2687, 2746, 3386, 1442, 2296, 3608, 1886, 2685, 2591,
	2488, 3690, 2932, 2565, 1142, 5017, 2907, 5125, 3121, 2949,
	2281, 1848, 2661, 1764, 2062, 3119, 3117, 4398, 1813, 1420,
	4120, 3008, 3052, 3024, 3384, 2442, 3332, 2899, 845, 2498,
	3883, 4702, 3319, 1408, 1408, 5128, 4178, 2996, 3470, 1812,
	2277, 2354, 3006, 2081, 3942, 2759, 1817, 2691, 1688, 4106,
	4797, 4476, 2293, 4137, 793, 1769, 3039, 1146, 2972, 3682,
	2589, 3691, 985, 2997, 2744, 4134, 4411, 1146, 3362, 740,
	3939, 1146, 2921, 2538, 1484, 4067, 1092, 793, 1092, 4054,
	4176, 3464, 3465, 2975, 4574, 1092, 3066, 3757, 1093, 2953,
	2898, 1092, 2536, 2994, 2562, 3180, 735, 2092, 3749, 187,
	2066, 3701, 4404, 1686, 2983, 3689, 3124, 2850, 2880, 2991,
	2987, 2837, 3087, 2971, 2867, 4824, 2906, 1438, 2911, 3683,
	2304, 2917, 2918, 2140, 2998, 3470, 1293, 5135, 2797, 2888,
	2889, 2904, 2905, 2798, 2900, 2287, 2801, 4093, 2802, 2803,
	3068, 3016, 1436, 3614, 1827, 2079, 5101, 2587, 3480, 2069,
	2034, 937, 3940, 936, 4422, 3181, 2572, 4405, 5110, 2999,
	1146, 2387, 2386, 3681, 2297, 2064, 3331, 5109, 1325, 3381,
	4104, 1484, 4425, 3042, 2263, 1322, 3355, 3356, 2944, 2264,
	2305, 5157, 2309, 2067, 1325, 4400, 2659, 1606, 5018, 2662,
	5076, 1322, 4401, 2968, 3878, 2288, 3824, 1408, 3328, 3179,
	3382, 3176, 1443, 4406, 3387, 3031, 2993, 4289, 2982, 2026,
	2027, 2759, 2985, 4288, 2986, 3823, 3758, 2590, 1205, 1205,
	3325, 1205, 3755, 1665, 2303, 3000, 2065, 2338, 1959, 2961,
	3135, 2298, 2299, 2977, 2181, 3480, 4830, 2992, 2360, 2286,
	2658, 4988, 4920, 4989, 4626, 4403, 875, 3028, 1408, 3100,
	2284, 3103, 3218, 1321, 2134, 846, 3470, 2294, 4908, 2315,
	1662, 2284, 3115, 4407, 1439, 3528, 1845, 3085, 3092, 1321,
	2128, 2128, 3003, 1440, 4852, 1688, 3091, 3627, 1364, 1606,
	3015, 3823, 3072, 3718, 3270, 2564, 3211, 3269, 4703, 3262,
	3655, 3610, 1606, 2588, 1606, 2265, 5016, 1767, 2359, 1074,
	1606, 4701, 3226, 2310, 3057, 2295, 848, 4699, 3330, 3481,
	844, 2496, 1606, 2269, 2088, 1959, 3044, 3047, 3071, 2759,
	2137, 3034, 4423, 3073, 1138, 3094, 3078, 3079, 3081, 3082,
	3083, 3086, 790, 2282, 1089, 1842, 1408, 2675, 1408, 3136,
	1793, 2021, 1617, 1348, 4505, 3142, 3282, 3283, 2321, 3654,
	3177, 3178, 3577, 5075, 2068, 2990, 4698, 3289, 3290, 3291,
	1205, 3661, 3093, 2319, 3742, 3303, 3480, 3304, 2673, 4400,
	3273, 881, 3253, 884, 3098, 3222, 4401, 3105, 3025, 3112,
	2532, 2338, 3377, 3041, 4700, 3267, 5133, 4406, 5099, 2678,
	2266, 2271, 4285, 3045, 3128, 4823, 3481, 3383, 4402, 5054,
	2935, 3305, 3129, 3130, 881, 2341, 884, 3385, 3216, 5055,
	2348, 1765, 977, 1846, 3186, 3017, 3018, 3663, 1075, 3019,
	3020, 3299, 1843, 1849, 2274, 187, 4587, 1205, 3264, 4403,
	4954, 2300, 1623, 1205, 1205, 3191, 3274, 2493, 4457, 978,
	4412, 4413, 3280, 5153, 2660, 4571, 1959, 4407, 3257, 759,
	3205, 1779, 1781, 1154, 4906, 736, 1441, 3215, 2686, 986,
	3756, 3296, 3475, 3473, 3474, 3466, 3467, 3468, 3469, 3471,
	3472, 3527, 2741, 1971, 3427, 2267, 1885, 3307, 4866, 3309,
	2487, 3311, 3248, 3313, 3314, 3662, 3334, 2903, 3336, 1205,
	1205, 3258, 2062, 3628, 5158, 1205, 2916, 1145, 1419, 4907,
	3955, 5142, 5134, 4105, 4517, 4522, 3323, 4190, 1205, 1205,
	1722, 2301, 1847, 2669, 1205, 1205, 3256, 4188, 4279, 4613,
	1205, 3255, 4481, 4055, 3667, 4523, 2342, 3481, 2274, 1323,
	4290, 3237, 2306, 4858, 1354, 1352, 3040, 2670, 3898, 5136,
	737, 3346, 2319, 3186, 2671, 1323, 4859, 2338, 2676, 3306,
	4873, 3474, 3466, 3467, 3468, 3469, 3471, 3472, 4960, 2321,
	4890, 4746, 3099, 889, 5074, 1205, 1205, 1205, 1080, 1079,
	1798, 1205, 4506, 3378, 2066, 4480, 4479, 4236, 2066, 962,
	4860, 1205, 4402, 3811, 3665, 1136, 3591, 1074, 4570, 2272,
	896, 738, 2316, 739, 2943, 2410, 2059, 2318, 1205, 1351,
	3354, 2283, 4192, 2334, 1344, 3343, 967, 727, 4693, 2182,
	4213, 3994, 1138, 1895, 1896, 1076, 3344, 3410, 3345, 1074,
	4286, 2607, 1163, 2069, 4412, 4413, 1890, 2069, 3666, 4334,
	2333, 2604, 3364, 3349, 4191, 2285, 2313, 1335, 2224, 2901,
	4190, 3405, 3406, 2064, 1138, 4661, 3409, 4862, 3188, 3401,
	4188, 5163, 1337, 3190, 1895, 4755, 2128, 2067, 3298, 3565,
	1137, 2067, 3634, 2221, 5053, 2329, 4804, 4237, 979, 980,
	2320, 4861, 4157, 3308, 4140, 3310, 4091, 3312, 4089, 1332,
	3475, 3473, 3474, 3466, 3467, 3468, 3469, 3471, 3472, 4863,
	1205, 1205, 1205, 1205, 3812, 3376, 2281, 3803, 3630, 3046,
	1205, 1205, 1205, 3227, 2065, 1205, 1075, 3221, 3209, 4874,
	2436, 2430, 2424, 2416, 2395, 1205, 1327, 1484, 2268, 2394,
	1894, 1205, 4740, 1205, 3139, 1338, 2330, 3337, 3520, 3521,
	3339, 4186, 1327, 4572, 2857, 4192, 2597, 3938, 1075, 3277,
	2219, 2672, 4075, 4045, 1656, 1077, 3284, 799, 3285, 4520,
	1484, 2674, 1339, 1356, 3074, 2345, 2317, 4009, 4926, 3899,
	3029, 1894, 1327, 1146, 2894, 1484, 4893, 4191, 1895, 2544,
	2217, 4239, 4540, 1078, 3206, 1367, 4719, 1408, 4291, 4717,
	3503, 3416, 4638, 3646, 3642, 3641, 2220, 2140, 3558, 3369,
	3347, 1484, 3545, 1896, 2478, 1336, 3522, 4046, 4022, 3525,
	2897, 1408, 3524, 1821, 1820, 1971, 3572, 2470, 2459, 1408,
	2392, 3995, 1815, 3593, 4189, 2343, 4049, 2942, 2526, 890,
	891, 2941, 3996, 2940, 4047, 2939, 4044, 1081, 2068, 2938,
	3587, 1205, 2068, 1697, 1896, 963, 964, 1711, 1143, 1709,
	4335, 2896, 3536, 1205, 4817, 984, 2895, 1698, 4196, 3559,
	3213, 2247, 4496, 4650, 2273, 3050, 1080, 1079, 4209, 2344,
	4097, 1408, 3532, 2434, 3530, 3629, 4292, 2140, 3765, 4721,
	5162, 2358, 4086, 981, 982, 1894, 5096, 4624, 3554, 2598,
	838, 4622, 3184, 3871, 1205, 3590, 3575, 3606, 1080, 1079,
	2273, 3567, 3568, 3569, 3570, 3278, 3531, 3189, 3187, 3612,
	1408, 3543, 3595, 1076, 3679, 3597, 3598, 3546, 3547, 2463,
	3601, 3599, 3602, 4875, 3603, 3563, 839, 3551, 2134, 1408,
	3514, 1408, 2364, 3693, 1773, 3695, 4739, 3529, 1799, 1436,
	3498, 3499, 3500, 3075, 3076, 1076, 4932, 1205, 1205, 4633,
	3537, 2337, 3706, 3719, 4720, 1484, 4076, 4189, 2337, 4646,
	4645, 4864, 3618, 3619, 4382, 4381, 1408, 4865, 4940, 4818,
	3729, 3645, 4651, 4923, 3650, 4341, 3549, 3652, 3550, 4011,
	893, 892, 1408, 2766, 3644, 3631, 3740, 3648, 4614, 4364,
	1867, 2558, 4962, 5100, 2137, 1869, 1866, 3578, 4634, 1325,
	3676, 3544, 3535, 3542, 5098, 1864, 1322, 5037, 2134, 3658,
	1839, 1837, 1809, 3566, 1606, 1325, 1807, 4848, 1805, 3596,
	3600, 3699, 1322, 1803, 4838, 4620, 4593, 1408, 1606, 4375,
	1606, 4333, 1333, 3680, 1484, 3607, 1801, 4195, 3541, 4933,
	1795, 875, 1606, 1077, 3495, 1325, 4048, 894, 895, 4087,
	965, 966, 1322, 798, 1606, 3914, 3759, 3615, 3721, 3716,
	3723, 3626, 4819, 3727, 3694, 2246, 1408, 3733, 3872, 1135,
	3804, 1078, 1789, 3869, 2137, 1077, 1787, 3637, 3708, 3584,
	3585, 3588, 3586, 1327, 1321, 3458, 2356, 1334, 3817, 3664,
	3388, 3819, 3210, 3672, 3113, 1707, 1710, 3795, 1708, 3107,
	1321, 3064, 3678, 1078, 983, 1606, 3760, 3685, 3763, 3802,
	2970, 2567, 2469, 2454, 3688, 2099, 2095, 1606, 1870, 1606,
	3686, 3692, 1748, 4705, 3687, 1081, 4380, 3496, 3894, 3893,
	1321, 1890, 3321, 3320, 3287, 3711, 2765, 2586, 1826, 2505,
	2415, 3717, 2393, 2535, 2170, 2168, 3839, 3775, 3538, 3539,
	3540, 3730, 2004, 2502, 2263, 3810, 3828, 1081, 3728, 2264,
	1762, 3737, 2373, 3747, 3741, 3094, 1680, 4458, 4462, 1484,
	5009, 3720, 1484, 3876, 3739, 4922, 4144, 2560, 4143, 4442,
	4538, 4467, 4455, 2559, 4393, 3267, 1090, 1868, 1865, 3748,
	4392, 2106, 5072, 4235, 3267, 3813, 4364, 1863, 4226, 881,
	4160, 884, 1838, 1836, 1808, 4141, 1205, 4112, 1806, 3867,
	1804, 3886, 1205, 1205, 4110, 1802, 1205, 1205, 1205, 4088,
	1205, 3752, 3072, 3767, 3806, 3801, 3791, 3240, 1800, 1205,
	2140, 3232, 1794, 3820, 3799, 3225, 3800, 3798, 1205, 3217,
	3202, 3201, 3182, 1205, 2989, 2984, 2391, 187, 187, 1484,
	2389, 2263, 2366, 2339, 2302, 2289, 2264, 2275, 1205, 2203,
	3825, 3868, 2200, 2197, 1788, 3892, 1484, 3702, 1786, 3834,
	3837, 3838, 2194, 3891, 2189, 2265, 2140, 2140, 1205, 1205,
	2187, 1205, 1205, 1205, 3880, 2183, 3881, 1706, 3882, 2174,
	4533, 3935, 3816, 2269, 3367, 3731, 5067, 4993, 2112, 1205,
	2348, 5090, 2225, 1205, 1899, 2140, 2140, 1205, 1205, 1205,
	1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205,
	1205, 1205, 1205, 1205, 1205, 1205, 1205, 3917, 1205, 2534,
	2128, 3927, 3928, 3900, 3827, 1146, 1205, 1205, 2140, 2501,
	4816, 1302, 4522, 1205, 3340, 3967, 3746, 3968, 2372, 4974,
	1095, 1097, 1099, 3338, 1205, 3175, 1325, 2213, 2214, 3897,
	1323, 2134, 4523, 1322, 4884, 1327, 1327, 4554, 1303, 1205,
	2266, 2271, 2265, 4474, 4379, 3268, 1323, 2570, 3613, 2242,
	1661, 4757, 3051, 3025, 4750, 3025, 4247, 2284, 1861, 1862,
	2269, 2492, 3368, 1388, 3194, 2529, 275, 3197, 3023, 3199,
	3048, 1484, 2433, 1387, 2524, 4973, 1323, 2134, 2134, 3922,
	2128, 3818, 4041, 3924, 1408, 1408, 3732, 1900, 4006, 2499,
	4433, 4469, 3934, 1785, 4776, 2568, 3055, 2137, 4648, 1408,
	1408, 4028, 875, 1408, 4342, 3950, 2134, 2134, 3941, 3943,
	3944, 1321, 4320, 4052, 4053, 1458, 3244, 1906, 1907, 3244,
	3659, 3957, 1205, 3965, 3056, 2267, 3077, 3966, 4065, 4066,
	3056, 1903, 4072, 1906, 1907, 1415, 3970, 2266, 2271, 2134,
	3998, 2569, 1355, 2137, 2137, 5084, 2617, 3958, 1455, 1205,
	3972, 1304, 2910, 2212, 4007, 5045, 4156, 3200, 4223, 272,
	1388, 1388, 2417, 1426, 187, 1909, 3109, 4018, 4019, 3999,
	3889, 3120, 2137, 2137, 2261, 2617, 3973, 3118, 2274, 3895,
	4155, 3127, 1205, 1205, 3058, 1908, 830, 4931, 4913, 3111,
	3060, 4883, 4877, 4815, 4741, 4712, 4073, 4015, 4016, 5130,
	4074, 1908, 3315, 3110, 3059, 2137, 3945, 724, 4002, 4625,
	4233, 4225, 4212, 4038, 3805, 3247, 2881, 2209, 1205, 1205,
	4031, 2121, 2267, 4030, 4647, 4964, 1205, 3865, 4092, 3964,
	4965, 3097, 1615, 3870, 2259, 1614, 1139, 3576, 2358, 2272,
	5161, 1625, 1213, 3464, 3465, 4879, 1606, 1606, 4111, 1606,
	4113, 5103, 4312, 1606, 1906, 1907, 1606, 4125, 4964, 2761,
	881, 1408, 884, 4965, 4068, 4174, 2253, 3011, 2252, 3010,
	1772, 4057, 2796, 2253, 2252, 2274, 1771, 1841, 2260, 4232,
	1840, 4742, 4686, 4471, 4130, 4132, 2140, 4129, 4466, 279,
	279, 279, 4465, 730, 731, 4308, 746, 730, 746, 757,
	4056, 4152, 797, 3946, 3725, 4146, 817, 3722, 1325, 1325,
	3326, 824, 824, 824, 4158, 1322, 1322, 1998, 1997, 279,
	3342, 2574, 5146, 4159, 5111, 4117, 4979, 4168, 1606, 4917,
	4182, 3616, 4916, 4122, 1205, 4240, 2272, 4915, 4847, 4846,
	958, 4793, 1327, 1205, 4715, 4678, 4205, 279, 4617, 4249,
	4179, 4180, 1606, 4611, 4513, 4493, 4255, 1606, 1606, 1606,
	3072, 4431, 4370, 4260, 4253, 4199, 4061, 4108, 2268, 4100,
	3809, 3808, 3651, 3594, 3327, 3617, 3318, 3295, 3294, 3293,
	1606, 3292, 1606, 3231, 4175, 3204, 3203, 1323, 1484, 3049,
	2980, 2974, 4241, 1321, 1321, 2963, 2962, 4257, 2951, 4219,
	4244, 3136, 4165, 4198, 2690, 2561, 2530, 2523, 4194, 2522,
	4207, 4172, 2521, 2520, 2519, 1484, 4243, 2134, 1205, 1205,
	4183, 4211, 4261, 2431, 1205, 1205, 2140, 2405, 4220, 1205,
	1205, 2401, 1205, 2128, 2400, 2399, 2398, 1205, 2397, 4229,
	3253, 2177, 2176, 2175, 1285, 2173, 4224, 2111, 1205, 2110,
	1860, 1859, 1796, 4173, 3267, 1675, 1674, 1673, 4275, 1672,
	1671, 4227, 1670, 1669, 1205, 2268, 1664, 4273, 4013, 1660,
	1658, 1657, 4276, 1596, 1595, 1594, 1475, 1474, 4242, 2128,
	2128, 730, 730, 2137, 1473, 4250, 3637, 4293, 4245, 279,
	1472, 1984, 4251, 1471, 1418, 1989, 4259, 4258, 1374, 1373,
	1372, 1371, 1370, 1369, 1368, 1366, 1361, 4306, 2128, 2128,
	1360, 1359, 1358, 1357, 951, 8, 2215, 1101, 1087, 4294,
	4821, 4410, 4409, 4302, 4277, 1327, 4408, 2557, 95, 1666,
	913, 4282, 89, 1327, 2346, 4107, 1052, 1484, 1484, 4961,
	1484, 2128, 4287, 4851, 1649, 921, 4942, 1327, 4221, 3653,
	3144, 2504, 1797, 2506, 3553, 2923, 4905, 2134, 1606, 1606,
	4316, 3426, 4783, 4586, 2764, 2002, 3507, 91, 1189, 3861,
	1235, 1484, 4504, 3558, 4503, 4394, 4347, 4094, 3778, 4500,
	4499, 2125, 3859, 2127, 1153, 1487, 4987, 2226, 5152, 1195,
	2240, 2235, 3852, 2964, 2840, 1212, 1205, 1209, 2129, 2131,
	1211, 1210, 2130, 2022, 4365, 4366, 1208, 1327, 2124, 1327,
	4231, 3251, 3835, 1716, 1714, 1325, 1054, 4332, 2230, 2684,
	2748, 3415, 1322, 2137, 1995, 1169, 1191, 4368, 2745, 1349,
	1180, 1168, 3533, 4417, 1408, 4417, 3512, 3822, 4441, 4037,
	4374, 4350, 4352, 4377, 1484, 2596, 1408, 931, 3461, 1408,
	4450, 2751, 4386, 4453, 1340, 4421, 4339, 4343, 2864, 2856,
	4346, 1205, 2852, 4349, 1484, 4348, 187, 3604, 4355, 1323,
	1323, 4344, 4345, 3241, 4437, 4438, 4356, 3863, 1876, 4359,
	4600, 4363, 1973, 4420, 3252, 1872, 4389, 1452, 1173, 2682,
	1986, 4383, 4384, 3393, 3854, 2606, 3829, 3556, 4376, 2957,
	1321, 4967, 3954, 3324, 2409, 1301, 1606, 1606, 4435, 3853,
	4391, 4385, 1300, 4184, 1347, 1299, 4193, 4948, 4945, 2336,
	4434, 4507, 3773, 3774, 2218, 3004, 2694, 3792, 1185, 1590,
	2549, 3887, 3518, 4210, 1408, 1677, 3668, 3669, 4524, 3670,
	4456, 4436, 4655, 1197, 1958, 3171, 1484, 3170, 4810, 1437,
	1435, 1606, 1434, 1433, 5120, 4494, 4473, 3138, 4541, 2349,
	4103, 4102, 4101, 243, 3361, 3862, 1897, 1889, 4464, 4451,
	4470, 4491, 4472, 240, 242, 241, 3657, 1606, 1606, 1606,
	1606, 1606, 1606, 1606, 4454, 4492, 4530, 3712, 3713, 4042,
	3714, 3562, 5043, 4525, 4127, 3764, 1484, 24, 1325, 831,
	832, 833, 3014, 2245, 1454, 1322, 1325, 4078, 1205, 1205,
	1205, 827, 4497, 1322, 4483, 4542, 23, 22, 4482, 2128,
	1325, 4274, 21, 118, 43, 4440, 1484, 1322, 4484, 4502,
	20, 1205, 4498, 4514, 1205, 1205, 4509, 4490, 4449, 4516,
	158, 4452, 135, 155, 1205, 4510, 4550, 2140, 154, 127,
	4536, 1397, 1205, 1205, 153, 152, 4559, 151, 150, 4527,
	4563, 149, 4543, 157, 148, 147, 142, 4545, 146, 1484,
	145, 1606, 144, 143, 141, 139, 4565, 140, 4578, 134,
	1325, 138, 1325, 1321, 4557, 4556, 1408, 1322, 137, 1322,
	136, 1321, 133, 132, 131, 130, 129, 4573, 128, 126,
	159, 125, 124, 123, 122, 1321, 4583, 121, 1484, 120,
	119, 810, 811, 62, 61, 4619, 1205, 117, 115, 116,
	19, 1577, 41, 14, 1591, 1397, 66, 67, 18, 1205,
	3860, 3855, 3856, 3857, 3858, 13, 36, 94, 1205, 107,
	106, 105, 37, 2140, 4595, 103, 102, 35, 17, 16,
	15, 100, 99, 1205, 98, 34, 1205, 32, 4589, 2128,
	11, 4606, 4607, 9, 38, 1321, 2083, 1321, 12, 3864,
	1205, 5, 192, 1205, 191, 1342, 1323, 194, 2134, 190,
	1484, 193, 93, 189, 4658, 4609, 188, 4610, 1408, 4628,
	92, 4629, 4695, 30, 10, 184, 1397, 1397, 1606, 1606,
	1606, 4731, 4217, 84, 186, 1482, 185, 183, 2273, 1363,
	4630, 182, 4677, 4637, 4627, 181, 85, 281, 82, 1327,
	180, 279, 88, 279, 279, 179, 1392, 279, 1402, 4704,
	2601, 83, 87, 86, 4669, 4670, 28, 4691, 6, 1416,
	65, 7, 4568, 4714, 2137, 4417, 3873, 817, 110, 1484,
	817, 111, 1606, 39, 4680, 80, 79, 4679, 4675, 4751,
	4730, 78, 77, 27, 64, 4718, 26, 4725, 4687, 176,
	4689, 224, 4690, 824, 2134, 223, 222, 4709, 4710, 221,
	220, 219, 4688, 218, 4738, 217, 4706, 1205, 1205, 212,
	216, 214, 4707, 4722, 279, 213, 279, 279, 1392, 215,
	279, 279, 4716, 4756, 1205, 2140, 211, 1402, 4760, 234,
	4762, 4696, 233, 227, 226, 232, 4752, 231, 230, 4729,
	229, 279, 4754, 1627, 4734, 3775, 1408, 228, 225, 1408,
	237, 1408, 1408, 210, 209, 208, 4711, 206, 202, 1647,
	2137, 4753, 4759, 4667, 4758, 205, 1654, 207, 204, 203,
	1205, 201, 1205, 4748, 1205, 4792, 236, 235, 4794, 1323,
	4795, 4796, 4772, 4773, 1327, 1679, 74, 1323, 1402, 4764,
	174, 4805, 279, 279, 4545, 1392, 2858, 1205, 4771, 1327,
	4694, 1323, 175, 4775, 2379, 73, 173, 172, 171, 170,
	4417, 169, 168, 4803, 167, 72, 817, 178, 279, 279,
	177, 25, 4781, 2, 1, 4417, 0, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 1167, 4802,
	4801, 1750, 0, 4798, 0, 0, 958, 0, 4566, 0,
	4567, 4832, 0, 0, 1327, 1327, 2134, 0, 0, 4826,
	4825, 1323, 0, 1323, 0, 0, 0, 0, 1205, 0,
	0, 0, 4856, 4833, 0, 1327, 0, 4854, 1327, 0,
	4417, 4417, 1606, 0, 0, 0, 0, 0, 0, 4841,
	0, 0, 1606, 0, 2688, 0, 0, 0, 0, 0,
	0, 4417, 0, 0, 4417, 4843, 0, 1205, 1205, 0,
	1984, 4842, 1325, 0, 0, 0, 0, 1205, 4681, 1322,
	4849, 0, 2137, 4867, 0, 0, 279, 0, 4869, 4870,
	0, 4878, 0, 0, 0, 4881, 4880, 0, 0, 0,
	4886, 0, 0, 4901, 0, 4902, 4894, 4895, 0, 4887,
	279, 0, 4889, 0, 0, 4900, 4898, 4899, 4734, 0,
	0, 0, 0, 0, 4918, 2863, 0, 1205, 1205, 4910,
	0, 1205, 0, 4897, 0, 1606, 1408, 4914, 0, 1408,
	0, 4939, 4909, 0, 0, 0, 0, 4921, 4947, 4950,
	4919, 0, 0, 0, 0, 4966, 0, 1321, 0, 0,
	2128, 0, 4929, 4930, 0, 4958, 0, 0, 4959, 0,
	4970, 0, 4938, 0, 4937, 4963, 0, 0, 0, 0,
	0, 0, 0, 1591, 4952, 0, 0, 4956, 0, 0,
	0, 0, 4990, 0, 0, 0, 4992, 1205, 1205, 1205,
	0, 0, 4951, 0, 0, 0, 4955, 0, 0, 0,
	0, 0, 0, 4957, 0, 0, 0, 1325, 4975, 0,
	0, 0, 0, 0, 1322, 0, 0, 4983, 4980, 4991,
	0, 0, 1325, 1591, 1205, 0, 0, 5024, 0, 1322,
	5004, 5005, 0, 0, 5007, 4969, 5029, 0, 0, 0,
	5006, 0, 0, 0, 0, 0, 2128, 0, 0, 0,
	0, 0, 2098, 4228, 0, 0, 5026, 0, 2273, 0,
	0, 0, 5025, 5051, 0, 0, 0, 0, 5027, 0,
	0, 0, 5050, 0, 5058, 0, 5064, 1325, 1325, 5042,
	5040, 1205, 0, 5052, 1322, 1322, 5060, 0, 0, 1408,
	0, 5057, 1321, 4714, 5073, 5056, 0, 0, 1325, 0,
	5066, 1325, 0, 0, 730, 1322, 0, 1321, 1322, 0,
	0, 0, 0, 5083, 5091, 0, 5079, 5080, 5081, 5070,
	4278, 5065, 5087, 0, 0, 279, 5039, 279, 5093, 5041,
	5085, 279, 5094, 0, 5097, 4947, 0, 5095, 4950, 5082,
	1327, 0, 1327, 0, 1627, 1392, 2103, 279, 5113, 279,
	2109, 5104, 0, 5107, 5105, 5108, 0, 279, 5102, 746,
	5114, 5106, 1321, 1321, 279, 5122, 4417, 0, 4417, 0,
	5112, 5116, 0, 0, 0, 0, 2244, 0, 0, 0,
	2178, 1408, 0, 1321, 0, 0, 1321, 0, 5137, 5138,
	5121, 0, 279, 0, 0, 0, 0, 0, 5145, 279,
	0, 0, 0, 5147, 0, 0, 0, 0, 2128, 5143,
	5141, 1205, 1205, 5156, 5115, 0, 5117, 5154, 5144, 5150,
	1205, 1205, 0, 1323, 5159, 5148, 0, 0, 5168, 4969,
	0, 5164, 817, 5170, 0, 0, 0, 0, 5178, 0,
	5175, 5174, 5177, 5179, 5172, 0, 5180, 5171, 0, 0,
	0, 5173, 0, 5176, 0, 5183, 0, 0, 1408, 0,
	0, 5184, 5188, 5185, 5192, 5189, 0, 0, 0, 5190,
	824, 0, 824, 0, 0, 0, 5186, 0, 1205, 0,
	0, 0, 824, 824, 5203, 5192, 5199, 5187, 5201, 0,
	5196, 0, 0, 0, 0, 5165, 5166, 5195, 5198, 0,
	3351, 0, 0, 0, 0, 3253, 0, 0, 0, 0,
	0, 5167, 0, 0, 0, 0, 0, 0, 0, 0,
	1906, 1907, 0, 2421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3253, 0, 0, 0, 0,
	0, 1906, 1907, 0, 1937, 0, 0, 0, 0, 0,
	0, 2384, 1909, 5200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 1323, 0,
	0, 0, 0, 1909, 0, 0, 0, 0, 0, 1962,
	0, 2858, 2858, 1323, 0, 0, 0, 0, 1908, 0,
	0, 0, 0, 3861, 0, 0, 0, 4460, 1928, 0,
	1962, 0, 1167, 1167, 1167, 0, 3859, 0, 0, 1908,
	0, 0, 0, 1325, 0, 1325, 3852, 0, 0, 1928,
	1322, 0, 1322, 0, 0, 0, 0, 0, 1925, 279,
	0, 0, 0, 279, 0, 0, 0, 0, 1323, 1323,
	1568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3464, 3465, 0, 3482, 3483, 3484, 0, 1323,
	4512, 0, 1323, 0, 0, 0, 0, 0, 0, 2863,
	0, 0, 0, 4526, 0, 4298, 0, 0, 0, 0,
	0, 0, 0, 0, 3913, 1931, 1932, 1933, 1934, 279,
	0, 0, 2550, 279, 0, 1914, 4549, 0, 1321, 279,
	1321, 3863, 0, 0, 0, 279, 1931, 1932, 1933, 1934,
	0, 0, 0, 0, 0, 0, 1914, 0, 3854, 0,
	0, 279, 0, 279, 0, 0, 0, 730, 0, 279,
	3479, 0, 0, 3853, 0, 0, 0, 0, 0, 0,
	0, 817, 0, 0, 0, 958, 1936, 1938, 0, 0,
	2863, 2863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2858, 2858, 2858, 2858, 1936, 1938, 0,
	0, 0, 0, 0, 0, 279, 0, 1392, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3862,
	0, 0, 817, 1923, 1924, 0, 0, 0, 0, 279,
	0, 0, 0, 0, 0, 1929, 0, 2503, 0, 0,
	0, 0, 279, 279, 0, 279, 0, 279, 1599, 279,
	0, 279, 0, 0, 0, 0, 1929, 3470, 4623, 0,
	3850, 2620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2540, 0, 0, 2541,
	0, 2542, 0, 0, 0, 0, 1651, 0, 0, 0,
	0, 0, 3390, 3391, 0, 279, 279, 279, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 797, 3486, 0, 0, 817, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2762, 1745, 0, 0, 0, 0,
	0, 0, 2863, 2863, 2863, 2863, 0, 3480, 0, 0,
	0, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 1397, 0, 3860, 3855, 3856, 3857, 3858, 0,
	0, 0, 0, 0, 1935, 0, 1930, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 1323, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 1930, 0, 0,
	0, 2696, 0, 3864, 0, 0, 0, 1906, 1907, 0,
	0, 1397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	2933, 1937, 0, 0, 0, 0, 0, 1961, 0, 1909,
	0, 0, 0, 1397, 1397, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3488, 3489, 3490, 3491, 1961, 0,
	0, 0, 0, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 730, 0, 0, 1908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1928, 0, 279, 0, 0,
	0, 0, 0, 0, 1925, 0, 730, 0, 0, 0,
	0, 0, 0, 279, 0, 730, 0, 0, 3481, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1568, 0, 1919,
	1917, 1918, 1910, 1911, 1912, 1913, 1915, 1916, 279, 1402,
	0, 4839, 0, 0, 0, 0, 0, 1926, 1922, 1577,
	1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915, 1916, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4853, 0, 1931, 1932, 1933, 1934, 3013, 0, 0, 0,
	0, 0, 1914, 0, 0, 0, 1591, 279, 1402, 0,
	0, 746, 0, 746, 0, 0, 0, 2979, 0, 4885,
	0, 0, 0, 279, 3464, 3465, 279, 3482, 3483, 3484,
	279, 0, 279, 0, 0, 0, 0, 1392, 0, 279,
	279, 0, 1402, 1402, 2995, 0, 0, 3919, 0, 279,
	0, 0, 0, 1936, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 1167, 0, 0, 0, 0, 0, 0,
	0, 1568, 0, 0, 3476, 3477, 3478, 0, 0, 1923,
	1924, 3475, 3473, 3474, 3466, 3467, 3468, 3469, 3471, 3472,
	0, 0, 0, 824, 824, 0, 0, 824, 824, 0,
	0, 0, 3479, 0, 0, 0, 3038, 0, 0, 0,
	2858, 2858, 1929, 0, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4976, 817, 0, 0, 0,
	0, 4978, 1160, 0, 0, 1591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1397, 0, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 279, 279, 3133, 1627, 0, 3470,
	2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858,
	2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858,
	0, 2858, 0, 0, 0, 279, 3192, 0, 0, 0,
	1591, 0, 1591, 0, 0, 0, 3464, 3465, 0, 3482,
	3483, 3484, 0, 0, 0, 0, 1568, 0, 0, 0,
	1935, 0, 0, 1627, 0, 0, 279, 0, 279, 3918,
	0, 0, 0, 0, 0, 279, 0, 3486, 0, 0,
	0, 0, 0, 1930, 0, 3236, 0, 0, 0, 2863,
	2863, 0, 0, 0, 0, 3038, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 3133, 958, 3038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3480,
	0, 0, 0, 0, 3479, 0, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 279,
	1392, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1402, 279, 0, 0, 1392, 0, 1392, 0, 1392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2863,
	2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863,
	2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 1959,
	2863, 3910, 3911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 279, 279, 279, 1392,
	0, 3470, 1392, 0, 279, 0, 0, 0, 0, 279,
	0, 0, 0, 1926, 1922, 0, 1919, 1917, 1918, 1910,
	1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3481, 0, 0, 0, 0, 0, 0, 0, 0, 3486,
	0, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982,
	3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992,
	3993, 0, 3997, 0, 0, 0, 0, 0, 0, 0,
	1906, 1907, 0, 0, 2451, 0, 1950, 1951, 1952, 0,
	0, 3480, 0, 0, 0, 0, 1568, 0, 0, 0,
	0, 0, 2465, 2467, 1937, 0, 0, 0, 0, 0,
	0, 0, 1909, 0, 0, 0, 2471, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 2479, 0,
	2482, 2483, 2484, 0, 0, 0, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 1908, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 1928, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3476, 3477, 3478, 1568,
	0, 0, 0, 3475, 3473, 3474, 3466, 3467, 3468, 3469,
	3471, 3472, 0, 0, 0, 0, 0, 0, 0, 3519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1591, 1591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3548, 0, 0, 1931, 1932, 1933, 1934, 0,
	0, 0, 3481, 0, 0, 1914, 0, 3561, 0, 1568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3582, 0, 1568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 0, 279, 1957,
	0, 0, 0, 0, 1591, 0, 1936, 1938, 0, 0,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 730, 0, 2421, 730, 0, 0,
	730, 730, 1923, 1924, 0, 0, 730, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	1945, 0, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 1929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 3476, 3477,
	3478, 279, 279, 0, 0, 3475, 3473, 3474, 3466, 3467,
	3468, 3469, 3471, 3472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1568, 0, 0, 0, 3038, 3038, 279, 0, 3624,
	2103, 0, 0, 0, 0, 1959, 3038, 0, 2109, 0,
	0, 0, 0, 0, 0, 0, 0, 3038, 2109, 0,
	3038, 2109, 0, 0, 2109, 0, 0, 3624, 0, 1397,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	279, 2103, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 0, 279, 1935, 3698, 3698, 0, 0, 0, 1392,
	0, 0, 0, 0, 0, 0, 3561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 0, 1568, 0,
	0, 3038, 0, 3038, 0, 3726, 3038, 2103, 0, 0,
	3038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1906, 1907, 0, 2103, 1948, 0, 817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1591,
	0, 0, 0, 0, 1937, 0, 0, 0, 0, 0,
	0, 0, 1909, 0, 0, 0, 0, 1961, 1392, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	0, 0, 0, 279, 0, 3769, 0, 0, 1908, 3771,
	3038, 0, 0, 279, 0, 0, 0, 279, 0, 0,
	1402, 0, 0, 0, 0, 0, 0, 2858, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	3236, 3888, 0, 1392, 1482, 279, 0, 0, 3038, 0,
	730, 946, 1946, 0, 0, 0, 0, 3038, 0, 3464,
	3465, 0, 3482, 3483, 3484, 1949, 1926, 1922, 0, 1919,
	1917, 1918, 1910, 1911, 1912, 1913, 1915, 1916, 0, 75,
	0, 949, 948, 0, 1906, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 76, 0, 2858,
	0, 3137, 0, 0, 0, 3879, 0, 0, 1937, 0,
	0, 0, 0, 0, 81, 1914, 1909, 0, 0, 0,
	0, 3931, 0, 1906, 1907, 3885, 0, 0, 1627, 0,
	0, 0, 1392, 279, 0, 279, 0, 3479, 3947, 0,
	0, 1392, 0, 1962, 0, 0, 0, 1937, 0, 0,
	0, 0, 1908, 0, 90, 1909, 0, 0, 0, 0,
	0, 0, 1928, 0, 0, 0, 1936, 1938, 0, 0,
	0, 1925, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 1908, 0, 0, 0, 952, 2863, 0, 0, 1906,
	1907, 0, 1939, 1940, 1941, 1950, 1951, 1952, 50, 0,
	112, 0, 0, 0, 3281, 0, 96, 109, 0, 0,
	0, 0, 1943, 1937, 0, 1929, 3288, 3908, 0, 0,
	3952, 1909, 0, 0, 3470, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 1931,
	1932, 1933, 1934, 0, 0, 0, 0, 0, 1962, 1914,
	0, 0, 0, 0, 0, 0, 0, 1908, 2863, 0,
	0, 0, 0, 4040, 0, 1942, 0, 1928, 97, 0,
	0, 0, 0, 0, 0, 0, 1925, 2858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1914, 0,
	0, 0, 3486, 0, 0, 1959, 0, 0, 4592, 0,
	1936, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 279, 0,
	0, 0, 0, 0, 0, 2858, 1923, 1924, 0, 1190,
	114, 0, 0, 0, 3480, 0, 0, 0, 1397, 1936,
	1938, 0, 730, 730, 0, 0, 0, 0, 0, 0,
	2858, 0, 0, 0, 1931, 1932, 1933, 1934, 0, 1929,
	0, 0, 0, 0, 1914, 0, 0, 0, 0, 0,
	4640, 0, 0, 0, 0, 0, 1930, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1929, 0,
	0, 0, 0, 0, 0, 1947, 0, 0, 1957, 0,
	0, 0, 0, 0, 1959, 1936, 1938, 0, 2421, 0,
	0, 101, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 0, 1953, 0, 1954, 0, 0, 1961, 0, 1959,
	0, 1923, 1924, 0, 0, 0, 2863, 0, 0, 0,
	0, 0, 0, 0, 1568, 0, 0, 0, 0, 1945,
	0, 0, 0, 0, 0, 0, 817, 0, 0, 0,
	0, 0, 0, 0, 1929, 0, 0, 0, 1959, 195,
	104, 0, 0, 108, 0, 0, 0, 1568, 0, 0,
	0, 0, 0, 0, 2863, 3481, 0, 1935, 0, 3698,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 279, 0, 0, 1126, 953, 2863,
	1930, 0, 1955, 156, 1942, 0, 0, 3133, 1568, 1147,
	0, 1918, 1910, 1911, 1912, 1913, 1915, 1916, 0, 0,
	0, 0, 2103, 1944, 279, 0, 0, 0, 746, 746,
	1402, 0, 0, 0, 1959, 0, 0, 0, 4780, 1930,
	246, 0, 0, 279, 0, 0, 0, 0, 1167, 0,
	0, 0, 0, 0, 279, 3236, 1311, 0, 3236, 2109,
	1167, 1961, 0, 0, 279, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 279,
	0, 0, 200, 0, 279, 0, 4809, 0, 0, 0,
	245, 0, 1935, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 3038, 279, 238, 0, 0, 0, 0,
	0, 4831, 0, 3133, 239, 1930, 958, 3038, 196, 0,
	0, 3476, 3477, 3478, 0, 0, 0, 0, 3475, 3473,
	3474, 3466, 3467, 3468, 3469, 3471, 3472, 0, 0, 0,
	0, 0, 947, 1948, 0, 0, 0, 0, 279, 0,
	1926, 1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913,
	1915, 1916, 1568, 0, 0, 0, 1397, 0, 0, 0,
	0, 0, 0, 0, 1942, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1942, 0, 0, 0, 0, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1942, 0, 4317, 0, 0, 0, 1942, 0,
	0, 0, 0, 0, 1942, 0, 2421, 0, 0, 0,
	0, 1568, 0, 4372, 0, 0, 0, 0, 0, 0,
	0, 1946, 0, 0, 0, 0, 0, 0, 0, 0,
	1397, 1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917,
	1918, 1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0,
	0, 0, 4325, 0, 0, 0, 4324, 279, 0, 0,
	0, 0, 0, 1627, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1942, 1402, 0, 76,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	1402, 0, 279, 1402, 0, 1942, 81, 0, 0, 0,
	1942, 0, 0, 0, 3038, 3038, 0, 3624, 0, 0,
	3698, 3038, 0, 0, 0, 0, 0, 0, 0, 4419,
	0, 4419, 1627, 0, 0, 0, 1568, 0, 0, 1568,
	0, 0, 0, 3038, 0, 2109, 90, 0, 3743, 3624,
	0, 1627, 1627, 279, 2103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 850, 279,
	2103, 0, 279, 0, 3698, 1942, 3768, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 0, 952, 3796, 0,
	0, 0, 0, 3038, 861, 3038, 279, 0, 0, 0,
	50, 0, 112, 0, 0, 0, 0, 0, 96, 109,
	0, 0, 0, 0, 863, 0, 1568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1482, 0,
	0, 0, 0, 1568, 0, 3038, 3038, 862, 0, 3842,
	0, 3236, 3236, 0, 0, 0, 0, 0, 3624, 0,
	0, 3866, 0, 0, 0, 0, 0, 0, 4584, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 855,
	0, 0, 0, 0, 0, 0, 869, 0, 0, 0,
	0, 4584, 0, 0, 0, 0, 0, 0, 0, 0,
	860, 0, 0, 0, 0, 0, 1942, 1942, 1942, 1942,
	1942, 1942, 1942, 1942, 0, 0, 0, 0, 0, 1906,
	1907, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	2620, 0, 0, 0, 0, 0, 0, 0, 0, 1942,
	0, 0, 0, 1937, 0, 0, 0, 0, 114, 0,
	0, 1909, 859, 0, 0, 0, 0, 0, 1568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 0, 0, 0, 0, 2862, 0, 1908, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 1928, 1942, 0,
	0, 0, 2620, 0, 1942, 0, 1925, 0, 0, 0,
	0, 0, 0, 101, 0, 3038, 2109, 0, 2109, 0,
	0, 4632, 1591, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4656, 0, 4656, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 114, 868, 114, 2061, 0, 0, 0,
	0, 0, 3907, 0, 0, 0, 0, 817, 0, 0,
	0, 195, 104, 0, 0, 108, 0, 0, 3698, 0,
	1392, 0, 0, 0, 1931, 1932, 1933, 1934, 0, 0,
	0, 0, 0, 0, 1914, 0, 0, 0, 0, 2103,
	0, 279, 244, 0, 0, 0, 0, 1147, 114, 114,
	953, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 114, 0, 4632, 0,
	0, 4419, 0, 0, 1627, 852, 0, 0, 3038, 1397,
	114, 0, 114, 0, 0, 1936, 1938, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 4745, 0,
	0, 0, 0, 0, 0, 0, 0, 856, 0, 0,
	1627, 1923, 1924, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 279, 279, 0,
	0, 0, 245, 0, 1929, 0, 791, 0, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 3952, 864, 0, 0, 0, 239, 0, 854, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3698, 4800, 0,
	0, 0, 0, 0, 199, 0, 4632, 1152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1568, 4419, 851, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 4419, 0, 0, 0, 0, 0, 0, 0, 0,
	4166, 4167, 1568, 0, 0, 858, 0, 4169, 0, 1126,
	4170, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	793, 0, 0, 0, 0, 0, 0, 0, 746, 0,
	1976, 853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 0, 4419, 4419, 1982, 0,
	0, 0, 1988, 0, 0, 0, 866, 867, 0, 0,
	0, 0, 0, 0, 0, 1930, 0, 4419, 0, 279,
	4419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4256, 0, 0, 0,
	0, 2465, 4262, 4263, 0, 0, 0, 0, 0, 0,
	1402, 0, 0, 0, 1568, 1568, 1961, 1568, 0, 0,
	0, 0, 0, 0, 4927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4656, 0, 0, 279, 0, 0, 0, 0, 1568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1942, 0, 2075, 0, 2078, 0, 114, 0, 3038, 0,
	0, 0, 0, 1167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 1926, 1922, 0, 1919, 1917,
	1918, 1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0,
	0, 1568, 0, 0, 0, 3952, 0, 0, 1942, 0,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	0, 1568, 0, 0, 0, 0, 1942, 0, 0, 1627,
	0, 0, 0, 0, 0, 1942, 1942, 1942, 1942, 1942,
	1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
	1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
	1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
	1942, 0, 0, 0, 0, 0, 1942, 0, 1942, 1942,
	1942, 1942, 4361, 4362, 0, 0, 0, 0, 0, 0,
	2862, 2862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4632, 1568, 0, 1942, 0, 0, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 76, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3038, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 4419, 1568, 4419, 0, 1942, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1568, 90, 0, 1942, 0, 0, 1942,
	0, 0, 1942, 0, 0, 1942, 0, 0, 0, 0,
	0, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3038, 0,
	0, 0, 0, 0, 0, 952, 1568, 0, 0, 0,
	2465, 0, 0, 0, 0, 3133, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 96, 109, 3038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3133, 0, 0, 1568, 0, 1942, 0, 0,
	3485, 0, 2862, 2862, 2862, 2862, 0, 0, 0, 1942,
	0, 1942, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4558, 0, 4560, 4561, 4562, 0, 4564, 97, 0,
	0, 0, 0, 1167, 1411, 0, 1906, 1907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1568, 0, 0,
	1937, 1152, 1152, 1152, 0, 0, 1906, 1907, 1909, 1939,
	1940, 1941, 1950, 1951, 1952, 1147, 0, 1147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	1937, 0, 0, 0, 0, 1962, 0, 0, 1909, 0,
	0, 0, 0, 1581, 1908, 0, 0, 0, 1956, 1597,
	0, 0, 0, 0, 1928, 4612, 0, 0, 0, 0,
	0, 0, 0, 1925, 0, 1962, 1568, 0, 0, 0,
	0, 0, 0, 0, 1908, 0, 0, 1629, 0, 1635,
	0, 1641, 0, 0, 1928, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 0, 0, 0, 0, 0, 0,
	0, 2954, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 3379,
	0, 101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1931, 1932, 1933, 1934, 0, 0, 0, 0, 0,
	1733, 1914, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 1757, 0,
	0, 1931, 1932, 1933, 1934, 0, 0, 0, 0, 195,
	104, 1914, 4708, 108, 0, 0, 0, 0, 1126, 0,
	0, 1126, 1126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1936, 1938, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 1947, 156, 0, 1957, 0, 0, 1923, 1924,
	0, 0, 1936, 1938, 0, 0, 0, 1822, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 2681, 0, 1953,
	0, 1954, 0, 0, 3162, 0, 0, 0, 1923, 1924,
	246, 1929, 0, 0, 0, 0, 0, 1147, 1942, 1942,
	0, 1942, 0, 0, 0, 0, 1945, 1982, 0, 0,
	0, 1982, 0, 0, 0, 0, 160, 3152, 3150, 0,
	0, 1929, 0, 0, 3154, 3156, 3146, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 3172, 196, 1955,
	0, 1959, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 0,
	1944, 0, 199, 0, 0, 1167, 0, 0, 0, 0,
	2078, 1959, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 1201, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 0, 0, 0, 0, 0, 0, 1935,
	0, 0, 0, 0, 0, 278, 278, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 1942, 1942, 0, 2862,
	2862, 0, 1930, 1942, 0, 0, 2465, 0, 0, 0,
	0, 0, 0, 3485, 3485, 882, 0, 1942, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 1942, 0, 0,
	1948, 3148, 0, 1961, 0, 0, 2055, 2055, 2055, 0,
	0, 1942, 3164, 882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1961, 0, 3163, 3153, 3151, 3155, 3157,
	3147, 3149, 3165, 3167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3159, 3161, 3169, 0, 0, 0, 2862,
	2862, 2862, 2862, 2862, 2862, 2862, 2862, 2862, 2862, 2862,
	2862, 2862, 2862, 2862, 2862, 2862, 2862, 2862, 2862, 0,
	2862, 3485, 3485, 3485, 3485, 0, 0, 0, 0, 3173,
	0, 0, 1926, 1922, 0, 1919, 1917, 1918, 1910, 1911,
	1912, 1913, 1915, 1916, 0, 0, 0, 0, 1946, 0,
	0, 0, 0, 0, 0, 0, 1942, 0, 1920, 1921,
	1927, 1949, 1926, 1922, 0, 1919, 1917, 1918, 1910, 1911,
	1912, 1913, 1915, 1916, 0, 0, 0, 0, 0, 3439,
	0, 0, 0, 3440, 0, 0, 0, 0, 0, 0,
	0, 0, 1152, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 114,
	0, 114, 0, 0, 0, 0, 0, 3166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1906, 1907, 0, 1939, 1940, 1941, 1950, 1951, 1952, 2833,
	2834, 2835, 2836, 2829, 2830, 2831, 2832, 0, 114, 1942,
	0, 114, 0, 1943, 1937, 0, 0, 114, 0, 0,
	0, 0, 1909, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 3174, 0, 0, 0,
	0, 0, 0, 0, 0, 3158, 3160, 3168, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 1908, 0,
	0, 0, 1942, 1942, 0, 0, 0, 0, 1928, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 0,
	0, 0, 2809, 2810, 2811, 2812, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2821, 2822, 2823, 2824, 2817,
	2818, 2819, 2820, 2825, 2826, 2827, 2828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1931, 1932, 1933, 1934, 0,
	0, 0, 0, 0, 0, 1914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2805, 2806,
	2807, 2808, 2813, 2814, 2815, 2816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 0, 0, 1957,
	0, 0, 0, 0, 0, 0, 1936, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2681, 1953, 0, 1954, 0, 0, 0, 0,
	0, 0, 1923, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1982, 0, 0, 0, 0, 1942, 1942,
	1945, 0, 1942, 3485, 3485, 1942, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 1929, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2527, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1237, 1942, 1942, 1942, 1942, 1942, 0, 0, 0,
	0, 0, 1942, 1955, 1942, 2555, 0, 3485, 3485, 3485,
	3485, 3485, 3485, 3485, 3485, 3485, 3485, 3485, 3485, 3485,
	3485, 3485, 3485, 3485, 3485, 3485, 3485, 0, 0, 0,
	3485, 0, 0, 1942, 1942, 1959, 0, 0, 0, 0,
	0, 2595, 0, 2599, 0, 1942, 0, 0, 0, 0,
	2613, 0, 0, 0, 1942, 0, 0, 2622, 2623, 2624,
	2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634,
	2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644,
	2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654,
	2655, 2656, 2657, 1935, 2663, 0, 2665, 2666, 2667, 2668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1942, 0, 0, 0, 0, 0, 1930, 0, 0, 0,
	0, 0, 2692, 0, 0, 0, 0, 278, 1942, 278,
	278, 0, 0, 278, 1983, 1311, 0, 0, 2743, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 2773, 2776, 2779, 2782, 0, 1942,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1961, 0, 0,
	1942, 1942, 0, 0, 0, 0, 0, 0, 2854, 0,
	2866, 2868, 2873, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 278, 278, 0, 0, 278, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1920, 1921, 1927, 1949, 1926, 1922, 0, 1919,
	1917, 1918, 1910, 1911, 1912, 1913, 1915, 1916, 278, 278,
	0, 0, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 278, 0, 0, 114, 114,
	0, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1942, 1942,
	0, 1906, 1907, 1942, 1942, 0, 0, 1942, 1942, 0,
	0, 0, 1942, 0, 0, 0, 1942, 0, 0, 0,
	0, 1942, 0, 0, 0, 1937, 0, 0, 0, 114,
	114, 0, 114, 1909, 0, 0, 2862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 1928,
	0, 0, 278, 0, 0, 0, 0, 0, 1925, 0,
	0, 0, 0, 0, 0, 76, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 2862, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3372, 0, 0, 0, 0, 0,
	0, 0, 90, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 1942, 1147, 1931, 1932, 1933, 1934,
	0, 0, 0, 0, 0, 0, 1914, 0, 0, 114,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3195, 3196, 50, 3198, 112, 0,
	0, 0, 0, 0, 96, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1936, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1923, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 1942, 1942, 1942, 0, 1929, 0, 0, 0,
	0, 0, 0, 1942, 1942, 3485, 2862, 0, 0, 0,
	0, 0, 1942, 1906, 1907, 1942, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 1937, 0, 0,
	0, 2077, 0, 1324, 0, 1909, 0, 278, 0, 0,
	0, 0, 0, 3485, 2862, 1956, 3316, 0, 0, 0,
	0, 0, 0, 278, 2077, 278, 0, 0, 0, 0,
	1942, 0, 1962, 882, 0, 0, 1959, 0, 1942, 2862,
	882, 1908, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 1928, 0, 0, 0, 1942, 0, 1942, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	1964, 0, 0, 0, 1935, 0, 114, 0, 75, 101,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 0, 1311, 1311, 76, 1930, 0, 0,
	0, 0, 0, 0, 0, 0, 76, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 81, 0, 3373, 3374, 0, 1914, 0,
	0, 3380, 0, 3485, 0, 0, 0, 195, 104, 0,
	0, 108, 0, 0, 0, 0, 0, 0, 0, 0,
	3394, 3395, 0, 90, 0, 0, 2743, 0, 1961, 0,
	0, 1942, 3485, 90, 1328, 1942, 0, 0, 244, 1947,
	0, 0, 1957, 0, 0, 1328, 953, 0, 0, 1936,
	1938, 156, 0, 0, 3485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 952, 0, 1953, 0, 1954, 0,
	0, 3404, 0, 0, 952, 1923, 1924, 50, 0, 112,
	0, 0, 0, 1328, 0, 96, 109, 3418, 246, 112,
	0, 0, 0, 1945, 0, 96, 109, 0, 0, 0,
	0, 0, 0, 0, 3430, 1942, 0, 0, 1929, 0,
	0, 0, 0, 0, 160, 0, 0, 1926, 1922, 0,
	1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915, 1916, 1328,
	200, 0, 0, 0, 0, 0, 1328, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 1328, 238, 0, 278, 1955, 97, 0, 882,
	0, 0, 239, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2873, 2873, 2873, 0,
	0, 0, 1328, 0, 0, 278, 0, 0, 0, 278,
	0, 2055, 0, 0, 0, 278, 1942, 0, 0, 3523,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 1935, 278, 0, 278,
	0, 1942, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	0, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	101, 278, 0, 0, 278, 0, 0, 0, 0, 0,
	101, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 1152, 882, 278,
	0, 278, 0, 278, 0, 278, 0, 278, 0, 1152,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 104,
	0, 0, 108, 0, 0, 0, 0, 0, 195, 104,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1942, 0, 0, 0, 0, 0, 244,
	3656, 278, 278, 278, 278, 0, 0, 953, 0, 244,
	0, 0, 156, 0, 0, 1946, 0, 953, 0, 0,
	0, 0, 156, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 2739, 0, 0, 246,
	2740, 0, 0, 3709, 3710, 0, 0, 0, 114, 246,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 200, 0, 0, 1328, 0, 1328, 0, 0, 245,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 1328, 0, 239, 238, 0, 0, 196, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 196, 0, 0,
	0, 0, 2141, 0, 0, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2613, 278, 0, 0, 0, 0, 3905, 3906,
	0, 0, 3909, 0, 0, 0, 3912, 0, 0, 278,
	0, 0, 278, 0, 0, 3916, 278, 0, 278, 0,
	0, 0, 0, 0, 3923, 278, 278, 0, 0, 3523,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 3936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3959, 3960, 0, 3961, 3962, 3963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3969, 0, 0, 0, 3971,
	1328, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 4000, 4001, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	4012, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 1328,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 882, 0, 0, 0, 0, 0, 0, 0, 1328,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 4077, 0,
	0, 0, 278, 0, 882, 1328, 0, 1328, 1328, 1328,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1906, 1907, 4095, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2681, 0, 0, 0, 0, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 4126,
	0, 0, 0, 0, 0, 1956, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 278, 0, 278, 0, 0,
	0, 1908, 0, 0, 4147, 4148, 0, 0, 278, 0,
	0, 1928, 0, 0, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2141, 2141,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 278, 278, 278, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 0, 278, 0, 1914, 0,
	0, 0, 114, 0, 278, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 4252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 1328, 0, 0, 0, 0, 0, 1947,
	0, 0, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 1954, 0,
	0, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1945, 4295, 4296, 1328, 0, 0, 0,
	4300, 4301, 0, 1328, 0, 4304, 4305, 0, 1929, 0,
	0, 0, 1328, 4309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4313, 0, 0, 0, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 1937, 0, 0, 0, 1935, 0, 0, 0,
	1909, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	0, 0, 1152, 0, 1324, 1328, 0, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 1908, 0, 0, 0,
	1324, 0, 0, 0, 0, 0, 1928, 1948, 0, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 2141, 0, 0, 0, 0, 0,
	1961, 0, 278, 0, 0, 0, 0, 4461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 278, 0, 0, 0, 278, 278, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 1328, 0,
	0, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 1947, 0, 0, 1957, 0, 0,
	4323, 0, 0, 0, 1936, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 278, 0, 0, 278,
	0, 1953, 0, 1954, 0, 0, 2077, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 278, 0,
	1328, 0, 0, 0, 4579, 4580, 4581, 0, 1945, 0,
	0, 0, 0, 1328, 0, 1328, 0, 0, 0, 0,
	0, 1328, 0, 1929, 0, 0, 0, 2613, 0, 0,
	4590, 4591, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4599, 4602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	777, 278, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 0, 882,
	0, 760, 0, 0, 777, 0, 761, 0, 0, 278,
	0, 0, 0, 278, 0, 4657, 0, 0, 0, 0,
	0, 0, 0, 0, 4665, 760, 0, 0, 0, 0,
	761, 278, 0, 0, 0, 0, 0, 0, 0, 4673,
	0, 1324, 1152, 0, 0, 0, 0, 762, 0, 0,
	0, 1935, 0, 0, 0, 0, 4682, 0, 763, 4684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 762, 0, 0, 1930, 0, 0, 0, 0, 764,
	0, 0, 763, 0, 0, 0, 1906, 1907, 0, 1939,
	1940, 1941, 1950, 1951, 1952, 0, 0, 0, 0, 0,
	0, 783, 1948, 764, 0, 0, 0, 0, 0, 1943,
	1937, 0, 0, 0, 0, 0, 0, 0, 1909, 0,
	0, 0, 765, 0, 0, 783, 0, 0, 1956, 278,
	0, 278, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1962, 765, 766, 0, 0,
	0, 0, 0, 0, 1908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1928, 0, 0, 0, 278, 0,
	767, 766, 0, 1925, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 792, 0, 0, 767, 0, 0, 0, 768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 0, 0, 792, 0, 782, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 4808, 280, 280, 280,
	4812, 782, 0, 0, 0, 3921, 0, 0, 0, 0,
	0, 1931, 1932, 1933, 1934, 0, 0, 0, 0, 0,
	0, 1914, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	779, 0, 1947, 0, 0, 1957, 0, 0, 0, 0,
	0, 0, 1936, 1938, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1324, 1324, 0, 0, 1328, 1328, 1953,
	0, 1954, 0, 0, 4882, 0, 0, 0, 1923, 1924,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 789, 0, 770, 0, 1945, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1929, 0, 1328, 2613, 0, 1328, 0, 770, 0,
	0, 0, 0, 4602, 790, 0, 771, 0, 0, 0,
	882, 0, 0, 0, 0, 0, 0, 0, 2141, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 790, 0,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 791, 0,
	0, 0, 0, 0, 1152, 0, 772, 0, 0, 0,
	1944, 787, 788, 0, 785, 0, 0, 0, 0, 0,
	780, 1959, 791, 773, 0, 0, 0, 0, 0, 0,
	772, 0, 0, 0, 0, 787, 788, 0, 785, 0,
	0, 0, 0, 0, 780, 0, 0, 773, 2141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 774, 0, 781,
	0, 0, 0, 5003, 5003, 5003, 0, 775, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 774, 776, 781, 0, 0, 0, 784, 0, 0,
	0, 775, 1930, 0, 0, 0, 0, 0, 0, 0,
	5028, 0, 793, 0, 0, 0, 776, 0, 0, 0,
	278, 784, 0, 778, 0, 0, 1328, 0, 0, 0,
	1948, 0, 0, 0, 0, 0, 793, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 1961, 0, 0, 0, 5003, 0, 0,
	278, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 1317, 0, 0, 0, 0, 0, 1328,
	1324, 1328, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 0,
	274, 274, 726, 0, 278, 0, 0, 0, 1920, 1921,
	1927, 1949, 1926, 1922, 1328, 1919, 1917, 1918, 1910, 1911,
	1912, 1913, 1915, 1916, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3442, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	1328, 0, 0, 0, 0, 0, 0, 5003, 5160, 0,
	0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 0,
	1328, 0, 0, 1328, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1324, 0, 0, 0, 0, 0, 0,
	1925, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2141, 0, 0, 0, 2077, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 2141, 2141, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2077, 0, 2077, 1931, 1932,
	1933, 1934, 0, 0, 0, 0, 2141, 2141, 1914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 278, 2141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	0, 0, 1957, 0, 0, 0, 874, 0, 0, 1936,
	1938, 0, 278, 0, 0, 0, 1328, 1328, 0, 280,
	0, 280, 280, 0, 0, 280, 1953, 0, 1954, 0,
	0, 0, 0, 0, 874, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1929, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 280, 1488, 280, 280, 0, 0, 280, 280,
	0, 0, 0, 0, 1488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 0, 0, 0, 1488, 280, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 0, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 1328, 1930,
	1328, 0, 0, 0, 1328, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2141, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 278, 280, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 1328, 1328,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2077, 0, 0,
	0, 1328, 0, 1328, 0, 1946, 0, 0, 0, 1328,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 1328, 0, 0, 0,
	3441, 0, 0, 0, 1206, 0, 0, 2141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1378, 0, 1378, 1378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2077, 0, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 2077, 1328, 1328,
	0, 1328, 0, 0, 0, 1479, 0, 0, 1328, 0,
	0, 1589, 0, 0, 0, 0, 0, 0, 0, 1328,
	1328, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1488, 0, 2077, 2077, 0, 280, 280, 280, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 1328, 0,
	1328, 0, 280, 2077, 0, 278, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 1328, 0, 280, 0, 1731,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 1328, 1328, 0,
	0, 0, 0, 0, 1488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 1851, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 1328,
	1328, 1328, 1328, 1328, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2141, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 1328, 0, 0, 0, 0, 280, 0, 1488,
	1488, 280, 0, 0, 0, 0, 0, 0, 0, 1488,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 2077, 0,
	2077, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 280, 0, 0, 2141, 0, 0, 280, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 280, 0, 0, 0, 0, 0, 280, 0, 0,
	1607, 1328, 0, 0, 0, 0, 1488, 0, 1488, 0,
	1488, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	1328, 1328, 0, 0, 0, 0, 0, 0, 1488, 1488,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 1488, 280, 0, 0, 280, 0, 2104, 0,
	1589, 0, 0, 0, 1488, 0, 1488, 1488, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	1328, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	280, 280, 0, 280, 0, 280, 166, 280, 0, 280,
	0, 0, 0, 1378, 0, 75, 0, 47, 46, 0,
	1589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 2141, 0, 0, 0,
	81, 0, 0, 280, 280, 280, 280, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 49, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 48, 0,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 1488,
	0, 0, 0, 0, 0, 0, 0, 51, 69, 0,
	1328, 0, 0, 0, 0, 0, 52, 0, 0, 0,
	0, 58, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 112, 0, 0, 0,
	0, 0, 96, 109, 0, 0, 0, 0, 0, 0,
	70, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 1328, 0, 0, 1328,
	0, 0, 1488, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 97, 0, 0, 1486, 0, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1608, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 1328, 0, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2407, 0, 1608, 0, 2414, 0, 280, 0, 0, 1608,
	0, 0, 0, 0, 0, 0, 2427, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 2439, 1485, 2439, 0, 0, 0, 0, 0,
	2446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 280, 54, 0, 0, 280, 0,
	280, 0, 0, 0, 0, 1608, 2414, 280, 280, 2475,
	0, 57, 0, 0, 0, 0, 60, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	2495, 0, 0, 0, 59, 195, 104, 0, 0, 108,
	0, 0, 0, 55, 2511, 0, 2513, 165, 2515, 0,
	2517, 0, 2518, 0, 1488, 56, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 63, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 2546, 2547, 2548, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 246, 0, 1607, 1607,
	0, 1328, 0, 1328, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	280, 1488, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 280, 280, 0, 0, 245, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 280, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 3, 0, 0, 280, 1607, 280, 1607, 0, 1607,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1488,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1488, 1607, 1488, 1607, 1607, 1607, 0, 0,
	1488, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 1488, 0, 0, 0, 0, 0, 0, 874,
	0, 0, 0, 0, 1486, 0, 0, 280, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 280, 280, 280, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 2981, 0, 280, 1378, 1486, 0,
	0, 1378, 0, 1378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2427, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 1608, 2414, 2414, 1485, 0, 0,
	0, 0, 0, 1486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2414, 0, 0,
	0, 0, 0, 0, 0, 0, 2427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1906, 1907, 0,
	1939, 1940, 1941, 1950, 1951, 1952, 0, 1488, 0, 0,
	1608, 0, 1608, 0, 1608, 0, 0, 0, 0, 0,
	1943, 1937, 0, 0, 0, 0, 0, 0, 0, 1909,
	0, 3286, 1608, 1608, 0, 0, 0, 0, 0, 1956,
	1488, 0, 0, 0, 0, 0, 1608, 0, 0, 0,
	3297, 0, 3300, 1485, 0, 1488, 1962, 0, 1608, 0,
	1608, 1608, 1608, 0, 280, 1908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1928, 0, 0, 0, 0,
	0, 1488, 0, 0, 1925, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 280,
	280, 0, 0, 0, 0, 0, 3333, 1589, 3335, 1589,
	0, 0, 0, 0, 0, 3341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1378, 1931, 1932, 1933, 1934, 1607, 0, 0, 3370,
	0, 0, 1914, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 280, 0,
	0, 280, 0, 1486, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 1947, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 1936, 1938, 874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1488, 0, 0, 0, 0,
	1953, 0, 1954, 0, 0, 0, 0, 0, 0, 1923,
	1924, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 1607, 0, 1607, 0, 0, 0, 0, 0, 1607,
	0, 0, 1929, 0, 0, 0, 1486, 0, 0, 0,
	0, 1607, 0, 0, 1488, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 1488, 0,
	1488, 0, 0, 0, 1488, 0, 0, 0, 0, 0,
	0, 280, 1488, 0, 0, 0, 0, 0, 0, 0,
	1955, 280, 0, 0, 1488, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 0, 280, 0, 0, 1486, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1486, 0, 0, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1488, 0, 1488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 1488,
	0, 280, 1488, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 3571, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1486, 1488,
	0, 1943, 1937, 0, 0, 0, 0, 0, 1378, 0,
	1909, 0, 1589, 1589, 0, 0, 1488, 0, 0, 0,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 1908, 0, 3620, 1946,
	0, 0, 0, 0, 0, 0, 1928, 0, 0, 1920,
	1921, 1927, 1949, 1926, 1922, 1925, 1919, 1917, 1918, 1910,
	1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3438, 0, 0, 0, 0, 0,
	3675, 3677, 0, 0, 2427, 1486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	0, 1488, 0, 1914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 0, 0, 1957, 0, 1485,
	0, 0, 0, 1608, 1936, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 1608, 0, 1608, 0,
	0, 1953, 0, 1954, 1608, 0, 0, 0, 0, 902,
	1923, 1924, 0, 0, 3793, 0, 1608, 0, 3797, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 1945, 0,
	904, 0, 0, 0, 0, 905, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 906, 0, 923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 907, 0, 0, 1488, 1488, 908, 1488,
	0, 0, 1944, 1488, 0, 0, 1488, 0, 0, 0,
	0, 0, 280, 1959, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 0, 3890, 0, 1589, 909, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 930, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 3903, 1485, 0, 903, 280, 0, 0,
	0, 1935, 280, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 910,
	0, 0, 0, 911, 1930, 0, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 934, 0, 1488, 1488, 1488,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 1607, 0, 0, 0, 0, 0, 0,
	1488, 0, 1488, 0, 0, 0, 280, 1607, 1488, 1607,
	0, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	874, 1607, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 1607, 0, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 1607, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 0, 912, 0, 0, 3437, 0, 0, 0, 0,
	0, 0, 0, 914, 0, 0, 0, 0, 1485, 0,
	0, 1485, 0, 0, 0, 0, 0, 1488, 1488, 0,
	1488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 1488, 1488,
	0, 1486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 924, 0, 0, 0, 0,
	0, 0, 0, 0, 1486, 0, 0, 791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 1486,
	901, 0, 0, 925, 0, 0, 0, 0, 0, 0,
	0, 0, 916, 0, 0, 1485, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 1486, 0, 0, 0, 0,
	0, 0, 0, 0, 1488, 0, 0, 280, 0, 922,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1488, 0, 917, 0, 0, 0,
	918, 937, 0, 936, 280, 0, 919, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 2427, 929, 0, 0, 0,
	0, 0, 938, 0, 935, 0, 1488, 1488, 0, 0,
	0, 793, 0, 0, 2427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4216, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 1488, 280, 0, 0,
	2427, 1488, 0, 0, 0, 4234, 0, 0, 0, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1488, 1488, 1488,
	1488, 1488, 1488, 1488, 0, 0, 0, 0, 0, 1486,
	0, 874, 0, 0, 0, 0, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4280,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1608, 0, 1608, 0, 0, 0, 1486, 1488,
	0, 1488, 0, 0, 0, 0, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 1607, 0, 1607, 1608,
	0, 0, 1607, 0, 0, 1607, 0, 0, 0, 0,
	0, 1608, 0, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1488, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 1488, 1488,
	1488, 0, 0, 1486, 0, 0, 1486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 1607, 1607, 1607, 1488,
	1906, 1907, 1488, 1939, 1940, 1941, 1950, 1951, 1952, 0,
	0, 0, 0, 0, 4439, 0, 0, 0, 0, 1607,
	0, 1607, 0, 1943, 1937, 0, 0, 1485, 0, 0,
	2427, 0, 1909, 1486, 0, 280, 280, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	1486, 0, 0, 0, 1485, 0, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 1908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1928, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2427, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1931, 1932, 1933, 1934, 0,
	0, 0, 0, 0, 0, 1914, 1485, 1485, 0, 1485,
	0, 0, 0, 0, 0, 1486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	1485, 0, 1488, 0, 0, 0, 1947, 0, 0, 1957,
	0, 0, 1488, 0, 0, 0, 1936, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 1954, 0, 0, 0, 0,
	0, 0, 1923, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1485, 0, 1929, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4642, 0, 1485, 0, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 1607, 0, 0, 0,
	0, 280, 0, 0, 1944, 0, 0, 0, 0, 0,
	1608, 1608, 0, 1608, 0, 1959, 0, 1608, 0, 0,
	1608, 0, 2427, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 1607, 1607, 1607,
	1607, 1607, 1607, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 1608, 0, 0, 0, 1930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 1608, 0, 4770, 1589,
	0, 1608, 1608, 1608, 1948, 0, 0, 0, 0, 0,
	1906, 1907, 0, 1939, 1940, 1941, 1950, 1951, 1952, 0,
	0, 0, 0, 0, 1608, 0, 1608, 0, 0, 0,
	0, 0, 1486, 1943, 1937, 0, 0, 1961, 1485, 0,
	1607, 0, 1909, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 1486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 1485, 1908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1928, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1920, 1921, 1927, 1949, 1926, 1922, 0, 1919,
	1917, 1918, 1910, 1911, 1912, 1913, 1915, 1916, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3436, 0, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 1607, 1607,
	4888, 0, 0, 0, 0, 1931, 1932, 1933, 1934, 0,
	0, 1486, 1486, 0, 1486, 1914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1608, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1486, 0, 0, 1485, 0,
	0, 1607, 0, 0, 0, 0, 1947, 0, 0, 1957,
	0, 0, 0, 0, 0, 0, 1936, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 4941, 1954, 0, 0, 0, 0,
	0, 0, 1923, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 0, 0, 0, 0, 0, 0, 0, 1486, 0,
	0, 0, 0, 1906, 1907, 1929, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 0, 0, 0, 2351, 1486, 0,
	0, 0, 0, 0, 4985, 0, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 0, 0, 0,
	1608, 1608, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 1908, 0, 0, 1944, 0, 0, 0, 0, 0,
	0, 1928, 0, 0, 0, 1959, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1486, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 1608, 1608, 1608, 1608, 1608, 1608, 2352, 0,
	0, 1607, 0, 1935, 0, 0, 0, 0, 0, 0,
	1486, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 0, 0, 0, 1914, 0,
	1486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	0, 0, 1957, 1486, 0, 1608, 0, 1961, 0, 1936,
	1938, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 1954, 0,
	0, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1920, 1921, 1927, 1949, 1926, 1922, 0, 1919,
	1917, 1918, 1910, 1911, 1912, 1913, 1915, 1916, 0, 0,
	0, 0, 0, 0, 1486, 0, 1955, 2740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1608, 1608, 1608, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1486, 0, 0, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2353, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 1483, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1608, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	1489, 296, 297, 1490, 1491, 1492, 0, 1493, 672, 1494,
	1495, 1496, 298, 1497, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 1498, 677, 310, 311, 312, 313, 314, 315, 1499,
	1500, 0, 316, 678, 679, 680, 1501, 317, 318, 681,
	1502, 1569, 1503, 319, 320, 321, 322, 323, 324, 325,
	0, 1504, 327, 328, 329, 326, 330, 1505, 331, 1608,
	332, 333, 334, 335, 336, 337, 1506, 338, 339, 340,
	1269, 341, 342, 343, 1507, 1508, 1510, 1509, 1511, 1512,
	1513, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 1514, 354, 350, 352, 1515, 355, 353, 356, 1516,
	357, 358, 359, 1517, 1518, 360, 361, 362, 1519, 363,
	364, 365, 1520, 366, 367, 368, 1521, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 1522, 285, 1523, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 1524,
	387, 388, 389, 1525, 390, 1526, 1270, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 1527, 403, 690, 1528, 691, 404, 1529, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 1272, 411,
	412, 1530, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 1531, 1271, 499, 421, 695, 696,
	1532, 697, 1533, 422, 423, 1273, 698, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 1534, 434, 436, 435, 1535, 437, 699, 1276,
	438, 439, 1277, 1536, 440, 441, 442, 443, 444, 445,
	448, 1537, 1538, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1539, 287, 1280, 493, 494, 495, 496,
	1540, 700, 497, 701, 500, 501, 1541, 0, 502, 0,
	503, 1542, 1543, 505, 506, 507, 1544, 1545, 508, 509,
	702, 1281, 510, 1282, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 1546, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 1547, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 1548, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 1549, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 1550, 591, 592, 590, 593, 594, 595, 1551,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 1552, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 1553, 625, 626, 0,
	622, 613, 1554, 627, 628, 629, 630, 631, 632, 633,
	634, 1555, 635, 713, 714, 715, 716, 1556, 645, 1557,
	636, 637, 638, 639, 717, 640, 718, 1558, 641, 642,
	643, 644, 0, 646, 647, 1559, 1560, 648, 649, 651,
	653, 654, 650, 652, 655, 1561, 656, 1562, 0, 657,
	658, 659, 719, 720, 721, 1563, 661, 660, 662, 663,
	664, 722, 665, 666, 1564, 1565, 1566, 1567, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1483, 0, 0, 0, 0, 0,
	0, 0, 2908, 0, 0, 0, 0, 0, 0, 0,
	2909, 288, 289, 291, 290, 292, 293, 294, 295, 1489,
	296, 297, 1490, 1491, 1492, 0, 1493, 672, 1494, 1495,
	1496, 298, 1497, 299, 300, 1268, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	1498, 677, 310, 311, 312, 313, 314, 315, 1499, 1500,
	0, 316, 678, 679, 680, 1501, 317, 318, 681, 1502,
	1569, 1503, 319, 320, 321, 322, 323, 324, 325, 0,
	1504, 327, 328, 329, 326, 330, 1505, 331, 0, 332,
	333, 334, 335, 336, 337, 1506, 338, 339, 340, 1269,
	341, 342, 343, 1507, 1508, 1510, 1509, 1511, 1512, 1513,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	1514, 354, 350, 352, 1515, 355, 353, 356, 1516, 357,
	358, 359, 1517, 1518, 360, 361, 362, 1519, 363, 364,
	365, 1520, 366, 367, 368, 1521, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 1522, 285, 1523, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 1524, 387,
	388, 389, 1525, 390, 1526, 1270, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	1527, 403, 690, 1528, 691, 404, 1529, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 1272, 411, 412,
	1530, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 1531, 1271, 499, 421, 695, 696, 1532,
	697, 1533, 422, 423, 1273, 698, 1274, 424, 425, 426,
	1275, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 1534, 434, 436, 435, 1535, 437, 699, 1276, 438,
	439, 1277, 1536, 440, 441, 442, 443, 444, 445, 448,
	1537, 1538, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1278, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1279,
	491, 479, 1539, 287, 1280, 493, 494, 495, 496, 1540,
	700, 497, 701, 500, 501, 1541, 0, 502, 0, 503,
	1542, 1543, 505, 506, 507, 1544, 1545, 508, 509, 702,
	1281, 510, 1282, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 1546, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 1547, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	1548, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 1549, 565, 566, 567, 1283,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 1550, 591, 592, 590, 593, 594, 595, 1551, 596,
	597, 579, 580, 598, 599, 1284, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 1552, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 1553, 625, 626, 0, 622,
	613, 1554, 627, 628, 629, 630, 631, 632, 633, 634,
	1555, 635, 713, 714, 715, 716, 1556, 645, 1557, 636,
	637, 638, 639, 717, 640, 718, 1558, 641, 642, 643,
	644, 0, 646, 647, 1559, 1560, 648, 649, 651, 653,
	654, 650, 652, 655, 1561, 656, 1562, 0, 657, 658,
	659, 719, 720, 721, 1563, 661, 660, 662, 663, 664,
	722, 665, 666, 1564, 1565, 1566, 1567, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1483, 0, 0, 0, 3930, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3932, 288, 289,
	291, 290, 292, 293, 294, 295, 1489, 296, 297, 1490,
	1491, 1492, 0, 1493, 672, 1494, 1495, 1496, 298, 1497,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 1498, 677, 310,
	311, 312, 313, 314, 315, 1499, 1500, 0, 316, 678,
	679, 680, 1501, 317, 318, 681, 1502, 1569, 1503, 319,
	320, 321, 322, 323, 324, 325, 0, 1504, 327, 328,
	329, 326, 330, 1505, 331, 0, 332, 333, 334, 335,
	336, 337, 1506, 338, 339, 340, 1269, 341, 342, 343,
	1507, 1508, 1510, 1509, 1511, 1512, 1513, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 1514, 354, 350,
	352, 1515, 355, 353, 356, 1516, 357, 358, 359, 1517,
	1518, 360, 361, 362, 1519, 363, 364, 365, 1520, 366,
	367, 368, 1521, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	1522, 285, 1523, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 1524, 387, 388, 389, 1525,
	390, 1526, 1270, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 1527, 403, 690,
	1528, 691, 404, 1529, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 1272, 411, 412, 1530, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	1531, 1271, 499, 421, 695, 696, 1532, 697, 1533, 422,
	423, 1273, 698, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 1534, 434,
	436, 435, 1535, 437, 699, 1276, 438, 439, 1277, 1536,
	440, 441, 442, 443, 444, 445, 448, 1537, 1538, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 1539,
	287, 1280, 493, 494, 495, 496, 1540, 700, 497, 701,
	500, 501, 1541, 0, 502, 0, 503, 1542, 1543, 505,
	506, 507, 1544, 1545, 508, 509, 702, 1281, 510, 1282,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 1546, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 1547,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 1548, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 1549, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 1550, 591,
	592, 590, 593, 594, 595, 1551, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 1552, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 1553, 625, 626, 0, 622, 613, 1554, 627,
	628, 629, 630, 631, 632, 633, 634, 1555, 635, 713,
	714, 715, 716, 1556, 645, 1557, 636, 637, 638, 639,
	717, 640, 718, 1558, 641, 642, 643, 644, 0, 646,
	647, 1559, 1560, 648, 649, 651, 653, 654, 650, 652,
	655, 1561, 656, 1562, 0, 657, 658, 659, 719, 720,
	721, 1563, 661, 660, 662, 663, 664, 722, 665, 666,
	1564, 1565, 1566, 1567, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4353, 288,
	289, 291, 290, 292, 293, 294, 295, 1489, 296, 297,
	1490, 1491, 1492, 0, 1493, 672, 1494, 1495, 1496, 298,
	1497, 299, 300, 1268, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 1498, 677,
	310, 311, 312, 313, 314, 315, 1499, 1500, 0, 316,
	678, 679, 680, 1501, 317, 318, 681, 1502, 1569, 1503,
	319, 320, 321, 322, 323, 324, 325, 0, 1504, 327,
	328, 329, 326, 330, 1505, 331, 0, 332, 333, 334,
	335, 336, 337, 1506, 338, 339, 340, 1269, 341, 342,
	343, 1507, 1508, 1510, 1509, 1511, 1512, 1513, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 1514, 354,
	350, 352, 1515, 355, 353, 356, 1516, 357, 358, 359,
	1517, 1518, 360, 361, 362, 1519, 363, 364, 365, 1520,
	366, 367, 368, 1521, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 1522, 285, 1523, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 1524, 387, 388, 389,
	1525, 390, 1526, 1270, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 1527, 403,
	690, 1528, 691, 404, 1529, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 1272, 411, 412, 1530, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 1531, 1271, 499, 421, 695, 696, 1532, 697, 1533,
	422, 423, 1273, 698, 1274, 424, 425, 426, 1275, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 1534,
	434, 436, 435, 1535, 437, 699, 1276, 438, 439, 1277,
	1536, 440, 441, 442, 443, 444, 445, 448, 1537, 1538,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1278,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1279, 491, 479,
	1539, 287, 1280, 493, 494, 495, 496, 1540, 700, 497,
	701, 500, 501, 1541, 0, 502, 0, 503, 1542, 1543,
	505, 506, 507, 1544, 1545, 508, 509, 702, 1281, 510,
	1282, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 1546, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	1547, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 1548, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 1549, 565, 566, 567, 1283, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 1550,
	591, 592, 590, 593, 594, 595, 1551, 596, 597, 579,
	580, 598, 599, 1284, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 1552, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 1553, 625, 626, 0, 622, 613, 1554,
	627, 628, 629, 630, 631, 632, 633, 634, 1555, 635,
	713, 714, 715, 716, 1556, 645, 1557, 636, 637, 638,
	639, 717, 640, 718, 1558, 641, 642, 643, 644, 0,
	646, 647, 1559, 1560, 648, 649, 651, 653, 654, 650,
	652, 655, 1561, 656, 1562, 0, 657, 658, 659, 719,
	720, 721, 1563, 661, 660, 662, 663, 664, 722, 665,
	666, 1564, 1565, 1566, 1567, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4351,
	288, 289, 291, 290, 292, 293, 294, 295, 1489, 296,
	297, 1490, 1491, 1492, 0, 1493, 672, 1494, 1495, 1496,
	298, 1497, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 1498,
	677, 310, 311, 312, 313, 314, 315, 1499, 1500, 0,
	316, 678, 679, 680, 1501, 317, 318, 681, 1502, 1569,
	1503, 319, 320, 321, 322, 323, 324, 325, 0, 1504,
	327, 328, 329, 326, 330, 1505, 331, 0, 332, 333,
	334, 335, 336, 337, 1506, 338, 339, 340, 1269, 341,
	342, 343, 1507, 1508, 1510, 1509, 1511, 1512, 1513, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 1514,
	354, 350, 352, 1515, 355, 353, 356, 1516, 357, 358,
	359, 1517, 1518, 360, 361, 362, 1519, 363, 364, 365,
	1520, 366, 367, 368, 1521, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 1522, 285, 1523, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 1524, 387, 388,
	389, 1525, 390, 1526, 1270, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 1527,
	403, 690, 1528, 691, 404, 1529, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 1272, 411, 412, 1530,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 1531, 1271, 499, 421, 695, 696, 1532, 697,
	1533, 422, 423, 1273, 698, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	1534, 434, 436, 435, 1535, 437, 699, 1276, 438, 439,
	1277, 1536, 440, 441, 442, 443, 444, 445, 448, 1537,
	1538, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1539, 287, 1280, 493, 494, 495, 496, 1540, 700,
	497, 701, 500, 501, 1541, 0, 502, 0, 503, 1542,
	1543, 505, 506, 507, 1544, 1545, 508, 509, 702, 1281,
	510, 1282, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 1546, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 1547, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 1548,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 1549, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	1550, 591, 592, 590, 593, 594, 595, 1551, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 1552, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 1553, 625, 626, 0, 622, 613,
	1554, 627, 628, 629, 630, 631, 632, 633, 634, 1555,
	635, 713, 714, 715, 716, 1556, 645, 1557, 636, 637,
	638, 639, 717, 640, 718, 1558, 641, 642, 643, 644,
	0, 646, 647, 1559, 1560, 648, 649, 651, 653, 654,
	650, 652, 655, 1561, 656, 1562, 0, 657, 658, 659,
	719, 720, 721, 1563, 661, 660, 662, 663, 664, 722,
	665, 666, 1564, 1565, 1566, 1567, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 1483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4585, 288, 289, 291, 290, 292,
	293, 294, 295, 1489, 296, 297, 1490, 1491, 1492, 0,
	1493, 672, 1494, 1495, 1496, 298, 1497, 299, 300, 1268,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 1498, 677, 310, 311, 312, 313,
	314, 315, 1499, 1500, 0, 316, 678, 679, 680, 1501,
	317, 318, 681, 1502, 1569, 1503, 319, 320, 321, 322,
	323, 324, 325, 0, 1504, 327, 328, 329, 326, 330,
	1505, 331, 0, 332, 333, 334, 335, 336, 337, 1506,
	338, 339, 340, 1269, 341, 342, 343, 1507, 1508, 1510,
	1509, 1511, 1512, 1513, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 1514, 354, 350, 352, 1515, 355,
	353, 356, 1516, 357, 358, 359, 1517, 1518, 360, 361,
	362, 1519, 363, 364, 365, 1520, 366, 367, 368, 1521,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 1522, 285, 1523,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 1524, 387, 388, 389, 1525, 390, 1526, 1270,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 1527, 403, 690, 1528, 691, 404,
	1529, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 1272, 411, 412, 1530, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 1531, 1271, 499,
	421, 695, 696, 1532, 697, 1533, 422, 423, 1273, 698,
	1274, 424, 425, 426, 1275, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 1534, 434, 436, 435, 1535,
	437, 699, 1276, 438, 439, 1277, 1536, 440, 441, 442,
	443, 444, 445, 448, 1537, 1538, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1278, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1279, 491, 479, 1539, 287, 1280, 493,
	494, 495, 496, 1540, 700, 497, 701, 500, 501, 1541,
	0, 502, 0, 503, 1542, 1543, 505, 506, 507, 1544,
	1545, 508, 509, 702, 1281, 510, 1282, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	1546, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 1547, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 1548, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 1549,
	565, 566, 567, 1283, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 1550, 591, 592, 590, 593,
	594, 595, 1551, 596, 597, 579, 580, 598, 599, 1284,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	1552, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 1553,
	625, 626, 0, 622, 613, 1554, 627, 628, 629, 630,
	631, 632, 633, 634, 1555, 635, 713, 714, 715, 716,
	1556, 645, 1557, 636, 637, 638, 639, 717, 640, 718,
	1558, 641, 642, 643, 644, 0, 646, 647, 1559, 1560,
	648, 649, 651, 653, 654, 650, 652, 655, 1561, 656,
	1562, 0, 657, 658, 659, 719, 720, 721, 1563, 661,
	660, 662, 663, 664, 722, 665, 666, 1564, 1565, 1566,
	1567, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4448,
	288, 289, 291, 290, 292, 293, 294, 295, 1489, 296,
	297, 1490, 1491, 1492, 0, 1493, 672, 1494, 1495, 1496,
	298, 1497, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 1498,
	677, 310, 311, 312, 313, 314, 315, 1499, 1500, 0,
	316, 678, 679, 680, 1501, 317, 318, 681, 1502, 1569,
	1503, 319, 320, 321, 322, 323, 324, 325, 0, 1504,
	327, 328, 329, 326, 330, 1505, 331, 0, 332, 333,
	334, 335, 336, 337, 1506, 338, 339, 340, 1269, 341,
	342, 343, 1507, 1508, 1510, 1509, 1511, 1512, 1513, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 1514,
	354, 350, 352, 1515, 355, 353, 356, 1516, 357, 358,
	359, 1517, 1518, 360, 361, 362, 1519, 363, 364, 365,
	1520, 366, 367, 368, 1521, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 1522, 285, 1523, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 1524, 387, 388,
	389, 1525, 390, 1526, 1270, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 1527,
	403, 690, 1528, 691, 404, 1529, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 1272, 411, 412, 1530,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 1531, 1271, 499, 421, 695, 696, 1532, 697,
	1533, 422, 423, 1273, 698, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	1534, 434, 436, 435, 1535, 437, 699, 1276, 438, 439,
	1277, 1536, 440, 441, 442, 443, 444, 445, 448, 1537,
	1538, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1539, 287, 1280, 493, 494, 495, 496, 1540, 700,
	497, 701, 500, 501, 1541, 0, 502, 0, 503, 1542,
	1543, 505, 506, 507, 1544, 1545, 508, 509, 702, 1281,
	510, 1282, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 1546, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 1547, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 1548,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 1549, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	1550, 591, 592, 590, 593, 594, 595, 1551, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 1552, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 1553, 625, 626, 0, 622, 613,
	1554, 627, 628, 629, 630, 631, 632, 633, 634, 1555,
	635, 713, 714, 715, 716, 1556, 645, 1557, 636, 637,
	638, 639, 717, 640, 718, 1558, 641, 642, 643, 644,
	0, 646, 647, 1559, 1560, 648, 649, 651, 653, 654,
	650, 652, 655, 1561, 656, 1562, 0, 657, 658, 659,
	719, 720, 721, 1563, 661, 660, 662, 663, 664, 722,
	665, 666, 1564, 1565, 1566, 1567, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 1483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4281, 288, 289, 291, 290, 292,
	293, 294, 295, 1489, 296, 297, 1490, 1491, 1492, 0,
	1493, 672, 1494, 1495, 1496, 298, 1497, 299, 300, 1268,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 1498, 677, 310, 311, 312, 313,
	314, 315, 1499, 1500, 0, 316, 678, 679, 680, 1501,
	317, 318, 681, 1502, 1569, 1503, 319, 320, 321, 322,
	323, 324, 325, 0, 1504, 327, 328, 329, 326, 330,
	1505, 331, 0, 332, 333, 334, 335, 336, 337, 1506,
	338, 339, 340, 1269, 341, 342, 343, 1507, 1508, 1510,
	1509, 1511, 1512, 1513, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 1514, 354, 350, 352, 1515, 355,
	353, 356, 1516, 357, 358, 359, 1517, 1518, 360, 361,
	362, 1519, 363, 364, 365, 1520, 366, 367, 368, 1521,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 1522, 285, 1523,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 1524, 387, 388, 389, 1525, 390, 1526, 1270,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 1527, 403, 690, 1528, 691, 404,
	1529, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 1272, 411, 412, 1530, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 1531, 1271, 499,
	421, 695, 696, 1532, 697, 1533, 422, 423, 1273, 698,
	1274, 424, 425, 426, 1275, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 1534, 434, 436, 435, 1535,
	437, 699, 1276, 438, 439, 1277, 1536, 440, 441, 442,
	443, 444, 445, 448, 1537, 1538, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1278, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1279, 491, 479, 1539, 287, 1280, 493,
	494, 495, 496, 1540, 700, 497, 701, 500, 501, 1541,
	0, 502, 0, 503, 1542, 1543, 505, 506, 507, 1544,
	1545, 508, 509, 702, 1281, 510, 1282, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	1546, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 1547, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 1548, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 1549,
	565, 566, 567, 1283, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 1550, 591, 592, 590, 593,
	594, 595, 1551, 596, 597, 579, 580, 598, 599, 1284,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	1552, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 1553,
	625, 626, 0, 622, 613, 1554, 627, 628, 629, 630,
	631, 632, 633, 634, 1555, 635, 713, 714, 715, 716,
	1556, 645, 1557, 636, 637, 638, 639, 717, 640, 718,
	1558, 641, 642, 643, 644, 0, 646, 647, 1559, 1560,
	648, 649, 651, 653, 654, 650, 652, 655, 1561, 656,
	1562, 0, 657, 658, 659, 719, 720, 721, 1563, 661,
	660, 662, 663, 664, 722, 665, 666, 1564, 1565, 1566,
	1567, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3948,
	288, 289, 291, 290, 292, 293, 294, 295, 1489, 296,
	297, 1490, 1491, 1492, 0, 1493, 672, 1494, 1495, 1496,
	298, 1497, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 1498,
	677, 310, 311, 312, 313, 314, 315, 1499, 1500, 0,
	316, 678, 679, 680, 1501, 317, 318, 681, 1502, 1569,
	1503, 319, 320, 321, 322, 323, 324, 325, 0, 1504,
	327, 328, 329, 326, 330, 1505, 331, 0, 332, 333,
	334, 335, 336, 337, 1506, 338, 339, 340, 1269, 341,
	342, 343, 1507, 1508, 1510, 1509, 1511, 1512, 1513, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 1514,
	354, 350, 352, 1515, 355, 353, 356, 1516, 357, 358,
	359, 1517, 1518, 360, 361, 362, 1519, 363, 364, 365,
	1520, 366, 367, 368, 1521, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 1522, 285, 1523, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 1524, 387, 388,
	389, 1525, 390, 1526, 1270, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 1527,
	403, 690, 1528, 691, 404, 1529, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 1272, 411, 412, 1530,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 1531, 1271, 499, 421, 695, 696, 1532, 697,
	1533, 422, 423, 1273, 698, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	1534, 434, 436, 435, 1535, 437, 699, 1276, 438, 439,
	1277, 1536, 440, 441, 442, 443, 444, 445, 448, 1537,
	1538, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1539, 287, 1280, 493, 494, 495, 496, 1540, 700,
	497, 701, 500, 501, 1541, 0, 502, 0, 503, 1542,
	1543, 505, 506, 507, 1544, 1545, 508, 509, 702, 1281,
	510, 1282, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 1546, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 1547, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 1548,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 1549, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	1550, 591, 592, 590, 593, 594, 595, 1551, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 1552, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 1553, 625, 626, 0, 622, 613,
	1554, 627, 628, 629, 630, 631, 632, 633, 634, 1555,
	635, 713, 714, 715, 716, 1556, 645, 1557, 636, 637,
	638, 639, 717, 640, 718, 1558, 641, 642, 643, 644,
	0, 646, 647, 1559, 1560, 648, 649, 651, 653, 654,
	650, 652, 655, 1561, 656, 1562, 0, 657, 658, 659,
	719, 720, 721, 1563, 661, 660, 662, 663, 664, 722,
	665, 666, 1564, 1565, 1566, 1567, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 1483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3766, 288, 289, 291, 290, 292,
	293, 294, 295, 1489, 296, 297, 1490, 1491, 1492, 0,
	1493, 672, 1494, 1495, 1496, 298, 1497, 299, 300, 1268,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 1498, 677, 310, 311, 312, 313,
	314, 315, 1499, 1500, 0, 316, 678, 679, 680, 1501,
	317, 318, 681, 1502, 1569, 1503, 319, 320, 321, 322,
	323, 324, 325, 0, 1504, 327, 328, 329, 326, 330,
	1505, 331, 0, 332, 333, 334, 335, 336, 337, 1506,
	338, 339, 340, 1269, 341, 342, 343, 1507, 1508, 1510,
	1509, 1511, 1512, 1513, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 1514, 354, 350, 352, 1515, 355,
	353, 356, 1516, 357, 358, 359, 1517, 1518, 360, 361,
	362, 1519, 363, 364, 365, 1520, 366, 367, 368, 1521,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 1522, 285, 1523,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 1524, 387, 388, 389, 1525, 390, 1526, 1270,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 1527, 403, 690, 1528, 691, 404,
	1529, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 1272, 411, 412, 1530, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 1531, 1271, 499,
	421, 695, 696, 1532, 697, 1533, 422, 423, 1273, 698,
	1274, 424, 425, 426, 1275, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 1534, 434, 436, 435, 1535,
	437, 699, 1276, 438, 439, 1277, 1536, 440, 441, 442,
	443, 444, 445, 448, 1537, 1538, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1278, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1279, 491, 479, 1539, 287, 1280, 493,
	494, 495, 496, 1540, 700, 497, 701, 500, 501, 1541,
	0, 502, 0, 503, 1542, 1543, 505, 506, 507, 1544,
	1545, 508, 509, 702, 1281, 510, 1282, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	1546, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 1547, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 1548, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 1549,
	565, 566, 567, 1283, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 1550, 591, 592, 590, 593,
	594, 595, 1551, 596, 597, 579, 580, 598, 599, 1284,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	1552, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 1553,
	625, 626, 0, 622, 613, 1554, 627, 628, 629, 630,
	631, 632, 633, 634, 1555, 635, 713, 714, 715, 716,
	1556, 645, 1557, 636, 637, 638, 639, 717, 640, 718,
	1558, 641, 642, 643, 644, 0, 646, 647, 1559, 1560,
	648, 649, 651, 653, 654, 650, 652, 655, 1561, 656,
	1562, 0, 657, 658, 659, 719, 720, 721, 1563, 661,
	660, 662, 663, 664, 722, 665, 666, 1564, 1565, 1566,
	1567, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2763,
	288, 289, 291, 290, 292, 293, 294, 295, 1489, 296,
	297, 1490, 1491, 1492, 0, 1493, 672, 1494, 1495, 1496,
	298, 1497, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 1498,
	677, 310, 311, 312, 313, 314, 315, 1499, 1500, 0,
	316, 678, 679, 680, 1501, 317, 318, 681, 1502, 1569,
	1503, 319, 320, 321, 322, 323, 324, 325, 0, 1504,
	327, 328, 329, 326, 330, 1505, 331, 0, 332, 333,
	334, 335, 336, 337, 1506, 338, 339, 340, 1269, 341,
	342, 343, 1507, 1508, 1510, 1509, 1511, 1512, 1513, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 1514,
	354, 350, 352, 1515, 355, 353, 356, 1516, 357, 358,
	359, 1517, 1518, 360, 361, 362, 1519, 363, 364, 365,
	1520, 366, 367, 368, 1521, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 1522, 285, 1523, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 1524, 387, 388,
	389, 1525, 390, 1526, 1270, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 1527,
	403, 690, 1528, 691, 404, 1529, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 1272, 411, 412, 1530,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 1531, 1271, 499, 421, 695, 696, 1532, 697,
	1533, 422, 423, 1273, 698, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	1534, 434, 436, 435, 1535, 437, 699, 1276, 438, 439,
	1277, 1536, 440, 441, 442, 443, 444, 445, 448, 1537,
	1538, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1539, 287, 1280, 493, 494, 495, 496, 1540, 700,
	497, 701, 500, 501, 1541, 0, 502, 0, 503, 1542,
	1543, 505, 506, 507, 1544, 1545, 508, 509, 702, 1281,
	510, 1282, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 1546, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 1547, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 1548,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 1549, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	1550, 591, 592, 590, 593, 594, 595, 1551, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 1552, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 1553, 625, 626, 0, 622, 613,
	1554, 627, 628, 629, 630, 631, 632, 633, 634, 1555,
	635, 713, 714, 715, 716, 1556, 645, 1557, 636, 637,
	638, 639, 717, 640, 718, 1558, 641, 642, 643, 644,
	0, 646, 647, 1559, 1560, 648, 649, 651, 653, 654,
	650, 652, 655, 1561, 656, 1562, 0, 657, 658, 659,
	719, 720, 721, 1563, 661, 660, 662, 663, 664, 722,
	665, 666, 1564, 1565, 1566, 1567, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 1480, 0, 1483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2385, 288, 289, 291, 290, 292,
	293, 294, 295, 1489, 296, 297, 1490, 1491, 1492, 0,
	1493, 672, 1494, 1495, 1496, 298, 1497, 299, 300, 1268,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 1498, 677, 310, 311, 312, 313,
	314, 315, 1499, 1500, 0, 316, 678, 679, 680, 1501,
	317, 318, 681, 1502, 1569, 1503, 319, 320, 321, 322,
	323, 324, 325, 0, 1504, 327, 328, 329, 326, 330,
	1505, 331, 0, 332, 333, 334, 335, 336, 337, 1506,
	338, 339, 340, 1269, 341, 342, 343, 1507, 1508, 1510,
	1509, 1511, 1512, 1513, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 1514, 354, 350, 352, 1515, 355,
	353, 356, 1516, 357, 358, 359, 1517, 1518, 360, 361,
	362, 1519, 363, 364, 365, 1520, 366, 367, 368, 1521,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 1522, 285, 1523,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 1524, 387, 388, 389, 1525, 390, 1526, 1270,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 1527, 403, 690, 1528, 691, 404,
	1529, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 1272, 411, 412, 1530, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 1531, 1271, 499,
	421, 695, 696, 1532, 697, 1533, 422, 423, 1273, 698,
	1274, 424, 425, 426, 1275, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 1534, 434, 436, 435, 1535,
	437, 699, 1276, 438, 439, 1277, 1536, 440, 441, 442,
	443, 444, 445, 448, 1537, 1538, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1278, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1279, 491, 479, 1539, 287, 1280, 493,
	494, 495, 496, 1540, 700, 497, 701, 500, 501, 1541,
	0, 502, 0, 503, 1542, 1543, 505, 506, 507, 1544,
	1545, 508, 509, 702, 1281, 510, 1282, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	1546, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 1547, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 1548, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 1549,
	565, 566, 567, 1283, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 1550, 591, 592, 590, 593,
	594, 595, 1551, 596, 597, 579, 580, 598, 599, 1284,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	1552, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 1553,
	625, 626, 0, 622, 613, 1554, 627, 628, 629, 630,
	631, 632, 633, 634, 1555, 635, 713, 714, 715, 716,
	1556, 645, 1557, 636, 637, 638, 639, 717, 640, 718,
	1558, 641, 642, 643, 644, 0, 646, 647, 1559, 1560,
	648, 649, 651, 653, 654, 650, 652, 655, 1561, 656,
	1562, 0, 657, 658, 659, 719, 720, 721, 1563, 661,
	660, 662, 663, 664, 722, 665, 666, 1564, 1565, 1566,
	1567, 667, 668, 723, 669, 670, 671, 1483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 1489, 296, 297, 1490, 1491, 1492, 0, 1493,
	672, 1494, 1495, 1496, 298, 1497, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 1498, 677, 310, 311, 312, 313, 314,
	315, 1499, 1500, 0, 316, 678, 679, 680, 1501, 317,
	318, 681, 1502, 1569, 1503, 319, 320, 321, 322, 323,
	324, 325, 0, 1504, 327, 328, 329, 326, 330, 1505,
	331, 0, 332, 333, 334, 335, 336, 337, 1506, 338,
	339, 340, 1269, 341, 342, 343, 1507, 1508, 1510, 1509,
	1511, 1512, 1513, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 1514, 354, 350, 352, 1515, 355, 353,
	356, 1516, 357, 358, 359, 1517, 1518, 360, 361, 362,
	1519, 363, 364, 365, 1520, 366, 367, 368, 1521, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 1522, 285, 1523, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 1524, 387, 388, 389, 1525, 390, 1526, 1270, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 1527, 403, 690, 1528, 691, 404, 1529,
	405, 406, 407, 408, 409, 410, 692, 693, 694, 498,
	1272, 411, 412, 1530, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 1531, 1271, 499, 421,
	695, 696, 1532, 697, 1533, 422, 423, 1273, 698, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 1534, 434, 436, 435, 1535, 437,
	699, 1276, 438, 439, 1277, 1536, 440, 441, 442, 443,
	444, 445, 448, 1537, 1538, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 1539, 287, 1280, 493, 494,
	495, 496, 1540, 700, 497, 701, 500, 501, 1541, 0,
	502, 0, 503, 1542, 1543, 505, 506, 507, 1544, 1545,
	508, 509, 702, 1281, 510, 1282, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 1546,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 1547, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 1548, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 1549, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 1550, 591, 592, 590, 593, 594,
	595, 1551, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 1552,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 1553, 625,
	626, 0, 622, 613, 1554, 627, 628, 629, 630, 631,
	632, 633, 634, 1555, 635, 713, 714, 715, 716, 1556,
	645, 1557, 636, 637, 638, 639, 717, 640, 718, 1558,
	641, 642, 643, 644, 0, 646, 647, 1559, 1560, 648,
	649, 651, 653, 654, 650, 652, 655, 1561, 656, 1562,
	0, 657, 658, 659, 719, 720, 721, 1563, 661, 660,
	662, 663, 664, 722, 665, 666, 1564, 1565, 1566, 1567,
	667, 668, 723, 669, 670, 671, 2738, 0, 1204, 1176,
	1177, 1178, 1174, 1175, 1187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 2735, 296, 297, 0, 0, 0, 0,
	0, 1228, 1192, 0, 0, 298, 0, 299, 300, 1268,
	301, 302, 303, 304, 305, 306, 307, 673, 1241, 0,
	308, 1248, 309, 1247, 0, 1258, 310, 311, 312, 313,
	314, 315, 1194, 1227, 1159, 316, 1288, 1289, 680, 0,
	317, 318, 1234, 0, 1215, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1269, 341, 342, 343, 1218, 1216, 1217,
	1224, 1220, 1219, 1223, 344, 345, 346, 347, 348, 1251,
	349, 351, 1245, 1244, 1164, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 2736, 0, 360, 1236,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 1170, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1259, 1260, 382, 1183, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 1243, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1270,
	391, 392, 393, 1256, 1257, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1266, 0, 1193, 404,
	0, 405, 406, 407, 408, 409, 410, 1229, 1230, 1233,
	498, 1272, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1271, 499,
	421, 1238, 1239, 0, 1199, 0, 422, 423, 1273, 1231,
	1274, 424, 425, 426, 1275, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 1267, 1276, 438, 439, 1277, 0, 440, 441, 442,
	443, 444, 445, 448, 1222, 1221, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1278, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1279, 491, 479, 1161, 287, 1280, 493,
	494, 495, 496, 1184, 1232, 497, 1246, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 1281, 510, 1282, 1261, 511, 512,
	1171, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 1262, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 1242, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 1283, 568, 569, 570, 571, 572, 1172,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 1225, 596, 597, 579, 580, 598, 599, 1284,
	600, 601, 602, 603, 604, 605, 606, 1240, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 1287, 616, 617, 618, 619, 1263, 623, 624, 0,
	625, 626, 1158, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 1252, 1253, 1254, 1255,
	0, 645, 0, 636, 637, 638, 639, 1264, 640, 1265,
	1182, 641, 642, 643, 644, 0, 646, 647, 0, 1165,
	648, 649, 651, 653, 654, 650, 652, 655, 1226, 656,
	0, 0, 657, 658, 659, 719, 1249, 1286, 2734, 661,
	660, 662, 663, 664, 722, 665, 666, 0, 0, 0,
	0, 667, 668, 723, 669, 670, 671, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1157, 0, 0, 0, 0, 0, 0, 1155, 1156, 2737,
	0, 0, 0, 0, 0, 0, 0, 1188, 2733, 0,
	1148, 1186, 1204, 1176, 1177, 1178, 1174, 1175, 1187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 1228, 1192, 0, 0, 298,
	0, 299, 300, 1268, 301, 302, 303, 304, 305, 306,
	307, 673, 1241, 0, 308, 1248, 309, 1247, 0, 1258,
	310, 311, 312, 313, 314, 315, 1194, 1227, 1159, 316,
	1288, 1289, 680, 0, 317, 318, 1234, 0, 1215, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1269, 341, 342,
	343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345,
	346, 347, 348, 1251, 349, 351, 1245, 1244, 1164, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1236, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1170, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1259, 1260,
	382, 1183, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1243, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1270, 391, 392, 393, 1256, 1257, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1266, 0, 1193, 404, 0, 405, 406, 407, 408, 409,
	410, 1229, 1230, 1233, 498, 1272, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1271, 499, 421, 1238, 1239, 0, 1199, 0,
	422, 423, 1273, 1231, 1274, 424, 425, 426, 1275, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1267, 1276, 438, 439, 1277,
	0, 440, 441, 442, 443, 444, 445, 448, 1222, 1221,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1278,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1279, 491, 479,
	1161, 287, 1280, 493, 494, 495, 496, 1184, 1232, 497,
	1246, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 1281, 510,
	1282, 1261, 511, 512, 1171, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 1262, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 1242, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1283, 568, 569,
	570, 571, 572, 1172, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 244,
	591, 592, 590, 593, 594, 595, 1225, 596, 597, 579,
	580, 598, 599, 1284, 600, 601, 602, 603, 604, 605,
	606, 1240, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 1287, 616, 617, 618, 619,
	1263, 623, 624, 0, 625, 626, 1158, 622, 613, 246,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	1252, 1253, 1254, 1255, 0, 645, 0, 636, 637, 638,
	639, 1264, 640, 1265, 1182, 641, 642, 643, 644, 0,
	646, 647, 0, 1165, 648, 649, 651, 653, 654, 650,
	652, 655, 1226, 656, 0, 0, 657, 658, 659, 1723,
	1249, 1286, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 0, 0, 0, 238, 667, 668, 723, 669, 670,
	671, 1162, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 1155, 1156, 1204, 1176, 1177, 1178, 1174, 1175, 1187,
	0, 1987, 1985, 0, 0, 1186, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 1228, 1192, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 1241, 0, 308, 1248, 309, 1247, 0,
	1258, 310, 311, 312, 313, 314, 315, 1194, 1227, 1159,
	316, 1288, 1289, 680, 0, 317, 318, 1234, 0, 1215,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344,
	345, 346, 347, 348, 1251, 349, 351, 1245, 1244, 1164,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1236, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1170, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1259,
	1260, 382, 1183, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1243, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 1256, 1257,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1266, 0, 1193, 404, 0, 405, 406, 407, 408,
	409, 410, 1229, 1230, 1233, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1271, 499, 421, 1238, 1239, 0, 1199,
	0, 422, 423, 1273, 1231, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1267, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 1222,
	1221, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1161, 287, 1280, 493, 494, 495, 496, 1184, 1232,
	497, 1246, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 1261, 511, 512, 1171, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 1262, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1242, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 1172, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	244, 591, 592, 590, 593, 594, 595, 1225, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 1240, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1287, 616, 617, 618,
	619, 1263, 623, 624, 0, 625, 626, 1158, 622, 613,
	246, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1252, 1253, 1254, 1255, 0, 645, 0, 636, 637,
	638, 639, 1264, 640, 1265, 1182, 641, 642, 643, 644,
	0, 646, 647, 0, 1165, 648, 649, 651, 653, 654,
	650, 652, 655, 1226, 656, 0, 0, 657, 658, 659,
	1723, 1249, 1286, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 0, 238, 667, 668, 723, 669,
	670, 671, 1162, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 1155, 1156, 1204, 1176, 1177, 1178, 1174, 1175,
	1187, 0, 1987, 3392, 0, 0, 1186, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 1228, 1192, 0,
	0, 298, 0, 299, 300, 1268, 301, 302, 303, 304,
	305, 306, 307, 673, 1241, 0, 308, 1248, 309, 1247,
	0, 1258, 310, 311, 312, 313, 314, 315, 1194, 1227,
	1159, 316, 1288, 1289, 680, 0, 317, 318, 1234, 0,
	1215, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1269,
	341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223,
	344, 345, 346, 347, 348, 1251, 349, 351, 1245, 1244,
	1164, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1236, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1170, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1259, 1260, 382, 1183, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1243, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1270, 391, 392, 393, 1256,
	1257, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1266, 0, 1193, 404, 0, 405, 406, 407,
	408, 409, 410, 1229, 1230, 1233, 498, 1272, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1271, 499, 421, 1238, 1239, 0,
	1199, 0, 422, 423, 1273, 1231, 1274, 424, 425, 426,
	1275, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1267, 1276, 438,
	439, 1277, 0, 440, 441, 442, 443, 444, 445, 448,
	1222, 1221, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1278, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1279,
	491, 479, 1161, 287, 1280, 493, 494, 495, 496, 1184,
	1232, 497, 1246, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	1281, 510, 1282, 1261, 511, 512, 1171, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 1262, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 1242, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 1283,
	568, 569, 570, 571, 572, 1172, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 244, 591, 592, 590, 593, 594, 595, 1225, 596,
	597, 579, 580, 598, 599, 1284, 600, 601, 602, 603,
	604, 605, 606, 1240, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 1287, 616, 617,
	618, 619, 1263, 623, 624, 0, 625, 626, 1158, 622,
	613, 246, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 1252, 1253, 1254, 1255, 0, 645, 0, 636,
	637, 638, 639, 1264, 640, 1265, 1182, 641, 642, 643,
	644, 0, 646, 647, 0, 1165, 648, 649, 651, 653,
	654, 650, 652, 655, 1226, 656, 0, 0, 657, 658,
	659, 1723, 1249, 1286, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 0, 0, 0, 238, 667, 668, 723,
	669, 670, 671, 1162, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	0, 0, 0, 1155, 1156, 1204, 1176, 1177, 1178, 1174,
	1175, 1187, 0, 1987, 1985, 0, 0, 1186, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 1241, 0, 308, 1248, 309,
	1247, 2869, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 349, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 2874, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 409, 410, 1229, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 2870, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 1280, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 2871,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 646, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 1162, 0, 0, 2783, 0, 1204,
	1176, 1177, 1178, 1174, 1175, 1187, 0, 1157, 0, 0,
	0, 0, 0, 0, 1155, 1156, 288, 289, 291, 290,
	292, 293, 294, 295, 1188, 296, 297, 0, 1186, 0,
	0, 0, 1228, 1192, 0, 0, 298, 0, 299, 300,
	1268, 301, 302, 303, 304, 305, 306, 307, 673, 1241,
	0, 308, 1248, 309, 1247, 0, 1258, 310, 311, 312,
	313, 314, 315, 1194, 1227, 1159, 316, 1288, 1289, 680,
	0, 317, 318, 1234, 0, 1215, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1269, 341, 342, 343, 1218, 1216,
	1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347, 348,
	1251, 349, 351, 1245, 1244, 1164, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1236, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1170, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1259, 1260, 382, 1183, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1243, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1270, 391, 392, 393, 1256, 1257, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1266, 0, 1193,
	404, 0, 405, 406, 407, 408, 409, 410, 1229, 1230,
	1233, 498, 1272, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1271,
	499, 421, 1238, 1239, 0, 1199, 0, 422, 423, 1273,
	1231, 1274, 424, 425, 426, 1275, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1267, 1276, 438, 439, 1277, 0, 440, 441,
	442, 443, 444, 445, 448, 1222, 1221, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1278, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1279, 491, 479, 1161, 287, 1280,
	493, 494, 495, 496, 1184, 1232, 497, 1246, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 1281, 510, 1282, 1261, 511,
	512, 1171, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 1262, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1242,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1283, 568, 569, 570, 571, 572,
	1172, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1225, 596, 597, 579, 580, 598, 599,
	1284, 600, 601, 602, 603, 604, 605, 606, 1240, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1287, 616, 617, 618, 619, 1263, 623, 624,
	0, 625, 626, 1158, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1252, 1253, 1254,
	1255, 0, 645, 0, 636, 637, 638, 639, 1264, 640,
	1265, 1182, 641, 642, 643, 644, 0, 646, 647, 0,
	1165, 648, 649, 651, 653, 654, 650, 652, 655, 1226,
	656, 0, 0, 657, 658, 659, 719, 1249, 1286, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 0, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1157, 0, 0, 0, 0, 0, 0, 1155, 1156,
	0, 0, 0, 0, 0, 0, 0, 0, 1188, 2781,
	0, 2780, 1186, 1204, 1176, 1177, 1178, 1174, 1175, 1187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 1228, 1192, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 1241, 0, 308, 1248, 309, 1247, 0,
	1258, 310, 311, 312, 313, 314, 315, 1194, 1227, 1159,
	316, 1288, 1289, 680, 0, 317, 318, 1234, 0, 1215,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344,
	345, 346, 347, 348, 1251, 349, 351, 1245, 1244, 1164,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1236, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1170, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1259,
	1260, 382, 1183, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1243, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 1256, 1257,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1266, 0, 1193, 404, 0, 405, 406, 407, 408,
	409, 410, 1229, 1230, 1233, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1271, 499, 421, 1238, 1239, 0, 1199,
	0, 422, 423, 1273, 1231, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1267, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 1222,
	1221, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1161, 287, 1280, 493, 494, 495, 496, 1184, 1232,
	497, 1246, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 1261, 511, 512, 1171, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 1262, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1242, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 1172, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1225, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 1240, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1287, 616, 617, 618,
	619, 1263, 623, 624, 0, 625, 626, 1158, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1252, 1253, 1254, 1255, 0, 645, 0, 636, 637,
	638, 639, 1264, 640, 1265, 1182, 641, 642, 643, 644,
	0, 646, 647, 0, 1165, 648, 649, 651, 653, 654,
	650, 652, 655, 1226, 656, 0, 0, 657, 658, 659,
	719, 1249, 1286, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 1162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 1155, 1156, 0, 0, 0, 0, 0, 0,
	0, 0, 1188, 2778, 0, 2777, 1186, 1204, 1176, 1177,
	1178, 1174, 1175, 1187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	1228, 1192, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 1241, 0, 308,
	1248, 309, 1247, 0, 1258, 310, 311, 312, 313, 314,
	315, 1194, 1227, 1159, 316, 1288, 1289, 680, 0, 317,
	318, 1234, 0, 1215, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 343, 1218, 1216, 1217, 1224,
	1220, 1219, 1223, 344, 345, 346, 347, 348, 1251, 349,
	351, 1245, 1244, 1164, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1236, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1170, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1259, 1260, 382, 1183, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1243, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1270, 391,
	392, 393, 1256, 1257, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1266, 0, 1193, 404, 0,
	405, 406, 407, 408, 409, 410, 1229, 1230, 1233, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1271, 499, 421,
	1238, 1239, 0, 1199, 0, 422, 423, 1273, 1231, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1267, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 1222, 1221, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 1161, 287, 1280, 493, 494,
	495, 496, 1184, 1232, 497, 1246, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 1261, 511, 512, 1171,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	1262, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1242, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 1172, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1225, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 1240, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1287, 616, 617, 618, 619, 1263, 623, 624, 0, 625,
	626, 1158, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1252, 1253, 1254, 1255, 0,
	645, 0, 636, 637, 638, 639, 1264, 640, 1265, 1182,
	641, 642, 643, 644, 0, 646, 647, 0, 1165, 648,
	649, 651, 653, 654, 650, 652, 655, 1226, 656, 0,
	0, 657, 658, 659, 719, 1249, 1286, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 0, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 1162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 0, 0, 0, 0, 0, 1155, 1156, 0, 0,
	0, 0, 0, 0, 0, 0, 1188, 2775, 0, 2774,
	1186, 1204, 1176, 1177, 1178, 1174, 1175, 1187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 1228, 1192, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 1241, 0, 308, 1248, 309, 1247, 0, 1258, 310,
	311, 312, 313, 314, 315, 1194, 1227, 1159, 316, 1288,
	1289, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 1251, 349, 351, 1245, 1244, 1164, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1236, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1170, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1259, 1260, 382,
	1183, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1243, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 1256, 1257, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 1193, 404, 0, 405, 406, 407, 408, 409, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 1238, 1239, 0, 1199, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 1161,
	287, 1280, 493, 494, 495, 496, 1184, 1232, 497, 1246,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 1171, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1242, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 1172, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	1240, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1287, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 1158, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1252,
	1253, 1254, 1255, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 1182, 641, 642, 643, 644, 0, 646,
	647, 0, 1165, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 1249,
	1286, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1157, 0, 0, 0, 0, 0, 0,
	1155, 1156, 0, 0, 0, 0, 0, 0, 0, 0,
	1188, 2772, 0, 1824, 1186, 1204, 1176, 1177, 1178, 1174,
	1175, 1187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 1241, 0, 308, 1248, 309,
	1247, 0, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 349, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 409, 410, 1229, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 1280, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 646, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 1823, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 1162, 0, 0, 1151, 0, 1204,
	1176, 1177, 1178, 1174, 1175, 1187, 0, 1157, 0, 0,
	0, 0, 0, 0, 1155, 1156, 288, 289, 291, 290,
	292, 293, 294, 295, 1188, 296, 297, 0, 1186, 0,
	0, 0, 1228, 1192, 0, 0, 298, 0, 299, 300,
	1268, 301, 302, 303, 304, 305, 306, 307, 673, 1241,
	0, 308, 1248, 309, 1247, 0, 1258, 310, 311, 312,
	313, 314, 315, 1194, 1227, 1159, 316, 1288, 1289, 680,
	0, 317, 318, 1234, 0, 1215, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1269, 341, 342, 343, 1218, 1216,
	1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347, 348,
	1251, 349, 351, 1245, 1244, 1164, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1236, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1170, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1259, 1260, 382, 1183, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1243, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1270, 391, 392, 393, 1256, 1257, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1266, 0, 1193,
	404, 0, 405, 406, 407, 408, 409, 410, 1229, 1230,
	1233, 498, 1272, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1271,
	499, 421, 1238, 1239, 0, 1199, 0, 422, 423, 1273,
	1231, 1274, 424, 425, 426, 1275, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1267, 1276, 438, 439, 1277, 0, 440, 441,
	442, 443, 444, 445, 448, 1222, 1221, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1278, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1279, 491, 479, 1161, 287, 1280,
	493, 494, 495, 496, 1184, 1232, 497, 1246, 500, 501,
	0, 0, 502, 0, 503, 1166, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 1281, 510, 1282, 1261, 511,
	512, 1171, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 1262, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1242,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1283, 568, 569, 570, 571, 572,
	1172, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1225, 596, 597, 579, 580, 598, 599,
	1284, 600, 601, 602, 603, 604, 605, 606, 1240, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1287, 616, 617, 618, 619, 1263, 623, 624,
	0, 625, 626, 1158, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1252, 1253, 1254,
	1255, 0, 645, 0, 636, 637, 638, 639, 1264, 640,
	1265, 1182, 641, 642, 643, 644, 0, 646, 647, 0,
	1165, 648, 649, 651, 653, 654, 650, 652, 655, 1226,
	656, 0, 0, 657, 658, 659, 719, 1249, 1286, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 0, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 1162, 0,
	0, 0, 0, 1204, 1176, 1177, 1178, 1174, 1175, 1187,
	0, 1157, 0, 0, 0, 0, 0, 0, 1155, 1156,
	288, 289, 291, 290, 292, 293, 294, 295, 1188, 296,
	297, 0, 1186, 0, 0, 0, 1228, 1192, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 1241, 0, 308, 1248, 309, 1247, 0,
	1258, 310, 311, 312, 313, 314, 315, 1194, 1227, 1159,
	316, 1288, 1289, 680, 0, 317, 318, 1234, 0, 1215,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 4953, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344,
	345, 346, 347, 348, 1251, 349, 351, 1245, 1244, 1164,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1236, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1170, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1259,
	1260, 382, 1183, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1243, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 1256, 1257,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1266, 0, 1193, 404, 0, 405, 406, 407, 408,
	409, 410, 1229, 1230, 1233, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1271, 499, 421, 1238, 1239, 0, 1199,
	0, 422, 423, 1273, 1231, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1267, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 1222,
	1221, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1161, 287, 1280, 493, 494, 495, 496, 1184, 1232,
	497, 1246, 500, 501, 0, 0, 502, 0, 503, 1166,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 1261, 511, 512, 1171, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 1262, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1242, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 1172, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1225, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 1240, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1287, 616, 617, 618,
	619, 1263, 623, 624, 0, 625, 626, 1158, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1252, 1253, 1254, 1255, 0, 645, 0, 636, 637,
	638, 639, 1264, 640, 1265, 1182, 641, 642, 643, 644,
	0, 646, 647, 0, 1165, 648, 649, 651, 653, 654,
	650, 652, 655, 1226, 656, 0, 0, 657, 658, 659,
	719, 1249, 1286, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 1162, 0, 0, 0, 0, 1204, 1176, 1177,
	1178, 1174, 1175, 1187, 0, 1157, 0, 0, 0, 0,
	0, 0, 1155, 1156, 288, 289, 291, 290, 292, 293,
	294, 295, 1188, 296, 297, 0, 1186, 0, 0, 0,
	1228, 1192, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 1241, 0, 308,
	1248, 309, 1247, 0, 1258, 310, 311, 312, 313, 314,
	315, 1194, 1227, 1159, 316, 1288, 1289, 680, 0, 317,
	318, 1234, 0, 1215, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 343, 1218, 1216, 1217, 1224,
	1220, 1219, 1223, 344, 345, 346, 347, 348, 1251, 349,
	351, 1245, 1244, 1164, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1236, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1170, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1259, 1260, 382, 1183, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1243, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1270, 391,
	392, 393, 1256, 1257, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1266, 0, 1193, 404, 0,
	405, 406, 407, 408, 409, 410, 1229, 1230, 1233, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 2615, 418, 419, 420, 0, 1271, 499, 421,
	1238, 1239, 0, 1199, 0, 422, 423, 1273, 1231, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1267, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 1222, 1221, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 1161, 287, 1280, 493, 494,
	495, 496, 1184, 1232, 497, 1246, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 1261, 511, 512, 1171,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	1262, 530, 707, 531, 532, 2614, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1242, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 1172, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1225, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 1240, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1287, 616, 617, 618, 619, 1263, 623, 624, 0, 625,
	626, 1158, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1252, 1253, 1254, 1255, 0,
	645, 0, 636, 637, 638, 639, 1264, 640, 1265, 1182,
	641, 642, 643, 644, 0, 646, 647, 0, 1165, 648,
	649, 651, 653, 654, 650, 652, 655, 1226, 656, 0,
	0, 657, 658, 659, 719, 1249, 1286, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 0, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 1162, 0, 0, 0,
	0, 1204, 1176, 1177, 1178, 1174, 1175, 1187, 0, 1157,
	0, 0, 0, 0, 0, 0, 1155, 1156, 288, 289,
	291, 290, 292, 293, 294, 295, 1188, 296, 297, 0,
	1186, 0, 0, 0, 1228, 1192, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 1241, 0, 308, 1248, 309, 1247, 0, 1258, 310,
	311, 312, 313, 314, 315, 1194, 1227, 1159, 316, 1288,
	1289, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	4676, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 1251, 349, 351, 1245, 1244, 1164, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1236, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1170, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1259, 1260, 382,
	1183, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1243, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 1256, 1257, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 1193, 404, 0, 405, 406, 407, 408, 409, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 1238, 1239, 0, 1199, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 1161,
	287, 1280, 493, 494, 495, 496, 1184, 1232, 497, 1246,
	500, 501, 0, 0, 502, 0, 503, 1166, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 1171, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1242, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 1172, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	1240, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1287, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 1158, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1252,
	1253, 1254, 1255, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 1182, 641, 642, 643, 644, 0, 646,
	647, 0, 1165, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 1249,
	1286, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	1162, 0, 0, 0, 0, 1204, 1176, 1177, 1178, 1174,
	1175, 1187, 0, 1157, 0, 0, 0, 0, 0, 0,
	1155, 1156, 288, 289, 291, 290, 292, 293, 294, 295,
	1188, 296, 297, 0, 1186, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 1241, 0, 308, 1248, 309,
	1247, 0, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 349, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 409, 410, 1229, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 1280, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 1166, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 646, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 1162, 0, 0, 0, 0, 1204,
	1176, 1177, 1178, 1174, 1175, 1187, 0, 1157, 0, 0,
	0, 0, 0, 0, 1155, 1156, 288, 289, 291, 290,
	292, 293, 294, 295, 1188, 296, 297, 0, 1186, 0,
	0, 0, 1228, 1192, 0, 0, 298, 0, 299, 300,
	1268, 301, 302, 303, 304, 305, 306, 307, 673, 1241,
	0, 308, 1248, 309, 1247, 0, 1258, 310, 311, 312,
	313, 314, 315, 1194, 1227, 1159, 316, 1288, 1289, 680,
	0, 317, 318, 1234, 0, 1215, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1269, 341, 342, 343, 1218, 1216,
	1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347, 348,
	1251, 349, 351, 1245, 1244, 1164, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1236, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1170, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1259, 1260, 382, 1183, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1243, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1270, 391, 392, 393, 1256, 1257, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1266, 0, 1193,
	404, 0, 405, 406, 407, 408, 409, 410, 1229, 1230,
	1233, 498, 1272, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1271,
	499, 421, 1238, 1239, 0, 1199, 0, 422, 423, 1273,
	1231, 1274, 424, 425, 426, 1275, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1267, 1276, 438, 439, 1277, 0, 440, 441,
	442, 443, 444, 445, 448, 1222, 1221, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1278, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1279, 491, 479, 1161, 4246, 1280,
	493, 494, 495, 496, 1184, 1232, 497, 1246, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 1281, 510, 1282, 1261, 511,
	512, 1171, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 1262, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1242,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1283, 568, 569, 570, 571, 572,
	1172, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1225, 596, 597, 579, 580, 598, 599,
	1284, 600, 601, 602, 603, 604, 605, 606, 1240, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1287, 616, 617, 618, 619, 1263, 623, 624,
	0, 625, 626, 1158, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1252, 1253, 1254,
	1255, 0, 645, 0, 636, 637, 638, 639, 1264, 640,
	1265, 1182, 641, 642, 643, 644, 0, 646, 647, 0,
	1165, 648, 649, 651, 653, 654, 650, 652, 655, 1226,
	656, 0, 0, 657, 658, 659, 719, 1249, 1286, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 0, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1157, 0, 0, 0, 0, 0, 0, 1155, 1156,
	2056, 1204, 1176, 1177, 1178, 1174, 1175, 1187, 1188, 0,
	0, 0, 1186, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 1228, 1192, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 1241, 0, 308, 1248, 309, 1247, 0, 1258, 310,
	311, 312, 313, 314, 315, 1194, 1227, 1159, 316, 1288,
	1289, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 1251, 349, 351, 1245, 1244, 1164, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1236, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1170, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1259, 1260, 382,
	1183, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1243, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 1256, 1257, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 1193, 404, 0, 405, 406, 407, 408, 409, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 1238, 1239, 0, 1199, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 1161,
	287, 1280, 493, 494, 495, 496, 1184, 1232, 497, 1246,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 1171, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1242, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 1172, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	1240, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1287, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 1158, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1252,
	1253, 1254, 1255, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 1182, 641, 642, 643, 644, 0, 646,
	647, 0, 1165, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 1249,
	1286, 3926, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	1162, 0, 0, 0, 0, 1204, 1176, 1177, 1178, 1174,
	1175, 1187, 0, 1157, 0, 0, 0, 0, 0, 0,
	1155, 1156, 288, 289, 291, 290, 292, 293, 294, 295,
	1188, 296, 297, 0, 1186, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 1241, 0, 308, 1248, 309,
	1247, 0, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 349, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 409, 410, 1229, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 1280, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 646, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 1162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 0,
	0, 0, 0, 0, 1155, 1156, 2056, 1204, 1176, 1177,
	1178, 1174, 1175, 1187, 1188, 0, 0, 0, 1186, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	1228, 1192, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 1241, 0, 308,
	1248, 309, 1247, 0, 1258, 310, 311, 312, 313, 314,
	315, 1194, 1227, 1159, 316, 1288, 1289, 680, 0, 317,
	318, 1234, 0, 1215, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 343, 1218, 1216, 1217, 1224,
	1220, 1219, 1223, 344, 345, 346, 347, 348, 1251, 349,
	351, 1245, 1244, 1164, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1236, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1170, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1259, 1260, 382, 1183, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1243, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 2874, 1270, 391,
	392, 393, 1256, 1257, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1266, 0, 1193, 404, 0,
	405, 406, 407, 408, 409, 410, 1229, 1230, 1233, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1271, 499, 421,
	1238, 1239, 0, 1199, 0, 422, 423, 1273, 1231, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1267, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 1222, 1221, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 1161, 287, 1280, 493, 494,
	495, 496, 1184, 1232, 497, 1246, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 1261, 511, 512, 1171,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	1262, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1242, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 1172, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1225, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 1240, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1287, 616, 617, 618, 619, 1263, 623, 624, 0, 625,
	626, 1158, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1252, 1253, 1254, 1255, 0,
	645, 0, 636, 637, 638, 639, 1264, 640, 1265, 1182,
	641, 642, 643, 644, 0, 646, 647, 0, 1165, 648,
	649, 651, 653, 654, 650, 652, 655, 1226, 656, 0,
	0, 657, 658, 659, 719, 1249, 1286, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 0, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 1162, 0, 0, 0,
	0, 1204, 1176, 1177, 1178, 1174, 1175, 1187, 0, 1157,
	0, 0, 0, 0, 0, 0, 1155, 1156, 288, 289,
	291, 290, 292, 293, 294, 295, 1188, 296, 297, 0,
	1186, 0, 0, 0, 1228, 1192, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 1241, 0, 308, 1248, 309, 1247, 0, 1258, 310,
	311, 312, 313, 314, 315, 1194, 1227, 1159, 316, 1288,
	1289, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 1251, 349, 351, 1245, 1244, 1164, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1236, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1170, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1259, 1260, 382,
	1183, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1243, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 1256, 1257, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 1193, 404, 0, 405, 406, 407, 408, 409, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 1238, 1239, 0, 1199, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 1161,
	287, 1280, 493, 494, 495, 496, 1184, 1232, 497, 1246,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 1171, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1242, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 1172, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	1240, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1287, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 1158, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1252,
	1253, 1254, 1255, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 1182, 641, 642, 643, 644, 0, 646,
	647, 0, 1165, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 1249,
	1286, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1157, 0, 0, 0, 0, 0, 0,
	1155, 1156, 0, 0, 0, 0, 0, 0, 0, 0,
	1188, 1985, 0, 2879, 1186, 1204, 1176, 1177, 1178, 1174,
	1175, 1187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 1241, 0, 308, 1248, 309,
	1247, 0, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 349, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 409, 410, 1229, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 1280, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 646, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 1162, 0, 0, 2877, 0, 1204,
	1176, 1177, 1178, 1174, 1175, 1187, 0, 1157, 0, 0,
	0, 0, 0, 0, 1155, 1156, 288, 289, 291, 290,
	292, 293, 294, 295, 1188, 296, 297, 0, 1186, 0,
	0, 0, 1228, 1192, 0, 0, 298, 0, 299, 300,
	1268, 301, 302, 303, 304, 305, 306, 307, 673, 1241,
	0, 308, 1248, 309, 1247, 0, 1258, 310, 311, 312,
	313, 314, 315, 1194, 1227, 1159, 316, 1288, 1289, 680,
	0, 317, 318, 1234, 0, 1215, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1269, 341, 342, 343, 1218, 1216,
	1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347, 348,
	1251, 349, 351, 1245, 1244, 1164, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1236, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1170, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1259, 1260, 382, 1183, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1243, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1270, 391, 392, 393, 1256, 1257, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1266, 0, 1193,
	404, 0, 405, 406, 407, 408, 409, 410, 1229, 1230,
	1233, 498, 1272, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1271,
	499, 421, 1238, 1239, 0, 1199, 0, 422, 423, 1273,
	1231, 1274, 424, 425, 426, 1275, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1267, 1276, 438, 439, 1277, 0, 440, 441,
	442, 443, 444, 445, 448, 1222, 1221, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1278, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1279, 491, 479, 1161, 287, 1280,
	493, 494, 495, 496, 1184, 1232, 497, 1246, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 1281, 510, 1282, 1261, 511,
	512, 1171, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 1262, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1242,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1283, 568, 569, 570, 571, 572,
	1172, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1225, 596, 597, 579, 580, 598, 599,
	1284, 600, 601, 602, 603, 604, 605, 606, 1240, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1287, 616, 617, 618, 619, 1263, 623, 624,
	0, 625, 626, 1158, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1252, 1253, 1254,
	1255, 0, 645, 0, 636, 637, 638, 639, 1264, 640,
	1265, 1182, 641, 642, 643, 644, 0, 646, 647, 0,
	1165, 648, 649, 651, 653, 654, 650, 652, 655, 1226,
	656, 0, 0, 657, 658, 659, 719, 1249, 1286, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 0, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 1162, 0,
	0, 2865, 0, 1204, 1176, 1177, 1178, 1174, 1175, 1187,
	0, 1157, 0, 0, 0, 0, 0, 0, 1155, 1156,
	288, 289, 291, 290, 292, 293, 294, 295, 1188, 296,
	297, 0, 1186, 0, 0, 0, 1228, 1192, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 1241, 0, 308, 1248, 309, 1247, 0,
	1258, 310, 311, 312, 313, 314, 315, 1194, 1227, 1159,
	316, 1288, 1289, 680, 0, 317, 318, 1234, 0, 1215,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344,
	345, 346, 347, 348, 1251, 349, 351, 1245, 1244, 1164,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1236, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1170, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1259,
	1260, 382, 1183, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1243, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 1256, 1257,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1266, 0, 1193, 404, 0, 405, 406, 407, 408,
	409, 410, 1229, 1230, 1233, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1271, 499, 421, 1238, 1239, 0, 1199,
	0, 422, 423, 1273, 1231, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1267, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 1222,
	1221, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1161, 287, 1280, 493, 494, 495, 496, 1184, 1232,
	497, 1246, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 1261, 511, 512, 1171, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 1262, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1242, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 1172, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1225, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 1240, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1287, 616, 617, 618,
	619, 1263, 623, 624, 0, 625, 626, 1158, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1252, 1253, 1254, 1255, 0, 645, 0, 636, 637,
	638, 639, 1264, 640, 1265, 1182, 641, 642, 643, 644,
	0, 646, 647, 0, 1165, 648, 649, 651, 653, 654,
	650, 652, 655, 1226, 656, 0, 0, 657, 658, 659,
	719, 1249, 1286, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 1162, 0, 0, 2853, 0, 1204, 1176, 1177,
	1178, 1174, 1175, 1187, 0, 1157, 0, 0, 0, 0,
	0, 0, 1155, 1156, 288, 289, 291, 290, 292, 293,
	294, 295, 1188, 296, 297, 0, 1186, 0, 0, 0,
	1228, 1192, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 1241, 0, 308,
	1248, 309, 1247, 0, 1258, 310, 311, 312, 313, 314,
	315, 1194, 1227, 1159, 316, 1288, 1289, 680, 0, 317,
	318, 1234, 0, 1215, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 343, 1218, 1216, 1217, 1224,
	1220, 1219, 1223, 344, 345, 346, 347, 348, 1251, 349,
	351, 1245, 1244, 1164, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1236, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1170, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1259, 1260, 382, 1183, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1243, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1270, 391,
	392, 393, 1256, 1257, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1266, 0, 1193, 404, 0,
	405, 406, 407, 408, 409, 410, 1229, 1230, 1233, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1271, 499, 421,
	1238, 1239, 0, 1199, 0, 422, 423, 1273, 1231, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1267, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 1222, 1221, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 1161, 287, 1280, 493, 494,
	495, 496, 1184, 1232, 497, 1246, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 1261, 511, 512, 1171,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	1262, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1242, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 1172, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1225, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 1240, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1287, 616, 617, 618, 619, 1263, 623, 624, 0, 625,
	626, 1158, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1252, 1253, 1254, 1255, 0,
	645, 0, 636, 637, 638, 639, 1264, 640, 1265, 1182,
	641, 642, 643, 644, 0, 646, 647, 0, 1165, 648,
	649, 651, 653, 654, 650, 652, 655, 1226, 656, 0,
	0, 657, 658, 659, 719, 1249, 1286, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 0, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 1162, 0, 0, 2851,
	0, 2842, 2849, 1177, 1178, 1174, 1175, 1187, 0, 1157,
	0, 0, 0, 0, 0, 0, 1155, 1156, 288, 289,
	291, 290, 292, 293, 294, 295, 1188, 296, 297, 0,
	1186, 0, 0, 0, 1228, 1192, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 1241, 0, 308, 1248, 309, 1247, 0, 1258, 310,
	311, 312, 313, 314, 315, 1194, 1227, 1159, 316, 1288,
	1289, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 1251, 2845, 351, 1245, 1244, 1164, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1236, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1170, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1259, 1260, 382,
	1183, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1243, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 1256, 1257, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 1193, 404, 0, 405, 406, 407, 408, 2846, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 1238, 1239, 0, 1199, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	2847, 458, 2844, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 1161,
	287, 1280, 493, 494, 495, 496, 1184, 1232, 497, 1246,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 1171, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1242, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 1172, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 2848, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	1240, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1287, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 1158, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1252,
	1253, 1254, 1255, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 1182, 641, 642, 643, 644, 0, 646,
	647, 0, 1165, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 1249,
	1286, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 2843, 671,
	1162, 0, 0, 2839, 0, 2842, 2849, 1177, 1178, 1174,
	1175, 1187, 0, 1157, 0, 0, 0, 0, 0, 0,
	1155, 1156, 288, 289, 291, 290, 292, 293, 294, 295,
	1188, 296, 297, 0, 1186, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 1241, 0, 308, 1248, 309,
	1247, 0, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 2845, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 2846, 410, 1229, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 2847, 458, 2844, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 1280, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 2848, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 646, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 2843, 671, 1162, 0, 0, 0, 0, 1204,
	1176, 1177, 1178, 1174, 1175, 1187, 0, 1157, 0, 0,
	0, 0, 0, 0, 1155, 1156, 288, 289, 291, 290,
	292, 293, 294, 295, 1188, 296, 297, 0, 1186, 0,
	0, 0, 1228, 1192, 0, 0, 298, 0, 299, 300,
	1268, 301, 302, 303, 304, 305, 306, 307, 673, 1241,
	0, 308, 1248, 309, 1247, 0, 1258, 310, 311, 312,
	313, 314, 315, 1194, 1227, 1159, 316, 1288, 1289, 680,
	0, 317, 318, 1234, 0, 1215, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1269, 341, 342, 343, 1218, 1216,
	1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347, 348,
	1251, 349, 351, 1245, 1244, 1164, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1236, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1170, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1259, 1260, 382, 1183, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1243, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1270, 391, 392, 393, 1256, 1257, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1266, 0, 1193,
	404, 0, 405, 406, 407, 408, 409, 410, 1229, 1230,
	1233, 498, 1272, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1271,
	499, 421, 1238, 1239, 0, 1199, 0, 422, 423, 1273,
	1231, 1274, 424, 425, 426, 1275, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1267, 1276, 438, 439, 1277, 0, 440, 441,
	442, 443, 444, 445, 448, 1222, 1221, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1278, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1279, 491, 479, 1161, 287, 1280,
	493, 494, 495, 496, 1184, 1232, 497, 1246, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 1281, 510, 1282, 1261, 511,
	512, 1171, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 1262, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1242,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1283, 568, 569, 570, 571, 572,
	1172, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1225, 596, 597, 579, 580, 598, 599,
	1284, 600, 601, 602, 603, 604, 605, 606, 1240, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1287, 616, 617, 618, 619, 1263, 623, 624,
	0, 625, 626, 1158, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1252, 1253, 1254,
	1255, 0, 645, 0, 636, 637, 638, 639, 1264, 640,
	1265, 1182, 641, 642, 643, 644, 0, 646, 647, 0,
	1165, 648, 649, 651, 653, 654, 650, 652, 655, 1226,
	656, 0, 0, 657, 658, 659, 719, 1249, 1286, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 0, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1157, 0, 0, 0, 0, 0, 0, 1155, 1156,
	0, 0, 0, 0, 0, 0, 1993, 0, 1188, 0,
	0, 0, 1186, 1204, 1176, 1177, 1178, 1174, 1175, 1187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 2594, 296,
	297, 0, 0, 0, 0, 0, 1228, 1192, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 1241, 0, 308, 1248, 309, 1247, 0,
	1258, 310, 311, 312, 313, 314, 315, 1194, 1227, 1159,
	316, 1288, 1289, 680, 0, 317, 318, 1234, 0, 1215,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344,
	345, 346, 347, 348, 1251, 349, 351, 1245, 1244, 1164,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1236, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1170, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1259,
	1260, 382, 1183, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1243, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 1256, 1257,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1266, 0, 1193, 404, 0, 405, 406, 407, 408,
	409, 410, 1229, 1230, 1233, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1271, 499, 421, 1238, 1239, 0, 1199,
	0, 422, 423, 1273, 1231, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1267, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 1222,
	1221, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1161, 287, 1280, 493, 494, 495, 496, 1184, 1232,
	497, 1246, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 1261, 511, 512, 1171, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 1262, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1242, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 1172, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1225, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 1240, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1287, 616, 617, 618,
	619, 1263, 623, 624, 0, 625, 626, 1158, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1252, 1253, 1254, 1255, 0, 645, 0, 636, 637,
	638, 639, 1264, 640, 1265, 1182, 641, 642, 643, 644,
	0, 646, 647, 0, 1165, 648, 649, 651, 653, 654,
	650, 652, 655, 1226, 656, 0, 0, 657, 658, 659,
	719, 1249, 1286, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 1162, 0, 0, 2556, 0, 1204, 1176, 1177,
	1178, 1174, 1175, 1187, 0, 1157, 0, 0, 0, 0,
	0, 0, 1155, 1156, 288, 289, 291, 290, 292, 293,
	294, 295, 1188, 296, 297, 0, 1186, 0, 0, 0,
	1228, 1192, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 1241, 0, 308,
	1248, 309, 1247, 0, 1258, 310, 311, 312, 313, 314,
	315, 1194, 1227, 1159, 316, 1288, 1289, 680, 0, 317,
	318, 1234, 0, 1215, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 343, 1218, 1216, 1217, 1224,
	1220, 1219, 1223, 344, 345, 346, 347, 348, 1251, 349,
	351, 1245, 1244, 1164, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1236, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1170, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1259, 1260, 382, 1183, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1243, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1270, 391,
	392, 393, 1256, 1257, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1266, 0, 1193, 404, 0,
	405, 406, 407, 408, 409, 410, 1229, 1230, 1233, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1271, 499, 421,
	1238, 1239, 0, 1199, 0, 422, 423, 1273, 1231, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1267, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 1222, 1221, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 1161, 287, 1280, 493, 494,
	495, 496, 1184, 1232, 497, 1246, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 1261, 511, 512, 1171,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	1262, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1242, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 1172, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1225, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 1240, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1287, 616, 617, 618, 619, 1263, 623, 624, 0, 625,
	626, 1158, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1252, 1253, 1254, 1255, 0,
	645, 0, 636, 637, 638, 639, 1264, 640, 1265, 1182,
	641, 642, 643, 644, 0, 646, 647, 0, 1165, 648,
	649, 651, 653, 654, 650, 652, 655, 1226, 656, 0,
	0, 657, 658, 659, 719, 1249, 1286, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 0, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 1162, 0, 0, 2528,
	0, 1204, 1176, 1177, 1178, 1174, 1175, 1187, 0, 1157,
	0, 0, 0, 0, 0, 0, 1155, 1156, 288, 289,
	291, 290, 292, 293, 294, 295, 1188, 296, 297, 0,
	1186, 0, 0, 0, 1228, 1192, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 1241, 0, 308, 1248, 309, 1247, 0, 1258, 310,
	311, 312, 313, 314, 315, 1194, 1227, 1159, 316, 1288,
	1289, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 1251, 349, 351, 1245, 1244, 1164, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1236, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1170, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1259, 1260, 382,
	1183, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1243, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 1256, 1257, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 1193, 404, 0, 405, 406, 407, 408, 409, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 1238, 1239, 0, 1199, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 1161,
	287, 1280, 493, 494, 495, 496, 1184, 1232, 497, 1246,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 1171, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1242, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 1172, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	1240, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1287, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 1158, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1252,
	1253, 1254, 1255, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 1182, 641, 642, 643, 644, 0, 646,
	647, 0, 1165, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 1249,
	1286, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	1162, 0, 0, 1829, 0, 1204, 1176, 1177, 1178, 1174,
	1175, 1187, 0, 1157, 0, 0, 0, 0, 0, 0,
	1155, 1156, 288, 289, 291, 290, 292, 293, 294, 295,
	1188, 296, 297, 0, 1186, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 1241, 0, 308, 1248, 309,
	1247, 0, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 349, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 409, 410, 1229, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 1280, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 646, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 1162, 0, 0, 1758, 0, 1204,
	1176, 1177, 1178, 1174, 1175, 1187, 0, 1157, 0, 0,
	0, 0, 0, 0, 1155, 1156, 288, 289, 291, 290,
	292, 293, 294, 295, 1188, 296, 297, 0, 1186, 0,
	0, 0, 1228, 1192, 0, 0, 298, 0, 299, 300,
	1268, 301, 302, 303, 304, 305, 306, 307, 673, 1241,
	0, 308, 1248, 309, 1247, 0, 1258, 310, 311, 312,
	313, 314, 315, 1194, 1227, 1159, 316, 1288, 1289, 680,
	0, 317, 318, 1234, 0, 1215, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1269, 341, 342, 343, 1218, 1216,
	1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347, 348,
	1251, 349, 351, 1245, 1244, 1164, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1236, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1170, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1259, 1260, 382, 1183, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1243, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1270, 391, 392, 393, 1256, 1257, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1266, 0, 1193,
	404, 0, 405, 406, 407, 408, 409, 410, 1229, 1230,
	1233, 498, 1272, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1271,
	499, 421, 1238, 1239, 0, 1199, 0, 422, 423, 1273,
	1231, 1274, 424, 425, 426, 1275, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1267, 1276, 438, 439, 1277, 0, 440, 441,
	442, 443, 444, 445, 448, 1222, 1221, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1278, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1279, 491, 479, 1161, 287, 1280,
	493, 494, 495, 496, 1184, 1232, 497, 1246, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 1281, 510, 1282, 1261, 511,
	512, 1171, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 1262, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1242,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1283, 568, 569, 570, 571, 572,
	1172, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1225, 596, 597, 579, 580, 598, 599,
	1284, 600, 601, 602, 603, 604, 605, 606, 1240, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1287, 616, 617, 618, 619, 1263, 623, 624,
	0, 625, 626, 1158, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1252, 1253, 1254,
	1255, 0, 645, 0, 636, 637, 638, 639, 1264, 640,
	1265, 1182, 641, 642, 643, 644, 0, 646, 647, 0,
	1165, 648, 649, 651, 653, 654, 650, 652, 655, 1226,
	656, 0, 0, 657, 658, 659, 719, 1249, 1286, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 0, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 1162, 0,
	0, 1753, 0, 1204, 1176, 1177, 1178, 1174, 1175, 1187,
	0, 1157, 0, 0, 0, 0, 0, 0, 1155, 1156,
	288, 289, 291, 290, 292, 293, 294, 295, 1188, 296,
	297, 0, 1186, 0, 0, 0, 1228, 1192, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 1241, 0, 308, 1248, 309, 1247, 0,
	1258, 310, 311, 312, 313, 314, 315, 1194, 1227, 1159,
	316, 1288, 1289, 680, 0, 317, 318, 1234, 0, 1215,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344,
	345, 346, 347, 348, 1251, 349, 351, 1245, 1244, 1164,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1236, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1170, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1259,
	1260, 382, 1183, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1243, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 1256, 1257,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1266, 0, 1193, 404, 0, 405, 406, 407, 408,
	409, 410, 1229, 1230, 1233, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1271, 499, 421, 1238, 1239, 0, 1199,
	0, 422, 423, 1273, 1231, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1267, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 1222,
	1221, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1161, 287, 1280, 493, 494, 495, 496, 1184, 1232,
	497, 1246, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 1261, 511, 512, 1171, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 1262, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1242, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 1172, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1225, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 1240, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1287, 616, 617, 618,
	619, 1263, 623, 624, 0, 625, 626, 1158, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1252, 1253, 1254, 1255, 0, 645, 0, 636, 637,
	638, 639, 1264, 640, 1265, 1182, 641, 642, 643, 644,
	0, 646, 647, 0, 1165, 648, 649, 651, 653, 654,
	650, 652, 655, 1226, 656, 0, 0, 657, 658, 659,
	719, 1249, 1286, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 1162, 0, 0, 1739, 0, 1204, 1176, 1177,
	1178, 1174, 1175, 1187, 0, 1157, 0, 0, 0, 0,
	0, 0, 1155, 1156, 288, 289, 291, 290, 292, 293,
	294, 295, 1188, 296, 297, 0, 1186, 0, 0, 0,
	1228, 1192, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 1241, 0, 308,
	1248, 309, 1247, 0, 1258, 310, 311, 312, 313, 314,
	315, 1194, 1227, 1159, 316, 1288, 1289, 680, 0, 317,
	318, 1234, 0, 1215, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 343, 1218, 1216, 1217, 1224,
	1220, 1219, 1223, 344, 345, 346, 347, 348, 1251, 349,
	351, 1245, 1244, 1164, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1236, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1170, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1259, 1260, 382, 1183, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1243, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1270, 391,
	392, 393, 1256, 1257, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1266, 0, 1193, 404, 0,
	405, 406, 407, 408, 409, 410, 1229, 1230, 1233, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1271, 499, 421,
	1238, 1239, 0, 1199, 0, 422, 423, 1273, 1231, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1267, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 1222, 1221, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 1161, 287, 1280, 493, 494,
	495, 496, 1184, 1232, 497, 1246, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 1261, 511, 512, 1171,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	1262, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1242, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 1172, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1225, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 1240, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1287, 616, 617, 618, 619, 1263, 623, 624, 0, 625,
	626, 1158, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1252, 1253, 1254, 1255, 0,
	645, 0, 636, 637, 638, 639, 1264, 640, 1265, 1182,
	641, 642, 643, 644, 0, 646, 647, 0, 1165, 648,
	649, 651, 653, 654, 650, 652, 655, 1226, 656, 0,
	0, 657, 658, 659, 719, 1249, 1286, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 0, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 1162, 0, 0, 1734,
	0, 1204, 1176, 1177, 1178, 1174, 1175, 1187, 0, 1157,
	0, 0, 0, 0, 0, 0, 1155, 1156, 288, 289,
	291, 290, 292, 293, 294, 295, 1188, 296, 297, 0,
	1186, 0, 0, 0, 1228, 1192, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 1241, 0, 308, 1248, 309, 1247, 0, 1258, 310,
	311, 312, 313, 314, 315, 1194, 1227, 1159, 316, 1288,
	1289, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 1251, 349, 351, 1245, 1244, 1164, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1236, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1170, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1259, 1260, 382,
	1183, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1243, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 1256, 1257, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 1193, 404, 0, 405, 406, 407, 408, 409, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 1238, 1239, 0, 1199, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 1161,
	287, 1280, 493, 494, 495, 496, 1184, 1232, 497, 1246,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 1171, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1242, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 1172, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	1240, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1287, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 1158, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1252,
	1253, 1254, 1255, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 1182, 641, 642, 643, 644, 0, 646,
	647, 0, 1165, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 1249,
	1286, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	1162, 0, 0, 1643, 0, 1204, 1176, 1177, 1178, 1174,
	1175, 1187, 0, 1157, 0, 0, 0, 0, 0, 0,
	1155, 1156, 288, 289, 291, 290, 292, 293, 294, 295,
	1188, 296, 297, 0, 1186, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 1241, 0, 308, 1248, 309,
	1247, 0, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 349, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 409, 410, 1642, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 1280, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 646, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 1162, 0, 0, 1637, 0, 1204,
	1176, 1177, 1178, 1174, 1175, 1187, 0, 1157, 0, 0,
	0, 0, 0, 0, 1155, 1156, 288, 289, 291, 290,
	292, 293, 294, 295, 1188, 296, 297, 0, 1186, 0,
	0, 0, 1228, 1192, 0, 0, 298, 0, 299, 300,
	1268, 301, 302, 303, 304, 305, 306, 307, 673, 1241,
	0, 308, 1248, 309, 1247, 0, 1258, 310, 311, 312,
	313, 314, 315, 1194, 1227, 1159, 316, 1288, 1289, 680,
	0, 317, 318, 1234, 0, 1215, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1269, 341, 342, 343, 1218, 1216,
	1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347, 348,
	1251, 349, 351, 1245, 1244, 1164, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1236, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1170, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1259, 1260, 382, 1183, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1243, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1270, 391, 392, 393, 1256, 1257, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1266, 0, 1193,
	404, 0, 405, 406, 407, 408, 409, 410, 1636, 1230,
	1233, 498, 1272, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1271,
	499, 421, 1238, 1239, 0, 1199, 0, 422, 423, 1273,
	1231, 1274, 424, 425, 426, 1275, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1267, 1276, 438, 439, 1277, 0, 440, 441,
	442, 443, 444, 445, 448, 1222, 1221, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1278, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1279, 491, 479, 1161, 287, 1280,
	493, 494, 495, 496, 1184, 1232, 497, 1246, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 1281, 510, 1282, 1261, 511,
	512, 1171, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 1262, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1242,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1283, 568, 569, 570, 571, 572,
	1172, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1225, 596, 597, 579, 580, 598, 599,
	1284, 600, 601, 602, 603, 604, 605, 606, 1240, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1287, 616, 617, 618, 619, 1263, 623, 624,
	0, 625, 626, 1158, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1252, 1253, 1254,
	1255, 0, 645, 0, 636, 637, 638, 639, 1264, 640,
	1265, 1182, 641, 642, 643, 644, 0, 646, 647, 0,
	1165, 648, 649, 651, 653, 654, 650, 652, 655, 1226,
	656, 0, 0, 657, 658, 659, 719, 1249, 1286, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 0, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 1162, 0,
	0, 1630, 0, 1204, 1176, 1177, 1178, 1174, 1175, 1187,
	0, 1157, 0, 0, 0, 0, 0, 0, 1155, 1156,
	288, 289, 291, 290, 292, 293, 294, 295, 1188, 296,
	297, 0, 1186, 0, 0, 0, 1228, 1192, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 1241, 0, 308, 1248, 309, 1247, 0,
	1258, 310, 311, 312, 313, 314, 315, 1194, 1227, 1159,
	316, 1288, 1289, 680, 0, 317, 318, 1234, 0, 1215,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344,
	345, 346, 347, 348, 1251, 349, 351, 1245, 1244, 1164,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1236, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1170, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1259,
	1260, 382, 1183, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1243, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 1256, 1257,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1266, 0, 1193, 404, 0, 405, 406, 407, 408,
	409, 410, 1229, 1230, 1233, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1271, 499, 421, 1238, 1239, 0, 1199,
	0, 422, 423, 1273, 1231, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1267, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 1222,
	1221, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1161, 287, 1280, 493, 494, 495, 496, 1184, 1232,
	497, 1246, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 1261, 511, 512, 1171, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 1262, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1242, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 1172, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1225, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 1240, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1287, 616, 617, 618,
	619, 1263, 623, 624, 0, 625, 626, 1158, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1252, 1253, 1254, 1255, 0, 645, 0, 636, 637,
	638, 639, 1264, 640, 1265, 1182, 641, 642, 643, 644,
	0, 646, 647, 0, 1165, 648, 649, 651, 653, 654,
	650, 652, 655, 1226, 656, 0, 0, 657, 658, 659,
	719, 1249, 1286, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 1162, 0, 0, 1598, 0, 1204, 1176, 1177,
	1178, 1174, 1175, 1187, 0, 1157, 0, 0, 0, 0,
	0, 0, 1155, 1156, 288, 289, 291, 290, 292, 293,
	294, 295, 1188, 296, 297, 0, 1186, 0, 0, 0,
	1228, 1192, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 1241, 0, 308,
	1248, 309, 1247, 0, 1258, 310, 311, 312, 313, 314,
	315, 1194, 1227, 1159, 316, 1288, 1289, 680, 0, 317,
	318, 1234, 0, 1215, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 343, 1218, 1216, 1217, 1224,
	1220, 1219, 1223, 344, 345, 346, 347, 348, 1251, 349,
	351, 1245, 1244, 1164, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1236, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1170, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1259, 1260, 382, 1183, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1243, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1270, 391,
	392, 393, 1256, 1257, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1266, 0, 1193, 404, 0,
	405, 406, 407, 408, 409, 410, 1229, 1230, 1233, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1271, 499, 421,
	1238, 1239, 0, 1199, 0, 422, 423, 1273, 1231, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1267, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 1222, 1221, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 1161, 287, 1280, 493, 494,
	495, 496, 1184, 1232, 497, 1246, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 1261, 511, 512, 1171,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	1262, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1242, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 1172, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1225, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 1240, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1287, 616, 617, 618, 619, 1263, 623, 624, 0, 625,
	626, 1158, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1252, 1253, 1254, 1255, 0,
	645, 0, 636, 637, 638, 639, 1264, 640, 1265, 1182,
	641, 642, 643, 644, 0, 646, 647, 0, 1165, 648,
	649, 651, 653, 654, 650, 652, 655, 1226, 656, 0,
	0, 657, 658, 659, 719, 1249, 1286, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 0, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 1162, 0, 0, 1580,
	0, 1204, 1176, 1177, 1178, 1174, 1175, 1187, 0, 1157,
	0, 0, 0, 0, 0, 0, 1155, 1156, 288, 289,
	291, 290, 292, 293, 294, 295, 1188, 296, 297, 0,
	1186, 0, 0, 0, 1228, 1192, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 1241, 0, 308, 1248, 309, 1247, 0, 1258, 310,
	311, 312, 313, 314, 315, 1194, 1227, 1159, 316, 1288,
	1289, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 1251, 349, 351, 1245, 1244, 1164, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1236, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1170, 371, 372, 373, 375,
	377, 374, 1584, 378, 379, 380, 381, 1259, 1260, 382,
	1183, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1243, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 1256, 1257, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 1193, 404, 0, 405, 406, 407, 408, 409, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 1238, 1239, 0, 1199, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 1161,
	287, 1280, 493, 494, 495, 496, 1184, 1232, 497, 1246,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 1171, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1242, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	1585, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 1172, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	1240, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1287, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 1158, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 1583, 634, 0, 635, 1252,
	1253, 1254, 1255, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 1182, 641, 642, 643, 644, 0, 646,
	647, 0, 1165, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 1249,
	1286, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	1162, 0, 0, 1412, 0, 1204, 1176, 1177, 1178, 1174,
	1175, 1187, 0, 1157, 0, 0, 0, 0, 0, 0,
	1155, 1156, 288, 289, 291, 290, 292, 293, 294, 295,
	1188, 296, 297, 0, 1186, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 1241, 0, 308, 1248, 309,
	1247, 0, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 349, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 409, 410, 1229, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 1280, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 646, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 1162, 0, 0, 0, 0, 1204,
	1176, 1177, 1178, 1174, 1175, 1187, 0, 1157, 0, 0,
	0, 0, 0, 0, 1155, 1156, 288, 289, 291, 290,
	292, 293, 294, 295, 1188, 296, 297, 0, 1186, 0,
	0, 0, 1228, 1192, 0, 0, 298, 0, 299, 300,
	1268, 301, 302, 303, 304, 305, 306, 307, 673, 1241,
	0, 308, 1248, 309, 1247, 0, 1258, 310, 311, 312,
	313, 314, 315, 1194, 1227, 1159, 316, 1288, 1289, 680,
	0, 317, 318, 1234, 0, 1215, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1269, 341, 342, 343, 1218, 1216,
	1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347, 348,
	1251, 349, 351, 1245, 1244, 1164, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1236, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1170, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1259, 1260, 382, 1183, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1243, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1270, 391, 392, 393, 1256, 1257, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1266, 0, 1193,
	404, 0, 405, 406, 407, 408, 409, 410, 1229, 1230,
	1233, 498, 1272, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1271,
	499, 421, 1238, 1239, 0, 1199, 0, 422, 423, 1273,
	1231, 1274, 424, 425, 426, 1275, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1267, 1276, 438, 439, 1277, 0, 440, 441,
	442, 443, 444, 445, 448, 1222, 1221, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1278, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1279, 491, 479, 1161, 287, 1280,
	493, 494, 495, 496, 1184, 1232, 497, 1246, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 1281, 510, 1282, 1261, 511,
	512, 1171, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 1262, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1242,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1283, 568, 569, 570, 571, 572,
	1172, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1225, 596, 597, 579, 580, 598, 599,
	1284, 600, 601, 602, 603, 604, 605, 606, 1240, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1287, 616, 617, 618, 619, 1263, 623, 624,
	0, 625, 626, 1158, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1252, 1253, 1254,
	1255, 0, 645, 0, 636, 637, 638, 639, 1264, 640,
	1265, 1182, 641, 642, 643, 644, 0, 646, 647, 0,
	1165, 648, 649, 651, 653, 654, 650, 652, 655, 1226,
	656, 0, 0, 657, 658, 659, 719, 1249, 1286, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 0, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 1162, 0,
	0, 0, 0, 1204, 1176, 1177, 1178, 1174, 1175, 1187,
	0, 1157, 0, 0, 0, 0, 0, 0, 1155, 1156,
	288, 289, 291, 290, 292, 293, 294, 295, 1188, 296,
	297, 0, 1186, 0, 0, 0, 1228, 1192, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 1241, 0, 308, 1248, 309, 1247, 0,
	1258, 310, 311, 312, 313, 314, 315, 1194, 1227, 1159,
	316, 1288, 1289, 680, 0, 317, 318, 1234, 0, 1215,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 5002, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344,
	345, 346, 347, 348, 1251, 349, 351, 1245, 1244, 1164,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1236, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1170, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1259,
	1260, 382, 1183, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1243, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 1256, 1257,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1266, 0, 1193, 404, 0, 405, 406, 407, 408,
	409, 410, 1229, 1230, 1233, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1271, 499, 421, 1238, 1239, 0, 1199,
	0, 422, 423, 1273, 1231, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1267, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 1222,
	1221, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1161, 287, 1280, 493, 494, 495, 496, 1184, 1232,
	497, 1246, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 1261, 511, 512, 1171, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 1262, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1242, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 1172, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1225, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 1240, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1287, 616, 617, 618,
	619, 1263, 623, 624, 0, 625, 626, 1158, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1252, 1253, 1254, 1255, 0, 645, 0, 636, 637,
	638, 639, 1264, 640, 1265, 1182, 641, 642, 643, 644,
	0, 5001, 647, 0, 1165, 648, 649, 651, 653, 654,
	650, 652, 655, 1226, 656, 0, 0, 657, 658, 659,
	719, 1249, 1286, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 1162, 0, 0, 0, 0, 1204, 1176, 1177,
	1178, 1174, 1175, 1187, 0, 1157, 0, 0, 0, 0,
	0, 0, 1155, 1156, 288, 289, 291, 290, 292, 293,
	294, 295, 1188, 296, 297, 0, 1186, 0, 0, 0,
	1228, 1192, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 5000, 1241, 0, 308,
	1248, 309, 1247, 0, 1258, 310, 311, 312, 313, 314,
	315, 1194, 1227, 1159, 316, 1288, 1289, 680, 0, 317,
	318, 1234, 0, 1215, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 5002, 1218, 1216, 1217, 1224,
	1220, 1219, 1223, 344, 345, 346, 347, 348, 1251, 349,
	351, 1245, 1244, 1164, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1236, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1170, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1259, 1260, 382, 1183, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1243, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1270, 391,
	392, 393, 1256, 1257, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1266, 0, 1193, 404, 0,
	405, 406, 407, 408, 409, 410, 1229, 1230, 1233, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1271, 499, 421,
	1238, 1239, 0, 1199, 0, 422, 423, 1273, 1231, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1267, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 1222, 1221, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 1161, 287, 1280, 493, 494,
	495, 496, 1184, 1232, 497, 1246, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 1261, 511, 512, 1171,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	1262, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1242, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 1172, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1225, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 1240, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1287, 616, 617, 618, 619, 1263, 623, 624, 0, 625,
	626, 1158, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1252, 1253, 1254, 1255, 0,
	645, 0, 636, 637, 638, 639, 1264, 640, 1265, 1182,
	641, 642, 643, 644, 0, 5001, 647, 0, 1165, 648,
	649, 651, 653, 654, 650, 652, 655, 1226, 656, 0,
	0, 657, 658, 659, 719, 1249, 1286, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 0, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 1162, 0, 0, 0,
	0, 1204, 1176, 1177, 1178, 1174, 1175, 1187, 0, 1157,
	0, 0, 0, 0, 0, 0, 1155, 1156, 288, 289,
	291, 290, 292, 293, 294, 295, 1188, 296, 297, 0,
	1186, 0, 0, 0, 1228, 1192, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 1241, 0, 308, 1248, 309, 1247, 0, 1258, 310,
	311, 312, 313, 314, 315, 1194, 1227, 1159, 316, 1288,
	1289, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 4604, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 1251, 349, 351, 1245, 1244, 1164, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1236, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1170, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1259, 1260, 382,
	1183, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1243, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 1256, 1257, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 4605, 404, 0, 405, 406, 407, 408, 409, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 1238, 1239, 0, 1199, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 1161,
	287, 1280, 493, 494, 495, 496, 1184, 1232, 497, 1246,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 1171, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1242, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	4603, 572, 1172, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	1240, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1287, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 1158, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1252,
	1253, 1254, 1255, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 1182, 641, 642, 643, 644, 0, 646,
	647, 0, 1165, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 1249,
	1286, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	1162, 0, 0, 0, 0, 1204, 1176, 1177, 1178, 3359,
	3360, 1187, 0, 1157, 0, 0, 0, 0, 0, 0,
	1155, 1156, 288, 289, 291, 290, 292, 293, 294, 295,
	1188, 296, 297, 0, 1186, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 1241, 0, 308, 1248, 309,
	1247, 0, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 349, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 409, 410, 1229, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 1280, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 646, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 1162, 0, 0, 0, 0, 1204,
	1176, 1177, 1178, 3357, 3358, 1187, 0, 1157, 0, 0,
	0, 0, 0, 0, 1155, 1156, 288, 289, 291, 290,
	292, 293, 294, 295, 1188, 296, 297, 0, 1186, 0,
	0, 0, 1228, 1192, 0, 0, 298, 0, 299, 300,
	1268, 301, 302, 303, 304, 305, 306, 307, 673, 1241,
	0, 308, 1248, 309, 1247, 0, 1258, 310, 311, 312,
	313, 314, 315, 1194, 1227, 1159, 316, 1288, 1289, 680,
	0, 317, 318, 1234, 0, 1215, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1269, 341, 342, 343, 1218, 1216,
	1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347, 348,
	1251, 349, 351, 1245, 1244, 1164, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1236, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1170, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1259, 1260, 382, 1183, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1243, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1270, 391, 392, 393, 1256, 1257, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1266, 0, 1193,
	404, 0, 405, 406, 407, 408, 409, 410, 1229, 1230,
	1233, 498, 1272, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1271,
	499, 421, 1238, 1239, 0, 1199, 0, 422, 423, 1273,
	1231, 1274, 424, 425, 426, 1275, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1267, 1276, 438, 439, 1277, 0, 440, 441,
	442, 443, 444, 445, 448, 1222, 1221, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1278, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1279, 491, 479, 1161, 287, 1280,
	493, 494, 495, 496, 1184, 1232, 497, 1246, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 1281, 510, 1282, 1261, 511,
	512, 1171, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 1262, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1242,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1283, 568, 569, 570, 571, 572,
	1172, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1225, 596, 597, 579, 580, 598, 599,
	1284, 600, 601, 602, 603, 604, 605, 606, 1240, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1287, 616, 617, 618, 619, 1263, 623, 624,
	0, 625, 626, 1158, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1252, 1253, 1254,
	1255, 0, 645, 0, 636, 637, 638, 639, 1264, 640,
	1265, 1182, 641, 642, 643, 644, 0, 646, 647, 0,
	1165, 648, 649, 651, 653, 654, 650, 652, 655, 1226,
	656, 0, 0, 657, 658, 659, 719, 1249, 1286, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 0, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 1162, 0,
	0, 0, 0, 1204, 1176, 1177, 1178, 1174, 1175, 1187,
	0, 1157, 0, 0, 0, 0, 0, 0, 1155, 1156,
	288, 289, 291, 290, 292, 293, 294, 295, 1188, 296,
	297, 0, 1186, 0, 0, 0, 1228, 1192, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 1241, 0, 308, 1248, 309, 1247, 0,
	1258, 310, 311, 312, 313, 314, 315, 1194, 1227, 1159,
	316, 1288, 1289, 680, 0, 317, 318, 1234, 0, 1215,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344,
	345, 346, 347, 348, 1251, 349, 351, 1245, 1244, 1164,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1236, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1170, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1259,
	1260, 382, 1183, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1243, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 1256, 1257,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1266, 0, 1193, 404, 0, 405, 406, 407, 408,
	409, 410, 1229, 1230, 1233, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1271, 499, 421, 1238, 1239, 0, 1199,
	0, 422, 423, 1273, 1231, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1267, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 1222,
	1221, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 1161, 287, 1280, 493, 494, 495, 496, 1184, 1232,
	497, 1246, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 1261, 511, 512, 1171, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 1262, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1242, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 1172, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1225, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 1240, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1287, 616, 617, 618,
	619, 1263, 623, 624, 0, 625, 626, 1158, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1252, 1253, 1254, 1255, 0, 645, 0, 636, 637,
	638, 639, 1264, 640, 1265, 1182, 641, 642, 643, 644,
	0, 646, 647, 0, 1165, 648, 649, 651, 653, 654,
	650, 652, 655, 1226, 656, 0, 0, 657, 658, 659,
	719, 1249, 1286, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 1162, 0, 0, 0, 0, 1204, 1176, 1177,
	1178, 1174, 1175, 1187, 0, 1157, 0, 0, 0, 0,
	0, 0, 2602, 2603, 288, 289, 291, 290, 292, 293,
	294, 295, 1188, 296, 297, 0, 1186, 0, 0, 0,
	1228, 1192, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 1241, 0, 308,
	1248, 309, 1247, 0, 1258, 310, 311, 312, 313, 314,
	315, 1194, 1227, 0, 316, 1288, 1289, 680, 0, 317,
	318, 1234, 0, 1215, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 343, 1218, 1216, 1217, 1224,
	1220, 1219, 1223, 344, 345, 346, 347, 348, 1251, 349,
	351, 1245, 1244, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1236, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1170, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1259, 1260, 382, 1183, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1243, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1270, 391,
	392, 393, 1256, 1257, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1266, 0, 1193, 404, 0,
	405, 406, 407, 408, 409, 410, 1229, 1230, 1233, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1271, 499, 421,
	1238, 1239, 0, 1199, 0, 422, 423, 1273, 1231, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1267, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 1222, 1221, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 0, 287, 1280, 493, 494,
	495, 496, 1184, 1232, 497, 1246, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 1261, 511, 512, 1171,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	1262, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1242, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 1172, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1225, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 1240, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1287, 616, 617, 618, 619, 1263, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1252, 1253, 1254, 1255, 0,
	645, 0, 636, 637, 638, 639, 1264, 640, 1265, 1182,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 1226, 656, 0,
	0, 657, 658, 659, 719, 1249, 1286, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 0, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 1204, 1176, 1177, 1178, 1174, 1175, 1187, 0, 2861,
	0, 0, 0, 0, 0, 0, 2859, 2860, 288, 289,
	291, 290, 292, 293, 294, 295, 1188, 296, 297, 0,
	1186, 0, 0, 0, 1228, 1192, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 1241, 0, 308, 1248, 309, 1247, 0, 1258, 310,
	311, 312, 313, 314, 315, 1194, 1227, 0, 316, 1288,
	1289, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 1251, 349, 351, 1245, 1244, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1236, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1170, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1259, 1260, 382,
	1183, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1243, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 1256, 1257, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 1193, 404, 0, 405, 406, 407, 408, 409, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 1238, 1239, 0, 1199, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 0,
	287, 1280, 493, 494, 495, 496, 1184, 1232, 497, 1246,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1242, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 3352, 3353, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	1240, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1287, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1252,
	1253, 1254, 1255, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 1182, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 1249,
	1286, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 1204, 1176, 1177, 1178, 1174,
	1175, 1187, 0, 0, 0, 0, 0, 0, 0, 0,
	2238, 2239, 288, 289, 291, 290, 292, 293, 294, 295,
	1188, 296, 297, 0, 1186, 0, 0, 0, 1228, 1192,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 0, 1241, 0, 308, 1248, 309,
	1247, 0, 1258, 310, 311, 312, 313, 314, 315, 1194,
	1227, 1159, 316, 1288, 1289, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 5002, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 1251, 349, 351, 1245,
	1244, 1164, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1236, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1170,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 1183, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1243, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	1256, 1257, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 1193, 404, 0, 405, 406,
	407, 408, 409, 410, 1229, 1230, 1233, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 1238, 1239,
	0, 1199, 0, 422, 423, 0, 1231, 0, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 1161, 287, 0, 493, 494, 495, 496,
	1184, 1232, 497, 1246, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 1171, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1242, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 1172, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 1240, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1287, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 1158,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1252, 1253, 1254, 1255, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 1182, 641, 642,
	643, 644, 0, 5001, 647, 0, 1165, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 1249, 1286, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 1148, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1155, 1156, 288, 289, 291, 290,
	292, 293, 294, 295, 1188, 296, 297, 0, 1186, 0,
	0, 0, 1228, 0, 0, 0, 298, 0, 299, 300,
	1268, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 1227, 0, 316, 678, 679, 680,
	0, 317, 318, 1234, 0, 1215, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1269, 341, 342, 343, 1218, 1216,
	1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1259, 1260, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1270, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1266, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 1229, 1230,
	1233, 498, 1272, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1271,
	499, 421, 695, 696, 0, 697, 0, 422, 423, 1273,
	1231, 1274, 424, 425, 426, 1275, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 1312, 434, 436, 435,
	0, 437, 1267, 1276, 438, 439, 1277, 0, 440, 441,
	442, 443, 444, 445, 448, 1222, 1221, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1278, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1279, 491, 479, 0, 287, 1280,
	493, 494, 495, 496, 0, 1232, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 1318, 505, 506, 507,
	0, 0, 508, 509, 702, 1281, 510, 1282, 1261, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 1262, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1283, 568, 569, 570, 571, 572,
	709, 1320, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 244, 591, 592, 590,
	593, 594, 595, 1225, 596, 597, 579, 580, 598, 599,
	1284, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 1263, 623, 624,
	0, 625, 626, 0, 622, 613, 246, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 713, 714, 715,
	716, 0, 645, 0, 636, 637, 638, 639, 1264, 640,
	1265, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 1226,
	656, 0, 0, 657, 658, 659, 1723, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 0, 0,
	1326, 238, 667, 668, 723, 669, 670, 671, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 1228, 0, 0, 1316, 298, 2080, 299,
	300, 1268, 301, 302, 303, 304, 305, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 1227, 0, 316, 678, 679,
	680, 0, 317, 318, 1234, 0, 1215, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1269, 341, 342, 343, 1218,
	1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1259, 1260, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1270, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1266, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 1229,
	1230, 1233, 498, 1272, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1271, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	1273, 1231, 1274, 424, 425, 426, 1275, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 1312, 434, 436,
	435, 0, 437, 1267, 1276, 438, 439, 1277, 0, 440,
	441, 442, 443, 444, 445, 448, 1222, 1221, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1278, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1279, 491, 479, 0, 287,
	1280, 493, 494, 495, 496, 0, 1232, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 1318, 505, 506,
	507, 0, 0, 508, 509, 702, 1281, 510, 1282, 1261,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 1262, 530, 707, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 1283, 568, 569, 570, 571,
	572, 709, 1320, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 244, 591, 592,
	590, 593, 594, 595, 1225, 596, 597, 579, 580, 598,
	599, 1284, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 1263, 623,
	624, 0, 625, 626, 0, 622, 613, 246, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 713, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 1264,
	640, 1265, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	1226, 656, 0, 0, 657, 658, 659, 1723, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 3516,
	0, 1326, 238, 667, 668, 723, 669, 670, 671, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 1228, 0, 0, 1316, 298, 2080,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 1227, 0, 316, 678,
	679, 680, 0, 317, 318, 1234, 0, 1215, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1259, 1260, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1266,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	1229, 1230, 1233, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1271, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 1273, 1231, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 1312, 434,
	436, 435, 0, 437, 1267, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 1222, 1221, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 0,
	287, 1280, 493, 494, 495, 496, 0, 1232, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 1318, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	1261, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 1262, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 709, 1320, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1225, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 1263,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	1264, 640, 1265, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 1226, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	1308, 0, 1326, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 1228, 0, 0, 1316, 298,
	1314, 299, 300, 1268, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 1227, 0, 316,
	678, 679, 680, 0, 317, 318, 1234, 0, 1215, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1269, 341, 342,
	343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1259, 1260,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1270, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1266, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 1229, 1230, 1233, 498, 1272, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1271, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 1273, 1231, 1274, 424, 425, 426, 1275, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 1312,
	434, 436, 435, 0, 437, 1267, 1276, 438, 439, 1277,
	0, 440, 441, 442, 443, 444, 445, 448, 1222, 1221,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1278,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1279, 491, 479,
	0, 287, 1280, 493, 494, 495, 496, 0, 1232, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 1318,
	505, 506, 507, 0, 0, 508, 509, 702, 1281, 510,
	1282, 1261, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 1262, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1283, 568, 569,
	570, 571, 572, 709, 1320, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 1225, 596, 597, 579,
	580, 598, 599, 1284, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	1263, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 1264, 640, 1265, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 1226, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 0, 0, 1326, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 1228, 0, 0, 1316,
	298, 1314, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 1227, 0,
	316, 678, 679, 680, 0, 317, 318, 1234, 0, 1215,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1259,
	1260, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1266, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 1229, 1230, 1233, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1271, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 1273, 1231, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	1312, 434, 436, 435, 0, 437, 1267, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 1222,
	1221, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 0, 287, 1280, 493, 494, 495, 496, 0, 1232,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	1318, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 1261, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 1262, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 709, 1320, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1225, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 1263, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 1264, 640, 1265, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 1226, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 1326, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 1228, 0, 0,
	1316, 298, 1314, 299, 300, 1268, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 1227,
	0, 316, 678, 679, 680, 0, 317, 318, 1234, 0,
	1215, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1269,
	341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1259, 1260, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1270, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1266, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 1229, 1230, 1233, 498, 1272, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1271, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 1273, 1231, 1274, 424, 425, 426,
	1275, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1267, 1276, 438,
	439, 1277, 0, 440, 441, 442, 443, 444, 445, 448,
	1222, 1221, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1278, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1279,
	491, 479, 0, 287, 1280, 493, 494, 495, 496, 0,
	1232, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	1281, 510, 1282, 1261, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 1262, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 1283,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 1225, 596,
	597, 579, 580, 598, 599, 1284, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 1263, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 1264, 640, 1265, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 1226, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 0, 0, 1326, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 1228, 0,
	0, 0, 298, 4418, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	1227, 0, 316, 678, 679, 680, 0, 317, 318, 1234,
	0, 1215, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219,
	1223, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1259, 1260, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1266, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 1229, 1230, 1233, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1271, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 1273, 1231, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1267, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 1222, 1221, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 0, 287, 1280, 493, 494, 495, 496,
	0, 1232, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 1261, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 1262, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 709, 1320, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1225,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 1263, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 1264, 640, 1265, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 1226, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 282, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 2706, 2707, 2708, 2725,
	2726, 2727, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 2728, 0, 672,
	0, 0, 0, 298, 1977, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 1962, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 2718, 0, 327, 328, 329, 326, 330, 0, 331,
	2714, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 0, 0, 2719, 2720,
	2721, 2722, 383, 384, 385, 687, 0, 0, 2713, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 692, 693, 694, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 0, 698, 0, 424,
	425, 426, 0, 427, 0, 2723, 2724, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 2716, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 702, 0, 510, 0, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 709, 573, 2717,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	1961, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 0, 0, 0, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 1148, 0, 1605, 2703, 2704, 2705, 2729, 2715,
	2709, 0, 2711, 2712, 2710, 2697, 2698, 2699, 2700, 2701,
	2702, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 298, 0, 299, 300, 1268, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	1569, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1269,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1270, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 1272, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 1271, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 1273, 698, 1274, 424, 425, 426,
	1275, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 1276, 438,
	439, 1277, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1278, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1279,
	491, 479, 0, 0, 1280, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	1281, 510, 1282, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 1283,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 244, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 1284, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 246, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 1723, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 1720, 0, 1605, 238, 667, 668, 723,
	669, 670, 671, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 199, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 1569, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 1271, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 1273, 698, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 0, 0, 1280, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 244, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 246, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 1723, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 238, 667, 668,
	723, 669, 670, 671, 1605, 1604, 239, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 199, 0, 0, 672, 0, 0,
	0, 298, 0, 299, 300, 1268, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	1569, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1269,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1270, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 1272, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 1271, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 1273, 698, 1274, 424, 425, 426,
	1275, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 1276, 438,
	439, 1277, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1278, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1279,
	491, 479, 0, 0, 1280, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	1281, 510, 1282, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 1283,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 1284, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 0, 0, 0, 0, 667, 668, 723,
	669, 670, 671, 1605, 1604, 0, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 1747, 0, 0, 672, 0, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 1569,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 1271, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 1273, 698, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 0, 0, 1280, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 1281,
	510, 1282, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 1605, 1604, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 3841, 0, 0, 672, 0, 0, 0, 298,
	0, 299, 300, 1268, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 1569, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1269, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1270, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 1272, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 1271, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 1273, 698, 1274, 424, 425, 426, 1275, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 1276, 438, 439, 1277,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1278,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1279, 491, 479,
	0, 0, 1280, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 1281, 510,
	1282, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 2468, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1283, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 1284, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 0, 0, 0, 0, 667, 668, 723, 669, 670,
	671, 1605, 2377, 0, 0, 0, 0, 2378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 1747, 0, 0, 672, 0, 0, 0, 298, 0,
	299, 300, 1268, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 1569, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1269, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1270, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 1272, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 1271, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 1273, 698, 1274, 424, 425, 426, 1275, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 2376,
	436, 435, 0, 437, 699, 1276, 438, 439, 1277, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1278, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1279, 491, 479, 0,
	0, 1280, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 1281, 510, 1282,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1283, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 1284, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	1605, 1604, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	1747, 0, 0, 672, 0, 0, 0, 298, 0, 299,
	300, 1268, 301, 302, 303, 304, 305, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 678, 679,
	680, 0, 317, 318, 681, 0, 1569, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1269, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 685, 686, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1270, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 690, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 692,
	693, 694, 498, 1272, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	1271, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	1273, 698, 1274, 424, 425, 426, 1275, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 699, 1276, 438, 439, 1277, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1278, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1279, 491, 479, 0, 0,
	1280, 493, 494, 495, 496, 0, 700, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 702, 1281, 510, 1282, 703,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 706, 530, 707, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 1283, 568, 569, 570, 571,
	572, 709, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 1284, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 712, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 713, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 717,
	640, 718, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 719, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 1148,
	0, 282, 0, 667, 668, 723, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 298, 1729,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 244, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 246, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 1723, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 282, 238, 667, 668, 723, 669, 670, 671,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	199, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 0, 0, 282, 3134, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	298, 2094, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 0, 0, 1326, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 1228, 0, 0,
	0, 298, 5169, 299, 300, 1268, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 1227,
	0, 316, 678, 679, 680, 0, 317, 318, 1234, 0,
	1215, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1269,
	341, 342, 343, 1218, 1216, 1217, 1224, 1220, 1219, 1223,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1259, 1260, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1270, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1266, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 1229, 1230, 1233, 498, 1272, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1271, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 1273, 1231, 1274, 424, 425, 426,
	1275, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1267, 1276, 438,
	439, 1277, 0, 440, 441, 442, 443, 444, 445, 448,
	1222, 1221, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1278, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1279,
	491, 479, 0, 287, 1280, 493, 494, 495, 496, 0,
	1232, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	1281, 510, 1282, 1261, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 1262, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 1283,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 1225, 596,
	597, 579, 580, 598, 599, 1284, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 1263, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 1264, 640, 1265, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 1226, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 282, 0, 0, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 287, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 282, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	3794, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 282, 0, 0, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 298, 1717,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 282, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	3254, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 0, 0, 282, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	298, 3951, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 973, 0, 873, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 298, 2455, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 880, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 970, 0, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 0, 698, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	0, 510, 0, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 972, 0, 622,
	613, 878, 627, 628, 629, 630, 631, 879, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 2139, 0, 0, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 883, 0, 0, 0, 0,
	298, 0, 299, 300, 1268, 301, 302, 303, 304, 305,
	306, 307, 0, 2145, 0, 308, 2135, 309, 2151, 0,
	2158, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 2161, 2162, 0, 0, 317, 318, 0, 0, 1569,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1269, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 1251, 349, 351, 2149, 2148, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1236, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 0, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 0,
	0, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 2147, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1270, 391, 392, 393, 2156, 2157,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 0, 0, 0, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 0, 0, 498, 1272, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 1271, 499, 421, 2142, 2143, 0, 2138,
	0, 422, 423, 1273, 0, 1274, 424, 425, 426, 1275,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 0, 1276, 438, 439,
	1277, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1278, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1279, 491,
	479, 0, 0, 1280, 493, 494, 495, 496, 0, 0,
	497, 2150, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 0, 1281,
	510, 1282, 0, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 2132, 524,
	525, 526, 2133, 527, 528, 529, 0, 530, 0, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 2146, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1283, 568,
	569, 570, 571, 572, 0, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 1284, 600, 601, 602, 603, 604,
	605, 606, 2144, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 2160, 616, 617, 618,
	619, 0, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 2152, 2153, 2154, 2155, 0, 645, 0, 636, 637,
	638, 639, 0, 640, 0, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	0, 2136, 2159, 0, 661, 660, 662, 663, 664, 0,
	665, 666, 0, 0, 0, 873, 667, 668, 0, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	4071, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 2126, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 880, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 0, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 0, 698, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 287, 0, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 0, 510, 0, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 4070, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 878, 627, 628, 629, 630, 631, 879, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	4069, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 873, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 2166,
	296, 297, 0, 0, 0, 0, 883, 672, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 880, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 0, 698, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	0, 510, 0, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 2165, 586, 587, 588,
	589, 0, 2167, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 878, 627, 628, 629, 630, 631, 879, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 2164,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 873, 0, 0, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 2117, 296,
	297, 0, 0, 0, 0, 883, 672, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 880, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 287, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 2116, 586, 587, 588, 589,
	0, 2118, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	878, 627, 628, 629, 630, 631, 879, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 2115, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 871, 0, 873, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 883, 0, 0, 672, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 880, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 0, 698, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	0, 510, 0, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 878, 627, 628, 629, 630, 631, 879, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 873, 0, 0, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 883, 672, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 880, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 287, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	878, 627, 628, 629, 630, 631, 879, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 873, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 883, 672, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 880, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 2507, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 2508, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 878,
	627, 628, 629, 630, 631, 879, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 2509, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 282, 0, 0, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 883, 672, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	0, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 1605, 1604, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 883, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 1268, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 1569, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1269, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1270, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 692, 693, 694, 498, 1272,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 1271, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 1273, 698, 1274, 424,
	425, 426, 1275, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	1276, 438, 439, 1277, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1278, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1279, 491, 479, 0, 0, 1280, 493, 494, 495,
	496, 4171, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 702, 1281, 510, 1282, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1283, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 1284, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 0, 0, 0, 0, 667,
	668, 723, 669, 670, 671, 1605, 1604, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 1569, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 1271, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 1273, 698, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 0, 0, 1280, 493, 494, 495, 496,
	3744, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 0, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 1778, 0, 1605, 1604, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 1268, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 1569, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1269, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 285, 0, 0, 0,
	0, 0, 1777, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1270, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 692, 693, 694, 498, 1272,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 1271, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 1273, 698, 1274, 424,
	425, 426, 1275, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	1276, 438, 439, 1277, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1278, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1279, 491, 479, 0, 0, 1280, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 702, 1281, 510, 1282, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 1776, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1283, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 1775,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 1284, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 0, 0, 0, 0, 667,
	668, 723, 669, 670, 671, 1650, 0, 1605, 1604, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 1569, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1270, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 1652, 693, 694, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 1271, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 1273, 698, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 0, 0, 1280, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 0, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 1600, 0, 1605, 1604,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 1268,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 1569, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1269, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1270,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 1272, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 1271, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 1273, 698,
	1274, 424, 425, 426, 1275, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 1276, 438, 439, 1277, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1278, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1279, 491, 479, 0, 0, 1280, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 1281, 510, 1282, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 1283, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 1284,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 0, 0, 0,
	0, 667, 668, 723, 669, 670, 671, 1605, 1604, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 1268, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 1569, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1269, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1270, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 692, 693, 694, 498,
	1272, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 1271, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 1273, 698, 1274,
	424, 425, 426, 1275, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 1276, 438, 439, 1277, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1278, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1279, 491, 479, 0, 0, 1280, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 1281, 510, 1282, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1283, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 1284, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 1605, 1604, 0, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 1268, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 1569, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1269, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1270, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 692, 693, 694, 498, 1272,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 1271, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 1273, 698, 1274, 424,
	425, 426, 1275, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	1276, 438, 439, 1277, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1278, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1279, 491, 479, 0, 0, 1280, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 702, 1281, 510, 1282, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1283, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 1284, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 1605, 0, 0, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 1268, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 1569, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1269, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1270, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 1272, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 1271, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 1273, 698, 1274, 424, 425,
	426, 1275, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 1276,
	438, 439, 1277, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1278, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1279, 491, 479, 0, 0, 1280, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 1281, 510, 1282, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1283, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 1284, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 282, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 3039, 317, 318, 681, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 3786, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 3043, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 3785, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 3042, 390, 0, 0, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 3782,
	418, 419, 420, 0, 0, 499, 421, 695, 696, 0,
	697, 0, 422, 3784, 0, 698, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 0, 438,
	439, 3781, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	0, 510, 0, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 3041, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 3783, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 282, 0, 0, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 3039, 317, 318, 681, 0, 0,
	3033, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 3035, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 3043, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 3042, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 3032, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 3041, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 3040, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 1857, 0, 282, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 1856,
	296, 297, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 1855, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 0, 698, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	0, 510, 0, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 1858, 577, 578, 585, 586, 587, 588,
	589, 0, 1854, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 1852, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 1853, 660, 662, 663, 664,
	722, 665, 666, 1573, 0, 282, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 1575, 693, 694, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 0, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 0, 698, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 287, 0, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 1318, 505, 506, 507, 0, 0, 508, 509,
	702, 0, 510, 0, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 1570, 0, 282, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 1572, 693, 694, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 0, 698, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 1318, 505, 506, 507, 0, 0, 508,
	509, 702, 0, 510, 0, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 1476, 0, 282, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 1478, 693, 694, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 0, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 0, 698, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 287, 0, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 1318, 505, 506, 507, 0, 0,
	508, 509, 702, 0, 510, 0, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 756, 0, 282, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	755, 294, 295, 744, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 747,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 753, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 749, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 743, 0, 282,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 744, 296, 297, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 678, 679, 680,
	0, 317, 318, 681, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	747, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 685, 686, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 748, 403, 690, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 692, 693,
	694, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 695, 696, 0, 697, 0, 422, 423, 0,
	698, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 699, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 700, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 0, 510, 0, 703, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 706, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	709, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 749, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 712, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 713, 714, 715,
	716, 0, 645, 0, 636, 637, 638, 639, 717, 640,
	718, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 719, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 282, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 744, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 747,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 748, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 749, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 282, 0, 0,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 744, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 747, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 4181, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 692, 693, 694, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 0, 698, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 0, 510, 0, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 749, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 282, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 692, 693, 694, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 0, 698, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 1318, 505, 506, 507, 0, 0, 508,
	509, 702, 0, 510, 0, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 282, 0, 0, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 0, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 0, 698, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	3684, 491, 479, 0, 287, 0, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 0, 510, 0, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 3224, 0, 282, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 3223, 693, 694, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 0, 698, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 702, 0, 510, 0, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 282, 0, 0, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 0, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 0, 698, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 287, 0, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 0, 510, 0, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 2413, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 2476, 0, 282, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 692, 693, 694, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 0, 698, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 702, 0, 510, 0, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 2420, 0, 282, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 2419, 693, 694, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 0, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 0, 698, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 287, 0, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 0, 510, 0, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 2406, 0, 282, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 2408, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 287, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 282, 0, 0,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 2370, 693, 694, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 0, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 0, 698, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 287, 0, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 1318, 505, 506, 507, 0, 0,
	508, 509, 702, 0, 510, 0, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 1695, 0, 282, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 1694, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 287, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 1593, 0, 282,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 678, 679, 680,
	0, 317, 318, 681, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 685, 686, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 690, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 692, 693,
	694, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 695, 696, 0, 697, 0, 422, 423, 0,
	698, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 699, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 700, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 0, 510, 0, 703, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 706, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	709, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 712, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 713, 714, 715,
	716, 0, 645, 0, 636, 637, 638, 639, 717, 640,
	718, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 719, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 1586, 0,
	282, 0, 667, 668, 723, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 678, 679,
	680, 0, 317, 318, 681, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 685, 686, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 690, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 1588,
	693, 694, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	0, 698, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 699, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 496, 0, 700, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 702, 0, 510, 0, 703,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 706, 530, 707, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 709, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 712, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 713, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 717,
	640, 718, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 719, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 1395,
	0, 282, 0, 667, 668, 723, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	1394, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	1385, 0, 282, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 1384, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 1382, 0, 282, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 1381, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 287, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 1377, 0, 282, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 1376, 693, 694, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 0, 698, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	0, 510, 0, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 725, 0, 282, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 0, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 0, 698, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 287, 0, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 0, 510, 0, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 273, 0, 282, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 692, 693, 694, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 0, 698, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 702, 0, 510, 0, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 282, 0, 0, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 0, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 0, 698, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 287, 0, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 0, 510, 0, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 282, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 747, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	748, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 0, 698, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	0, 510, 0, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 749, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 282, 0, 0, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 2516, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 287, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 282, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 2514, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 282, 0, 0, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	2512, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	282, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 678, 679,
	680, 0, 317, 318, 681, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 685, 686, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 690, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 2426,
	693, 694, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	0, 698, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 699, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 496, 0, 700, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 702, 0, 510, 0, 703,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 706, 530, 707, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 709, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 712, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 713, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 717,
	640, 718, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 719, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 282,
	0, 0, 0, 667, 668, 723, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 678, 679, 680,
	0, 317, 318, 681, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 685, 686, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 690, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 2191, 693,
	694, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 695, 696, 0, 697, 0, 422, 423, 0,
	698, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 699, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 700, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 0, 510, 0, 703, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 706, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	709, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 712, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 713, 714, 715,
	716, 0, 645, 0, 636, 637, 638, 639, 717, 640,
	718, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 719, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 282, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 2185, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 287, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 957, 0, 282,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 678, 679, 680,
	0, 317, 318, 681, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 685, 686, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 690, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 692, 693,
	694, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 695, 696, 0, 697, 956, 422, 423, 0,
	698, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 699, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 700, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 0, 510, 0, 703, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 706, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	709, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 712, 623, 624,
	0, 625, 626, 0, 622, 613, 955, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 713, 714, 715,
	716, 0, 645, 0, 636, 637, 638, 639, 717, 640,
	718, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 719, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 828, 0,
	282, 0, 667, 668, 723, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 834, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 843, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 678, 679,
	680, 0, 317, 318, 681, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 685, 686, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 836, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 842,
	838, 0, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 690, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 692,
	693, 694, 498, 0, 411, 412, 839, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	0, 698, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 837, 0, 434, 436,
	435, 0, 437, 699, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 840, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 700, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 702, 0, 510, 0, 703,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 706, 530, 707, 531, 532, 0, 841,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 835, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 709, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 712, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 713, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 717,
	640, 718, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 719, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 282,
	0, 0, 0, 667, 668, 723, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 678, 679, 680,
	0, 317, 318, 681, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 685, 686, 382, 0, 3785,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 690, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 692, 693,
	694, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 695, 696, 0, 697, 0, 422, 423, 0,
	698, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 699, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 700, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 0, 510, 0, 703, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 706, 530, 707, 531, 532, 4501, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	709, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 712, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 713, 714, 715,
	716, 0, 645, 0, 636, 637, 638, 639, 717, 640,
	718, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 719, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 1423, 0,
	282, 0, 667, 668, 723, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 298, 0, 299,
	300, 1426, 301, 302, 303, 304, 305, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 678, 679,
	1424, 0, 317, 318, 681, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 685, 686, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 690, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 692,
	693, 694, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	0, 698, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 699, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 816, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 700, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 702, 0, 510, 0, 703,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 706, 530, 707, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 815, 569, 570, 571,
	572, 709, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 814, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 1427, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 712, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 812, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 717,
	640, 718, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 719, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 1423,
	0, 282, 0, 667, 668, 723, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 298, 0,
	299, 300, 1426, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 1424, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 816, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 815, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 814, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 1427, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 812,
	714, 715, 716, 0, 645, 0, 636, 1425, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	823, 0, 282, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 821, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 734, 0, 282, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 733, 296,
	297, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 732,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 282, 3134, 0, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 282, 0, 0, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 4799,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	282, 3625, 0, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 678, 679,
	680, 0, 317, 318, 681, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 685, 686, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 690, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 692,
	693, 694, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	0, 698, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 699, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 700, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 702, 0, 510, 0, 703,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 706, 530, 707, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 709, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 712, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 713, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 717,
	640, 718, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 719, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 282,
	0, 0, 0, 667, 668, 723, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 678, 679, 680,
	0, 317, 318, 681, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 685, 686, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 690, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 692, 693,
	694, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 695, 696, 0, 697, 0, 422, 423, 0,
	698, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 699, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 700, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 0, 510, 0, 703, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 706, 530, 707, 531, 532, 4390, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	709, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 712, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 713, 714, 715,
	716, 0, 645, 0, 636, 637, 638, 639, 717, 640,
	718, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 719, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 282, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 4128, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 282, 0, 0,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 2914, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 692, 693, 694, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 0, 698, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 0, 510, 0, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 282, 3134, 0, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 692, 693, 694, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 0, 698, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 3263, 0, 0, 508,
	509, 702, 0, 510, 0, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 282, 0, 0, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 0, 698, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 0, 510, 0, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 2321, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 815, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 814, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 812, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 282, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 2486,
	296, 297, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 0, 698, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	0, 510, 0, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 2474, 0, 282, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 0, 698, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 0, 510, 0, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 1751, 0, 282, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 692, 693, 694, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 0, 698, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 702, 0, 510, 0, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 1743, 0, 282, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 692, 693, 694, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 0, 698, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 0, 510, 0, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 806, 0, 282, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 802, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 807, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 816, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 815, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	814, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	1728, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 812, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 1701, 0, 282,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 678, 679, 680,
	0, 317, 318, 681, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 685, 686, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 690, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 1700, 693,
	694, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 695, 696, 0, 697, 0, 422, 423, 0,
	698, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 699, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 700, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 0, 510, 0, 703, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 706, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	709, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 712, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 713, 714, 715,
	716, 0, 645, 0, 636, 637, 638, 639, 717, 640,
	718, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 719, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 1685, 0,
	282, 0, 667, 668, 723, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 678, 679,
	680, 0, 317, 318, 681, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 685, 686, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 690, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 1683,
	693, 694, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	0, 698, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 699, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 700, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 702, 0, 510, 0, 703,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 706, 530, 707, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 709, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 712, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 713, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 717,
	640, 718, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 719, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 1678,
	0, 282, 0, 667, 668, 723, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	1655, 0, 282, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 1653, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 1648, 0, 282, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 1610, 0, 282, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 692, 693, 694, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 0, 698, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	0, 510, 0, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 1578, 0, 282, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 692, 693, 694, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 0, 698, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 0, 510, 0, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 1429, 0, 282, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 692, 693, 694, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 0, 698, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 702, 0, 510, 0, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 815, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 814, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 812, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 1400, 0, 282, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 1399, 693, 694, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 0, 698, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 0, 510, 0, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 1391, 0, 282, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 1390, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 282, 0, 0,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 1343, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 692, 693, 694, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 0, 698, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 0, 510, 0, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 826, 0, 282, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 806, 0, 282,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 678, 679, 680,
	0, 317, 802, 681, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 801, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 685, 686, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 690, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 692, 693,
	694, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 695, 696, 0, 697, 0, 422, 423, 0,
	698, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 699, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 807, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 816, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 700, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 0, 510, 0, 703, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 706, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 815, 569, 570, 571, 572,
	803, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 814, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 804, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 712, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 812, 714, 715,
	716, 0, 645, 0, 636, 808, 638, 639, 717, 640,
	718, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 719, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 795, 0,
	282, 0, 667, 668, 723, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 678, 679,
	680, 0, 317, 318, 681, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 685, 686, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 690, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 692,
	693, 694, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	0, 698, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 699, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 700, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 702, 0, 510, 0, 703,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 706, 530, 707, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 709, 573, 0, 574, 575, 796, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 712, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 713, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 717,
	640, 718, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 719, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 758,
	0, 282, 0, 667, 668, 723, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	751, 0, 282, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 729, 0, 282, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 692, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 282, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 692, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 282, 0, 0, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	3814, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	282, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 678, 679,
	680, 0, 317, 318, 681, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 685, 686, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 690, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 692,
	693, 694, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	0, 698, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 699, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 700, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 702, 0, 510, 0, 703,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 706, 530, 707, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 815, 569, 570, 571,
	572, 709, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 814, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 712, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 812, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 717,
	640, 718, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 719, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 282,
	0, 0, 0, 667, 668, 723, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 678, 679, 680,
	0, 317, 318, 681, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 685, 686, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 690, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 3724, 693,
	694, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 695, 696, 0, 697, 0, 422, 423, 0,
	698, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 699, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 700, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 0, 510, 0, 703, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 706, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	709, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 712, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 713, 714, 715,
	716, 0, 645, 0, 636, 637, 638, 639, 717, 640,
	718, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 719, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 282, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 3700, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 282, 0, 0,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 404, 0,
	405, 406, 407, 408, 409, 410, 3697, 693, 694, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 0, 698, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 0, 510, 0, 703, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 709, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 282, 0, 0, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 673, 674, 0, 308, 675,
	309, 676, 0, 677, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 678, 679, 680, 0, 317, 318,
	681, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	682, 683, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	684, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 685, 686, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 687, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 688, 689, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 690, 0, 691, 404, 0, 405,
	406, 407, 408, 409, 410, 3649, 693, 694, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 499, 421, 695,
	696, 0, 697, 0, 422, 423, 0, 698, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 699,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	496, 0, 700, 497, 701, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 702, 0, 510, 0, 703, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 704, 524, 525, 526, 705, 527, 528, 529, 706,
	530, 707, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 708, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 709, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 710, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 711,
	616, 617, 618, 619, 712, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 713, 714, 715, 716, 0, 645,
	0, 636, 637, 638, 639, 717, 640, 718, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	651, 653, 654, 650, 652, 655, 0, 656, 0, 0,
	657, 658, 659, 719, 720, 721, 0, 661, 660, 662,
	663, 664, 722, 665, 666, 282, 0, 0, 0, 667,
	668, 723, 669, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 673, 674, 0, 308, 675, 309,
	676, 0, 677, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 678, 679, 680, 0, 317, 318, 681,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 682,
	683, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 684,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 685, 686, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 687, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	688, 689, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 690, 0, 691, 404, 0, 405, 406,
	407, 408, 409, 410, 3647, 693, 694, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 499, 421, 695, 696,
	0, 697, 0, 422, 423, 0, 698, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 699, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 496,
	0, 700, 497, 701, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	702, 0, 510, 0, 703, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	704, 524, 525, 526, 705, 527, 528, 529, 706, 530,
	707, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 708, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 709, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 710, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 711, 616,
	617, 618, 619, 712, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 713, 714, 715, 716, 0, 645, 0,
	636, 637, 638, 639, 717, 640, 718, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 651,
	653, 654, 650, 652, 655, 0, 656, 0, 0, 657,
	658, 659, 719, 720, 721, 0, 661, 660, 662, 663,
	664, 722, 665, 666, 282, 0, 0, 0, 667, 668,
	723, 669, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 673, 674, 0, 308, 675, 309, 676,
	0, 677, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 678, 679, 680, 0, 317, 318, 681, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 682, 683,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 684, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	685, 686, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 687, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 688,
	689, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 690, 0, 691, 404, 0, 405, 406, 407,
	408, 409, 410, 3635, 693, 694, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 499, 421, 695, 696, 0,
	697, 0, 422, 423, 0, 698, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 699, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 496, 0,
	700, 497, 701, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 702,
	0, 510, 0, 703, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 704,
	524, 525, 526, 705, 527, 528, 529, 706, 530, 707,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 708, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 709, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 710, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 711, 616, 617,
	618, 619, 712, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 713, 714, 715, 716, 0, 645, 0, 636,
	637, 638, 639, 717, 640, 718, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 651, 653,
	654, 650, 652, 655, 0, 656, 0, 0, 657, 658,
	659, 719, 720, 721, 0, 661, 660, 662, 663, 664,
	722, 665, 666, 282, 0, 0, 0, 667, 668, 723,
	669, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 673, 674, 0, 308, 675, 309, 676, 0,
	677, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 678, 679, 680, 0, 317, 318, 681, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 682, 683, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 684, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 685,
	686, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 687, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 688, 689,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 690, 0, 691, 404, 0, 405, 406, 407, 408,
	409, 410, 3632, 693, 694, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 695, 696, 0, 697,
	0, 422, 423, 0, 698, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 699, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 700,
	497, 701, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 702, 0,
	510, 0, 703, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 704, 524,
	525, 526, 705, 527, 528, 529, 706, 530, 707, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 708, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 709, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 710, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 711, 616, 617, 618,
	619, 712, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 713, 714, 715, 716, 0, 645, 0, 636, 637,
	638, 639, 717, 640, 718, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 651, 653, 654,
	650, 652, 655, 0, 656, 0, 0, 657, 658, 659,
	719, 720, 721, 0, 661, 660, 662, 663, 664, 722,
	665, 666, 282, 0, 0, 0, 667, 668, 723, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 673, 674, 0, 308, 675, 309, 676, 0, 677,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	678, 679, 680, 0, 317, 318, 681, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 682, 683, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 684, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 685, 686,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 687, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 688, 689, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	690, 0, 691, 404, 0, 405, 406, 407, 408, 409,
	410, 3234, 693, 694, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 499, 421, 695, 696, 0, 697, 0,
	422, 423, 0, 698, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 699, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 496, 0, 700, 497,
	701, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 702, 0, 510,
	0, 703, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 704, 524, 525,
	526, 705, 527, 528, 529, 706, 530, 707, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 708, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 709, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 710, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 711, 616, 617, 618, 619,
	712, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	713, 714, 715, 716, 0, 645, 0, 636, 637, 638,
	639, 717, 640, 718, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 719,
	720, 721, 0, 661, 660, 662, 663, 664, 722, 665,
	666, 282, 0, 0, 0, 667, 668, 723, 669, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	673, 674, 0, 308, 675, 309, 676, 0, 677, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 678,
	679, 680, 0, 317, 318, 681, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 682, 683, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 684, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 685, 686, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	687, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 688, 689, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 690,
	0, 691, 404, 0, 405, 406, 407, 408, 409, 410,
	692, 693, 694, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 695, 696, 0, 697, 0, 422,
	423, 0, 698, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 699, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 700, 497, 701,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 702, 0, 510, 0,
	703, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 704, 524, 525, 526,
	705, 527, 528, 529, 706, 530, 707, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 708, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 709, 573, 0, 574, 575, 796, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	710, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 711, 616, 617, 618, 619, 712,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 713,
	714, 715, 716, 0, 645, 0, 636, 637, 638, 639,
	717, 640, 718, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 719, 720,
	721, 0, 661, 660, 662, 663, 664, 722, 665, 666,
	282, 0, 0, 0, 667, 668, 723, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 672, 0, 2444, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 673,
	674, 0, 308, 675, 309, 676, 0, 677, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 678, 679,
	680, 0, 317, 318, 681, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 682, 683, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 684, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 685, 686, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 687,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 688, 689, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 690, 0,
	691, 404, 0, 405, 406, 407, 408, 409, 410, 692,
	693, 694, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 695, 696, 0, 697, 0, 422, 423,
	0, 698, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 699, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 700, 497, 701, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 702, 0, 510, 0, 703,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 704, 524, 525, 526, 705,
	527, 528, 529, 706, 530, 707, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	708, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 709, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 0, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 710,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 711, 616, 617, 618, 619, 712, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 713, 714,
	715, 716, 0, 645, 0, 636, 637, 638, 639, 717,
	640, 718, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 719, 720, 721,
	0, 661, 660, 662, 663, 664, 722, 665, 666, 282,
	0, 0, 0, 667, 668, 723, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 673, 674,
	0, 308, 675, 309, 676, 0, 677, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 678, 679, 680,
	0, 317, 318, 681, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 682, 683, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 684, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 685, 686, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 687, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 688, 689, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 690, 0, 691,
	404, 0, 405, 406, 407, 408, 409, 410, 1362, 693,
	694, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 695, 696, 0, 697, 0, 422, 423, 0,
	698, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 699, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 700, 497, 701, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 702, 0, 510, 0, 703, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 704, 524, 525, 526, 705, 527,
	528, 529, 706, 530, 707, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 708,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	709, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 710, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 711, 616, 617, 618, 619, 712, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 713, 714, 715,
	716, 0, 645, 0, 636, 637, 638, 639, 717, 640,
	718, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 719, 720, 721, 0,
	661, 660, 662, 663, 664, 722, 665, 666, 282, 0,
	0, 0, 667, 668, 723, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 673, 674, 0,
	308, 675, 309, 676, 0, 677, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 678, 679, 680, 0,
	317, 318, 681, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 682, 683, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 684, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 685, 686, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 687, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 688, 689, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 690, 0, 691, 404,
	0, 405, 406, 407, 408, 409, 410, 692, 693, 694,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 499,
	421, 695, 696, 0, 697, 0, 422, 423, 0, 698,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 699, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 496, 0, 700, 497, 701, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 702, 0, 510, 0, 703, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 704, 524, 525, 526, 705, 527, 528,
	529, 706, 530, 707, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 708, 543,
	544, 1291, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 709,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 710, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 711, 616, 617, 618, 619, 712, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 713, 714, 715, 716,
	0, 645, 0, 636, 637, 638, 639, 717, 640, 718,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 719, 720, 721, 0, 661,
	660, 662, 663, 664, 722, 665, 666, 282, 0, 0,
	0, 667, 668, 723, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 673, 674, 0, 308,
	675, 309, 676, 0, 677, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 678, 679, 680, 0, 317,
	318, 681, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 682, 683, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 684, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 685, 686, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 687, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 688, 689, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 690, 0, 691, 0, 0,
	405, 406, 407, 408, 409, 410, 692, 693, 694, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	695, 696, 0, 697, 0, 422, 423, 0, 698, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	699, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 700, 497, 701, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 702, 0, 510, 0, 703, 511, 512, 504,
	513, 514, 0, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 704, 524, 525, 526, 705, 527, 528, 529,
	706, 530, 707, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 0, 541, 542, 708, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 709, 0,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 710, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	711, 616, 617, 618, 619, 712, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 713, 714, 715, 716, 0,
	645, 0, 636, 637, 638, 639, 717, 640, 718, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 651, 653, 654, 650, 652, 655, 0, 656, 0,
	0, 657, 658, 659, 719, 720, 721, 0, 661, 660,
	662, 663, 664, 722, 665, 666, 1691, 0, 1407, 0,
	667, 668, 723, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 0, 0, 0, 0,
	317, 318, 0, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 1409, 344, 345, 346, 347, 348, 0,
	349, 351, 0, 0, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 0, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 0, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 0, 0, 0, 404,
	0, 405, 406, 407, 408, 409, 410, 1690, 0, 0,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 499,
	421, 0, 0, 0, 0, 0, 422, 423, 0, 0,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 0, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 496, 0, 0, 497, 0, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 0, 0, 510, 0, 0, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 0, 530, 0, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 0, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 0,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 1410, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 0, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 0, 616, 617, 618, 619, 0, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 0, 0, 0, 0,
	0, 645, 0, 636, 637, 638, 639, 0, 640, 0,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 0, 0, 0, 0, 661,
	660, 662, 663, 664, 0, 665, 666, 1613, 0, 1407,
	0, 667, 668, 0, 669, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 0, 309, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 0, 0, 0,
	0, 317, 318, 0, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 1409, 344, 345, 346, 347, 348,
	0, 349, 351, 0, 0, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 0, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 0, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 0, 0, 0,
	404, 0, 405, 406, 407, 408, 409, 410, 1612, 0,
	0, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 0, 0, 0, 0, 0, 422, 423, 0,
	0, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 0, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 0, 497, 0, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 0, 0, 510, 0, 0, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 0, 530, 0, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 0,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	0, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1410, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 0, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 0, 616, 617, 618, 619, 0, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 0, 0, 0,
	0, 0, 645, 0, 636, 637, 638, 639, 0, 640,
	0, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 651, 653, 654, 650, 652, 655, 0,
	656, 0, 0, 657, 658, 659, 0, 0, 0, 0,
	661, 660, 662, 663, 664, 0, 665, 666, 1405, 0,
	1407, 0, 667, 668, 0, 669, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 0, 0,
	0, 0, 317, 318, 0, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 1409, 344, 345, 346, 347,
	348, 0, 349, 351, 0, 0, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 0, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 0,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 0, 0,
	0, 404, 0, 405, 406, 407, 408, 409, 410, 1404,
	0, 0, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 0, 0, 0, 0, 0, 422, 423,
	0, 0, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 0, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 0, 497, 0, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 0, 0, 510, 0, 0,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 0, 530, 0, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	0, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 0, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 1410, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 0,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 0, 616, 617, 618, 619, 0, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 0, 0,
	0, 0, 0, 645, 0, 636, 637, 638, 639, 0,
	640, 0, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 651, 653, 654, 650, 652, 655,
	0, 656, 0, 0, 657, 658, 659, 0, 0, 0,
	0, 661, 660, 662, 663, 664, 0, 665, 666, 2205,
	0, 1407, 0, 667, 668, 0, 669, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 0, 309, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 0,
	0, 0, 0, 317, 318, 0, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 1409, 344, 345, 346,
	347, 348, 0, 349, 351, 0, 0, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 0, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 0, 0, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	0, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 0,
	0, 0, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 0, 0, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 0, 0, 0, 0, 0, 422,
	423, 0, 0, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 0, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 0, 497, 0,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 0, 0, 510, 0,
	0, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 0, 530, 0, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 0, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 0, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1410, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	0, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 0, 616, 617, 618, 619, 0,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 0,
	0, 0, 0, 0, 645, 0, 636, 637, 638, 639,
	0, 640, 0, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 651, 653, 654, 650, 652,
	655, 0, 656, 0, 0, 657, 658, 659, 0, 0,
	0, 0, 661, 660, 662, 663, 664, 0, 665, 666,
	2172, 0, 1407, 0, 667, 668, 0, 669, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	0, 0, 0, 0, 317, 318, 0, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 1409, 344, 345,
	346, 347, 348, 0, 349, 351, 0, 0, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 0, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 0, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	0, 0, 0, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 0, 0, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 499, 421, 0, 0, 0, 0, 0,
	422, 423, 0, 0, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 0, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 496, 0, 0, 497,
	0, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 0, 0, 510,
	0, 0, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 0, 530, 0, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 0, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 0, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 1410, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 0, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 0, 616, 617, 618, 619,
	0, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	0, 0, 0, 0, 0, 645, 0, 636, 637, 638,
	639, 0, 640, 0, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 651, 653, 654, 650,
	652, 655, 0, 656, 0, 0, 657, 658, 659, 0,
	0, 0, 0, 661, 660, 662, 663, 664, 1407, 665,
	666, 0, 0, 0, 0, 667, 668, 0, 669, 670,
	671, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 0, 0, 0, 0,
	317, 318, 0, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 1409, 344, 345, 346, 347, 348, 0,
	349, 351, 0, 0, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 0, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 0, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 0, 0, 0, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 0, 0,
	498, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 499,
	421, 0, 0, 0, 0, 0, 422, 423, 0, 0,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 0, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 496, 0, 0, 497, 0, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 0, 0, 510, 0, 0, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 0, 530, 0, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 0, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 0,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 1410, 596, 597, 579, 580, 598, 599, 0,
	600, 601, 602, 603, 604, 605, 606, 0, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 0, 616, 617, 618, 619, 0, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 0, 0, 0, 0,
	0, 645, 0, 636, 637, 638, 639, 0, 640, 0,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 651, 653, 654, 650, 652, 655, 0, 656,
	0, 0, 657, 658, 659, 0, 0, 0, 0, 661,
	660, 662, 663, 664, 0, 665, 666, 0, 0, 0,
	0, 667, 668, 0, 669, 670, 671, 1906, 1907, 0,
	1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 1937, 0, 0, 0, 0, 0, 1906, 1907, 1909,
	1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 1937, 0, 0, 0, 0, 1962, 0, 0, 1909,
	0, 0, 0, 0, 0, 1908, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 1928, 0, 0, 0, 0,
	0, 0, 0, 0, 1925, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 1908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1928, 0, 0, 0, 0,
	0, 0, 0, 0, 1925, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 1933, 1934, 0, 0, 0, 0,
	0, 0, 1914, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 1933, 1934, 0, 0, 0, 0,
	0, 0, 1914, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 1936, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 1954, 1947, 0, 0, 1957, 0, 0, 1923,
	1924, 0, 0, 1936, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	1953, 0, 1954, 0, 0, 0, 0, 0, 0, 1923,
	1924, 0, 1929, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950, 1951,
	1952, 0, 1929, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1943, 1937, 0, 0, 0,
	1955, 0, 0, 0, 1909, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1962, 1959, 0, 0, 0, 0, 0, 0, 0,
	1908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 1944, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1931, 1932, 1933,
	1934, 1948, 0, 1930, 0, 0, 0, 1914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1948, 0, 0, 1961, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 1947, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 1936, 1938,
	0, 1943, 1937, 0, 1961, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 0, 1953, 0, 1954, 0, 0,
	1956, 0, 0, 0, 1923, 1924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1945, 0, 0, 0, 1908, 0, 0, 1946,
	0, 0, 0, 0, 0, 0, 1928, 1929, 0, 1920,
	1921, 1927, 1949, 1926, 1922, 1925, 1919, 1917, 1918, 1910,
	1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0, 1946,
	4928, 0, 0, 0, 0, 0, 0, 0, 0, 1920,
	1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918, 1910,
	1911, 1912, 1913, 1915, 1916, 1955, 0, 0, 0, 0,
	4924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	0, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 1935, 0, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 1930, 0,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 1948, 0, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 1946, 0, 0, 0, 1914, 0,
	0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926, 1922,
	0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915, 1916,
	0, 0, 0, 0, 0, 4827, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 4779, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 4778, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 4588, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 4414, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 4328, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 4327, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 4326, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 3956, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 3434, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 3433, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	2284, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 2282, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 3432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 0, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 1945, 0,
	0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 1937, 0, 0,
	1961, 0, 0, 0, 0, 1909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 1944, 0, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 3431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2283, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 1930, 0, 0, 0, 1914, 5078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 0, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 1961, 0, 0, 0, 0,
	1909, 0, 0, 0, 0, 2281, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 0, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	0, 0, 0, 1914, 0, 3496, 0, 0, 0, 0,
	5077, 3495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 3367, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3368, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 2887, 0, 0, 0, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 2886, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	4683, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	4149, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 0, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 1945, 0,
	0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 1937, 0, 0,
	1961, 0, 0, 0, 0, 1909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 1944, 0, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 1930, 0, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 0, 3502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 0, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 1961, 3497, 0, 0, 0,
	1909, 0, 0, 0, 0, 0, 1953, 3937, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 0, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	0, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 3435, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 3462, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941, 1950,
	1951, 1952, 0, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 1943, 1937, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 1956, 0, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1948, 1945, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 1929, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1931, 1932,
	1933, 1934, 0, 0, 0, 1946, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 0, 0, 1906, 1907,
	0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0, 1947,
	0, 1935, 1957, 0, 0, 0, 0, 0, 0, 1936,
	1938, 1943, 1937, 0, 0, 0, 0, 0, 0, 0,
	1909, 0, 0, 0, 1930, 0, 1953, 0, 1954, 0,
	1956, 0, 0, 0, 0, 1923, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 1948, 1945, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 1929, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 0, 0, 0,
	1946, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 0, 0, 0, 1906, 1907, 0, 1939, 1940, 1941,
	1950, 1951, 1952, 0, 1947, 0, 1935, 1957, 0, 0,
	0, 0, 0, 0, 1936, 1938, 0, 0, 1937, 0,
	0, 0, 0, 0, 0, 0, 1909, 0, 0, 1930,
	0, 1953, 0, 1954, 0, 0, 1956, 0, 0, 0,
	1923, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 0, 0, 0, 1948, 1945, 0,
	0, 0, 1908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1928, 1929, 0, 0, 0, 0, 0, 0,
	0, 1925, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 2457, 1931,
	1932, 1933, 1934, 0, 0, 1946, 0, 0, 0, 1914,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 1949, 1926,
	1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913, 1915,
	1916, 0, 0, 0, 0, 0, 0, 0, 0, 1906,
	1907, 0, 1939, 1940, 1941, 1950, 1951, 1952, 0, 0,
	1947, 1935, 0, 1957, 0, 0, 0, 0, 0, 0,
	1936, 1938, 0, 1937, 0, 0, 0, 0, 0, 0,
	0, 1909, 0, 0, 1930, 0, 0, 1953, 0, 1954,
	0, 1956, 0, 0, 0, 0, 1923, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 0, 1948, 0, 1945, 0, 0, 1908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1928, 0, 1929,
	0, 0, 0, 0, 0, 0, 1925, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 1931, 1932, 1933, 1934, 0, 0,
	1946, 0, 0, 0, 1914, 0, 0, 0, 0, 0,
	1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917, 1918,
	1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1947, 0, 1935, 1957, 0,
	0, 0, 0, 0, 0, 1936, 1938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 1924, 1024, 0, 1074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 1945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1032, 0, 0, 0, 1929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 1030,
	1029, 1961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1049, 0, 0, 0, 0, 0, 1031, 0,
	0, 0, 0, 1034, 0, 0, 0, 0, 1085, 0,
	0, 0, 0, 0, 0, 0, 0, 1044, 1045, 0,
	0, 0, 0, 0, 0, 0, 1063, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1075, 1036, 1946, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 1920, 1921, 1927, 1949,
	1926, 1922, 0, 1919, 1917, 1918, 1910, 1911, 1912, 1913,
	1915, 1916, 0, 0, 1038, 0, 0, 0, 0, 0,
	0, 0, 0, 1072, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1040, 0, 0, 0, 0, 0, 0, 0,
	1028, 0, 0, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1041, 1042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 1050,
	1048, 0, 0, 0, 0, 0, 0, 1043, 0, 0,
	0, 1059, 0, 0, 1080, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1082,
	1071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1920, 1921, 1927, 1949, 1926, 1922, 0, 1919, 1917,
	1918, 1910, 1911, 1912, 1913, 1915, 1916, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1035, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1033, 0,
	0, 0, 1067, 1068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1077, 1065, 0, 0, 0, 0, 0, 0, 0,
	1083, 1060, 0, 0, 1053, 1051, 0, 0, 1056, 0,
	0, 0, 0, 0, 1057, 0, 0, 1026, 0, 1078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1069, 0, 1058, 0, 0,
	0, 0, 0, 1055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 0,
	0, 1061, 0, 1062, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1066,
}

var sqlPact = [...]int{
	14545, -1000, -1000, -1000, -1000, 194, -1000, -1000, 192, 187,
	186, 185, 184, 183, 182, 180, 179, 178, 177, -1000,
	-1000, 176, 175, 173, -1000, -1000, 170, -1000, -1000, 169,
	-1000, 168, 167, 166, -1000, -1000, 160, -1000, 158, -1000,
	-1000, -1000, -1000, 156, 155, 153, 96032, 95451, 96611, 2417,
	122139, 104729, 2237, 85005, 121558, 84424, 120977, 2245, 12548, 120396,
	2915, 152, -1000, 119815, 151, 150, 148, -1000, 104148, 119234,
	101826, 1959, -1000, 146, -1000, 7866, 73920, 145, 142, 140,
	137, 2731, 136, -1000, 133, 130, -1000, -1000, 129, -1000,
	16397, 1543, -1000, 128, 127, -1000, 6979, 101245, 124, 123,
	121, 2747, 119, 118, 71020, 117, 116, 113, 2580, 3013,
	-1000, -1000, 2161, -1000, -1000, 111, 110, 108, 106, 105,
	103, 102, 100, 99, 98, 97, 95, 93, -1000, 92,
	91, 90, 88, 86, -1000, 85, 83, 82, -1000, 81,
	-1000, 75, 72, 71, 70, 69, 68, 65, 64, 63,
	61, 59, 58, 51, 50, 48, 142531, -1000, -1000, 47,
	1983, 1721, 1718, 1715, 1708, 1706, 1003, 46, 45, 44,
	40, 36, 34, 33, 32, 31, 26, 25, 20, 19,
	18, 17, 15, 14, 11, 10, 9, 144, 5, 1,
	0, -2, -4, -5, -6, 2753, 3697, -1000, 1620, 817,
	32575, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 130824, 122718,
	-7, -77, -9, -1000, 3499, 1053, 58768, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 267, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 453, 2726, 735, -1000,
	-1000, -1000, 118653, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2414, -59, -1000, 2108, -1000, -1000, -1000, -1000, -1000,
	734, -1000, 2409, 2342, 341, 2341, -1000, -1000, -1000, 3569,
	2621, 4001, 4000, 3999, 3998, 3994, 130245, 1927, 3993, 2676,
	3992, 3991, 3990, 3989, 3988, 3987, 3986, -1000, 94870, 1064,
	94289, 93708, 3561, 118074, 93127, 117493, 133146, 50491, 778, 3562,
	-1000, -1000, -1000, -1000, -1000, -1000, 122718, -1000, 1063, -1000,
	-1000, 3982, 2187, 732, 103567, -1000, -1000, 116912, 2030, -1000,
	-1000, -1000, 936, 1215, 34951, 34951, 34951, 265, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3582, -1000, -1000, -1000, -1000,
	122718, 2856, 2856, 1461, 1416, 1416, 2856, 2856, -1000, -1000,
	-1000, -1000, -1000, -1000, 3981, 3978, 3972, 3965, 3964, -1000,
	-1000, 83843, 25254, 83262, 82681, 116331, 49897, 92546, 91965, 3963,
	3962, 3961, 49303, 78614, 115750, 132565, 3696, 3693, 1059, 2107,
	1476, -1000, -1000, -1000, -1000, -1000, -1000, -30, 75657, 3723,
	122718, -1000, 261, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	48709, 645, 48115, 659, 47521, 528, 115169, -1000, -1000, -1000,
	-1000, 78023, -1000, 114588, 2612, 3959, 3958, 1158, 3957, 3439,
	1909, 3954, 1956, 1255, 3951, 3950, 3948, 3947, 3945, 3944,
	3943, 1546, 114007, 3138, 1568, 113426, 1801, 131984, 1055, 91384,
	96611, 2764, 112845, 1376, 1267, -1000, -1000, -1000, -1000, 3253,
	3007, 3005, 1181, -1000, -1000, -1000, -1000, 62271, 10748, 10397,
	-1000, -1000, 12572, 112264, 65216, 96611, 96611, -1000, -1000, -1000,
	-1000, -1000, -1000, 46927, 435, 46333, 773, 111683, -1000, -1000,
	62860, 3088, 1107, -1000, -1000, -1000, -1000, -1000, 111102, 45739,
	358, 45145, 755, 122718, -1000, 3132, 2060, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2465, 1659, 3758, 2864,
	77432, 2140, 1444, 3506, 3234, 3230, 1555, 2105, 3198, 3940,
	2738, 3194, 3181, 3176, 3174, 3170, 1668, 2723, 368, 2715,
	31981, 3110, 1850, 44551, 1548, 1545, 3169, 3168, 3765, 2095,
	2089, 2179, 2092, 82100, 3939, 3938, 3457, 3163, 3154, 2941,
	3153, -1000, 3084, 1537, 259, -1000, -1000, -1000, -1000, -1000,
	-1000, 1484, -1000, -1000, -1000, -1000, -1000, 86742, -1000, -1000,
	1428, -1000, -1000, 1428, -1000, -1000, -1000, -1000, -1000, 1344,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1620, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2785, -1000, 2165, -1000, -1000,
	-1000, 2608, 3435, 3435, 3435, 3558, 418, 414, -1000, 144,
	-1000, -1000, 141857, -1000, -1000, 51085, 51085, 51085, 51085, 51085,
	51085, 51085, 51085, 2271, -1000, 730, -1000, -1000, 770, -1000,
	724, 666, 596, -1000, -1000, -1000, -1000, -1000, -1000, 714,
	-1000, -1000, -1000, -1000, -1000, -1000, 3723, -1000, 28280, -1000,
	-1000, -1000, 483, 713, 51085, -1000, -1000, 3803, 3802, 1028,
	-1000, 252, 969, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3124, 712, 711, -1000, 710,
	709, 708, 706, 704, -1000, 702, -1000, 700, 699, 698,
	696, 695, 694, 693, 691, -1000, 2112, -1000, -1000, -1000,
	-1000, -1000, -1000, 646, 644, 644, 644, -1000, 1052, -1000,
	-1000, -1000, 260, 637, 257, 635, 634, 630, -1000, 689,
	686, 685, 682, 681, 680, 675, 674, 670, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1051, -1000, -1000, -1000, -1000,
	-32, 122718, -1000, 453, -32, -1000, -1000, 668, -1000, 36751,
	36751, 36751, -1000, -1000, 2406, 51085, -1000, 2553, -1000, -23,
	-23, 892, 60511, -1000, 57606, 892, 354, 789, 66378, -1000,
	3082, -1000, -1000, 667, 251, -1000, -1000, -1000, -1000, 25843,
	3081, 122718, 122718, 122718, 96611, 96611, 96611, 122718, 3937, 3935,
	3317, 51085, -1000, -1000, 73339, 134884, 97190, -1000, -1000, 3672,
	71599, 72760, 3117, 134884, 3116, 134308, 3933, -1000, -1000, -1000,
	-1000, -1000, 3291, 3931, 3930, 3929, -1000, 122718, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 240, 3287, -1000, -1000, 100664,
	240, 3282, -1000, 240, 3276, -1000, 100085, -1000, -1000, 2337,
	3274, -1000, -1000, 246, 3265, -1000, -1000, -1000, 241, 3264,
	-1000, -1000, 235, -112, 3261, -1000, -1000, -1000, -1000, -1000,
	-1000, 141857, -1000, -1000, -1000, 133727, -1000, 3463, -1000, 122718,
	-1000, 51085, -1000, -1000, 3668, 1497, 3513, 3608, -1000, -1000,
	-41, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2660, 2615,
	1150, 2455, -1000, 3328, 1511, 34951, 3427, -1000, -1000, -1000,
	-1000, -1000, 229, 25843, 2980, -1000, -1000, 122718, -1000, 122718,
	2856, 2856, -1000, -1000, -1000, 3756, 3755, 2856, 2856, 122718,
	122718, -1000, -1000, -1000, -1000, -1000, -1000, 3289, 3259, 1652,
	-1000, 2452, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1930, 3257, -1000, 2101, 3256, 1915, -1000, -1000, 2327,
	-1000, 138437, 1440, -1000, -1000, -1000, -1000, 2338, 3255, -20,
	-1000, -1000, 2550, -1000, -1000, -1000, -1000, 18052, -1000, 3016,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2033,
	-1000, 1387, 3254, -1000, 2862, 2862, 90803, 3320, 64627, 62860,
	75657, -36, -1000, -1000, -1000, -1000, -152, -1000, 24659, 141857,
	-1000, -1000, -1000, -1000, 1868, 141857, 871, -1000, -1000, 3252,
	-1000, 141857, 492, -1000, -1000, 3248, -1000, 2721, -1000, 3114,
	-1000, -1000, 2547, 2542, 1001, -1000, 3926, -1000, -1000, 3924,
	-1000, 3923, 3922, 3919, -1000, 1797, 2096, 3915, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 90224, 2405, -1000, -1000,
	88481, 3112, -1000, 2541, 3607, -1000, 89643, 1035, -1000, 982,
	2540, -1000, 99506, 1017, 2539, -1000, 3911, 3560, 2794, 982,
	2538, -1000, -1000, -1000, -1000, -1000, 1011, -1000, 68698, -1000,
	68698, -1000, 1716, -1000, 129666, -23, 96611, 3723, -1000, -76,
	-1000, -1000, -1000, 1053, -1000, 61690, -1000, 61690, 102986, 79203,
	968, 3079, 70439, 141652, -1000, 995, -1000, -1000, 141857, -1000,
	-1000, -1000, 2719, -1000, -253, 2849, -1000, 79203, 64038, 3078,
	2718, -1000, 141857, -1000, -1000, -1000, -1000, 141857, -1000, -1000,
	-1000, 79203, 88481, -1000, 110521, 89062, -1000, -1000, 1533, 2703,
	-1000, -1000, -1000, 79203, 1392, 79203, 79203, 79203, -1000, 109940,
	-1000, -1000, 2168, 1358, 3459, 2125, 96611, -1000, 1960, -1000,
	-1000, -1000, 3496, 3311, 122718, -1000, -1000, 3111, -1000, 75078,
	98927, -1000, 98348, -1000, 97769, -1000, 96611, -1000, 96611, -1000,
	3902, 3901, 3900, -1000, -1000, 3897, -1000, 3895, 3476, -1000,
	725, 43957, 141857, 3467, -1000, 3894, 2052, 3110, 141857, -1000,
	3301, 1723, 1704, 122718, -1000, -1000, 122718, -1000, 122718, -1000,
	-1000, -1000, 1588, -1000, -1000, 2659, -1000, -1000, -1000, 994,
	-1000, -1000, 96611, 96611, 96611, 96611, 1251, -1000, 43363, -1000,
	-1000, 3149, 3893, 1743, -1000, 1934, -1000, 3077, 3508, -1000,
	1514, 1865, 226, 3807, -1000, -1000, 250, -1000, -1000, -41,
	-1000, 129087, -1000, 2608, -1000, 122718, -1000, 2649, 3103, 3109,
	1904, 2429, 2763, -1000, 42769, 2724, 54649, 2438, 144, -1000,
	-1000, 144, 144, 33763, -1000, -1000, 71599, 71599, 25843, 1361,
	51085, 51085, 51085, 51085, 51085, 51085, 51085, 51085, 51085, 51085,
	51085, 51085, 51085, 51085, 51085, 51085, 51085, 51085, 51085, 51085,
	51085, 51085, 51085, 51085, 51085, 51085, 51085, 51085, 51085, 51085,
	51085, 51085, 51085, 51085, 51085, 51085, 2129, 51085, 1343, 51085,
	51085, 51085, 51085, 2365, -1000, -1000, 2044, 508, 2132, 666,
	-1000, -1000, -1000, 3733, 3733, 3733, 621, 621, 621, 142063,
	142063, 510, 3892, 770, -1000, 51085, -1000, 107, 61092, 51085,
	26434, -1000, 414, 10642, 2603, -1000, 412, 27058, -1000, -1000,
	-1000, 28280, 596, 42145, 51085, 1021, 141857, -1000, -1000, 1400,
	3741, 24064, 3115, 2930, 664, 857, 848, 31357, 30733, 30109,
	29485, 781, 756, 51085, 51085, 51085, 51085, 51085, 51085, 51085,
	51085, -1000, -1000, 3754, -1000, 3741, -1000, -1000, -1000, -1000,
	3741, 1356, 1354, 3741, -1000, 3741, 3741, 9499, 9499, 41551,
	40957, 40363, 55243, 39769, 51085, 28891, 39175, 38581, -1000, 122718,
	-32, 3667, 51085, 332, -1000, 139327, -1000, 332, 332, 662,
	-84, 141857, 2717, 2717, 59349, 2549, 2287, 2287, 2287, -1000,
	892, 18671, 892, 108203, 2299, 892, 892, 224, 272, 408,
	57025, 2553, 108203, 749, 658, -12, -13, -14, -1000, -1000,
	-15, -18, -1000, -1000, 96611, 657, 26434, 25843, 221, 2066,
	-92, 2745, 2741, -1000, 2739, 2737, -1000, 2733, 2404, -1000,
	-1000, -1000, 1892, -100, 1341, 96611, 122718, 1384, 3886, -99,
	-1000, 8719, -105, -1000, 1112, 218, 3741, -1000, -1000, -1000,
	-1000, -1000, 3884, 3883, -1000, 1049, 655, 654, 417, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 646, 644, 644,
	644, -1000, 260, 637, 257, 635, 634, 630, -1000, -1000,
	-1000, -1000, -1000, 3076, 96611, 122718, 1381, 3879, 85584, -112,
	97190, -67, -1000, -1000, 122718, -1000, -1000, -1000, 3878, -1000,
	96611, -1000, -1000, 96611, 240, 3247, -1000, 96611, -1000, 96611,
	237, 3246, -1000, -1000, 122718, -1000, 96611, 96611, -1000, 122718,
	122718, 122718, 134884, 134884, 233, -1000, 96611, 891, -106, 1164,
	-41, -1000, -1000, -1000, -1000, 1428, -1000, 1717, -1000, -1000,
	-1000, -1000, -1000, -1000, 1388, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1028, -1000, -1000, -1000, -1000, 3750, 3748,
	-34, -1000, -1000, 25843, -1000, 1985, -1000, -1000, -1000, -1000,
	122718, 122718, -1000, -1000, 122718, 122718, -1000, -1000, -42, 1657,
	558, 1336, -1000, 81519, 2467, 3464, 3877, 2784, 3446, 1713,
	-1000, 1587, 624, -1000, 3557, 86742, 3631, 3651, 1415, -1000,
	3067, -1000, -1000, -1000, 935, 1735, 1844, 1335, 1322, 86742,
	2101, -1000, 71599, -1000, 2803, 3553, 1416, 1390, 1416, 1416,
	1413, -1000, 86742, 1816, 1321, 1320, 1316, -1000, -1000, 2023,
	2015, -1000, -1000, 109361, -1000, 1310, 1309, 3692, 2785, 2289,
	801, 1998, -1000, 1425, 1306, 3065, -1000, -1000, -45, 3613,
	3650, 1415, -1000, 3060, 1298, -1000, -1000, -1000, 3551, 96611,
	25843, 1616, 1615, 1608, 1810, 1287, -35, -1000, 3627, 1650,
	-1000, 88481, 88481, 105308, 122718, 3703, 79203, -1000, 2570, 1282,
	1261, -1000, 1034, 9168, 3392, -1000, 134884, 1034, 1034, 1890,
	3244, 2822, 1683, -1000, 2838, 881, 2837, -1000, -1000, -1000,
	881, -36, 75657, 122718, 216, -1000, 107, 51085, 51085, 107,
	51085, 107, -1000, 3599, 3243, 3242, 3874, -1000, -1000, -1000,
	-1000, -1000, 3873, 2028, 2675, -1000, -1000, 620, 2536, 3058,
	122718, 2769, -38, 96611, -1000, 74499, 3241, 134884, 2101, 2535,
	-1000, -1000, 87902, -1000, 3237, 453, 2531, -1000, 581, 3871,
	3233, -1000, 128508, -1000, 3463, 1350, 3229, 1103, 684, 3666,
	-1000, 684, 69277, -1000, 122718, -1000, -23, 7741, 80361, -111,
	-113, 403, -1000, 108782, 122718, 122718, 3413, 2042, 2039, -1000,
	977, 62860, -1000, 62860, -118, -1000, -253, 2835, 1559, 62860,
	-1000, 968, 968, 881, -1000, 881, -1000, 96611, 3106, -1000,
	-1000, 79203, 968, 968, 968, -1000, -1000, -1000, -1000, 3869,
	3867, 3866, 3865, -1000, -1000, 981, 96611, 122718, 96611, -1000,
	-1000, 1660, -1000, 215, -1000, 134884, -1000, 134884, 122718, 96611,
	-1000, 981, 122718, 981, 122718, 981, 122718, 981, 981, -1000,
	-1000, -1000, -1000, -1000, 107, -1000, -1000, 141857, -1000, 51085,
	-1000, -1000, 1582, 3864, 1726, -1000, 3105, -1000, 3104, -1000,
	24, -1000, -1000, 1945, -1000, 3795, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3862, 141857, -1000, 1957, -1000, -1000,
	-1000, -1000, 96611, 96611, 96611, 96611, 122718, 3390, -1000, 122718,
	3380, 96611, -1000, 3806, -1000, -1000, 86742, -1000, 2649, 3103,
	-1000, -1000, -1000, -1000, -1000, -1000, 1507, 2350, -1000, 2695,
	-1000, 1643, -1000, -1000, -1000, 141857, 55837, -1000, -1000, 141857,
	1891, -1000, 54055, 53461, -1000, -1000, 1751, 96611, 2759, -1000,
	2759, -91, -1000, 139122, 2694, 96611, -1000, -1000, -1000, -1000,
	-1000, 932, 656, 656, 1383, 1383, 1383, 1383, 3612, 6859,
	7042, 1213, 6389, 6389, 5229, 5229, 5229, 5229, 5229, 6389,
	560, 621, 621, 560, 560, 560, 560, 560, 621, 621,
	621, 6389, 6389, 6389, 621, 142063, 9679, 10340, 51085, 51085,
	1259, 2037, 508, 8945, 51085, 5706, 5706, 5706, 5706, -1000,
	2021, -1000, -1000, -1000, -1000, 3056, 619, 55243, 55243, -1000,
	-1000, -1000, -1000, 27669, 51085, -1000, -1000, -1000, -1000, 37957,
	-1000, -1000, 304, -333, 402, -1000, 212, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	401, -78, -10, -1000, 51085, 51085, 51085, 399, -1000, 210,
	51085, 122718, -1000, 17769, 748, -114, -1000, -119, 1477, -1000,
	51085, -1000, -1000, 1254, -1000, 1249, 1248, 1247, -1000, 618,
	398, -1000, 209, -1000, 2273, 610, 609, 51085, -1000, -1000,
	-1000, -1000, -1000, 138232, -1000, -1000, 138027, -1000, -1000, 137822,
	-1000, -1000, 137617, -1000, -1000, -1000, -1000, -1000, 141447, 17289,
	16137, 15626, 8975, 13292, 12645, -121, 396, -124, 395, 926,
	916, 394, 392, 391, -126, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -127, 390, -1000,
	3051, -78, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	387, -1000, 381, -1000, 141242, -78, 380, 456, -1000, 55243,
	55243, 55243, 55243, -1000, 378, -1000, 138917, -1000, 141037, 37363,
	37363, 37363, 376, 140832, 51085, -78, -140, -1000, -149, -1000,
	-1000, 546, -150, 1018, 36751, 58187, 25843, -1000, 1018, 1018,
	51085, -1000, 51085, 2712, -1000, -1000, -1000, -1000, 2709, 2075,
	2717, 59349, -1000, -1000, -1000, -1000, 108203, -1000, 3723, 2972,
	-1000, 108203, -1000, -1000, 122718, 453, -1000, 108203, 108203, 25843,
	892, -1000, 892, 108203, 828, -1000, -1000, -1000, -1000, -1000,
	374, 67540, -10, 206, 25843, 982, -1000, -1000, 2824, 2824,
	2824, 2824, 2824, 96611, -1000, -1000, 134884, 1246, -39, -73,
	2826, -1000, 3701, -1000, 2135, -1000, 71599, -1000, 769, 1071,
	25843, -1000, -1000, -1000, 606, -1000, 3741, 3741, -1000, 3741,
	134884, 3047, 305, 2825, -1000, 2396, -37, 172, 134884, 3861,
	-1000, -1000, 240, -1000, 96611, 240, 240, -1000, 96611, 96611,
	2337, -1000, 246, -1000, 241, -1000, -1000, -112, -1000, 993,
	34951, -1000, 1428, -1000, -1000, 1613, -1000, 2048, -1000, 1349,
	-1000, -1000, 34951, -1000, 3418, -1000, 1848, -1000, -1000, -1000,
	-1000, 3386, 122718, 122718, 96611, -1000, 106466, 122718, -1000, 2239,
	134884, -1000, 2526, 127929, 2490, 127350, 71599, -1000, -1000, 605,
	956, 2690, 2689, 1101, 122718, 122718, 2688, 126771, 126192, -1000,
	3860, 122718, 2106, 51085, 106466, 3547, 2244, 2319, 107, 107,
	-1000, 107, -1000, -1000, 604, 1418, 96611, 96611, 122718, 134884,
	96611, 1854, -1000, -1000, -1000, -1000, -1000, 87321, -1000, -1000,
	1416, -1000, -1000, -1000, 1416, 2101, 1796, 122718, 134884, 96611,
	134884, 125613, 125034, -1000, -1000, 1805, 122718, -1000, -1000, -1000,
	-1000, 1459, -1000, 801, 1235, 3044, 51085, 51085, 2172, 107,
	107, -1000, 107, 600, 25843, 2018, -1000, 3108, 122718, 3792,
	124455, 3789, 122718, 122718, 122718, 134884, 3430, 122718, -1000, -1000,
	-1000, -190, -1000, 860, 858, -152, -1000, 3703, -1000, 856,
	122718, 134884, -1000, 123876, 9168, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2153, 76841, 1119, 122718, 1387, -1000, -1000, 1802,
	1233, 1232, 86742, 2182, 1791, 1935, 134884, 62860, 979, 62860,
	2804, -1000, -1000, 23469, -1000, 141857, 141857, -1000, 141857, -1000,
	74499, 79203, 122718, -1000, -1000, 1033, 122718, 80940, 953, 3228,
	68119, -152, 968, 79203, 96611, -38, 2769, 122718, -1000, -1000,
	2101, 3227, 453, 2525, -1000, 134884, 3665, 3226, 599, 3859,
	3858, -1000, 96611, 2393, 2522, -1000, -1000, 123297, 3304, 801,
	122718, 1018, 59349, 2006, -1000, 65797, 1086, 122718, 1940, 157,
	-1000, -1000, -1000, 4, 122718, -1000, 777, -1000, -1000, 7741,
	7741, 968, -190, 598, 63449, -162, -1000, 203, 597, 855,
	854, -1000, 5186, -1000, -253, -1000, 79203, 977, 62860, 3039,
	-253, 2823, 3034, -1000, -1000, 992, -1000, 1458, 968, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-25, 1913, 122718, -112, -112, -49, -39, -1000, 981, -1000,
	981, -1000, 981, -1000, -1000, -1000, 141857, -1000, -1000, -1000,
	1724, 1671, 122718, -1000, -1000, 122718, -1000, -1000, 25843, 122718,
	96611, 25843, 96611, 3101, 3100, -1000, -1000, -1000, 122718, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1135, -1000, 1891,
	2347, -1000, 596, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2637, -1000, -40, 33763, 899, -1000, -1000, 96611,
	-26, 51085, 51085, 8018, 7003, 51085, 55243, 55243, -1000, 51085,
	5250, -1000, -1000, -1000, -1000, -1000, 3021, 594, 51085, 71599,
	6115, 5903, -1000, 372, 12187, 560, -1000, 51085, -1000, 477,
	-1000, 369, 36157, -1000, 139737, -54, -163, -1000, 19280, -78,
	-164, -1000, -1000, 768, -1000, 3300, -1000, 51085, 140557, 2602,
	2019, 1911, 1745, 3741, 3788, 22874, -1000, 69858, 1019, 2304,
	137412, -1000, -1000, -1000, -1000, 71599, 71599, 51085, 51085, -1000,
	51085, 51085, 51085, -1000, -1000, -1000, 3741, 890, -1000, -1000,
	-1000, 890, -1000, -1000, 1416, -1000, 1416, -1000, 51085, -1000,
	-1000, 3010, 51085, -1000, 71599, 71599, 55243, 55243, 55243, 55243,
	55243, 55243, 55243, 55243, 55243, 55243, 55243, 55243, 55243, 55243,
	55243, 55243, 55243, 55243, 55243, 55243, 2639, 55243, 3722, 3722,
	3722, 998, -1000, 3099, 3010, 51085, 51085, 71599, 366, 364,
	362, -1000, 51085, -78, -1000, -1000, 10758, 591, -1000, 2629,
	-1000, 2926, -1000, 51085, -1000, -155, -1000, 2553, -1000, -1000,
	2926, 2926, -170, 141857, 59349, 59349, -1000, 590, 51085, 2708,
	-1000, -1000, 747, -335, -1000, 853, -1000, -1000, -1000, -1000,
	-1000, -1000, 852, -1000, 453, -1000, -1000, -1000, 202, 108203,
	108203, 745, -1000, -171, -1000, -1000, -172, -1000, 3664, 359,
	25843, -1000, 1018, 2857, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2732, -283, 134884, 134884, 1783, 2330, 3785, -1000, 3753,
	766, 744, 201, 3741, 350, 349, 348, -112, 134884, 134884,
	1779, 72181, 134884, -1000, -1000, -1000, 240, -1000, -1000, -1000,
	237, -1000, -1000, -1000, -1000, 2790, -1000, -41, -1000, -1000,
	-1000, 51085, -1000, 965, -1000, -1000, 3462, 589, 1228, 1224,
	-1000, -173, -1000, 844, -1000, -1000, -1000, -1000, 2979, -1000,
	3221, -1000, 2506, -1000, 1090, 2504, 2151, -1000, 51085, 587,
	2791, 586, 583, 3857, 2194, 3855, 1102, 3216, 2337, 3209,
	2337, -1000, -1000, -1000, 939, -1000, 141857, -178, -1000, 2244,
	-1000, 579, 578, -1000, -42, 1654, 541, 1223, 990, -1000,
	-1000, 51085, 51085, 107624, -1000, 491, 3454, -28, -1000, -1000,
	-1000, 1769, 1222, 1221, -1000, -1000, -1000, -1000, 2101, 1757,
	1220, 1216, -1000, -1000, -1000, -1000, -1000, 2502, -1000, -1000,
	3207, 987, -1000, 3166, 3164, 908, 122718, 51085, 51085, 140352,
	140147, -1000, 985, -1000, -1000, 51085, -1000, -45, 1211, 3619,
	2500, 96611, -1000, 2337, 3202, 1210, -1000, 1205, -1000, -1000,
	-1000, 3623, 3617, 1217, 105308, 79203, 79203, 3703, 62860, -1000,
	-1000, -1000, 79203, -1000, -1000, 76252, -1000, -1000, 1034, 122718,
	134884, 96611, 1771, -1000, -1000, 85584, 86163, 122718, 2822, -112,
	881, -1000, 2537, 881, 979, 3003, -1000, 2767, -1000, 984,
	96611, 3853, 346, -180, -46, 71599, -1000, -1000, -1000, -1000,
	2490, 96611, 122718, 1301, 2789, 122718, 122718, 3663, -1000, 2423,
	628, 96611, 905, -1000, 3723, -1000, -1000, -1000, 983, -1000,
	3603, 96611, 3662, 3200, 982, 107, 96611, 3764, -1000, -1000,
	3661, 96611, 3195, 2387, 2495, 2667, 801, 79782, 982, 2301,
	-63, -1000, 1940, 35545, 3452, -181, -1000, -1000, -1000, 1018,
	69277, 59349, 51085, 3852, -189, -1000, -1000, -1000, -1000, -1000,
	105308, 79203, 968, 122718, 122718, 3851, 79203, 79203, 79203, -47,
	577, -1000, 843, 839, 838, -1000, -1000, -1000, -1000, -1000,
	-1000, 837, 836, 834, 832, 977, -1000, -1000, -253, 62860,
	977, 62860, 107, -1000, 2324, 96611, -1000, 22279, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 981, -152, -1000, -1000, -1000,
	2183, 2437, 2183, 1928, 1922, -1000, -1000, 2339, -1000, -1000,
	-1000, -1000, 2766, 3414, 25843, 3596, 5706, 51085, 51085, 527,
	5361, 1250, 5706, 51085, 51085, 71599, 142268, -192, 51085, 51085,
	-1000, 51085, 743, 141857, -1000, 3780, 51085, 344, 343, -1000,
	-1000, -1000, 3734, -1000, -1000, -1000, 141857, 51085, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 338, -1000, 199, -1000, -1000,
	-1000, 131403, -1000, 51085, 335, 3539, -1000, 334, 333, 11792,
	7118, 137207, 137002, 136797, 328, -1000, -1000, 323, 322, 141857,
	3099, 141857, -1000, -1000, 967, 967, 1407, 1407, 1407, 1407,
	3722, 2109, 919, 1196, 2022, 2022, 2022, 2240, 998, 998,
	2022, 2022, 2022, 998, 2997, 2657, 576, 6978, -1000, -1000,
	141857, 141857, 321, -1000, -1000, -1000, -78, 319, 10758, -1000,
	2919, 3531, 141857, -1000, 59349, 2919, 2919, -1000, -1000, 2075,
	122718, 141857, 59349, -1000, 2972, -1000, 20488, 19887, -1000, 25843,
	-1000, -1000, -1000, -1000, 3723, -1000, 67540, -1000, 575, -1000,
	196, -1000, 2857, -1000, 830, -1000, -1000, 79203, 79203, 2824,
	-1000, 2939, -283, -169, 122718, -1000, -1000, 741, 3850, 763,
	25843, 318, -1000, -1000, -1000, -112, -112, 122718, 2995, 96611,
	122718, 1372, -112, -1000, -1000, -1000, 3412, 141857, 3098, 2905,
	2904, 122718, 122718, -1000, 106466, 34951, 1550, 107045, 122718, 3192,
	-1000, 3186, -1000, 1101, 2013, 136592, 59930, -1000, 59930, 122718,
	-1000, -1000, -1000, -1000, 1982, 1532, 3849, 1151, -1000, 3498,
	122718, -1000, 122718, -1000, -1000, -1000, 106466, -1000, 122718, 122718,
	96611, 122718, -1000, 134884, 3173, -194, 141857, -48, -1000, 827,
	-1000, 1398, -1000, 21684, 122718, 134884, 96611, 122718, 134884, 96611,
	3184, 122718, 2231, -1000, -1000, 3155, -1000, 141857, 139942, 107,
	51085, 3162, -197, 25843, -1000, 3777, 3773, 3183, 3502, -1000,
	122718, 3768, 122718, 96611, 3411, -1000, -1000, -1000, 980, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1755, 1198, 1193, 2386,
	2385, 2329, -49, 2182, 979, -51, 571, -1000, 826, -1000,
	-1000, 825, 823, 979, -1000, 79203, 62860, 3843, 453, -1000,
	2781, -1000, 102405, 80940, 2340, -1000, -1000, 570, 122718, 122718,
	569, -1000, 107, -1000, 3842, 106466, 565, -1000, 2310, -1000,
	740, -1000, 2555, 134884, 2101, 107, 96611, -1000, 975, 453,
	313, -52, -1000, 3298, 1099, 25843, 96611, 3182, 2669, 801,
	79782, -1000, 1350, 2763, -1000, -55, -1000, 627, 107, 2301,
	-1000, -63, 141857, -1000, 820, -199, 311, -1000, 3405, -1000,
	-1000, -200, -1000, -1000, 3932, 3932, 79203, 62860, 79203, 79203,
	79203, 62860, 79203, -1000, 977, 881, -1000, -253, -1000, 2519,
	-1000, -1000, -1000, -1000, -1000, 25843, 1733, -1000, 562, 559,
	-1000, -1000, -1000, -1000, 3414, 5706, 5706, 51085, 51085, 51085,
	5706, 142268, -202, -1000, 5706, 5706, -78, -1000, -1000, 139737,
	-1000, -1000, -1000, 141857, -1000, 21089, 2217, -1000, 136387, -1000,
	33763, -1000, -1000, 51085, 51085, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 55243, 2992, 545, 71599, -1000, -1000, 303,
	1012, 51085, 52867, 2553, 1012, 1012, -1000, -205, -1000, -1000,
	-1000, 3723, -1000, 3723, 196, -1000, -1000, 3841, 25843, -1000,
	79203, -1000, -1000, -1000, 2326, -1000, -1000, 3146, -195, 758,
	-1000, 3836, -1000, -1000, 141, 134884, 2991, 132, 2821, -1000,
	107, -1000, -1000, -1000, -1000, -1000, -1000, 2817, 3660, -1000,
	1991, -1000, 122718, 122718, -1000, 122718, -1000, 25843, 122718, 2935,
	1257, -1000, 956, 2687, 531, 55243, 1133, 96611, 922, 2898,
	2897, -1000, 3683, 3525, 2889, -208, -1000, 122718, 51085, 122718,
	-210, -213, 2466, -1000, -1000, 1131, 1256, 51085, 1129, -1000,
	-1000, -1000, 71599, 529, 2337, 2337, -1000, -215, -216, -1000,
	-1000, -1000, 51085, 1188, 122718, 34357, -1000, 3833, 3454, -1000,
	-1000, -1000, -1000, -1000, -1000, 122718, -1000, 122718, -1000, 51085,
	-1000, 139532, 51085, 1186, -1000, -1000, -1000, 3767, 2337, 25843,
	2337, -1000, 2337, 3502, 1146, 2419, 122718, 134884, 96611, 2004,
	2004, 3095, -1000, -1000, -1000, 2670, 2670, 79203, 62860, 62860,
	-1000, -64, 979, -1000, 3646, 2215, 3832, -1000, -1000, -1000,
	-1000, 2684, -1000, -1000, -1000, 122718, 2681, 2882, 59930, 526,
	525, 122718, 972, -1000, -218, 80940, 953, 934, -1000, -65,
	524, -1000, 809, -1000, -1000, -1000, -1000, 453, -1000, 2770,
	3645, -1000, 3766, 523, 513, 122718, 2371, 509, 25843, 3449,
	801, 79782, -1000, 3304, 1940, -1000, 2482, 122718, 3445, -1000,
	2763, 508, -1000, 968, 506, 968, -1000, -221, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 977, -69, -1000,
	894, 875, -1000, -1000, 96611, 96611, 51085, 51085, -1000, 5706,
	5706, 5706, -1000, 277, -1000, -1000, 2301, 3521, -1000, -71,
	136182, 135977, 1032, 55243, 71599, -227, -1000, -1000, 122718, 141857,
	-74, -1000, 141857, 505, 503, 405, -1000, -1000, -1000, 738,
	478, -1000, -1000, -1000, -1000, 134884, 3829, -1000, 134884, -112,
	134884, 134884, 1754, -1000, 105887, 122718, -1000, -1000, 2151, 2197,
	-1000, -1000, -1000, 122718, 2494, -1000, -1000, -1000, 989, 51085,
	6978, 55243, 502, 51085, -1000, 501, 499, 3644, 3370, -1000,
	2771, 2994, 2054, 59930, -1000, 3414, -1000, 135771, -1000, 1098,
	1986, -1000, -1000, -1000, -1000, 141857, 55243, 3502, 59930, -1000,
	-1000, 494, 488, 141857, 487, 808, 2990, -1000, -1000, -1000,
	-1000, -1000, 141857, 107, 141857, 486, 3619, -1000, -1000, -1000,
	-1000, 2337, 96611, 806, -1000, -1000, -1000, 1185, -1000, -1000,
	-1000, -1000, 3827, 3826, 2983, 85584, -1000, -228, -1000, -1000,
	-1000, 2026, 107, 953, -1000, -1000, 2340, 484, -1000, 966,
	2619, 2619, -229, 59930, 59930, -230, 2360, 2757, -1000, 276,
	3643, 934, -1000, 3726, -1000, 3382, 3382, 51085, 3642, 3402,
	-1000, 107, -1000, 3764, 59930, -1000, 96611, 59930, 2370, 2116,
	2654, 79782, -1000, 2667, -1000, -1000, -236, 122718, 1940, -1000,
	-1000, 79203, -1000, -1000, -1000, 2519, -1000, 122718, -1000, 122718,
	-1000, -1000, -237, -238, -1000, 2213, 51085, 33763, -1000, -1000,
	1032, -239, -1000, -75, -1000, 3639, 52867, 3825, 3820, 3817,
	-1000, -1000, -283, -1000, -112, -112, -112, 122718, -1000, 1989,
	-1000, 2490, -1000, -1000, 3177, -1000, 2916, 480, 135496, 6978,
	2631, 122718, 135466, 2101, 2101, -1000, 3638, 2971, -1000, -1000,
	2172, 463, -1000, -1000, -1000, -1000, 899, 122718, 966, 2911,
	96611, 6978, 1100, -244, 2183, 2183, 51085, 33169, 2223, -1000,
	51085, -1000, -1000, 3502, 62860, 134884, -1000, -1000, 134884, 2368,
	-1000, 2957, 3743, -1000, 2360, 122718, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1098, -246,
	-247, -1000, -1000, 3480, -1000, 3387, 2781, 107, -1000, -1000,
	-1000, -252, 141857, 107, 3814, 975, 275, -255, 1099, -257,
	96611, 1988, -1000, 801, -1000, 2669, 1018, 3314, -1000, -260,
	-1000, -263, -265, -1000, -1000, 274, 52273, 52273, 52273, -78,
	-91, -1000, 122718, 454, -1000, -1000, -1000, -1000, -1000, 120,
	-1000, -1000, 3156, 889, -1000, 864, 1980, 270, 1097, 238,
	234, -1000, -1000, -1000, 2889, -1000, 122718, -1000, -1000, -1000,
	889, 453, -1000, 51085, 1098, -274, -1000, 1085, -275, -1000,
	1084, -276, -1000, 2973, -1000, -282, 2337, -1000, -283, 233,
	2004, 974, 3597, -1000, -1000, -1000, 2641, -284, -1000, -1000,
	2054, 1098, 2172, 2433, -1000, 2215, 972, -1000, -1000, -1000,
	-1000, -1000, 1098, 452, 2054, 442, 1515, 801, -1000, -1000,
	1416, 3449, 3313, 1339, 968, -1000, -1000, -1000, 3196, -1000,
	56431, 2336, 1905, 138712, 3196, 3196, -1000, -1000, 134884, 122718,
	966, 3577, -1000, 866, 865, 1547, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1018, -291, -1000, 2631, 141857, 966,
	-1000, 2183, 2816, -1000, 2183, 2970, -1000, 2181, -1000, -1000,
	-1000, -1000, 2959, -1000, 1853, 3710, -1000, -1000, 966, 122718,
	2172, 2054, 966, 1881, 1872, 3812, 953, 2360, 2054, 59930,
	2172, 59930, 2148, -1000, 122718, -1000, 2116, 1331, -1000, 1698,
	-1000, -1000, 1674, 3655, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -112, -1000, -1000, 805, -1000, 3325, -1000, 1128, 2230,
	2230, -1000, -1000, 864, -1000, -1000, 441, -1000, 439, -1000,
	134884, 2307, -1000, -1000, -1000, -1000, 966, 2172, 1018, -1000,
	3810, -1000, 2360, -1000, 2172, -292, 966, -297, 2238, -1000,
	-1000, -152, 1988, -1000, 1678, 69277, 1896, -1000, -1000, 2296,
	51679, 51085, -1000, 3706, -1000, -1000, 2691, -1000, 2889, 51085,
	51085, 233, 66959, 1018, 966, -1000, -1000, 2641, 966, 1098,
	1018, 2054, -1000, 801, 1515, 69277, -273, -1000, -1000, -1000,
	141857, -1000, -1000, -1000, -1000, -299, -300, -1000, -190, 105308,
	-1000, 1018, -1000, 1018, 2054, -1000, 2172, 134884, 2148, -273,
	-1000, 2172, 1173, -318, -1000, -1000, 2172, 966, -1000, -1000,
	-1000, -1000, -1000, 434, -1000, 966, 1018, 51085, 1018, -1000,
	-319, -1000, 2172, -1000,
}

var sqlPgo = [...]int{
	0, 4694, 4693, 4691, 4690, 4687, 4685, 4684, 4682, 4681,
	4679, 4678, 4677, 4676, 4675, 152, 4672, 4660, 4656, 4647,
	4646, 4641, 4639, 4638, 4637, 4635, 4628, 4627, 4625, 4624,
	4623, 4620, 4618, 4617, 4610, 4608, 4607, 4605, 4604, 4603,
	4602, 4599, 4596, 4589, 4585, 4581, 4580, 4579, 4575, 4573,
	4571, 4570, 4569, 4566, 4565, 4561, 4559, 4556, 4554, 4553,
	4552, 4551, 4546, 4545, 4543, 4541, 4538, 4536, 4532, 59,
	4531, 4530, 4528, 4526, 4523, 4522, 4521, 4515, 4512, 4510,
	4508, 4506, 4505, 4501, 4497, 4496, 4494, 4493, 4492, 4491,
	69, 4485, 284, 4484, 4483, 4480, 4476, 4473, 4472, 4471,
	4469, 4467, 4464, 4462, 4461, 283, 4458, 137, 170, 4456,
	4454, 4004, 4453, 4450, 282, 4447, 4445, 4444, 4442, 4441,
	294, 4440, 4439, 4438, 4437, 4436, 4435, 4432, 4431, 4430,
	4429, 4427, 4426, 78, 142, 4425, 4418, 1167, 4417, 4416,
	4413, 4412, 4410, 4409, 4408, 4407, 4404, 4403, 4402, 258,
	181, 4401, 281, 4400, 4399, 4397, 4394, 4393, 4392, 4391,
	4390, 4389, 4388, 4386, 4385, 4384, 4383, 4382, 4380, 4378,
	4371, 4369, 4367, 4365, 4364, 4363, 4362, 4360, 4358, 4356,
	4355, 4354, 4353, 4351, 4348, 4347, 4345, 4344, 4339, 4338,
	4333, 4332, 4330, 253, 225, 121, 4320, 4314, 279, 277,
	4313, 4312, 4307, 4306, 4301, 4297, 4294, 4293, 4292, 4291,
	4290, 4289, 4287, 4285, 157, 5, 44, 4284, 4282, 133,
	90, 95, 91, 110, 108, 4281, 126, 4279, 143, 114,
	4266, 116, 107, 33, 22, 249, 257, 7269, 252, 4265,
	4264, 4263, 255, 208, 4257, 248, 4256, 4254, 4253, 4252,
	4251, 4250, 73, 57, 214, 4249, 4247, 153, 183, 195,
	191, 186, 185, 89, 55, 109, 87, 63, 43, 14,
	88, 218, 18, 6, 271, 4244, 268, 3, 156, 16,
	28, 4243, 4242, 4240, 4239, 3732, 125, 4238, 276, 254,
	179, 4237, 4235, 4234, 634, 4233, 4232, 53, 334, 330,
	104, 117, 99, 141, 4225, 167, 172, 49, 4223, 246,
	85, 4222, 4221, 101, 102, 9368, 13193, 4220, 4219, 134,
	82, 122, 3556, 160, 158, 209, 193, 176, 178, 62,
	222, 219, 189, 273, 4218, 259, 4217, 3649, 92, 190,
	173, 6052, 4216, 4215, 4214, 93, 4213, 112, 4212, 4211,
	71, 10, 1, 2, 155, 39, 37, 30, 4209, 23,
	139, 51, 25, 4208, 19, 4207, 4205, 4204, 4202, 52,
	4195, 46, 174, 4194, 4193, 290, 4192, 86, 61, 74,
	4191, 45, 232, 4189, 241, 150, 4187, 4186, 264, 213,
	194, 4185, 75, 240, 4183, 4180, 4179, 4178, 4177, 4175,
	154, 7, 144, 4174, 4172, 166, 4170, 60, 251, 207,
	4168, 67, 4163, 4157, 188, 58, 161, 289, 135, 233,
	130, 238, 196, 236, 4152, 4149, 4148, 230, 4144, 4141,
	224, 177, 4138, 4137, 266, 291, 100, 48, 113, 245,
	83, 206, 169, 4135, 210, 4129, 4127, 292, 192, 226,
	35, 11, 21, 111, 115, 4126, 9, 243, 171, 239,
	128, 4122, 8166, 2904, 2623, 4121, 4120, 164, 136, 80,
	145, 168, 274, 97, 4119, 4118, 2792, 4116, 4115, 4114,
	4111, 202, 4110, 4109, 4108, 163, 159, 215, 4106, 127,
	76, 54, 24, 132, 260, 278, 129, 234, 198, 261,
	4104, 4103, 4102, 205, 4101, 96, 442, 180, 212, 270,
	66, 4100, 200, 4098, 175, 533, 72, 165, 4096, 229,
	4093, 4092, 4091, 4090, 4089, 4088, 4087, 197, 242, 4085,
	4084, 4083, 50, 204, 4081, 269, 272, 199, 123, 56,
	4080, 103, 3642, 4079, 131, 231, 64, 4, 4078, 29,
	4077, 4674, 65, 4076, 0, 13924, 10011, 12760, 13449, 4075,
	4507, 4074, 4073, 4071, 227, 81, 4070, 4069, 4068, 119,
	4067, 94, 4065, 4064, 79, 4062, 20, 15, 17, 36,
	27, 358, 280, 4060, 4058, 26, 149, 147, 4057, 285,
	228, 4056, 4055, 4054, 4053, 106, 4052, 47, 4051, 40,
	4050, 4046, 42, 13, 31, 4045, 4044, 162, 4043, 118,
	220, 4042, 182, 4041, 84, 146, 4040, 4039, 4038, 70,
	68, 262, 217, 223, 98, 4036, 299, 4035, 211, 4034,
	4033, 32, 4029, 4026, 250, 124, 120, 41, 256, 151,
	38, 187, 221, 4025, 4024, 184, 4022, 4020, 4019, 296,
	4018, 3605, 275, 4017, 34, 4016, 4012, 4011, 12, 4010,
	4008, 216, 3346, 4007, 4006, 8, 3934, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	13, 13, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 53, 53, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 39, 41, 40, 34, 34, 35,
	35, 36, 37, 37, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 42, 42, 22,
	22, 44, 44, 23, 23, 45, 45, 621, 621, 621,
	622, 622, 623, 623, 623, 26, 47, 19, 20, 20,
	20, 20, 624, 624, 624, 624, 38, 27, 48, 31,
	31, 31, 31, 31, 217, 217, 217, 217, 25, 25,
	43, 43, 260, 260, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 617, 617, 262, 262, 261, 249,
	249, 250, 250, 251, 251, 625, 625, 263, 263, 263,
	264, 264, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 516, 516, 516, 547, 547, 547, 547, 549,
	549, 644, 644, 645, 645, 645, 645, 645, 136, 136,
	413, 413, 413, 57, 57, 57, 57, 57, 612, 612,
	219, 219, 219, 221, 221, 220, 220, 220, 220, 220,
	81, 81, 631, 631, 630, 629, 629, 629, 632, 632,
	632, 218, 218, 218, 132, 132, 132, 132, 132, 132,
	132, 132, 133, 133, 134, 134, 222, 222, 222, 224,
	224, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 228, 18, 18, 18, 115, 115,
	115, 115, 115, 115, 115, 110, 110, 551, 551, 552,
	552, 213, 213, 214, 214, 214, 214, 215, 215, 216,
	216, 216, 72, 72, 225, 225, 227, 227, 226, 226,
	226, 226, 226, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 60, 60, 60, 60, 60, 61, 61, 61,
	61, 61, 61, 62, 62, 62, 62, 62, 62, 63,
	63, 70, 70, 70, 70, 70, 70, 70, 70, 195,
	195, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 78, 78, 78, 78, 78, 646,
	646, 646, 646, 646, 646, 646, 646, 646, 646, 646,
	646, 646, 646, 646, 646, 646, 646, 646, 647, 647,
	648, 648, 649, 649, 650, 650, 650, 650, 650, 650,
	650, 650, 650, 650, 650, 650, 650, 650, 650, 650,
	650, 650, 650, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	87, 87, 373, 373, 336, 336, 88, 88, 88, 89,
	89, 90, 90, 74, 74, 610, 610, 389, 389, 507,
	507, 75, 618, 618, 618, 620, 620, 619, 619, 92,
	92, 412, 412, 93, 93, 93, 93, 93, 93, 94,
	94, 94, 94, 94, 94, 94, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	102, 102, 102, 102, 102, 103, 103, 103, 100, 100,
	100, 97, 97, 97, 96, 96, 96, 101, 101, 101,
	609, 325, 325, 99, 99, 99, 98, 98, 98, 390,
	390, 104, 104, 104, 104, 337, 105, 105, 105, 105,
	105, 105, 105, 105, 108, 108, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 509,
	509, 4, 4, 255, 255, 254, 254, 254, 254, 5,
	5, 5, 258, 258, 257, 256, 106, 106, 106, 474,
	474, 111, 111, 111, 428, 428, 112, 112, 112, 112,
	112, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 614, 614, 382, 382, 288, 288, 288, 288,
	124, 124, 124, 124, 125, 125, 125, 125, 126, 126,
	200, 200, 142, 142, 142, 142, 141, 141, 141, 141,
	141, 141, 141, 141, 64, 64, 64, 65, 65, 66,
	66, 67, 67, 68, 68, 69, 69, 69, 69, 69,
	145, 145, 641, 641, 147, 144, 144, 144, 144, 144,
	143, 143, 146, 146, 146, 146, 148, 150, 150, 150,
	150, 150, 149, 149, 149, 149, 149, 151, 151, 541,
	541, 398, 398, 539, 539, 561, 561, 540, 540, 343,
	343, 343, 343, 343, 344, 344, 344, 550, 550, 550,
	550, 550, 550, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 201, 201,
	201, 202, 202, 206, 206, 207, 207, 207, 208, 208,
	208, 205, 205, 205, 203, 203, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 211, 211, 209, 209,
	210, 210, 652, 652, 651, 651, 212, 212, 212, 212,
	212, 177, 177, 177, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 399, 399, 180, 180, 180,
	164, 164, 153, 153, 153, 153, 153, 153, 153, 158,
	158, 158, 158, 158, 158, 158, 158, 154, 154, 166,
	166, 166, 166, 166, 159, 159, 160, 160, 160, 161,
	161, 161, 161, 188, 188, 163, 163, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 155, 155, 155, 155,
	168, 168, 168, 168, 435, 435, 435, 193, 193, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 191, 191, 191, 191, 191,
	191, 633, 633, 634, 634, 634, 184, 184, 184, 184,
	184, 184, 488, 488, 178, 178, 178, 178, 183, 183,
	183, 183, 186, 186, 186, 186, 418, 418, 175, 175,
	175, 176, 176, 176, 181, 181, 182, 374, 374, 179,
	179, 185, 185, 185, 185, 187, 187, 187, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 157, 157, 157,
	157, 189, 189, 174, 174, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 653, 653, 170, 170,
	170, 169, 169, 169, 169, 172, 172, 173, 173, 173,
	173, 173, 173, 171, 162, 192, 611, 611, 607, 607,
	607, 607, 607, 607, 607, 607, 608, 608, 608, 608,
	613, 613, 116, 116, 116, 116, 116, 116, 116, 127,
	127, 127, 127, 127, 127, 127, 130, 130, 117, 117,
	117, 117, 117, 117, 117, 120, 120, 118, 118, 118,
	118, 119, 119, 82, 82, 82, 82, 82, 17, 17,
	17, 83, 83, 279, 279, 233, 233, 233, 361, 361,
	234, 234, 351, 351, 351, 351, 229, 229, 230, 230,
	231, 232, 232, 84, 84, 654, 654, 654, 626, 626,
	626, 627, 627, 627, 627, 627, 627, 345, 345, 346,
	346, 454, 454, 454, 454, 454, 349, 349, 349, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 359, 360,
	360, 352, 352, 358, 357, 357, 356, 356, 355, 355,
	353, 354, 354, 354, 363, 363, 362, 365, 365, 364,
	453, 570, 570, 572, 572, 572, 572, 572, 572, 572,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 436, 436, 655,
	655, 656, 657, 568, 568, 568, 569, 564, 564, 565,
	565, 565, 565, 565, 347, 347, 348, 348, 348, 348,
	566, 567, 380, 380, 492, 571, 571, 573, 573, 575,
	658, 658, 658, 658, 658, 658, 659, 659, 659, 452,
	452, 451, 451, 450, 450, 371, 371, 576, 576, 576,
	576, 577, 577, 577, 577, 577, 580, 579, 578, 578,
	578, 578, 578, 86, 86, 86, 415, 415, 414, 414,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 197, 197, 291, 291, 291,
	80, 80, 80, 14, 14, 14, 14, 14, 14, 14,
	306, 306, 15, 15, 15, 628, 628, 628, 85, 85,
	85, 85, 85, 85, 369, 369, 369, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 616, 616, 615, 615, 292, 292, 661,
	661, 91, 91, 91, 91, 91, 91, 91, 91, 510,
	510, 511, 511, 79, 79, 79, 79, 79, 437, 437,
	434, 434, 433, 433, 379, 379, 490, 490, 490, 491,
	296, 296, 297, 297, 252, 252, 252, 33, 32, 24,
	24, 28, 28, 29, 29, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 30, 30, 50, 50, 50, 50,
	51, 51, 51, 51, 54, 54, 55, 55, 49, 49,
	49, 49, 52, 52, 46, 46, 56, 56, 56, 56,
	56, 635, 637, 637, 636, 636, 640, 640, 640, 640,
	640, 640, 638, 638, 639, 639, 642, 642, 643, 643,
	123, 123, 128, 128, 128, 128, 128, 129, 129, 129,
	129, 131, 131, 131, 131, 140, 140, 196, 196, 196,
	196, 196, 196, 196, 58, 58, 58, 58, 71, 71,
	71, 71, 138, 663, 663, 663, 139, 139, 139, 662,
	662, 289, 289, 447, 447, 448, 448, 664, 664, 449,
	449, 449, 449, 449, 282, 281, 283, 283, 284, 284,
	77, 77, 77, 272, 272, 271, 273, 273, 274, 274,
	269, 269, 553, 553, 276, 276, 276, 277, 277, 265,
	265, 266, 266, 267, 267, 268, 268, 280, 280, 548,
	548, 665, 665, 114, 114, 114, 199, 199, 335, 335,
	335, 444, 444, 444, 372, 372, 303, 303, 446, 446,
	446, 446, 446, 411, 411, 411, 198, 198, 387, 387,
	401, 401, 402, 402, 504, 504, 403, 121, 121, 122,
	122, 137, 137, 237, 237, 235, 235, 235, 235, 235,
	235, 235, 235, 242, 242, 243, 243, 244, 244, 245,
	246, 246, 246, 246, 391, 391, 247, 247, 247, 236,
	236, 236, 238, 238, 238, 238, 238, 238, 238, 241,
	241, 241, 241, 248, 248, 248, 240, 240, 587, 587,
	587, 589, 589, 591, 591, 590, 590, 586, 586, 588,
	588, 660, 660, 417, 417, 417, 368, 370, 366, 366,
	367, 367, 377, 377, 375, 376, 376, 378, 378, 489,
	489, 489, 253, 253, 253, 408, 408, 408, 408, 409,
	409, 440, 440, 438, 438, 438, 438, 439, 439, 441,
	441, 441, 442, 442, 443, 443, 405, 405, 406, 406,
	407, 407, 407, 407, 470, 470, 239, 239, 239, 384,
	384, 384, 385, 385, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 461, 461, 459, 459, 459,
	459, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	494, 495, 495, 386, 386, 496, 445, 445, 605, 605,
	605, 606, 606, 487, 487, 497, 497, 497, 497, 497,
	497, 485, 485, 486, 486, 505, 506, 506, 421, 421,
	421, 421, 419, 419, 422, 422, 422, 422, 422, 420,
	420, 498, 498, 498, 498, 410, 410, 499, 499, 499,
	499, 500, 501, 501, 502, 502, 455, 456, 456, 512,
	512, 512, 512, 514, 383, 383, 383, 383, 383, 563,
	562, 562, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 529, 529, 529, 529, 529, 529, 529,
	515, 515, 515, 515, 515, 519, 519, 519, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 520,
	520, 525, 525, 526, 526, 526, 521, 522, 527, 527,
	527, 527, 666, 666, 531, 531, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 517, 517, 517, 524, 524,
	524, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 429, 429, 431, 431, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 464,
	464, 464, 464, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 581, 581,
	581, 581, 581, 581, 581, 581, 466, 466, 584, 584,
	585, 585, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 592, 592, 593, 593, 595, 595, 596,
	596, 597, 598, 598, 598, 599, 600, 600, 594, 594,
	601, 601, 601, 601, 602, 602, 603, 603, 603, 603,
	603, 604, 604, 604, 604, 604, 476, 476, 477, 477,
	483, 483, 483, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 342, 342,
	341, 293, 293, 293, 293, 293, 293, 396, 396, 394,
	394, 394, 397, 397, 395, 395, 393, 393, 392, 392,
	473, 473, 471, 471, 475, 475, 423, 423, 530, 530,
	530, 530, 530, 530, 530, 530, 424, 424, 424, 432,
	425, 425, 426, 426, 426, 426, 426, 467, 468, 427,
	427, 427, 469, 469, 478, 482, 482, 481, 480, 480,
	479, 479, 457, 457, 458, 458, 404, 404, 667, 667,
	400, 400, 503, 503, 503, 503, 339, 339, 388, 388,
	338, 338, 330, 330, 331, 331, 331, 331, 381, 381,
	484, 484, 532, 532, 533, 533, 534, 534, 535, 535,
	536, 537, 538, 472, 472, 314, 313, 300, 301, 312,
	311, 310, 299, 302, 307, 308, 309, 304, 305, 321,
	320, 319, 270, 275, 326, 327, 327, 329, 329, 328,
	328, 316, 317, 318, 508, 298, 332, 332, 333, 333,
	333, 334, 334, 334, 334, 294, 294, 295, 295, 322,
	322, 323, 324, 324, 315, 315, 315, 285, 285, 285,
	286, 286, 287, 287, 546, 546, 543, 543, 543, 544,
	544, 544, 545, 545, 545, 545, 542, 542, 542, 542,
	542, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 555, 555, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 557, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 560, 560,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 0,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 4, 6, 9, 6,
	8, 4, 4, 5, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 4,
	3, 6, 6, 6, 6, 6, 8, 4, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 5, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 4, 3, 1, 2, 2, 2, 2, 2, 4,
	6, 3, 1, 2, 2, 7, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 7, 4, 7, 8, 8, 9, 11, 5, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 13,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 3, 2, 2, 6,
	3, 3, 3, 3, 4, 4, 3, 1, 3, 3,
	2, 2, 1, 3, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 2, 2,
	2, 9, 2, 1, 0, 1, 1, 0, 1, 2,
	0, 2, 2, 0, 2, 2, 1, 2, 3, 3,
	4, 4, 4, 4, 3, 3, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 3, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 6, 4, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 5, 3, 5, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 3, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 5, 2, 0, 3,
	3, 4, 3, 3, 3, 5, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 7,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 12, 15, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 1, 1, 1, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	0, 1, 0, 1, 1, 0, 1, 4, 1, 0,
	3, 7, 7, 1, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 3, 6, 4, 2, 3, 5,
	5, 5, 2, 5, 5, 2, 2, 2, 0, 1,
	1, 3, 4, 10, 11, 9, 5, 3, 1, 5,
	9, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 6, 1, 3, 1, 2, 0, 1, 2, 3,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 3, 0, 4, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 3, 2, 2,
	4, 7, 3, 4, 6, 5, 7, 5, 5, 3,
	3, 0, 2, 2, 2, 1, 1, 1, 8, 10,
	11, 8, 11, 5, 4, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 16, 19, 15, 18, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 8, 8,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	14, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 7, 10, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 626, -107, -104, -72, -70, -111, -112,
	-93, -113, -106, -135, -140, -121, -122, -123, -136, -142,
	-196, -201, -202, -203, -212, -3, -57, -59, -73, -92,
	-94, -105, -115, -114, -116, -124, -132, -127, -110, -64,
	-137, -141, -152, -197, -198, -199, 33, 32, 103, 83,
	159, 132, 141, 210, 400, 448, 460, 416, 146, 439,
	421, -146, -147, 479, -58, -71, -139, -138, 76, 133,
	175, 431, -6, -14, -18, 30, 48, -60, -61, -62,
	-63, 65, -80, -76, -87, -81, -74, -75, -78, -646,
	105, -588, -95, -98, -131, -650, 167, 229, -117, -118,
	-119, 382, -125, -126, 441, -128, -129, -130, 444, 168,
	-66, -65, 161, -235, -237, -144, -143, -145, -200, -153,
	-154, -155, -156, -157, -158, -159, -161, -188, -162, -163,
	-164, -165, -166, -167, -171, -191, -168, -169, -170, -173,
	-172, -174, -179, -175, -176, -177, -178, -180, -181, -183,
	-184, -185, -186, -187, -189, -190, 484, -182, -192, -160,
	547, 52, 500, 85, 151, 452, 21, -7, -8, -9,
	-10, -11, -12, -13, -17, -16, -56, -4, -5, -77,
	-79, -82, -83, -84, -91, -85, -86, -587, -96, -97,
	-100, -102, -103, -99, -101, 440, 599, -238, -236, 623,
	563, -21, -26, -22, -23, -25, -27, -24, -28, -29,
	-30, -42, -47, -44, -45, -43, -46, -48, -49, -50,
	-51, -52, -53, -54, -55, -32, -38, -39, -33, -34,
	-35, -36, -37, -40, -41, -19, -20, -31, 586, 595,
	-241, -239, -240, -248, 471, 571, 521, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, -337, 2, -316, -322, -323, -324, -315, -285,
	-557, -560, 4, -554, -558, 174, 239, 343, 21, 22,
	24, 23, 25, 26, 27, 28, 30, 31, 41, 43,
	44, 46, 47, 48, 49, 50, 51, 52, 56, 58,
	62, 63, 64, 65, 66, 67, 71, 76, 77, 82,
	83, 84, 85, 86, 87, 88, 94, 91, 92, 93,
	95, 97, 99, 100, 101, 102, 103, 104, 106, 107,
	108, 110, 111, 112, 120, 121, 122, 123, 124, 126,
	132, 127, 133, 136, 131, 135, 137, 139, 140, 141,
	144, 145, 146, 148, 149, 150, 152, 153, 154, 156,
	157, 159, 160, 161, 164, 162, 165, 163, 166, 167,
	168, 169, 172, 180, 181, 182, 187, 189, 190, 191,
	193, 196, 197, 198, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 211, 215, 217, 218, 219, 220, 221,
	222, 228, 229, 231, 232, 233, 234, 235, 240, 241,
	242, 246, 252, 253, 257, 258, 259, 261, 265, 266,
	267, 268, 269, 270, 272, 274, 273, 276, 279, 280,
	283, 284, 285, 286, 287, 288, 292, 293, 289, 294,
	295, 297, 298, 301, 299, 302, 303, 300, 304, 306,
	307, 308, 309, 310, 311, 312, 313, 314, 315, 316,
	317, 305, 320, 318, 322, 323, 324, 325, 326, 341,
	336, 337, 338, 330, 331, 327, 332, 328, 329, 333,
	334, 340, 335, 345, 346, 347, 348, 351, 226, 245,
	353, 354, 357, 359, 376, 362, 363, 364, 367, 368,
	371, 374, 375, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 387, 388, 390, 391, 392, 394, 395, 396,
	398, 400, 401, 403, 404, 405, 407, 408, 409, 410,
	411, 412, 413, 415, 416, 418, 417, 419, 421, 423,
	424, 425, 431, 432, 439, 433, 435, 436, 437, 438,
	440, 441, 442, 443, 444, 446, 447, 448, 450, 451,
	452, 453, 454, 456, 458, 459, 463, 464, 465, 481,
	482, 503, 460, 461, 462, 466, 467, 468, 469, 470,
	474, 472, 473, 475, 476, 477, 479, 480, 483, 484,
	486, 487, 488, 489, 490, 491, 492, 495, 497, 498,
	499, 500, 501, 520, 502, 504, 508, 509, 510, 511,
	505, 506, 519, 513, 514, 516, 517, 522, 523, 524,
	525, 526, 527, 528, 529, 531, 539, 540, 541, 542,
	544, 547, 548, 549, 550, 537, 552, 553, 556, 557,
	561, 558, 562, 559, 560, 563, 565, 568, 569, 570,
	576, 575, 577, 578, 579, 581, 582, 587, 588, 590,
	591, 592, 37, 53, 54, 57, 59, 61, 72, 73,
	74, 78, 128, 129, 158, 170, 171, 183, 199, 200,
	212, 214, 223, 224, 225, 247, 248, 250, 255, 277,
	350, 352, 369, 373, 389, 393, 397, 399, 414, 455,
	493, 507, 512, 532, 533, 534, 535, 543, 545, 571,
	572, 573, 580, 589, -337, 2, -316, 360, -309, 2,
	-285, -285, 400, 29, 2, 29, 388, 473, 524, 526,
	2, -614, -382, 2, 29, -288, -285, 105, 210, 471,
	-309, 2, -614, 210, -382, 26, 2, -285, 2, 374,
	23, 28, 69, 80, 101, 144, 169, 192, 196, -649,
	376, 408, 458, 475, 519, 529, 544, 2, 575, 298,
	472, 521, 239, 123, 549, 466, -628, 463, 464, 374,
	406, 450, 213, 564, -289, 2, 460, -285, 298, 2,
	626, 97, 77, 455, 476, -149, 2, 288, 540, -150,
	-151, -148, 532, -541, 466, 450, 320, -285, 626, 626,
	626, 29, -298, 2, -285, -298, 2, -204, 2, -298,
	-651, -211, -210, -209, 22, 432, 182, 270, 194, 230,
	325, 403, 193, 50, 521, 239, 466, 123, 517, 626,
	2, 521, 379, 575, 472, 123, 411, 239, 549, 196,
	144, 28, 71, 48, 466, -628, 600, 601, 298, 130,
	-612, 2, -607, 4, -558, -554, -331, -330, 521, 527,
	123, -324, -315, 615, -323, 626, 626, 626, 626, 2,
	258, 259, 410, 409, 476, 477, 29, 626, 626, 626,
	626, 463, 2, 169, 23, 28, 69, 96, 101, 130,
	192, 196, 365, -647, 376, 408, 475, 519, 523, 529,
	544, -627, 502, 71, 438, 466, -626, -628, 298, 549,
	144, -433, 123, 288, 208, 557, 526, 524, 555, 136,
	246, 560, 559, 626, 626, -108, 2, 623, 33, 32,
	-107, -111, 146, 479, -228, 521, 251, 2, -285, 626,
	626, 626, 2, 258, 259, 463, 464, 29, 626, 626,
	194, -607, 517, 2, 626, 626, 626, 2, 29, 258,
	259, 463, 464, 251, 2, 71, 468, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 2, -194, 476, 502, 219, 49,
	48, 77, 29, 407, 82, 380, 124, 130, 153, 550,
	211, 239, 240, 266, 96, 97, -435, 46, 259, 71,
	258, 464, -633, 463, -488, 522, 467, 473, 516, 270,
	460, 540, 542, 105, 565, 451, 592, 411, 412, 514,
	425, 289, 162, 195, 4, 123, 320, 450, 478, 274,
	273, 532, 288, 459, 383, 87, 626, -660, 2, 521,
	-662, 2, 540, 540, 2, -662, 2, -662, 2, -662,
	2, -663, 540, 589, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, -236, -238, -237, 626, 626, 626,
	626, 626, 626, 626, -194, 476, 2, 77, 29, 29,
	-375, -377, 554, 249, 155, 366, -235, -237, 2, -587,
	-539, 2, -462, -561, -464, 613, 614, 606, 518, 70,
	-341, 342, 593, -476, 130, 555, 360, -560, -465, -478,
	158, 376, 455, -397, 8, 9, 5, 6, 7, -294,
	-466, -472, 546, 173, 349, -334, 627, 10, 623, -584,
	-237, -477, 38, 214, 68, -543, -333, -295, -515, 250,
	-332, -315, -581, -582, 4, -554, -555, -544, -518, -526,
	-522, -523, -529, -285, -557, 80, 114, 115, 113, 118,
	117, 291, 290, 119, 116, 478, 564, 69, 37, 223,
	224, 255, 350, 225, 78, -583, 145, -556, 247, 248,
	493, 54, 414, 183, 129, 128, 352, 59, 57, 572,
	-527, 125, 532, 533, 534, 535, 199, 200, 61, 170,
	171, 373, 397, 512, 543, 545, 212, 277, 45, 109,
	195, 244, 227, 254, 256, 260, 278, 281, 321, 339,
	344, 370, 372, 449, 485, -666, 573, 507, 72, 73,
	-589, 417, -590, -309, -589, 626, 626, 628, 626, -366,
	-368, -370, 2, 29, 142, 623, 2, -493, 2, -494,
	-498, -237, 271, -497, 623, -495, 621, -316, 361, -585,
	456, -581, -582, -294, -315, -333, 4, -554, -556, 625,
	-371, 623, 123, 466, 521, 81, 239, 96, 169, 196,
	-428, 623, -285, 29, 360, 536, 628, -367, 405, -474,
	623, 360, 363, 194, 363, 63, 302, 2, 2, 2,
	2, 2, 223, -285, 521, 122, 2, 269, 2, 2,
	2, 2, 2, 2, 2, -390, 223, 2, -316, 575,
	-390, 223, 2, -390, 223, 2, -434, 2, 90, -299,
	223, 2, -285, -325, 223, 2, -320, -322, -329, 223,
	2, -327, -285, -549, 223, 2, -547, 4, -554, 119,
	478, -462, 2, -137, 2, 63, -285, 575, 2, 481,
	2, 623, -149, 2, 74, 540, 45, 476, -150, 2,
	-448, 2, -449, -281, -282, -283, -505, -284, 257, 404,
	413, 596, 134, 342, 592, -641, 194, 605, 536, -539,
	-539, -539, -398, 625, -206, 56, -298, -652, -651, -652,
	-537, 29, -532, 8, -533, 613, 614, -537, -537, -652,
	-652, 2, 2, 2, 2, 2, 2, -498, 223, -316,
	2, -313, -542, 4, -554, -558, -555, -559, -557, 29,
	32, 33, 34, 36, 38, 39, 40, 42, 60, 68,
	69, 75, 79, 81, 90, 96, 105, 113, 114, 116,
	115, 117, 118, 119, 130, 134, 138, 142, 143, 147,
	151, 155, 173, 175, 188, 192, 194, 210, 213, 216,
	230, 243, 249, 251, 271, 275, 282, 290, 291, 342,
	349, 355, 360, 361, 365, 366, 386, 402, 420, 445,
	471, 478, 496, 515, 521, 530, 536, 538, 546, 554,
	555, 564, 566, 574, 583, 584, 585, 586, -560, 80,
	2, -498, 223, 2, -319, 223, -498, -322, 2, -299,
	2, -462, -621, 528, 165, 433, 2, -338, 223, -316,
	-318, -322, -320, 2, 2, 2, 2, -462, 2, -551,
	2, -546, 10, -545, 5, 4, -554, -558, -555, -327,
	2, -547, 223, 2, 29, 29, 575, 405, 251, 536,
	628, -388, -330, -331, -538, 8, -381, -285, 625, -462,
	2, -137, -120, 2, 188, -462, 223, 2, -137, 223,
	2, -462, 223, 2, -137, 223, 2, -285, 2, -629,
	2, -551, 223, 223, -285, 2, 302, 2, 2, 544,
	2, 101, 521, 122, 2, 437, -648, 458, 548, 2,
	2, 2, 2, 2, 2, 2, 521, -304, 2, -285,
	188, 505, -327, 223, -328, 2, 472, -661, 417, -547,
	223, 2, 575, -320, 223, 2, -320, 239, 253, -299,
	223, 2, 526, 524, 526, 524, 194, 2, 251, 2,
	251, 2, -499, 2, -500, -494, -501, 621, 361, -509,
	2, -508, -545, 571, -108, 623, -108, 623, 476, 623,
	-551, -316, -316, -462, 2, -137, -120, 2, -462, 2,
	-137, 2, -285, 2, -134, -551, -133, 623, 194, 565,
	-285, 2, -462, 2, -137, -120, 2, -462, 2, -137,
	2, -228, 188, 2, 123, 521, -194, 2, 188, 566,
	2, 8, 2, 230, -551, 467, 412, 180, 2, 481,
	2, 482, 77, -435, 592, 77, 194, 2, 194, 2,
	-418, 2, 586, 405, 194, 2, 2, -611, 2, 360,
	194, 2, 194, 2, 194, 2, 194, 2, 194, 2,
	-193, 477, 541, 520, 409, 259, 2, -137, 583, -120,
	259, 258, -462, 583, 2, -634, 188, 464, -462, 2,
	539, 268, 163, 194, -418, 2, 194, 2, 194, 2,
	5, 2, 410, 503, 2, 257, 404, 503, 2, 501,
	2, -316, 521, 575, 472, 123, 29, 2, 463, 2,
	2, 91, 92, 194, 2, 194, 2, 209, 194, 2,
	194, 521, -399, 625, 592, 2, -410, -498, -447, -448,
	-447, 536, -375, -377, -194, 481, 2, -242, -408, -244,
	188, -438, -439, -245, 282, 175, 355, -246, -417, 29,
	142, -417, -417, 63, 624, 624, 11, 12, 79, 43,
	613, 614, 615, 616, 186, 617, 618, 611, 612, 610,
	603, 604, 608, 263, 264, 98, 607, 605, 89, 296,
	457, 176, 177, 178, 179, 434, 237, 35, 238, 14,
	15, 16, -341, 34, 365, 281, 593, 227, 485, 606,
	17, 18, 19, 254, 256, 344, 53, 230, -293, 376,
	-340, 518, 70, -462, -462, -462, -462, -462, -462, -462,
	-462, 372, 623, -404, -457, 621, -237, 623, 623, 623,
	623, -538, -237, -462, -476, 624, -395, 623, -237, -476,
	-471, 623, 455, 621, 623, -479, -462, 5, 5, 5,
	623, 625, -592, 587, 188, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 399, -520, 623, -519, 623, -519, -519, 576, -517,
	623, 595, 588, 623, -517, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 576, 628,
	-589, -371, 623, -400, -503, -462, 615, -400, -400, 360,
	-392, -462, 109, -421, 260, 321, 195, 278, 449, 244,
	-459, 627, -459, -487, 595, -237, -495, -315, -237, -497,
	623, -493, -487, -109, -538, -92, -105, -114, -137, -152,
	-198, -199, 615, -316, 623, 194, 623, 625, -542, 194,
	-381, -299, -326, -285, -316, -332, -333, -338, -310, -285,
	2, 2, 141, -392, -607, 549, 466, 29, 472, -549,
	-288, 39, -473, -512, -513, -563, 627, -562, -515, -525,
	-521, -524, 389, 393, -544, 57, 572, -527, 250, 4,
	-554, -556, 247, 248, 493, 54, 414, 183, 129, 128,
	352, 59, 532, 533, 534, 535, 199, 200, 61, 573,
	507, 72, 73, -607, 549, 466, 29, 472, 188, -549,
	188, -549, 2, 2, 158, 2, 2, 2, -285, -263,
	628, 67, 442, 158, -390, 223, -263, 158, -263, 158,
	-339, 223, -338, -263, 158, -263, 628, 158, -263, 628,
	158, 625, 628, 158, -549, 2, -434, -541, -392, 39,
	-448, 2, 130, 4, 5, -664, 628, 280, -344, 295,
	341, 218, 361, 590, 353, 134, -550, 5, 4, -472,
	-484, 130, 288, 250, -532, -534, 9, -535, 613, 614,
	-540, -539, 112, 625, -542, -207, 245, 41, -298, -298,
	-652, -652, 8, 8, -652, -652, -298, -298, -260, 435,
	479, 375, -259, 25, 30, 146, 241, 326, 569, 164,
	-356, 242, 440, -353, 379, 158, 497, 558, -621, -624,
	462, 528, 165, 433, 93, 353, 479, 375, 435, 158,
	-414, -416, 39, 121, 326, 374, 64, 233, 300, 301,
	500, 580, 158, 479, 375, 435, 375, -15, -274, 25,
	146, -276, -271, 479, -624, 102, 435, 599, 440, 385,
	513, 402, -624, -621, 276, -623, 582, 340, -262, 497,
	558, -621, -624, 462, 435, -261, -358, -353, 379, 158,
	627, 25, 146, 435, 479, 375, -644, -645, 30, -255,
	-254, 25, 146, 479, 561, -258, 230, -257, 25, 435,
	375, -615, -306, -586, 230, 586, 158, -306, -306, -498,
	223, -638, 188, 2, -631, -133, 272, 5, 10, -551,
	-133, -388, 628, 628, -542, 615, 464, 463, 158, 158,
	158, 158, 259, 188, 342, 342, 586, 2, 2, 2,
	2, 2, 196, -626, -649, 2, 2, -316, 223, -373,
	360, -610, -389, 521, -316, 188, 342, 45, -319, 223,
	2, -322, 575, -615, 342, -321, 223, -316, 39, 623,
	342, 2, -434, 2, 239, -586, 342, -499, -335, -316,
	-494, -335, 479, -309, 39, -459, -316, 624, 628, -509,
	-509, -551, -216, 586, 194, 623, -228, 586, 586, 259,
	-506, 628, -505, 230, -552, -551, -134, -551, 438, 194,
	259, -551, -610, -299, 2, -316, 2, 521, 261, -551,
	-216, 230, -551, -551, -551, -541, 29, 482, 2, -193,
	477, 541, 92, 482, 2, -316, 521, 123, 239, 83,
	-638, 188, 2, -285, -613, 188, -608, 450, 466, 549,
	-607, -316, 123, -316, 123, -316, 123, -316, -316, 2,
	2, 2, 2, 2, 88, 2, -137, -462, 2, 88,
	2, 48, 498, -634, 188, 2, 539, 2, 539, 2,
	-285, -285, -285, 502, 280, 586, -316, -316, -316, -317,
	-322, 467, 522, 550, 464, -462, 2, -653, 2, 194,
	188, 2, 521, 239, 521, 239, 123, 194, 77, 123,
	29, 521, 461, 625, 4, -263, 628, -289, -242, -408,
	-541, -409, -408, -243, -242, -245, 188, 413, 559, 326,
	483, 265, -439, -438, 29, -462, -443, 182, 325, -462,
	-441, -464, 613, 614, -533, -535, -391, 353, -236, -236,
	-236, -378, -489, -462, 402, 239, -514, -512, -512, -314,
	-542, 532, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, 281, 227,
	485, 53, 230, -462, 536, -462, -462, -462, -462, 318,
	342, 349, 546, 173, 556, 142, 353, -667, 515, 42,
	-469, -237, -396, 623, -483, 36, 496, 29, -476, 623,
	2, -457, -462, -458, -342, -340, -285, 613, 614, 615,
	616, 617, 618, 603, 604, 605, 14, 15, 16, 608,
	612, 610, 611, 186, 98, 607, 296, 457, 89, 176,
	177, 178, 179, 263, 264, 17, 18, 19, 35, 606,
	-393, -392, -392, 624, 574, 29, 142, 615, 2, 624,
	628, 39, 624, -462, -393, -475, -471, -392, -482, -481,
	583, -429, -430, 591, 305, 126, 221, 303, -431, 470,
	-536, 8, -542, 615, -593, 181, 213, 623, 624, 2,
	624, 2, 624, -462, 2, 624, -462, 2, 624, -462,
	2, 624, -462, 2, 624, 2, 624, 2, -462, -462,
	-462, -462, -462, -462, -462, -392, 8, -536, -536, 532,
	532, -536, -536, -536, -528, 389, 390, 391, 392, 283,
	284, 285, 286, 393, 394, 395, 396, 310, 311, 312,
	313, 306, 307, 308, 309, 314, 315, 316, 317, 204,
	205, 206, 207, 200, 201, 202, 203, -528, -423, 2,
	-530, -392, 4, 591, 305, 126, 221, 303, 470, 5,
	-423, 2, -424, 2, -462, -392, -425, -463, -464, 613,
	614, 606, -341, -476, -426, 2, -462, -393, -462, 60,
	275, 538, -427, -462, 194, -392, -392, 2, -392, 2,
	-590, 39, -392, -384, 628, 194, 39, 4, -384, -384,
	623, 624, 628, -422, 217, 299, 294, 253, -422, -493,
	-421, 260, -419, 370, -419, -419, -487, -300, 621, 629,
	-542, -487, -486, -485, 39, -309, 367, -487, -487, 625,
	624, -486, 622, -605, 623, 626, 626, 626, 626, 626,
	-316, 623, -392, -542, 625, 504, 2, 624, 254, 254,
	254, 254, 254, 360, 456, 624, 536, -609, -325, -329,
	522, 2, 586, -107, 362, 624, 628, -383, 38, 621,
	625, -536, 2, 2, -531, 576, 623, 623, -430, 623,
	194, -609, -329, 522, 2, -614, -382, -382, 536, -285,
	2, -316, -390, -263, 158, -390, -390, -263, 628, 158,
	-299, -320, -325, -327, -329, -285, -547, -549, -263, -321,
	-641, 624, 540, -449, -343, 413, 495, 436, 474, 517,
	9, 9, 628, -542, -208, 465, 326, -298, -298, -298,
	-298, 628, -642, 96, 536, 81, 623, 466, -278, 289,
	536, -453, 223, 81, -564, 96, -302, -565, -285, 75,
	555, 402, 192, 156, -642, 96, 402, -642, 96, 2,
	241, 96, 479, 502, 623, 29, 63, -498, 43, 43,
	29, -622, -623, 276, 194, 592, 521, 239, 466, 536,
	536, -498, -416, -512, 121, 300, 301, 63, -537, -537,
	63, -537, -537, -537, 586, -319, -498, 466, 536, 536,
	536, 423, 423, -271, -150, 536, 536, 29, -194, 443,
	130, -665, 605, 423, 276, -623, 536, 194, 628, 43,
	43, 29, -622, 194, 536, -338, -300, 570, 44, 570,
	44, 570, 536, 44, 466, 536, 628, 44, -254, -610,
	-610, -215, -214, -285, 5, -381, -257, -551, -256, 324,
	536, 536, -15, 479, -616, -290, 108, 332, 293, 333,
	100, 329, 99, 328, 106, 330, 107, 331, 577, 345,
	578, 346, 66, 327, 304, 334, 499, 335, 579, 347,
	-291, -292, 149, 381, 568, 123, -547, -15, -15, 479,
	375, 435, 158, -639, 230, 29, -628, 230, -506, 230,
	-506, -330, -285, 625, -137, -462, -462, -137, -462, -137,
	48, 158, 158, 2, 2, -661, 269, 623, -347, 342,
	194, -381, -507, 251, 628, -389, -607, 158, -547, -415,
	-414, 342, -321, 223, 2, 158, -371, 342, 152, 623,
	411, 2, 158, -301, 223, -286, -285, -434, -265, 525,
	158, -412, 566, -444, -137, 623, 130, 39, -444, -401,
	-402, -504, -403, -302, 623, -309, -459, -108, -508, 624,
	624, 624, -215, 364, -228, -372, -303, -302, 122, 415,
	415, -222, 586, -133, -134, 624, 628, -506, 230, 505,
	-134, -551, -216, -216, -506, -506, -316, 188, -551, -216,
	-216, -216, 2, 2, 2, 2, -418, -316, -299, -338,
	-316, 29, 625, -549, -549, -329, -325, -418, -299, -418,
	-299, -418, -299, -418, -418, -137, -462, 502, 2, 476,
	188, 188, 625, -418, -374, 445, 5, 2, 411, 123,
	521, 379, 239, -316, -338, -316, -338, -299, 123, -299,
	124, -316, 4, -498, -409, -243, 361, 265, 483, -441,
	-442, -464, 455, 456, -442, 455, 456, 8, 9, 8,
	9, -247, 487, 348, -390, 628, -252, 40, 138, 265,
	-316, 592, 154, -462, -462, 536, -667, 515, -469, 154,
	-462, 318, 349, 546, 173, 556, 142, 353, 194, 623,
	-463, -463, 624, -394, -462, -462, 622, 631, 624, 625,
	624, -377, 628, -375, -462, -392, -392, 624, 625, -392,
	-381, 622, 622, 628, 624, -480, -481, 147, -462, 536,
	536, 536, 536, 623, 624, 625, -598, 371, 623, 623,
	-462, 624, 624, 624, 624, 39, 628, 628, 628, 624,
	628, 628, 628, 624, 624, 624, 628, 624, 592, 592,
	624, 624, 624, 624, 628, 624, 628, 624, 194, 624,
	624, -432, 386, 624, 11, 12, 613, 614, 615, 616,
	186, 617, 618, 611, 612, 610, 603, 604, 605, 89,
	296, 457, 14, 15, 16, -341, 254, 230, -463, -463,
	-463, -463, 624, -467, -468, 194, 188, 39, -427, -427,
	-427, 624, 194, -392, 624, 624, 623, -591, 298, 342,
	624, -456, -455, 584, -503, -385, 2, -493, -311, -542,
	-456, -456, -392, -462, 260, 260, -420, 566, 360, -422,
	-493, -486, -538, -461, -460, 190, 40, 138, 336, 337,
	338, 226, 191, -486, -309, -371, -486, -486, -542, -487,
	-487, -485, 624, -606, -538, 624, -386, -496, -585, -377,
	625, -542, -225, -586, -195, 5, 349, -195, -195, -195,
	-195, -316, -549, 536, 536, 230, 26, 387, -512, 621,
	622, 8, -542, 623, -536, -536, -536, -549, 194, 194,
	230, 360, 194, -547, 2, -263, -390, -263, -263, -338,
	-339, -263, -263, -263, -413, 586, -539, -448, 553, 86,
	413, 532, -539, 120, 465, -259, 435, 479, -302, -302,
	-316, -232, -231, -229, -285, 5, -326, 208, 424, -547,
	342, -453, 223, -264, 342, 223, -310, -512, 623, -436,
	588, 265, 265, 566, -302, -310, 265, 223, -302, 223,
	-310, 2, -310, -617, 413, 354, -462, -230, -229, 63,
	-354, 287, 411, 343, -260, 435, 479, 375, -137, -137,
	-137, 623, -641, 566, 141, -316, -338, -316, -326, -547,
	-321, 479, 375, 435, 339, -332, -537, -537, -414, 479,
	375, 435, -326, -547, -319, -547, -270, 223, -285, -270,
	223, 466, -299, 423, 592, 47, -665, 536, 194, -462,
	-462, -261, -137, -137, -137, 623, -300, -262, 435, 5,
	223, -302, 5, -302, 223, 5, -285, -302, -326, -547,
	-645, 25, 146, -302, 628, 605, 605, -258, 605, -326,
	-547, -290, 381, -551, 349, 562, -299, -615, -306, 466,
	536, 536, -498, -635, -636, 210, 448, 466, 451, -549,
	-133, -219, 586, -133, -213, 234, 615, -612, -551, -285,
	575, -285, -345, -348, -346, -302, -454, -453, -568, -569,
	-564, 281, 239, 555, 253, 174, 96, -233, -234, 588,
	586, 158, -336, -316, 621, -216, -551, -316, -507, -327,
	-328, 158, -371, 342, -547, 39, 158, 623, 2, 2,
	-320, 360, 342, -301, 223, -266, 148, -665, -299, -456,
	-385, -411, -446, 445, 360, -372, 571, -309, -411, -387,
	628, 194, 605, 625, -372, -502, 615, -108, -108, -216,
	623, 623, -551, 624, 628, 625, 623, 605, 605, -224,
	364, -223, 150, 267, 252, 489, 490, 491, 492, 140,
	488, 127, 323, 235, 527, -506, -551, -222, -134, 194,
	-506, 230, 194, -67, 586, 521, -216, 627, 451, -285,
	-418, -418, -418, 476, 476, -285, -381, -312, -542, -299,
	-316, -313, -338, 188, 188, -299, 559, -442, 361, 292,
	-489, -253, 594, -316, 627, -462, -462, 154, 154, -462,
	-463, -463, -462, 154, 194, 623, -462, -473, 34, 34,
	624, 628, -458, -462, -340, 624, 574, -377, -377, 624,
	615, -542, 627, 624, -471, 151, -462, 530, 305, 221,
	303, -431, 303, -431, -431, -536, 5, -542, 615, -599,
	-305, 623, -285, 584, -376, 366, 624, -514, -512, -462,
	-462, -462, -462, -462, -536, -517, -517, -532, -532, -462,
	-467, -462, -514, -512, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, 142, 342, 353, -463, -468, -467,
	-462, -462, -512, 624, 624, 624, -392, -107, 623, 298,
	-405, 213, -462, -506, 628, -405, -405, 624, -493, -493,
	623, -462, 260, 622, 628, 630, 605, 605, -371, 625,
	-485, -486, 622, 624, 628, 624, 628, -445, 39, 624,
	-542, -456, -227, -226, 139, 56, 110, 137, 349, 254,
	-637, 586, -549, -549, 466, 363, 5, 8, 621, 622,
	625, -536, 624, 624, 624, -549, -549, 466, -607, 549,
	466, 29, -549, -263, -263, 122, 326, -462, -205, 586,
	588, 536, 536, 624, 628, 605, 63, 230, 158, 342,
	568, 342, -565, 156, -570, -462, 623, 239, 623, 623,
	2, -249, -250, -251, 146, 479, 25, -643, 2, 566,
	158, -263, 158, -263, 590, 624, 628, -354, 623, 623,
	536, 466, -278, 536, 586, -392, -462, -217, 130, -541,
	-624, 627, -624, 627, 466, 536, 536, 466, 536, 536,
	342, 158, 586, 172, 172, 592, -270, -462, -462, 188,
	536, 586, -392, 536, -516, 51, 27, 342, -320, -263,
	158, 536, 536, 549, 479, -214, -551, -551, -133, -551,
	-551, 349, -15, -326, -547, -321, 479, 375, 435, -614,
	-614, 210, -329, -639, -506, -221, 364, -220, 150, 447,
	140, 267, 235, -506, -219, 194, 251, 586, -321, 2,
	624, 624, 628, 628, -571, -264, -316, -301, 239, 239,
	-308, -286, 39, 357, 357, 623, -316, -88, 586, -505,
	-538, -618, 586, 45, -319, 39, 158, -615, -137, -321,
	-510, -511, 5, 39, -316, 158, 360, 342, -267, 274,
	-665, -546, -586, -377, -411, -400, 343, 94, 624, -456,
	-402, -385, -462, 2, 624, -215, -551, -216, -228, -303,
	2, -552, -551, -551, 628, 623, 605, 605, 605, 605,
	605, 605, 605, -222, -506, -133, -222, -134, -137, 364,
	-316, 615, -418, -360, -359, 379, 353, -360, 455, 455,
	361, 182, 270, -252, -300, -462, -462, 154, 34, 34,
	-462, -462, -473, 624, -462, -462, -392, 622, 5, -462,
	624, 624, 8, -462, 624, 625, -600, -285, -462, 624,
	63, 624, 624, 628, 628, 624, 624, 624, 624, 624,
	624, 624, -468, 194, 142, 353, 623, 624, 624, -107,
	-470, 216, 63, -493, -470, -470, -420, -381, -493, -460,
	-300, 621, -300, 621, -542, -538, -496, 623, 625, -226,
	605, -551, -551, -195, 210, -637, -637, 586, -329, 622,
	2, 621, -542, 624, -329, 194, -609, -329, 522, 122,
	188, 220, 220, -302, -302, -231, -539, 521, 455, -270,
	402, -453, 158, 158, -572, 96, -574, 79, 174, 105,
	342, 349, 555, 402, 75, 130, 360, 420, -655, -656,
	-657, 39, 597, 598, 624, -379, -490, -585, 623, -285,
	-379, -381, 342, 510, 130, 360, 342, 130, 360, 581,
	122, 2, 549, 82, -302, -310, -229, -381, -381, -316,
	-326, -547, 166, 624, 628, 605, 2, 615, 615, -326,
	-547, -321, -326, -547, -319, 158, -270, 377, 172, 536,
	-137, -462, 166, 624, -300, 5, 5, 158, -297, 79,
	-302, 5, -302, -320, 122, 586, 466, 536, 536, 360,
	360, 363, -635, -636, -219, 628, 623, 605, 605, 605,
	-219, -552, -133, 2, -371, -361, 241, -302, -569, -566,
	-567, 402, -454, -573, -575, 174, 402, -349, 623, -301,
	-286, 623, -137, 2, -232, 623, -347, 364, 622, -620,
	364, -619, 120, 140, -547, -415, -137, -321, -369, 586,
	-371, 624, 628, 152, -437, 566, -300, -316, 158, -268,
	273, -665, -546, -265, -440, -438, 143, 623, 360, -137,
	-377, 605, 624, 624, 122, 624, -223, -224, -551, -133,
	-551, -551, -551, -133, -551, -222, -506, -506, -68, -69,
	239, 96, 384, -313, 521, 239, 623, 623, -252, -462,
	-462, -462, 624, -377, -542, 615, -594, 379, 624, -489,
	-462, -462, -463, 194, 623, -473, 624, -595, 585, -462,
	-406, -407, -462, 453, 111, 214, -595, -595, 624, -538,
	-538, 2, -551, 363, 2, 536, 621, 2, 194, -549,
	194, 194, 230, -137, 230, 39, 423, -453, -310, -310,
	-314, -307, -285, 174, 223, 349, 581, -436, 265, 623,
	-463, 559, -316, 623, 2, 222, 222, 31, 63, -658,
	134, 243, 624, 628, -491, -296, -285, -462, -491, 624,
	624, 349, 559, 349, 581, -462, 559, -512, 623, -263,
	-263, 624, 624, -462, 536, -541, 103, -539, 2, -624,
	-270, -299, -462, 188, -462, 536, 5, -263, -314, -263,
	-263, -297, 549, 359, -326, -547, -321, -640, 522, 473,
	550, 467, 197, 454, -640, 188, -220, -221, -551, -133,
	-133, -219, 39, -355, -356, 2, -571, 265, -307, 265,
	232, 157, -379, 623, 623, -381, -654, 586, 624, -345,
	-233, -89, -90, 537, -505, 628, 623, 605, -371, 326,
	122, 39, 5, 623, 623, -285, 360, 623, -300, -280,
	95, -665, -546, -266, -411, 343, -381, 96, -440, -469,
	-216, 623, -216, 624, -222, 628, 29, 623, 29, 623,
	-316, -338, -392, -392, 624, -377, 63, 628, 624, 624,
	-463, -473, 624, -596, -597, -305, 628, 623, 623, 480,
	622, 622, -549, 2, -549, -549, -549, 466, -270, 402,
	-285, -565, -574, -307, 342, -234, 566, 586, -462, -463,
	-287, 623, -462, 623, 623, 39, 130, 243, 135, 228,
	-452, -659, 104, 511, 231, -490, -252, 624, -451, 566,
	420, -463, -297, -379, 623, 623, 623, 605, 194, -137,
	623, -516, -263, -320, 605, 536, 2, 2, 194, -614,
	624, -630, 418, -137, -233, 623, -234, -350, 84, 97,
	131, 222, 198, 240, 502, 508, 29, -350, 624, -379,
	-379, 624, -351, 360, 122, 326, 624, 39, -90, 9,
	-619, -620, -462, 39, 122, -137, -510, -379, -316, -379,
	360, -272, -271, 282, -546, -267, 624, -310, -411, -552,
	-69, -381, -381, 624, 624, -601, 411, 456, 215, -392,
	-378, 624, 628, 39, -407, 2, 2, 2, -637, -329,
	423, -264, 158, 217, 624, -576, 297, -285, 624, -415,
	-415, 39, 135, 228, -357, -353, 623, -253, -491, -234,
	217, -316, -625, 566, 624, -363, -362, -359, -365, -364,
	-359, -392, -539, 103, 377, -392, -297, -133, -549, -549,
	360, -632, 195, -631, 5, 10, -351, -380, -492, -302,
	-451, 624, 624, 85, 122, -361, -137, 624, -137, 2,
	-369, 624, 624, -437, 624, -316, -269, -553, 423, 425,
	-665, -268, -456, 143, 624, 624, 624, 624, -602, -603,
	53, 552, 112, -462, -602, -602, -597, -599, 194, 174,
	-450, 595, -577, -580, -579, 602, 486, 195, 378, 624,
	510, 580, 624, 624, -658, -381, -450, -371, -462, -451,
	624, 628, 571, 624, 628, 571, 624, 194, 624, -263,
	-637, -263, -640, -218, 586, 48, -279, -278, 624, 628,
	-452, -451, -357, 401, 136, 146, -355, -654, -451, 623,
	-452, 623, -277, -276, -665, -532, -280, 143, 343, 559,
	-216, -604, 156, -603, 398, 187, 455, 398, 187, -604,
	-604, -549, -307, -234, 58, -579, 602, -580, 602, 559,
	136, -456, 624, -576, -234, -362, 230, -364, 194, 377,
	194, 463, -631, 31, -234, -492, -357, -452, -234, 456,
	456, 2, -233, -351, -452, -379, -357, -379, -273, -274,
	-275, -381, -272, 343, 559, 479, 112, 213, 531, 326,
	34, 605, -578, 326, 442, 67, 479, -578, -577, 623,
	623, -549, 364, -234, -357, -456, 2, -351, -357, 624,
	-234, 624, -548, 375, -269, 479, -401, 455, 368, -603,
	-462, 24, 349, 130, -658, -392, -392, -263, -215, 623,
	-456, -234, -279, -234, -451, -456, -452, -665, -277, -401,
	-456, 624, 624, -215, -456, -456, -452, -357, -547, -273,
	-456, -352, -353, 536, 624, -357, -234, 623, -234, -456,
	-392, -456, 624, -352,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 576, 577, 579, 580, 581,
	583, 584, 586, 588, 590, 591, 592, 594, 595, 597,
	598, 599, 600, 601, 603, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 692, 694, 0, 1517, 1519, 1521, 1523, 0, 0,
	-2, 0, 40, 41, 43, 0, -2, 353, 355, 357,
	359, 0, 391, 393, 394, 396, 398, 399, 400, 402,
	-2, 0, 509, 510, 512, 514, -2, 0, 1102, 1104,
	1106, 0, 680, 682, 0, 1109, 1111, 1113, 0, 0,
	704, 705, 0, 1631, -2, 696, 698, 700, 702, 773,
	775, 777, 779, 781, 783, 785, 787, 789, 791, 792,
	794, 796, 798, 800, 802, 803, 805, 807, 809, 810,
	812, 813, 815, 817, 819, 821, 823, 825, 827, 829,
	831, 833, 835, 837, 839, 841, -2, 844, 845, 846,
	-2, -2, 0, -2, -2, -2, 1535, 45, 47, 49,
	51, 53, 55, 57, 59, 61, 63, 65, 67, 453,
	455, 457, 459, 461, 464, 466, 468, 1689, 516, 518,
	520, 522, 524, 526, 528, 0, 0, -2, 1703, 0,
	0, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 117, 118, 119, 120, 121, 122, 123, 82, 83,
	84, 86, 87, 88, 89, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 114, 115, 80, 0, 0,
	1662, 1664, 1666, 1668, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 33,
	35, 37, 578, 582, 585, 587, 589, 593, 596, 602,
	604, 606, 561, 562, 565, 2401, 2419, 2420, 2421, 2424,
	2425, 2426, 2427, 2428, 2429, 2907, 2988, 2989, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762,
	2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772,
	2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782,
	2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812,
	2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822,
	2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832,
	2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842,
	2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852,
	2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862,
	2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872,
	2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882,
	2883, 2884, 2885, 2886, 563, 564, 1296, 0, 645, 643,
	2386, 646, 2694, 648, 650, 503, 504, 505, 506, 507,
	508, 0, 673, 659, 1701, 674, 676, 677, 678, 679,
	640, 638, 0, 678, 673, 2456, 671, 1515, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	432, 1355, 1356, 1357, 1500, 1501, 2745, 1542, 0, 249,
	693, -2, -2, 2872, -2, 727, 728, -2, -2, 742,
	746, 737, 2876, 0, 2748, 2731, -2, 749, 1518, 1520,
	1522, 848, 849, 850, 2405, 854, 852, 864, 865, 866,
	0, 883, -2, 0, 2452, 2716, -2, -2, 884, 885,
	-2, -2, -2, -2, 0, 0, 0, 0, 0, 42,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 259, -2, -2, -2, -2, 0, 0, 2795,
	2510, 2354, 2421, 2357, 2352, 354, 356, 358, 360, 361,
	0, 0, 0, 0, 0, 0, 0, 392, 395, 397,
	401, -2, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 1168, 1169, 1422, 0,
	0, 0, -2, 511, 513, 566, 567, 0, 1690, 1690,
	574, 575, -2, 0, 0, 0, 0, 324, 314, 1103,
	1105, 1107, 1108, 0, 0, 0, 0, 0, 681, 683,
	0, 0, 2789, 291, 1110, 1112, 1114, 1115, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 697, 699, 701,
	703, 774, 776, 778, 780, 782, 784, 786, 788, 790,
	793, 795, 797, 799, 801, 804, 806, 808, 811, 814,
	816, 818, 820, 822, 824, 826, 828, 830, 832, 834,
	836, 838, 840, 842, 843, 891, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 993, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 1083, 0, 0, 894, 897, 898, 899, 900, 901,
	902, 0, 966, 991, 992, 1002, 847, 0, 1336, 1691,
	1544, 1525, 1539, 1544, 1527, 1528, 1529, 1530, 1531, 1536,
	1538, 1532, 1533, 1534, 46, 48, 50, 52, 54, 56,
	58, 60, 62, 64, 66, 68, 454, 456, 458, 460,
	462, 465, 467, 469, -2, 1660, 1661, 517, 519, 521,
	523, 525, 527, 529, 684, 0, 687, 0, 896, 686,
	-2, 0, 1695, 1695, 1695, 0, 0, 1661, 1659, 0,
	690, 691, 753, 754, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 2228, 2056, 0, 755, -2, 2089, 2091,
	2847, 2667, 2872, 2227, 2093, 2094, 2095, 2096, 2097, 0,
	2099, 2100, 2101, 2102, 2103, 2104, 0, 2106, 0, 2111,
	2112, 2113, 0, 2854, 2331, 2415, -2, 0, 0, 2860,
	2411, 0, 2194, 2129, -2, -2, 2438, 2417, 1900, 1901,
	1902, 1903, 1904, -2, -2, 2890, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 0, 2835, 2855,
	2856, 2861, 2863, 2857, 2844, 2154, 2524, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1927, 1936, -2, -2, -2, -2, -2, -2, -2, 2848,
	2849, 2866, 2869, 2875, 2880, 2881, 2853, 2862, 2889, 2891,
	2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901,
	2902, 2903, 2904, 2905, 2906, 1928, -2, -2, -2, -2,
	1678, 2709, 1681, 1296, 1679, 1663, 1665, 0, 1667, 0,
	0, 0, 1672, 1698, 1696, 0, 1747, 1676, 1677, 1770,
	1770, 1794, 0, 1775, 0, 1794, 1690, 1821, 0, 1781,
	2736, 2130, 2131, 0, 2421, 2416, -2, -2, 2887, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 647, 649, 0, 0, 0, 672, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 437,
	438, 439, 2855, 0, 0, 0, 444, 0, 446, 447,
	448, 449, 450, 451, 452, 219, 2855, 534, 559, 0,
	219, 2855, 537, 219, 2855, 540, 0, 543, 1420, 219,
	2855, 546, 2382, 219, 2855, 549, 551, 2390, 219, 2855,
	555, 2397, 2395, 556, 0, 558, 239, 235, 236, 237,
	238, 1511, 1512, 1513, 1514, 0, 1541, 1421, 695, 0,
	721, 0, 725, 726, 2843, -2, 0, 2757, 730, 731,
	-2, 733, 1545, 1549, 1550, 1551, 1552, 1553, 0, 0,
	0, 0, 1558, 0, 0, 0, 0, 722, 723, 740,
	741, 747, 750, 0, 857, 853, 867, 0, 882, 0,
	883, 883, 2371, 2362, 2363, 0, 0, 883, 883, 0,
	0, 886, 887, 888, 889, 890, 79, 0, 2855, 1821,
	81, 0, 2376, 2446, 2447, 2448, 2449, 2450, 2888, 2908,
	2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918,
	2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928,
	2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938,
	2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948,
	2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958,
	2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968,
	2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978,
	2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2890,
	85, 0, 2855, 90, 0, 2855, 0, -2, 103, 0,
	116, 0, 143, -2, -2, -2, 124, 0, 2855, 0,
	2351, -2, 0, 231, 315, 316, 317, 0, 622, 0,
	631, 327, 328, 2434, 2435, 2442, 2443, 2444, 2445, 0,
	1140, -2, 0, 1349, 1351, 1351, 0, -2, 0, 0,
	0, 1093, 2348, 2353, 1094, 2372, 1095, 2358, 0, 362,
	363, 364, 365, 366, 0, 367, 2855, 369, 370, 0,
	372, 373, 2855, 375, 376, 0, 378, 0, 380, 0,
	271, 275, 2855, 2855, 405, 408, 0, 410, 411, 0,
	413, 0, 0, 0, 417, -2, 433, 0, 430, 420,
	421, 423, 424, 425, 426, 427, 0, 473, 471, 2387,
	0, 0, -2, 2855, 0, 1137, 0, 0, 1400, -2,
	0, 1342, 0, 1407, 2855, 1403, 0, -2, 0, 1688,
	2855, 1562, 1172, 1173, 1174, 1175, 1833, 500, 0, 1595,
	0, 1597, 0, 1617, 1827, 1770, 0, 0, 1832, 0,
	-2, 619, 2404, -2, 569, 0, 570, 0, -2, 0,
	341, 0, 0, 1118, 1120, 1121, 1123, 1124, 1127, 1128,
	1129, 1130, 0, 1132, 1807, 292, 294, 0, 0, 0,
	0, 1117, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 0, 0, 706, 0, 0, 892, 893, 0, 0,
	909, 910, 911, 0, 341, 2749, 2704, 2546, 918, 0,
	921, 924, -2, 0, 0, 0, 0, 928, 0, 933,
	934, 935, 0, -2, 0, 942, 944, 1101, 946, 0,
	0, 948, 0, 952, 0, 955, 0, 957, 0, 959,
	-2, -2, -2, 967, 968, -2, 973, -2, 0, 977,
	-2, 0, 980, 0, 983, -2, 0, 993, 989, 990,
	0, 0, 0, 0, 1010, 1011, 0, 1020, 0, 1023,
	1024, 1025, 0, 1029, 1030, 0, 1032, 1033, 1034, 1036,
	1037, 1038, 0, 2824, 2754, 2510, 0, 1046, -2, 1052,
	1054, 0, -2, 0, 1070, 0, 1074, 0, 0, 1082,
	0, 0, 895, 0, 903, 904, 219, 1825, 1524, -2,
	1526, 0, -2, 0, 685, 0, 689, 1720, 1646, 1643,
	0, 1717, 1718, 1647, 0, 0, 0, 1654, 0, 1693,
	1694, 0, 0, 0, 1633, 1634, 0, 0, 0, 0,
	2233, 2234, 2235, 2236, 2249, 2237, 2238, 2248, 2246, 2247,
	2239, 2240, 2245, 2259, 2260, 2250, 2251, 2241, 2254, 2252,
	2253, 2255, 2256, 2257, 2258, 0, 0, 2264, 0, 2242,
	2243, 2244, 2272, 0, 0, 2273, 0, 2275, 0, 2265,
	2261, 2262, 2263, 0, 2035, 2037, 2339, 0, 0, 0,
	2271, 2266, 2267, 1973, 1974, 1975, 1976, 1977, 2010, 2014,
	2015, 0, 0, 2090, 2336, 2335, 2092, 0, 0, 2287,
	0, 2105, -2, 0, 2228, 2282, 0, 0, 2114, 2115,
	2116, 0, 0, 2287, 0, 0, 2330, 2126, 2127, 1965,
	0, 0, 2196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1914, 1913, 0, 1915, 0, 1916, 1917, 1924, 1937,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	0, 0, 2311, -2, 0, 0, 0, 0, 1929, 0,
	1680, 0, 0, 1751, 2340, 2344, 2345, 1751, 1751, 0,
	0, 2288, 1818, 1818, 0, 0, 1813, 1813, 1813, 1811,
	1794, 0, 1794, 1804, 0, 1794, 1794, 0, -2, 1775,
	0, 0, 1804, 0, 1788, 607, 609, 611, 613, 614,
	615, 617, 1822, 1823, 0, 0, 0, 0, 2422, 0,
	0, 0, 0, 2394, 0, 0, 2407, 0, 0, 2381,
	387, 388, 0, 0, 0, 2806, 2748, 0, -2, 652,
	675, 1690, 0, 2290, 1848, 1852, 0, 1854, 1855, 1856,
	1857, 1858, 0, 0, 1849, -2, 1925, 1927, 1948, 2439,
	2440, 2441, 1908, 1909, 1910, 1911, 1912, 1920, 1907, 1907,
	1907, 1918, 1947, 1939, 1947, 1943, 1893, 1894, 1895, 1930,
	1931, 1932, 1933, 0, 2806, 2748, 0, -2, 0, 662,
	0, 0, 1628, 434, 0, 441, 442, 443, 0, 530,
	0, 217, 218, 0, 219, 2855, 535, 0, 538, 0,
	219, 2855, 2346, 544, 0, 547, 0, 0, 553, 0,
	0, 0, 0, 0, 219, 1630, 0, 0, 0, 0,
	-2, 735, 743, 744, 745, 0, 1547, 0, 1554, 764,
	765, 766, 1556, 1557, 0, 1559, 738, 767, 768, 769,
	770, 771, 772, 0, 2360, 2361, 2366, 2367, 0, 0,
	736, 757, 739, 0, 751, 860, 855, 856, 868, 869,
	0, 0, 2364, 2365, 0, 0, 874, 875, 125, 1497,
	0, 0, 172, 0, 1497, 1497, 0, 0, 0, 0,
	200, 0, 0, 1206, 0, 0, 0, 0, 143, 157,
	168, 137, 138, 139, 0, 0, 0, 0, 0, 0,
	91, 1318, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 105, 106, 0,
	0, 111, 112, 0, 156, 0, 0, 0, 0, 0,
	1592, 0, 147, 143, 0, 0, 142, 144, 127, 0,
	0, 143, 158, 170, 0, 206, 208, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 241, 0, 621,
	623, 0, 0, 0, 0, 629, 0, 632, 0, 0,
	0, 1343, 0, 0, 0, 1687, 0, 0, 0, 0,
	2855, 1495, 0, 1480, 0, 1807, 2597, -2, -2, 292,
	1807, 1092, 0, 0, 2422, 2356, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 409, 412, 414,
	415, 416, 0, 1399, 0, 422, 463, 1265, 2855, 0,
	0, 490, 485, 0, 487, 0, 0, 0, 1317, 2855,
	1315, 2391, 0, 1340, 0, 1296, 2855, 2389, 0, 0,
	0, 1408, 2431, 1417, 1421, 1580, 0, 502, 0, 1598,
	1600, 0, 0, 1828, 0, 1830, 1770, 1690, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 1131,
	298, 0, 1806, 0, 0, 329, 1807, 292, 2722, 0,
	1116, 341, 341, 1807, 708, 1807, 710, 0, 0, 912,
	913, 0, 341, 341, 341, 919, 920, 922, 923, -2,
	-2, -2, -2, 925, 926, 1017, 0, 0, 0, 1016,
	936, 0, 938, 941, 945, 0, 1086, 2731, 2748, 2806,
	1099, 1017, 2510, 1017, 2510, 1017, 2510, 1017, 1017, 961,
	1005, 1013, 972, 979, 0, 974, 978, 981, 984, 0,
	986, 994, 0, -2, 0, 997, 0, 999, 0, 1001,
	1017, 1018, 1021, 1028, 1031, 0, 1039, 1040, 1041, 1042,
	2402, 1043, 1044, 1045, -2, 1049, 1050, 0, 1061, 1066,
	1067, 1063, 0, 0, 0, 0, 0, 0, 1077, 1078,
	0, 0, 1085, 0, 905, 1335, 0, 1537, 1720, 1646,
	688, 1637, 1719, 1638, 1645, 1648, 0, 0, 1650, 0,
	1652, 0, 1715, 1716, 1723, 1724, 0, 1734, 1735, 1727,
	0, -2, 0, 0, 1730, 1731, 1656, 0, 1673, 1674,
	1675, 1704, 1707, 1436, 0, 2988, 1969, 1843, 1970, 1971,
	2375, 0, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1987, -2, -2, -2, -2, -2, -2, -2, -2,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, -2, -2, -2, 2011, 2012, 2013, -2, 2274, 2276,
	0, 2339, 0, -2, 0, -2, -2, -2, -2, 2032,
	0, 2034, 2039, 2041, 2043, 0, 0, 0, 0, 2338,
	2053, 2322, 2323, 0, 0, 2230, 2231, 2232, 2038, 0,
	2057, 2337, 2334, 0, 0, 2268, 0, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	0, 2286, 1703, 2118, 0, 0, 0, 0, 2125, 2110,
	2284, 0, 2283, 0, 0, 0, 2294, 0, 2329, 2325,
	0, 2373, 1964, 1951, 1952, 1953, 1954, 1955, 1956, 1966,
	0, 2370, 2408, 2414, 2204, 0, 0, 0, 2155, 2156,
	2157, 2158, 2159, 0, 2161, 2162, 0, 2164, 2165, 0,
	2167, 2168, 0, 2170, 2171, 2172, 2173, 2174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 0, 0, 2176,
	0, 2297, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2178, 0, 2180, 2288, 2308, 0, 0, 2058, 0,
	0, 0, 0, 2228, 0, 2183, 2288, 2316, 0, 0,
	0, 0, 0, 2288, 0, 2321, 0, 2190, 0, 2192,
	1682, 0, 0, 1838, 0, 0, 0, 2343, 1838, 1838,
	0, 1746, 0, 0, 1814, 1815, 1816, 1817, 0, 0,
	1818, 0, 1808, 1812, 1809, 1810, 1804, 1767, 0, 0,
	2377, 1804, 1773, 1803, 0, 1296, 1793, 1804, 1804, 0,
	-2, 1777, 1794, 0, 0, 608, 610, 612, 616, 618,
	0, 0, 1703, -2, 0, -2, 343, 1295, 0, 0,
	0, 0, 0, 0, 642, 644, 0, 0, 550, 0,
	0, 658, 0, 636, 0, 639, 0, 1839, 1842, 0,
	0, 1853, 1859, 1860, 0, -2, 0, 0, 1949, 0,
	0, 0, 0, 0, 670, 0, 673, 0, 0, 0,
	445, 560, 219, 532, 0, 219, 219, 541, 0, 0,
	219, 552, 219, 2398, 219, 2396, 240, 557, 1629, 252,
	0, 724, 0, 1546, 1555, 0, 761, 0, 763, 0,
	2368, 2369, 0, 752, 0, 858, 0, 870, 871, 872,
	873, 0, 0, 0, 0, 1496, 0, 0, 1443, 0,
	0, 176, 2855, 0, 221, 0, 0, 1258, 2383, 0,
	1248, 0, 0, 2532, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 140, 141, 0, 0, 0, 0, 0, 0,
	0, 0, 1319, 1320, 1322, 1329, 1331, 0, 1325, 1326,
	0, 1328, 1330, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 1352, 0, 0, 1353, 1354, 1568,
	1569, 0, 1591, 1592, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 2350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 624, 625,
	626, 627, 337, 334, 336, 628, 633, 0, 634, 0,
	0, 0, 1345, 0, 1395, 1393, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 0, 0, 0, 0, -2, 1347, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	332, 2349, 2359, 0, 1125, 1126, 368, 371, 374, 377,
	258, 0, 0, 407, 418, 0, 0, 1178, 1150, 0,
	0, 472, 341, 0, 0, 486, 490, 2400, 1135, 1313,
	1316, 0, 1296, 2855, 1363, 0, 0, 0, 0, 0,
	0, 1406, 0, 0, 2855, 2378, 2430, 2431, 1582, 1592,
	0, 1838, 0, 1615, 1601, 0, 0, 0, 1615, 1619,
	1620, 1622, 1623, 0, 0, 1829, 1835, 568, 620, 1690,
	1690, 341, 339, 2670, 0, 0, 1604, 1606, 0, 0,
	0, 284, 0, 295, 1807, 293, 0, 298, 0, 0,
	1807, 292, 0, 484, 707, 712, 907, 0, 341, 915,
	916, 917, 963, 1007, 1015, 1065, 927, 929, 930, 931,
	0, 0, 0, 1100, 1096, 1097, 1098, 947, 1017, 950,
	1017, 953, 1017, 956, 958, 976, 982, 995, 988, 996,
	0, 0, 0, 1009, 1026, 0, 1035, 1048, 0, 0,
	0, 0, 0, 0, 0, 1071, 1072, 1073, 1075, 1080,
	1079, 1084, 906, 1826, 1641, 1642, 1644, 0, 1653, 0,
	0, 1729, -2, -2, 1728, 1732, 1733, -2, -2, -2,
	-2, 1649, 0, 1658, 1655, 0, 1714, 1434, 1435, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 2054, 0,
	-2, 2033, 2036, 2040, 2042, 2044, 0, 0, 0, 0,
	0, 0, 2277, 0, 2279, 2055, 2332, 2335, 2270, 0,
	2226, 0, 0, 1702, 1703, 1703, 0, 2124, 0, 2285,
	0, 2292, 2293, 0, 2117, 0, 2326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2128, 0, 0, 0,
	0, 2160, 2163, 2166, 2169, 0, 0, 0, 0, 2149,
	0, 0, 0, 2153, 1919, 1905, 0, 1947, 1945, 1946,
	1940, 1947, 1944, 1897, 0, 1896, 0, 2175, 0, 2177,
	2179, 0, 0, 2181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 2062,
	2063, 2083, 2182, 2314, 2315, 0, 0, 0, 0, 0,
	0, 2188, 0, 2320, 2189, 2191, 1690, 0, 1683, 0,
	1748, 1737, 1837, 0, 2341, 1807, 1750, 1752, 2342, 2380,
	1737, 1737, 0, 2289, 0, 0, 1798, 0, 0, 0,
	1800, 1771, 0, 0, 1765, 0, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1772, 1296, 1802, 1774, 1778, 2408, 0,
	1804, 0, 1789, 0, 1791, 1824, 0, 1783, 1786, 0,
	0, 2423, 1838, 0, 381, 389, 390, 382, 383, 384,
	385, 0, 1483, 0, 0, 0, 0, 0, 2291, 0,
	1844, 0, 1850, 0, 0, 0, 0, 660, 0, 0,
	0, 0, 0, 1627, 440, 531, 219, 536, 539, 2347,
	219, 545, 548, 554, 248, 0, 720, -2, 759, 760,
	762, 0, 758, 863, 859, 173, 1497, 0, 0, 0,
	1439, 0, 1161, 0, 1156, 1157, 1441, 1445, 1451, 1454,
	0, 178, 2855, 190, 0, 2855, 0, 1222, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 2855, 219, 2855,
	219, 194, 196, 199, 0, 205, 201, 0, 1158, 0,
	1210, 0, 0, 1213, 126, 1497, 0, 0, 129, 133,
	145, 0, 0, 0, 155, 0, 0, 0, 1456, 1460,
	1468, 0, 0, 0, 1323, 1324, 1327, 1333, 92, 0,
	0, 0, 1464, 1466, 1472, 104, 107, 2855, 2392, 109,
	2855, 0, 1438, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 131, 135, 146, 0, 1474, 128, 0, 234,
	0, 0, 224, 219, 2855, 0, 226, 0, 227, 228,
	242, 0, 0, 0, 0, 0, 0, 630, 0, 1138,
	1139, 1394, 0, 1338, 1339, 0, 1350, 1344, 0, 0,
	0, 0, 0, 1476, 1477, 0, 0, 0, 1495, 1492,
	1807, 254, 0, 1807, 262, 0, 2355, 0, 276, 404,
	0, 0, 0, 0, 1177, 1276, 1179, 1181, 1182, 1183,
	221, 0, 2431, 1248, 2586, 2431, 0, 0, 1145, 0,
	0, 0, 478, 474, 0, 483, 489, 488, 494, -2,
	0, 0, 0, 0, -2, 0, 0, 1410, 1404, 1405,
	0, 0, 0, 0, 2855, 1584, 1592, 0, 1688, 1703,
	501, 1593, 1615, 0, 0, 0, 1603, 1599, 1596, 1838,
	0, 0, 0, 0, 0, 1831, 1834, 571, 572, 318,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 296,
	0, 299, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 0, 0, 0, 0, 298, 330, 286, 1807, 0,
	298, 0, 0, 709, 0, 0, 914, 0, 937, 940,
	949, 951, 954, 998, 1000, 1017, 1027, 1055, 2379, 1056,
	1200, 0, 1200, 0, 0, 1076, 1651, 0, 1726, 1657,
	1708, 1709, 0, 1436, 0, 1972, 2017, 0, 0, -2,
	0, 0, 2021, 0, 0, 0, -2, 0, 0, 0,
	2278, 2280, 0, 2334, 2269, 2119, 0, 0, 0, 2123,
	2107, 2108, 0, 2229, 2295, 2324, 2328, 0, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 0, 2374, 2409, 2413, 2202,
	2203, 2207, 2388, 0, 0, 0, 2132, 0, 0, 0,
	0, 0, 0, 0, 0, 1938, 1942, 0, 0, 2296,
	2307, 2309, 2059, 2060, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, -2, -2, -2, 2077, 2078, 2079,
	-2, -2, -2, 2084, 0, 0, 0, 2310, 2312, 2313,
	2317, 2318, 0, 2185, 2186, 2187, 2319, 0, 1690, 1684,
	1745, 0, 1836, 1749, 0, 1745, 1745, 1697, 1796, 0,
	0, 1820, 0, 1768, 0, 1769, 0, 0, 1801, 0,
	1776, 1779, 1780, 1790, 0, 1782, 0, 1785, 0, 2119,
	-2, 342, 344, 346, 0, 349, 350, 0, 0, 0,
	651, 0, 1483, 1483, 0, 653, 637, 0, 0, 1846,
	0, 0, 1922, 1926, 1950, 664, 666, 0, 0, 2806,
	2748, 0, 663, 533, 542, 250, 0, 1805, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	220, 0, 1257, 0, 1220, 0, 0, 1247, 0, 0,
	1263, 180, 181, 182, 0, 0, 0, 0, 192, 0,
	0, 188, 0, 198, 204, 203, 0, 1207, 0, 0,
	0, 0, 1444, 0, 0, 0, 152, 153, 154, 0,
	159, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 1575, 0, 1565, 149, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 1433, 244,
	0, 0, 0, 0, 0, 338, 333, 335, 0, 1337,
	1397, 1398, 1346, 1457, 1461, 1469, 0, 0, 0, 0,
	0, 678, 1494, 0, 262, 260, 0, 263, 0, 266,
	267, 0, 0, 262, 256, 0, 0, 0, 1296, 419,
	1148, 1264, 0, 0, 1266, 1184, 1188, 0, 2431, 2431,
	0, 2385, 0, 1146, 0, 0, 1265, 470, 0, 477,
	0, 491, 0, 0, 1317, 0, 0, 1341, 1366, 1296,
	0, 1409, 1411, 0, 1419, 0, 0, 0, 1586, 1592,
	0, 1579, 1580, 1722, 1594, 1613, -2, 0, 0, 1703,
	1621, 1618, 1624, 1625, 0, 0, 0, 321, 0, 1605,
	1607, 0, 1119, 1122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 298, 1807, 288, 1807, 325, 0,
	908, 932, 1008, 1057, 1199, 0, 0, 1059, 0, 0,
	1725, 1712, 1713, 1710, 1436, 2019, 2023, 0, 0, 0,
	2025, -2, 0, 2047, -2, -2, 2281, 2333, 2098, 1703,
	2120, 2122, 2109, 2327, 1967, 0, 2209, 2206, 0, 2193,
	0, 2144, 2145, 0, 0, 2148, 2150, 2151, 2152, 1906,
	1899, 1898, 2306, 0, 0, 0, 0, 2184, 1685, 0,
	2198, 0, 0, 1753, 2198, 2198, 1797, 0, 1799, 1766,
	1754, 0, 1763, 0, 2409, 1792, 1784, 0, 0, 347,
	0, 351, 352, 386, 0, 654, 655, 0, 0, 1840,
	1845, 0, 1851, 1921, 0, 0, 0, 0, 0, 251,
	0, 861, 862, 174, 175, 1162, 1160, 1448, 1452, 1449,
	0, 177, 0, 0, 1221, 0, 1224, 0, 0, 0,
	0, 1231, 1248, 0, 0, 0, 0, 0, 0, 1250,
	0, 1249, 0, 0, 1280, 0, 1424, 1431, 0, -2,
	0, 0, 0, 184, 210, 0, 0, 0, 0, 213,
	1498, 186, 0, 0, 219, 219, 1159, 0, 0, 1440,
	1442, 1455, 0, 0, 0, 0, 162, 0, 0, 1458,
	1462, 1470, 1465, 1467, 1473, 0, 110, 0, 1576, 0,
	148, 0, 0, 0, 1475, 232, 233, 0, 219, 0,
	219, 225, 219, 1433, 0, 0, 0, 0, 0, 0,
	0, 0, 1478, 1479, 253, 0, 0, 0, 0, 0,
	255, 331, 262, 406, 0, 1209, 0, 1276, 1268, 1269,
	1270, 0, 1180, 1275, 1277, 0, 0, 1185, 0, 0,
	0, 0, 1165, 1147, 0, 1178, 1150, 0, 475, 492,
	0, 495, 0, 498, 1136, 1314, 1358, 1296, 1361, 0,
	0, 1401, 0, 0, 0, 0, 0, 0, 0, 1588,
	1592, 0, 1581, 1582, 1615, 1721, 0, 0, 0, 1602,
	1722, 0, 340, 341, 0, 341, 300, 0, 301, 302,
	303, 310, 311, 312, 313, 287, 290, 298, 711, 713,
	0, 0, 719, 1198, 0, 0, 0, 0, 1711, 2027,
	-2, -2, 2048, 0, 2410, 2412, 1703, 0, 2195, 1705,
	0, 0, -2, 0, 0, 0, 1686, 1669, 0, 1744,
	1736, 1738, 1740, 2734, 2505, 2854, 1670, 1671, 1819, 0,
	0, 1787, 348, 1482, 656, 0, 0, 1847, 0, 661,
	0, 0, 0, 851, 0, 0, 1450, 179, 0, 0,
	1225, 1226, 2384, 1228, 0, 1230, 1232, 1233, 1150, 0,
	1237, 0, 2433, 0, 1242, 1245, 1246, 0, 0, 1259,
	1281, 0, 1290, 0, 1426, 1436, 1430, 0, 1428, 1292,
	0, 183, 212, 185, 214, 209, 0, 1433, 0, 187,
	197, 0, 0, 130, 0, 0, 2499, 165, 163, 161,
	108, 1437, 151, 0, 132, 0, 234, 243, 1432, 245,
	229, 219, 0, 0, 1459, 1463, 1471, 0, 1486, 1487,
	1488, 1489, 0, 0, 0, 0, 264, 0, 265, 268,
	269, 0, 0, 1150, 1208, 1149, 1267, 0, 1278, 1150,
	0, 0, 0, 0, 0, 0, 1152, 0, 1151, 0,
	0, 476, 479, 0, 482, 0, 0, 0, 0, 0,
	1365, 0, 1412, 1410, 0, 1418, 0, 0, 0, 1564,
	0, 0, 1583, 1584, 499, 1608, 0, 0, 1615, 1626,
	320, 0, 323, 297, 289, 0, 715, 0, 717, 0,
	1058, 1060, 0, 0, 2121, 2213, 0, 0, 2146, 2147,
	-2, 0, 2087, 2197, 2199, 0, 0, 0, 0, 0,
	1755, 1764, 1483, 1841, 668, 665, 667, 0, 1446, 0,
	1453, 221, 1223, 1227, 0, 1234, 0, 0, 0, 1238,
	1300, 0, 0, 1317, 1317, 1251, 0, 0, 1284, 1285,
	1205, 0, 1286, 1287, 1288, 1425, 1714, 1431, 1150, 0,
	0, 211, 216, 0, 0, 0, 0, 0, 0, 150,
	0, 223, 246, 1433, 0, 0, 1490, 1491, 0, 0,
	261, 280, 0, 1359, 1152, 0, 1279, 1186, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1187, 1292, 0,
	0, 1256, 1163, 0, 1166, 0, 1148, 0, 480, 481,
	496, 0, 497, 0, 0, 1366, 0, 0, 1419, 0,
	0, 1571, 1563, 1592, 1585, 1586, 1838, 0, 1616, 0,
	714, 0, 0, 1068, 1069, 0, 0, 0, 0, 2208,
	1706, 2088, 0, 0, 1739, 1741, 1742, 1743, 657, 0,
	1447, 191, 0, 1294, 1236, 1305, 0, 0, 0, 0,
	0, 1252, 1282, 1283, 1280, 1204, 0, 1429, 1427, 1261,
	1294, 1296, 189, 0, 1292, 0, 1214, 0, 0, 1217,
	0, 0, 166, 2499, 164, 0, 219, 635, 1483, 219,
	0, 283, 0, 274, 272, 273, 1144, 0, 1272, 1274,
	1290, 1292, 1205, 0, 1167, 1209, 1165, 493, 1360, 1364,
	1362, 1402, 1292, 0, 1290, 0, 1578, 1592, 1572, 1573,
	0, 1588, 0, 0, 341, 716, 718, 2205, 2225, 2214,
	-2, 2809, 2506, 0, 2225, 2225, 2200, 2201, 0, 0,
	1150, 0, 1239, 1301, 1302, 0, 1297, 1298, 1299, 2432,
	1240, 1241, 1243, 1244, 1838, 0, 1291, 1300, 215, 1150,
	1211, 0, 0, 1212, 0, 0, 169, 0, 171, 247,
	1481, 1484, 0, 270, 0, 0, 1141, 1143, 1150, 0,
	1205, 1290, 1150, 0, 0, 0, 1150, 1152, 1290, 0,
	1205, 0, 1567, 1577, 0, 1587, 1564, 0, 1611, 0,
	322, 2210, 0, 0, 2216, 2217, 2218, 2219, 2220, 2211,
	2212, 669, 1229, 1235, 0, 1303, 0, 1304, 0, 0,
	0, 1260, 1289, 1305, 195, 1215, 0, 1218, 0, 167,
	0, 0, 278, 279, 1271, 1273, 1150, 1205, 1838, 1153,
	0, 1155, 1152, 1164, 1205, 0, 1150, 0, 1590, 1566,
	1570, 2393, 1571, 1609, 0, 0, 0, 2222, 2223, 0,
	0, 0, 1306, 0, 1309, 1310, 0, 1307, 1280, 0,
	0, 219, 0, 1838, 1150, 1255, 1154, 1144, 1150, 1292,
	1838, 1290, 1560, 1592, 1578, 0, 1838, 2221, 2224, 2215,
	1293, 1308, 1311, 1312, 1262, 0, 0, 1485, 281, 0,
	1253, 1838, 1142, 1838, 1290, 1415, 1205, 0, 1567, 1838,
	1612, 1202, 0, 0, 1254, 1413, 1205, 1150, 1589, 1561,
	1610, 1216, 1201, 0, 282, 1150, 1838, 0, 1838, 1416,
	0, 1414, 1202, 1219,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 611, 3, 617, 612, 3,
	623, 624, 615, 613, 628, 614, 625, 616, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 631, 3,
	603, 605, 604, 608, 627, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 621, 3, 622, 618, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 629, 610, 630, 606,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 607, 57946, 609, 57947, 619, 57948, 620, 57949, 626,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1540
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1545
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1547
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1550
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1551
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1552
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1553
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1555
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1556
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1558
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1559
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1560
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1565
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1568
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "ALTER")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1654
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1753
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1776
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1865
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1921
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1930
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1945
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1951
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1959
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1985
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1995
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2006
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2018
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2039
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2088
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2101
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2110
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2121
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2129
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2140
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2150
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2160
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2169
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2180
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2186
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2212
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2217
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2308
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2352
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2362
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2365
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2371
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2423
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = nil
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = true
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = false
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2618
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2622
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2709
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2717
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2806
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2814
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2968
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = nil
		}
	case 284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3125
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3246
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3283
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3292
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3298
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3303
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3308
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3312
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3340
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = nil
		}
	case 342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3416
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3430
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3450
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3523
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3542
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3585
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3612
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3633
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3634
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3638
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3643
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3655
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3657
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3661
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3662
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "CREATE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3677
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3680
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3686
		{
			return unimplemented(sqllex, "create access method")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplemented(sqllex, "create cast")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3689
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3691
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3692
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3693
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3696
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3698
		{
			return unimplemented(sqllex, "create publication")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3699
		{
			return unimplemented(sqllex, "create rule")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplemented(sqllex, "create server")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3702
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3704
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
		}
	case 429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3708
		{
		}
	case 430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3711
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3712
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3715
		{
		}
	case 433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3716
		{
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3719
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3728
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplemented(sqllex, "drop server")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3771
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3817
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3863
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3898
		{

			sqlVAL.union.val = nil
		}
	case 491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			return helpWith(sqllex, "DELETE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3984
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3985
		{
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3998
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3999
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4009
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4011
		{
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "DROP")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4015
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4016
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4017
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4019
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4062
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4069
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4101
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4168
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4211
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4216
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4268
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4275
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4277
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4285
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4293
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4301
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4309
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4328
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "DELETE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4335
		{
			return helpWith(sqllex, "INSERT")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4340
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "DELETE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "INSERT")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4498
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4506
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4531
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4622
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4638
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "GRANT")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4734
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4737
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4747
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "RESET")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4776
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "RESET")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "USE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4825
		{
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "USE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4998
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5003
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5032
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5051
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			return unimplemented(sqllex, "set from current")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5059
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5064
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5094
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5099
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = tree.Low
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = tree.Normal
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = tree.High
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5263
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5266
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = true
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = false
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = true
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = false
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = false
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = sqlDollar[2].union.fetchCursor()
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "FETCH")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5412
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = int64(1)
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = int64(-1)
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = int64(1)
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = int64(1)
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = int64(-1)
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5467
		{
		}
	case 883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5468
		{
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5471
		{
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5472
		{
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5491
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.str = "client_encoding"
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.str = "timezone"
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5530
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5558
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5573
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5581
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5621
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5630
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5655
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5660
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5669
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5703
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5714
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5730
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5783
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5791
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5815
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5824
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5835
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5840
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5851
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5856
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = true
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = true
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = false
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5892
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5893
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5894
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5911
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5938
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5954
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5962
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6006
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6011
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6013
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6017
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = true
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = false
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6032
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6037
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6068
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6078
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6083
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = true
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = false
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6101
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6122
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6130
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6141
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6163
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6168
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6173
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6177
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6191
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6207
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6212
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6217
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6222
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6238
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6256
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6296
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6304
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6325
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6330
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6335
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6339
		{
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6348
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6371
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6383
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6442
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6452
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6598
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6641
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6650
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6699
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6700
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6701
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6702
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6713
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6714
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6715
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6726
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6754
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6767
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6799
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6807
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6818
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6854
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6882
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6918
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6933
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6961
		{

			sqlVAL.union.val = nil
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6967
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.str = ""
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6977
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = nil
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7000
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7004
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7040
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7053
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7067
		{
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7068
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7069
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7124
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7150
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7161
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7164
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7167
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.str = ""
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7413
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7458
		{

			sqlVAL.union.val = true
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = false
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7468
		{
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7472
		{
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7475
		{
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7572
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7583
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7600
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7610
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7625
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7693
		{
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7694
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7695
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7696
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7697
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7698
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7780
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7865
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7874
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7882
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7893
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7906
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7916
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7918
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7920
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7925
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7928
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7930
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7943
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7947
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7974
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.str = ""
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = true
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8042
		{

			sqlVAL.union.val = true
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = false
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8057
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8071
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8083
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8095
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8105
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8115
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8119
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = true
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = true
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = nil
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8262
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8263
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8288
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8290
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8292
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8294
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8296
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8298
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8333
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8350
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8368
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8384
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8400
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8404
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = false
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = true
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = false
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = true
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = false
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8464
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8470
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8478
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.str = ""
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.str = ""
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8537
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8543
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8768
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8774
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8786
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8792
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8806
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8812
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8871
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = true
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = false
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = tree.Types
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8959
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8960
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8963
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8964
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9002
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9052
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9060
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9071
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9077
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9096
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9101
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9114
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9119
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9128
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9129
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9130
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9147
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9150
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9151
		{
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9192
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9194
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9198
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9288
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.str = ""
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9333
		{

		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9348
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.str = ""
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.str = ""
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.str = ""
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.str = ""
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9403
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9429
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9458
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9476
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9489
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9538
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9583
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9653
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9674
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9689
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9833
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9868
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9869
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9870
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9931
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9975
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9991
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = true
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = false
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10045
		{
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = nil
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10059
		{
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = true
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = false
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = false
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = true
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10088
		{
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10089
		{
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10092
		{
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10093
		{
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10146
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10151
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10177
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10210
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10265
		{
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10269
		{
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10270
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10305
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10306
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10336
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10338
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10353
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10375
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10406
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10422
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10434
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10453
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10495
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10505
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10540
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10551
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10581
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10614
		{
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10616
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = nil
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = true
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = false
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.str = tree.AstFull
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.str = tree.AstRight
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.str = tree.AstInner
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10733
		{
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10734
		{
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.str = tree.AstHash
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.str = ""
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10803
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10826
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10832
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10838
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10848
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = true
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = false
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = true
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = false
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10897
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10910
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10918
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10919
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10937
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10939
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10947
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10967
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11016
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11028
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11029
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = types.Geography
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11078
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11086
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11120
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = nil
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = types.Int2
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = types.Int
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = types.Float4
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = types.Float
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11163
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11171
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11179
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = types.Bool
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = types.Float
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11212
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11218
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11240
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = types.String
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = true
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = false
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = types.Date
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11289
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11297
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11311
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11320
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11328
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11345
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = true
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = false
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = false
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = types.Interval
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11369
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11453
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = nil
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11498
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11558
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11707
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11715
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11902
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11924
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12032
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12040
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12136
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12141
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12167
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12191
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12225
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12236
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12237
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12252
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12261
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12327
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12398
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12452
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12457
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12466
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12475
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12484
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12493
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12498
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12503
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12508
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12513
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12518
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12527
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12528
		{
			return unimplemented(sqllex, "treat")
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12549
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12554
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12601
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.str = ""
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12660
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12690
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12703
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12739
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12771
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12789
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12800
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12844
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12852
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12855
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12856
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12863
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12869
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12871
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12876
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12892
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12901
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12902
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12925
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12929
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12943
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12958
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13048
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13052
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13112
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13118
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13184
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13190
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13194
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13201
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13216
		{
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13217
		{
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13244
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13248
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13256
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13266
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13270
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13289
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13297
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13320
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13337
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13366
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13370
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13382
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13386
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13395
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13406
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13415
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13423
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13440
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13525
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13543
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13555
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13582
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13589
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13593
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13597
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13611
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13615
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13619
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13632
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13641
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13659
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13672
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13679
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13704
		{
			sqlVAL.str = ""
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13710
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13714
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
