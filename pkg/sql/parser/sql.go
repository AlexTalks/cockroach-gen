// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:929
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14540

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1717,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	270, 441,
	-2, 0,
	-1, 71,
	8, 898,
	29, 898,
	618, 898,
	619, 898,
	-2, 0,
	-1, 72,
	8, 898,
	29, 898,
	618, 898,
	619, 898,
	-2, 0,
	-1, 79,
	252, 266,
	540, 266,
	-2, 0,
	-1, 93,
	240, 1450,
	254, 1450,
	270, 437,
	408, 437,
	419, 1197,
	460, 437,
	474, 1197,
	524, 1197,
	552, 437,
	579, 1197,
	-2, 0,
	-1, 99,
	137, 1717,
	247, 1717,
	563, 1717,
	564, 1717,
	-2, 0,
	-1, 117,
	156, 1688,
	176, 1688,
	189, 1688,
	250, 1688,
	283, 1688,
	357, 1688,
	368, 1688,
	558, 1688,
	-2, 1659,
	-1, 159,
	164, 1028,
	269, 1028,
	411, 989,
	479, 989,
	523, 989,
	543, 1028,
	545, 989,
	-2, 0,
	-1, 164,
	4, 1719,
	21, 1719,
	22, 1719,
	23, 1719,
	24, 1719,
	25, 1719,
	26, 1719,
	27, 1719,
	28, 1719,
	30, 1719,
	31, 1719,
	37, 1719,
	41, 1719,
	43, 1719,
	44, 1719,
	46, 1719,
	47, 1719,
	48, 1719,
	49, 1719,
	50, 1719,
	51, 1719,
	52, 1719,
	53, 1719,
	54, 1719,
	56, 1719,
	57, 1719,
	58, 1719,
	59, 1719,
	61, 1719,
	62, 1719,
	63, 1719,
	64, 1719,
	65, 1719,
	66, 1719,
	67, 1719,
	71, 1719,
	72, 1719,
	73, 1719,
	74, 1719,
	76, 1719,
	77, 1719,
	78, 1719,
	82, 1719,
	83, 1719,
	84, 1719,
	85, 1719,
	86, 1719,
	87, 1719,
	88, 1719,
	89, 1719,
	92, 1719,
	93, 1719,
	94, 1719,
	95, 1719,
	96, 1719,
	98, 1719,
	100, 1719,
	101, 1719,
	102, 1719,
	103, 1719,
	104, 1719,
	105, 1719,
	107, 1719,
	108, 1719,
	109, 1719,
	111, 1719,
	112, 1719,
	113, 1719,
	121, 1719,
	122, 1719,
	123, 1719,
	124, 1719,
	125, 1719,
	127, 1719,
	128, 1719,
	129, 1719,
	130, 1719,
	132, 1719,
	133, 1719,
	134, 1719,
	136, 1719,
	137, 1719,
	138, 1719,
	140, 1719,
	141, 1719,
	142, 1719,
	145, 1719,
	146, 1719,
	147, 1719,
	149, 1719,
	150, 1719,
	151, 1719,
	153, 1719,
	154, 1719,
	155, 1719,
	157, 1719,
	158, 1719,
	159, 1719,
	160, 1719,
	161, 1719,
	162, 1719,
	163, 1719,
	164, 1719,
	165, 1719,
	166, 1719,
	167, 1719,
	168, 1719,
	169, 1719,
	170, 1719,
	171, 1719,
	172, 1719,
	173, 1719,
	175, 1719,
	181, 1719,
	182, 1719,
	183, 1719,
	184, 1719,
	188, 1719,
	190, 1719,
	191, 1719,
	192, 1719,
	194, 1719,
	197, 1719,
	198, 1719,
	199, 1719,
	200, 1719,
	201, 1719,
	202, 1719,
	203, 1719,
	204, 1719,
	205, 1719,
	206, 1719,
	207, 1719,
	208, 1719,
	209, 1719,
	210, 1719,
	212, 1719,
	213, 1719,
	215, 1719,
	216, 1719,
	218, 1719,
	219, 1719,
	220, 1719,
	221, 1719,
	222, 1719,
	223, 1719,
	224, 1719,
	225, 1719,
	226, 1719,
	227, 1719,
	229, 1719,
	230, 1719,
	232, 1719,
	233, 1719,
	234, 1719,
	235, 1719,
	236, 1719,
	240, 1719,
	241, 1719,
	242, 1719,
	243, 1719,
	246, 1719,
	247, 1719,
	248, 1719,
	249, 1719,
	251, 1719,
	253, 1719,
	254, 1719,
	256, 1719,
	258, 1719,
	259, 1719,
	260, 1719,
	262, 1719,
	266, 1719,
	267, 1719,
	268, 1719,
	269, 1719,
	270, 1719,
	271, 1719,
	273, 1719,
	274, 1719,
	275, 1719,
	277, 1719,
	278, 1719,
	280, 1719,
	281, 1719,
	284, 1719,
	285, 1719,
	286, 1719,
	287, 1719,
	288, 1719,
	289, 1719,
	290, 1719,
	293, 1719,
	294, 1719,
	295, 1719,
	296, 1719,
	298, 1719,
	299, 1719,
	300, 1719,
	301, 1719,
	302, 1719,
	303, 1719,
	304, 1719,
	305, 1719,
	306, 1719,
	307, 1719,
	308, 1719,
	309, 1719,
	310, 1719,
	311, 1719,
	312, 1719,
	313, 1719,
	314, 1719,
	315, 1719,
	316, 1719,
	317, 1719,
	318, 1719,
	319, 1719,
	320, 1719,
	322, 1719,
	324, 1719,
	325, 1719,
	326, 1719,
	327, 1719,
	328, 1719,
	329, 1719,
	330, 1719,
	331, 1719,
	332, 1719,
	333, 1719,
	334, 1719,
	335, 1719,
	336, 1719,
	337, 1719,
	338, 1719,
	339, 1719,
	340, 1719,
	342, 1719,
	343, 1719,
	345, 1719,
	347, 1719,
	348, 1719,
	349, 1719,
	350, 1719,
	352, 1719,
	353, 1719,
	354, 1719,
	355, 1719,
	356, 1719,
	359, 1719,
	361, 1719,
	363, 1719,
	364, 1719,
	365, 1719,
	366, 1719,
	369, 1719,
	370, 1719,
	371, 1719,
	373, 1719,
	375, 1719,
	376, 1719,
	377, 1719,
	378, 1719,
	379, 1719,
	380, 1719,
	381, 1719,
	382, 1719,
	383, 1719,
	384, 1719,
	385, 1719,
	386, 1719,
	387, 1719,
	389, 1719,
	390, 1719,
	391, 1719,
	392, 1719,
	393, 1719,
	394, 1719,
	395, 1719,
	396, 1719,
	397, 1719,
	398, 1719,
	399, 1719,
	400, 1719,
	401, 1719,
	402, 1719,
	403, 1719,
	405, 1719,
	406, 1719,
	407, 1719,
	409, 1719,
	410, 1719,
	411, 1719,
	412, 1719,
	413, 1719,
	414, 1719,
	415, 1719,
	416, 1719,
	417, 1719,
	418, 1719,
	419, 1719,
	420, 1719,
	421, 1719,
	423, 1719,
	425, 1719,
	426, 1719,
	427, 1719,
	433, 1719,
	434, 1719,
	435, 1719,
	437, 1719,
	438, 1719,
	439, 1719,
	440, 1719,
	441, 1719,
	442, 1719,
	443, 1719,
	444, 1719,
	445, 1719,
	446, 1719,
	448, 1719,
	449, 1719,
	450, 1719,
	452, 1719,
	453, 1719,
	454, 1719,
	455, 1719,
	456, 1719,
	457, 1719,
	458, 1719,
	460, 1719,
	461, 1719,
	462, 1719,
	463, 1719,
	464, 1719,
	465, 1719,
	466, 1719,
	467, 1719,
	468, 1719,
	469, 1719,
	470, 1719,
	471, 1719,
	472, 1719,
	474, 1719,
	475, 1719,
	476, 1719,
	477, 1719,
	478, 1719,
	479, 1719,
	481, 1719,
	482, 1719,
	483, 1719,
	484, 1719,
	485, 1719,
	486, 1719,
	488, 1719,
	489, 1719,
	490, 1719,
	491, 1719,
	492, 1719,
	493, 1719,
	494, 1719,
	495, 1719,
	497, 1719,
	499, 1719,
	500, 1719,
	501, 1719,
	502, 1719,
	503, 1719,
	504, 1719,
	505, 1719,
	506, 1719,
	507, 1719,
	508, 1719,
	509, 1719,
	510, 1719,
	511, 1719,
	512, 1719,
	513, 1719,
	514, 1719,
	515, 1719,
	516, 1719,
	517, 1719,
	519, 1719,
	520, 1719,
	522, 1719,
	523, 1719,
	525, 1719,
	526, 1719,
	527, 1719,
	528, 1719,
	529, 1719,
	530, 1719,
	532, 1719,
	533, 1719,
	535, 1719,
	536, 1719,
	537, 1719,
	538, 1719,
	539, 1719,
	541, 1719,
	543, 1719,
	544, 1719,
	545, 1719,
	546, 1719,
	547, 1719,
	548, 1719,
	549, 1719,
	551, 1719,
	552, 1719,
	553, 1719,
	554, 1719,
	556, 1719,
	557, 1719,
	560, 1719,
	561, 1719,
	562, 1719,
	563, 1719,
	564, 1719,
	565, 1719,
	566, 1719,
	567, 1719,
	569, 1719,
	572, 1719,
	573, 1719,
	574, 1719,
	575, 1719,
	576, 1719,
	577, 1719,
	579, 1719,
	580, 1719,
	581, 1719,
	582, 1719,
	583, 1719,
	584, 1719,
	585, 1719,
	586, 1719,
	591, 1719,
	592, 1719,
	593, 1719,
	594, 1719,
	595, 1719,
	596, 1719,
	-2, 0,
	-1, 165,
	1, 1567,
	135, 1567,
	258, 1567,
	344, 1567,
	406, 1567,
	415, 1567,
	600, 1567,
	631, 1567,
	-2, 0,
	-1, 167,
	1, 1567,
	631, 1567,
	-2, 0,
	-1, 168,
	1, 1567,
	631, 1567,
	-2, 0,
	-1, 169,
	1, 1567,
	540, 1567,
	631, 1567,
	-2, 0,
	-1, 201,
	156, 1687,
	176, 1687,
	189, 1687,
	250, 1687,
	283, 1687,
	357, 1687,
	368, 1687,
	558, 1687,
	-2, 1662,
	-1, 251,
	4, 1726,
	5, 1726,
	6, 1726,
	7, 1726,
	8, 1726,
	9, 1726,
	10, 1726,
	21, 1726,
	22, 1726,
	23, 1726,
	24, 1726,
	25, 1726,
	26, 1726,
	27, 1726,
	28, 1726,
	30, 1726,
	31, 1726,
	37, 1726,
	38, 1726,
	41, 1726,
	43, 1726,
	44, 1726,
	45, 1726,
	46, 1726,
	47, 1726,
	48, 1726,
	49, 1726,
	50, 1726,
	51, 1726,
	52, 1726,
	53, 1726,
	54, 1726,
	56, 1726,
	57, 1726,
	58, 1726,
	59, 1726,
	61, 1726,
	62, 1726,
	63, 1726,
	64, 1726,
	65, 1726,
	66, 1726,
	67, 1726,
	68, 1726,
	69, 1726,
	70, 1726,
	71, 1726,
	72, 1726,
	73, 1726,
	74, 1726,
	76, 1726,
	77, 1726,
	78, 1726,
	80, 1726,
	82, 1726,
	83, 1726,
	84, 1726,
	85, 1726,
	86, 1726,
	87, 1726,
	88, 1726,
	89, 1726,
	92, 1726,
	93, 1726,
	94, 1726,
	95, 1726,
	96, 1726,
	98, 1726,
	100, 1726,
	101, 1726,
	102, 1726,
	103, 1726,
	104, 1726,
	105, 1726,
	107, 1726,
	108, 1726,
	109, 1726,
	110, 1726,
	111, 1726,
	112, 1726,
	113, 1726,
	114, 1726,
	115, 1726,
	116, 1726,
	117, 1726,
	118, 1726,
	119, 1726,
	120, 1726,
	121, 1726,
	122, 1726,
	123, 1726,
	124, 1726,
	125, 1726,
	126, 1726,
	127, 1726,
	128, 1726,
	129, 1726,
	130, 1726,
	131, 1726,
	132, 1726,
	133, 1726,
	134, 1726,
	136, 1726,
	137, 1726,
	138, 1726,
	140, 1726,
	141, 1726,
	142, 1726,
	145, 1726,
	146, 1726,
	147, 1726,
	149, 1726,
	150, 1726,
	151, 1726,
	153, 1726,
	154, 1726,
	155, 1726,
	157, 1726,
	158, 1726,
	159, 1726,
	160, 1726,
	161, 1726,
	162, 1726,
	163, 1726,
	164, 1726,
	165, 1726,
	166, 1726,
	167, 1726,
	168, 1726,
	169, 1726,
	170, 1726,
	171, 1726,
	172, 1726,
	173, 1726,
	174, 1726,
	175, 1726,
	181, 1726,
	182, 1726,
	183, 1726,
	184, 1726,
	188, 1726,
	190, 1726,
	191, 1726,
	192, 1726,
	194, 1726,
	196, 1726,
	197, 1726,
	198, 1726,
	199, 1726,
	200, 1726,
	201, 1726,
	202, 1726,
	203, 1726,
	204, 1726,
	205, 1726,
	206, 1726,
	207, 1726,
	208, 1726,
	209, 1726,
	210, 1726,
	212, 1726,
	213, 1726,
	215, 1726,
	216, 1726,
	218, 1726,
	219, 1726,
	220, 1726,
	221, 1726,
	222, 1726,
	223, 1726,
	224, 1726,
	225, 1726,
	226, 1726,
	227, 1726,
	228, 1726,
	229, 1726,
	230, 1726,
	232, 1726,
	233, 1726,
	234, 1726,
	235, 1726,
	236, 1726,
	240, 1726,
	241, 1726,
	242, 1726,
	243, 1726,
	245, 1726,
	246, 1726,
	247, 1726,
	248, 1726,
	249, 1726,
	251, 1726,
	253, 1726,
	254, 1726,
	255, 1726,
	256, 1726,
	257, 1726,
	258, 1726,
	259, 1726,
	260, 1726,
	261, 1726,
	262, 1726,
	266, 1726,
	267, 1726,
	268, 1726,
	269, 1726,
	270, 1726,
	271, 1726,
	273, 1726,
	274, 1726,
	275, 1726,
	277, 1726,
	278, 1726,
	279, 1726,
	280, 1726,
	281, 1726,
	282, 1726,
	284, 1726,
	285, 1726,
	286, 1726,
	287, 1726,
	288, 1726,
	289, 1726,
	290, 1726,
	291, 1726,
	292, 1726,
	293, 1726,
	294, 1726,
	295, 1726,
	296, 1726,
	298, 1726,
	299, 1726,
	300, 1726,
	301, 1726,
	302, 1726,
	303, 1726,
	304, 1726,
	305, 1726,
	306, 1726,
	307, 1726,
	308, 1726,
	309, 1726,
	310, 1726,
	311, 1726,
	312, 1726,
	313, 1726,
	314, 1726,
	315, 1726,
	316, 1726,
	317, 1726,
	318, 1726,
	319, 1726,
	320, 1726,
	322, 1726,
	323, 1726,
	324, 1726,
	325, 1726,
	326, 1726,
	327, 1726,
	328, 1726,
	329, 1726,
	330, 1726,
	331, 1726,
	332, 1726,
	333, 1726,
	334, 1726,
	335, 1726,
	336, 1726,
	337, 1726,
	338, 1726,
	339, 1726,
	340, 1726,
	341, 1726,
	342, 1726,
	343, 1726,
	344, 1726,
	345, 1726,
	346, 1726,
	347, 1726,
	348, 1726,
	349, 1726,
	350, 1726,
	351, 1726,
	352, 1726,
	353, 1726,
	354, 1726,
	355, 1726,
	356, 1726,
	359, 1726,
	361, 1726,
	364, 1726,
	365, 1726,
	366, 1726,
	369, 1726,
	370, 1726,
	371, 1726,
	372, 1726,
	373, 1726,
	374, 1726,
	375, 1726,
	376, 1726,
	377, 1726,
	378, 1726,
	379, 1726,
	380, 1726,
	381, 1726,
	382, 1726,
	383, 1726,
	384, 1726,
	385, 1726,
	386, 1726,
	387, 1726,
	389, 1726,
	390, 1726,
	391, 1726,
	392, 1726,
	393, 1726,
	394, 1726,
	395, 1726,
	396, 1726,
	397, 1726,
	398, 1726,
	399, 1726,
	400, 1726,
	401, 1726,
	402, 1726,
	403, 1726,
	405, 1726,
	406, 1726,
	407, 1726,
	409, 1726,
	410, 1726,
	411, 1726,
	412, 1726,
	413, 1726,
	414, 1726,
	415, 1726,
	416, 1726,
	417, 1726,
	418, 1726,
	419, 1726,
	420, 1726,
	421, 1726,
	423, 1726,
	425, 1726,
	426, 1726,
	427, 1726,
	433, 1726,
	434, 1726,
	435, 1726,
	437, 1726,
	438, 1726,
	439, 1726,
	440, 1726,
	441, 1726,
	442, 1726,
	443, 1726,
	444, 1726,
	445, 1726,
	446, 1726,
	448, 1726,
	449, 1726,
	450, 1726,
	451, 1726,
	452, 1726,
	453, 1726,
	454, 1726,
	455, 1726,
	456, 1726,
	457, 1726,
	458, 1726,
	460, 1726,
	461, 1726,
	462, 1726,
	463, 1726,
	464, 1726,
	465, 1726,
	466, 1726,
	467, 1726,
	468, 1726,
	469, 1726,
	470, 1726,
	471, 1726,
	472, 1726,
	474, 1726,
	475, 1726,
	476, 1726,
	477, 1726,
	478, 1726,
	479, 1726,
	480, 1726,
	481, 1726,
	482, 1726,
	483, 1726,
	484, 1726,
	485, 1726,
	486, 1726,
	487, 1726,
	488, 1726,
	489, 1726,
	490, 1726,
	491, 1726,
	492, 1726,
	493, 1726,
	494, 1726,
	495, 1726,
	497, 1726,
	499, 1726,
	500, 1726,
	501, 1726,
	502, 1726,
	503, 1726,
	504, 1726,
	505, 1726,
	506, 1726,
	507, 1726,
	508, 1726,
	509, 1726,
	510, 1726,
	511, 1726,
	512, 1726,
	513, 1726,
	514, 1726,
	515, 1726,
	516, 1726,
	517, 1726,
	519, 1726,
	520, 1726,
	521, 1726,
	522, 1726,
	523, 1726,
	525, 1726,
	526, 1726,
	527, 1726,
	528, 1726,
	529, 1726,
	530, 1726,
	532, 1726,
	533, 1726,
	535, 1726,
	536, 1726,
	537, 1726,
	538, 1726,
	539, 1726,
	541, 1726,
	543, 1726,
	544, 1726,
	545, 1726,
	546, 1726,
	547, 1726,
	548, 1726,
	549, 1726,
	550, 1726,
	551, 1726,
	552, 1726,
	553, 1726,
	554, 1726,
	556, 1726,
	557, 1726,
	559, 1726,
	560, 1726,
	561, 1726,
	562, 1726,
	563, 1726,
	564, 1726,
	565, 1726,
	566, 1726,
	567, 1726,
	568, 1726,
	569, 1726,
	572, 1726,
	573, 1726,
	574, 1726,
	575, 1726,
	576, 1726,
	577, 1726,
	579, 1726,
	580, 1726,
	581, 1726,
	582, 1726,
	583, 1726,
	584, 1726,
	585, 1726,
	586, 1726,
	591, 1726,
	592, 1726,
	593, 1726,
	594, 1726,
	595, 1726,
	596, 1726,
	597, 1726,
	611, 1726,
	618, 1726,
	619, 1726,
	620, 1726,
	628, 1726,
	632, 1726,
	-2, 0,
	-1, 793,
	4, 1448,
	21, 1448,
	22, 1448,
	23, 1448,
	24, 1448,
	25, 1448,
	26, 1448,
	27, 1448,
	28, 1448,
	30, 1448,
	31, 1448,
	37, 1448,
	41, 1448,
	43, 1448,
	44, 1448,
	46, 1448,
	47, 1448,
	48, 1448,
	49, 1448,
	50, 1448,
	51, 1448,
	52, 1448,
	53, 1448,
	54, 1448,
	56, 1448,
	57, 1448,
	58, 1448,
	59, 1448,
	61, 1448,
	62, 1448,
	63, 1448,
	64, 1448,
	65, 1448,
	66, 1448,
	67, 1448,
	71, 1448,
	72, 1448,
	73, 1448,
	74, 1448,
	76, 1448,
	77, 1448,
	78, 1448,
	82, 1448,
	83, 1448,
	84, 1448,
	85, 1448,
	86, 1448,
	87, 1448,
	88, 1448,
	89, 1448,
	92, 1448,
	93, 1448,
	94, 1448,
	95, 1448,
	96, 1448,
	98, 1448,
	100, 1448,
	101, 1448,
	102, 1448,
	103, 1448,
	104, 1448,
	105, 1448,
	107, 1448,
	108, 1448,
	109, 1448,
	111, 1448,
	112, 1448,
	113, 1448,
	121, 1448,
	122, 1448,
	123, 1448,
	124, 1448,
	125, 1448,
	127, 1448,
	128, 1448,
	129, 1448,
	130, 1448,
	132, 1448,
	133, 1448,
	134, 1448,
	136, 1448,
	137, 1448,
	138, 1448,
	140, 1448,
	141, 1448,
	142, 1448,
	145, 1448,
	146, 1448,
	147, 1448,
	149, 1448,
	150, 1448,
	151, 1448,
	153, 1448,
	154, 1448,
	155, 1448,
	157, 1448,
	158, 1448,
	159, 1448,
	160, 1448,
	161, 1448,
	162, 1448,
	163, 1448,
	164, 1448,
	165, 1448,
	166, 1448,
	167, 1448,
	168, 1448,
	169, 1448,
	170, 1448,
	171, 1448,
	172, 1448,
	173, 1448,
	175, 1448,
	181, 1448,
	182, 1448,
	183, 1448,
	184, 1448,
	188, 1448,
	190, 1448,
	191, 1448,
	192, 1448,
	194, 1448,
	197, 1448,
	198, 1448,
	199, 1448,
	200, 1448,
	201, 1448,
	202, 1448,
	203, 1448,
	204, 1448,
	205, 1448,
	206, 1448,
	207, 1448,
	208, 1448,
	209, 1448,
	210, 1448,
	212, 1448,
	213, 1448,
	215, 1448,
	216, 1448,
	218, 1448,
	219, 1448,
	220, 1448,
	221, 1448,
	222, 1448,
	223, 1448,
	224, 1448,
	225, 1448,
	226, 1448,
	227, 1448,
	229, 1448,
	230, 1448,
	232, 1448,
	233, 1448,
	234, 1448,
	235, 1448,
	236, 1448,
	240, 1448,
	241, 1448,
	242, 1448,
	243, 1448,
	246, 1448,
	247, 1448,
	248, 1448,
	249, 1448,
	251, 1448,
	253, 1448,
	254, 1448,
	256, 1448,
	258, 1448,
	259, 1448,
	260, 1448,
	262, 1448,
	266, 1448,
	267, 1448,
	268, 1448,
	269, 1448,
	270, 1448,
	271, 1448,
	273, 1448,
	274, 1448,
	275, 1448,
	277, 1448,
	278, 1448,
	280, 1448,
	281, 1448,
	284, 1448,
	285, 1448,
	286, 1448,
	287, 1448,
	288, 1448,
	289, 1448,
	290, 1448,
	293, 1448,
	294, 1448,
	295, 1448,
	296, 1448,
	298, 1448,
	299, 1448,
	300, 1448,
	301, 1448,
	302, 1448,
	303, 1448,
	304, 1448,
	305, 1448,
	306, 1448,
	307, 1448,
	308, 1448,
	309, 1448,
	310, 1448,
	311, 1448,
	312, 1448,
	313, 1448,
	314, 1448,
	315, 1448,
	316, 1448,
	317, 1448,
	318, 1448,
	319, 1448,
	320, 1448,
	322, 1448,
	324, 1448,
	325, 1448,
	326, 1448,
	327, 1448,
	328, 1448,
	329, 1448,
	330, 1448,
	331, 1448,
	332, 1448,
	333, 1448,
	334, 1448,
	335, 1448,
	336, 1448,
	337, 1448,
	338, 1448,
	339, 1448,
	340, 1448,
	342, 1448,
	343, 1448,
	345, 1448,
	347, 1448,
	348, 1448,
	349, 1448,
	350, 1448,
	352, 1448,
	353, 1448,
	354, 1448,
	355, 1448,
	356, 1448,
	359, 1448,
	361, 1448,
	364, 1448,
	365, 1448,
	366, 1448,
	369, 1448,
	370, 1448,
	371, 1448,
	373, 1448,
	375, 1448,
	376, 1448,
	377, 1448,
	378, 1448,
	379, 1448,
	380, 1448,
	381, 1448,
	382, 1448,
	383, 1448,
	384, 1448,
	385, 1448,
	386, 1448,
	387, 1448,
	389, 1448,
	390, 1448,
	391, 1448,
	392, 1448,
	393, 1448,
	394, 1448,
	395, 1448,
	396, 1448,
	397, 1448,
	398, 1448,
	399, 1448,
	400, 1448,
	401, 1448,
	402, 1448,
	403, 1448,
	405, 1448,
	406, 1448,
	407, 1448,
	409, 1448,
	410, 1448,
	411, 1448,
	412, 1448,
	413, 1448,
	414, 1448,
	415, 1448,
	416, 1448,
	417, 1448,
	418, 1448,
	419, 1448,
	420, 1448,
	421, 1448,
	423, 1448,
	425, 1448,
	426, 1448,
	427, 1448,
	433, 1448,
	434, 1448,
	435, 1448,
	437, 1448,
	438, 1448,
	439, 1448,
	440, 1448,
	441, 1448,
	442, 1448,
	443, 1448,
	444, 1448,
	445, 1448,
	446, 1448,
	448, 1448,
	449, 1448,
	450, 1448,
	452, 1448,
	453, 1448,
	454, 1448,
	455, 1448,
	456, 1448,
	457, 1448,
	458, 1448,
	460, 1448,
	461, 1448,
	462, 1448,
	463, 1448,
	464, 1448,
	465, 1448,
	466, 1448,
	467, 1448,
	468, 1448,
	469, 1448,
	470, 1448,
	471, 1448,
	472, 1448,
	474, 1448,
	475, 1448,
	476, 1448,
	477, 1448,
	478, 1448,
	479, 1448,
	481, 1448,
	482, 1448,
	483, 1448,
	484, 1448,
	485, 1448,
	486, 1448,
	488, 1448,
	489, 1448,
	490, 1448,
	491, 1448,
	492, 1448,
	493, 1448,
	494, 1448,
	495, 1448,
	497, 1448,
	499, 1448,
	500, 1448,
	501, 1448,
	502, 1448,
	503, 1448,
	504, 1448,
	505, 1448,
	506, 1448,
	507, 1448,
	508, 1448,
	509, 1448,
	510, 1448,
	511, 1448,
	512, 1448,
	513, 1448,
	514, 1448,
	515, 1448,
	516, 1448,
	517, 1448,
	519, 1448,
	520, 1448,
	522, 1448,
	523, 1448,
	525, 1448,
	526, 1448,
	527, 1448,
	528, 1448,
	529, 1448,
	530, 1448,
	532, 1448,
	533, 1448,
	535, 1448,
	536, 1448,
	537, 1448,
	538, 1448,
	539, 1448,
	541, 1448,
	543, 1448,
	544, 1448,
	545, 1448,
	546, 1448,
	547, 1448,
	548, 1448,
	549, 1448,
	551, 1448,
	552, 1448,
	553, 1448,
	554, 1448,
	556, 1448,
	557, 1448,
	560, 1448,
	561, 1448,
	562, 1448,
	563, 1448,
	564, 1448,
	565, 1448,
	566, 1448,
	567, 1448,
	569, 1448,
	572, 1448,
	573, 1448,
	574, 1448,
	575, 1448,
	576, 1448,
	577, 1448,
	579, 1448,
	580, 1448,
	581, 1448,
	582, 1448,
	583, 1448,
	584, 1448,
	585, 1448,
	586, 1448,
	591, 1448,
	592, 1448,
	593, 1448,
	594, 1448,
	595, 1448,
	596, 1448,
	-2, 0,
	-1, 812,
	195, 2522,
	540, 2522,
	610, 2522,
	630, 2522,
	-2, 0,
	-1, 813,
	195, 2508,
	540, 2508,
	610, 2508,
	630, 2508,
	-2, 0,
	-1, 815,
	195, 2786,
	540, 2786,
	610, 2786,
	630, 2786,
	-2, 0,
	-1, 818,
	195, 2636,
	540, 2636,
	610, 2636,
	630, 2636,
	-2, 0,
	-1, 819,
	195, 2830,
	540, 2830,
	610, 2830,
	630, 2830,
	-2, 0,
	-1, 827,
	195, 2664,
	540, 2664,
	610, 2664,
	630, 2664,
	-2, 764,
	-1, 843,
	8, 897,
	29, 897,
	618, 897,
	619, 897,
	-2, 902,
	-1, 847,
	1, 2576,
	631, 2576,
	-2, 902,
	-1, 848,
	1, 2624,
	631, 2624,
	-2, 902,
	-1, 851,
	1, 2669,
	631, 2669,
	-2, 895,
	-1, 852,
	1, 2725,
	631, 2725,
	-2, 896,
	-1, 853,
	1, 2581,
	631, 2581,
	-2, 899,
	-1, 854,
	1, 2495,
	631, 2495,
	-2, 900,
	-1, 889,
	630, 2454,
	633, 2454,
	-2, 1114,
	-1, 890,
	630, 2456,
	633, 2456,
	-2, 1115,
	-1, 891,
	630, 2455,
	633, 2455,
	-2, 1116,
	-1, 892,
	633, 2380,
	-2, 1117,
	-1, 917,
	189, 285,
	-2, 0,
	-1, 941,
	45, 2427,
	-2, 0,
	-1, 942,
	579, 1426,
	-2, 1198,
	-1, 958,
	4, 1860,
	21, 1860,
	22, 1860,
	23, 1860,
	24, 1860,
	25, 1860,
	26, 1860,
	27, 1860,
	28, 1860,
	30, 1860,
	31, 1860,
	37, 1860,
	41, 1860,
	43, 1860,
	44, 1860,
	46, 1860,
	47, 1860,
	48, 1860,
	49, 1860,
	50, 1860,
	51, 1860,
	52, 1860,
	53, 1860,
	54, 1860,
	56, 1860,
	57, 1860,
	58, 1860,
	59, 1860,
	61, 1860,
	62, 1860,
	63, 1860,
	64, 1860,
	65, 1860,
	66, 1860,
	67, 1860,
	71, 1860,
	72, 1860,
	73, 1860,
	74, 1860,
	76, 1860,
	77, 1860,
	78, 1860,
	82, 1860,
	83, 1860,
	84, 1860,
	85, 1860,
	86, 1860,
	87, 1860,
	88, 1860,
	89, 1860,
	92, 1860,
	93, 1860,
	94, 1860,
	95, 1860,
	96, 1860,
	98, 1860,
	100, 1860,
	101, 1860,
	102, 1860,
	103, 1860,
	104, 1860,
	105, 1860,
	107, 1860,
	108, 1860,
	109, 1860,
	111, 1860,
	112, 1860,
	113, 1860,
	121, 1860,
	122, 1860,
	123, 1860,
	124, 1860,
	125, 1860,
	127, 1860,
	128, 1860,
	129, 1860,
	130, 1860,
	132, 1860,
	133, 1860,
	134, 1860,
	136, 1860,
	137, 1860,
	138, 1860,
	140, 1860,
	141, 1860,
	142, 1860,
	145, 1860,
	146, 1860,
	147, 1860,
	149, 1860,
	150, 1860,
	151, 1860,
	153, 1860,
	154, 1860,
	155, 1860,
	157, 1860,
	158, 1860,
	159, 1860,
	160, 1860,
	161, 1860,
	162, 1860,
	163, 1860,
	164, 1860,
	165, 1860,
	166, 1860,
	167, 1860,
	168, 1860,
	169, 1860,
	170, 1860,
	171, 1860,
	172, 1860,
	173, 1860,
	175, 1860,
	181, 1860,
	182, 1860,
	183, 1860,
	184, 1860,
	188, 1860,
	190, 1860,
	191, 1860,
	192, 1860,
	194, 1860,
	197, 1860,
	198, 1860,
	199, 1860,
	200, 1860,
	201, 1860,
	202, 1860,
	203, 1860,
	204, 1860,
	205, 1860,
	206, 1860,
	207, 1860,
	208, 1860,
	209, 1860,
	210, 1860,
	212, 1860,
	213, 1860,
	215, 1860,
	216, 1860,
	218, 1860,
	219, 1860,
	220, 1860,
	221, 1860,
	222, 1860,
	223, 1860,
	224, 1860,
	225, 1860,
	226, 1860,
	227, 1860,
	229, 1860,
	230, 1860,
	232, 1860,
	233, 1860,
	234, 1860,
	235, 1860,
	236, 1860,
	240, 1860,
	241, 1860,
	242, 1860,
	243, 1860,
	246, 1860,
	247, 1860,
	248, 1860,
	249, 1860,
	251, 1860,
	253, 1860,
	254, 1860,
	256, 1860,
	258, 1860,
	259, 1860,
	260, 1860,
	262, 1860,
	266, 1860,
	267, 1860,
	268, 1860,
	269, 1860,
	270, 1860,
	271, 1860,
	273, 1860,
	274, 1860,
	275, 1860,
	277, 1860,
	278, 1860,
	280, 1860,
	281, 1860,
	284, 1860,
	285, 1860,
	286, 1860,
	287, 1860,
	288, 1860,
	289, 1860,
	290, 1860,
	293, 1860,
	294, 1860,
	295, 1860,
	296, 1860,
	298, 1860,
	299, 1860,
	300, 1860,
	301, 1860,
	302, 1860,
	303, 1860,
	304, 1860,
	305, 1860,
	306, 1860,
	307, 1860,
	308, 1860,
	309, 1860,
	310, 1860,
	311, 1860,
	312, 1860,
	313, 1860,
	314, 1860,
	315, 1860,
	316, 1860,
	317, 1860,
	318, 1860,
	319, 1860,
	320, 1860,
	322, 1860,
	324, 1860,
	325, 1860,
	326, 1860,
	327, 1860,
	328, 1860,
	329, 1860,
	330, 1860,
	331, 1860,
	332, 1860,
	333, 1860,
	334, 1860,
	335, 1860,
	336, 1860,
	337, 1860,
	338, 1860,
	339, 1860,
	340, 1860,
	342, 1860,
	343, 1860,
	345, 1860,
	347, 1860,
	348, 1860,
	349, 1860,
	350, 1860,
	352, 1860,
	353, 1860,
	354, 1860,
	355, 1860,
	356, 1860,
	359, 1860,
	361, 1860,
	364, 1860,
	365, 1860,
	366, 1860,
	369, 1860,
	370, 1860,
	371, 1860,
	373, 1860,
	375, 1860,
	376, 1860,
	377, 1860,
	378, 1860,
	379, 1860,
	380, 1860,
	381, 1860,
	382, 1860,
	383, 1860,
	384, 1860,
	385, 1860,
	386, 1860,
	387, 1860,
	389, 1860,
	390, 1860,
	391, 1860,
	392, 1860,
	393, 1860,
	394, 1860,
	395, 1860,
	396, 1860,
	397, 1860,
	398, 1860,
	399, 1860,
	400, 1860,
	401, 1860,
	402, 1860,
	403, 1860,
	405, 1860,
	406, 1860,
	407, 1860,
	409, 1860,
	410, 1860,
	411, 1860,
	412, 1860,
	413, 1860,
	414, 1860,
	415, 1860,
	416, 1860,
	417, 1860,
	418, 1860,
	419, 1860,
	420, 1860,
	421, 1860,
	423, 1860,
	425, 1860,
	426, 1860,
	427, 1860,
	433, 1860,
	434, 1860,
	435, 1860,
	437, 1860,
	438, 1860,
	439, 1860,
	440, 1860,
	441, 1860,
	442, 1860,
	443, 1860,
	444, 1860,
	445, 1860,
	446, 1860,
	448, 1860,
	449, 1860,
	450, 1860,
	452, 1860,
	453, 1860,
	454, 1860,
	455, 1860,
	456, 1860,
	457, 1860,
	458, 1860,
	460, 1860,
	461, 1860,
	462, 1860,
	463, 1860,
	464, 1860,
	465, 1860,
	466, 1860,
	467, 1860,
	468, 1860,
	469, 1860,
	470, 1860,
	471, 1860,
	472, 1860,
	474, 1860,
	475, 1860,
	476, 1860,
	477, 1860,
	478, 1860,
	479, 1860,
	481, 1860,
	482, 1860,
	483, 1860,
	484, 1860,
	485, 1860,
	486, 1860,
	488, 1860,
	489, 1860,
	490, 1860,
	491, 1860,
	492, 1860,
	493, 1860,
	494, 1860,
	495, 1860,
	497, 1860,
	499, 1860,
	500, 1860,
	501, 1860,
	502, 1860,
	503, 1860,
	504, 1860,
	505, 1860,
	506, 1860,
	507, 1860,
	508, 1860,
	509, 1860,
	510, 1860,
	511, 1860,
	512, 1860,
	513, 1860,
	514, 1860,
	515, 1860,
	516, 1860,
	517, 1860,
	519, 1860,
	520, 1860,
	522, 1860,
	523, 1860,
	525, 1860,
	526, 1860,
	527, 1860,
	528, 1860,
	529, 1860,
	530, 1860,
	532, 1860,
	533, 1860,
	535, 1860,
	536, 1860,
	537, 1860,
	538, 1860,
	539, 1860,
	541, 1860,
	543, 1860,
	544, 1860,
	545, 1860,
	546, 1860,
	547, 1860,
	548, 1860,
	549, 1860,
	551, 1860,
	552, 1860,
	553, 1860,
	554, 1860,
	556, 1860,
	557, 1860,
	560, 1860,
	561, 1860,
	562, 1860,
	563, 1860,
	564, 1860,
	565, 1860,
	566, 1860,
	567, 1860,
	569, 1860,
	572, 1860,
	573, 1860,
	574, 1860,
	575, 1860,
	576, 1860,
	577, 1860,
	579, 1860,
	580, 1860,
	581, 1860,
	582, 1860,
	583, 1860,
	584, 1860,
	585, 1860,
	586, 1860,
	591, 1860,
	592, 1860,
	593, 1860,
	594, 1860,
	595, 1860,
	596, 1860,
	-2, 0,
	-1, 968,
	270, 441,
	-2, 0,
	-1, 1047,
	411, 990,
	479, 990,
	523, 990,
	545, 990,
	-2, 0,
	-1, 1048,
	411, 989,
	479, 989,
	523, 989,
	545, 989,
	-2, 915,
	-1, 1052,
	1, 1042,
	627, 1042,
	629, 1042,
	631, 1042,
	-2, 0,
	-1, 1054,
	1, 964,
	627, 964,
	629, 964,
	631, 964,
	-2, 0,
	-1, 1055,
	1, 968,
	627, 968,
	629, 968,
	631, 968,
	-2, 0,
	-1, 1056,
	1, 1113,
	189, 1113,
	627, 1113,
	629, 1113,
	631, 1113,
	-2, 0,
	-1, 1064,
	1, 995,
	627, 995,
	629, 995,
	631, 995,
	-2, 0,
	-1, 1071,
	1, 1042,
	627, 1042,
	629, 1042,
	631, 1042,
	-2, 0,
	-1, 1072,
	1, 1044,
	627, 1044,
	629, 1044,
	631, 1044,
	-2, 0,
	-1, 1073,
	1, 1047,
	627, 1047,
	629, 1047,
	631, 1047,
	-2, 0,
	-1, 1081,
	1, 1077,
	627, 1077,
	629, 1077,
	631, 1077,
	-2, 0,
	-1, 1082,
	1, 1079,
	627, 1079,
	629, 1079,
	631, 1079,
	-2, 0,
	-1, 1087,
	1, 1107,
	627, 1107,
	629, 1107,
	631, 1107,
	-2, 0,
	-1, 1141,
	176, 1730,
	189, 1730,
	283, 1730,
	357, 1730,
	-2, 1666,
	-1, 1157,
	176, 1729,
	189, 1729,
	283, 1729,
	357, 1729,
	-2, 1663,
	-1, 1184,
	630, 2453,
	-2, 772,
	-1, 1213,
	5, 2445,
	628, 2443,
	-2, 2434,
	-1, 1221,
	5, 2466,
	628, 2463,
	-2, 2454,
	-1, 1222,
	5, 2467,
	628, 2464,
	-2, 2455,
	-1, 1230,
	630, 2451,
	-2, 2433,
	-1, 1231,
	628, 2918,
	-2, 2452,
	-1, 1254,
	628, 2917,
	-2, 2468,
	-1, 1255,
	5, 1935,
	-2, 2888,
	-1, 1256,
	5, 1936,
	-2, 2889,
	-1, 1257,
	5, 1937,
	-2, 2903,
	-1, 1258,
	5, 1938,
	-2, 2867,
	-1, 1259,
	5, 1939,
	-2, 2901,
	-1, 1260,
	5, 1947,
	-2, 2880,
	-1, 1261,
	5, 1934,
	-2, 2876,
	-1, 1262,
	5, 1934,
	-2, 2875,
	-1, 1263,
	5, 1934,
	-2, 2894,
	-1, 1264,
	5, 1945,
	-2, 2869,
	-1, 1265,
	5, 1950,
	-2, 2868,
	-1, 1266,
	5, 1952,
	-2, 2913,
	-1, 1269,
	5, 1974,
	-2, 2906,
	-1, 1270,
	5, 1966,
	-2, 2907,
	-1, 1271,
	5, 1974,
	-2, 2908,
	-1, 1272,
	5, 1970,
	-2, 2909,
	-1, 1273,
	5, 1920,
	-2, 2881,
	-1, 1274,
	5, 1921,
	-2, 2882,
	-1, 1275,
	5, 1922,
	-2, 2870,
	-1, 1303,
	5, 1957,
	-2, 2914,
	-1, 1304,
	5, 1958,
	-2, 2904,
	-1, 1305,
	5, 1959,
	580, 1959,
	-2, 2871,
	-1, 1306,
	5, 1960,
	580, 1960,
	-2, 2872,
	-1, 1344,
	628, 2463,
	-2, 2454,
	-1, 1345,
	628, 2464,
	-2, 2455,
	-1, 1443,
	195, 2830,
	540, 2830,
	610, 2830,
	630, 2830,
	-2, 0,
	-1, 1448,
	1, 748,
	631, 748,
	-2, 1575,
	-1, 1595,
	377, 2428,
	437, 2428,
	481, 2428,
	620, 2428,
	-2, 2418,
	-1, 1601,
	195, 145,
	277, 145,
	342, 145,
	586, 145,
	-2, 2826,
	-1, 1602,
	195, 146,
	277, 146,
	342, 146,
	586, 146,
	-2, 2567,
	-1, 1603,
	195, 147,
	277, 147,
	342, 147,
	586, 147,
	-2, 2747,
	-1, 1609,
	632, 2428,
	-2, 2430,
	-1, 1633,
	1, 1423,
	442, 1378,
	481, 1378,
	603, 1378,
	627, 1423,
	629, 1423,
	631, 1423,
	-2, 1715,
	-1, 1639,
	211, 1520,
	231, 1520,
	450, 1520,
	-2, 0,
	-1, 1688,
	419, 1197,
	579, 1197,
	-2, 436,
	-1, 1705,
	45, 2426,
	-2, 1160,
	-1, 1712,
	1, 1423,
	627, 1423,
	629, 1423,
	631, 1423,
	-2, 1715,
	-1, 1720,
	4, 1448,
	21, 1448,
	22, 1448,
	23, 1448,
	24, 1448,
	25, 1448,
	26, 1448,
	27, 1448,
	28, 1448,
	30, 1448,
	31, 1448,
	37, 1448,
	41, 1448,
	43, 1448,
	44, 1448,
	46, 1448,
	47, 1448,
	48, 1448,
	49, 1448,
	50, 1448,
	51, 1448,
	52, 1448,
	53, 1448,
	54, 1448,
	56, 1448,
	57, 1448,
	58, 1448,
	59, 1448,
	61, 1448,
	62, 1448,
	63, 1448,
	64, 1448,
	65, 1448,
	66, 1448,
	67, 1448,
	71, 1448,
	72, 1448,
	73, 1448,
	74, 1448,
	76, 1448,
	77, 1448,
	78, 1448,
	82, 1448,
	83, 1448,
	84, 1448,
	85, 1448,
	86, 1448,
	87, 1448,
	88, 1448,
	89, 1448,
	92, 1448,
	93, 1448,
	94, 1448,
	95, 1448,
	96, 1448,
	98, 1448,
	100, 1448,
	101, 1448,
	102, 1448,
	103, 1448,
	104, 1448,
	105, 1448,
	107, 1448,
	108, 1448,
	109, 1448,
	111, 1448,
	112, 1448,
	113, 1448,
	121, 1448,
	122, 1448,
	123, 1448,
	124, 1448,
	125, 1448,
	127, 1448,
	128, 1448,
	129, 1448,
	130, 1448,
	132, 1448,
	133, 1448,
	134, 1448,
	136, 1448,
	137, 1448,
	138, 1448,
	140, 1448,
	141, 1448,
	142, 1448,
	145, 1448,
	146, 1448,
	147, 1448,
	149, 1448,
	150, 1448,
	151, 1448,
	153, 1448,
	154, 1448,
	155, 1448,
	157, 1448,
	158, 1448,
	159, 1448,
	160, 1448,
	161, 1448,
	162, 1448,
	163, 1448,
	164, 1448,
	165, 1448,
	166, 1448,
	167, 1448,
	168, 1448,
	169, 1448,
	170, 1448,
	171, 1448,
	172, 1448,
	173, 1448,
	181, 1448,
	182, 1448,
	183, 1448,
	184, 1448,
	188, 1448,
	190, 1448,
	191, 1448,
	192, 1448,
	194, 1448,
	197, 1448,
	198, 1448,
	199, 1448,
	200, 1448,
	201, 1448,
	202, 1448,
	203, 1448,
	204, 1448,
	205, 1448,
	206, 1448,
	207, 1448,
	208, 1448,
	209, 1448,
	210, 1448,
	212, 1448,
	213, 1448,
	215, 1448,
	216, 1448,
	218, 1448,
	219, 1448,
	220, 1448,
	221, 1448,
	222, 1448,
	223, 1448,
	224, 1448,
	225, 1448,
	226, 1448,
	227, 1448,
	229, 1448,
	230, 1448,
	232, 1448,
	233, 1448,
	234, 1448,
	235, 1448,
	236, 1448,
	241, 1448,
	242, 1448,
	243, 1448,
	246, 1448,
	247, 1448,
	248, 1448,
	249, 1448,
	251, 1448,
	253, 1448,
	254, 1448,
	256, 1448,
	258, 1448,
	259, 1448,
	260, 1448,
	262, 1448,
	266, 1448,
	267, 1448,
	268, 1448,
	269, 1448,
	270, 1448,
	271, 1448,
	273, 1448,
	274, 1448,
	275, 1448,
	277, 1448,
	278, 1448,
	280, 1448,
	281, 1448,
	284, 1448,
	285, 1448,
	286, 1448,
	287, 1448,
	288, 1448,
	289, 1448,
	290, 1448,
	293, 1448,
	294, 1448,
	295, 1448,
	296, 1448,
	298, 1448,
	299, 1448,
	300, 1448,
	301, 1448,
	302, 1448,
	303, 1448,
	304, 1448,
	305, 1448,
	306, 1448,
	307, 1448,
	308, 1448,
	309, 1448,
	310, 1448,
	311, 1448,
	312, 1448,
	313, 1448,
	314, 1448,
	315, 1448,
	316, 1448,
	317, 1448,
	318, 1448,
	319, 1448,
	320, 1448,
	322, 1448,
	324, 1448,
	325, 1448,
	326, 1448,
	327, 1448,
	328, 1448,
	329, 1448,
	330, 1448,
	331, 1448,
	332, 1448,
	333, 1448,
	334, 1448,
	335, 1448,
	336, 1448,
	337, 1448,
	338, 1448,
	339, 1448,
	340, 1448,
	342, 1448,
	343, 1448,
	347, 1448,
	348, 1448,
	349, 1448,
	350, 1448,
	352, 1448,
	353, 1448,
	354, 1448,
	355, 1448,
	356, 1448,
	359, 1448,
	361, 1448,
	362, 1448,
	364, 1448,
	365, 1448,
	366, 1448,
	369, 1448,
	370, 1448,
	371, 1448,
	373, 1448,
	375, 1448,
	376, 1448,
	377, 1448,
	378, 1448,
	379, 1448,
	380, 1448,
	381, 1448,
	382, 1448,
	383, 1448,
	384, 1448,
	385, 1448,
	386, 1448,
	387, 1448,
	389, 1448,
	390, 1448,
	391, 1448,
	392, 1448,
	393, 1448,
	394, 1448,
	395, 1448,
	396, 1448,
	397, 1448,
	398, 1448,
	399, 1448,
	400, 1448,
	401, 1448,
	402, 1448,
	403, 1448,
	405, 1448,
	406, 1448,
	407, 1448,
	409, 1448,
	410, 1448,
	411, 1448,
	412, 1448,
	413, 1448,
	414, 1448,
	415, 1448,
	416, 1448,
	417, 1448,
	418, 1448,
	419, 1448,
	420, 1448,
	421, 1448,
	423, 1448,
	425, 1448,
	426, 1448,
	427, 1448,
	433, 1448,
	434, 1448,
	435, 1448,
	437, 1448,
	438, 1448,
	439, 1448,
	440, 1448,
	441, 1448,
	442, 1448,
	443, 1448,
	444, 1448,
	445, 1448,
	446, 1448,
	448, 1448,
	449, 1448,
	450, 1448,
	452, 1448,
	453, 1448,
	454, 1448,
	455, 1448,
	456, 1448,
	457, 1448,
	458, 1448,
	460, 1448,
	461, 1448,
	462, 1448,
	463, 1448,
	464, 1448,
	465, 1448,
	466, 1448,
	467, 1448,
	468, 1448,
	469, 1448,
	470, 1448,
	471, 1448,
	472, 1448,
	474, 1448,
	475, 1448,
	476, 1448,
	477, 1448,
	478, 1448,
	479, 1448,
	481, 1448,
	482, 1448,
	483, 1448,
	484, 1448,
	485, 1448,
	486, 1448,
	488, 1448,
	489, 1448,
	490, 1448,
	491, 1448,
	492, 1448,
	493, 1448,
	494, 1448,
	495, 1448,
	497, 1448,
	499, 1448,
	500, 1448,
	501, 1448,
	502, 1448,
	503, 1448,
	504, 1448,
	505, 1448,
	506, 1448,
	507, 1448,
	508, 1448,
	509, 1448,
	510, 1448,
	511, 1448,
	512, 1448,
	513, 1448,
	514, 1448,
	515, 1448,
	516, 1448,
	517, 1448,
	519, 1448,
	520, 1448,
	522, 1448,
	523, 1448,
	525, 1448,
	526, 1448,
	527, 1448,
	528, 1448,
	529, 1448,
	530, 1448,
	532, 1448,
	533, 1448,
	535, 1448,
	536, 1448,
	537, 1448,
	538, 1448,
	539, 1448,
	541, 1448,
	543, 1448,
	544, 1448,
	545, 1448,
	546, 1448,
	547, 1448,
	548, 1448,
	549, 1448,
	551, 1448,
	552, 1448,
	553, 1448,
	554, 1448,
	556, 1448,
	557, 1448,
	560, 1448,
	561, 1448,
	562, 1448,
	563, 1448,
	564, 1448,
	565, 1448,
	566, 1448,
	567, 1448,
	569, 1448,
	572, 1448,
	573, 1448,
	574, 1448,
	575, 1448,
	576, 1448,
	577, 1448,
	579, 1448,
	580, 1448,
	581, 1448,
	582, 1448,
	583, 1448,
	584, 1448,
	585, 1448,
	586, 1448,
	591, 1448,
	592, 1448,
	593, 1448,
	594, 1448,
	595, 1448,
	596, 1448,
	-2, 0,
	-1, 1743,
	1, 583,
	627, 583,
	629, 583,
	631, 583,
	-2, 1686,
	-1, 1746,
	4, 2912,
	11, 2912,
	12, 2912,
	14, 2912,
	15, 2912,
	16, 2912,
	17, 2912,
	18, 2912,
	19, 2912,
	21, 2912,
	22, 2912,
	23, 2912,
	24, 2912,
	25, 2912,
	26, 2912,
	27, 2912,
	28, 2912,
	30, 2912,
	31, 2912,
	34, 2912,
	35, 2912,
	37, 2912,
	39, 2912,
	41, 2912,
	43, 2912,
	44, 2912,
	46, 2912,
	47, 2912,
	48, 2912,
	49, 2912,
	50, 2912,
	51, 2912,
	52, 2912,
	53, 2912,
	54, 2912,
	56, 2912,
	57, 2912,
	58, 2912,
	59, 2912,
	61, 2912,
	62, 2912,
	63, 2912,
	64, 2912,
	65, 2912,
	66, 2912,
	67, 2912,
	70, 2912,
	71, 2912,
	72, 2912,
	73, 2912,
	74, 2912,
	76, 2912,
	77, 2912,
	78, 2912,
	79, 2912,
	82, 2912,
	83, 2912,
	84, 2912,
	85, 2912,
	86, 2912,
	87, 2912,
	88, 2912,
	89, 2912,
	90, 2912,
	92, 2912,
	93, 2912,
	94, 2912,
	95, 2912,
	96, 2912,
	98, 2912,
	99, 2912,
	100, 2912,
	101, 2912,
	102, 2912,
	103, 2912,
	104, 2912,
	105, 2912,
	107, 2912,
	108, 2912,
	109, 2912,
	110, 2912,
	111, 2912,
	112, 2912,
	113, 2912,
	121, 2912,
	122, 2912,
	123, 2912,
	124, 2912,
	125, 2912,
	127, 2912,
	128, 2912,
	129, 2912,
	130, 2912,
	132, 2912,
	133, 2912,
	134, 2912,
	136, 2912,
	137, 2912,
	138, 2912,
	140, 2912,
	141, 2912,
	142, 2912,
	145, 2912,
	146, 2912,
	147, 2912,
	149, 2912,
	150, 2912,
	151, 2912,
	153, 2912,
	154, 2912,
	155, 2912,
	157, 2912,
	158, 2912,
	159, 2912,
	160, 2912,
	161, 2912,
	162, 2912,
	163, 2912,
	164, 2912,
	165, 2912,
	166, 2912,
	167, 2912,
	168, 2912,
	169, 2912,
	170, 2912,
	171, 2912,
	172, 2912,
	173, 2912,
	177, 2912,
	178, 2912,
	179, 2912,
	180, 2912,
	181, 2912,
	182, 2912,
	183, 2912,
	184, 2912,
	187, 2912,
	188, 2912,
	190, 2912,
	191, 2912,
	192, 2912,
	194, 2912,
	196, 2912,
	197, 2912,
	198, 2912,
	199, 2912,
	200, 2912,
	201, 2912,
	202, 2912,
	203, 2912,
	204, 2912,
	205, 2912,
	206, 2912,
	207, 2912,
	208, 2912,
	209, 2912,
	210, 2912,
	212, 2912,
	213, 2912,
	215, 2912,
	216, 2912,
	218, 2912,
	219, 2912,
	220, 2912,
	221, 2912,
	222, 2912,
	223, 2912,
	224, 2912,
	225, 2912,
	226, 2912,
	227, 2912,
	228, 2912,
	229, 2912,
	230, 2912,
	231, 2912,
	232, 2912,
	233, 2912,
	234, 2912,
	235, 2912,
	236, 2912,
	238, 2912,
	239, 2912,
	241, 2912,
	242, 2912,
	243, 2912,
	245, 2912,
	246, 2912,
	247, 2912,
	248, 2912,
	249, 2912,
	251, 2912,
	253, 2912,
	254, 2912,
	255, 2912,
	256, 2912,
	257, 2912,
	258, 2912,
	259, 2912,
	260, 2912,
	261, 2912,
	262, 2912,
	264, 2912,
	265, 2912,
	266, 2912,
	267, 2912,
	268, 2912,
	269, 2912,
	270, 2912,
	271, 2912,
	273, 2912,
	274, 2912,
	275, 2912,
	277, 2912,
	278, 2912,
	279, 2912,
	280, 2912,
	281, 2912,
	282, 2912,
	284, 2912,
	285, 2912,
	286, 2912,
	287, 2912,
	288, 2912,
	289, 2912,
	290, 2912,
	293, 2912,
	294, 2912,
	295, 2912,
	296, 2912,
	297, 2912,
	298, 2912,
	299, 2912,
	300, 2912,
	301, 2912,
	302, 2912,
	303, 2912,
	304, 2912,
	305, 2912,
	306, 2912,
	307, 2912,
	308, 2912,
	309, 2912,
	310, 2912,
	311, 2912,
	312, 2912,
	313, 2912,
	314, 2912,
	315, 2912,
	316, 2912,
	317, 2912,
	318, 2912,
	319, 2912,
	320, 2912,
	322, 2912,
	323, 2912,
	324, 2912,
	325, 2912,
	326, 2912,
	327, 2912,
	328, 2912,
	329, 2912,
	330, 2912,
	331, 2912,
	332, 2912,
	333, 2912,
	334, 2912,
	335, 2912,
	336, 2912,
	337, 2912,
	338, 2912,
	339, 2912,
	340, 2912,
	342, 2912,
	343, 2912,
	346, 2912,
	347, 2912,
	348, 2912,
	349, 2912,
	350, 2912,
	352, 2912,
	353, 2912,
	354, 2912,
	355, 2912,
	356, 2912,
	359, 2912,
	361, 2912,
	364, 2912,
	365, 2912,
	366, 2912,
	367, 2912,
	369, 2912,
	370, 2912,
	371, 2912,
	373, 2912,
	375, 2912,
	376, 2912,
	377, 2912,
	378, 2912,
	379, 2912,
	380, 2912,
	381, 2912,
	382, 2912,
	383, 2912,
	384, 2912,
	385, 2912,
	386, 2912,
	387, 2912,
	389, 2912,
	390, 2912,
	391, 2912,
	392, 2912,
	393, 2912,
	394, 2912,
	395, 2912,
	396, 2912,
	397, 2912,
	398, 2912,
	399, 2912,
	400, 2912,
	401, 2912,
	402, 2912,
	403, 2912,
	405, 2912,
	406, 2912,
	407, 2912,
	409, 2912,
	410, 2912,
	411, 2912,
	412, 2912,
	413, 2912,
	414, 2912,
	415, 2912,
	416, 2912,
	417, 2912,
	418, 2912,
	419, 2912,
	420, 2912,
	421, 2912,
	423, 2912,
	425, 2912,
	426, 2912,
	427, 2912,
	433, 2912,
	434, 2912,
	435, 2912,
	436, 2912,
	437, 2912,
	438, 2912,
	439, 2912,
	440, 2912,
	441, 2912,
	442, 2912,
	443, 2912,
	444, 2912,
	445, 2912,
	446, 2912,
	448, 2912,
	449, 2912,
	450, 2912,
	451, 2912,
	452, 2912,
	453, 2912,
	454, 2912,
	455, 2912,
	456, 2912,
	457, 2912,
	458, 2912,
	459, 2912,
	460, 2912,
	461, 2912,
	462, 2912,
	463, 2912,
	464, 2912,
	465, 2912,
	466, 2912,
	467, 2912,
	468, 2912,
	469, 2912,
	470, 2912,
	471, 2912,
	472, 2912,
	474, 2912,
	475, 2912,
	476, 2912,
	477, 2912,
	478, 2912,
	479, 2912,
	481, 2912,
	482, 2912,
	483, 2912,
	484, 2912,
	485, 2912,
	486, 2912,
	487, 2912,
	488, 2912,
	489, 2912,
	490, 2912,
	491, 2912,
	492, 2912,
	493, 2912,
	494, 2912,
	495, 2912,
	497, 2912,
	499, 2912,
	500, 2912,
	501, 2912,
	502, 2912,
	503, 2912,
	504, 2912,
	505, 2912,
	506, 2912,
	507, 2912,
	508, 2912,
	509, 2912,
	510, 2912,
	511, 2912,
	512, 2912,
	513, 2912,
	514, 2912,
	515, 2912,
	516, 2912,
	517, 2912,
	519, 2912,
	520, 2912,
	521, 2912,
	522, 2912,
	523, 2912,
	525, 2912,
	526, 2912,
	527, 2912,
	528, 2912,
	529, 2912,
	530, 2912,
	532, 2912,
	533, 2912,
	535, 2912,
	536, 2912,
	537, 2912,
	538, 2912,
	539, 2912,
	541, 2912,
	543, 2912,
	544, 2912,
	545, 2912,
	546, 2912,
	547, 2912,
	548, 2912,
	549, 2912,
	551, 2912,
	552, 2912,
	553, 2912,
	554, 2912,
	556, 2912,
	557, 2912,
	560, 2912,
	561, 2912,
	562, 2912,
	563, 2912,
	564, 2912,
	565, 2912,
	566, 2912,
	567, 2912,
	569, 2912,
	572, 2912,
	573, 2912,
	574, 2912,
	575, 2912,
	576, 2912,
	577, 2912,
	579, 2912,
	580, 2912,
	581, 2912,
	582, 2912,
	583, 2912,
	584, 2912,
	585, 2912,
	586, 2912,
	591, 2912,
	592, 2912,
	593, 2912,
	594, 2912,
	595, 2912,
	596, 2912,
	597, 2912,
	599, 2912,
	608, 2912,
	609, 2912,
	610, 2912,
	611, 2912,
	612, 2912,
	613, 2912,
	615, 2912,
	616, 2912,
	617, 2912,
	618, 2912,
	619, 2912,
	620, 2912,
	621, 2912,
	622, 2912,
	623, 2912,
	626, 2912,
	629, 2912,
	630, 2912,
	632, 2912,
	633, 2912,
	-2, 0,
	-1, 1751,
	195, 2786,
	540, 2786,
	610, 2786,
	630, 2786,
	-2, 0,
	-1, 1805,
	411, 990,
	479, 990,
	523, 990,
	545, 990,
	-2, 0,
	-1, 1816,
	1, 1520,
	627, 1520,
	629, 1520,
	631, 1520,
	-2, 0,
	-1, 1833,
	1, 985,
	627, 985,
	629, 985,
	631, 985,
	-2, 0,
	-1, 1834,
	1, 1029,
	627, 1029,
	629, 1029,
	631, 1029,
	-2, 0,
	-1, 1835,
	1, 1037,
	627, 1037,
	629, 1037,
	631, 1037,
	-2, 0,
	-1, 1838,
	1, 994,
	627, 994,
	629, 994,
	631, 994,
	-2, 0,
	-1, 1840,
	1, 1000,
	627, 1000,
	629, 1000,
	631, 1000,
	-2, 0,
	-1, 1843,
	1, 996,
	627, 996,
	629, 996,
	631, 996,
	-2, 0,
	-1, 1848,
	1, 1010,
	627, 1010,
	629, 1010,
	631, 1010,
	-2, 0,
	-1, 1882,
	1, 2768,
	627, 2768,
	629, 2768,
	630, 2768,
	631, 2768,
	-2, 0,
	-1, 1886,
	1, 1088,
	627, 1088,
	629, 1088,
	631, 1088,
	-2, 0,
	-1, 1903,
	1, 1570,
	631, 1570,
	-2, 1575,
	-1, 1906,
	176, 1729,
	189, 1729,
	283, 1729,
	357, 1729,
	-2, 1667,
	-1, 2006,
	156, 1688,
	176, 1688,
	189, 1688,
	250, 1688,
	283, 1688,
	357, 1688,
	368, 1688,
	558, 1688,
	-2, 2139,
	-1, 2067,
	629, 2314,
	-2, 0,
	-1, 2103,
	156, 1688,
	176, 1688,
	189, 1688,
	250, 1688,
	283, 1688,
	357, 1688,
	368, 1688,
	558, 1688,
	-2, 1821,
	-1, 2143,
	540, 2783,
	630, 2783,
	633, 2783,
	-2, 0,
	-1, 2160,
	628, 1962,
	-2, 1950,
	-1, 2192,
	195, 2783,
	630, 2783,
	633, 2783,
	-2, 0,
	-1, 2235,
	1, 750,
	631, 750,
	-2, 1575,
	-1, 2409,
	231, 280,
	-2, 2462,
	-1, 2410,
	231, 281,
	-2, 336,
	-1, 2521,
	1, 987,
	627, 987,
	629, 987,
	631, 987,
	-2, 0,
	-1, 2522,
	1, 1031,
	627, 1031,
	629, 1031,
	631, 1031,
	-2, 0,
	-1, 2523,
	1, 1039,
	627, 1039,
	629, 1039,
	631, 1039,
	-2, 0,
	-1, 2524,
	1, 1090,
	627, 1090,
	629, 1090,
	631, 1090,
	-2, 0,
	-1, 2565,
	1, 1012,
	627, 1012,
	629, 1012,
	631, 1012,
	-2, 0,
	-1, 2587,
	1, 1073,
	627, 1073,
	629, 1073,
	631, 1073,
	-2, 0,
	-1, 2634,
	457, 1756,
	458, 1756,
	-2, 1995,
	-1, 2665,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2015,
	-1, 2666,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2016,
	-1, 2667,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2017,
	-1, 2668,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2018,
	-1, 2669,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2019,
	-1, 2670,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2020,
	-1, 2671,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2021,
	-1, 2672,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2022,
	-1, 2684,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2034,
	-1, 2685,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2035,
	-1, 2686,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2036,
	-1, 2690,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2043,
	-1, 2696,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2047,
	-1, 2698,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2055,
	-1, 2699,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2056,
	-1, 2700,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2057,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2058,
	-1, 2875,
	5, 2466,
	195, 2325,
	628, 2463,
	-2, 2454,
	-1, 2876,
	195, 2326,
	-2, 2863,
	-1, 2877,
	195, 2327,
	-2, 2662,
	-1, 2878,
	195, 2328,
	-2, 2540,
	-1, 2879,
	195, 2329,
	-2, 2600,
	-1, 2880,
	195, 2330,
	-2, 2647,
	-1, 2881,
	195, 2331,
	-2, 2781,
	-1, 2882,
	195, 2332,
	-2, 2122,
	-1, 2954,
	1, 1822,
	2, 1822,
	110, 1822,
	156, 1822,
	176, 1822,
	189, 1822,
	196, 1822,
	214, 1822,
	217, 1822,
	245, 1822,
	250, 1822,
	261, 1822,
	279, 1822,
	283, 1822,
	323, 1822,
	357, 1822,
	362, 1822,
	368, 1822,
	447, 1822,
	451, 1822,
	558, 1822,
	570, 1822,
	588, 1822,
	589, 1822,
	590, 1822,
	600, 1822,
	627, 1822,
	629, 1822,
	631, 1822,
	633, 1822,
	-2, 1821,
	-1, 2967,
	628, 2435,
	-2, 2449,
	-1, 2969,
	1, 353,
	588, 353,
	-2, 1715,
	-1, 2999,
	628, 1961,
	-2, 1951,
	-1, 3213,
	1, 1423,
	442, 1378,
	481, 1378,
	603, 1378,
	627, 1423,
	629, 1423,
	631, 1423,
	-2, 1715,
	-1, 3394,
	363, 1759,
	-2, 2902,
	-1, 3395,
	363, 1760,
	-2, 2765,
	-1, 3399,
	457, 2391,
	458, 2391,
	-2, 2120,
	-1, 3400,
	457, 2395,
	458, 2395,
	-2, 2121,
	-1, 3401,
	457, 2392,
	458, 2392,
	-2, 2120,
	-1, 3402,
	457, 2396,
	458, 2396,
	-2, 2121,
	-1, 3415,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2045,
	-1, 3416,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2049,
	-1, 3422,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2051,
	-1, 3649,
	1, 745,
	627, 745,
	629, 745,
	631, 745,
	-2, 1575,
	-1, 3847,
	45, 2426,
	-2, 1161,
	-1, 3852,
	1, 1423,
	627, 1423,
	629, 1423,
	631, 1423,
	-2, 1715,
	-1, 3961,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2053,
	-1, 3968,
	255, 0,
	257, 0,
	346, 0,
	-2, 2072,
	-1, 4036,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2101,
	-1, 4037,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2102,
	-1, 4038,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2103,
	-1, 4042,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2107,
	-1, 4043,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2108,
	-1, 4044,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2109,
	-1, 4092,
	628, 2436,
	-2, 2450,
	-1, 4301,
	630, 3019,
	-2, 1641,
	-1, 4360,
	255, 0,
	257, 0,
	346, 0,
	-2, 2073,
	-1, 4363,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2076,
	-1, 4364,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2078,
	-1, 4478,
	630, 2451,
	-2, 1458,
	-1, 4640,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2077,
	-1, 4641,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2079,
	-1, 4652,
	255, 0,
	-2, 2112,
	-1, 4840,
	255, 0,
	-2, 2113,
	-1, 5060,
	53, 0,
	228, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2866,
}

const sqlPrivate = 57344

const sqlLast = 147068

var sqlAct = [...]int{
	291, 4995, 5251, 3167, 1424, 5178, 5122, 4888, 3137, 3287,
	5106, 4708, 5059, 1421, 4994, 3553, 5046, 5072, 5192, 3832,
	4932, 2406, 4951, 5009, 5006, 4985, 5073, 4880, 5131, 5074,
	4786, 3833, 5028, 4809, 2295, 1480, 1337, 3070, 3844, 4773,
	4102, 4757, 5070, 4474, 4001, 1649, 1348, 4844, 5058, 4599,
	2484, 4594, 4588, 4528, 4555, 4713, 4661, 3953, 3257, 4343,
	4629, 3675, 2644, 4285, 4293, 3869, 4579, 2496, 4581, 1619,
	4792, 4917, 3678, 752, 2494, 1167, 4208, 3408, 4475, 4455,
	891, 2907, 1915, 3071, 3309, 2713, 3817, 4258, 4239, 4604,
	2304, 1416, 3863, 4241, 2652, 1158, 824, 1414, 3681, 4657,
	3822, 2147, 3897, 3152, 3899, 3806, 3663, 2217, 891, 3824,
	3271, 3245, 3276, 1499, 2981, 3273, 3821, 3799, 3798, 1769,
	3664, 2645, 3606, 4095, 3576, 1407, 3599, 3536, 3665, 2148,
	763, 3568, 3559, 2109, 3738, 3304, 2492, 1767, 4342, 970,
	3557, 1592, 3288, 2395, 1224, 3220, 2393, 2078, 1166, 191,
	2382, 3168, 2316, 4399, 3702, 5107, 2947, 2332, 966, 4,
	285, 4062, 2014, 284, 3535, 2649, 2053, 961, 888, 4845,
	1984, 2726, 2457, 3392, 116, 3249, 2444, 2949, 3303, 1707,
	1419, 2394, 1328, 820, 3182, 2372, 886, 2380, 2353, 2360,
	3258, 1463, 1217, 1478, 1813, 2283, 2215, 2927, 2127, 1903,
	2287, 2791, 2079, 2904, 2782, 1222, 2710, 2614, 2633, 1482,
	2616, 2982, 797, 1393, 1744, 3281, 1710, 2443, 1220, 3095,
	1041, 2375, 1621, 2946, 3096, 892, 893, 2936, 2204, 739,
	4952, 2098, 3825, 761, 1450, 3010, 3056, 2048, 2785, 2793,
	897, 2095, 1331, 900, 2088, 2763, 2871, 1310, 191, 2837,
	1998, 1185, 840, 2917, 1345, 201, 805, 1404, 1848, 1916,
	2403, 2615, 202, 1917, 1742, 816, 1833, 2470, 897, 1643,
	120, 900, 1735, 2384, 106, 1600, 987, 1327, 5123, 5179,
	2638, 1198, 756, 2617, 46, 45, 43, 34, 32, 780,
	753, 881, 765, 942, 30, 1333, 1308, 1922, 1902, 3439,
	1475, 3445, 1655, 1062, 2206, 4076, 943, 4077, 2206, 5262,
	5254, 4103, 3555, 2926, 3779, 2206, 5242, 1648, 1162, 2206,
	2926, 2206, 833, 836, 1930, 1931, 2206, 1963, 1964, 1965,
	1974, 1975, 1976, 5241, 5211, 5209, 5152, 2926, 4712, 4712,
	2415, 5068, 5108, 4681, 3506, 3507, 5109, 1967, 1961, 5098,
	4678, 5096, 3879, 2926, 2227, 2926, 1933, 3878, 5093, 5090,
	5056, 5055, 5094, 5091, 2415, 2415, 1980, 5054, 5044, 5042,
	5037, 3314, 4712, 4712, 4795, 5032, 5031, 5004, 1163, 4712,
	4712, 4712, 4675, 1986, 4971, 4964, 1325, 4963, 2990, 2926,
	4956, 2926, 1932, 4931, 2415, 4928, 4910, 2415, 4842, 4712,
	4545, 4823, 2990, 1952, 4788, 4319, 4731, 4730, 4136, 4719,
	2415, 2415, 1949, 2415, 4718, 4711, 3506, 3507, 4712, 4712,
	1151, 4668, 4642, 1311, 1311, 2415, 2990, 1459, 4615, 4612,
	4523, 4502, 3314, 3779, 2926, 2926, 4362, 4309, 4426, 4303,
	2990, 3892, 4255, 3892, 4167, 1839, 4256, 1142, 4168, 4135,
	1459, 4087, 4085, 4136, 1141, 4088, 4086, 4069, 3985, 3981,
	2493, 2926, 2415, 2926, 3891, 2485, 3616, 3634, 3892, 3552,
	1162, 3251, 1340, 2926, 3631, 2224, 3012, 99, 3547, 1930,
	1931, 2227, 2926, 4066, 3546, 3497, 2986, 1363, 2926, 3498,
	1955, 1956, 1957, 1958, 3495, 3521, 3779, 3487, 3496, 2415,
	1938, 3488, 3485, 1961, 1157, 3456, 2926, 3454, 3250, 2926,
	3313, 1933, 3298, 3455, 3314, 3297, 2480, 3035, 2989, 2480,
	3512, 2926, 2990, 2979, 2971, 2919, 2227, 2926, 2415, 2227,
	1779, 2925, 2479, 3407, 1371, 2926, 2480, 1314, 1986, 1315,
	2926, 1971, 4972, 1312, 1981, 2788, 1760, 1932, 4846, 251,
	4837, 1960, 1962, 4825, 4795, 3314, 4066, 2918, 1952, 2224,
	4592, 4545, 2224, 4503, 4319, 4257, 3144, 3055, 1977, 2227,
	1978, 2241, 2205, 2309, 2221, 3250, 1364, 1947, 1948, 2414,
	1364, 3162, 3046, 2926, 2074, 1642, 4185, 3956, 3928, 2096,
	1930, 1931, 3512, 2365, 2963, 1969, 3880, 1815, 2962, 2961,
	253, 3284, 2960, 2959, 1316, 1313, 251, 1150, 1149, 1148,
	1953, 3506, 3507, 1147, 1961, 1146, 3881, 4606, 1145, 1144,
	1140, 1139, 1933, 1138, 1137, 1136, 1135, 1134, 1133, 1132,
	3522, 1131, 1657, 1930, 1931, 1130, 1129, 3363, 1648, 1128,
	2789, 1669, 1127, 3506, 3507, 1955, 1956, 1957, 1958, 1986,
	1126, 252, 1125, 1124, 1123, 1938, 1122, 253, 1932, 1979,
	1121, 1103, 1039, 1038, 1037, 1933, 245, 1036, 1035, 1952,
	1034, 1033, 1032, 1031, 1030, 246, 1029, 1028, 1949, 1027,
	1968, 2207, 1026, 1025, 1024, 2207, 1023, 1022, 1021, 1020,
	1019, 1983, 2207, 1018, 1017, 1016, 2207, 1015, 2207, 3506,
	3507, 1932, 3522, 2207, 203, 1014, 1960, 1962, 252, 1013,
	1012, 1983, 1011, 1010, 1009, 1008, 1007, 1657, 1006, 1005,
	1004, 1219, 2790, 1003, 2787, 992, 991, 990, 985, 984,
	977, 976, 975, 1657, 4356, 3444, 960, 959, 916, 1663,
	915, 914, 2557, 913, 904, 903, 902, 901, 863, 1959,
	862, 831, 830, 1656, 829, 811, 1955, 1956, 1957, 1958,
	279, 203, 278, 277, 4417, 1953, 1938, 276, 275, 274,
	273, 272, 1954, 271, 270, 269, 268, 2820, 267, 2224,
	266, 2224, 251, 1983, 265, 264, 4374, 3512, 2224, 263,
	3878, 262, 3523, 261, 260, 159, 259, 258, 1426, 1222,
	1972, 257, 256, 255, 254, 4112, 4081, 3893, 3063, 1938,
	1213, 3602, 3550, 3467, 3450, 3441, 3343, 1960, 1962, 3512,
	3230, 1930, 1931, 2994, 1783, 2056, 1222, 1222, 1222, 1764,
	3063, 2968, 2055, 253, 1985, 4608, 2953, 2606, 2099, 3266,
	2268, 1196, 2226, 1947, 1948, 2122, 1983, 2056, 2818, 5083,
	2804, 2025, 3250, 1933, 2055, 2802, 1897, 3551, 1651, 1471,
	1347, 2059, 4828, 1668, 3523, 2016, 4849, 1502, 1929, 5082,
	2227, 1222, 5079, 5057, 3022, 3512, 1953, 1222, 1624, 1222,
	5041, 2205, 1426, 2054, 252, 2224, 1633, 2221, 4703, 1932,
	2792, 4936, 2609, 4834, 1454, 4826, 4656, 3522, 4613, 245,
	4591, 1467, 1468, 1469, 1959, 1364, 4432, 1222, 246, 1222,
	1970, 1222, 2224, 4397, 4396, 1432, 251, 4390, 1624, 4389,
	4388, 1944, 1945, 1951, 1973, 1950, 1946, 1954, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 203, 2023, 4381,
	1657, 4380, 4384, 251, 1426, 4378, 4383, 1165, 1712, 3515,
	3516, 3508, 3509, 3510, 3511, 3513, 3514, 1983, 4373, 2460,
	4370, 1662, 4268, 2918, 1624, 4369, 4254, 253, 1324, 4116,
	1610, 1624, 1364, 4115, 4114, 1339, 3506, 3507, 1983, 1605,
	1222, 4091, 1222, 4057, 4056, 3522, 4173, 1624, 4055, 1985,
	3506, 3507, 3977, 3972, 253, 1597, 1222, 1938, 1222, 3597,
	1983, 251, 1446, 3543, 3534, 1398, 1401, 1411, 3061, 3505,
	1983, 3502, 2018, 2786, 3501, 1959, 3499, 251, 252, 1448,
	3517, 3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514, 1646,
	1841, 3494, 3493, 245, 2017, 3492, 2015, 2016, 1954, 1485,
	1486, 3489, 246, 1716, 1719, 252, 3003, 1624, 1495, 3486,
	1589, 1594, 253, 3466, 3449, 897, 3442, 3440, 900, 3523,
	245, 1631, 3299, 2954, 1343, 2775, 1983, 1222, 253, 246,
	1222, 203, 3623, 1929, 1722, 1928, 2422, 5257, 2420, 5200,
	5199, 1440, 5121, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 5119, 1349, 1474, 1341, 1736, 4003, 3283, 3268,
	1985, 4607, 4996, 252, 4269, 2739, 2740, 2741, 2758, 2759,
	2760, 4183, 251, 191, 191, 4915, 4900, 4896, 245, 252,
	1645, 1644, 1705, 4895, 4894, 4874, 2761, 246, 4873, 4871,
	1627, 4848, 1747, 1749, 245, 4847, 4821, 2716, 1163, 1784,
	4807, 3548, 4804, 246, 1477, 4803, 3060, 3523, 1487, 1488,
	4796, 4784, 3512, 4783, 4727, 4698, 203, 4654, 4637, 4636,
	4575, 1986, 4571, 253, 4568, 4546, 3512, 4416, 3060, 4395,
	4320, 4171, 203, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 2751, 1454, 4170, 4151, 1454, 1745, 4150, 4148, 3060,
	2747, 1950, 1946, 4072, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 4060, 3967, 2003, 1222, 2992, 2722, 3894,
	251, 3888, 1222, 251, 252, 3517, 3515, 3516, 3508, 3509,
	3510, 3511, 3513, 3514, 251, 1930, 1931, 3855, 4851, 245,
	3759, 4269, 3713, 3680, 3625, 3471, 1738, 1907, 246, 3470,
	1934, 1935, 1936, 1937, 1939, 1940, 3465, 3431, 3244, 1961,
	3508, 3509, 3510, 3511, 3513, 3514, 3088, 1933, 41, 3594,
	4850, 253, 3522, 1789, 253, 2062, 1857, 203, 2752, 2753,
	2754, 2755, 2061, 2060, 2057, 253, 2049, 2047, 2746, 3001,
	3000, 2965, 2958, 1759, 1986, 2924, 2800, 1901, 2002, 2121,
	2077, 2071, 2070, 1932, 2069, 251, 2068, 2067, 2066, 1778,
	251, 2065, 2064, 2063, 1952, 3516, 3508, 3509, 3510, 3511,
	3513, 3514, 252, 1949, 3267, 252, 1741, 2044, 1222, 1222,
	1222, 2043, 2042, 2041, 1222, 2040, 252, 245, 2039, 2038,
	245, 1345, 2037, 1345, 2036, 2035, 246, 2005, 2034, 246,
	2033, 245, 2032, 1983, 2031, 2030, 253, 2029, 1502, 2018,
	246, 253, 1806, 2004, 2001, 2756, 2757, 1996, 2076, 1439,
	1222, 1368, 1359, 891, 1426, 203, 4578, 1842, 203, 2165,
	891, 4428, 1426, 1908, 1426, 4366, 4111, 2144, 4676, 203,
	1163, 4084, 4075, 3453, 2956, 2194, 251, 2196, 2749, 4430,
	4110, 1955, 1956, 1957, 1958, 2125, 2017, 252, 3621, 1999,
	3884, 1938, 252, 2117, 2819, 2085, 4505, 3138, 5191, 1904,
	3506, 3507, 245, 1930, 1931, 1466, 4904, 245, 251, 1481,
	1912, 246, 1142, 1464, 3523, 4897, 246, 4797, 2133, 1141,
	1936, 1937, 1939, 1940, 1426, 4611, 1481, 253, 2058, 1481,
	1222, 2138, 1911, 1906, 4549, 1933, 4548, 2229, 4547, 4504,
	203, 4419, 1960, 1962, 3716, 203, 1459, 1741, 1925, 1926,
	4327, 4829, 2132, 5075, 1222, 2106, 2082, 2083, 4326, 253,
	1481, 4325, 1502, 4324, 3114, 2817, 2126, 2803, 1947, 1948,
	4323, 1932, 2801, 191, 4322, 1465, 4321, 1311, 252, 4137,
	4079, 1479, 4078, 3896, 4827, 3895, 5148, 2298, 2259, 3783,
	2050, 2051, 3781, 245, 3780, 2253, 2252, 1163, 5146, 1481,
	2261, 1953, 246, 2159, 4702, 2343, 3954, 4793, 1454, 4272,
	252, 2233, 5071, 897, 2099, 1460, 900, 1899, 4199, 1459,
	897, 2139, 3491, 900, 2232, 245, 2056, 3490, 2188, 2266,
	2788, 203, 3413, 2055, 246, 2039, 2130, 2039, 2461, 1340,
	2750, 1340, 3749, 3099, 3180, 1462, 4166, 2247, 3835, 1119,
	3834, 2024, 4262, 3682, 1805, 2107, 2027, 4131, 2396, 4132,
	2097, 4866, 1858, 203, 4867, 2104, 1459, 1814, 2485, 1740,
	4787, 5104, 4589, 3508, 3509, 3510, 3511, 3513, 3514, 3310,
	3807, 4867, 1983, 4535, 1323, 1815, 2397, 4277, 4251, 3510,
	3511, 3513, 3514, 4205, 4196, 4658, 2075, 2362, 1120, 4176,
	3922, 2209, 1985, 3647, 2578, 2490, 2428, 3555, 4005, 2116,
	2115, 2114, 2112, 2111, 3459, 3332, 2101, 2211, 3330, 2110,
	2213, 2783, 2256, 4722, 3328, 2789, 2218, 2513, 2999, 4694,
	2220, 1624, 1624, 2235, 5080, 2223, 2072, 2145, 1456, 2052,
	1959, 4489, 1502, 3815, 2454, 1715, 1638, 2309, 1435, 4486,
	1397, 5095, 5092, 4515, 3874, 3159, 3156, 3154, 4142, 1793,
	3342, 4889, 3097, 1954, 4595, 3222, 2342, 5003, 2236, 3685,
	4161, 3280, 1772, 3790, 955, 3140, 2376, 5149, 2339, 5183,
	2347, 3622, 5150, 2231, 4725, 1682, 2357, 4721, 5128, 2736,
	2737, 2738, 2762, 2748, 2742, 4700, 2744, 2745, 2743, 2730,
	2731, 2732, 2733, 2734, 2735, 3948, 5081, 2790, 4752, 2787,
	1740, 4218, 3073, 4491, 3036, 1690, 1117, 2349, 2273, 2307,
	2274, 1115, 1113, 1111, 1461, 1985, 1108, 2352, 5253, 3651,
	2281, 2282, 2571, 2262, 2254, 1837, 2569, 4905, 4745, 1624,
	2352, 1624, 2258, 1624, 1449, 4733, 1855, 4538, 4537, 4216,
	2407, 2412, 3059, 4215, 4207, 1856, 4191, 1640, 1466, 4190,
	4188, 1624, 1624, 2303, 1837, 2334, 1099, 4187, 3057, 2275,
	2276, 4175, 4134, 2315, 4133, 1624, 2279, 2280, 2248, 3796,
	2257, 3059, 2352, 4217, 956, 2993, 1457, 1624, 3795, 1624,
	1624, 1624, 3751, 897, 4145, 1458, 900, 3057, 2377, 3615,
	3464, 1460, 2587, 2522, 3463, 2584, 1161, 1691, 2399, 2400,
	3462, 2401, 3653, 891, 3461, 2350, 1950, 1946, 2337, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 1465, 3417,
	3076, 1267, 1834, 1215, 2309, 1222, 3178, 3177, 2512, 3161,
	3150, 2450, 1466, 2340, 3142, 803, 1791, 1836, 3132, 2455,
	803, 1854, 2833, 3131, 3124, 3123, 2467, 4723, 1645, 1644,
	3122, 2585, 4485, 4695, 1105, 2348, 2336, 2333, 3104, 2523,
	4762, 2356, 3715, 1222, 3277, 2792, 1836, 1460, 3103, 3064,
	4487, 2980, 2697, 2832, 1905, 2488, 2654, 2335, 2386, 2517,
	2586, 2386, 2385, 2073, 2389, 2385, 4437, 5184, 1835, 2498,
	1160, 3007, 2413, 2505, 3682, 2475, 5129, 4635, 1728, 1222,
	1727, 1222, 1465, 1163, 3101, 1163, 2984, 2397, 1222, 2434,
	3747, 2165, 2165, 1502, 1456, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1745, 1222, 1745, 1222, 1222, 1222, 1222, 2464, 2436,
	2477, 2351, 2435, 897, 2485, 1786, 900, 2485, 3923, 4447,
	1459, 2542, 3043, 2485, 2351, 1726, 2485, 1725, 2308, 2626,
	1222, 2473, 2469, 2504, 1222, 1222, 2613, 1738, 2786, 2472,
	1456, 2472, 1222, 2481, 2596, 2482, 1222, 1440, 1222, 1222,
	1461, 3118, 3514, 2604, 4506, 1940, 1502, 2305, 1162, 1483,
	1484, 5186, 1222, 1222, 1222, 1222, 2351, 2509, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1483, 1484, 2708, 1483,
	1484, 3075, 1339, 2624, 1339, 1641, 4446, 1895, 1431, 1699,
	2650, 2651, 2301, 2783, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 2521, 1222, 2159, 2159, 2532, 1222, 2706,
	1483, 1484, 1457, 1807, 1686, 2764, 2765, 2345, 2624, 1383,
	1345, 1458, 2712, 802, 3127, 2306, 1461, 1502, 802, 2764,
	2780, 3748, 3317, 2599, 751, 1704, 1345, 1787, 3371, 2565,
	958, 957, 2712, 4488, 3125, 2622, 1872, 1868, 5149, 2263,
	2264, 1898, 1222, 1502, 2529, 2302, 2828, 2331, 3358, 2608,
	2637, 746, 5187, 3087, 2576, 1853, 3390, 2344, 4763, 2970,
	2563, 1343, 2378, 1343, 1874, 2874, 2874, 2888, 3935, 2764,
	2622, 4761, 2908, 2910, 2346, 4483, 5215, 4759, 1457, 2916,
	1815, 3158, 2610, 3428, 2131, 1815, 1654, 1458, 1661, 2612,
	1667, 5077, 1341, 2728, 1341, 2625, 1163, 2618, 1142, 4882,
	2779, 1142, 1142, 2117, 3128, 2641, 1163, 2341, 2642, 2643,
	1163, 2611, 2343, 2087, 3426, 3157, 3155, 3153, 2317, 1438,
	2941, 4634, 2620, 2966, 3126, 1803, 3074, 4758, 3100, 804,
	3650, 3934, 3405, 2720, 804, 2526, 5185, 2520, 1159, 2598,
	2718, 4172, 2933, 2321, 3374, 2702, 2379, 1910, 1426, 1426,
	4231, 2338, 3030, 2983, 4158, 2390, 4760, 1792, 2106, 1758,
	2530, 1763, 3031, 3086, 2474, 2387, 5189, 3360, 2724, 2703,
	3058, 3994, 1311, 2792, 3732, 1777, 2704, 1782, 4857, 953,
	2709, 952, 860, 2777, 4536, 3039, 2345, 3009, 1109, 1502,
	3724, 3050, 2623, 1109, 1109, 1110, 1459, 1001, 1109, 2091,
	1163, 2318, 3006, 2570, 2388, 4189, 2932, 2568, 3041, 2830,
	4232, 4186, 4119, 4106, 2831, 191, 3802, 2834, 2595, 2835,
	2836, 3794, 4470, 3217, 3005, 2987, 4884, 2623, 1340, 3745,
	3160, 2883, 2870, 2899, 3733, 1454, 3121, 3028, 2165, 3025,
	2938, 2939, 2914, 1840, 1340, 2912, 3042, 2940, 2094, 2945,
	3725, 2955, 2951, 2952, 4230, 2934, 2922, 2923, 4463, 1091,
	3423, 3102, 3656, 1711, 2089, 3024, 2058, 3040, 2104, 1850,
	2621, 3404, 1459, 2342, 5161, 5078, 4156, 5195, 3731, 2419,
	2418, 2605, 2092, 3218, 1155, 3373, 1502, 2329, 4481, 2312,
	2694, 3424, 1869, 5170, 3723, 3429, 5217, 4926, 858, 3397,
	3398, 5169, 1624, 2978, 3991, 2621, 4484, 5136, 4348, 3065,
	4347, 2995, 2309, 2322, 4464, 3929, 1106, 3370, 1709, 1426,
	3871, 3803, 3002, 3213, 3033, 3027, 2090, 3216, 3872, 3367,
	3049, 2206, 2050, 2051, 2363, 3136, 1688, 2392, 4980, 2792,
	1222, 1222, 3016, 1222, 3034, 3171, 3019, 2330, 3020, 2313,
	4686, 3011, 4918, 5048, 3026, 5049, 3744, 3741, 3017, 3669,
	3139, 3062, 4912, 4890, 3021, 3570, 4919, 3107, 891, 1711,
	1426, 3308, 3800, 5188, 3256, 2705, 3307, 3652, 3032, 1092,
	2323, 2324, 2159, 5076, 2307, 2707, 3992, 4968, 3106, 3119,
	3762, 2328, 3151, 2311, 905, 3037, 1866, 2391, 3697, 993,
	4920, 1624, 1790, 3091, 1091, 1685, 801, 2319, 3248, 3300,
	1382, 1816, 747, 3871, 1624, 1639, 1624, 3105, 1366, 2346,
	2045, 912, 1624, 2597, 3264, 2411, 994, 1788, 3372, 1155,
	3120, 3787, 3291, 3619, 1624, 3112, 3113, 3115, 3116, 3117,
	1870, 3068, 3130, 4470, 2528, 3305, 3078, 3081, 3051, 3052,
	2344, 3172, 3053, 3054, 2093, 2320, 4482, 3696, 1426, 2363,
	1426, 2288, 4344, 3703, 3225, 2692, 2289, 4922, 2695, 3227,
	5114, 3344, 3179, 3345, 3320, 3321, 978, 3214, 3215, 4463,
	5115, 2299, 1222, 4456, 3134, 3327, 3329, 3331, 3419, 3129,
	3425, 4921, 4647, 3141, 4244, 897, 3148, 748, 900, 4565,
	3427, 4454, 3059, 983, 4242, 5213, 5135, 4883, 2711, 4923,
	4458, 5159, 2564, 2113, 3165, 3166, 3164, 2366, 3079, 2691,
	3705, 5014, 2373, 4517, 1092, 1353, 859, 4459, 897, 1097,
	1096, 900, 770, 3311, 4460, 4464, 3254, 3223, 5193, 1871,
	1867, 1355, 2774, 4631, 1995, 4465, 3302, 3260, 191, 749,
	1222, 750, 3346, 3312, 2792, 3315, 1222, 1222, 3340, 3318,
	1645, 3228, 3322, 2969, 3323, 1873, 3469, 3295, 1350, 2937,
	2890, 5218, 3242, 3569, 3293, 3339, 3670, 1093, 861, 4457,
	2950, 2325, 857, 2290, 4966, 3909, 5202, 4462, 3704, 4246,
	3349, 1162, 3351, 4007, 3353, 2387, 1002, 4577, 3907, 2363,
	1437, 2294, 2719, 4349, 4334, 4466, 1802, 1804, 3900, 3286,
	4157, 3801, 1222, 1222, 1356, 3296, 4582, 2525, 1222, 2519,
	2091, 4245, 4673, 1745, 3376, 4541, 3378, 4107, 1909, 4967,
	1372, 1222, 1222, 1821, 2388, 1370, 4583, 1222, 1222, 2367,
	3294, 1357, 3337, 1222, 3275, 3379, 3950, 3388, 3381, 3135,
	4933, 906, 907, 2308, 5194, 2359, 995, 996, 3348, 2087,
	3350, 4244, 3352, 2326, 3354, 3355, 3223, 5020, 4950, 2094,
	4806, 4242, 4540, 3347, 1097, 1096, 4539, 4291, 2291, 2296,
	1920, 3859, 2358, 3633, 1354, 2935, 4630, 3364, 1222, 1222,
	1222, 5196, 2977, 3911, 1222, 4046, 2442, 2084, 1369, 1362,
	738, 3420, 4753, 2092, 1222, 4267, 2575, 1094, 2207, 4393,
	3902, 1919, 3385, 4345, 2640, 2310, 2249, 2354, 5134, 4240,
	4720, 1222, 1093, 5223, 2693, 3901, 4815, 3396, 4566, 2246,
	3607, 1339, 3676, 979, 980, 1095, 5113, 4864, 4292, 3386,
	3452, 4934, 4461, 3387, 2630, 2091, 4211, 1339, 4459, 4192,
	2306, 4143, 4141, 3860, 3851, 4460, 4246, 1180, 3391, 2637,
	3909, 3672, 3265, 3259, 2292, 4800, 4465, 3246, 3990, 2468,
	3447, 3448, 4924, 3907, 3406, 3451, 2462, 1919, 4925, 2456,
	2355, 3443, 3910, 3900, 4471, 4472, 2448, 2427, 4245, 2426,
	1914, 1098, 4127, 3175, 2094, 3108, 1679, 1374, 4061, 4097,
	810, 3951, 4243, 909, 908, 4986, 2244, 3063, 4462, 4953,
	2089, 1163, 1919, 1222, 1222, 1222, 1222, 2299, 1918, 2577,
	1343, 3418, 1222, 1222, 1222, 3080, 4466, 1222, 2092, 2242,
	4294, 4600, 4632, 3243, 1385, 4779, 1343, 4777, 4697, 1222,
	1345, 1502, 1171, 4350, 3688, 1222, 2928, 1222, 3684, 3683,
	3411, 1341, 1094, 2245, 4098, 3389, 1345, 2510, 3562, 3563,
	4074, 4580, 997, 998, 3567, 3566, 2502, 1341, 3911, 2370,
	910, 911, 2090, 3658, 1502, 2093, 2491, 1995, 2297, 2424,
	1095, 4099, 2931, 4096, 1918, 3902, 1345, 1838, 2631, 1502,
	4101, 1734, 1920, 1844, 1843, 2976, 4047, 4250, 2975, 2974,
	3901, 1426, 2973, 2972, 1720, 3578, 3458, 4048, 3545, 3251,
	2272, 2165, 1351, 1160, 3614, 1502, 3587, 3659, 1721, 1918,
	1732, 4394, 3600, 2930, 4877, 1426, 3564, 4556, 2929, 2368,
	3084, 4351, 4263, 1426, 4149, 4709, 1098, 3635, 3629, 981,
	982, 1000, 2466, 5222, 3810, 4781, 4935, 3908, 3903, 3904,
	3905, 3906, 5156, 4684, 849, 1222, 5000, 3910, 1920, 4138,
	2383, 4682, 3221, 4461, 3919, 3632, 3617, 1222, 1352, 4243,
	4799, 3316, 3226, 2369, 3109, 3110, 3224, 2298, 2495, 2396,
	1796, 3763, 3601, 4692, 4992, 1426, 4878, 3912, 3572, 3671,
	850, 2165, 4705, 1822, 4704, 4441, 3574, 4128, 3898, 4440,
	2093, 4983, 4400, 4063, 3579, 4471, 4472, 2799, 1222, 2293,
	4674, 1891, 3596, 2298, 3660, 3661, 3609, 3610, 3611, 3612,
	4780, 4423, 2558, 2591, 1426, 3540, 3541, 3542, 3721, 5022,
	3648, 1454, 4693, 3605, 3593, 5160, 3686, 5158, 1893, 3690,
	3620, 3556, 3654, 1426, 4710, 1426, 3586, 3735, 5097, 3737,
	3641, 1890, 3571, 1888, 1862, 2159, 3577, 3584, 1340, 1860,
	4765, 4908, 1832, 1222, 1222, 4898, 2362, 4680, 3750, 1830,
	1828, 1502, 3687, 2362, 1340, 3692, 3608, 4993, 3694, 4879,
	1826, 1824, 1426, 1818, 3573, 1812, 3773, 4653, 3673, 3585,
	1810, 4439, 3583, 4434, 4100, 3588, 3589, 809, 4392, 1426,
	1730, 4249, 3537, 3785, 1340, 3966, 3591, 3920, 3592, 3917,
	3752, 3630, 3765, 2567, 3767, 2271, 3500, 3771, 3430, 3247,
	3679, 3777, 3908, 3903, 3904, 3905, 3906, 4139, 3149, 3718,
	2162, 1624, 2153, 3143, 3538, 2159, 3778, 3700, 3098, 3004,
	3642, 1733, 2600, 2501, 1426, 1624, 2486, 1624, 2124, 2120,
	1894, 1502, 3638, 1771, 3946, 3945, 3649, 3804, 891, 1624,
	3626, 3627, 3912, 3628, 3937, 3637, 2381, 2534, 3639, 3640,
	1731, 2405, 1624, 3643, 3760, 3644, 3657, 3645, 3746, 1914,
	3668, 3362, 3742, 3361, 1426, 3736, 3325, 2619, 3852, 1849,
	2537, 999, 2447, 2425, 2195, 2193, 2028, 3722, 1785, 1703,
	3764, 1345, 3820, 3580, 3581, 3582, 3865, 3706, 1307, 2798,
	2593, 3714, 5069, 3843, 3253, 3867, 2592, 4518, 4198, 4423,
	3840, 3720, 4522, 1624, 3727, 1107, 4197, 3850, 3728, 4501,
	3730, 1892, 3729, 4982, 4598, 1624, 4527, 1624, 5127, 4514,
	3734, 3305, 5132, 4452, 1889, 4451, 1887, 1861, 4290, 1624,
	3305, 1624, 1859, 1624, 3755, 1831, 4281, 4593, 3791, 4214,
	3761, 4194, 1829, 1827, 3805, 4164, 3808, 4162, 3774, 4140,
	3887, 3854, 3876, 1825, 1823, 3849, 1817, 3836, 1811, 3772,
	3792, 3782, 3278, 1809, 3130, 3270, 3786, 3263, 3858, 3255,
	3239, 1502, 3238, 1729, 1502, 3219, 3784, 3924, 3023, 3018,
	2566, 2423, 2421, 1617, 2398, 2364, 3861, 2327, 2314, 2300,
	2228, 2225, 2222, 2219, 2214, 3793, 2212, 2208, 897, 2199,
	3915, 900, 3797, 3987, 3866, 3864, 5053, 2137, 1222, 4582,
	1320, 3106, 5150, 3938, 1222, 1222, 2250, 1923, 1222, 1222,
	1222, 3868, 1222, 1674, 3812, 4876, 3382, 3841, 3775, 4583,
	3846, 1222, 2165, 2373, 2533, 3848, 3847, 1321, 2404, 3380,
	1222, 2603, 3409, 2238, 2239, 1222, 191, 191, 3212, 3913,
	5034, 1502, 4944, 4614, 3916, 3918, 4534, 4438, 1163, 3306,
	1222, 3655, 3873, 3875, 2267, 3885, 3886, 1684, 1502, 4817,
	3059, 3882, 3059, 1112, 1114, 1116, 1753, 3085, 2165, 2165,
	1222, 1222, 3944, 1222, 1222, 1222, 3057, 3943, 3082, 2601,
	4810, 4302, 1768, 2309, 2524, 2465, 1405, 3941, 1406, 1340,
	5033, 1222, 1885, 1886, 2561, 1222, 3947, 2165, 2165, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 3952,
	1222, 1924, 4019, 3969, 4020, 2556, 2602, 2531, 1222, 1222,
	2165, 3410, 3979, 3980, 3931, 1222, 3932, 4492, 3933, 4529,
	3776, 1322, 1797, 1930, 1931, 3176, 1222, 1930, 1931, 1154,
	1808, 3089, 4836, 4707, 4401, 3949, 4379, 1345, 1345, 838,
	2237, 1222, 3701, 3090, 1476, 3111, 2159, 1927, 1433, 1373,
	5144, 1473, 4210, 5105, 1406, 1406, 3237, 3145, 4278, 1933,
	2449, 280, 1444, 3156, 3154, 3090, 2288, 3163, 5190, 3147,
	3092, 2289, 1865, 1502, 4991, 3094, 4209, 2650, 4010, 4706,
	3133, 3974, 3976, 3146, 4973, 1637, 1426, 1426, 3986, 3093,
	4093, 1932, 2159, 2159, 4943, 1932, 4058, 4937, 4875, 4104,
	4105, 1426, 1426, 4080, 891, 1426, 2650, 4025, 4801, 4002,
	735, 1339, 855, 4009, 4117, 4118, 841, 841, 4124, 4772,
	4685, 2159, 2159, 4288, 1222, 4280, 4017, 1339, 4266, 4090,
	4018, 3853, 3285, 4050, 3993, 3995, 3996, 2915, 4022, 4054,
	2234, 2146, 4024, 1636, 1630, 1156, 3618, 3231, 5024, 2383,
	3234, 1222, 3236, 5025, 2159, 5221, 1648, 1339, 3506, 3507,
	1930, 1931, 4939, 5024, 4065, 2278, 3045, 191, 5025, 4070,
	4071, 4051, 2277, 3044, 5163, 3997, 1795, 4059, 4371, 1647,
	2794, 4109, 1794, 1648, 1222, 1222, 1629, 3365, 2290, 2829,
	2278, 2277, 4287, 1864, 4067, 4068, 1863, 4802, 4016, 3282,
	1343, 4746, 3282, 4531, 4526, 4525, 2294, 4367, 4341, 4108,
	3998, 3769, 3766, 3368, 2022, 2021, 1343, 3384, 4082, 2607,
	5206, 5171, 1222, 1222, 5039, 4977, 4976, 4975, 4907, 4906,
	1222, 1341, 4144, 4853, 4775, 4737, 4677, 4671, 4573, 4553,
	4490, 4429, 2162, 2162, 2153, 2153, 1343, 1341, 1230, 4315,
	4308, 1624, 1624, 4253, 1624, 1340, 1340, 4160, 1624, 4152,
	3857, 1624, 3856, 3693, 897, 4177, 1426, 900, 3636, 3369,
	4228, 3359, 4120, 3336, 3335, 3334, 3333, 1341, 4182, 4184,
	3269, 3241, 4181, 2291, 2296, 3356, 4083, 3240, 3083, 3014,
	3008, 2165, 2997, 2996, 2985, 2723, 287, 287, 287, 2594,
	741, 742, 2562, 757, 741, 757, 768, 2555, 2554, 808,
	2553, 4206, 2552, 828, 2551, 2463, 2437, 2433, 835, 835,
	835, 835, 2432, 2431, 2430, 2429, 4169, 2202, 287, 2201,
	2200, 2198, 2136, 4212, 4174, 4113, 1624, 4125, 2135, 1884,
	1883, 4126, 1222, 4295, 4233, 4234, 1819, 1698, 1697, 974,
	1345, 1222, 4275, 3106, 1696, 4200, 287, 4259, 1695, 1694,
	1624, 1693, 4310, 4304, 4236, 1624, 1624, 1624, 1692, 2292,
	1687, 1683, 1681, 4222, 1680, 1614, 1613, 1612, 1493, 1492,
	1491, 1490, 4273, 1489, 1436, 4248, 3291, 1392, 1624, 4163,
	1624, 4165, 2131, 1391, 1390, 1389, 1388, 1387, 1386, 1502,
	3305, 4219, 1384, 3172, 1379, 4296, 4299, 1378, 4261, 1377,
	1376, 4312, 4238, 1375, 1302, 4247, 4265, 2240, 3709, 4237,
	3679, 4226, 2299, 967, 8, 1118, 1104, 1502, 4881, 4469,
	1222, 1222, 4316, 4298, 4468, 2159, 1222, 1222, 2165, 4229,
	4467, 1222, 1222, 4274, 1222, 2590, 4336, 4337, 4338, 1222,
	98, 1689, 929, 92, 2371, 4159, 1068, 5021, 4252, 4911,
	1222, 4279, 1672, 4227, 937, 5002, 4213, 4276, 4328, 4282,
	3695, 3181, 1339, 4331, 2536, 1820, 1222, 2538, 3707, 3595,
	4297, 2957, 4965, 2297, 4375, 2944, 3468, 4843, 4646, 4300,
	4306, 4305, 2797, 2026, 741, 741, 3549, 4284, 4314, 94,
	1206, 4313, 287, 4352, 1252, 4564, 4563, 4330, 4453, 4146,
	3823, 4560, 4559, 2008, 2150, 2152, 1170, 2013, 1505, 5047,
	2251, 5212, 3708, 4329, 1212, 4365, 2265, 4332, 2260, 2998,
	4353, 2873, 1229, 1226, 2154, 2156, 1228, 1345, 1227, 4361,
	2155, 2046, 1225, 2149, 4286, 1345, 3289, 3883, 1739, 1502,
	1502, 1737, 1502, 4346, 1070, 2255, 2717, 2781, 3457, 1345,
	2019, 1343, 1186, 1208, 2778, 1367, 1197, 3575, 1340, 3554,
	1624, 1624, 3870, 4089, 2629, 947, 3503, 2784, 1358, 2896,
	2889, 2885, 2159, 1502, 3646, 3279, 1900, 4660, 4406, 1997,
	3290, 1896, 1341, 1470, 1190, 3600, 2715, 2010, 3435, 2639,
	3877, 4340, 3598, 2991, 5027, 4006, 3366, 2441, 1222, 1319,
	1318, 1365, 1317, 5008, 2293, 4424, 4425, 5005, 2361, 1345,
	4391, 1345, 4567, 3818, 3819, 2243, 3038, 2727, 3837, 2162,
	1202, 2153, 1608, 2582, 3939, 3560, 4264, 1700, 4714, 1214,
	1982, 4442, 4443, 3208, 3207, 4870, 1426, 1455, 1453, 1452,
	4500, 1451, 4409, 4411, 5180, 4476, 1502, 4476, 1426, 3174,
	2374, 1426, 4509, 4155, 4479, 4512, 4154, 4480, 4427, 4402,
	4493, 4408, 4153, 4405, 250, 1222, 3403, 4407, 1502, 191,
	1921, 4433, 1913, 4445, 4436, 4415, 4496, 4497, 4418, 4398,
	4414, 4403, 4404, 247, 4422, 249, 248, 3699, 4094, 3604,
	5103, 4179, 3809, 25, 842, 843, 4435, 4494, 844, 3048,
	2270, 4450, 1472, 4130, 24, 23, 22, 21, 121, 44,
	1624, 1624, 4530, 20, 4532, 163, 161, 4444, 2483, 138,
	158, 157, 130, 156, 155, 154, 153, 152, 160, 151,
	150, 145, 149, 148, 4448, 147, 2497, 2499, 146, 1426,
	144, 142, 143, 4584, 137, 1340, 141, 140, 1339, 1339,
	2503, 1502, 139, 1340, 4557, 136, 1624, 4495, 135, 4554,
	134, 133, 2511, 4601, 2514, 2515, 2516, 1340, 132, 131,
	129, 4524, 162, 128, 127, 4533, 205, 4551, 126, 125,
	124, 123, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 4516,
	122, 4590, 821, 4513, 822, 63, 62, 118, 4585, 119,
	19, 42, 14, 67, 4544, 1502, 68, 18, 13, 37,
	97, 3710, 3711, 4550, 3712, 4543, 4542, 1222, 1222, 1222,
	110, 4510, 109, 108, 38, 4602, 4558, 1340, 105, 1340,
	4552, 36, 4499, 4569, 4562, 1502, 4574, 1343, 1343, 4570,
	1222, 4605, 4576, 1222, 1222, 4508, 17, 16, 4511, 15,
	103, 102, 101, 1222, 4596, 35, 2165, 33, 11, 9,
	4610, 1222, 1222, 39, 3756, 3757, 2108, 3758, 1341, 1341,
	4603, 12, 5, 196, 4625, 195, 198, 194, 1502, 197,
	1624, 96, 193, 4617, 4616, 192, 95, 31, 10, 188,
	4791, 4638, 4271, 87, 190, 1426, 189, 187, 186, 185,
	88, 85, 4619, 184, 91, 183, 4623, 86, 4679, 90,
	89, 29, 6, 66, 4587, 7, 4628, 1502, 4633, 3921,
	113, 114, 40, 83, 4643, 1222, 82, 4626, 81, 4627,
	80, 28, 65, 27, 180, 229, 228, 227, 1222, 226,
	225, 224, 223, 222, 217, 221, 219, 1222, 218, 220,
	216, 241, 2165, 240, 239, 238, 4691, 4655, 232, 231,
	237, 4649, 1222, 4666, 4667, 1222, 236, 235, 234, 233,
	1153, 230, 1091, 244, 76, 215, 214, 213, 211, 283,
	1222, 207, 1360, 1222, 210, 4688, 212, 4689, 209, 208,
	1502, 206, 243, 242, 4717, 77, 178, 1155, 1426, 179,
	2159, 75, 4755, 177, 4669, 176, 4670, 175, 1624, 1624,
	1624, 4690, 4687, 174, 173, 172, 1381, 2298, 171, 74,
	4696, 4740, 182, 181, 26, 2, 1, 0, 287, 1345,
	287, 287, 0, 1410, 287, 1420, 0, 0, 0, 0,
	4736, 0, 4764, 0, 0, 1154, 1434, 4751, 0, 0,
	4774, 0, 0, 0, 828, 0, 4790, 828, 4738, 1502,
	4734, 1339, 1624, 0, 4778, 4476, 0, 0, 0, 4811,
	0, 0, 4782, 3820, 0, 0, 0, 4785, 2288, 0,
	835, 4726, 0, 2289, 4748, 0, 0, 0, 0, 0,
	0, 0, 1092, 0, 4798, 4767, 2159, 1222, 1222, 4766,
	0, 0, 0, 4741, 287, 4776, 287, 287, 1410, 4739,
	287, 287, 4794, 4816, 1222, 2165, 0, 0, 4771, 1420,
	0, 0, 4789, 0, 4820, 0, 4822, 0, 4769, 4770,
	4814, 4812, 0, 287, 0, 1650, 1426, 0, 0, 1426,
	0, 1426, 1426, 0, 0, 0, 0, 0, 0, 4852,
	1343, 1670, 4854, 4605, 4855, 4856, 4813, 4819, 1677, 1222,
	4818, 1222, 4808, 1222, 0, 0, 0, 0, 0, 0,
	0, 4756, 4824, 1345, 0, 0, 0, 1702, 4832, 4833,
	1420, 1341, 4728, 4729, 287, 287, 1222, 1410, 1345, 4865,
	0, 4863, 0, 0, 0, 4754, 0, 0, 0, 0,
	2290, 0, 4835, 4831, 0, 0, 0, 0, 828, 4476,
	287, 287, 0, 0, 0, 0, 4841, 4747, 2294, 4749,
	0, 4750, 1765, 0, 4476, 0, 0, 0, 0, 4862,
	0, 4893, 4861, 1773, 0, 0, 0, 0, 974, 0,
	4892, 0, 1097, 1096, 1345, 1345, 0, 1340, 1339, 0,
	0, 4885, 4886, 4914, 0, 0, 1339, 0, 1222, 2159,
	0, 0, 0, 0, 0, 1345, 0, 0, 1345, 0,
	1339, 4916, 1624, 0, 0, 0, 0, 0, 0, 4858,
	4476, 4476, 1624, 4901, 0, 0, 0, 4929, 4930, 0,
	1093, 0, 2162, 2721, 2153, 2291, 2296, 1222, 1222, 4909,
	0, 4476, 0, 2634, 4476, 0, 0, 1222, 4947, 2008,
	4903, 4949, 0, 4927, 0, 0, 0, 0, 0, 287,
	0, 0, 4938, 4941, 4940, 0, 4794, 4946, 0, 0,
	1339, 0, 1339, 4961, 0, 4962, 0, 1343, 4955, 0,
	0, 4954, 1500, 287, 4958, 1343, 4960, 3173, 0, 4959,
	4957, 0, 0, 4978, 0, 0, 0, 1222, 1222, 1343,
	4970, 1222, 0, 4974, 1629, 1624, 1426, 0, 1341, 1426,
	0, 1629, 2162, 0, 2153, 0, 1341, 0, 4969, 5018,
	4999, 2292, 5019, 4981, 0, 0, 0, 0, 0, 0,
	1341, 1340, 4989, 4990, 5023, 5026, 5030, 0, 0, 0,
	0, 0, 0, 4998, 4997, 0, 1340, 0, 0, 4979,
	0, 0, 0, 5029, 5007, 5010, 0, 5016, 0, 1343,
	1094, 1343, 5050, 0, 0, 0, 0, 1222, 1222, 1222,
	2286, 0, 5052, 5012, 2299, 0, 0, 0, 5011, 0,
	4902, 0, 5015, 0, 0, 0, 1152, 0, 1095, 2891,
	1341, 5035, 1341, 0, 0, 0, 0, 0, 5040, 0,
	5043, 0, 1340, 1340, 1222, 5051, 5084, 3319, 0, 0,
	0, 0, 5089, 0, 0, 0, 5064, 5065, 5067, 3326,
	5066, 0, 0, 1340, 5017, 0, 1340, 0, 0, 0,
	2284, 0, 0, 0, 0, 2297, 0, 2298, 0, 5111,
	0, 0, 5085, 5086, 1098, 0, 0, 5112, 5087, 0,
	5118, 0, 0, 0, 0, 0, 5124, 0, 5110, 5100,
	0, 1222, 5102, 0, 0, 0, 0, 5117, 0, 1426,
	4774, 0, 5120, 5133, 2285, 5116, 0, 0, 0, 0,
	0, 0, 5141, 0, 0, 5126, 5125, 0, 741, 0,
	0, 0, 0, 5139, 5140, 0, 0, 0, 0, 0,
	5151, 5147, 5143, 5145, 0, 5130, 0, 0, 5142, 287,
	0, 287, 4283, 5153, 0, 287, 5155, 0, 5157, 0,
	1345, 5154, 1345, 0, 0, 5166, 0, 5162, 1650, 1410,
	2128, 287, 0, 287, 2134, 5176, 5172, 0, 5173, 5167,
	5164, 287, 5165, 757, 5168, 0, 5174, 5029, 287, 5182,
	0, 5007, 0, 0, 5010, 0, 4476, 0, 4476, 0,
	0, 1426, 0, 5175, 2203, 5177, 2293, 0, 0, 5197,
	5181, 5198, 0, 0, 5201, 0, 287, 0, 0, 4333,
	0, 0, 5204, 287, 5205, 0, 0, 0, 0, 5208,
	0, 1222, 1222, 5207, 0, 5216, 0, 0, 5203, 5214,
	1222, 1222, 0, 5219, 0, 0, 5228, 0, 5210, 0,
	5224, 0, 0, 0, 0, 0, 828, 5234, 5232, 5230,
	0, 5238, 5237, 3291, 0, 5239, 5235, 0, 0, 0,
	0, 0, 5240, 5243, 0, 0, 5231, 0, 1426, 5236,
	5233, 0, 5248, 5252, 5249, 5099, 0, 5244, 5101, 5245,
	0, 5247, 0, 3291, 835, 5250, 835, 0, 1222, 0,
	0, 5255, 5246, 0, 5252, 5263, 835, 835, 0, 0,
	0, 0, 5259, 2162, 5261, 2153, 0, 0, 0, 5256,
	0, 5225, 5226, 0, 0, 0, 0, 5258, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 2162,
	2162, 2153, 2153, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1340, 5260,
	1340, 0, 0, 0, 84, 0, 0, 0, 2162, 2162,
	2153, 2153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3432, 3433, 2123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1343,
	0, 2162, 0, 2153, 0, 93, 0, 0, 1595, 0,
	0, 1609, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 0, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 287, 0, 0, 0, 0, 968, 0, 1961, 0,
	5227, 0, 0, 0, 1339, 0, 1933, 0, 0, 51,
	0, 115, 0, 0, 0, 0, 0, 99, 112, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4520, 1986, 0, 1415, 1415, 1629, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 287, 0, 0, 0, 0, 2269, 287, 0,
	0, 0, 3506, 3507, 287, 3524, 3525, 3526, 0, 0,
	0, 0, 0, 0, 0, 1339, 1339, 0, 0, 100,
	287, 1177, 287, 0, 0, 4358, 741, 0, 287, 0,
	0, 0, 0, 1343, 0, 4572, 1339, 0, 0, 1339,
	828, 0, 0, 0, 974, 0, 0, 0, 1343, 4586,
	0, 1930, 1931, 3530, 3531, 3532, 3533, 0, 1629, 1629,
	0, 0, 3393, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 4609, 0, 287, 1961, 1410, 287, 0, 1341,
	0, 3521, 0, 1933, 0, 0, 0, 0, 0, 0,
	1938, 828, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 1343, 1343, 2535, 0, 0, 0,
	1986, 287, 287, 0, 287, 0, 287, 0, 287, 1932,
	287, 0, 0, 0, 0, 1343, 0, 0, 1343, 0,
	0, 0, 0, 0, 0, 1341, 1341, 0, 0, 0,
	0, 1960, 1962, 2891, 2891, 2572, 0, 0, 2573, 0,
	2574, 0, 0, 0, 0, 0, 1341, 0, 0, 1341,
	0, 0, 0, 0, 0, 287, 287, 287, 287, 0,
	0, 0, 2162, 104, 2153, 0, 0, 2416, 3512, 0,
	0, 3506, 3507, 0, 3524, 3525, 3526, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 0, 828, 0,
	1953, 0, 0, 0, 4357, 0, 0, 0, 4683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3788, 1938, 0, 0,
	0, 199, 107, 0, 0, 111, 0, 0, 0, 0,
	1629, 1629, 1629, 1629, 0, 0, 3528, 0, 0, 0,
	0, 0, 0, 0, 3813, 0, 0, 0, 0, 0,
	3521, 0, 251, 0, 0, 0, 0, 3842, 0, 0,
	969, 0, 0, 0, 0, 159, 0, 0, 1960, 1962,
	0, 1983, 0, 0, 0, 0, 0, 0, 3522, 0,
	0, 2729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 3890, 2162,
	0, 2153, 0, 0, 0, 2891, 2891, 2891, 2891, 0,
	3914, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	164, 0, 0, 0, 3925, 0, 3926, 0, 3927, 0,
	0, 1339, 0, 1339, 0, 0, 204, 3512, 0, 0,
	0, 0, 1954, 741, 252, 0, 0, 0, 289, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 245,
	0, 0, 0, 0, 1609, 0, 0, 741, 246, 0,
	0, 0, 200, 0, 287, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3506, 3507, 287, 3524,
	3525, 3526, 0, 0, 0, 0, 0, 203, 1983, 0,
	0, 0, 0, 0, 1985, 3528, 0, 0, 0, 287,
	1420, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	1343, 0, 1343, 0, 0, 0, 0, 0, 0, 0,
	3523, 0, 0, 0, 0, 0, 0, 0, 2653, 0,
	0, 0, 0, 0, 0, 0, 0, 3522, 0, 0,
	0, 1341, 0, 1341, 1930, 1931, 0, 0, 287, 1420,
	0, 0, 757, 0, 757, 3521, 0, 0, 3013, 0,
	0, 0, 0, 0, 287, 0, 0, 287, 1961, 1954,
	0, 287, 0, 287, 0, 0, 1933, 0, 1410, 0,
	287, 287, 4899, 1420, 1420, 3029, 0, 0, 0, 0,
	287, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	0, 0, 0, 1986, 1930, 1931, 0, 0, 0, 0,
	0, 4913, 1932, 0, 0, 0, 0, 0, 1983, 0,
	0, 2795, 0, 1952, 0, 0, 0, 0, 1961, 0,
	0, 1985, 1949, 0, 835, 835, 1933, 0, 835, 835,
	4945, 0, 0, 1184, 0, 0, 0, 3072, 0, 3962,
	3963, 0, 3512, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 3518,
	3519, 3520, 1932, 287, 0, 0, 3517, 3515, 3516, 3508,
	3509, 3510, 3511, 3513, 3514, 0, 287, 0, 3965, 0,
	0, 0, 0, 0, 0, 0, 0, 828, 0, 3523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 0, 0, 0, 2967, 0,
	1938, 0, 0, 287, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 287, 287, 3169, 1650, 4026,
	4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036,
	4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 0,
	4049, 0, 3522, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 1962, 287, 3229, 0, 5036, 0, 0, 0,
	1938, 0, 5038, 0, 0, 0, 0, 0, 0, 0,
	0, 3506, 3507, 0, 3524, 3525, 3526, 1947, 1948, 0,
	0, 1650, 0, 0, 287, 0, 287, 0, 0, 2453,
	0, 0, 0, 287, 3971, 0, 0, 2162, 0, 2153,
	0, 0, 0, 3274, 0, 0, 0, 0, 0, 0,
	1953, 1960, 1962, 3072, 0, 741, 1629, 1629, 0, 0,
	0, 0, 0, 1983, 3169, 974, 3072, 0, 3518, 3519,
	3520, 0, 0, 0, 0, 3517, 3515, 3516, 3508, 3509,
	3510, 3511, 3513, 3514, 3047, 0, 4220, 4221, 287, 0,
	3521, 0, 0, 4223, 0, 0, 4224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 1410, 287,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1420,
	287, 0, 0, 1410, 0, 1410, 0, 1410, 0, 0,
	0, 1983, 0, 2162, 0, 2153, 0, 0, 0, 0,
	0, 2891, 2891, 0, 3523, 0, 1629, 1629, 1629, 1629,
	1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629,
	1629, 1629, 1629, 1629, 1629, 1629, 0, 1629, 0, 0,
	0, 0, 0, 0, 287, 287, 287, 287, 1410, 0,
	0, 1410, 0, 287, 0, 0, 0, 3512, 287, 1959,
	0, 1983, 0, 0, 0, 4311, 0, 0, 0, 2583,
	2497, 4317, 4318, 0, 2866, 2867, 2868, 2869, 2862, 2863,
	2864, 2865, 1954, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
	2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
	2891, 0, 2891, 0, 0, 3528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2842, 2843, 2844,
	2845, 0, 0, 3518, 3519, 3520, 2162, 3522, 2153, 0,
	3517, 3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514, 0,
	0, 2854, 2855, 2856, 2857, 2850, 2851, 2852, 2853, 2858,
	2859, 2860, 2861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3506, 3507,
	0, 3524, 3525, 3526, 2838, 2839, 2840, 2841, 2846, 2847,
	2848, 2849, 0, 0, 0, 4420, 4421, 0, 0, 0,
	0, 3970, 0, 0, 0, 1930, 1931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 0, 1933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3523,
	1415, 0, 0, 0, 0, 0, 0, 3521, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 1966, 0, 1932, 1184, 1184, 1184, 0, 0, 0,
	0, 0, 0, 0, 1952, 0, 0, 0, 287, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 741,
	0, 0, 0, 0, 741, 1586, 0, 741, 0, 0,
	741, 741, 0, 0, 0, 0, 741, 0, 0, 0,
	0, 1415, 1415, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2497, 287, 0, 0, 3960,
	0, 0, 0, 0, 3512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 287, 287, 0, 0, 0, 0, 0, 3518, 3519,
	3520, 0, 0, 0, 0, 3517, 3515, 3516, 3508, 3509,
	3510, 3511, 3513, 3514, 0, 0, 0, 4618, 0, 4620,
	4621, 4622, 3528, 4624, 0, 3072, 3072, 287, 0, 3666,
	2128, 0, 1960, 1962, 0, 0, 3072, 1595, 2134, 0,
	0, 0, 0, 0, 0, 0, 0, 3072, 2134, 0,
	3072, 2134, 0, 0, 2134, 0, 0, 3666, 1947, 1948,
	0, 0, 0, 0, 3522, 0, 0, 0, 0, 287,
	287, 2128, 0, 287, 1609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2128, 1953, 287, 0, 3740, 0, 3740, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4672, 0, 0, 0, 0,
	0, 0, 0, 3072, 0, 3072, 3561, 3770, 3072, 2128,
	0, 1966, 3072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 2128, 0, 0, 828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 3603, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3624, 0, 0, 0, 0, 0, 287, 0, 3814, 0,
	0, 0, 3816, 3072, 0, 0, 287, 0, 0, 287,
	0, 0, 3845, 0, 1420, 0, 3523, 0, 0, 0,
	1959, 0, 0, 4652, 0, 0, 0, 0, 0, 287,
	1609, 0, 0, 4768, 3274, 0, 0, 1410, 0, 287,
	0, 1415, 3072, 1954, 741, 0, 0, 0, 0, 0,
	0, 3072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 1967, 1961, 0, 4699, 1609, 0, 1609, 0,
	0, 1933, 3930, 0, 0, 1985, 0, 1966, 0, 3506,
	3507, 1980, 3524, 3525, 3526, 0, 0, 0, 0, 0,
	0, 0, 3936, 0, 0, 0, 1650, 0, 1986, 0,
	1410, 287, 0, 287, 0, 0, 0, 1932, 0, 1410,
	0, 0, 0, 0, 1966, 0, 0, 0, 1952, 0,
	1966, 0, 0, 0, 0, 0, 1966, 1949, 0, 0,
	0, 0, 0, 0, 0, 3518, 3519, 3520, 0, 0,
	287, 0, 3517, 3515, 3516, 3508, 3509, 3510, 3511, 3513,
	3514, 0, 0, 0, 0, 0, 1586, 0, 3521, 0,
	0, 0, 0, 0, 0, 0, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3603, 0, 4004, 0,
	0, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 1966, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 0, 4840, 3512, 1971, 0, 0, 1981,
	0, 0, 0, 0, 0, 2891, 1960, 1962, 0, 0,
	0, 0, 1184, 0, 0, 0, 0, 2497, 0, 0,
	1586, 0, 0, 1977, 0, 1978, 0, 0, 0, 0,
	0, 0, 1947, 1948, 0, 287, 287, 0, 0, 3529,
	0, 4869, 0, 0, 0, 0, 0, 1966, 0, 0,
	1969, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	741, 741, 0, 3528, 0, 1953, 4891, 0, 0, 0,
	3506, 3507, 0, 3524, 3525, 3526, 3940, 2891, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 3522, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 3521,
	0, 0, 0, 0, 0, 0, 3983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3999, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 828, 0, 1983, 0, 0, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 0, 0, 0,
	1586, 0, 0, 0, 1959, 0, 0, 0, 0, 1966,
	4193, 0, 0, 4195, 0, 0, 0, 0, 0, 3740,
	0, 0, 1966, 0, 0, 0, 0, 1954, 1629, 0,
	0, 0, 1609, 1609, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3512, 0, 3169, 0,
	0, 0, 0, 1629, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 2128, 0, 287, 2891, 3523, 2895, 757,
	757, 1420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 287, 0, 0, 0, 1966, 1985,
	0, 0, 0, 0, 0, 287, 3274, 0, 0, 3274,
	2134, 0, 0, 0, 0, 287, 0, 0, 4092, 0,
	0, 1609, 3845, 2891, 3528, 0, 0, 0, 287, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 2453, 0, 0, 0, 0, 2891, 0,
	0, 0, 0, 0, 0, 0, 0, 3072, 287, 0,
	0, 0, 0, 0, 0, 0, 3522, 3169, 0, 0,
	974, 3072, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 287, 0, 0, 0, 0, 3481, 0, 0,
	0, 3482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3518, 3519, 3520, 0,
	0, 0, 0, 3517, 3515, 3516, 3508, 3509, 3510, 3511,
	3513, 3514, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4376, 0, 0, 0, 0, 0, 0, 0,
	1415, 1586, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3523, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 1930,
	1931, 1650, 0, 287, 0, 1974, 1975, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 1961, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 1586, 1420, 2086, 0, 0, 0,
	0, 1980, 0, 0, 1609, 0, 0, 0, 1420, 0,
	287, 1420, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 3072, 3072, 0, 3666, 0, 1932, 3740, 3072,
	0, 0, 0, 0, 0, 0, 0, 4478, 1952, 4478,
	1650, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 3072, 0, 2134, 0, 0, 1938, 3666, 0, 1650,
	1650, 287, 2128, 0, 0, 1586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2128, 0, 287, 2128, 0,
	287, 0, 0, 3740, 0, 0, 0, 3518, 3519, 3520,
	0, 1586, 0, 0, 3517, 3515, 3516, 3508, 3509, 3510,
	3511, 3513, 3514, 3072, 0, 3072, 287, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3072, 3072, 0, 0, 0,
	0, 3274, 3274, 0, 0, 0, 0, 0, 3666, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 1971, 0, 0, 1981,
	287, 1966, 0, 0, 0, 0, 1960, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1169, 0, 0, 0, 0, 0, 4413, 0, 0,
	1966, 0, 1947, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 1586, 4431, 0,
	0, 0, 0, 0, 0, 1953, 0, 1983, 0, 0,
	1966, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 1966, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
	1966, 1966, 1966, 0, 0, 0, 0, 0, 1966, 0,
	1966, 1966, 1966, 1966, 0, 0, 1983, 0, 1954, 0,
	0, 0, 2895, 2895, 1586, 0, 0, 0, 0, 0,
	3072, 2134, 0, 2134, 0, 0, 3845, 1966, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4715, 0, 4715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	1985, 0, 828, 0, 0, 1415, 0, 0, 1966, 0,
	0, 0, 0, 3740, 1650, 0, 1410, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2128, 0, 287, 1966, 0,
	0, 1966, 0, 0, 1966, 1972, 0, 1966, 0, 0,
	0, 0, 0, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
	0, 0, 0, 0, 3845, 0, 0, 4478, 0, 0,
	1650, 0, 0, 0, 3072, 0, 0, 0, 0, 1985,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 2453,
	0, 0, 0, 0, 4805, 0, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 1650, 0, 0, 0,
	4644, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	0, 78, 3527, 0, 2895, 2895, 2895, 2895, 0, 0,
	1966, 0, 1966, 287, 287, 0, 0, 1966, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4644, 0, 1970, 84, 4004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 3740, 4860, 0, 0, 0, 0, 0,
	0, 3845, 2653, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 115, 0, 0, 0, 0, 0, 99,
	112, 0, 0, 0, 757, 2653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4478, 4478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4478, 0, 287, 4478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2134, 0, 0, 0,
	0, 100, 0, 0, 0, 0, 1650, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1420, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	4987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4715, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1429, 0, 0, 0, 0,
	0, 0, 0, 0, 3072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 962, 0, 0, 0, 0, 0,
	0, 2453, 1169, 1169, 1169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 78, 0, 965, 964, 0, 1415, 0, 0,
	0, 0, 0, 0, 1966, 1966, 0, 1966, 0, 0,
	79, 4004, 0, 0, 0, 104, 0, 1599, 0, 0,
	170, 0, 0, 1615, 0, 0, 0, 84, 0, 78,
	0, 48, 47, 0, 0, 1650, 0, 0, 0, 1586,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 165, 0, 1652, 0, 1658, 0, 1664, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 93, 0,
	0, 0, 1586, 199, 107, 69, 0, 111, 0, 0,
	0, 0, 50, 0, 167, 0, 0, 1586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 251, 93, 0, 0, 3845, 968,
	0, 0, 969, 1586, 0, 0, 0, 159, 0, 0,
	0, 0, 51, 0, 115, 0, 1756, 0, 1761, 1966,
	99, 112, 52, 70, 0, 0, 0, 0, 0, 0,
	0, 53, 1775, 0, 1780, 0, 59, 0, 3072, 0,
	0, 168, 0, 1184, 0, 253, 0, 0, 4478, 51,
	4478, 115, 0, 1650, 0, 1184, 0, 99, 112, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 1966, 1966, 0,
	2895, 2895, 100, 0, 1966, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 3527, 3527, 252, 0, 1966, 1966,
	54, 0, 0, 1845, 0, 0, 1851, 0, 1966, 0,
	0, 245, 0, 0, 3072, 0, 0, 0, 0, 100,
	246, 0, 1966, 0, 200, 0, 0, 0, 0, 0,
	0, 3169, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3072, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 3169, 1586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895,
	2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895,
	0, 2895, 3527, 3527, 3527, 3527, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 0, 0, 0,
	0, 1930, 1931, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 1586,
	0, 0, 2007, 0, 0, 1961, 0, 0, 2020, 0,
	0, 0, 0, 1933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 1932,
	0, 55, 0, 0, 199, 107, 0, 0, 111, 0,
	1952, 0, 0, 0, 0, 1609, 0, 58, 0, 1949,
	0, 0, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 251, 0, 0, 0, 0,
	60, 199, 107, 969, 0, 111, 0, 0, 159, 56,
	0, 0, 0, 169, 0, 0, 1218, 0, 0, 0,
	0, 57, 0, 0, 2080, 2080, 2080, 0, 0, 0,
	1966, 0, 251, 0, 0, 3959, 0, 0, 0, 0,
	64, 0, 0, 0, 0, 159, 253, 0, 0, 1586,
	0, 0, 1586, 0, 0, 0, 0, 1955, 1956, 1957,
	1958, 166, 0, 0, 286, 286, 286, 1938, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 1966, 1966, 0, 0, 204,
	0, 0, 1415, 0, 0, 0, 898, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 245, 0, 0, 0, 0, 0, 1960, 1962,
	0, 246, 0, 0, 898, 200, 204, 0, 0, 1586,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 1948, 1586, 0, 0, 245,
	963, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	1169, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1207, 117, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 0, 0, 0, 0, 0, 1966,
	1966, 0, 0, 1966, 3527, 3527, 1966, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 1966, 1966, 1966, 1966, 1966, 0, 0,
	0, 0, 117, 1966, 0, 1966, 0, 0, 3527, 3527,
	3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527,
	3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527, 0, 0,
	0, 3527, 0, 0, 1966, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 0, 0, 0,
	864, 1985, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1143, 0, 877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 0, 1329, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 869, 0, 0, 0, 0, 0, 0, 885,
	0, 0, 0, 1966, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	0, 2559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2588,
	0, 0, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1586, 0, 0,
	0, 0, 803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2628, 0, 2632, 0, 0,
	0, 0, 0, 0, 2646, 1586, 0, 0, 871, 1966,
	0, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 0, 2696, 0,
	2698, 2699, 2700, 2701, 0, 0, 1966, 1966, 0, 0,
	0, 1966, 1966, 0, 0, 1966, 1966, 884, 0, 0,
	1966, 0, 0, 0, 1966, 0, 2725, 0, 0, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 2776, 0, 2895, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2806, 2809,
	2812, 2815, 0, 0, 2821, 2822, 2823, 2824, 2825, 2826,
	2827, 0, 0, 0, 0, 0, 0, 1586, 1586, 0,
	1586, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2887, 0, 2898, 2900, 2905, 0, 0, 866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 0, 0, 2895, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 286, 286,
	0, 870, 286, 0, 0, 0, 1184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	802, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 880, 0, 0, 0,
	0, 0, 868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 286, 286, 1586, 0, 286, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 865, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 286, 0, 0, 804, 0, 0, 1586,
	0, 1966, 1966, 1966, 0, 0, 0, 867, 0, 0,
	0, 0, 1966, 1966, 3527, 2895, 0, 0, 286, 286,
	0, 1966, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 882, 883, 0, 879, 1254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1586, 0, 0, 0, 0, 0, 0,
	0, 3527, 2895, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 0,
	0, 0, 117, 1586, 0, 0, 1966, 2895, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 1930, 1931, 0, 1966, 0, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 0,
	0, 0, 0, 0, 0, 1961, 1586, 286, 0, 0,
	0, 0, 0, 1933, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 286, 0, 0, 0, 0, 3232, 3233, 0, 3235,
	1986, 0, 0, 0, 0, 1586, 0, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	1952, 0, 0, 0, 0, 1932, 0, 0, 0, 1949,
	117, 0, 117, 0, 117, 0, 1952, 0, 0, 0,
	0, 0, 3527, 0, 0, 1949, 0, 0, 0, 0,
	0, 0, 0, 1184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 3527, 0, 0, 1966, 0, 78, 0, 1586, 0,
	0, 0, 0, 0, 0, 3421, 1164, 117, 117, 0,
	0, 0, 0, 3527, 79, 0, 0, 0, 0, 0,
	0, 3414, 0, 117, 0, 117, 0, 1955, 1956, 1957,
	1958, 84, 0, 0, 0, 0, 0, 1938, 0, 117,
	0, 117, 0, 1955, 1956, 1957, 1958, 0, 0, 0,
	1346, 0, 0, 1938, 0, 0, 0, 0, 3357, 0,
	0, 0, 0, 0, 1966, 0, 0, 1586, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 1962,
	0, 0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 1960, 1962, 0, 117, 0, 0,
	0, 0, 0, 968, 1947, 1948, 0, 1967, 1961, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 115, 0,
	1947, 1948, 1987, 1988, 99, 112, 1980, 2102, 0, 1342,
	0, 0, 0, 286, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 286,
	2102, 286, 1932, 1953, 0, 0, 0, 0, 0, 898,
	0, 0, 0, 1952, 0, 0, 898, 0, 0, 0,
	0, 0, 1949, 0, 0, 1966, 0, 0, 3415, 3416,
	0, 0, 0, 0, 3422, 0, 100, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 1143,
	1966, 286, 0, 3436, 3437, 0, 0, 0, 0, 2776,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 2006, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 3446, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3460, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3472, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 1954,
	0, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 1954, 0, 0, 0, 0,
	2988, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	1978, 0, 1966, 0, 0, 0, 0, 1947, 1948, 0,
	104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 1184, 0, 0, 0,
	0, 1985, 0, 2100, 0, 2103, 0, 117, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2905, 2905,
	2905, 0, 0, 0, 0, 0, 0, 0, 199, 107,
	0, 0, 111, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 78, 3565, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	79, 0, 0, 0, 0, 286, 0, 969, 0, 898,
	1968, 0, 159, 0, 0, 0, 0, 84, 0, 0,
	0, 1983, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 0, 0, 0, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	253, 0, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 286, 164, 0, 1959,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 1169, 0, 204, 0, 0, 0, 0, 286, 968,
	286, 252, 1954, 1169, 0, 0, 286, 0, 0, 0,
	0, 0, 51, 0, 115, 0, 245, 0, 0, 0,
	99, 112, 0, 0, 0, 246, 0, 0, 0, 200,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3698, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 203, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 898,
	286, 0, 286, 0, 286, 0, 286, 0, 286, 3753,
	3754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 0, 1346, 0, 0, 0, 0, 0,
	1970, 0, 0, 286, 286, 286, 286, 0, 0, 0,
	79, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 84, 0, 0,
	0, 0, 2772, 0, 1346, 0, 2773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 968,
	0, 1164, 0, 1164, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 0, 115, 0, 0, 0, 0, 0,
	99, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 107, 0, 0, 111, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 100, 969, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1342, 0, 0, 0,
	0, 0, 0, 0, 2646, 0, 0, 0, 0, 0,
	3957, 3958, 1342, 0, 3961, 0, 253, 0, 3964, 0,
	0, 0, 0, 0, 0, 0, 286, 3968, 0, 0,
	0, 0, 0, 0, 0, 0, 3975, 0, 0, 0,
	0, 3565, 0, 164, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 3988, 0, 0, 204,
	0, 0, 0, 0, 0, 1143, 0, 252, 1143, 1143,
	0, 0, 0, 0, 0, 0, 4011, 4012, 0, 4013,
	4014, 4015, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 200, 286, 4021, 0, 0,
	0, 4023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 3199, 286, 0, 0, 0, 286,
	1750, 286, 0, 0, 2714, 0, 104, 0, 286, 286,
	0, 0, 0, 0, 4052, 4053, 0, 0, 286, 0,
	0, 0, 0, 0, 1164, 0, 0, 0, 3189, 3187,
	0, 0, 4064, 0, 2006, 3191, 3193, 3183, 2006, 0,
	0, 0, 0, 0, 0, 0, 0, 4073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 107, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3209, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 286, 0, 969, 0, 0, 0, 1346, 159, 1346,
	0, 0, 1329, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 2103, 0,
	4129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2166, 253, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 4147, 0, 0,
	0, 0, 0, 286, 286, 0, 0, 0, 0, 117,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 4178, 0, 0, 0, 0, 0, 252, 0, 0,
	0, 898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 3185, 0, 0, 200, 0, 0, 4201, 4202,
	0, 0, 286, 3201, 898, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 1346, 0,
	1748, 0, 0, 0, 0, 0, 0, 3200, 3190, 3188,
	3192, 3194, 3184, 3186, 3202, 3204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3196, 3198, 3206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3210, 0, 0, 0, 286, 0, 286, 1930, 1931,
	0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1961, 0, 0, 0, 0, 0, 2080, 0,
	1933, 0, 0, 0, 0, 0, 0, 4307, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 286, 286, 286, 286, 1932, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 286, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 1346, 3203,
	0, 0, 0, 0, 0, 286, 4354, 4355, 0, 0,
	0, 117, 4359, 4360, 117, 0, 117, 4363, 4364, 0,
	0, 0, 0, 0, 0, 4368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4377, 0, 1955, 1956, 1957, 1958, 0, 0,
	0, 0, 0, 117, 1938, 0, 117, 0, 0, 0,
	3211, 0, 117, 0, 0, 0, 0, 0, 0, 3195,
	3197, 3205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 1346, 0, 1346,
	0, 0, 0, 0, 0, 1971, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 1960, 1962, 1346, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 1977, 0, 1978, 0, 0, 0, 0, 0,
	0, 1947, 1948, 1346, 0, 1346, 1346, 1346, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 0, 0, 0,
	0, 4521, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1342, 2166, 2166, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 2714, 0,
	0, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 286, 0, 0, 0, 286,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 4639, 4640, 4641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2646, 0, 0, 4650,
	4651, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 4659, 4662, 0,
	0, 0, 1346, 0, 0, 0, 0, 286, 286, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 2102, 1346,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950,
	1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4382, 0, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4716, 0, 0, 0, 1329, 0,
	0, 0, 0, 4724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4732, 0,
	0, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4742, 0, 0, 4744,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1231, 0, 898, 0, 0, 0, 0, 788,
	0, 0, 0, 0, 286, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	771, 0, 0, 0, 0, 772, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	288, 288, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2166, 0, 773, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 774, 0, 0,
	0, 0, 0, 0, 0, 117, 117, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 775,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 794, 0, 0, 0, 0, 0, 0, 1346, 286,
	0, 286, 0, 0, 0, 0, 0, 0, 117, 117,
	0, 117, 776, 0, 0, 4868, 0, 0, 0, 4872,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 918,
	0, 0, 0, 0, 0, 0, 0, 777, 286, 0,
	0, 0, 0, 1967, 1961, 0, 0, 0, 0, 0,
	920, 0, 1933, 0, 0, 921, 0, 0, 0, 0,
	778, 0, 1980, 0, 779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 803, 0, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 922, 1346, 939, 1952,
	0, 0, 0, 0, 0, 0, 0, 793, 1949, 0,
	1346, 0, 1346, 0, 4942, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 923, 0, 0, 0, 0, 924,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1329, 0, 0, 1164, 0, 0, 0,
	0, 948, 0, 0, 2646, 0, 0, 0, 925, 0,
	117, 117, 0, 4662, 0, 0, 790, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 1957, 1958,
	0, 0, 0, 1342, 1342, 0, 1938, 919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 950, 1971, 0, 0,
	1981, 803, 0, 1223, 0, 781, 0, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	898, 0, 0, 0, 1977, 0, 1978, 0, 0, 0,
	0, 0, 0, 1947, 1948, 801, 0, 782, 0, 0,
	0, 0, 0, 5063, 5063, 5063, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 802,
	5088, 0, 0, 0, 0, 0, 944, 783, 0, 0,
	0, 0, 798, 799, 0, 796, 0, 0, 0, 0,
	0, 791, 0, 0, 784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 5063, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 785,
	0, 792, 286, 0, 928, 0, 0, 0, 0, 0,
	786, 0, 0, 0, 0, 930, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 787, 0, 0, 0, 0,
	795, 0, 0, 286, 0, 0, 0, 0, 0, 1329,
	1329, 0, 0, 0, 0, 804, 0, 931, 0, 0,
	0, 0, 286, 0, 0, 1959, 789, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 940, 1954, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 802,
	0, 286, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 917, 0, 0, 941, 1972, 0, 0, 0,
	0, 0, 0, 0, 932, 0, 1342, 5063, 5220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 938, 0, 0, 0, 0, 1346, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 933,
	286, 0, 1346, 934, 953, 0, 952, 0, 0, 0,
	935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 936, 0, 0, 0, 0,
	945, 0, 1346, 0, 0, 1346, 954, 0, 951, 0,
	0, 0, 0, 0, 0, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 2166, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 288, 288, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 788, 0, 0, 0, 0, 2166, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 0, 0,
	0, 1342, 0, 771, 0, 0, 0, 0, 772, 0,
	0, 0, 0, 0, 0, 2102, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 1506,
	288, 288, 0, 0, 288, 288, 0, 0, 0, 0,
	1506, 0, 1329, 0, 0, 0, 0, 0, 286, 773,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	774, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 2102, 0, 2102, 0, 0,
	1506, 0, 775, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 794, 0, 0, 0, 288, 288,
	0, 0, 0, 0, 0, 286, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 776, 1506, 1346, 0, 0,
	0, 0, 0, 1506, 288, 288, 0, 0, 1335, 0,
	0, 1346, 0, 1346, 286, 0, 0, 1346, 0, 1506,
	777, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 778, 0, 0, 0, 779, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 282, 737, 0,
	0, 0, 0, 0, 803, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 1346,
	793, 0, 0, 117, 0, 0, 0, 0, 0, 1329,
	0, 1346, 0, 1346, 0, 0, 0, 1329, 0, 0,
	0, 0, 0, 288, 0, 1346, 0, 1346, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 790,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2166, 0,
	0, 0, 0, 0, 0, 0, 800, 0, 781, 0,
	0, 0, 0, 0, 0, 0, 117, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 801, 0,
	782, 0, 0, 286, 2166, 2166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 2166, 2166, 0, 0, 0, 0, 117,
	0, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	783, 0, 0, 117, 0, 798, 799, 0, 796, 0,
	0, 0, 0, 0, 791, 0, 2166, 784, 0, 0,
	0, 1626, 0, 0, 0, 286, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2102, 0, 0, 0, 288,
	0, 0, 785, 0, 792, 0, 0, 1626, 0, 0,
	1506, 0, 0, 786, 1626, 288, 288, 288, 0, 1346,
	0, 0, 0, 0, 0, 288, 0, 0, 787, 0,
	1626, 0, 288, 795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 789,
	288, 286, 286, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 0,
	1346, 0, 0, 0, 1346, 0, 0, 1346, 0, 0,
	2102, 2102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2102, 0, 286, 2102, 0, 0, 2166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2714, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	292, 288, 0, 1506, 1506, 288, 1346, 0, 0, 0,
	0, 1346, 1346, 1346, 1506, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 288, 1346, 0, 0, 0, 286, 288, 0,
	890, 0, 0, 0, 2166, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 288, 0, 288, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 117, 0, 890, 0,
	0, 1506, 0, 1506, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1396, 0,
	1396, 1396, 0, 1506, 1506, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 288, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 1506, 1506, 1506, 117, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 288, 288, 0, 288, 0,
	288, 1346, 288, 0, 288, 1346, 1346, 0, 1346, 0,
	0, 0, 0, 0, 1497, 1346, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 1504, 1346, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	288, 288, 288, 0, 0, 0, 2102, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	117, 0, 1346, 0, 0, 0, 117, 0, 0, 0,
	1754, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 1626, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 1346,
	1346, 1346, 1346, 1346, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 1506, 0, 0, 0, 0,
	0, 1346, 1626, 0, 1626, 0, 1626, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 2166, 0, 1626, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 1346, 0, 1346, 0, 0, 0,
	1626, 0, 1626, 1626, 1626, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 288, 0, 1346, 0, 288, 0, 288, 0, 0,
	0, 0, 0, 0, 288, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 1346, 1346, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 2118, 1504, 288, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	288, 2129, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 1506, 0,
	0, 0, 0, 0, 0, 0, 1396, 0, 0, 288,
	288, 0, 0, 1607, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 2166, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	288, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976,
	1504, 0, 0, 1506, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 1506, 0, 1506, 0,
	0, 0, 0, 1933, 1506, 0, 1504, 1503, 0, 0,
	0, 0, 288, 1980, 0, 0, 1506, 0, 1625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 288, 0, 288, 0, 0, 0, 0, 0, 1932,
	1346, 1346, 0, 0, 288, 0, 0, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 1625, 1949,
	0, 1346, 0, 0, 1346, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 288,
	288, 288, 0, 0, 1625, 0, 0, 288, 0, 0,
	0, 1625, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 1956, 1957,
	1958, 0, 0, 288, 0, 0, 0, 1938, 0, 0,
	0, 288, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2439, 0,
	0, 0, 2446, 0, 0, 0, 0, 1625, 1971, 0,
	0, 1981, 0, 0, 2459, 0, 0, 0, 1960, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2471, 0, 2471, 0, 0, 0, 0, 0, 2478, 0,
	0, 0, 0, 0, 1947, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 2446, 1626, 0, 2507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2543, 0, 2545, 0, 2547, 0, 2549, 0,
	2550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2579, 2580, 2581, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 1626, 1346, 1626,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 1985, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 890, 0, 0, 0, 0, 0, 0,
	890, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 288, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 1944, 1945,
	1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2964, 0,
	0, 0, 0, 288, 288, 0, 0, 288, 0, 0,
	0, 0, 1503, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3015, 0, 0, 1396, 0, 0,
	0, 1396, 0, 1396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2459, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 1506, 0, 1506,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	288, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 288, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 1625, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 1506, 0, 1506, 0, 1504, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 2446, 2446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 288, 1506, 288, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 1625, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 1625, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3252, 1625, 0, 0, 0, 0,
	0, 0, 0, 2459, 0, 0, 0, 1625, 0, 1625,
	1625, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 890, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3338, 0, 3341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 3375, 1607, 3377, 1607, 0, 0,
	0, 0, 0, 3383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 1626, 0,
	1626, 0, 0, 0, 1504, 0, 0, 0, 0, 1396,
	0, 0, 1626, 0, 0, 0, 0, 3412, 0, 0,
	0, 0, 0, 0, 0, 1626, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 0, 1626, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 1504, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 1506, 0, 1506, 0, 0, 0,
	1506, 0, 0, 1506, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	1961, 0, 0, 0, 1504, 0, 0, 0, 1933, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 1504, 288, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 288, 0, 0, 1986, 0, 0, 1506, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 1506, 0, 1949, 0, 0, 1506, 1506, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 1506, 0, 0, 0, 288, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3613, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1396, 0, 0,
	0, 1607, 1607, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 1971, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 1960, 1962, 0, 0, 3662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 1978, 0, 0, 0, 0, 0, 0, 1947,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 3717,
	3719, 1506, 1506, 2459, 1506, 0, 0, 0, 890, 0,
	1930, 1931, 1953, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	0, 0, 1506, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1961, 1506, 0, 0, 0, 0,
	0, 1625, 1933, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 1625, 0, 1625, 0, 0, 0,
	0, 1979, 1625, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 1625, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 1626, 1626, 0, 1626, 0, 1952,
	0, 1626, 0, 1983, 1626, 288, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 288, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 3838, 0, 0, 2446,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 0, 1506, 1506, 1954, 0, 1955, 1956, 1957, 1958,
	0, 0, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 0, 1626, 1626,
	1626, 0, 1972, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 288, 0, 0, 0, 1506, 0,
	0, 1626, 0, 1626, 0, 0, 0, 1971, 0, 0,
	1981, 0, 1504, 0, 0, 0, 1985, 1960, 1962, 0,
	0, 0, 0, 0, 1506, 1506, 1506, 1506, 1506, 1506,
	1506, 0, 0, 0, 1977, 0, 1978, 0, 0, 0,
	1504, 0, 0, 1947, 1948, 0, 0, 1506, 0, 0,
	0, 3942, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3955, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	1506, 0, 1506, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 1506,
	0, 0, 1504, 1504, 0, 1504, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 1954, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 1506, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 1972, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 1503, 0, 0, 0, 0, 0,
	1985, 1506, 0, 0, 1506, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 1626, 1503, 0, 288, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 1970, 0, 0, 1626,
	0, 0, 0, 0, 0, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 1626, 1626, 1626, 1626, 1626,
	1626, 1626, 3484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 2459, 0, 0, 0, 0, 0,
	0, 1504, 0, 1626, 0, 4260, 0, 0, 0, 288,
	0, 0, 0, 0, 1506, 4270, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 2459, 0, 0, 0, 0, 4289, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1625, 0, 1625, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 890, 1625,
	0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 1625, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 4335, 0, 0, 1967, 1961, 1506, 0, 0,
	0, 0, 0, 1504, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 1626, 1626, 1626, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 1625, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 288, 0, 1625, 0, 1625, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 1625,
	1949, 1625, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 1981, 0, 0, 0, 0, 0, 1503, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 1978, 0,
	0, 0, 0, 0, 0, 1947, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4498, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2459, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4597, 0, 0, 0, 890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 0, 0, 0, 0, 0, 0, 0, 1933, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 1972, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 1625, 0, 1625, 0, 0, 0, 1625, 0,
	0, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 1970, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3483, 0, 1625, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 1981, 2459, 0, 0,
	0, 0, 0, 1960, 1962, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 1625, 1625, 1625, 0, 0,
	1977, 0, 1978, 0, 0, 0, 0, 0, 0, 1947,
	1948, 0, 0, 0, 0, 0, 0, 0, 1625, 0,
	1625, 0, 0, 0, 0, 0, 0, 1969, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4830, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 0, 0, 0, 1503,
	1503, 1959, 1503, 0, 0, 0, 0, 0, 1967, 1961,
	0, 0, 0, 0, 0, 0, 0, 1933, 0, 0,
	1625, 1625, 0, 0, 1954, 0, 0, 1980, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 1972, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 4948, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5001,
	0, 1955, 1956, 1957, 1958, 0, 0, 0, 0, 0,
	0, 1938, 1970, 0, 0, 0, 0, 0, 0, 0,
	1625, 1625, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3480, 0,
	0, 0, 1971, 0, 0, 1981, 0, 0, 0, 5045,
	0, 1503, 1960, 1962, 0, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	0, 0, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	1625, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 1625, 1625,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 1507, 304, 305, 1508, 1509,
	1510, 0, 1511, 683, 1512, 1513, 1514, 306, 1515, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 1516, 688, 318, 319,
	320, 321, 322, 323, 1517, 1518, 0, 324, 689, 690,
	691, 1519, 325, 326, 692, 1520, 1587, 1521, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 1522, 336, 337,
	338, 335, 339, 1523, 340, 1625, 341, 342, 343, 344,
	345, 346, 1524, 347, 348, 349, 1286, 350, 351, 352,
	1525, 1526, 1528, 1527, 1529, 1530, 1531, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 1532, 363, 359,
	361, 1533, 364, 362, 365, 1534, 366, 367, 368, 1535,
	1536, 369, 370, 371, 1537, 372, 373, 374, 1538, 375,
	376, 377, 1539, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	1540, 293, 1541, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 1542, 396, 397, 398, 1543,
	399, 1544, 1287, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 1545, 412, 701,
	1546, 702, 413, 1547, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 1289, 420, 421, 1548, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	1549, 1288, 509, 430, 706, 707, 1550, 708, 1551, 431,
	432, 1290, 709, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 1552, 443,
	445, 444, 1553, 446, 710, 1293, 447, 448, 1294, 1554,
	449, 450, 451, 452, 453, 454, 457, 1555, 1556, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1557, 295, 1297, 503, 504, 505, 506, 1558, 711, 507,
	712, 510, 511, 1559, 0, 512, 0, 513, 1560, 1561,
	515, 516, 517, 1562, 1563, 518, 519, 713, 1298, 520,
	1299, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 1564, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	1565, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 1566, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 1567, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 1568,
	601, 602, 600, 603, 604, 605, 1569, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 1570, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 1571, 636, 637, 0, 632, 623,
	1572, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	1573, 646, 724, 725, 726, 727, 1574, 656, 1575, 647,
	648, 649, 650, 728, 651, 729, 1576, 652, 653, 654,
	655, 0, 657, 658, 1577, 1578, 659, 660, 662, 664,
	665, 661, 663, 666, 1579, 667, 1580, 0, 668, 669,
	670, 730, 731, 732, 1581, 672, 671, 673, 674, 675,
	733, 676, 677, 1582, 1583, 1584, 1585, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 0, 2942, 0, 0, 0, 0, 0, 0, 0,
	2943, 296, 297, 299, 298, 300, 301, 302, 303, 1507,
	304, 305, 1508, 1509, 1510, 0, 1511, 683, 1512, 1513,
	1514, 306, 1515, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	1516, 688, 318, 319, 320, 321, 322, 323, 1517, 1518,
	0, 324, 689, 690, 691, 1519, 325, 326, 692, 1520,
	1587, 1521, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1522, 336, 337, 338, 335, 339, 1523, 340, 0,
	341, 342, 343, 344, 345, 346, 1524, 347, 348, 349,
	1286, 350, 351, 352, 1525, 1526, 1528, 1527, 1529, 1530,
	1531, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 1532, 363, 359, 361, 1533, 364, 362, 365, 1534,
	366, 367, 368, 1535, 1536, 369, 370, 371, 1537, 372,
	373, 374, 1538, 375, 376, 377, 1539, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 1540, 293, 1541, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 1542,
	396, 397, 398, 1543, 399, 1544, 1287, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 1545, 412, 701, 1546, 702, 413, 1547, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 1289, 420,
	421, 1548, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 1549, 1288, 509, 430, 706, 707,
	1550, 708, 1551, 431, 432, 1290, 709, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 1552, 443, 445, 444, 1553, 446, 710, 1293,
	447, 448, 1294, 1554, 449, 450, 451, 452, 453, 454,
	457, 1555, 1556, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1557, 295, 1297, 503, 504, 505,
	506, 1558, 711, 507, 712, 510, 511, 1559, 0, 512,
	0, 513, 1560, 1561, 515, 516, 517, 1562, 1563, 518,
	519, 713, 1298, 520, 1299, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 1564, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 1565, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 1566, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 1567, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 1568, 601, 602, 600, 603, 604, 605,
	1569, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 1570, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 1571, 636,
	637, 0, 632, 623, 1572, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 1573, 646, 724, 725, 726, 727,
	1574, 656, 1575, 647, 648, 649, 650, 728, 651, 729,
	1576, 652, 653, 654, 655, 0, 657, 658, 1577, 1578,
	659, 660, 662, 664, 665, 661, 663, 666, 1579, 667,
	1580, 0, 668, 669, 670, 730, 731, 732, 1581, 672,
	671, 673, 674, 675, 733, 676, 677, 1582, 1583, 1584,
	1585, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	3982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3984, 296, 297, 299, 298, 300, 301, 302,
	303, 1507, 304, 305, 1508, 1509, 1510, 0, 1511, 683,
	1512, 1513, 1514, 306, 1515, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 1516, 688, 318, 319, 320, 321, 322, 323,
	1517, 1518, 0, 324, 689, 690, 691, 1519, 325, 326,
	692, 1520, 1587, 1521, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 1522, 336, 337, 338, 335, 339, 1523,
	340, 0, 341, 342, 343, 344, 345, 346, 1524, 347,
	348, 349, 1286, 350, 351, 352, 1525, 1526, 1528, 1527,
	1529, 1530, 1531, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 1532, 363, 359, 361, 1533, 364, 362,
	365, 1534, 366, 367, 368, 1535, 1536, 369, 370, 371,
	1537, 372, 373, 374, 1538, 375, 376, 377, 1539, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 1540, 293, 1541, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 1542, 396, 397, 398, 1543, 399, 1544, 1287, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 1545, 412, 701, 1546, 702, 413, 1547,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	1289, 420, 421, 1548, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 1549, 1288, 509, 430,
	706, 707, 1550, 708, 1551, 431, 432, 1290, 709, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 1552, 443, 445, 444, 1553, 446,
	710, 1293, 447, 448, 1294, 1554, 449, 450, 451, 452,
	453, 454, 457, 1555, 1556, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1557, 295, 1297, 503,
	504, 505, 506, 1558, 711, 507, 712, 510, 511, 1559,
	0, 512, 0, 513, 1560, 1561, 515, 516, 517, 1562,
	1563, 518, 519, 713, 1298, 520, 1299, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	1564, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 1565, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 1566, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 1567,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 1568, 601, 602, 600, 603,
	604, 605, 1569, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	1570, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	1571, 636, 637, 0, 632, 623, 1572, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 1573, 646, 724, 725,
	726, 727, 1574, 656, 1575, 647, 648, 649, 650, 728,
	651, 729, 1576, 652, 653, 654, 655, 0, 657, 658,
	1577, 1578, 659, 660, 662, 664, 665, 661, 663, 666,
	1579, 667, 1580, 0, 668, 669, 670, 730, 731, 732,
	1581, 672, 671, 673, 674, 675, 733, 676, 677, 1582,
	1583, 1584, 1585, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4412, 296,
	297, 299, 298, 300, 301, 302, 303, 1507, 304, 305,
	1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306,
	1515, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 1516, 688,
	318, 319, 320, 321, 322, 323, 1517, 1518, 0, 324,
	689, 690, 691, 1519, 325, 326, 692, 1520, 1587, 1521,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1522,
	336, 337, 338, 335, 339, 1523, 340, 0, 341, 342,
	343, 344, 345, 346, 1524, 347, 348, 349, 1286, 350,
	351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 1532,
	363, 359, 361, 1533, 364, 362, 365, 1534, 366, 367,
	368, 1535, 1536, 369, 370, 371, 1537, 372, 373, 374,
	1538, 375, 376, 377, 1539, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 1540, 293, 1541, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 1542, 396, 397,
	398, 1543, 399, 1544, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 1545,
	412, 701, 1546, 702, 413, 1547, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 1548,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 1549, 1288, 509, 430, 706, 707, 1550, 708,
	1551, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1552, 443, 445, 444, 1553, 446, 710, 1293, 447, 448,
	1294, 1554, 449, 450, 451, 452, 453, 454, 457, 1555,
	1556, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1557, 295, 1297, 503, 504, 505, 506, 1558,
	711, 507, 712, 510, 511, 1559, 0, 512, 0, 513,
	1560, 1561, 515, 516, 517, 1562, 1563, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 1564, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 1565, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	1566, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 1567, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 1568, 601, 602, 600, 603, 604, 605, 1569, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 1570, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 1571, 636, 637, 0,
	632, 623, 1572, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 1573, 646, 724, 725, 726, 727, 1574, 656,
	1575, 647, 648, 649, 650, 728, 651, 729, 1576, 652,
	653, 654, 655, 0, 657, 658, 1577, 1578, 659, 660,
	662, 664, 665, 661, 663, 666, 1579, 667, 1580, 0,
	668, 669, 670, 730, 731, 732, 1581, 672, 671, 673,
	674, 675, 733, 676, 677, 1582, 1583, 1584, 1585, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4410, 296, 297, 299, 298, 300,
	301, 302, 303, 1507, 304, 305, 1508, 1509, 1510, 0,
	1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 1516, 688, 318, 319, 320, 321,
	322, 323, 1517, 1518, 0, 324, 689, 690, 691, 1519,
	325, 326, 692, 1520, 1587, 1521, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1522, 336, 337, 338, 335,
	339, 1523, 340, 0, 341, 342, 343, 344, 345, 346,
	1524, 347, 348, 349, 1286, 350, 351, 352, 1525, 1526,
	1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 1532, 363, 359, 361, 1533,
	364, 362, 365, 1534, 366, 367, 368, 1535, 1536, 369,
	370, 371, 1537, 372, 373, 374, 1538, 375, 376, 377,
	1539, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 1540, 293,
	1541, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 1542, 396, 397, 398, 1543, 399, 1544,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 1545, 412, 701, 1546, 702,
	413, 1547, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 1548, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 1549, 1288,
	509, 430, 706, 707, 1550, 708, 1551, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1552, 443, 445, 444,
	1553, 446, 710, 1293, 447, 448, 1294, 1554, 449, 450,
	451, 452, 453, 454, 457, 1555, 1556, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1557, 295,
	1297, 503, 504, 505, 506, 1558, 711, 507, 712, 510,
	511, 1559, 0, 512, 0, 513, 1560, 1561, 515, 516,
	517, 1562, 1563, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 1564, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 1565, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 1566, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 1567, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 1568, 601, 602,
	600, 603, 604, 605, 1569, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 1570, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 1571, 636, 637, 0, 632, 623, 1572, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 1573, 646,
	724, 725, 726, 727, 1574, 656, 1575, 647, 648, 649,
	650, 728, 651, 729, 1576, 652, 653, 654, 655, 0,
	657, 658, 1577, 1578, 659, 660, 662, 664, 665, 661,
	663, 666, 1579, 667, 1580, 0, 668, 669, 670, 730,
	731, 732, 1581, 672, 671, 673, 674, 675, 733, 676,
	677, 1582, 1583, 1584, 1585, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4645, 296, 297, 299, 298, 300,
	301, 302, 303, 1507, 304, 305, 1508, 1509, 1510, 0,
	1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 1516, 688, 318, 319, 320, 321,
	322, 323, 1517, 1518, 0, 324, 689, 690, 691, 1519,
	325, 326, 692, 1520, 1587, 1521, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1522, 336, 337, 338, 335,
	339, 1523, 340, 0, 341, 342, 343, 344, 345, 346,
	1524, 347, 348, 349, 1286, 350, 351, 352, 1525, 1526,
	1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 1532, 363, 359, 361, 1533,
	364, 362, 365, 1534, 366, 367, 368, 1535, 1536, 369,
	370, 371, 1537, 372, 373, 374, 1538, 375, 376, 377,
	1539, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 1540, 293,
	1541, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 1542, 396, 397, 398, 1543, 399, 1544,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 1545, 412, 701, 1546, 702,
	413, 1547, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 1548, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 1549, 1288,
	509, 430, 706, 707, 1550, 708, 1551, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1552, 443, 445, 444,
	1553, 446, 710, 1293, 447, 448, 1294, 1554, 449, 450,
	451, 452, 453, 454, 457, 1555, 1556, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1557, 295,
	1297, 503, 504, 505, 506, 1558, 711, 507, 712, 510,
	511, 1559, 0, 512, 0, 513, 1560, 1561, 515, 516,
	517, 1562, 1563, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 1564, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 1565, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 1566, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 1567, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 1568, 601, 602,
	600, 603, 604, 605, 1569, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 1570, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 1571, 636, 637, 0, 632, 623, 1572, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 1573, 646,
	724, 725, 726, 727, 1574, 656, 1575, 647, 648, 649,
	650, 728, 651, 729, 1576, 652, 653, 654, 655, 0,
	657, 658, 1577, 1578, 659, 660, 662, 664, 665, 661,
	663, 666, 1579, 667, 1580, 0, 668, 669, 670, 730,
	731, 732, 1581, 672, 671, 673, 674, 675, 733, 676,
	677, 1582, 1583, 1584, 1585, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4507, 296, 297, 299, 298, 300,
	301, 302, 303, 1507, 304, 305, 1508, 1509, 1510, 0,
	1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 1516, 688, 318, 319, 320, 321,
	322, 323, 1517, 1518, 0, 324, 689, 690, 691, 1519,
	325, 326, 692, 1520, 1587, 1521, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1522, 336, 337, 338, 335,
	339, 1523, 340, 0, 341, 342, 343, 344, 345, 346,
	1524, 347, 348, 349, 1286, 350, 351, 352, 1525, 1526,
	1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 1532, 363, 359, 361, 1533,
	364, 362, 365, 1534, 366, 367, 368, 1535, 1536, 369,
	370, 371, 1537, 372, 373, 374, 1538, 375, 376, 377,
	1539, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 1540, 293,
	1541, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 1542, 396, 397, 398, 1543, 399, 1544,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 1545, 412, 701, 1546, 702,
	413, 1547, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 1548, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 1549, 1288,
	509, 430, 706, 707, 1550, 708, 1551, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1552, 443, 445, 444,
	1553, 446, 710, 1293, 447, 448, 1294, 1554, 449, 450,
	451, 452, 453, 454, 457, 1555, 1556, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1557, 295,
	1297, 503, 504, 505, 506, 1558, 711, 507, 712, 510,
	511, 1559, 0, 512, 0, 513, 1560, 1561, 515, 516,
	517, 1562, 1563, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 1564, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 1565, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 1566, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 1567, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 1568, 601, 602,
	600, 603, 604, 605, 1569, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 1570, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 1571, 636, 637, 0, 632, 623, 1572, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 1573, 646,
	724, 725, 726, 727, 1574, 656, 1575, 647, 648, 649,
	650, 728, 651, 729, 1576, 652, 653, 654, 655, 0,
	657, 658, 1577, 1578, 659, 660, 662, 664, 665, 661,
	663, 666, 1579, 667, 1580, 0, 668, 669, 670, 730,
	731, 732, 1581, 672, 671, 673, 674, 675, 733, 676,
	677, 1582, 1583, 1584, 1585, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4339, 296, 297, 299, 298, 300,
	301, 302, 303, 1507, 304, 305, 1508, 1509, 1510, 0,
	1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 1516, 688, 318, 319, 320, 321,
	322, 323, 1517, 1518, 0, 324, 689, 690, 691, 1519,
	325, 326, 692, 1520, 1587, 1521, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1522, 336, 337, 338, 335,
	339, 1523, 340, 0, 341, 342, 343, 344, 345, 346,
	1524, 347, 348, 349, 1286, 350, 351, 352, 1525, 1526,
	1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 1532, 363, 359, 361, 1533,
	364, 362, 365, 1534, 366, 367, 368, 1535, 1536, 369,
	370, 371, 1537, 372, 373, 374, 1538, 375, 376, 377,
	1539, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 1540, 293,
	1541, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 1542, 396, 397, 398, 1543, 399, 1544,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 1545, 412, 701, 1546, 702,
	413, 1547, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 1548, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 1549, 1288,
	509, 430, 706, 707, 1550, 708, 1551, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1552, 443, 445, 444,
	1553, 446, 710, 1293, 447, 448, 1294, 1554, 449, 450,
	451, 452, 453, 454, 457, 1555, 1556, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1557, 295,
	1297, 503, 504, 505, 506, 1558, 711, 507, 712, 510,
	511, 1559, 0, 512, 0, 513, 1560, 1561, 515, 516,
	517, 1562, 1563, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 1564, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 1565, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 1566, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 1567, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 1568, 601, 602,
	600, 603, 604, 605, 1569, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 1570, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 1571, 636, 637, 0, 632, 623, 1572, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 1573, 646,
	724, 725, 726, 727, 1574, 656, 1575, 647, 648, 649,
	650, 728, 651, 729, 1576, 652, 653, 654, 655, 0,
	657, 658, 1577, 1578, 659, 660, 662, 664, 665, 661,
	663, 666, 1579, 667, 1580, 0, 668, 669, 670, 730,
	731, 732, 1581, 672, 671, 673, 674, 675, 733, 676,
	677, 1582, 1583, 1584, 1585, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4000, 296, 297, 299, 298, 300,
	301, 302, 303, 1507, 304, 305, 1508, 1509, 1510, 0,
	1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 1516, 688, 318, 319, 320, 321,
	322, 323, 1517, 1518, 0, 324, 689, 690, 691, 1519,
	325, 326, 692, 1520, 1587, 1521, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1522, 336, 337, 338, 335,
	339, 1523, 340, 0, 341, 342, 343, 344, 345, 346,
	1524, 347, 348, 349, 1286, 350, 351, 352, 1525, 1526,
	1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 1532, 363, 359, 361, 1533,
	364, 362, 365, 1534, 366, 367, 368, 1535, 1536, 369,
	370, 371, 1537, 372, 373, 374, 1538, 375, 376, 377,
	1539, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 1540, 293,
	1541, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 1542, 396, 397, 398, 1543, 399, 1544,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 1545, 412, 701, 1546, 702,
	413, 1547, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 1548, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 1549, 1288,
	509, 430, 706, 707, 1550, 708, 1551, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1552, 443, 445, 444,
	1553, 446, 710, 1293, 447, 448, 1294, 1554, 449, 450,
	451, 452, 453, 454, 457, 1555, 1556, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1557, 295,
	1297, 503, 504, 505, 506, 1558, 711, 507, 712, 510,
	511, 1559, 0, 512, 0, 513, 1560, 1561, 515, 516,
	517, 1562, 1563, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 1564, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 1565, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 1566, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 1567, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 1568, 601, 602,
	600, 603, 604, 605, 1569, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 1570, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 1571, 636, 637, 0, 632, 623, 1572, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 1573, 646,
	724, 725, 726, 727, 1574, 656, 1575, 647, 648, 649,
	650, 728, 651, 729, 1576, 652, 653, 654, 655, 0,
	657, 658, 1577, 1578, 659, 660, 662, 664, 665, 661,
	663, 666, 1579, 667, 1580, 0, 668, 669, 670, 730,
	731, 732, 1581, 672, 671, 673, 674, 675, 733, 676,
	677, 1582, 1583, 1584, 1585, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3811, 296, 297, 299, 298, 300,
	301, 302, 303, 1507, 304, 305, 1508, 1509, 1510, 0,
	1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 1516, 688, 318, 319, 320, 321,
	322, 323, 1517, 1518, 0, 324, 689, 690, 691, 1519,
	325, 326, 692, 1520, 1587, 1521, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1522, 336, 337, 338, 335,
	339, 1523, 340, 0, 341, 342, 343, 344, 345, 346,
	1524, 347, 348, 349, 1286, 350, 351, 352, 1525, 1526,
	1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 1532, 363, 359, 361, 1533,
	364, 362, 365, 1534, 366, 367, 368, 1535, 1536, 369,
	370, 371, 1537, 372, 373, 374, 1538, 375, 376, 377,
	1539, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 1540, 293,
	1541, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 1542, 396, 397, 398, 1543, 399, 1544,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 1545, 412, 701, 1546, 702,
	413, 1547, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 1548, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 1549, 1288,
	509, 430, 706, 707, 1550, 708, 1551, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1552, 443, 445, 444,
	1553, 446, 710, 1293, 447, 448, 1294, 1554, 449, 450,
	451, 452, 453, 454, 457, 1555, 1556, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1557, 295,
	1297, 503, 504, 505, 506, 1558, 711, 507, 712, 510,
	511, 1559, 0, 512, 0, 513, 1560, 1561, 515, 516,
	517, 1562, 1563, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 1564, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 1565, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 1566, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 1567, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 1568, 601, 602,
	600, 603, 604, 605, 1569, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 1570, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 1571, 636, 637, 0, 632, 623, 1572, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 1573, 646,
	724, 725, 726, 727, 1574, 656, 1575, 647, 648, 649,
	650, 728, 651, 729, 1576, 652, 653, 654, 655, 0,
	657, 658, 1577, 1578, 659, 660, 662, 664, 665, 661,
	663, 666, 1579, 667, 1580, 0, 668, 669, 670, 730,
	731, 732, 1581, 672, 671, 673, 674, 675, 733, 676,
	677, 1582, 1583, 1584, 1585, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2796, 296, 297, 299, 298, 300,
	301, 302, 303, 1507, 304, 305, 1508, 1509, 1510, 0,
	1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 1516, 688, 318, 319, 320, 321,
	322, 323, 1517, 1518, 0, 324, 689, 690, 691, 1519,
	325, 326, 692, 1520, 1587, 1521, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1522, 336, 337, 338, 335,
	339, 1523, 340, 0, 341, 342, 343, 344, 345, 346,
	1524, 347, 348, 349, 1286, 350, 351, 352, 1525, 1526,
	1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 1532, 363, 359, 361, 1533,
	364, 362, 365, 1534, 366, 367, 368, 1535, 1536, 369,
	370, 371, 1537, 372, 373, 374, 1538, 375, 376, 377,
	1539, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 1540, 293,
	1541, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 1542, 396, 397, 398, 1543, 399, 1544,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 1545, 412, 701, 1546, 702,
	413, 1547, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 1548, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 1549, 1288,
	509, 430, 706, 707, 1550, 708, 1551, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1552, 443, 445, 444,
	1553, 446, 710, 1293, 447, 448, 1294, 1554, 449, 450,
	451, 452, 453, 454, 457, 1555, 1556, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1557, 295,
	1297, 503, 504, 505, 506, 1558, 711, 507, 712, 510,
	511, 1559, 0, 512, 0, 513, 1560, 1561, 515, 516,
	517, 1562, 1563, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 1564, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 1565, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 1566, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 1567, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 1568, 601, 602,
	600, 603, 604, 605, 1569, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 1570, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 1571, 636, 637, 0, 632, 623, 1572, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 1573, 646,
	724, 725, 726, 727, 1574, 656, 1575, 647, 648, 649,
	650, 728, 651, 729, 1576, 652, 653, 654, 655, 0,
	657, 658, 1577, 1578, 659, 660, 662, 664, 665, 661,
	663, 666, 1579, 667, 1580, 0, 668, 669, 670, 730,
	731, 732, 1581, 672, 671, 673, 674, 675, 733, 676,
	677, 1582, 1583, 1584, 1585, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 1498, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2417, 296, 297, 299, 298, 300,
	301, 302, 303, 1507, 304, 305, 1508, 1509, 1510, 0,
	1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 1516, 688, 318, 319, 320, 321,
	322, 323, 1517, 1518, 0, 324, 689, 690, 691, 1519,
	325, 326, 692, 1520, 1587, 1521, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1522, 336, 337, 338, 335,
	339, 1523, 340, 0, 341, 342, 343, 344, 345, 346,
	1524, 347, 348, 349, 1286, 350, 351, 352, 1525, 1526,
	1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 1532, 363, 359, 361, 1533,
	364, 362, 365, 1534, 366, 367, 368, 1535, 1536, 369,
	370, 371, 1537, 372, 373, 374, 1538, 375, 376, 377,
	1539, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 1540, 293,
	1541, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 1542, 396, 397, 398, 1543, 399, 1544,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 1545, 412, 701, 1546, 702,
	413, 1547, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 1548, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 1549, 1288,
	509, 430, 706, 707, 1550, 708, 1551, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1552, 443, 445, 444,
	1553, 446, 710, 1293, 447, 448, 1294, 1554, 449, 450,
	451, 452, 453, 454, 457, 1555, 1556, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1557, 295,
	1297, 503, 504, 505, 506, 1558, 711, 507, 712, 510,
	511, 1559, 0, 512, 0, 513, 1560, 1561, 515, 516,
	517, 1562, 1563, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 1564, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 1565, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 1566, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 1567, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 1568, 601, 602,
	600, 603, 604, 605, 1569, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 1570, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 1571, 636, 637, 0, 632, 623, 1572, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 1573, 646,
	724, 725, 726, 727, 1574, 656, 1575, 647, 648, 649,
	650, 728, 651, 729, 1576, 652, 653, 654, 655, 0,
	657, 658, 1577, 1578, 659, 660, 662, 664, 665, 661,
	663, 666, 1579, 667, 1580, 0, 668, 669, 670, 730,
	731, 732, 1581, 672, 671, 673, 674, 675, 733, 676,
	677, 1582, 1583, 1584, 1585, 678, 679, 734, 680, 681,
	682, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 1507, 304, 305, 1508,
	1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306, 1515,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 1516, 688, 318,
	319, 320, 321, 322, 323, 1517, 1518, 0, 324, 689,
	690, 691, 1519, 325, 326, 692, 1520, 1587, 1521, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 1522, 336,
	337, 338, 335, 339, 1523, 340, 0, 341, 342, 343,
	344, 345, 346, 1524, 347, 348, 349, 1286, 350, 351,
	352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 1532, 363,
	359, 361, 1533, 364, 362, 365, 1534, 366, 367, 368,
	1535, 1536, 369, 370, 371, 1537, 372, 373, 374, 1538,
	375, 376, 377, 1539, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 1540, 293, 1541, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 1542, 396, 397, 398,
	1543, 399, 1544, 1287, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 1545, 412,
	701, 1546, 702, 413, 1547, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 1289, 420, 421, 1548, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 1549, 1288, 509, 430, 706, 707, 1550, 708, 1551,
	431, 432, 1290, 709, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 1552,
	443, 445, 444, 1553, 446, 710, 1293, 447, 448, 1294,
	1554, 449, 450, 451, 452, 453, 454, 457, 1555, 1556,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1557, 295, 1297, 503, 504, 505, 506, 1558, 711,
	507, 712, 510, 511, 1559, 0, 512, 0, 513, 1560,
	1561, 515, 516, 517, 1562, 1563, 518, 519, 713, 1298,
	520, 1299, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 1564, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 1565, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 1566,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 1567, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	1568, 601, 602, 600, 603, 604, 605, 1569, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 1570, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 1571, 636, 637, 0, 632,
	623, 1572, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 1573, 646, 724, 725, 726, 727, 1574, 656, 1575,
	647, 648, 649, 650, 728, 651, 729, 1576, 652, 653,
	654, 655, 0, 657, 658, 1577, 1578, 659, 660, 662,
	664, 665, 661, 663, 666, 1579, 667, 1580, 0, 668,
	669, 670, 730, 731, 732, 1581, 672, 671, 673, 674,
	675, 733, 676, 677, 1582, 1583, 1584, 1585, 678, 679,
	734, 680, 681, 682, 2771, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 2768, 304, 305, 0, 0, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 2769, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	2767, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 2770, 0, 0, 0, 0, 0, 0, 0,
	1205, 2766, 0, 1165, 1203, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 251, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 253, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 1746, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 245, 678, 679, 734, 680, 681, 682, 1179, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 2011,
	2009, 0, 0, 1203, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	251, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 253, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 1746, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 245, 678, 679,
	734, 680, 681, 682, 1179, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 2011, 3434, 0, 0, 1203,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 251, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 253, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 1746, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 245, 678, 679, 734, 680, 681, 682,
	1179, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 2011, 2009, 0, 0, 1203, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 2901,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 2906, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 2902, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 2903, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	2816, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 0, 0,
	0, 0, 0, 0, 0, 0, 1205, 2814, 0, 2813,
	1203, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 0, 0, 0,
	0, 0, 0, 0, 0, 1205, 2811, 0, 2810, 1203,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 0, 0, 0, 0,
	0, 0, 0, 0, 1205, 2808, 0, 2807, 1203, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 2805, 0, 1847, 1203, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1846, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 1168, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 1183, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 0, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 5013, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 1183, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 2648, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 2647, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 4735, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 1183, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 1183, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	0, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 4301, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 2081, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 1205, 0, 0, 0,
	1203, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 3978, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 0, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 2081, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 1205, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 2906, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	0, 0, 0, 0, 0, 0, 0, 0, 1205, 2009,
	0, 2911, 1203, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	2909, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 2897,
	0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 296, 297,
	299, 298, 300, 301, 302, 303, 1205, 304, 305, 0,
	1203, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 2886, 0,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 296, 297, 299,
	298, 300, 301, 302, 303, 1205, 304, 305, 0, 1203,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 2884, 0, 2875,
	2882, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 2878, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 2879, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 2880,
	467, 2877, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 2881, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	2876, 682, 1179, 0, 0, 0, 2872, 0, 2875, 2882,
	1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 2878, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 2879, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 2880, 467,
	2877, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 2881, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 2876,
	682, 1179, 0, 0, 0, 0, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 0, 0, 0, 0, 0, 0, 2017,
	0, 1205, 0, 0, 0, 1203, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 2627, 304, 305, 0, 0, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 2589, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 2560, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 1852, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	1781, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 1776,
	0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 296, 297,
	299, 298, 300, 301, 302, 303, 1205, 304, 305, 0,
	1203, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 1762, 0,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 296, 297, 299,
	298, 300, 301, 302, 303, 1205, 304, 305, 0, 1203,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 1757, 0, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 1666, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1665, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 1660, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1659, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 1653, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 1616, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 1598, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 1602, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 1603, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 1601, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 1430, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	0, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 0,
	0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 296, 297,
	299, 298, 300, 301, 302, 303, 1205, 304, 305, 0,
	1203, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	5062, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 5061, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 0, 0,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 296, 297, 299,
	298, 300, 301, 302, 303, 1205, 304, 305, 0, 1203,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 5060,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 5062,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 5061, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 0, 0, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 4664, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	4665, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	4663, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 0, 0, 1221, 1193,
	1194, 1195, 3401, 3402, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 0, 0, 1221, 1193, 1194,
	1195, 3399, 3400, 1204, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 0, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	2635, 2636, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 0, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 2894, 0, 0, 0, 0, 0, 0, 2892,
	2893, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	0, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 0, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 3394, 3395, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 0, 0, 0, 0, 0, 0, 0, 2263, 2264,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 0, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 5062, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 0, 1248, 0, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 0, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 5061, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	2913, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 0, 1244, 0, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 0, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 1628, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 1205, 0, 0, 0,
	1203, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 0, 1244, 0, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 0, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 1165, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 1205, 0, 0, 0, 1203, 1245, 0, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 1244,
	0, 324, 689, 690, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 1330, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 0, 295, 1297, 503, 504, 505,
	506, 0, 1249, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 1336, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 720, 1338, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 251, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 253, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 1746, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	245, 678, 679, 734, 680, 681, 682, 1344, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 1334, 0, 2105, 0,
	1245, 0, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 1244, 0, 324, 689, 690, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 1330, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 0, 295, 1297,
	503, 504, 505, 506, 0, 1249, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 1336, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	720, 1338, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 251, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 253, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 1746, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 245, 678, 679, 734, 680, 681, 682,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3558, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 2105, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	1244, 0, 324, 689, 690, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 1330, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 295, 1297, 503, 504,
	505, 506, 0, 1249, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 1336, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 1338,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 1326,
	0, 1344, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1245, 0, 0, 1334, 306, 1332,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 1244, 0, 324, 689,
	690, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 1330,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 0, 295, 1297, 503, 504, 505, 506, 0, 1249,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	1336, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 720, 1338, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 1344, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1245, 0, 0, 1334, 306, 1332, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 1244, 0, 324, 689, 690, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 1330, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 0, 295, 1297,
	503, 504, 505, 506, 0, 1249, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 1336, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	720, 1338, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 1344, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1245, 0, 0, 1334,
	306, 1332, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 1244, 0,
	324, 689, 690, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 0, 295, 1297, 503, 504, 505, 506,
	0, 1249, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 1344,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 306, 4477, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 1244, 0, 324, 689, 690, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 0,
	295, 1297, 503, 504, 505, 506, 0, 1249, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 1338, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 2739, 2740, 2741, 2758, 2759, 2760, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 2761, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 2001, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 1986, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 2751, 0,
	336, 337, 338, 335, 339, 0, 340, 2747, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 2752, 2753, 2754, 2755, 392,
	393, 394, 698, 0, 0, 2746, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 2756, 2757, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 2749, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 2750, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 1985,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 1623, 2736, 2737, 2738, 2762,
	2748, 2742, 0, 2744, 2745, 2743, 2730, 2731, 2732, 2733,
	2734, 2735, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 1587, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 1288, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 1290, 709, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 0, 1297, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 251, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 253, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 1746, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 245, 678, 679, 734, 680, 681, 682, 0, 1743,
	246, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 203,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 1587, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 1288, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 1290, 709, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 0, 0, 1297, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	251, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 253, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 1746, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 245, 678, 679,
	734, 680, 681, 682, 1623, 1622, 246, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 203, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	1587, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 1288, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 1290, 709, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 0, 0, 1297, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1623, 1622, 0,
	0, 0, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 1770, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 1587, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 1288, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 1290, 709,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 0, 0, 1297,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1623, 1622, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 3889, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 1587, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 1288, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 1290, 709, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	0, 0, 1297, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 2500, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1623, 2409, 0, 0, 0, 0, 2410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 1770, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 1587,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 1288, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 1290, 709, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 2408, 445, 444, 0, 446, 710, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 0, 0, 1297, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1623, 1622, 0, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 1770, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 1587, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 1288, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 1290, 709, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 0, 0, 1297, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	1165, 0, 290, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	1752, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 251, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 253, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 1746, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 245, 678,
	679, 734, 680, 681, 682, 0, 0, 246, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 203, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 3170,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 2119,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 5229, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 290, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 3839, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 290,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 1740, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 1344, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 306, 3292, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	1244, 0, 324, 689, 690, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 295, 1297, 503, 504,
	505, 506, 0, 1249, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 4003, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 989, 0, 889, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 2487, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 896, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 986, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 988, 0, 632, 623, 894, 638, 639,
	640, 641, 642, 895, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	2164, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 899, 0, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 0,
	2170, 0, 316, 2160, 317, 2176, 0, 2183, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 2186, 2187,
	0, 0, 325, 326, 0, 0, 1587, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 1268, 358, 360, 2174, 2173, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 0, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	2172, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 2181, 2182, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	0, 0, 0, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 1288, 509, 430, 2167, 2168, 0, 2163, 0, 431,
	432, 1290, 0, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 0, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	0, 0, 1297, 503, 504, 505, 506, 0, 0, 507,
	2175, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 0, 1298, 520,
	1299, 0, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 2157, 534, 535,
	536, 2158, 537, 538, 539, 0, 540, 0, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 2171, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 0, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 2169, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 2185, 626, 627, 628, 629,
	0, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 2177, 2178, 2179, 2180, 0, 656, 0, 647,
	648, 649, 650, 0, 651, 0, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 0, 2161, 2184, 0, 672, 671, 673, 674, 675,
	0, 676, 677, 0, 0, 0, 0, 678, 679, 0,
	680, 681, 682, 889, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 4123, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 2151, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 896, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 295, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 4122, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 894, 638, 639, 640, 641, 642, 895,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 4121, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 889, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 2191, 304, 305, 0, 0, 0, 0, 899,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 896, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 2190, 596, 597, 598, 599, 0, 2192, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 894, 638, 639,
	640, 641, 642, 895, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 2189, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 889, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 2142, 304, 305, 0,
	0, 0, 0, 899, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 896, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 2141, 596, 597, 598, 599,
	0, 2143, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 894, 638, 639, 640, 641, 642, 895, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	2140, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 887, 0, 889, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 899, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 896, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 894, 638, 639, 640,
	641, 642, 895, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	889, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 899, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	896, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	894, 638, 639, 640, 641, 642, 895, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 889, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 899, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 896, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 2539, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 2540, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 894, 638, 639, 640, 641, 642,
	895, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 2541, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 290, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	899, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 1623, 1622,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 899, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 1587, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 1288,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 0, 0,
	1297, 503, 504, 505, 506, 4225, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1623, 1622, 0, 0, 0, 0, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 1587, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 1288, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 1290, 709, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 0, 0, 1297, 503, 504, 505, 506, 3789, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1801, 0, 1623, 1622, 0, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 1587, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 1800, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 1288, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 1290, 709, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 0, 0, 1297, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 1799, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 1798, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1673,
	0, 1623, 1622, 0, 0, 0, 0, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 1587, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 1675, 704, 705, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 1288, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 1290, 709, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 0, 0, 1297, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1618, 0, 1623, 1622, 0, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 1587, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 1288, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 1290, 709, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 0, 0, 1297, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1623,
	1622, 0, 0, 0, 0, 1620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 1587, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	1288, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 0,
	0, 1297, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1623, 1622, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 1587, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 1288, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 0, 0, 1297, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1623, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 1587, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 1288, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 1290, 709, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 0, 1297, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 3073,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 3831, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 3077, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 3830,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 3076, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 3827, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 3829, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 3826, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 3075, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 3828, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 3073, 325, 326, 692, 0, 0, 3067, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 3069, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 3077, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	3076, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 3066, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 3075, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 3074, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 1881, 0, 290, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 1880, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 1879, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 1882, 587, 588,
	595, 596, 597, 598, 599, 0, 1878, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 1876, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 1877, 671, 673, 674, 675, 733, 676, 677, 1591,
	0, 290, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 1593, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	1336, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 1588, 0, 290, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 1590, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 1336, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 1494,
	0, 290, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 1496, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	1336, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 767, 0, 290, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 766, 302,
	303, 755, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 758, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 764, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 760, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 754,
	0, 290, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 755, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 758, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 759, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	760, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 755,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 758, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 759, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 760, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 755, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 758,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 4235, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 760, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	2445, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 295, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 1336, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 3726, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 3262,
	0, 290, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 3261, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 2508, 0, 290, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 2452,
	0, 290, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 2451, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 2438, 0, 290, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 2440, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 2402,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 1336, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1718, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 1717, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 1611, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1604, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 1606, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 1413, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 1412,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1403, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 1402, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 1400, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 1399,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1395, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 1394, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 736, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 281, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 758, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 759, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 760,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 2548, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 295, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 2546, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 2544,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 2458, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 295, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 2216, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 2210, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 973, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 972, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 971, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 856, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 845, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 854, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 847, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 853, 849,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 850, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 848, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 851, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 852,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 846, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 839, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 845, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 854,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 847, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 853, 849, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	850, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	848, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 851, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 852, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 846, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 3830, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 4561, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 1441,
	0, 290, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 1444, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 1442, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 827,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 826,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 825, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 1445, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 823, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 1441, 0, 290, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 1444, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 1442, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 827, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 826, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	825, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	1445, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 823, 725,
	726, 727, 0, 656, 0, 647, 1443, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 834,
	0, 290, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 832, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 745, 0, 290, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 744, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 743, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	3170, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 4859, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 3667, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 4449, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 4180, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 2948,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 3170, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 3301,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	2346, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 826, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 825, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 823, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 2518, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 2506, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1774, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1766, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 817, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 813, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 818, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 827, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 826, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 825, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 1751, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 823, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1724, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 1723, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1708, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 1706, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1701, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1678, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 1676, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1671, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1632, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1596, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1447, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 826, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 825, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 823, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1418, 0, 290, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 1417, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 1409, 0, 290, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 1408, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 1361, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 837,
	0, 290, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 817, 0, 290, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 813,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	812, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 818, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 827, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 826, 579, 580, 581, 582, 814,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	825, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	815, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 823, 725,
	726, 727, 0, 656, 0, 647, 819, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 806,
	0, 290, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 807,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 769, 0, 290, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 762,
	0, 290, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 740, 0, 290, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 3862, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 826, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 825,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 823, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 3768, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 3743, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 3739, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 3691, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	3689, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 3677, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 3674, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 3272,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	807, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	2476, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 0, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 1380, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 1309, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 0, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 0, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 0, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 0, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 1714, 0, 1425,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 0, 317, 0, 0, 0, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 0, 0, 0,
	0, 325, 326, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 1427, 353, 354, 355, 356,
	357, 0, 358, 360, 0, 0, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 0, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 0,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 1713,
	0, 0, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 0, 0, 0, 0, 0, 431, 432,
	0, 0, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 0, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 0, 507, 0,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 0, 0, 520, 0,
	0, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 0, 534, 535, 536,
	0, 537, 538, 539, 0, 540, 0, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 0, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 0, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1428, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	0, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 0, 626, 627, 628, 629, 0,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 0, 0, 0, 0, 0, 656, 0, 647, 648,
	649, 650, 0, 651, 0, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	0, 0, 0, 0, 672, 671, 673, 674, 675, 0,
	676, 677, 1635, 0, 1425, 0, 678, 679, 0, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 0, 317, 0,
	0, 0, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 0, 0, 0, 0, 325, 326, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	1427, 353, 354, 355, 356, 357, 0, 358, 360, 0,
	0, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 0,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 0, 0, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 0, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 1634, 0, 0, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 0, 0,
	0, 0, 0, 431, 432, 0, 0, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 0, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 0, 507, 0, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 0, 0, 520, 0, 0, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 0, 534, 535, 536, 0, 537, 538, 539, 0,
	540, 0, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 0, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1428, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 0, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 0,
	626, 627, 628, 629, 0, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 0, 0, 0, 0,
	0, 656, 0, 647, 648, 649, 650, 0, 651, 0,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 0, 0, 0, 0, 672,
	671, 673, 674, 675, 0, 676, 677, 1423, 0, 1425,
	0, 678, 679, 0, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 0, 317, 0, 0, 0, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 0, 0, 0,
	0, 325, 326, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 1427, 353, 354, 355, 356,
	357, 0, 358, 360, 0, 0, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 0, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 0,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 1422,
	0, 0, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 0, 0, 0, 0, 0, 431, 432,
	0, 0, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 0, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 0, 507, 0,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 0, 0, 520, 0,
	0, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 0, 534, 535, 536,
	0, 537, 538, 539, 0, 540, 0, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 0, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 0, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1428, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	0, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 0, 626, 627, 628, 629, 0,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 0, 0, 0, 0, 0, 656, 0, 647, 648,
	649, 650, 0, 651, 0, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	0, 0, 0, 0, 672, 671, 673, 674, 675, 0,
	676, 677, 2230, 0, 1425, 0, 678, 679, 0, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 0, 317, 0,
	0, 0, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 0, 0, 0, 0, 325, 326, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	1427, 353, 354, 355, 356, 357, 0, 358, 360, 0,
	0, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 0,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 0, 0, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 0, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 0, 0, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 0, 0, 0, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 0, 0,
	0, 0, 0, 431, 432, 0, 0, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 0, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 0, 507, 0, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 0, 0, 520, 0, 0, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 0, 534, 535, 536, 0, 537, 538, 539, 0,
	540, 0, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 0, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1428, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 0, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 0,
	626, 627, 628, 629, 0, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 0, 0, 0, 0,
	0, 656, 0, 647, 648, 649, 650, 0, 651, 0,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 0, 0, 0, 0, 672,
	671, 673, 674, 675, 0, 676, 677, 2197, 0, 1425,
	0, 678, 679, 0, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 0, 317, 0, 0, 0, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 0, 0, 0,
	0, 325, 326, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 1427, 353, 354, 355, 356,
	357, 0, 358, 360, 0, 0, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 0, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 0,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 0,
	0, 0, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 0, 0, 0, 0, 0, 431, 432,
	0, 0, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 0, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 0, 507, 0,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 0, 0, 520, 0,
	0, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 0, 534, 535, 536,
	0, 537, 538, 539, 0, 540, 0, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 0, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 0, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1428, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	0, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 0, 626, 627, 628, 629, 0,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 0, 0, 0, 0, 0, 656, 0, 647, 648,
	649, 650, 0, 651, 0, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	0, 0, 0, 0, 672, 671, 673, 674, 675, 1425,
	676, 677, 0, 0, 0, 0, 678, 679, 0, 680,
	681, 682, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 0, 317, 0, 0, 0, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 0, 0, 0,
	0, 325, 326, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 1427, 353, 354, 355, 356,
	357, 0, 358, 360, 0, 0, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 0, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 0,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 0, 0,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 0,
	0, 0, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 0, 0, 0, 0, 0, 431, 432,
	0, 0, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 0, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 0, 507, 0,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 0, 0, 520, 0,
	0, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 0, 534, 535, 536,
	0, 537, 538, 539, 0, 540, 0, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 0, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 0, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1428, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	0, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 0, 626, 627, 628, 629, 0,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 0, 0, 0, 0, 0, 656, 0, 647, 648,
	649, 650, 0, 651, 0, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	0, 0, 0, 0, 672, 671, 673, 674, 675, 0,
	676, 677, 0, 0, 0, 0, 678, 679, 0, 680,
	681, 682, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1961, 0, 0, 0,
	0, 0, 1930, 1931, 1933, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1961, 0, 0, 0,
	0, 1986, 0, 0, 1933, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 1978, 1971,
	0, 0, 1981, 0, 0, 1947, 1948, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 1977, 0, 1978, 0,
	0, 0, 0, 0, 0, 1947, 1948, 0, 1953, 0,
	0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 1961, 1953, 0,
	0, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 1968, 0,
	0, 1932, 0, 0, 0, 0, 0, 1979, 0, 1983,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 1959, 0, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 1972, 0,
	1971, 0, 1985, 1981, 0, 0, 0, 0, 0, 0,
	1960, 1962, 1967, 1961, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 1977, 0, 1978,
	0, 1980, 1985, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 1969, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 1953,
	0, 0, 0, 0, 0, 0, 0, 1949, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 3478, 0, 0, 0, 1979, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 2773, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 1971, 0, 1959, 1981,
	0, 0, 0, 0, 0, 0, 1960, 1962, 1967, 1961,
	0, 0, 0, 0, 0, 0, 0, 1933, 0, 0,
	0, 1954, 0, 1977, 0, 1978, 0, 1980, 0, 0,
	0, 0, 1947, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 1972,
	1969, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1953, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 0, 0, 0, 0, 1970,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0,
	0, 4988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 1959, 1981, 0, 0, 0, 0,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 1977,
	0, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 1972, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	0, 1953, 0, 0, 0, 0, 0, 1933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 0, 0, 4984, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	1959, 1955, 1956, 1957, 1958, 0, 0, 0, 0, 0,
	0, 1938, 0, 1967, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 1972, 1971, 0, 0, 1981, 0, 0, 1932, 0,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 1977,
	0, 1978, 0, 0, 0, 1985, 0, 0, 1947, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 1957, 1958,
	0, 1970, 0, 0, 0, 0, 1938, 0, 0, 0,
	1979, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 1968, 0, 4887, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 1971, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 1978, 0, 0, 0,
	0, 0, 0, 1947, 1948, 0, 0, 0, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	1959, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1961, 0, 1953, 0, 0, 0,
	0, 0, 1933, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 1972, 0, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 1985, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1955, 1956, 1957, 1958,
	0, 1970, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 1954, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 0, 0, 4839, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 1972, 1971, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 1960, 1962, 1967,
	1961, 0, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 1977, 0, 1978, 0, 1980, 0,
	1985, 0, 0, 1947, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 1969, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 1953, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 1979, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 1968, 0, 4838, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 0, 1971, 0, 1959, 1981, 0, 0, 0,
	0, 0, 0, 1960, 1962, 1967, 1961, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 1954, 0,
	1977, 0, 1978, 0, 1980, 0, 0, 0, 0, 1947,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 1972, 1969, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 1953, 0, 0, 0, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 1970, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 0, 0, 4648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 1959, 1981, 0, 0, 0, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 1977, 0, 1978, 0,
	0, 0, 0, 0, 0, 1947, 1948, 0, 0, 0,
	0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 1972, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1961, 0, 1953, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 0, 0, 4473, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 1959, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 0, 0, 1938, 0,
	1967, 1961, 0, 0, 0, 0, 0, 0, 0, 1933,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 1972, 1971,
	0, 0, 1981, 0, 0, 1932, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 1977, 0, 1978, 0,
	0, 0, 1985, 0, 0, 1947, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 1956, 1957, 1958, 0, 1970, 0,
	0, 0, 0, 1938, 0, 0, 0, 1979, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 1968, 0,
	4387, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 1971, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 1960, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 1978, 0, 0, 0, 0, 0, 0,
	1947, 1948, 0, 0, 0, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 1959, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 1961, 0, 1953, 0, 0, 0, 0, 0, 1933,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 1972, 0,
	0, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	0, 0, 1985, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1955, 1956, 1957, 1958, 0, 1970, 0,
	0, 0, 0, 1938, 0, 0, 0, 0, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 1954, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 0,
	4386, 0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 1972, 1971, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 1960, 1962, 1967, 1961, 0, 0,
	0, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 1977, 0, 1978, 0, 1980, 0, 1985, 0, 0,
	1947, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 1969, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 1953, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 1968, 0, 4385, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0,
	1971, 0, 1959, 1981, 0, 0, 0, 0, 0, 0,
	1960, 1962, 1967, 1961, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 1954, 0, 1977, 0, 1978,
	0, 1980, 0, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 1972, 1969, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 1953,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 1970, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 4008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 1959, 1981,
	0, 0, 0, 0, 0, 0, 1960, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 1977, 0, 1978, 0, 0, 0, 0,
	0, 0, 1947, 1948, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 1972,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 1961, 0, 1953, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0,
	0, 3476, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 1959, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 0, 0, 1938, 0, 1967, 1961, 0,
	0, 0, 0, 0, 0, 0, 1933, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 1972, 1971, 0, 0, 1981,
	0, 0, 1932, 0, 0, 0, 1960, 1962, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 1977, 0, 1978, 0, 0, 0, 1985,
	0, 0, 1947, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 1970, 0, 0, 0, 0,
	1938, 0, 0, 0, 1979, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 1968, 0, 3475, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	1978, 0, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 1959, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 0,
	1953, 0, 0, 0, 0, 0, 1933, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 1972, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 1985,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1955, 1956, 1957, 1958, 0, 1970, 0, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 1954, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 0, 0, 3474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	1978, 0, 0, 0, 1985, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 0, 0, 0, 2376,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	1970, 0, 0, 0, 0, 0, 0, 1933, 0, 1979,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 1980, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	1968, 0, 3473, 0, 1986, 0, 0, 0, 0, 0,
	0, 1983, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 2377, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 1986, 0, 0, 0, 0,
	1972, 1938, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 2309,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2307, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	1970, 1953, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	3438, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 0, 1971, 0, 0, 1981, 0, 0, 0,
	1979, 0, 0, 1960, 1962, 1967, 1961, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	1977, 1968, 1978, 0, 1980, 0, 0, 0, 0, 1947,
	1948, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 1969, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 1953, 0, 0, 0, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 2378, 0, 0, 0, 0,
	0, 1972, 0, 1983, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 0, 0, 1938, 5138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	2308, 1959, 1981, 0, 0, 0, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 2379,
	0, 0, 0, 0, 1954, 0, 1977, 0, 1978, 0,
	0, 0, 0, 0, 0, 1947, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 1972, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 1953, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 0, 0, 0, 1930, 1931, 1985, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 0, 0, 2306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 0,
	0, 0, 0, 0, 0, 0, 1933, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 1983,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 1952, 0, 0, 0, 0, 0, 0,
	0, 5137, 1949, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	0, 0, 0, 0, 3409, 0, 0, 1933, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 1986, 0, 0, 0, 1972, 0,
	1938, 0, 3538, 1932, 0, 0, 0, 0, 3537, 0,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3410, 0, 0, 0, 0, 1977, 0,
	1978, 0, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 0, 0, 0, 1970, 0,
	1953, 1938, 0, 0, 0, 0, 0, 0, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 1981, 0, 0, 0, 1979,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	1968, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 2921, 0, 0, 0, 0,
	0, 1953, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1961, 0, 0, 1959,
	2920, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	1979, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 1952, 1983, 0, 0, 0, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 1971,
	0, 0, 1981, 0, 0, 1985, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 1978, 0,
	0, 0, 0, 0, 0, 1947, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 1953, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 0, 1944, 1945, 1951, 1973, 1950, 1946, 1933, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 1983,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1961, 1959, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	1954, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 1986, 1938, 0, 4743, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 1981, 0, 0, 0,
	0, 0, 1985, 1960, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 1978, 0, 0, 0, 0, 0, 0, 1947,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 1953, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 1971,
	0, 1979, 1981, 0, 0, 0, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 1977, 0, 1978, 0,
	0, 0, 0, 1983, 0, 1947, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 1953, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 1959, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 1954, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 1968, 1162,
	0, 0, 1972, 0, 0, 1952, 0, 0, 0, 1983,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 0, 1971, 0, 0, 1981, 0, 0, 0,
	0, 0, 1985, 1960, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 1978, 0, 0, 0, 0, 0, 0, 1947,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 1967, 1961, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 1933, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 1980, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 1983, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 0,
	0, 1959, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 1986, 0, 0, 0, 0, 0, 1938,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 1981, 0, 0, 1985, 0, 0, 0,
	1960, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4519, 0, 1977, 0, 1978,
	0, 0, 0, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 0, 0, 0, 0, 1953,
	1938, 0, 4203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 1971, 0, 0, 1981, 0, 0, 0, 1979, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 1968,
	1978, 0, 0, 0, 0, 0, 0, 1947, 1948, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1967, 1961, 0, 0, 1959, 0,
	0, 0, 0, 1933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 1979,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 1932,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	1952, 1983, 0, 0, 0, 0, 0, 0, 0, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4204, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 1955, 1956, 1957,
	1958, 0, 0, 0, 0, 0, 0, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 1971, 0,
	0, 1981, 0, 0, 1985, 0, 0, 0, 1960, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 1978, 0, 0,
	0, 0, 0, 0, 1947, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 1953, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 1933, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 1968, 0, 0,
	0, 0, 0, 0, 1952, 0, 0, 0, 1983, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 1955, 1956, 1957, 1958, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 3544,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976,
	0, 0, 1971, 0, 0, 1981, 0, 0, 0, 0,
	0, 1985, 1960, 1962, 1967, 1961, 0, 0, 0, 3539,
	0, 0, 0, 1933, 3989, 0, 0, 0, 0, 1977,
	0, 1978, 0, 1980, 0, 0, 0, 0, 1947, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 1969, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 1953, 0, 0, 0, 0, 0, 0, 0, 1949,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 1945,
	1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 1955, 1956, 1957,
	1958, 0, 0, 0, 0, 0, 0, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 1971, 0,
	1959, 1981, 0, 0, 0, 0, 0, 0, 1960, 1962,
	1967, 1961, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 1954, 0, 1977, 0, 1978, 0, 1980,
	0, 0, 0, 0, 1947, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 1972, 1969, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 1953, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 1955, 1956, 1957, 1958, 0, 0, 0,
	0, 1970, 0, 1938, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 0, 1971, 0, 1959, 1981, 0, 0,
	0, 0, 0, 0, 1960, 1962, 1967, 1961, 0, 0,
	0, 3477, 0, 0, 0, 1933, 0, 0, 0, 1954,
	0, 1977, 0, 1978, 0, 1980, 0, 0, 0, 0,
	1947, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 1972, 1969, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 1953, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 0, 3504, 0, 0, 1970, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 1945,
	1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0,
	1971, 0, 1959, 1981, 0, 0, 0, 0, 0, 0,
	1960, 1962, 1967, 1961, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 1954, 0, 1977, 0, 1978,
	0, 1980, 0, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 1972, 1969, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 1953,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 0, 0, 1970, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 1971, 0, 1959, 1981,
	0, 0, 0, 0, 0, 0, 1960, 1962, 1967, 1961,
	0, 0, 0, 0, 0, 0, 0, 1933, 0, 0,
	0, 1954, 0, 1977, 0, 1978, 0, 1980, 0, 0,
	0, 0, 1947, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 1972,
	1969, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1953, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 0, 0, 0, 0, 1970,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 1959, 1981, 0, 0, 0, 0,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 1977,
	0, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	0, 0, 0, 0, 0, 1972, 1969, 0, 0, 0,
	0, 0, 0, 1967, 1961, 0, 0, 0, 0, 0,
	0, 1953, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	1979, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 2489, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 1957, 1958,
	1959, 0, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	1981, 1972, 0, 0, 0, 0, 0, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 1978, 0, 0, 0,
	0, 0, 0, 1947, 1948, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 1040, 0, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 1979, 0, 1063, 0, 1046,
	1045, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 0, 1065, 0, 0, 0, 0, 1983, 1047, 0,
	0, 0, 0, 1050, 0, 0, 0, 0, 1102, 0,
	1075, 0, 0, 0, 0, 0, 0, 0, 1060, 1061,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1092, 1052, 0, 0, 0,
	0, 0, 1053, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 1954, 0,
	0, 0, 0, 0, 1089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1056, 0, 0, 0, 0, 0, 0,
	1985, 1044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1057, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1066, 1064, 0, 0, 0, 0, 0, 0, 1059, 0,
	0, 0, 1076, 0, 0, 1097, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 1088, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 1093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1051, 0, 0, 1101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1049, 0, 0, 0, 1084, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1094, 1082, 0, 0, 0, 0, 0,
	0, 0, 1100, 1077, 0, 0, 1069, 1067, 0, 0,
	1072, 0, 0, 0, 0, 0, 1073, 0, 0, 1042,
	0, 1095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1086, 0,
	1074, 0, 0, 0, 0, 0, 1071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1098, 0, 0,
	0, 0, 0, 0, 0, 1078, 0, 1079, 0, 0,
	0, 0, 0, 0, 0, 1055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1083,
}

var sqlPact = [...]int{
	8739, -1000, -1000, -1000, -1000, 173, -1000, -1000, 172, 171,
	170, 166, 165, 163, 162, 160, 158, 154, 153, -1000,
	-1000, 149, 147, 145, 144, -1000, -1000, 143, -1000, -1000,
	142, -1000, 140, 139, 138, -1000, -1000, 137, -1000, 136,
	-1000, -1000, -1000, -1000, 132, 131, 129, 98070, 97485, 98653,
	2418, 124942, 107412, 2102, 86967, 124357, 86382, 123772, 2236, 13250,
	123187, 2878, 124, -1000, 122602, 123, 121, 120, -1000, 106827,
	122017, 104489, 103904, 2138, -1000, 119, 117, -1000, 9578, 75802,
	116, 115, 114, 113, 2472, 112, -1000, 110, 109, -1000,
	-1000, 107, -1000, 12597, 1547, -1000, 106, 105, -1000, 8702,
	103319, 101, 100, 99, 2554, 98, 97, 72873, 96, 95,
	94, 2477, 3019, -1000, -1000, 2206, -1000, -1000, 92, 89,
	88, 87, 85, 84, 83, 82, 81, 79, 78, 74,
	66, -1000, 64, 63, 62, 59, 58, -1000, 57, 56,
	55, -1000, 53, -1000, 52, 51, 48, 46, 45, 43,
	42, 41, 40, 39, 37, 36, 33, 32, 31, 146471,
	-1000, -1000, 30, -1000, 1872, 1734, 1731, 1730, 1729, 1724,
	1015, 29, 25, 23, 22, 21, 19, 11, 8, 5,
	4, 0, -2, -3, -4, -5, -6, -7, -8, -10,
	-11, 133, -12, -13, -16, -18, -22, -23, -24, 4508,
	3646, -1000, 1660, 945, 32893, 3099, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 133687, 125525, -26, -94, -27,
	-1000, 3408, 966, 60527, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 230, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 465, 2524, 734,
	-1000, -1000, -1000, 121432, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2417, -53, -1000, 2091, -1000, -1000, -1000, -1000,
	-1000, 733, -1000, 2416, 2350, 339, 2345, -1000, -1000, -1000,
	3516, 2574, 3941, 3938, 3937, 3935, 3932, 133104, 1966, 3930,
	2644, 3926, 3925, 3924, 3923, 3922, 3921, 3915, -1000, 96900,
	1081, 96315, 95730, 3494, 120849, 95145, 120264, 136025, 50959, 913,
	3515, -1000, -1000, -1000, -1000, -1000, -1000, 125525, -1000, 1079,
	-1000, -1000, 3912, 2197, 731, 106242, -1000, -1000, 119679, 1752,
	-1000, -1000, -1000, 959, 1228, 35289, 35289, 35289, 229, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3525, -1000, -1000, -1000,
	-1000, 125525, 2839, 2839, 1462, 1428, 1428, 2839, 2839, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3911, 3909, 3908,
	3907, 3906, -1000, -1000, -1000, 85797, 25514, 85212, 84627, 119094,
	50360, 94560, 93975, 3905, 3904, 3903, 49761, 80532, 58144, 3645,
	118509, 135440, 3644, 3586, 1077, 2088, 1515, -1000, -1000, -1000,
	-1000, -1000, -1000, -48, 77554, 3705, 125525, -1000, 228, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 49162, 751, 48563, 737,
	47964, 639, 117924, -1000, -1000, -1000, -1000, 79937, -1000, 117339,
	2573, 3902, 3900, 1147, 3899, 3365, 1961, 3898, 1977, 1265,
	3896, 3889, 3887, 3886, 3882, 3876, 3875, 1535, 116754, 3090,
	1598, 116169, 1924, 134855, 1076, 93390, 98653, 2744, 115584, 1468,
	1391, -1000, -1000, -1000, -1000, 3178, 2998, 2969, 1094, -1000,
	-1000, -1000, -1000, 64067, 11032, 10782, -1000, -1000, 12437, 114999,
	67032, 98653, 98653, -1000, -1000, -1000, -1000, -1000, -1000, 47365,
	544, 46766, 827, 114414, -1000, -1000, 64660, 3038, 1113, -1000,
	-1000, -1000, -1000, -1000, 113829, 46167, 528, 45568, 822, 125525,
	-1000, 3089, 1983, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2480, 1667, 3704, 2829, 79342, 2203, 1487, 3483,
	3168, 3163, 1575, 2084, 3161, 3874, 2711, 3159, 3158, 3148,
	3147, 3140, 1363, 2707, 443, 2714, 32294, 3080, 1883, 44969,
	1592, 1570, 3137, 3132, 3721, 3559, 2064, 2115, 2114, 2142,
	84042, 3868, 3867, 3410, 3131, 3129, 2881, 3116, -1000, 3035,
	1533, 226, -1000, -1000, -1000, -1000, -1000, -1000, 1525, -1000,
	-1000, -1000, -1000, -1000, 89299, -1000, -1000, 1390, -1000, -1000,
	1390, -1000, -1000, -1000, -1000, -1000, 1354, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1660, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2335, -1000, 2225, -1000, -1000, -1000, 2681, 3388,
	3388, 3388, 3514, 446, 444, -1000, 133, -1000, -1000, 145914,
	-1000, -1000, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558,
	2250, -1000, 729, -1000, -1000, 773, -1000, 726, 660, 577,
	-1000, -1000, -1000, -1000, -1000, -1000, 725, -1000, -1000, -1000,
	-1000, -1000, -1000, 3678, -1000, 28563, -1000, -1000, -1000, 408,
	721, 51558, -1000, -1000, 3740, 3739, 933, -1000, 221, 975,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3087, 719, 717, -1000, 716, 714, 712, 710,
	707, -1000, 706, -1000, 704, 701, 700, 697, 695, 694,
	693, 689, -1000, 2099, -1000, -1000, -1000, -1000, -1000, -1000,
	649, 648, 648, 648, -1000, 1069, -1000, -1000, -1000, 255,
	646, 233, 645, 644, 637, -1000, 675, 674, 673, 670,
	669, 668, 666, 664, 663, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1066, -1000, -1000, -1000, -1000, 1373, -49, 125525,
	-1000, 465, -49, -1000, -1000, 662, -1000, 37104, 37104, 37104,
	-1000, -1000, 2415, 51558, -1000, 2629, -1000, -43, -43, 925,
	62285, -1000, 59333, 925, 309, 783, 68201, -1000, 3034, -1000,
	-1000, 661, 215, -1000, -1000, -1000, -1000, 26107, 3033, 125525,
	125525, 125525, 98653, 98653, 98653, 125525, 3866, 3860, 3265, 51558,
	-1000, -1000, 75217, 137775, 99236, -1000, -1000, 3632, 73456, 74633,
	3086, 137775, 3085, 137195, 3859, -1000, -1000, -1000, -1000, -1000,
	3240, 3858, 3857, 3855, -1000, 125525, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 248, 3238, -1000, -1000, 102734, 248, 3237,
	-1000, 248, 3235, -1000, 102151, -1000, -1000, 2344, 3234, -1000,
	-1000, 254, 3233, -1000, -1000, -1000, 252, 3232, -1000, -1000,
	212, -107, 3231, -1000, -1000, -1000, -1000, -1000, -1000, 145914,
	-1000, -1000, -1000, 136610, -1000, 3407, -1000, 125525, -1000, 51558,
	-1000, -1000, 3631, 1676, 3439, 3547, -1000, -1000, -62, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2628, 2590, 1194, 2441,
	-1000, 3281, 1501, 35289, 3351, -1000, -1000, -1000, -1000, -1000,
	210, 26107, 2949, -1000, -1000, 125525, -1000, 125525, 2839, 2839,
	-1000, -1000, -1000, 3713, 3712, 2839, 2839, 125525, 125525, -1000,
	-1000, -1000, -1000, -1000, -1000, 4593, 3230, 1563, -1000, 2440,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1992,
	3229, -1000, 2159, 3228, 1990, -1000, -1000, 1750, -1000, 142325,
	1450, -1000, -1000, -1000, -1000, 2298, 3226, -39, -1000, -1000,
	2572, -1000, -1000, -1000, -1000, 142214, -1000, 3015, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1803, -1000, -1000,
	2233, 2040, -1000, 1337, 3225, -1000, 2828, 2828, 92805, 3249,
	66439, 64660, 77554, -54, -1000, -1000, -1000, -1000, -1000, -134,
	-1000, 24914, 145914, -1000, -1000, -1000, -1000, 1894, 145914, 919,
	-1000, -1000, 3223, -1000, 145914, 917, -1000, -1000, 3222, -1000,
	2699, -1000, 3084, -1000, -1000, 2525, 2523, 1026, -1000, 3853,
	-1000, -1000, 3852, -1000, 3851, 3850, 3845, -1000, 1732, 2078,
	3844, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 92222,
	2414, -1000, -1000, 88716, 3083, -1000, 2522, 3545, -1000, 91637,
	1075, -1000, 1006, 2515, -1000, 101568, 920, 2512, -1000, 3843,
	3493, 2782, 1006, 2505, -1000, -1000, -1000, -1000, -1000, 953,
	-1000, 69951, -1000, 69951, -1000, 1763, -1000, 132521, -43, 98653,
	3678, -1000, -97, -1000, -1000, -1000, 966, -1000, 63471, -1000,
	63471, 105657, 81125, 988, 3031, 72287, 145708, -1000, 1025, -1000,
	-1000, 145914, -1000, -1000, -1000, 2696, -1000, -173, 2827, -1000,
	81125, 65846, 3028, 2686, -1000, 145914, -1000, -1000, -1000, -1000,
	145914, -1000, -1000, -1000, 81125, 88716, -1000, 113244, 91052, -1000,
	-1000, 1513, 2675, -1000, -1000, -1000, 81125, 1406, 81125, 81125,
	81125, -1000, 112659, -1000, -1000, 2215, 1334, 3401, 2213, 98653,
	-1000, 2000, -1000, -1000, -1000, 3454, 3245, 125525, -1000, -1000,
	3081, -1000, 76970, 100985, -1000, 100402, -1000, 99819, -1000, 98653,
	-1000, 98653, -1000, 3842, 3840, 3838, -1000, -1000, 3836, -1000,
	3835, 3447, -1000, 740, 44370, 145914, 3416, -1000, 3830, 2092,
	3080, 145914, -1000, 3191, 1744, 1740, 125525, -1000, -1000, 125525,
	-1000, 125525, -1000, -1000, -1000, 2429, 1630, -1000, -1000, 2618,
	-1000, -1000, -1000, 1024, -1000, -1000, 98653, 98653, 98653, 98653,
	1346, -1000, 43771, -1000, -1000, 3101, 3827, 1774, -1000, 1979,
	-1000, 3027, 3412, -1000, 1499, 1898, 207, 3745, -1000, -1000,
	259, -1000, -1000, -62, -1000, 131938, -1000, 2681, -1000, 125525,
	-1000, 2615, 3070, 3078, 1787, 2403, 2716, -1000, 43172, 2641,
	55152, 2439, 133, -1000, -1000, 133, 133, 34091, -1000, -1000,
	73456, 73456, 26107, 1360, 51558, 51558, 51558, 51558, 51558, 51558,
	51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558,
	51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558,
	51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558,
	2317, 51558, 1352, 51558, 51558, 51558, 51558, 1905, -1000, -1000,
	2070, 509, 2184, 660, -1000, -1000, -1000, 3679, 3679, 3679,
	622, 622, 622, 16225, 16225, 580, 3823, 773, -1000, 51558,
	-1000, 76, 62868, 51558, 26702, -1000, 444, 10473, 2583, -1000,
	436, 27331, -1000, -1000, -1000, 28563, 577, 42543, 51558, 1044,
	145914, -1000, -1000, 1413, 3702, 24314, 3107, 2873, 658, 853,
	848, 31665, 31036, 30407, 29778, 846, 775, 51558, 51558, 51558,
	51558, 51558, 51558, 51558, 51558, -1000, -1000, 3711, -1000, 3702,
	-1000, -1000, -1000, -1000, 3702, 1357, 1326, 3702, -1000, 3702,
	3702, 6203, 6203, 41944, 41345, 40746, 55751, 40147, 51558, 29179,
	39548, 38949, -1000, 57548, 125525, -49, 3628, 51558, 330, -1000,
	143231, -1000, 330, 330, 657, -98, 145914, 2708, 2708, 61113,
	2504, 2277, 2277, 2277, -1000, 925, 18876, 925, 110910, 2291,
	925, 925, 206, 239, 434, 58740, 2629, 110910, 757, 654,
	-28, -29, -32, -1000, -1000, -33, -37, -1000, -1000, 98653,
	653, 26702, 26107, 201, 2137, -105, 2728, 2727, -1000, 2724,
	2723, -1000, 2720, 2410, -1000, -1000, -1000, 1925, -106, 1351,
	98653, 125525, 1401, 3822, -104, -1000, 10356, -111, -1000, 1169,
	193, 3702, -1000, -1000, -1000, -1000, -1000, 3821, 3820, -1000,
	1058, 652, 651, 418, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 649, 648, 648, 648, -1000, 255, 646, 233,
	645, 644, 637, -1000, -1000, -1000, -1000, -1000, 3024, 98653,
	125525, 1386, 3818, 87550, -107, 99236, -64, -1000, -1000, 125525,
	-1000, -1000, -1000, 3817, -1000, 98653, -1000, -1000, 98653, 248,
	3220, -1000, 98653, -1000, 98653, 241, 3219, -1000, -1000, 125525,
	-1000, 98653, 98653, -1000, 125525, 125525, 125525, 137775, 137775, 237,
	-1000, 98653, 875, -112, 1180, -62, -1000, -1000, -1000, -1000,
	1390, -1000, 1850, -1000, -1000, -1000, -1000, -1000, -1000, 1472,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 933, -1000,
	-1000, -1000, -1000, 3694, 3687, -51, -1000, -1000, 26107, -1000,
	1943, -1000, -1000, -1000, -1000, 125525, 125525, -1000, -1000, 125525,
	125525, -1000, -1000, -66, 1710, 540, 1349, -1000, 83457, 2501,
	3391, 3816, 2768, 3380, 1762, -1000, 1629, 628, -1000, 3532,
	89299, 3557, 3576, 1395, -1000, 3023, -1000, -1000, -1000, 957,
	1684, 1873, 1348, 1338, 89299, 2159, -1000, 73456, -1000, 2753,
	3512, 1428, 1411, 1428, 1428, 1431, -1000, 89299, 1848, 1330,
	1325, 1324, -1000, -1000, 1689, 1669, -1000, -1000, 112076, -1000,
	1323, 1318, 3581, 2335, 2284, 797, 2015, -1000, 1408, 1314,
	3018, -1000, -1000, -67, 3544, 3570, 1395, -1000, 3013, 1310,
	-1000, -1000, -1000, 3510, 98653, 26107, 1623, 1622, 1621, 1842,
	1309, -52, -1000, 3553, 1661, -1000, 88716, 88716, 107995, 125525,
	3654, 81125, -1000, 2547, -1000, -1000, -1000, 3482, 3478, -1000,
	-1000, 1307, 1306, -1000, 1073, 11338, 3324, -1000, 137775, 1073,
	1073, 1926, 3216, 2811, 1646, -1000, 2825, 856, 2821, -1000,
	-1000, -1000, 856, -54, 77554, 125525, 190, -1000, 76, 51558,
	51558, 76, 51558, 76, -1000, 3538, 3213, 3211, 3815, -1000,
	-1000, -1000, -1000, -1000, 3809, 2030, 2643, -1000, -1000, 620,
	2503, 3004, 125525, 219, -1000, 98653, 3119, 76386, 3210, 137775,
	2159, 2499, -1000, -1000, 90467, -1000, 3208, 465, 2498, -1000,
	686, 3808, 3206, -1000, 131355, -1000, 3407, 1356, 3203, 1111,
	470, 3623, -1000, 470, 70535, -1000, 125525, -1000, -43, 5279,
	82291, -114, -117, 433, -1000, 111493, 125525, 125525, 3336, 2039,
	2034, -1000, 999, 64660, -1000, 64660, -119, -1000, -173, 2820,
	1595, 64660, -1000, 988, -125, 856, -1000, 856, -1000, 98653,
	3077, -1000, -1000, 81125, 1403, 1397, 1394, -1000, -1000, -1000,
	-1000, 3804, 3803, 3802, 3801, -1000, -1000, 1005, 98653, 125525,
	98653, -1000, -1000, 1641, -1000, 186, -1000, 137775, -1000, 137775,
	125525, 98653, -1000, 1005, 125525, 1005, 125525, 1005, 125525, 1005,
	1005, -1000, -1000, -1000, -1000, -1000, 76, -1000, -1000, 145914,
	-1000, 51558, -1000, -1000, 1624, 3799, 1769, -1000, 3074, -1000,
	3072, -1000, 7, -1000, -1000, 3709, 1962, -1000, 3738, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3797, 145914, -1000,
	1984, -1000, -1000, -1000, -1000, 98653, 98653, 98653, 98653, 125525,
	3315, -1000, 125525, 3301, 98653, -1000, 3743, -1000, -1000, 89299,
	-1000, 2615, 3070, -1000, -1000, -1000, -1000, -1000, -1000, 1822,
	2364, -1000, 2669, -1000, 1651, -1000, -1000, -1000, 145914, 56350,
	-1000, -1000, 145914, 1922, -1000, 54553, 53954, -1000, -1000, 1862,
	98653, 2743, -1000, 2743, -100, -1000, 142944, 2664, 98653, -1000,
	-1000, -1000, -1000, -1000, 946, 810, 810, 1402, 1402, 1402,
	1402, 3546, 7759, 5393, 6013, 7838, 7838, 468, 468, 468,
	468, 468, 7838, 5530, 622, 622, 5530, 5530, 5530, 5530,
	5530, 622, 622, 622, 7838, 7838, 7838, 622, 16225, 146169,
	10256, 51558, 51558, 1299, 2050, 509, 10240, 51558, 1214, 1214,
	1214, 1214, -1000, 2020, -1000, -1000, -1000, -1000, 3003, 619,
	55751, 55751, -1000, -1000, -1000, -1000, 27947, 51558, -1000, -1000,
	-1000, -1000, 38320, -1000, -1000, 141913, -337, 428, -1000, 185,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 427, -93, 102, -1000, 51558, 51558, 51558,
	425, -1000, 184, 51558, 125525, -1000, 138391, 756, -120, -1000,
	-124, 1476, -1000, 51558, -1000, -1000, 1284, -1000, 1280, 1274,
	1270, -1000, 618, 424, -1000, 183, -1000, 2273, 611, 607,
	51558, -1000, -1000, -1000, -1000, -1000, 141653, -1000, -1000, 141498,
	-1000, -1000, 141238, -1000, -1000, 141032, -1000, -1000, -1000, -1000,
	-1000, 145502, 138361, 18124, 17715, 7078, 17301, 16509, -127, 420,
	-132, 412, 941, 936, 406, 403, 402, -135, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-144, 387, -1000, 3001, -93, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 385, -1000, 382, -1000, 145296, -93, 380,
	7118, -1000, 55751, 55751, 55751, 55751, 375, -1000, 142833, -1000,
	145090, 37721, 37721, 37721, 374, 144884, 51558, -93, -145, -1000,
	-151, -1000, -1000, -1000, -1000, 513, -160, 1029, 37104, 59941,
	26107, -1000, 1029, 1029, 51558, -1000, 51558, 2684, -1000, -1000,
	-1000, -1000, 2683, 2083, 2708, 61113, -1000, -1000, -1000, -1000,
	110910, -1000, 3678, 2945, -1000, 110910, -1000, -1000, 125525, 465,
	-1000, 110910, 110910, 26107, 925, -1000, 925, 110910, 630, -1000,
	-1000, -1000, -1000, -1000, 370, 71121, 102, 181, 26107, 1006,
	-1000, -1000, 2805, 2805, 2805, 2805, 2805, 98653, -1000, -1000,
	137775, 1269, -59, -74, 2815, -1000, 3650, -1000, 2124, -1000,
	73456, -1000, 772, 1064, 26107, -1000, -1000, -1000, 606, -1000,
	3702, 3702, -1000, 3702, 137775, 2996, 279, 2814, -1000, 2401,
	-57, 272, 137775, 3796, -1000, -1000, 248, -1000, 98653, 248,
	248, -1000, 98653, 98653, 2344, -1000, 254, -1000, 252, -1000,
	-1000, -107, -1000, 1023, 35289, -1000, 1390, -1000, -1000, 1653,
	-1000, 2042, -1000, 1286, -1000, -1000, 35289, -1000, 3340, -1000,
	1875, -1000, -1000, -1000, -1000, 2516, 125525, 125525, 98653, -1000,
	109161, 125525, -1000, 2230, 137775, -1000, 2497, 130772, 2468, 130189,
	73456, -1000, -1000, 605, 971, 2663, 2662, 1109, 125525, 125525,
	2658, 129606, 129023, -1000, 3791, 125525, 2122, 51558, 109161, 3509,
	2255, 3571, 76, 76, -1000, 76, -1000, -1000, 604, 1312,
	98653, 98653, 125525, 137775, 98653, 1893, -1000, -1000, -1000, -1000,
	-1000, 89882, -1000, -1000, 1428, -1000, -1000, -1000, 1428, 2159,
	1877, 125525, 137775, 98653, 137775, 128440, 2012, 127857, 2011, -1000,
	-1000, 1841, 125525, -1000, -1000, -1000, -1000, 1505, -1000, 797,
	1262, 2995, 51558, 51558, 2158, 76, 76, -1000, 76, 602,
	26107, 2033, -1000, 3056, 125525, 3737, 127274, 3736, 125525, 125525,
	125525, 137775, 3403, 125525, -1000, -125, -58, -137, -1000, 894,
	892, -134, -1000, 3654, -1000, 889, 2197, 125525, 137775, -1000,
	126691, 11338, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2128,
	78747, 1117, 125525, 1337, -1000, -1000, 1833, 1258, 1249, 89299,
	2241, 1828, 1948, 137775, 64660, 1000, 64660, 2789, -1000, -1000,
	23714, -1000, 145914, 145914, -1000, 145914, -1000, 76386, 81125, 125525,
	-1000, -1000, 1074, 125525, 82874, 968, 3198, 69367, -134, 988,
	88716, 81125, 3118, 125525, 2737, 125525, -1000, -1000, 2159, 3196,
	465, 2490, -1000, 137775, 3622, 3192, 599, 3790, 3788, -1000,
	98653, 2399, 2489, -1000, -1000, 126108, 3256, 797, 125525, 1029,
	61113, 2046, -1000, 67618, 1089, 125525, 1953, 157, -1000, -1000,
	-1000, -14, 125525, -1000, 780, -1000, -1000, 5279, 5279, 988,
	-137, 583, 65253, -165, -1000, 177, 581, 885, 883, -1000,
	2712, -1000, -173, -1000, 81125, 999, 64660, 2994, -173, 2813,
	2992, -1000, -1000, 1020, -1000, 1464, 988, -1000, 81125, -1000,
	81125, -1000, 81125, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -44, 1942, 125525, -107, -107, -71, -59, -1000, 1005,
	-1000, 1005, -1000, 1005, -1000, -1000, -1000, 145914, -1000, -1000,
	-1000, 1733, 1670, 125525, -1000, 3055, -1000, 125525, -1000, -1000,
	26107, 125525, 98653, 26107, 98653, 3046, 3045, -1000, -1000, -1000,
	125525, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1152,
	-1000, 1922, 2363, -1000, 577, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2588, -1000, -61, 34091, 918, -1000,
	-1000, 98653, -45, 51558, 51558, 9060, 6604, 51558, 55751, 55751,
	-1000, 51558, 5953, -1000, -1000, -1000, -1000, -1000, 2990, 576,
	51558, 73456, 6577, 6200, -1000, 364, 12579, 5530, -1000, 51558,
	-1000, 1091, -1000, 363, 36505, -1000, 143631, -50, -170, -1000,
	19490, -93, -171, -1000, -1000, 770, -1000, 3251, -1000, 51558,
	144600, 2542, 2162, 1947, 1781, 3702, 3735, 23114, -1000, 71704,
	1030, 2305, 140826, -1000, -1000, -1000, -1000, 73456, 73456, 51558,
	51558, -1000, 51558, 51558, 51558, -1000, -1000, -1000, 3702, 944,
	-1000, -1000, -1000, 944, -1000, -1000, 1428, -1000, 1428, -1000,
	51558, -1000, -1000, 2987, 51558, -1000, 73456, 73456, 55751, 55751,
	55751, 55751, 55751, 55751, 55751, 55751, 55751, 55751, 55751, 55751,
	55751, 55751, 55751, 55751, 55751, 55751, 55751, 55751, 2632, 55751,
	3677, 3677, 3677, 632, -1000, 3025, 2987, 51558, 51558, 73456,
	359, 355, 354, -1000, 51558, -93, -1000, -1000, 8371, 575,
	-1000, 2579, -1000, 2869, -1000, 51558, -1000, -150, -1000, 2629,
	-1000, -1000, 2869, 2869, -172, 145914, 61113, 61113, -1000, 565,
	51558, 2679, -1000, -1000, 755, -328, -1000, 882, -1000, -1000,
	-1000, -1000, -1000, -1000, 880, -1000, 465, -1000, -1000, -1000,
	176, 110910, 110910, 754, -1000, -177, -1000, -1000, -178, -1000,
	3620, 352, 26107, -1000, 1029, 2823, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2715, -279, 137775, 137775, 1825, 2342, 3734,
	-1000, 3703, 764, 749, 175, 3702, 345, 344, 340, -107,
	137775, 137775, 1824, 74049, 137775, -1000, -1000, -1000, 248, -1000,
	-1000, -1000, 241, -1000, -1000, -1000, -1000, 2749, -1000, -62,
	-1000, -1000, -1000, 51558, -1000, 977, -1000, -1000, 3389, 561,
	1244, 1242, -1000, -180, -1000, 879, -1000, -1000, -1000, -1000,
	2976, -1000, 3190, -1000, 2488, -1000, 1096, 2487, 1647, -1000,
	51558, 560, 2774, 559, 556, 3787, 2209, 3785, 1110, 3188,
	2344, 3186, 2344, -1000, -1000, -1000, 962, -1000, 145914, -185,
	-1000, 2255, -1000, 555, 543, -1000, -66, 1681, 518, 1241,
	1019, -1000, -1000, 51558, 51558, 110327, -1000, 479, 3399, -46,
	-1000, -1000, -1000, 1823, 1237, 1230, -1000, -1000, -1000, -1000,
	2159, 1817, 1229, 1226, -1000, -1000, -1000, -1000, -1000, 2485,
	-1000, 125525, -1000, 3182, 125525, 1014, -1000, 3133, 3125, 932,
	125525, 51558, 51558, 144313, 144202, -1000, 1013, -1000, -1000, 51558,
	-1000, -67, 1224, 3555, 2482, 98653, -1000, 2344, 3180, 1223,
	-1000, 1219, -1000, -1000, -1000, 3550, 3549, 1240, -1000, 107995,
	81125, 81125, 3654, 64660, -1000, -1000, -1000, 81125, -1000, -1000,
	78154, -1000, -1000, 1073, 125525, 137775, 98653, 1853, -1000, -1000,
	87550, 88133, 125525, 2811, -107, 856, -1000, 2433, 856, 1000,
	2986, -1000, 2725, -1000, 1008, 98653, 3781, 337, -187, -68,
	73456, -1000, -1000, -1000, -1000, 2468, 98653, 125525, 1322, 2772,
	125525, 125525, 3619, -1000, 2426, 603, 98653, 929, -1000, 3678,
	-1000, -1000, -1000, 125525, -1000, -1000, 1007, -1000, 3543, 98653,
	3616, 3177, 1006, 76, 98653, 3717, -1000, -1000, 3614, 98653,
	3169, 2395, 2474, 2635, 797, 81708, 1006, 2303, -77, -1000,
	1953, 35888, 3396, -190, -1000, -1000, -1000, 1029, 70535, 61113,
	51558, 3778, -192, -1000, -1000, -1000, -1000, -1000, 107995, 81125,
	988, 125525, 125525, 3777, 81125, 81125, 81125, -69, 542, -1000,
	876, 874, 870, -1000, -1000, -1000, -1000, -1000, -1000, 863,
	861, 858, 850, 999, -1000, -1000, -173, 64660, 999, 64660,
	76, -1000, 2318, 98653, -1000, 988, 988, 988, 22514, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1005, 3733, -134, -1000,
	-1000, -1000, 2161, 2438, 2161, 1933, 1931, -1000, -1000, 2320,
	-1000, -1000, -1000, -1000, 2740, 3402, 26107, 3542, 1214, 51558,
	51558, 579, 5660, 5481, 1214, 51558, 51558, 73456, 14890, -193,
	51558, 51558, -1000, 51558, 748, 145914, -1000, 3732, 51558, 336,
	331, -1000, -1000, -1000, 3700, -1000, -1000, -1000, 145914, 51558,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 329, -1000, 156,
	-1000, -1000, -1000, 134270, -1000, 51558, 316, 3503, -1000, 312,
	310, 11717, 313, 140566, 140411, 140151, 291, -1000, -1000, 290,
	288, 145914, 3025, 145914, -1000, -1000, 979, 979, 1399, 1399,
	1399, 1399, 3677, 688, 965, 333, 405, 405, 405, 600,
	632, 632, 405, 405, 405, 632, 2983, 2646, 541, 7369,
	-1000, -1000, 145914, 145914, 285, -1000, -1000, -1000, -93, 284,
	8371, -1000, 2865, 3501, 145914, -1000, 61113, 2865, 2865, -1000,
	-1000, 2083, 125525, 145914, 61113, -1000, 2945, -1000, 20708, 20102,
	-1000, 26107, -1000, -1000, -1000, -1000, 3678, -1000, 71121, -1000,
	539, -1000, 134, -1000, 2823, -1000, 841, -1000, -1000, 81125,
	81125, 2805, -1000, 2890, -279, -152, 125525, -1000, -1000, 744,
	3769, 763, 26107, 277, -1000, -1000, -1000, -107, -107, 125525,
	2978, 98653, 125525, 1381, -107, -1000, -1000, -1000, 3334, 145914,
	2982, 2858, 2854, 125525, 125525, -1000, 109161, 35289, 1532, 109744,
	125525, 3166, -1000, 3164, -1000, 1109, 2484, 139945, 61699, -1000,
	61699, 125525, -1000, -1000, -1000, -1000, 2024, 1528, 3768, 1170,
	-1000, 3465, 125525, -1000, 125525, -1000, -1000, -1000, 109161, -1000,
	125525, 125525, 98653, 125525, -1000, 137775, 3142, -198, 145914, -70,
	-1000, 839, -1000, 1404, -1000, 21914, 125525, 137775, 98653, 125525,
	137775, 98653, 3160, 1088, 125525, -1000, 2224, -1000, -1000, 3124,
	-1000, 145914, 143915, 76, 51558, 3135, -199, 26107, -1000, 3730,
	3729, 3157, 3470, -1000, 125525, 3728, 125525, 98653, 3333, -1000,
	-1000, -1000, 1003, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1796, 1218, 1217, 2394, 2390, 2340, -71, 2241, 1000, -72,
	537, -1000, 838, -1000, -1000, 836, 834, 1000, -1000, 81125,
	64660, 3767, 465, -1000, 2765, -1000, 105072, 82874, 2404, -1000,
	-1000, 536, 125525, 125525, 534, -1000, 76, -1000, 3766, 109161,
	532, -1000, 2311, -1000, 739, -1000, -1000, 2575, 137775, 2159,
	76, 98653, -1000, 992, 465, 271, -73, -1000, 3184, 1104,
	26107, 98653, 3155, 2637, 797, 81708, -1000, 1356, 2716, -1000,
	-76, -1000, 473, 76, 2303, -1000, -77, 145914, -1000, 825,
	-200, 269, -1000, 3330, -1000, -1000, -201, -1000, -1000, 2537,
	2537, 81125, 64660, 81125, 81125, 81125, 64660, 81125, -1000, 999,
	856, -1000, -173, -1000, 2526, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 26107, 1677, -1000, 531, 530, -1000,
	-1000, -1000, -1000, 3402, 1214, 1214, 51558, 51558, 51558, 1214,
	14890, -207, -1000, 1214, 1214, -93, -1000, -1000, 143631, -1000,
	-1000, -1000, 145914, -1000, 21314, 2191, -1000, 139739, -1000, 34091,
	-1000, -1000, 51558, 51558, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 55751, 2972, 529, 73456, -1000, -1000, 267, 1016,
	51558, 53355, 2629, 1016, 1016, -1000, -208, -1000, -1000, -1000,
	3678, -1000, 3678, 134, -1000, -1000, 3765, 26107, -1000, 81125,
	-1000, -1000, -1000, 2337, -1000, -1000, 3088, -158, 752, -1000,
	3764, -1000, -1000, 155, 137775, 2952, 148, 2810, -1000, 76,
	-1000, -1000, -1000, -1000, -1000, -1000, 2802, 3611, -1000, 2005,
	-1000, 125525, 125525, -1000, 125525, -1000, 26107, 125525, 2888, 1288,
	-1000, 971, 2652, 527, 55751, 1142, 98653, 886, 2851, 2849,
	-1000, 3578, 3500, 2880, -214, -1000, 125525, 51558, 125525, -215,
	-220, 2449, -1000, -1000, 1134, 1282, 51558, 1131, -1000, -1000,
	-1000, 73456, 526, 2344, 2344, -1000, -222, -223, -1000, -1000,
	-1000, 51558, 1215, 125525, 34690, -1000, 3763, 3399, -1000, -1000,
	-1000, -1000, -1000, -1000, 125525, 125525, -1000, 125525, -1000, 51558,
	-1000, 143515, 51558, 1208, -1000, -1000, -1000, 3726, 2344, 26107,
	2344, -1000, 2344, 3470, 1165, 2421, 125525, 137775, 98653, 1682,
	1682, 2951, -1000, -1000, -1000, 2600, 2600, 81125, 64660, 64660,
	-1000, -78, 1000, -1000, 3610, 2180, 3762, -1000, -1000, -1000,
	-1000, 2651, -1000, -1000, -1000, 125525, 2649, 2867, 61699, 525,
	523, 125525, 990, -1000, -225, 82874, 968, 976, -1000, -79,
	522, -1000, 817, -1000, -1000, -1000, -1000, 465, -1000, 2722,
	3599, -1000, 3722, 517, 514, 125525, 2388, 512, 26107, 3394,
	797, 81708, -1000, 3256, 1953, -1000, 2461, 125525, 3372, -1000,
	2716, 509, -1000, 988, 508, 988, -1000, -228, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 999, -80, -1000,
	866, 833, -1000, -1000, 98653, 98653, 51558, 51558, -1000, 1214,
	1214, 1214, -1000, 264, -1000, -1000, 2303, 3499, -1000, -83,
	139479, 139324, 5885, 55751, 73456, -231, -1000, -1000, 125525, 145914,
	-85, -1000, 145914, 507, 503, 384, -1000, -1000, -1000, 633,
	601, -1000, -1000, -1000, -1000, 137775, 3761, -1000, 137775, -107,
	137775, 137775, 1790, -1000, 108578, 125525, -1000, -1000, 1647, 2263,
	-1000, -1000, 125525, 2473, -1000, -1000, -1000, 1001, 51558, 7369,
	55751, 501, 51558, -1000, 500, 497, 3589, 3294, -1000, 2760,
	2930, 2074, 61699, -1000, 3402, -1000, 139064, -1000, 1101, 2021,
	-1000, -1000, -1000, -1000, 145914, 55751, 3470, 61699, -1000, -1000,
	496, 495, 145914, 489, 815, 2950, -1000, -1000, -1000, -1000,
	-134, -1000, 145914, 76, 145914, 488, 3555, -1000, -1000, -1000,
	-1000, 2344, 98653, 806, -1000, -1000, -1000, 1207, -1000, -1000,
	-1000, -1000, 3757, 3756, 2946, 87550, -1000, -233, -1000, -1000,
	-1000, 2022, 76, 968, -1000, -1000, 2404, 487, -1000, 984,
	2348, 2348, -234, 61699, 61699, -236, 2368, 2698, -1000, 262,
	3588, 976, -1000, 3683, -1000, 3288, 3288, 51558, 3585, 3329,
	-1000, 76, -1000, 3717, 61699, -1000, 98653, 61699, 2386, 2095,
	2606, 81708, -1000, 2635, -1000, -1000, -239, 125525, 1953, -1000,
	-1000, 81125, -1000, -1000, -1000, 2526, -1000, 125525, -1000, 125525,
	-1000, -1000, -242, -244, -1000, 2251, 51558, 34091, -1000, -1000,
	5885, -245, -1000, -91, -1000, 3575, 53355, 3755, 3754, 3753,
	-1000, -1000, -279, -1000, -107, -107, -107, 125525, -1000, 1993,
	-1000, 2468, -1000, -1000, 3154, -1000, 2863, 476, 138858, 7369,
	2587, 125525, 138652, 2159, 2159, -1000, 3565, 2928, -1000, -1000,
	2158, 474, -1000, -1000, -1000, -1000, 918, 125525, 984, 2818,
	98653, 7369, 1107, -252, 2161, 2161, 51558, 33492, 2222, -1000,
	51558, -1000, -1000, 3470, 64660, 137775, -1000, -1000, 137775, 2385,
	-1000, 2913, 3688, -1000, 2368, 125525, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1101, -253,
	-254, -1000, -1000, 3415, -1000, 3327, 2765, 76, -1000, -1000,
	-1000, -259, 145914, 76, 3752, 992, 251, -260, 1104, -261,
	98653, 2008, -1000, 797, -1000, 2637, 1029, 3262, -1000, -262,
	-1000, -268, -269, -1000, -1000, 244, 52756, 52756, 52756, -93,
	-100, -1000, 125525, 469, -1000, -1000, -1000, -1000, -1000, 146,
	-1000, -1000, 3117, 923, -1000, 857, 1975, 243, 1132, 240,
	220, -1000, -1000, -1000, 2880, -1000, 125525, -1000, -1000, -1000,
	923, 465, -1000, 51558, 1101, -270, -1000, 1087, -271, -1000,
	1086, -278, -1000, 2933, -1000, -280, 2344, -1000, -279, 237,
	1682, 991, 3535, -1000, -1000, -1000, 2597, -287, -1000, -1000,
	2074, 1101, 2158, 2413, -1000, 2180, 990, -1000, -1000, -1000,
	-1000, -1000, 1101, 464, 2074, 454, 1571, 797, -1000, -1000,
	1428, 3394, 3174, 1353, 988, -1000, -1000, -1000, 3165, -1000,
	56949, 2398, 1930, 142531, 3165, 3165, -1000, -1000, 137775, 125525,
	984, 3522, -1000, 902, 890, 1555, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1029, -293, -1000, 2587, 145914, 984,
	-1000, 2161, 2801, -1000, 2161, 2922, -1000, 2212, -1000, -1000,
	-1000, -1000, 2920, -1000, 1889, 3673, -1000, -1000, 984, 125525,
	2158, 2074, 984, 1923, 1915, 3749, 968, 2368, 2074, 61699,
	2158, 61699, 2143, -1000, 125525, -1000, 2095, 1344, -1000, 1735,
	-1000, -1000, 1918, 3564, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -107, -1000, -1000, 798, -1000, 3275, -1000, 1124, 2290,
	2290, -1000, -1000, 857, -1000, -1000, 452, -1000, 451, -1000,
	137775, 2300, -1000, -1000, -1000, -1000, 984, 2158, 1029, -1000,
	3748, -1000, 2368, -1000, 2158, -294, 984, -295, 2208, -1000,
	-1000, -134, 2008, -1000, 1675, 70535, 1919, -1000, -1000, 2281,
	52157, 51558, -1000, 3661, -1000, -1000, 2672, -1000, 2880, 51558,
	51558, 237, 68784, 1029, 984, -1000, -1000, 2597, 984, 1101,
	1029, 2074, -1000, 797, 1571, 70535, -276, -1000, -1000, -1000,
	145914, -1000, -1000, -1000, -1000, -296, -313, -1000, -137, 107995,
	-1000, 1029, -1000, 1029, 2074, -1000, 2158, 137775, 2143, -276,
	-1000, 2158, 1198, -319, -1000, -1000, 2158, 984, -1000, -1000,
	-1000, -1000, -1000, 449, -1000, 984, 1029, 51558, 1029, -1000,
	-320, -1000, 2158, -1000,
}

var sqlPgo = [...]int{
	0, 4566, 4565, 4564, 4563, 4562, 4559, 4558, 4555, 4554,
	4553, 4547, 4545, 4543, 4541, 157, 4539, 4536, 4535, 4533,
	4532, 4531, 4529, 4528, 4526, 4524, 4521, 4518, 4517, 4516,
	4515, 4514, 4513, 4511, 4509, 4508, 4507, 4506, 4500, 4499,
	4498, 4495, 4494, 4493, 4491, 4490, 4489, 4488, 4486, 4485,
	4484, 4483, 4482, 4481, 4480, 4479, 4477, 4476, 4475, 4474,
	4473, 4472, 4471, 4470, 4468, 4466, 4463, 4462, 4461, 4460,
	4459, 4456, 60, 4455, 4453, 4452, 4451, 4450, 4449, 4447,
	4445, 4444, 4443, 4441, 4440, 4439, 4438, 4437, 4436, 4434,
	4433, 4432, 4430, 70, 4429, 294, 4428, 4427, 4426, 4425,
	4422, 4421, 4419, 4417, 4416, 4415, 4413, 4412, 288, 4411,
	158, 167, 4406, 4403, 3953, 4399, 4398, 287, 4397, 4395,
	4392, 4391, 4390, 302, 4389, 4387, 4386, 4371, 4368, 274,
	4364, 4363, 4362, 4360, 4350, 4349, 119, 137, 4348, 4347,
	1258, 4346, 4343, 4342, 4341, 4340, 4339, 4337, 270, 273,
	4336, 4335, 4334, 265, 183, 4332, 286, 4330, 4321, 4320,
	4319, 4318, 4316, 4314, 4313, 4312, 4310, 4309, 4308, 4301,
	4300, 4298, 4295, 4292, 4287, 4286, 4284, 4282, 4281, 4280,
	4278, 4275, 4273, 4272, 4271, 4270, 4269, 4268, 4267, 4266,
	4265, 4264, 4263, 4262, 4261, 4260, 4259, 4256, 4255, 266,
	220, 122, 4253, 4249, 285, 284, 4248, 4247, 4246, 4245,
	4244, 3569, 4243, 4242, 4240, 4239, 4238, 4235, 4234, 4233,
	4232, 151, 3, 50, 4231, 4230, 105, 93, 88, 84,
	104, 102, 4229, 123, 4228, 139, 128, 4227, 120, 106,
	19, 31, 174, 262, 9432, 255, 4226, 4225, 4223, 283,
	210, 4212, 263, 4210, 4206, 4204, 4202, 4196, 4193, 77,
	57, 221, 4190, 4189, 150, 187, 200, 195, 189, 188,
	228, 61, 112, 92, 64, 49, 16, 134, 230, 22,
	5, 279, 4184, 278, 6, 155, 10, 33, 4181, 4179,
	4178, 4177, 3778, 115, 4175, 282, 256, 184, 4174, 4173,
	4170, 841, 4169, 4168, 53, 252, 125, 103, 110, 37,
	135, 4167, 169, 181, 38, 4166, 177, 72, 4165, 4164,
	113, 94, 9196, 13408, 4163, 4162, 141, 97, 172, 4519,
	163, 160, 211, 198, 180, 179, 91, 226, 225, 192,
	810, 4160, 267, 4158, 3591, 107, 196, 170, 5511, 4157,
	4156, 4155, 86, 4154, 111, 4153, 4152, 71, 20, 2,
	1, 154, 39, 34, 14, 4148, 59, 138, 54, 24,
	4147, 23, 4143, 4142, 4141, 4140, 52, 4139, 46, 178,
	4137, 4136, 301, 4135, 95, 62, 43, 4134, 45, 235,
	4133, 253, 140, 4132, 4130, 269, 213, 4129, 81, 245,
	4128, 4127, 4126, 4124, 4123, 4121, 147, 9, 142, 4120,
	4119, 161, 4117, 56, 261, 207, 4116, 65, 4115, 4114,
	190, 58, 152, 297, 194, 227, 131, 244, 197, 246,
	4111, 4110, 4109, 203, 4108, 4107, 238, 201, 4106, 4105,
	257, 303, 98, 51, 82, 259, 89, 208, 173, 4104,
	215, 4103, 4102, 298, 199, 234, 42, 7, 27, 100,
	116, 4099, 15, 250, 171, 241, 124, 4097, 7886, 2650,
	2922, 251, 4096, 164, 127, 85, 153, 162, 281, 101,
	4095, 4094, 2837, 4093, 4092, 4090, 4088, 204, 4087, 4086,
	4085, 156, 223, 231, 4084, 121, 78, 55, 32, 132,
	277, 295, 126, 242, 182, 272, 4081, 4078, 4077, 202,
	4076, 74, 136, 175, 214, 264, 63, 4074, 129, 4073,
	165, 1843, 76, 166, 4072, 237, 4071, 4070, 4068, 4066,
	4065, 4064, 4063, 1841, 249, 4062, 4061, 4059, 35, 209,
	4058, 280, 239, 193, 133, 75, 4056, 96, 4015, 4054,
	144, 222, 69, 4, 4051, 13, 4050, 2505, 67, 4049,
	0, 12813, 10186, 12432, 14070, 4048, 5858, 4046, 4045, 4044,
	232, 83, 4042, 4041, 4040, 109, 4039, 87, 4038, 4036,
	79, 4035, 25, 17, 18, 29, 26, 721, 218, 4034,
	4030, 36, 143, 148, 4029, 296, 247, 4026, 4023, 4022,
	4018, 99, 4017, 47, 4016, 44, 4014, 4012, 48, 12,
	28, 4011, 4009, 168, 4007, 114, 217, 176, 4005, 186,
	4004, 73, 146, 4001, 4000, 3997, 68, 66, 275, 219,
	224, 90, 3995, 293, 3994, 212, 3992, 3989, 21, 3987,
	3986, 258, 118, 117, 40, 260, 145, 41, 191, 236,
	3985, 3984, 185, 3983, 3982, 3981, 289, 3980, 3574, 300,
	3975, 30, 3970, 3964, 3959, 11, 3958, 3956, 216, 3305,
	3955, 3947, 8, 3944, 206,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 56, 56, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	40, 42, 41, 35, 35, 36, 36, 37, 38, 38,
	43, 44, 12, 12, 12, 8, 8, 8, 8, 8,
	8, 8, 8, 21, 21, 45, 45, 22, 22, 47,
	47, 23, 23, 48, 48, 628, 628, 628, 629, 629,
	630, 630, 630, 26, 50, 19, 20, 20, 20, 20,
	631, 631, 631, 631, 39, 27, 51, 32, 32, 32,
	32, 32, 224, 224, 224, 224, 25, 25, 46, 46,
	267, 267, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 624, 624, 269, 269, 268, 256, 256, 257,
	257, 258, 258, 632, 632, 270, 270, 270, 271, 271,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	522, 522, 522, 553, 553, 553, 553, 555, 555, 651,
	651, 652, 652, 652, 652, 652, 139, 139, 419, 419,
	419, 60, 60, 60, 60, 60, 619, 619, 226, 226,
	226, 228, 228, 227, 227, 227, 227, 227, 84, 84,
	638, 638, 637, 636, 636, 636, 639, 639, 639, 225,
	225, 225, 135, 135, 135, 135, 135, 135, 135, 135,
	136, 136, 137, 137, 229, 229, 229, 231, 231, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 235, 18, 18, 18, 118, 118, 118, 118,
	118, 118, 118, 113, 113, 557, 557, 558, 558, 220,
	220, 221, 221, 221, 221, 222, 222, 223, 223, 223,
	75, 75, 232, 232, 234, 234, 233, 233, 233, 233,
	233, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	63, 63, 63, 63, 63, 64, 64, 64, 64, 64,
	64, 65, 65, 65, 65, 65, 65, 66, 66, 73,
	73, 73, 73, 73, 73, 73, 73, 201, 201, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 81, 81, 81, 81, 81, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 653, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 654, 654, 655, 655,
	656, 656, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 90, 90,
	380, 380, 343, 343, 91, 91, 91, 92, 92, 93,
	93, 77, 77, 616, 616, 617, 617, 617, 617, 513,
	513, 78, 625, 625, 625, 627, 627, 626, 626, 95,
	95, 418, 418, 96, 96, 96, 96, 96, 96, 97,
	97, 97, 97, 97, 97, 97, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	105, 105, 105, 105, 105, 106, 106, 106, 103, 103,
	103, 100, 100, 100, 99, 99, 99, 104, 104, 104,
	615, 332, 332, 102, 102, 102, 101, 101, 101, 396,
	396, 107, 107, 107, 107, 344, 108, 108, 108, 108,
	108, 108, 108, 108, 111, 111, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 515,
	515, 4, 4, 262, 262, 261, 261, 261, 261, 5,
	5, 5, 265, 265, 264, 263, 109, 109, 109, 480,
	480, 114, 114, 114, 434, 434, 115, 115, 115, 115,
	115, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 621, 621, 389, 389, 295, 295, 295, 295,
	127, 127, 127, 127, 128, 128, 128, 128, 129, 129,
	206, 206, 145, 145, 145, 145, 144, 144, 144, 144,
	144, 144, 144, 144, 67, 67, 67, 68, 68, 69,
	69, 70, 70, 71, 71, 72, 72, 72, 72, 72,
	148, 148, 31, 31, 31, 31, 149, 149, 648, 648,
	151, 147, 147, 147, 147, 147, 146, 146, 150, 150,
	150, 150, 152, 154, 154, 154, 154, 154, 153, 153,
	153, 153, 153, 155, 155, 547, 547, 404, 404, 545,
	545, 567, 567, 546, 546, 350, 350, 350, 350, 350,
	351, 351, 351, 556, 556, 556, 556, 556, 556, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 207, 207, 207, 208, 208,
	213, 213, 214, 214, 214, 215, 215, 215, 212, 212,
	212, 209, 209, 210, 210, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 218, 218, 216, 216, 217,
	217, 659, 659, 658, 658, 219, 219, 219, 219, 219,
	182, 182, 182, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 405, 405, 185, 185, 185, 169,
	169, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 162, 162, 162, 162, 162, 162, 162, 162, 163,
	163, 163, 158, 158, 171, 171, 171, 171, 171, 164,
	164, 165, 165, 165, 166, 166, 166, 166, 193, 193,
	168, 168, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 159, 159, 159, 159, 173, 173, 173, 173, 441,
	441, 441, 199, 199, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	196, 196, 196, 196, 196, 196, 640, 640, 641, 641,
	641, 189, 189, 189, 189, 189, 189, 494, 494, 183,
	183, 183, 183, 188, 188, 188, 188, 191, 191, 191,
	191, 424, 424, 180, 180, 180, 181, 181, 181, 186,
	186, 198, 187, 381, 381, 184, 184, 190, 190, 190,
	190, 192, 192, 192, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 161, 161, 161, 161, 194, 194, 179,
	179, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 660, 660, 175, 175, 175, 174, 174, 174,
	174, 177, 177, 178, 178, 178, 178, 178, 178, 176,
	167, 197, 618, 618, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 614, 614, 614, 614, 620, 620, 119,
	119, 119, 119, 119, 119, 119, 130, 130, 130, 130,
	130, 130, 130, 133, 133, 120, 120, 120, 120, 120,
	120, 120, 123, 123, 121, 121, 121, 121, 122, 122,
	85, 85, 85, 85, 85, 17, 17, 17, 86, 86,
	286, 286, 240, 240, 240, 368, 368, 241, 241, 358,
	358, 358, 358, 236, 236, 237, 237, 238, 239, 239,
	87, 87, 661, 661, 661, 633, 633, 633, 634, 634,
	634, 634, 634, 634, 352, 352, 353, 353, 460, 460,
	460, 460, 460, 356, 356, 356, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 366, 367, 367, 359, 359,
	365, 364, 364, 363, 363, 362, 362, 360, 361, 361,
	361, 370, 370, 369, 372, 372, 371, 459, 576, 576,
	578, 578, 578, 578, 578, 578, 578, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 442, 442, 662, 662, 663, 664,
	574, 574, 574, 575, 570, 570, 571, 571, 571, 571,
	571, 354, 354, 355, 355, 355, 355, 572, 573, 387,
	387, 498, 577, 577, 579, 579, 581, 665, 665, 665,
	665, 665, 665, 666, 666, 666, 458, 458, 457, 457,
	456, 456, 378, 378, 582, 582, 582, 582, 583, 583,
	583, 583, 583, 586, 585, 584, 584, 584, 584, 584,
	89, 89, 89, 421, 421, 420, 420, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 203, 203, 298, 298, 298, 83, 83, 83,
	14, 14, 14, 14, 14, 14, 14, 313, 313, 15,
	15, 15, 635, 635, 635, 88, 88, 88, 88, 88,
	88, 376, 376, 376, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	623, 623, 622, 622, 299, 299, 668, 668, 94, 94,
	94, 94, 94, 94, 94, 94, 516, 516, 517, 517,
	82, 82, 82, 82, 82, 443, 443, 440, 440, 439,
	439, 386, 386, 496, 496, 496, 497, 303, 303, 304,
	304, 259, 259, 259, 34, 33, 24, 24, 28, 28,
	29, 29, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 30, 30, 53, 53, 53, 53, 54, 54, 54,
	54, 57, 57, 58, 58, 52, 52, 52, 52, 55,
	55, 49, 49, 59, 59, 59, 59, 59, 642, 644,
	644, 643, 643, 647, 647, 647, 647, 647, 647, 645,
	645, 646, 646, 649, 649, 650, 650, 126, 126, 131,
	131, 131, 131, 131, 132, 132, 132, 132, 134, 134,
	134, 134, 143, 143, 202, 202, 202, 202, 202, 202,
	202, 61, 61, 61, 61, 74, 74, 74, 74, 141,
	670, 670, 670, 142, 142, 142, 669, 669, 296, 296,
	453, 453, 454, 454, 671, 671, 455, 455, 455, 455,
	455, 289, 288, 290, 290, 291, 291, 80, 80, 80,
	279, 279, 278, 280, 280, 281, 281, 276, 276, 559,
	559, 283, 283, 283, 284, 284, 272, 272, 273, 273,
	274, 274, 275, 275, 287, 287, 554, 554, 672, 672,
	117, 117, 117, 205, 205, 342, 342, 342, 450, 450,
	450, 379, 379, 310, 310, 452, 452, 452, 452, 452,
	417, 417, 417, 204, 204, 394, 394, 407, 407, 408,
	408, 510, 510, 409, 124, 124, 125, 125, 140, 140,
	244, 244, 242, 242, 242, 242, 242, 242, 242, 242,
	249, 249, 250, 250, 251, 251, 252, 253, 253, 253,
	253, 397, 397, 254, 254, 254, 243, 243, 243, 245,
	245, 245, 245, 245, 245, 245, 248, 248, 248, 248,
	255, 255, 255, 247, 247, 593, 593, 593, 595, 595,
	597, 597, 596, 596, 592, 592, 594, 594, 667, 667,
	423, 423, 423, 375, 377, 373, 373, 374, 374, 384,
	384, 382, 383, 383, 385, 385, 495, 495, 495, 260,
	260, 260, 414, 414, 414, 414, 415, 415, 446, 446,
	444, 444, 444, 444, 445, 445, 447, 447, 447, 448,
	448, 449, 449, 411, 411, 412, 412, 413, 413, 413,
	413, 476, 476, 246, 246, 246, 391, 391, 391, 392,
	392, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 467, 467, 465, 465, 465, 465, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 500, 501, 501,
	393, 393, 502, 451, 451, 611, 611, 611, 612, 612,
	493, 493, 503, 503, 503, 503, 503, 503, 491, 491,
	492, 492, 511, 512, 512, 427, 427, 427, 427, 425,
	425, 428, 428, 428, 428, 428, 426, 426, 504, 504,
	504, 504, 416, 416, 505, 505, 505, 505, 506, 507,
	507, 508, 508, 461, 462, 462, 518, 518, 518, 518,
	520, 390, 390, 390, 390, 390, 569, 568, 568, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	535, 535, 535, 535, 535, 535, 535, 521, 521, 521,
	521, 521, 525, 525, 525, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 526, 526, 531, 531,
	532, 532, 532, 527, 528, 533, 533, 533, 533, 673,
	673, 537, 537, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 523, 523, 523, 530, 530, 530, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 435, 435, 437, 437, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 470, 470, 470, 470,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 587, 587, 587, 587, 587,
	587, 587, 587, 472, 472, 590, 590, 591, 591, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	598, 598, 599, 599, 601, 601, 602, 602, 603, 604,
	604, 604, 605, 606, 606, 600, 600, 607, 607, 607,
	607, 608, 608, 609, 609, 609, 609, 609, 610, 610,
	610, 610, 610, 482, 482, 483, 483, 489, 489, 489,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 349, 349, 348, 300, 300,
	300, 300, 300, 300, 402, 402, 400, 400, 400, 403,
	403, 401, 401, 399, 399, 398, 398, 479, 479, 477,
	477, 481, 481, 429, 429, 536, 536, 536, 536, 536,
	536, 536, 536, 430, 430, 430, 438, 431, 431, 432,
	432, 432, 432, 432, 473, 474, 433, 433, 433, 475,
	475, 484, 488, 488, 487, 486, 486, 485, 485, 463,
	463, 464, 464, 410, 410, 674, 674, 406, 406, 509,
	509, 509, 509, 346, 346, 395, 395, 345, 345, 337,
	337, 338, 338, 338, 338, 388, 388, 490, 490, 538,
	538, 539, 539, 540, 540, 541, 541, 542, 543, 544,
	478, 478, 321, 320, 307, 308, 319, 318, 317, 306,
	309, 314, 315, 316, 311, 312, 328, 327, 326, 277,
	282, 333, 334, 334, 336, 336, 335, 335, 323, 324,
	325, 514, 305, 339, 339, 340, 340, 340, 341, 341,
	341, 341, 301, 301, 302, 302, 329, 329, 330, 331,
	331, 322, 322, 322, 292, 292, 292, 293, 293, 294,
	294, 552, 552, 549, 549, 549, 550, 550, 550, 551,
	551, 551, 551, 548, 548, 548, 548, 548, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 561, 561, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 563, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 566, 566,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	6, 4, 4, 6, 9, 6, 8, 4, 4, 5,
	9, 7, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 6, 6, 9, 6,
	9, 6, 5, 6, 5, 1, 1, 1, 1, 1,
	1, 0, 1, 6, 6, 4, 8, 7, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	4, 4, 2, 1, 1, 3, 1, 3, 2, 4,
	3, 2, 3, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 1, 1, 1, 1, 3, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 3, 12, 3,
	1, 1, 2, 1, 4, 0, 3, 3, 0, 4,
	6, 0, 5, 7, 6, 8, 7, 9, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 5, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 4, 3, 6,
	6, 6, 6, 6, 8, 4, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 5, 3, 4, 3, 3,
	4, 3, 4, 4, 4, 3, 5, 7, 3, 3,
	4, 3, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 4, 3, 3, 3, 3, 3, 6, 4,
	4, 4, 3, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 3, 2, 1, 4, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 4, 3, 1, 2, 3, 2, 2, 2, 4,
	6, 3, 1, 2, 2, 7, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 7, 4, 7, 8, 8, 9, 11, 5, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 13,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 4, 4, 3, 4, 1, 1, 1, 1,
	5, 3, 3, 2, 2, 6, 3, 3, 3, 3,
	4, 4, 3, 1, 3, 3, 2, 2, 1, 3,
	3, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 2, 1, 2, 2, 2, 9, 2,
	1, 0, 1, 1, 0, 1, 2, 0, 2, 2,
	0, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	4, 4, 4, 3, 3, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 3, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 7, 5, 7, 5, 7,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 1,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 4, 6, 4, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 5, 3, 5, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 3, 4, 3, 4,
	3, 5, 3, 4, 4, 3, 4, 5, 3, 4,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	3, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 7, 5, 2, 0, 3, 3, 4, 3, 3,
	3, 5, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 3, 4, 5, 4, 4, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 4, 3, 4,
	4, 5, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 3, 2,
	5, 4, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 7, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 12, 15,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 1, 1, 1, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 3, 6, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	10, 11, 9, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 6, 1,
	3, 1, 2, 0, 1, 2, 3, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 3, 0,
	4, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 3, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 1, 1, 1, 8, 10, 11, 8, 11,
	5, 4, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 11,
	3, 6, 6, 5, 3, 4, 1, 0, 1, 3,
	16, 19, 15, 18, 4, 2, 0, 1, 0, 1,
	0, 1, 3, 2, 4, 2, 3, 1, 0, 2,
	0, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	5, 7, 2, 6, 7, 4, 4, 5, 2, 4,
	6, 6, 8, 6, 7, 8, 9, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 6, 8, 8, 4, 7, 3,
	0, 7, 10, 1, 1, 1, 1, 2, 2, 3,
	0, 3, 0, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 14, 16, 3,
	1, 0, 4, 1, 0, 2, 2, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 7, 10,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 631, -110, -107, -75, -73, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -60, -62, -76,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-67, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 211, 402, 450, 462, 418, 147,
	441, 423, -150, -151, 481, -61, -74, -142, -141, 76,
	134, 176, 307, 433, -6, -14, -31, -18, 30, 48,
	-63, -64, -65, -66, 65, -83, -79, -90, -84, -77,
	-78, -81, -653, 106, -594, -98, -101, -134, -657, 168,
	230, -120, -121, -122, 384, -128, -129, 443, -131, -132,
	-133, 446, 169, -69, -68, 162, -242, -244, -147, -146,
	-148, -206, -157, -158, -159, -160, -161, -163, -164, -166,
	-193, -167, -168, -169, -170, -171, -172, -176, -196, -173,
	-174, -175, -178, -177, -179, -184, -180, -181, -182, -183,
	-185, -186, -188, -189, -190, -191, -192, -194, -195, 486,
	-187, -197, -165, -198, 551, 52, 502, 85, 152, 454,
	21, -7, -8, -9, -10, -11, -12, -13, -17, -16,
	-59, -4, -5, -80, -82, -85, -86, -87, -94, -88,
	-89, -593, -99, -100, -103, -105, -106, -102, -104, 442,
	603, -245, -243, 628, 567, -162, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -45, -50, -47, -48,
	-46, -49, -51, -52, -53, -54, -55, -56, -57, -58,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -19, -20, -32, 590, 599, -248, -246, -247,
	-255, 473, 575, 524, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	-344, 2, -323, -329, -330, -331, -322, -292, -563, -566,
	4, -560, -564, 175, 240, 345, 21, 22, 24, 23,
	25, 26, 27, 28, 30, 31, 41, 43, 44, 46,
	47, 48, 49, 50, 51, 52, 56, 58, 62, 63,
	64, 65, 66, 67, 71, 76, 77, 82, 83, 84,
	85, 86, 87, 88, 89, 95, 92, 93, 94, 96,
	98, 100, 101, 102, 103, 104, 105, 107, 108, 109,
	111, 112, 113, 121, 122, 123, 124, 125, 127, 133,
	128, 134, 137, 132, 136, 138, 140, 141, 142, 145,
	146, 147, 149, 150, 151, 153, 154, 155, 157, 158,
	160, 161, 162, 165, 163, 166, 164, 167, 168, 169,
	170, 173, 181, 182, 183, 188, 190, 191, 192, 194,
	197, 198, 199, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 212, 216, 218, 219, 220, 221, 222, 223,
	229, 230, 232, 233, 234, 235, 236, 241, 242, 243,
	247, 253, 254, 258, 259, 260, 262, 266, 267, 268,
	269, 270, 271, 273, 275, 274, 277, 280, 281, 284,
	285, 286, 287, 288, 289, 293, 294, 290, 295, 296,
	298, 299, 302, 300, 303, 304, 301, 305, 308, 309,
	310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
	306, 307, 322, 320, 324, 325, 326, 327, 328, 343,
	338, 339, 340, 332, 333, 329, 334, 330, 331, 335,
	336, 342, 337, 347, 348, 349, 350, 353, 227, 246,
	355, 356, 359, 361, 378, 364, 365, 366, 369, 370,
	373, 376, 377, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 389, 390, 392, 393, 394, 396, 397, 398,
	400, 402, 403, 405, 406, 407, 409, 410, 411, 412,
	413, 414, 415, 417, 418, 420, 419, 421, 423, 425,
	426, 427, 433, 434, 441, 435, 437, 438, 439, 440,
	442, 443, 444, 445, 446, 448, 449, 450, 452, 453,
	454, 455, 456, 458, 460, 461, 465, 466, 467, 483,
	484, 505, 462, 463, 464, 468, 469, 470, 471, 472,
	476, 474, 475, 477, 478, 479, 481, 482, 485, 486,
	488, 489, 490, 491, 492, 493, 494, 497, 499, 500,
	501, 502, 503, 523, 504, 506, 510, 511, 512, 513,
	507, 508, 522, 515, 516, 517, 519, 520, 525, 526,
	527, 528, 529, 530, 532, 533, 535, 543, 544, 545,
	546, 548, 551, 552, 553, 554, 541, 556, 557, 560,
	561, 565, 562, 566, 563, 564, 567, 569, 572, 573,
	574, 580, 579, 581, 582, 583, 585, 586, 591, 592,
	594, 595, 596, 37, 53, 54, 57, 59, 61, 72,
	73, 74, 78, 129, 130, 159, 171, 172, 184, 200,
	201, 213, 215, 224, 225, 226, 248, 249, 251, 256,
	278, 352, 354, 371, 375, 391, 395, 399, 401, 416,
	457, 495, 509, 514, 536, 537, 538, 539, 547, 549,
	575, 576, 577, 584, 593, -344, 2, -323, 362, -316,
	2, -292, -292, 402, 29, 2, 29, 390, 475, 527,
	529, 2, -621, -389, 2, 29, -295, -292, 106, 211,
	473, -316, 2, -621, 211, -389, 26, 2, -292, 2,
	376, 23, 28, 69, 80, 102, 145, 170, 193, 197,
	-656, 378, 410, 460, 477, 522, 533, 548, 2, 579,
	299, 474, 524, 240, 124, 553, 468, -635, 465, 466,
	376, 408, 452, 214, 568, -296, 2, 462, -292, 299,
	2, 631, 98, 77, 457, 478, -153, 2, 289, 544,
	-154, -155, -152, 536, -547, 468, 452, 322, -292, 631,
	631, 631, 29, -305, 2, -292, -305, 2, -211, 2,
	-305, -658, -218, -217, -216, 22, 434, 183, 271, 195,
	231, 327, 405, 194, 50, -211, 2, 524, 240, 468,
	124, 520, 631, 631, 2, 524, 381, 579, 474, 124,
	413, 240, 553, 197, 145, 28, 71, 48, 530, 607,
	468, -635, 604, 605, 299, 131, -619, 2, -613, 4,
	-564, -560, -338, -337, 524, 530, 124, -331, -322, 620,
	-330, 631, 631, 631, 631, 2, 259, 260, 412, 411,
	478, 479, 29, 631, 631, 631, 631, 465, 2, 170,
	23, 28, 69, 97, 102, 131, 193, 197, 367, -654,
	378, 410, 477, 522, 526, 533, 548, -634, 504, 71,
	440, 468, -633, -635, 299, 553, 145, -439, 124, 289,
	209, 561, 529, 527, 559, 137, 247, 564, 563, 631,
	631, -111, 2, 628, 33, 32, -110, -114, 147, 481,
	-235, 524, 252, 2, -292, 631, 631, 631, 2, 259,
	260, 465, 466, 29, 631, 631, 195, -613, 520, 2,
	631, 631, 631, 2, 29, 259, 260, 465, 466, 252,
	2, 71, 470, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	2, -200, 478, 504, 220, 49, 48, 77, 29, 409,
	82, 382, 125, 131, 154, 554, 212, 240, 241, 267,
	97, 98, -441, 46, 260, 71, 259, 466, -640, 465,
	-494, 525, 469, 475, 519, 89, 271, 462, 544, 546,
	106, 569, 453, 596, 413, 414, 517, 427, 290, 163,
	196, 4, 124, 322, 452, 480, 275, 274, 536, 289,
	461, 385, 87, 631, -667, 2, 524, -669, 2, 544,
	544, 2, -669, 2, -669, 2, -669, 2, -670, 544,
	593, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, -243, -245, -244, 631, 631, 631, 631, 631, 631,
	631, -200, 478, 2, 77, 29, 29, -382, -384, 558,
	250, 156, 368, -242, -244, 2, -593, -545, 2, -468,
	-567, -470, 618, 619, 611, 521, 70, -348, 344, 597,
	-482, 131, 559, 362, -566, -471, -484, 159, 378, 457,
	-403, 8, 9, 5, 6, 7, -301, -472, -478, 550,
	174, 351, -341, 632, 10, 628, -590, -244, -483, 38,
	215, 68, -549, -340, -302, -521, 251, -339, -322, -587,
	-588, 4, -560, -561, -550, -524, -532, -528, -529, -535,
	-292, -563, 80, 115, 116, 114, 119, 118, 292, 291,
	120, 117, 480, 568, 69, 37, 224, 225, 256, 352,
	226, 78, -589, 146, -562, 248, 249, 495, 54, 416,
	184, 130, 129, 354, 59, 57, 576, -533, 126, 536,
	537, 538, 539, 200, 201, 61, 171, 172, 375, 399,
	514, 547, 549, 213, 278, 45, 110, 196, 245, 228,
	255, 257, 261, 279, 282, 323, 341, 346, 372, 374,
	451, 487, -673, 577, 509, 72, 73, 189, -595, 419,
	-596, -316, -595, 631, 631, 633, 631, -373, -375, -377,
	2, 29, 143, 628, 2, -499, 2, -500, -504, -244,
	272, -503, 628, -501, 626, -323, 363, -591, 458, -587,
	-588, -301, -322, -340, 4, -560, -562, 630, -378, 628,
	124, 468, 524, 81, 240, 97, 170, 197, -434, 628,
	-292, 29, 362, 540, 633, -374, 407, -480, 628, 362,
	365, 195, 365, 63, 303, 2, 2, 2, 2, 2,
	224, -292, 524, 123, 2, 270, 2, 2, 2, 2,
	2, 2, 2, -396, 224, 2, -323, 579, -396, 224,
	2, -396, 224, 2, -440, 2, 91, -306, 224, 2,
	-292, -332, 224, 2, -327, -329, -336, 224, 2, -334,
	-292, -555, 224, 2, -553, 4, -560, 120, 480, -468,
	2, -140, 2, 63, -292, 579, 2, 483, 2, 628,
	-153, 2, 74, 544, 45, 478, -154, 2, -454, 2,
	-455, -288, -289, -290, -511, -291, 258, 406, 415, 600,
	135, 344, 596, -648, 195, 610, 540, -545, -545, -545,
	-404, 630, -213, 56, -305, -659, -658, -659, -543, 29,
	-538, 8, -539, 618, 619, -543, -543, -659, -659, 2,
	2, 2, 2, 2, 2, -504, 224, -323, 2, -320,
	-548, 4, -560, -564, -561, -565, -563, 29, 32, 33,
	34, 36, 38, 39, 40, 42, 60, 68, 69, 75,
	79, 81, 91, 97, 106, 114, 115, 117, 116, 118,
	119, 120, 131, 135, 139, 143, 144, 148, 152, 156,
	174, 176, 189, 193, 195, 211, 214, 217, 231, 244,
	250, 252, 272, 276, 283, 291, 292, 344, 351, 357,
	362, 363, 367, 368, 388, 404, 422, 447, 473, 480,
	498, 518, 524, 534, 540, 542, 550, 558, 559, 568,
	570, 578, 587, 588, 589, 590, -566, 80, 2, -504,
	224, 2, -326, 224, -504, -329, 2, -306, 2, -468,
	-628, 532, 166, 435, 2, -345, 224, -323, -325, -329,
	-327, 2, 2, 2, 2, -468, 2, -557, 2, -552,
	10, -551, 5, 4, -560, -564, -561, -471, 2, -482,
	29, -334, 2, -553, 224, 2, 29, 29, 579, 407,
	252, 540, 633, -395, -337, -338, -544, 4, 8, -388,
	-292, 630, -468, 2, -140, -123, 2, 189, -468, 224,
	2, -140, 224, 2, -468, 224, 2, -140, 224, 2,
	-292, 2, -636, 2, -557, 224, 224, -292, 2, 303,
	2, 2, 548, 2, 102, 524, 123, 2, 439, -655,
	460, 552, 2, 2, 2, 2, 2, 2, 2, 524,
	-311, 2, -292, 189, 507, -334, 224, -335, 2, 474,
	-668, 419, -553, 224, 2, 579, -327, 224, 2, -327,
	240, 254, -306, 224, 2, 529, 527, 529, 527, 195,
	2, 252, 2, 252, 2, -505, 2, -506, -500, -507,
	626, 363, -515, 2, -514, -551, 575, -111, 628, -111,
	628, 478, 628, -557, -323, -323, -468, 2, -140, -123,
	2, -468, 2, -140, 2, -292, 2, -137, -557, -136,
	628, 195, 569, -292, 2, -468, 2, -140, -123, 2,
	-468, 2, -140, 2, -235, 189, 2, 124, 524, -200,
	2, 189, 570, 2, 8, 2, 231, -557, 469, 414,
	181, 2, 483, 2, 484, 77, -441, 596, 77, 195,
	2, 195, 2, -424, 2, 590, 407, 195, 2, 2,
	-618, 2, 362, 195, 2, 195, 2, 195, 2, 195,
	2, 195, 2, -199, 479, 545, 523, 411, 260, 2,
	-140, 587, -123, 260, 259, -468, 587, 2, -641, 189,
	466, -468, 2, 543, 269, 164, 195, -424, 2, 195,
	2, 195, 2, 5, 2, 43, 412, 505, 2, 258,
	406, 505, 2, 503, 2, -323, 524, 579, 474, 124,
	29, 2, 465, 2, 2, 92, 93, 195, 2, 195,
	2, 210, 195, 2, 195, 524, -405, 630, 596, 2,
	-416, -504, -453, -454, -453, 540, -382, -384, -200, 483,
	2, -249, -414, -251, 189, -444, -445, -252, 283, 176,
	357, -253, -423, 29, 143, -423, -423, 63, 629, 629,
	11, 12, 79, 43, 618, 619, 620, 621, 187, 622,
	623, 616, 617, 615, 608, 609, 613, 264, 265, 99,
	612, 610, 90, 297, 459, 177, 178, 179, 180, 436,
	238, 35, 239, 14, 15, 16, -348, 34, 367, 282,
	597, 228, 487, 611, 17, 18, 19, 255, 257, 346,
	53, 231, -300, 378, -347, 521, 70, -468, -468, -468,
	-468, -468, -468, -468, -468, 374, 628, -410, -463, 626,
	-244, 628, 628, 628, 628, -544, -244, -468, -482, 629,
	-401, 628, -244, -482, -477, 628, 457, 626, 628, -485,
	-468, 5, 5, 5, 628, 630, -598, 591, 189, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 401, -526, 628, -525, 628,
	-525, -525, 580, -523, 628, 599, 592, 628, -523, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 580, 530, 633, -595, -378, 628, -406, -509,
	-468, 620, -406, -406, 362, -398, -468, 110, -427, 261,
	323, 196, 279, 451, 245, -465, 632, -465, -493, 599,
	-244, -501, -322, -244, -503, 628, -499, -493, -112, -544,
	-95, -108, -117, -140, -156, -204, -205, 620, -323, 628,
	195, 628, 630, -548, 195, -388, -306, -333, -292, -323,
	-339, -340, -345, -317, -292, 2, 2, 142, -398, -613,
	553, 468, 29, 474, -555, -295, 39, -479, -518, -519,
	-569, 632, -568, -521, -531, -527, -530, 391, 395, -550,
	57, 576, -533, 251, 4, -560, -562, 248, 249, 495,
	54, 416, 184, 130, 129, 354, 59, 536, 537, 538,
	539, 200, 201, 61, 577, 509, 72, 73, -613, 553,
	468, 29, 474, 189, -555, 189, -555, 2, 2, 159,
	2, 2, 2, -292, -270, 633, 67, 444, 159, -396,
	224, -270, 159, -270, 159, -346, 224, -345, -270, 159,
	-270, 633, 159, -270, 633, 159, 630, 633, 159, -555,
	2, -440, -547, -398, 39, -454, 2, 131, 4, 5,
	-671, 633, 281, -351, 296, 343, 219, 363, 594, 355,
	135, -556, 5, 4, -478, -490, 131, 289, 251, -538,
	-540, 9, -541, 618, 619, -546, -545, 113, 630, -548,
	-214, 246, 41, -305, -305, -659, -659, 8, 8, -659,
	-659, -305, -305, -267, 437, 481, 377, -266, 25, 30,
	147, 242, 328, 573, 165, -363, 243, 442, -360, 381,
	159, 499, 562, -628, -631, 464, 532, 166, 435, 94,
	355, 481, 377, 437, 159, -420, -422, 39, 122, 328,
	376, 64, 234, 301, 302, 502, 584, 159, 481, 377,
	437, 377, -15, -281, 25, 147, -283, -278, 481, -631,
	103, 437, 603, 442, 387, 516, 404, -631, -628, 277,
	-630, 586, 342, -269, 499, 562, -628, -631, 464, 437,
	-268, -365, -360, 381, 159, 632, 25, 147, 437, 481,
	377, -651, -652, 30, -262, -261, 25, 147, 481, 565,
	-265, 231, -264, 25, -149, -129, -148, 442, 481, -149,
	2, 437, 377, -622, -313, -592, 231, 590, 159, -313,
	-313, -504, 224, -645, 189, 2, -638, -136, 273, 5,
	10, -557, -136, -395, 633, 633, -548, 620, 466, 465,
	159, 159, 159, 159, 260, 189, 344, 344, 590, 2,
	2, 2, 2, 2, 197, -633, -656, 2, 2, -323,
	224, -380, 362, -616, -617, 524, -323, 189, 344, 45,
	-326, 224, 2, -329, 579, -622, 344, -328, 224, -323,
	39, 628, 344, 2, -440, 2, 240, -592, 344, -505,
	-342, -323, -500, -342, 481, -316, 39, -465, -323, 629,
	633, -515, -515, -557, -223, 590, 195, 628, -235, 590,
	590, 260, -512, 633, -511, 231, -558, -557, -137, -557,
	440, 195, 260, -557, -616, -306, 2, -323, 2, 524,
	262, -557, -223, 231, -557, -557, -557, -547, 29, 484,
	2, -199, 479, 545, 93, 484, 2, -323, 524, 124,
	240, 83, -645, 189, 2, -292, -620, 189, -614, 452,
	468, 553, -613, -323, 124, -323, 124, -323, 124, -323,
	-323, 2, 2, 2, 2, 2, 88, 2, -140, -468,
	2, 88, 2, 48, 500, -641, 189, 2, 543, 2,
	543, 2, -292, -292, -292, 357, 504, 281, 590, -323,
	-323, -323, -324, -329, 469, 525, 554, 466, -468, 2,
	-660, 2, 195, 189, 2, 524, 240, 524, 240, 124,
	195, 77, 124, 29, 524, 463, 630, 4, -270, 633,
	-296, -249, -414, -547, -415, -414, -250, -249, -252, 189,
	415, 563, 328, 485, 266, -445, -444, 29, -468, -449,
	183, 327, -468, -447, -470, 618, 619, -539, -541, -397,
	355, -243, -243, -243, -385, -495, -468, 404, 240, -520,
	-518, -518, -321, -548, 536, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, 282, 228, 487, 53, 231, -468, 540, -468, -468,
	-468, -468, 320, 344, 351, 550, 174, 560, 143, 355,
	-674, 518, 42, -475, -244, -402, 628, -489, 36, 498,
	29, -482, 628, 2, -463, -468, -464, -349, -347, -292,
	618, 619, 620, 621, 622, 623, 608, 609, 610, 14,
	15, 16, 613, 617, 615, 616, 187, 99, 612, 297,
	459, 90, 177, 178, 179, 180, 264, 265, 17, 18,
	19, 35, 611, -399, -398, -398, 629, 578, 29, 143,
	620, 2, 629, 633, 39, 629, -468, -399, -481, -477,
	-398, -488, -487, 587, -435, -436, 595, 306, 127, 222,
	304, -437, 472, -542, 8, -548, 620, -599, 182, 214,
	628, 629, 2, 629, 2, 629, -468, 2, 629, -468,
	2, 629, -468, 2, 629, -468, 2, 629, 2, 629,
	2, -468, -468, -468, -468, -468, -468, -468, -398, 8,
	-542, -542, 536, 536, -542, -542, -542, -534, 391, 392,
	393, 394, 284, 285, 286, 287, 395, 396, 397, 398,
	312, 313, 314, 315, 308, 309, 310, 311, 316, 317,
	318, 319, 205, 206, 207, 208, 201, 202, 203, 204,
	-534, -429, 2, -536, -398, 4, 595, 306, 127, 222,
	304, 472, 5, -429, 2, -430, 2, -468, -398, -431,
	-469, -470, 618, 619, 611, -348, -432, 2, -468, -399,
	-468, 60, 276, 542, -433, -468, 195, -398, -398, 2,
	-398, 2, -471, 2, -596, 39, -398, -391, 633, 195,
	39, 4, -391, -391, 628, 629, 633, -428, 218, 300,
	295, 254, -428, -499, -427, 261, -425, 372, -425, -425,
	-493, -307, 626, 634, -548, -493, -492, -491, 39, -316,
	369, -493, -493, 630, 629, -492, 627, -611, 628, 631,
	631, 631, 631, 631, -323, 628, -398, -548, 630, 506,
	2, 629, 255, 255, 255, 255, 255, 362, 458, 629,
	540, -615, -332, -336, 525, 2, 590, -110, 364, 629,
	633, -390, 38, 626, 630, -542, 2, 2, -537, 580,
	628, 628, -436, 628, 195, -615, -336, 525, 2, -621,
	-389, -389, 540, -292, 2, -323, -396, -270, 159, -396,
	-396, -270, 633, 159, -306, -327, -332, -334, -336, -292,
	-553, -555, -270, -328, -648, 629, 544, -455, -350, 415,
	497, 438, 476, 520, 9, 9, 633, -548, -215, 467,
	328, -305, -305, -305, -305, 633, -649, 97, 540, 81,
	628, 468, -285, 290, 540, -459, 224, 81, -570, 97,
	-309, -571, -292, 75, 559, 404, 193, 157, -649, 97,
	404, -649, 97, 2, 242, 97, 481, 504, 628, 29,
	63, -504, 43, 43, 29, -629, -630, 277, 195, 596,
	524, 240, 468, 540, 540, -504, -422, -518, 122, 301,
	302, 63, -543, -543, 63, -543, -543, -543, 590, -326,
	-504, 468, 540, 540, 540, 425, 515, 425, 515, -278,
	-154, 540, 540, 29, -200, 445, 131, -672, 610, 425,
	277, -630, 540, 195, 633, 43, 43, 29, -629, 195,
	540, -345, -307, 574, 44, 574, 44, 574, 540, 44,
	468, 540, 633, 44, -261, -616, -616, -222, -221, -292,
	5, -388, -264, -557, -263, 326, 77, 540, 540, -15,
	481, -623, -297, 109, 334, 294, 335, 101, 331, 100,
	330, 107, 332, 108, 333, 581, 347, 582, 348, 66,
	329, 305, 336, 501, 337, 583, 349, -298, -299, 150,
	383, 572, 124, -553, -15, -15, 481, 377, 437, 159,
	-646, 231, 29, -635, 231, -512, 231, -512, -337, -292,
	630, -140, -468, -468, -140, -468, -140, 48, 159, 159,
	2, 2, -668, 270, 628, -354, 344, 195, -388, -513,
	633, 252, -323, 175, -613, 159, -553, -421, -420, 344,
	-328, 224, 2, 159, -378, 344, 153, 628, 413, 2,
	159, -308, 224, -293, -292, -440, -272, 528, 159, -418,
	570, -450, -140, 628, 131, 39, -450, -407, -408, -510,
	-409, -309, 628, -316, -465, -111, -514, 629, 629, 629,
	-222, 366, -235, -379, -310, -309, 123, 417, 417, -229,
	590, -136, -137, 629, 633, -512, 231, 507, -137, -557,
	-223, -223, -512, -512, -323, 189, -557, -223, 231, -223,
	231, -223, 231, 2, 2, 2, 2, -424, -323, -306,
	-345, -323, 29, 630, -555, -555, -336, -332, -424, -306,
	-424, -306, -424, -306, -424, -424, -140, -468, 504, 2,
	478, 189, 189, 630, -424, 8, -381, 447, 5, 2,
	413, 124, 524, 381, 240, -323, -345, -323, -345, -306,
	124, -306, 125, -323, 4, -504, -415, -250, 363, 266,
	485, -447, -448, -470, 457, 458, -448, 457, 458, 8,
	9, 8, 9, -254, 489, 350, -396, 633, -259, 40,
	139, 266, -323, 596, 155, -468, -468, 540, -674, 518,
	-475, 155, -468, 320, 351, 550, 174, 560, 143, 355,
	195, 628, -469, -469, 629, -400, -468, -468, 627, 636,
	629, 630, 629, -384, 633, -382, -468, -398, -398, 629,
	630, -398, -388, 627, 627, 633, 629, -486, -487, 148,
	-468, 540, 540, 540, 540, 628, 629, 630, -604, 373,
	628, 628, -468, 629, 629, 629, 629, 39, 633, 633,
	633, 629, 633, 633, 633, 629, 629, 629, 633, 629,
	596, 596, 629, 629, 629, 629, 633, 629, 633, 629,
	195, 629, 629, -438, 388, 629, 11, 12, 618, 619,
	620, 621, 187, 622, 623, 616, 617, 615, 608, 609,
	610, 90, 297, 459, 14, 15, 16, -348, 255, 231,
	-469, -469, -469, -469, 629, -473, -474, 195, 189, 39,
	-433, -433, -433, 629, 195, -398, 629, 629, 628, -597,
	299, 344, 629, -462, -461, 588, -509, -392, 2, -499,
	-318, -548, -462, -462, -398, -468, 261, 261, -426, 570,
	362, -428, -499, -492, -544, -467, -466, 191, 40, 139,
	338, 339, 340, 227, 192, -492, -316, -378, -492, -492,
	-548, -493, -493, -491, 629, -612, -544, 629, -393, -502,
	-591, -384, 630, -548, -232, -592, -201, 5, 351, -201,
	-201, -201, -201, -323, -555, 540, 540, 231, 26, 389,
	-518, 626, 627, 8, -548, 628, -542, -542, -542, -555,
	195, 195, 231, 362, 195, -553, 2, -270, -396, -270,
	-270, -345, -346, -270, -270, -270, -419, 590, -545, -454,
	557, 86, 415, 536, -545, 121, 467, -266, 437, 481,
	-309, -309, -323, -239, -238, -236, -292, 5, -333, 209,
	426, -553, 344, -459, 224, -271, 344, 224, -317, -518,
	628, -442, 592, 266, 266, 570, -309, -317, 266, 224,
	-309, 224, -317, 2, -317, -624, 415, 356, -468, -237,
	-236, 63, -361, 288, 413, 345, -267, 437, 481, 377,
	-140, -140, -140, 628, -648, 570, 142, -323, -345, -323,
	-333, -553, -328, 481, 377, 437, 341, -339, -543, -543,
	-420, 481, 377, 437, -333, -553, -326, -553, -277, 224,
	-292, 425, -277, 224, 425, 468, -306, 425, 596, 47,
	-672, 540, 195, -468, -468, -268, -140, -140, -140, 628,
	-307, -269, 437, 5, 224, -309, 5, -309, 224, 5,
	-292, -309, -333, -553, -652, 25, 147, -309, -223, 633,
	610, 610, -265, 610, -333, -553, -297, 383, -557, 351,
	566, -306, -622, -313, 468, 540, 540, -504, -642, -643,
	211, 450, 468, 453, -555, -136, -226, 590, -136, -220,
	235, 620, -619, -557, -292, 579, -292, -352, -355, -353,
	-309, -460, -459, -574, -575, -570, 282, 240, 559, 254,
	175, 97, -240, -241, 592, 590, 159, -343, -323, 626,
	-223, -617, -557, 175, -314, -292, -513, -334, -335, 159,
	-378, 344, -553, 39, 159, 628, 2, 2, -327, 362,
	344, -308, 224, -273, 149, -672, -306, -462, -392, -417,
	-452, 447, 362, -379, 575, -316, -417, -394, 633, 195,
	610, 630, -379, -508, 620, -111, -111, -223, 628, 628,
	-557, 629, 633, 630, 628, 610, 610, -231, 366, -230,
	151, 268, 253, 491, 492, 493, 494, 141, 490, 128,
	325, 236, 530, -512, -557, -229, -137, 195, -512, 231,
	195, -70, 590, 524, -223, -557, -557, -557, 632, 453,
	-292, -424, -424, -424, 478, 478, -292, 189, -388, -319,
	-548, -306, -323, -320, -345, 189, 189, -306, 563, -448,
	363, 293, -495, -260, 598, -323, 632, -468, -468, 155,
	155, -468, -469, -469, -468, 155, 195, 628, -468, -479,
	34, 34, 629, 633, -464, -468, -347, 629, 578, -384,
	-384, 629, 620, -548, 632, 629, -477, 152, -468, 534,
	306, 222, 304, -437, 304, -437, -437, -542, 5, -548,
	620, -605, -312, 628, -292, 588, -383, 368, 629, -520,
	-518, -468, -468, -468, -468, -468, -542, -523, -523, -538,
	-538, -468, -473, -468, -520, -518, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, 143, 344, 355, -469,
	-474, -473, -468, -468, -518, 629, 629, 629, -398, -110,
	628, 299, -411, 214, -468, -512, 633, -411, -411, 629,
	-499, -499, 628, -468, 261, 627, 633, 635, 610, 610,
	-378, 630, -491, -492, 627, 629, 633, 629, 633, -451,
	39, 629, -548, -462, -234, -233, 140, 56, 111, 138,
	351, 255, -644, 590, -555, -555, 468, 365, 5, 8,
	626, 627, 630, -542, 629, 629, 629, -555, -555, 468,
	-613, 553, 468, 29, -555, -270, -270, 123, 328, -468,
	-212, 590, 592, 540, 540, 629, 633, 610, 63, 231,
	159, 344, 572, 344, -571, 157, -576, -468, 628, 240,
	628, 628, 2, -256, -257, -258, 147, 481, 25, -650,
	2, 570, 159, -270, 159, -270, 594, 629, 633, -361,
	628, 628, 540, 468, -285, 540, 590, -398, -468, -224,
	131, -547, -631, 632, -631, 632, 468, 540, 540, 468,
	540, 540, 344, -292, 159, -292, 590, 173, 173, 596,
	-277, -468, -468, 189, 540, 590, -398, 540, -522, 51,
	27, 344, -327, -270, 159, 540, 540, 553, 481, -221,
	-557, -557, -136, -557, -557, 351, -15, -333, -553, -328,
	481, 377, 437, -621, -621, 211, -336, -646, -512, -228,
	366, -227, 151, 449, 141, 268, 236, -512, -226, 195,
	252, 590, -328, 2, 629, 629, 633, 633, -577, -271,
	-323, -308, 240, 240, -315, -293, 39, 359, 359, 628,
	-323, -91, 590, -511, -544, -314, -625, 590, 45, -326,
	39, 159, -622, -140, -328, -516, -517, 5, 39, -323,
	159, 362, 344, -274, 275, -672, -552, -592, -384, -417,
	-406, 345, 95, 629, -462, -408, -392, -468, 2, 629,
	-222, -557, -223, -235, -310, 2, -558, -557, -557, 633,
	628, 610, 610, 610, 610, 610, 610, 610, -229, -512,
	-136, -229, -137, -140, 366, -323, -223, -223, -223, 620,
	-424, 5, -367, -366, 381, 355, -367, 457, 457, 363,
	183, 271, -259, -307, -468, -468, 155, 34, 34, -468,
	-468, -479, 629, -468, -468, -398, 627, 5, -468, 629,
	629, 8, -468, 629, 630, -606, -292, -468, 629, 63,
	629, 629, 633, 633, 629, 629, 629, 629, 629, 629,
	629, -474, 195, 143, 355, 628, 629, 629, -110, -476,
	217, 63, -499, -476, -476, -426, -388, -499, -466, -307,
	626, -307, 626, -548, -544, -502, 628, 630, -233, 610,
	-557, -557, -201, 211, -644, -644, 590, -336, 627, 2,
	626, -548, 629, -336, 195, -615, -336, 525, 123, 189,
	221, 221, -309, -309, -238, -545, 524, 457, -277, 404,
	-459, 159, 159, -578, 97, -580, 79, 175, 106, 344,
	351, 559, 404, 75, 131, 362, 422, -662, -663, -664,
	39, 601, 602, 629, -386, -496, -591, 628, -292, -386,
	-388, 344, 512, 131, 362, 344, 131, 362, 585, 123,
	2, 553, 82, -309, -317, -236, -388, -388, -323, -333,
	-553, 167, 629, 633, 610, 2, 620, 620, -333, -553,
	-328, -333, -553, -326, 159, 575, -277, 379, 173, 540,
	-140, -468, 167, 629, -307, 5, 5, 159, -304, 79,
	-309, 5, -309, -327, 123, 590, 468, 540, 540, 362,
	362, 365, -642, -643, -226, 633, 628, 610, 610, 610,
	-226, -558, -136, 2, -378, -368, 242, -309, -575, -572,
	-573, 404, -460, -579, -581, 175, 404, -356, 628, -308,
	-293, 628, -140, 2, -239, 628, -354, 366, 627, -627,
	366, -626, 121, 141, -553, -421, -140, -328, -376, 590,
	-378, 629, 633, 153, -443, 570, -307, -323, 159, -275,
	274, -672, -552, -272, -446, -444, 144, 628, 362, -140,
	-384, 610, 629, 629, 123, 629, -230, -231, -557, -136,
	-557, -557, -557, -136, -557, -229, -512, -512, -71, -72,
	240, 97, 386, -320, 524, 240, 628, 628, -259, -468,
	-468, -468, 629, -384, -548, 620, -600, 381, 629, -495,
	-468, -468, -469, 195, 628, -479, 629, -601, 589, -468,
	-412, -413, -468, 455, 112, 215, -601, -601, 629, -544,
	-544, 2, -557, 365, 2, 540, 626, 2, 195, -555,
	195, 195, 231, -140, 231, 39, 425, -459, -317, -317,
	-321, -314, 175, 224, 351, 585, -442, 266, 628, -469,
	563, -323, 628, 2, 223, 223, 31, 63, -665, 135,
	244, 629, 633, -497, -303, -292, -468, -497, 629, 629,
	351, 563, 351, 585, -468, 563, -518, 628, -270, -270,
	629, 629, -468, 540, -547, 104, -545, 2, -631, -277,
	-388, -306, -468, 189, -468, 540, 5, -270, -321, -270,
	-270, -304, 553, 361, -333, -553, -328, -647, 525, 475,
	554, 469, 198, 456, -647, 189, -227, -228, -557, -136,
	-136, -226, 39, -362, -363, 2, -577, 266, -314, 266,
	233, 158, -386, 628, 628, -388, -661, 590, 629, -352,
	-240, -92, -93, 541, -511, 633, 628, 610, -378, 328,
	123, 39, 5, 628, 628, -292, 362, 628, -307, -287,
	96, -672, -552, -273, -417, 345, -388, 97, -446, -475,
	-223, 628, -223, 629, -229, 633, 29, 628, 29, 628,
	-323, -345, -398, -398, 629, -384, 63, 633, 629, 629,
	-469, -479, 629, -602, -603, -312, 633, 628, 628, 482,
	627, 627, -555, 2, -555, -555, -555, 468, -277, 404,
	-292, -571, -580, -314, 344, -241, 570, 590, -468, -469,
	-294, 628, -468, 628, 628, 39, 131, 244, 136, 229,
	-458, -666, 105, 513, 232, -496, -259, 629, -457, 570,
	422, -469, -304, -386, 628, 628, 628, 610, 195, -140,
	628, -522, -270, -327, 610, 540, 2, 2, 195, -621,
	629, -637, 420, -140, -240, 628, -241, -357, 84, 98,
	132, 223, 199, 241, 504, 510, 29, -357, 629, -386,
	-386, 629, -358, 362, 123, 328, 629, 39, -93, 9,
	-626, -627, -468, 39, 123, -140, -516, -386, -323, -386,
	362, -279, -278, 283, -552, -274, 629, -317, -417, -558,
	-72, -388, -388, 629, 629, -607, 413, 458, 216, -398,
	-385, 629, 633, 39, -413, 2, 2, 2, -644, -336,
	425, -271, 159, 218, 629, -582, 298, -292, 629, -421,
	-421, 39, 136, 229, -364, -360, 628, -260, -497, -241,
	218, -323, -632, 570, 629, -370, -369, -366, -372, -371,
	-366, -398, -545, 104, 379, -398, -304, -136, -555, -555,
	362, -639, 196, -638, 5, 10, -358, -387, -498, -309,
	-457, 629, 629, 85, 123, -368, -140, 629, -140, 2,
	-376, 629, 629, -443, 629, -323, -276, -559, 425, 427,
	-672, -275, -462, 144, 629, 629, 629, 629, -608, -609,
	53, 556, 113, -468, -608, -608, -603, -605, 195, 175,
	-456, 599, -583, -586, -585, 606, 488, 196, 380, 629,
	512, 584, 629, 629, -665, -388, -456, -378, -468, -457,
	629, 633, 575, 629, 633, 575, 629, 195, 629, -270,
	-644, -270, -647, -225, 590, 48, -286, -285, 629, 633,
	-458, -457, -364, 403, 137, 147, -362, -661, -457, 628,
	-458, 628, -284, -283, -672, -538, -287, 144, 345, 563,
	-223, -610, 157, -609, 400, 188, 457, 400, 188, -610,
	-610, -555, -314, -241, 58, -585, 606, -586, 606, 563,
	137, -462, 629, -582, -241, -369, 231, -371, 195, 379,
	195, 465, -638, 31, -241, -498, -364, -458, -241, 458,
	458, 2, -240, -358, -458, -386, -364, -386, -280, -281,
	-282, -388, -279, 345, 563, 481, 113, 214, 535, 328,
	34, 610, -584, 328, 444, 67, 481, -584, -583, 628,
	628, -555, 366, -241, -364, -462, 2, -358, -364, 629,
	-241, 629, -554, 377, -276, 481, -407, 457, 370, -609,
	-468, 24, 351, 131, -665, -398, -398, -270, -222, 628,
	-462, -241, -286, -241, -457, -462, -458, -672, -284, -407,
	-462, 629, 629, -222, -462, -462, -458, -364, -553, -280,
	-462, -359, -360, 540, 629, -364, -241, 628, -241, -462,
	-398, -462, 629, -359,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 586, 587, 589, 590,
	591, 593, 594, 596, 598, 600, 601, 602, 604, 605,
	607, 608, 609, 610, 611, 613, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 702, 704, 0, 1544, 1546, 1548, 1550, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	361, 363, 365, 367, 0, 399, 401, 402, 404, 406,
	407, 408, 410, -2, 0, 519, 520, 522, 524, -2,
	0, 1129, 1131, 1133, 0, 690, 692, 0, 1136, 1138,
	1140, 0, 0, 714, 715, 0, 1658, -2, 706, 708,
	710, 712, 789, 791, 793, 795, 797, 799, 801, 803,
	805, 807, 808, 810, 812, 814, 816, 818, 819, 821,
	823, 825, 826, 828, 829, 831, 833, 835, 837, 839,
	841, 843, 845, 847, 849, 851, 853, 855, 857, -2,
	860, 861, 862, 864, -2, -2, 0, -2, -2, -2,
	1562, 49, 51, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 461, 463, 465, 467, 469, 472, 474,
	476, 1716, 526, 528, 530, 532, 534, 536, 538, 0,
	0, -2, 1730, 0, 0, 949, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 125, 126, 127, 128,
	129, 130, 131, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 122, 123, 84, 0, 0, 1689, 1691, 1693,
	1695, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 33, 35, 37, 39,
	588, 592, 595, 597, 599, 603, 606, 612, 614, 616,
	571, 572, 575, 2428, 2446, 2447, 2448, 2451, 2452, 2453,
	2454, 2455, 2456, 2937, 3018, 3019, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851,
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861,
	2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871,
	2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881,
	2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891,
	2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901,
	2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911,
	2912, 2913, 2914, 2915, 2916, 573, 574, 1323, 0, 655,
	653, 2413, 656, 2723, 658, 660, 513, 514, 515, 516,
	517, 518, 0, 683, 669, 1728, 684, 686, 687, 688,
	689, 650, 648, 0, 688, 683, 2483, 681, 1542, 1543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 440, 1382, 1383, 1384, 1527, 1528, 2774, 1569, 0,
	257, 703, -2, -2, 2902, -2, 743, 744, -2, -2,
	758, 762, 753, 2906, 0, 2777, 2760, -2, 765, 1545,
	1547, 1549, 865, 866, 867, 2432, 871, 869, 881, 882,
	885, 0, 902, -2, 0, 2479, 2745, -2, -2, 903,
	904, -2, -2, -2, -2, 883, 884, 0, 0, 0,
	0, 0, 44, 46, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, -2,
	-2, -2, -2, 0, 0, 2825, 2538, 2381, 2448, 2384,
	2379, 362, 364, 366, 368, 369, 0, 0, 0, 0,
	0, 0, 0, 400, 403, 405, 409, -2, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1203, 1195, 1196, 1449, 0, 0, 0, -2, 521,
	523, 576, 577, 0, 1717, 1717, 584, 585, -2, 0,
	0, 0, 0, 332, 322, 1130, 1132, 1134, 1135, 0,
	0, 0, 0, 0, 691, 693, 0, 0, 2819, 299,
	1137, 1139, 1141, 1142, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 707, 709, 711, 713, 790, 792, 794,
	796, 798, 800, 802, 804, 806, 809, 811, 813, 815,
	817, 820, 822, 824, 827, 830, 832, 834, 836, 838,
	840, 842, 844, 846, 848, 850, 852, 854, 856, 858,
	859, 910, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 1018, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 1109, 0,
	0, 913, 916, 917, 918, 919, 920, 921, 0, 991,
	1016, 1017, 1027, 863, 0, 1363, 1718, 1571, 1552, 1566,
	1571, 1554, 1555, 1556, 1557, 1558, 1563, 1565, 1559, 1560,
	1561, 50, 52, 54, 56, 58, 60, 62, 64, 66,
	68, 70, 72, 462, 464, 466, 468, 470, 473, 475,
	477, -2, 1687, 1688, 527, 529, 531, 533, 535, 537,
	539, 694, 0, 697, 0, 915, 696, -2, 0, 1722,
	1722, 1722, 0, 0, 1688, 1686, 0, 700, 701, 769,
	770, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	2255, 2083, 0, 771, -2, 2116, 2118, 2877, 2696, 2902,
	2254, 2120, 2121, 2122, 2123, 2124, 0, 2126, 2127, 2128,
	2129, 2130, 2131, 0, 2133, 0, 2138, 2139, 2140, 0,
	2884, 2358, 2442, -2, 0, 0, 2890, 2438, 0, 2221,
	2156, -2, -2, 2465, 2444, 1927, 1928, 1929, 1930, 1931,
	-2, -2, 2920, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 0, 2865, 2885, 2886, 2891, 2893,
	2887, 2874, 2181, 2552, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1954, 1963, -2,
	-2, -2, -2, -2, -2, -2, 2878, 2879, 2896, 2899,
	2905, 2910, 2911, 2883, 2892, 2919, 2921, 2922, 2923, 2924,
	2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934,
	2935, 2936, 1955, -2, -2, -2, -2, 0, 1705, 2738,
	1708, 1323, 1706, 1690, 1692, 0, 1694, 0, 0, 0,
	1699, 1725, 1723, 0, 1774, 1703, 1704, 1797, 1797, 1821,
	0, 1802, 0, 1821, 1717, 1848, 0, 1808, 2765, 2157,
	2158, 0, 2448, 2443, -2, -2, 2917, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 0,
	657, 659, 0, 0, 0, 682, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 444, 445, 446, 447,
	2885, 0, 0, 0, 452, 0, 454, 455, 456, 457,
	458, 459, 460, 227, 2885, 544, 569, 0, 227, 2885,
	547, 227, 2885, 550, 0, 553, 1447, 227, 2885, 556,
	2409, 227, 2885, 559, 561, 2417, 227, 2885, 565, 2424,
	2422, 566, 0, 568, 247, 243, 244, 245, 246, 1538,
	1539, 1540, 1541, 0, 1568, 1448, 705, 0, 731, 0,
	741, 742, 2873, -2, 0, 2786, 746, 747, -2, 749,
	1572, 1576, 1577, 1578, 1579, 1580, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 738, 739, 756, 757, 763,
	766, 0, 874, 870, 886, 0, 901, 0, 902, 902,
	2398, 2389, 2390, 0, 0, 902, 902, 0, 0, 905,
	906, 907, 908, 909, 83, 0, 2885, 1848, 85, 0,
	2403, 2473, 2474, 2475, 2476, 2477, 2918, 2938, 2939, 2940,
	2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950,
	2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960,
	2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970,
	2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980,
	2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990,
	2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000,
	3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010,
	3011, 3012, 3013, 3014, 3015, 3016, 3017, 2920, 89, 0,
	2885, 94, 0, 2885, 0, -2, 109, 0, 124, 0,
	151, -2, -2, -2, 132, 0, 2885, 0, 2378, -2,
	0, 239, 323, 324, 325, 0, 632, 0, 641, 335,
	336, 2461, 2462, 2469, 2470, 2471, 2472, 0, 734, 2255,
	0, 0, 1167, -2, 0, 1376, 1378, 1378, 0, -2,
	0, 0, 0, 1119, 2375, 2380, 1120, 1121, 2399, 1122,
	2385, 0, 370, 371, 372, 373, 374, 0, 375, 2885,
	377, 378, 0, 380, 381, 2885, 383, 384, 0, 386,
	0, 388, 0, 279, 283, 2885, 2885, 413, 416, 0,
	418, 419, 0, 421, 0, 0, 0, 425, -2, 441,
	0, 438, 428, 429, 431, 432, 433, 434, 435, 0,
	481, 479, 2414, 0, 0, -2, 2885, 0, 1164, 0,
	0, 1427, -2, 0, 1369, 0, 1434, 2885, 1430, 0,
	-2, 0, 1715, 2885, 1589, 1199, 1200, 1201, 1202, 1860,
	510, 0, 1622, 0, 1624, 0, 1644, 1854, 1797, 0,
	0, 1859, 0, -2, 629, 2431, -2, 579, 0, 580,
	0, -2, 0, 349, 0, 0, 1145, 1147, 1148, 1150,
	1151, 1154, 1155, 1156, 1157, 0, 1159, 1834, 300, 302,
	0, 0, 0, 0, 1144, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 0, 0, 716, 0, 0, 911,
	912, 0, 0, 928, 929, 930, 0, 349, 2778, 2733,
	2574, 940, 0, 943, 946, -2, 0, 0, 0, 0,
	953, 0, 958, 959, 960, 0, -2, 0, 967, 969,
	1128, 971, 0, 0, 973, 0, 977, 0, 980, 0,
	982, 0, 984, -2, -2, -2, 992, 993, -2, 998,
	-2, 0, 1002, -2, 0, 1005, 0, 1008, -2, 0,
	1018, 1014, 1015, 0, 0, 0, 0, 1035, 1036, 0,
	1045, 0, 1048, 1049, 1050, 0, 0, 1055, 1056, 0,
	1058, 1059, 1060, 1062, 1063, 1064, 0, 2854, 2783, 2538,
	0, 1072, -2, 1078, 1080, 0, -2, 0, 1096, 0,
	1100, 0, 0, 1108, 0, 0, 914, 0, 922, 923,
	227, 1852, 1551, -2, 1553, 0, -2, 0, 695, 0,
	699, 1747, 1673, 1670, 0, 1744, 1745, 1674, 0, 0,
	0, 1681, 0, 1720, 1721, 0, 0, 0, 1660, 1661,
	0, 0, 0, 0, 2260, 2261, 2262, 2263, 2276, 2264,
	2265, 2275, 2273, 2274, 2266, 2267, 2272, 2286, 2287, 2277,
	2278, 2268, 2281, 2279, 2280, 2282, 2283, 2284, 2285, 0,
	0, 2291, 0, 2269, 2270, 2271, 2299, 0, 0, 2300,
	0, 2302, 0, 2292, 2288, 2289, 2290, 0, 2062, 2064,
	2366, 0, 0, 0, 2298, 2293, 2294, 2000, 2001, 2002,
	2003, 2004, 2037, 2041, 2042, 0, 0, 2117, 2363, 2362,
	2119, 0, 0, 2314, 0, 2132, -2, 0, 2255, 2309,
	0, 0, 2141, 2142, 2143, 0, 0, 2314, 0, 0,
	2357, 2153, 2154, 1992, 0, 0, 2223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 1940, 0, 1942, 0,
	1943, 1944, 1951, 1964, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 2338, -2, 0, 0,
	0, 0, 1956, 0, 0, 1707, 0, 0, 1778, 2367,
	2371, 2372, 1778, 1778, 0, 0, 2315, 1845, 1845, 0,
	0, 1840, 1840, 1840, 1838, 1821, 0, 1821, 1831, 0,
	1821, 1821, 0, -2, 1802, 0, 0, 1831, 0, 1815,
	617, 619, 621, 623, 624, 625, 627, 1849, 1850, 0,
	0, 0, 0, 2449, 0, 0, 0, 0, 2421, 0,
	0, 2434, 0, 0, 2408, 395, 396, 0, 0, 0,
	2836, 2777, 0, -2, 662, 685, 1717, 0, 2317, 1875,
	1879, 0, 1881, 1882, 1883, 1884, 1885, 0, 0, 1876,
	-2, 1952, 1954, 1975, 2466, 2467, 2468, 1935, 1936, 1937,
	1938, 1939, 1947, 1934, 1934, 1934, 1945, 1974, 1966, 1974,
	1970, 1920, 1921, 1922, 1957, 1958, 1959, 1960, 0, 2836,
	2777, 0, -2, 0, 672, 0, 0, 1655, 442, 0,
	449, 450, 451, 0, 540, 0, 225, 226, 0, 227,
	2885, 545, 0, 548, 0, 227, 2885, 2373, 554, 0,
	557, 0, 0, 563, 0, 0, 0, 0, 0, 227,
	1657, 0, 0, 0, 0, -2, 751, 759, 760, 761,
	0, 1574, 0, 1581, 780, 781, 782, 1583, 1584, 0,
	1586, 754, 783, 784, 785, 786, 787, 788, 0, 2387,
	2388, 2393, 2394, 0, 0, 752, 773, 755, 0, 767,
	877, 872, 873, 887, 888, 0, 0, 2391, 2392, 0,
	0, 893, 894, 133, 1524, 0, 0, 180, 0, 1524,
	1524, 0, 0, 0, 0, 208, 0, 0, 1233, 0,
	0, 0, 0, 151, 165, 176, 145, 146, 147, 0,
	0, 0, 0, 0, 0, 95, 1345, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 1361, 0, 0, 0,
	0, 0, 111, 112, 0, 0, 117, 118, 0, 164,
	0, 0, 0, 0, 0, 1619, 0, 155, 151, 0,
	0, 150, 152, 135, 0, 0, 151, 166, 178, 0,
	214, 216, 1230, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 249, 0, 631, 633, 0, 0, 0, 0,
	639, 0, 642, 0, 732, 736, 737, 0, 0, 733,
	735, 0, 0, 1370, 0, 0, 0, 1714, 0, 0,
	0, 0, 2885, 1522, 0, 1507, 0, 1834, 2625, -2,
	-2, 300, 1834, 1118, 0, 0, 2449, 2383, 0, 0,
	0, 0, 0, 0, 387, 0, 0, 0, 0, 417,
	420, 422, 423, 424, 0, 1426, 0, 430, 471, 1292,
	2885, 0, 0, 500, 493, 0, 496, 0, 0, 0,
	1344, 2885, 1342, 2418, 0, 1367, 0, 1323, 2885, 2416,
	0, 0, 0, 1435, 2458, 1444, 1448, 1607, 0, 512,
	0, 1625, 1627, 0, 0, 1855, 0, 1857, 1797, 1717,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 1158, 306, 0, 1833, 0, 0, 337, 1834, 300,
	2751, 0, 1143, 349, 349, 1834, 718, 1834, 720, 0,
	0, 931, 932, 0, 349, 349, 349, 941, 942, 944,
	945, -2, -2, -2, -2, 947, 948, 1042, 0, 0,
	0, 1041, 961, 0, 963, 966, 970, 0, 1112, 2760,
	2777, 2836, 1126, 1042, 2538, 1042, 2538, 1042, 2538, 1042,
	1042, 986, 1030, 1038, 997, 1004, 0, 999, 1003, 1006,
	1009, 0, 1011, 1019, 0, -2, 0, 1022, 0, 1024,
	0, 1026, 1042, 1043, 1046, 0, 1054, 1057, 0, 1065,
	1066, 1067, 1068, 2429, 1069, 1070, 1071, -2, 1075, 1076,
	0, 1087, 1092, 1093, 1089, 0, 0, 0, 0, 0,
	0, 1103, 1104, 0, 0, 1111, 0, 924, 1362, 0,
	1564, 1747, 1673, 698, 1664, 1746, 1665, 1672, 1675, 0,
	0, 1677, 0, 1679, 0, 1742, 1743, 1750, 1751, 0,
	1761, 1762, 1754, 0, -2, 0, 0, 1757, 1758, 1683,
	0, 1700, 1701, 1702, 1731, 1734, 1463, 0, 3018, 1996,
	1870, 1997, 1998, 2402, 0, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, -2, -2, -2, -2, -2,
	-2, -2, -2, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, -2, -2, -2, 2038, 2039, 2040,
	-2, 2301, 2303, 0, 2366, 0, -2, 0, -2, -2,
	-2, -2, 2059, 0, 2061, 2066, 2068, 2070, 0, 0,
	0, 0, 2365, 2080, 2349, 2350, 0, 0, 2257, 2258,
	2259, 2065, 0, 2084, 2364, 2361, 0, 0, 2295, 0,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 0, 2313, 1730, 2145, 0, 0, 0,
	0, 2152, 2137, 2311, 0, 2310, 0, 0, 0, 2321,
	0, 2356, 2352, 0, 2400, 1991, 1978, 1979, 1980, 1981,
	1982, 1983, 1993, 0, 2397, 2435, 2441, 2231, 0, 0,
	0, 2182, 2183, 2184, 2185, 2186, 0, 2188, 2189, 0,
	2191, 2192, 0, 2194, 2195, 0, 2197, 2198, 2199, 2200,
	2201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	0, 0, 2203, 0, 2324, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2205, 0, 2207, 2315, 2335, 0,
	0, 2085, 0, 0, 0, 0, 0, 2210, 2315, 2343,
	0, 0, 0, 0, 0, 2315, 0, 2348, 0, 2217,
	0, 2219, 950, 951, 1709, 0, 0, 1865, 0, 0,
	0, 2370, 1865, 1865, 0, 1773, 0, 0, 1841, 1842,
	1843, 1844, 0, 0, 1845, 0, 1835, 1839, 1836, 1837,
	1831, 1794, 0, 0, 2404, 1831, 1800, 1830, 0, 1323,
	1820, 1831, 1831, 0, -2, 1804, 1821, 0, 0, 618,
	620, 622, 626, 628, 0, 0, 1730, -2, 0, -2,
	351, 1322, 0, 0, 0, 0, 0, 0, 652, 654,
	0, 0, 560, 0, 0, 668, 0, 646, 0, 649,
	0, 1866, 1869, 0, 0, 1880, 1886, 1887, 0, -2,
	0, 0, 1976, 0, 0, 0, 0, 0, 680, 0,
	683, 0, 0, 0, 453, 570, 227, 542, 0, 227,
	227, 551, 0, 0, 227, 562, 227, 2425, 227, 2423,
	248, 567, 1656, 260, 0, 740, 0, 1573, 1582, 0,
	777, 0, 779, 0, 2395, 2396, 0, 768, 0, 875,
	0, 889, 890, 891, 892, 0, 0, 0, 0, 1523,
	0, 0, 1470, 0, 0, 184, 2885, 0, 229, 0,
	0, 1285, 2410, 0, 1275, 0, 0, 2560, 0, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 148, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 1347, 1349, 1356,
	1358, 0, 1352, 1353, 0, 1355, 1357, 1359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	1379, 0, 0, 1380, 1381, 1595, 1596, 0, 1618, 1619,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 2377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 349, 636, 637, 345, 342,
	344, 638, 643, 0, 644, 0, 0, 0, 0, 1372,
	0, 1422, 1420, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 0,
	0, 0, 0, -2, 1374, 1375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 340, 2376, 2386,
	0, 1152, 1153, 376, 379, 382, 385, 266, 0, 0,
	415, 426, 0, 0, 1205, 1177, 0, 0, 480, 349,
	0, 0, 495, 0, 500, 2427, 1162, 1340, 1343, 0,
	1323, 2885, 1390, 0, 0, 0, 0, 0, 0, 1433,
	0, 0, 2885, 2405, 2457, 2458, 1609, 1619, 0, 1865,
	0, 1642, 1628, 0, 0, 0, 1642, 1646, 1647, 1649,
	1650, 0, 0, 1856, 1862, 578, 630, 1717, 1717, 349,
	347, 2699, 0, 0, 1631, 1633, 0, 0, 0, 292,
	0, 303, 1834, 301, 0, 306, 0, 0, 1834, 300,
	0, 492, 717, 722, 926, 0, 349, 934, 0, 936,
	0, 938, 0, 988, 1032, 1040, 1091, 952, 954, 955,
	956, 0, 0, 0, 1127, 1123, 1124, 1125, 972, 1042,
	975, 1042, 978, 1042, 981, 983, 1001, 1007, 1020, 1013,
	1021, 0, 0, 0, 1034, 0, 1052, 0, 1061, 1074,
	0, 0, 0, 0, 0, 0, 0, 1097, 1098, 1099,
	1101, 1106, 1105, 1110, 925, 1853, 1668, 1669, 1671, 0,
	1680, 0, 0, 1756, -2, -2, 1755, 1759, 1760, -2,
	-2, -2, -2, 1676, 0, 1685, 1682, 0, 1741, 1461,
	1462, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	2081, 0, -2, 2060, 2063, 2067, 2069, 2071, 0, 0,
	0, 0, 0, 0, 2304, 0, 2306, 2082, 2359, 2362,
	2297, 0, 2253, 0, 0, 1729, 1730, 1730, 0, 2151,
	0, 2312, 0, 2319, 2320, 0, 2144, 0, 2353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2155, 0,
	0, 0, 0, 2187, 2190, 2193, 2196, 0, 0, 0,
	0, 2176, 0, 0, 0, 2180, 1946, 1932, 0, 1974,
	1972, 1973, 1967, 1974, 1971, 1924, 0, 1923, 0, 2202,
	0, 2204, 2206, 0, 0, 2208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 2089, 2090, 2110, 2209, 2341, 2342, 0, 0, 0,
	0, 0, 0, 2215, 0, 2347, 2216, 2218, 1717, 0,
	1710, 0, 1775, 1764, 1864, 0, 2368, 1834, 1777, 1779,
	2369, 2407, 1764, 1764, 0, 2316, 0, 0, 1825, 0,
	0, 0, 1827, 1798, 0, 0, 1792, 0, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1799, 1323, 1829, 1801, 1805,
	2435, 0, 1831, 0, 1816, 0, 1818, 1851, 0, 1810,
	1813, 0, 0, 2450, 1865, 0, 389, 397, 398, 390,
	391, 392, 393, 0, 1510, 0, 0, 0, 0, 0,
	2318, 0, 1871, 0, 1877, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 1654, 448, 541, 227, 546,
	549, 2374, 227, 555, 558, 564, 256, 0, 730, -2,
	775, 776, 778, 0, 774, 880, 876, 181, 1524, 0,
	0, 0, 1466, 0, 1188, 0, 1183, 1184, 1468, 1472,
	1478, 1481, 0, 186, 2885, 198, 0, 2885, 0, 1249,
	0, 0, 0, 0, 0, 0, 1526, 0, 0, 2885,
	227, 2885, 227, 202, 204, 207, 0, 213, 209, 0,
	1185, 0, 1237, 0, 0, 1240, 134, 1524, 0, 0,
	137, 141, 153, 0, 0, 0, 163, 0, 0, 0,
	1483, 1487, 1495, 0, 0, 0, 1350, 1351, 1354, 1360,
	96, 0, 0, 0, 1491, 1493, 1499, 110, 113, 2885,
	2419, 0, 115, 2885, 0, 0, 1465, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 139, 143, 154, 0,
	1501, 136, 0, 242, 0, 0, 232, 227, 2885, 0,
	234, 0, 235, 236, 250, 0, 0, 0, 635, 0,
	0, 0, 640, 0, 1165, 1166, 1421, 0, 1365, 1366,
	0, 1377, 1371, 0, 0, 0, 0, 0, 1503, 1504,
	0, 0, 0, 1522, 1519, 1834, 262, 0, 1834, 270,
	0, 2382, 0, 284, 412, 0, 0, 0, 0, 1204,
	1303, 1206, 1208, 1209, 1210, 229, 0, 2458, 1275, 2614,
	2458, 0, 0, 1172, 0, 0, 0, 486, 482, 0,
	491, 494, 499, 0, 498, 2411, 504, -2, 0, 0,
	0, 0, -2, 0, 0, 1437, 1431, 1432, 0, 0,
	0, 0, 2885, 1611, 1619, 0, 1715, 1730, 511, 1620,
	1642, 0, 0, 0, 1630, 1626, 1623, 1865, 0, 0,
	0, 0, 0, 1858, 1861, 581, 582, 326, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 304, 0, 307,
	0, 0, 0, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 0, 306, 338, 294, 1834, 0, 306, 0,
	0, 719, 0, 0, 933, 349, 349, 349, 0, 962,
	965, 974, 976, 979, 1023, 1025, 1042, 0, 1053, 1081,
	2406, 1082, 1227, 0, 1227, 0, 0, 1102, 1678, 0,
	1753, 1684, 1735, 1736, 0, 1463, 0, 1999, 2044, 0,
	0, -2, 0, 0, 2048, 0, 0, 0, -2, 0,
	0, 0, 2305, 2307, 0, 2361, 2296, 2146, 0, 0,
	0, 2150, 2134, 2135, 0, 2256, 2322, 2351, 2355, 0,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 0, 2401, 2436,
	2440, 2229, 2230, 2234, 2415, 0, 0, 0, 2159, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 1969, 0,
	0, 2323, 2334, 2336, 2086, 2087, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, -2, -2, -2, 2104,
	2105, 2106, -2, -2, -2, 2111, 0, 0, 0, 2337,
	2339, 2340, 2344, 2345, 0, 2212, 2213, 2214, 2346, 0,
	1717, 1711, 1772, 0, 1863, 1776, 0, 1772, 1772, 1724,
	1823, 0, 0, 1847, 0, 1795, 0, 1796, 0, 0,
	1828, 0, 1803, 1806, 1807, 1817, 0, 1809, 0, 1812,
	0, 2146, -2, 350, 352, 354, 0, 357, 358, 0,
	0, 0, 661, 0, 1510, 1510, 0, 663, 647, 0,
	0, 1873, 0, 0, 1949, 1953, 1977, 674, 676, 0,
	0, 2836, 2777, 0, 673, 543, 552, 258, 0, 1832,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 228, 0, 1284, 0, 1247, 0, 0, 1274,
	0, 0, 1290, 188, 189, 190, 0, 0, 0, 0,
	200, 0, 0, 196, 0, 206, 212, 211, 0, 1234,
	0, 0, 0, 0, 1471, 0, 0, 0, 160, 161,
	162, 0, 167, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 1601, 1602, 0,
	1592, 157, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 1460, 252, 0, 0, 0, 0, 0, 346,
	341, 343, 0, 1364, 1424, 1425, 1373, 1484, 1488, 1496,
	0, 0, 0, 0, 0, 688, 1521, 0, 270, 268,
	0, 271, 0, 274, 275, 0, 0, 270, 264, 0,
	0, 0, 1323, 427, 1175, 1291, 0, 0, 1293, 1211,
	1215, 0, 2458, 2458, 0, 2412, 0, 1173, 0, 0,
	1292, 478, 0, 485, 0, 497, 501, 0, 0, 1344,
	0, 0, 1368, 1393, 1323, 0, 1436, 1438, 0, 1446,
	0, 0, 0, 1613, 1619, 0, 1606, 1607, 1749, 1621,
	1640, -2, 0, 0, 1730, 1648, 1645, 1651, 1652, 0,
	0, 0, 329, 0, 1632, 1634, 0, 1146, 1149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 306,
	1834, 296, 1834, 333, 0, 927, 935, 937, 939, 957,
	1033, 1051, 1083, 1226, 0, 0, 1085, 0, 0, 1752,
	1739, 1740, 1737, 1463, 2046, 2050, 0, 0, 0, 2052,
	-2, 0, 2074, -2, -2, 2308, 2360, 2125, 1730, 2147,
	2149, 2136, 2354, 1994, 0, 2236, 2233, 0, 2220, 0,
	2171, 2172, 0, 0, 2175, 2177, 2178, 2179, 1933, 1926,
	1925, 2333, 0, 0, 0, 0, 2211, 1712, 0, 2225,
	0, 0, 1780, 2225, 2225, 1824, 0, 1826, 1793, 1781,
	0, 1790, 0, 2436, 1819, 1811, 0, 0, 355, 0,
	359, 360, 394, 0, 664, 665, 0, 0, 1867, 1872,
	0, 1878, 1948, 0, 0, 0, 0, 0, 259, 0,
	878, 879, 182, 183, 1189, 1187, 1475, 1479, 1476, 0,
	185, 0, 0, 1248, 0, 1251, 0, 0, 0, 0,
	1258, 1275, 0, 0, 0, 0, 0, 0, 1277, 0,
	1276, 0, 0, 1307, 0, 1451, 1458, 0, -2, 0,
	0, 0, 192, 218, 0, 0, 0, 0, 221, 1525,
	194, 0, 0, 227, 227, 1186, 0, 0, 1467, 1469,
	1482, 0, 0, 0, 0, 170, 0, 0, 1485, 1489,
	1497, 1492, 1494, 1500, 0, 0, 116, 0, 1603, 0,
	156, 0, 0, 0, 1502, 240, 241, 0, 227, 0,
	227, 233, 227, 1460, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 1506, 261, 0, 0, 0, 0, 0,
	263, 339, 270, 414, 0, 1236, 0, 1303, 1295, 1296,
	1297, 0, 1207, 1302, 1304, 0, 0, 1212, 0, 0,
	0, 0, 1192, 1174, 0, 1205, 1177, 0, 483, 502,
	0, 505, 0, 508, 1163, 1341, 1385, 1323, 1388, 0,
	0, 1428, 0, 0, 0, 0, 0, 0, 0, 1615,
	1619, 0, 1608, 1609, 1642, 1748, 0, 0, 0, 1629,
	1749, 0, 348, 349, 0, 349, 308, 0, 309, 310,
	311, 318, 319, 320, 321, 295, 298, 306, 721, 723,
	0, 0, 729, 1225, 0, 0, 0, 0, 1738, 2054,
	-2, -2, 2075, 0, 2437, 2439, 1730, 0, 2222, 1732,
	0, 0, -2, 0, 0, 0, 1713, 1696, 0, 1771,
	1763, 1765, 1767, 2763, 2533, 2884, 1697, 1698, 1846, 0,
	0, 1814, 356, 1509, 666, 0, 0, 1874, 0, 671,
	0, 0, 0, 868, 0, 0, 1477, 187, 0, 0,
	1252, 1253, 1255, 0, 1257, 1259, 1260, 1177, 0, 1264,
	0, 2460, 0, 1269, 1272, 1273, 0, 0, 1286, 1308,
	0, 1317, 0, 1453, 1463, 1457, 0, 1455, 1319, 0,
	191, 220, 193, 222, 217, 0, 1460, 0, 195, 205,
	0, 0, 138, 0, 0, 2527, 173, 171, 169, 114,
	120, 1464, 159, 0, 140, 0, 242, 251, 1459, 253,
	237, 227, 0, 0, 1486, 1490, 1498, 0, 1513, 1514,
	1515, 1516, 0, 0, 0, 0, 272, 0, 273, 276,
	277, 0, 0, 1177, 1235, 1176, 1294, 0, 1305, 1177,
	0, 0, 0, 0, 0, 0, 1179, 0, 1178, 0,
	0, 484, 487, 0, 490, 0, 0, 0, 0, 0,
	1392, 0, 1439, 1437, 0, 1445, 0, 0, 0, 1591,
	0, 0, 1610, 1611, 509, 1635, 0, 0, 1642, 1653,
	328, 0, 331, 305, 297, 0, 725, 0, 727, 0,
	1084, 1086, 0, 0, 2148, 2240, 0, 0, 2173, 2174,
	-2, 0, 2114, 2224, 2226, 0, 0, 0, 0, 0,
	1782, 1791, 1510, 1868, 678, 675, 677, 0, 1473, 0,
	1480, 229, 1250, 1254, 0, 1261, 0, 0, 0, 1265,
	1327, 0, 0, 1344, 1344, 1278, 0, 0, 1311, 1312,
	1232, 0, 1313, 1314, 1315, 1452, 1741, 1458, 1177, 0,
	0, 219, 224, 0, 0, 0, 0, 0, 0, 158,
	0, 231, 254, 1460, 0, 0, 1517, 1518, 0, 0,
	269, 288, 0, 1386, 1179, 0, 1306, 1213, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1214, 1319, 0,
	0, 1283, 1190, 0, 1193, 0, 1175, 0, 488, 489,
	506, 0, 507, 0, 0, 1393, 0, 0, 1446, 0,
	0, 1598, 1590, 1619, 1612, 1613, 1865, 0, 1643, 0,
	724, 0, 0, 1094, 1095, 0, 0, 0, 0, 2235,
	1733, 2115, 0, 0, 1766, 1768, 1769, 1770, 667, 0,
	1474, 199, 0, 1321, 1263, 1332, 0, 0, 0, 0,
	0, 1279, 1309, 1310, 1307, 1231, 0, 1456, 1454, 1288,
	1321, 1323, 197, 0, 1319, 0, 1241, 0, 0, 1244,
	0, 0, 174, 2527, 172, 0, 227, 645, 1510, 227,
	0, 291, 0, 282, 280, 281, 1171, 0, 1299, 1301,
	1317, 1319, 1232, 0, 1194, 1236, 1192, 503, 1387, 1391,
	1389, 1429, 1319, 0, 1317, 0, 1605, 1619, 1599, 1600,
	0, 1615, 0, 0, 349, 726, 728, 2232, 2252, 2241,
	-2, 2839, 2534, 0, 2252, 2252, 2227, 2228, 0, 0,
	1177, 0, 1266, 1328, 1329, 0, 1324, 1325, 1326, 2459,
	1267, 1268, 1270, 1271, 1865, 0, 1318, 1327, 223, 1177,
	1238, 0, 0, 1239, 0, 0, 177, 0, 179, 255,
	1508, 1511, 0, 278, 0, 0, 1168, 1170, 1177, 0,
	1232, 1317, 1177, 0, 0, 0, 1177, 1179, 1317, 0,
	1232, 0, 1594, 1604, 0, 1614, 1591, 0, 1638, 0,
	330, 2237, 0, 0, 2243, 2244, 2245, 2246, 2247, 2238,
	2239, 679, 1256, 1262, 0, 1330, 0, 1331, 0, 0,
	0, 1287, 1316, 1332, 203, 1242, 0, 1245, 0, 175,
	0, 0, 286, 287, 1298, 1300, 1177, 1232, 1865, 1180,
	0, 1182, 1179, 1191, 1232, 0, 1177, 0, 1617, 1593,
	1597, 2420, 1598, 1636, 0, 0, 0, 2249, 2250, 0,
	0, 0, 1333, 0, 1336, 1337, 0, 1334, 1307, 0,
	0, 227, 0, 1865, 1177, 1282, 1181, 1171, 1177, 1319,
	1865, 1317, 1587, 1619, 1605, 0, 1865, 2248, 2251, 2242,
	1320, 1335, 1338, 1339, 1289, 0, 0, 1512, 289, 0,
	1280, 1865, 1169, 1865, 1317, 1442, 1232, 0, 1594, 1865,
	1639, 1229, 0, 0, 1281, 1440, 1232, 1177, 1616, 1588,
	1637, 1243, 1228, 0, 290, 1177, 1865, 0, 1865, 1443,
	0, 1441, 1229, 1246,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 616, 3, 622, 617, 3,
	628, 629, 620, 618, 633, 619, 630, 621, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 636, 3,
	608, 610, 609, 613, 632, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 626, 3, 627, 623, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 634, 615, 635, 611,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 612, 57951, 614, 57952, 624, 57953, 625, 57954, 631,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1561
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1599
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1602
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1736
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1778
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1789
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1801
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1910
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1942
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1966
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1975
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1996
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2004
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2040
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2051
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2063
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2084
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2146
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2174
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2185
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2195
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2205
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2214
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2225
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2231
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2257
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2262
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2353
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2397
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2407
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2468
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = nil
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = true
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = false
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2663
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2667
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2670
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2851
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2886
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3013
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = nil
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3318
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3327
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3333
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3338
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3343
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3439
		{
			sqlVAL.union.val = nil
		}
	case 350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3451
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3465
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3575
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3647
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3668
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3669
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3673
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3678
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3697
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "CREATE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3712
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3715
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplemented(sqllex, "create access method")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "create cast")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3728
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplemented(sqllex, "create publication")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplemented(sqllex, "create rule")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplemented(sqllex, "create server")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3739
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
		}
	case 437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3743
		{
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3746
		{
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3747
		{
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3750
		{
		}
	case 441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3751
		{
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3754
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3758
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3760
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3761
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3762
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3763
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3765
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3766
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplemented(sqllex, "drop server")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3820
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3898
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3954
		{

			sqlVAL.union.val = nil
		}
	case 501:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4001
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4037
		{
			return helpWith(sqllex, "DELETE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4040
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4041
		{
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4067
		{
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			return helpWith(sqllex, "DROP")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4290
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4333
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4357
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4365
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "DELETE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "INSERT")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "DELETE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "INSERT")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4444
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4512
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4555
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4588
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4596
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4679
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4695
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4698
		{
			return helpWith(sqllex, "GRANT")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4791
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4804
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "RESET")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4852
		{
			return helpWith(sqllex, "RESET")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "USE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4882
		{
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "USE")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4950
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5014
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5022
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5142
		{
			return unimplemented(sqllex, "set from current")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5146
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5186
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = tree.Low
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = tree.Normal
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = tree.High
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5320
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5326
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5342
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5343
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5350
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = true
		}
	case 871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = false
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = true
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = false
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = false
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5463
		{
			return helpWith(sqllex, "FETCH")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "MOVE")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5515
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = int64(1)
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = int64(-1)
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = int64(1)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = int64(1)
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = int64(-1)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5570
		{
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5571
		{
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5574
		{
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5575
		{
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5584
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5589
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5599
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.str = "client_encoding"
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.str = "timezone"
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5633
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5661
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5665
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5684
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				InCollection:         sqlDollar[6].union.expr(),
				Options:              sqlDollar[7].union.kvOptions(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5734
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5743
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupRangeDetails,
				Path:         sqlDollar[4].union.expr(),
				InCollection: sqlDollar[6].union.expr(),
				Options:      sqlDollar[7].union.kvOptions(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5753
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5762
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupFileDetails,
				Path:         sqlDollar[4].union.expr(),
				InCollection: sqlDollar[6].union.expr(),
				Options:      sqlDollar[7].union.kvOptions(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5771
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5793
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5808
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5833
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5856
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5867
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5883
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5913
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5936
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5944
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5955
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5965
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5968
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5977
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5988
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5993
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6004
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6009
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = true
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = true
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = false
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6045
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6046
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6047
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6064
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6090
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6091
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6107
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6123
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6159
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6164
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6166
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6170
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = true
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = false
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6185
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6190
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6221
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6231
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6233
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6236
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = true
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = false
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6275
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6283
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6293
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6304
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6318
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6326
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6331
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6340
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6354
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6370
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6375
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6380
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6385
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6414
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6419
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6430
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6459
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6467
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6488
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6493
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6498
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6502
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6511
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6534
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6546
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6605
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6615
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6761
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6804
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6815
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6874
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6875
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6876
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6886
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6888
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6889
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6900
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6928
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6981
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6992
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7056
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7092
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7107
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{

			sqlVAL.union.val = nil
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.str = ""
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7151
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = nil
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7174
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7178
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7214
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7227
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7241
		{
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7242
		{
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7324
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7341
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7342
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.str = ""
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7480
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7587
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7632
		{

			sqlVAL.union.val = true
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = false
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7646
		{
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7649
		{
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7746
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7757
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7774
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7784
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7799
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7867
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7869
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7870
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7871
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7954
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8039
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8048
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8056
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8067
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8080
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8090
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8092
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8094
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8096
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8099
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8102
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8104
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8117
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8121
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8148
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8182
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.str = ""
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = true
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8216
		{

			sqlVAL.union.val = true
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = false
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8231
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8245
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8257
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8269
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8279
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8289
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8293
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = true
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = true
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = nil
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8436
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8437
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8462
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8464
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8466
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8468
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8470
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8472
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8507
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8524
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8542
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8558
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8574
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = false
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = true
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = false
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = true
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = false
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8632
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8638
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8644
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8652
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.str = ""
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.str = ""
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8711
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8717
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8942
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8948
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8960
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8966
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8980
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8986
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9045
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = true
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = false
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = tree.Types
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9105
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9109
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9134
		{
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9138
		{
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9149
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9226
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9234
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9251
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9270
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9275
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9288
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9302
		{
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9304
		{
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9321
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9324
		{
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9325
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9353
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9366
		{
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9368
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9372
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9462
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.str = ""
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9485
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9490
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9507
		{

		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9522
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.str = ""
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.str = ""
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.str = ""
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.str = ""
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9577
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9602
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9603
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9654
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9663
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9712
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9757
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9795
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9827
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9848
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9863
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10007
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10042
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10043
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10044
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10105
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10149
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10165
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = true
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = false
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10219
		{
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = nil
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10233
		{
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = true
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = false
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = false
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = true
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10263
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10267
		{
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10320
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10325
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10351
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10384
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10444
		{
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10480
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10510
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10512
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10527
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10549
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10596
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10627
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10669
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10679
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10714
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10725
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10755
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10788
		{
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10790
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = nil
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = true
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = false
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.str = tree.AstFull
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.str = tree.AstRight
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.str = tree.AstInner
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10907
		{
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10908
		{
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.str = tree.AstHash
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.str = ""
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10977
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11000
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11006
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11012
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11022
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = true
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = false
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = true
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = false
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11071
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11084
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11092
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11093
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11111
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11113
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11121
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11134
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11141
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11150
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11190
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11202
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11203
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = types.Geography
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11252
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11260
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11286
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11294
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = nil
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = types.Int2
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = types.Int
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = types.Float4
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = types.Float
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11337
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11345
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11353
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = types.Bool
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11367
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = types.Float
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11386
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11392
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11414
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = types.String
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = true
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = false
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = types.Date
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11463
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11471
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11485
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11494
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11502
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11519
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = true
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = false
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = false
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = types.Interval
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11543
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11627
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11642
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = nil
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11672
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11732
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11881
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11889
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12076
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12098
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12206
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12214
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12310
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12315
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12341
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12365
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12399
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12410
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12411
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12426
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12435
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12501
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12522
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12604
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12626
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12631
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12640
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12649
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12658
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12667
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12672
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12677
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12682
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12687
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12692
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12701
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12702
		{
			return unimplemented(sqllex, "treat")
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12723
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12728
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12765
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12775
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12783
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12798
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12818
		{
			sqlVAL.str = ""
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12864
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12877
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12933
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12945
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12974
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12990
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13018
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13019
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13020
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13024
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13028
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13032
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13035
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13036
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13039
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13040
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13044
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13050
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13142
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13165
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13222
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13226
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13236
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13247
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13272
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13276
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13280
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13286
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13292
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13298
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13306
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13324
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13331
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13351
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13358
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13375
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13381
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13390
		{
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13391
		{
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13395
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13399
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13405
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13414
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13418
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13430
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13440
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13444
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13463
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13471
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13494
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13503
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13507
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13511
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13515
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13521
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13540
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13544
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13556
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13560
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13569
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13580
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13589
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13597
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13614
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13699
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13707
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13711
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13717
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13729
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13756
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13763
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13767
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13771
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13785
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13789
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13793
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13806
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13815
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13833
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13846
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13853
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13878
		{
			sqlVAL.str = ""
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13884
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13888
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
